circuit system :
  extmodule iCacheRegisters :
    input address : UInt<32>
    output instruction : UInt<32>
    output tag : UInt<20>
    output tag_valid : UInt<1>
    input write_line_index : UInt<6>
    input write_block : UInt<512>
    input write_tag : UInt<20>
    input write_in : UInt<1>
    input invalidate_all : UInt<1>
    input clock : Clock
    input reset : Reset
    defname = iCacheRegisters
    parameter offset_width  = 4
    parameter line_width = 6

  module iCache :
    input clock : Clock
    input reset : Reset
    output fromFetch : { flip req : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<64>}, resp : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<32>}}
    output updateAllCachelines : { ready : UInt<1>, flip fired : UInt<1>}
    output cachelinesUpdatesResp : { ready : UInt<1>, flip fired : UInt<1>}
    output lowLevelMem : { AWID : UInt<2>, AWADDR : UInt<32>, AWLEN : UInt<8>, AWSIZE : UInt<3>, AWBURST : UInt<2>, AWLOCK : UInt<1>, AWCACHE : UInt<4>, AWPROT : UInt<3>, AWQOS : UInt<4>, AWVALID : UInt<1>, flip AWREADY : UInt<1>, WDATA : UInt<64>, WSTRB : UInt<8>, WLAST : UInt<1>, WVALID : UInt<1>, flip WREADY : UInt<1>, flip BID : UInt<2>, flip BRESP : UInt<2>, flip BVALID : UInt<1>, BREADY : UInt<1>, ARID : UInt<2>, ARADDR : UInt<32>, ARLEN : UInt<8>, ARSIZE : UInt<3>, ARBURST : UInt<2>, ARLOCK : UInt<1>, ARCACHE : UInt<4>, ARPROT : UInt<3>, ARQOS : UInt<4>, ARVALID : UInt<1>, flip ARREADY : UInt<1>, flip RID : UInt<2>, flip RDATA : UInt<64>, flip RLAST : UInt<1>, flip RVALID : UInt<1>, RREADY : UInt<1>, AWDOMAIN : UInt<2>, AWSNOOP : UInt<3>, AWBAR : UInt<2>, ARDOMAIN : UInt<2>, ARSNOOP : UInt<4>, ARBAR : UInt<2>, flip RRESP : UInt<4>, flip ACVALID : UInt<1>, ACREADY : UInt<1>, flip ACADDR : UInt<32>, flip ACSNOOP : UInt<4>, flip ACPROT : UInt<3>, CRVALID : UInt<1>, flip CRREADY : UInt<1>, CRRESP : UInt<5>, CDVALID : UInt<1>, flip CDREADY : UInt<1>, CDDATA : UInt<64>, CDLAST : UInt<1>}

    reg commitFence : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[ICache.scala 65:28]
    reg pendingInvalidate : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[ICache.scala 67:34]
    wire _requests_WIRE : { valid : UInt<1>, address : UInt<64>}
    _requests_WIRE.address <= UInt<1>("h0")
    _requests_WIRE.valid <= UInt<1>("h0")
    reg requests_REG : { valid : UInt<1>, address : UInt<64>}, clock with :
      reset => (reset, _requests_WIRE) @[ICache.scala 72:53]
    wire _requests_WIRE_1 : { valid : UInt<1>, address : UInt<64>}
    _requests_WIRE_1.address <= UInt<1>("h0")
    _requests_WIRE_1.valid <= UInt<1>("h0")
    reg requests_REG_1 : { valid : UInt<1>, address : UInt<64>}, clock with :
      reset => (reset, _requests_WIRE_1) @[ICache.scala 72:53]
    wire _requests_WIRE_2 : { valid : UInt<1>, address : UInt<64>}
    _requests_WIRE_2.address <= UInt<1>("h0")
    _requests_WIRE_2.valid <= UInt<1>("h0")
    reg requests_REG_2 : { valid : UInt<1>, address : UInt<64>}, clock with :
      reset => (reset, _requests_WIRE_2) @[ICache.scala 72:53]
    wire _requests_WIRE_3 : { valid : UInt<1>, address : UInt<64>}[3] @[ICache.scala 72:33]
    _requests_WIRE_3[0] <= requests_REG @[ICache.scala 72:33]
    _requests_WIRE_3[1] <= requests_REG_1 @[ICache.scala 72:33]
    _requests_WIRE_3[2] <= requests_REG_2 @[ICache.scala 72:33]
    reg requests : { valid : UInt<1>, address : UInt<64>}[3], clock with :
      reset => (reset, _requests_WIRE_3) @[ICache.scala 72:25]
    inst cache of iCacheRegisters @[ICache.scala 80:21]
    cache.reset is invalid
    cache.clock is invalid
    cache.invalidate_all is invalid
    cache.write_in is invalid
    cache.write_tag is invalid
    cache.write_block is invalid
    cache.write_line_index is invalid
    cache.tag_valid is invalid
    cache.tag is invalid
    cache.instruction is invalid
    cache.address is invalid
    wire _results_WIRE : { valid : UInt<1>, address : UInt<64>, instruction : UInt<32>, tag : UInt<20>, tagValid : UInt<1>}
    _results_WIRE.tagValid <= UInt<1>("h0")
    _results_WIRE.tag <= UInt<1>("h0")
    _results_WIRE.instruction <= UInt<1>("h0")
    _results_WIRE.address <= UInt<1>("h0")
    _results_WIRE.valid <= UInt<1>("h0")
    reg results_REG : { valid : UInt<1>, address : UInt<64>, instruction : UInt<32>, tag : UInt<20>, tagValid : UInt<1>}, clock with :
      reset => (reset, _results_WIRE) @[ICache.scala 82:52]
    wire _results_WIRE_1 : { valid : UInt<1>, address : UInt<64>, instruction : UInt<32>, tag : UInt<20>, tagValid : UInt<1>}
    _results_WIRE_1.tagValid <= UInt<1>("h0")
    _results_WIRE_1.tag <= UInt<1>("h0")
    _results_WIRE_1.instruction <= UInt<1>("h0")
    _results_WIRE_1.address <= UInt<1>("h0")
    _results_WIRE_1.valid <= UInt<1>("h0")
    reg results_REG_1 : { valid : UInt<1>, address : UInt<64>, instruction : UInt<32>, tag : UInt<20>, tagValid : UInt<1>}, clock with :
      reset => (reset, _results_WIRE_1) @[ICache.scala 82:52]
    wire _results_WIRE_2 : { valid : UInt<1>, address : UInt<64>, instruction : UInt<32>, tag : UInt<20>, tagValid : UInt<1>}[2] @[ICache.scala 82:32]
    _results_WIRE_2[0] <= results_REG @[ICache.scala 82:32]
    _results_WIRE_2[1] <= results_REG_1 @[ICache.scala 82:32]
    reg results : { valid : UInt<1>, address : UInt<64>, instruction : UInt<32>, tag : UInt<20>, tagValid : UInt<1>}[2], clock with :
      reset => (reset, _results_WIRE_2) @[ICache.scala 82:24]
    wire _cacheFill_WIRE : { valid : UInt<1>, block : UInt<512>}
    _cacheFill_WIRE.block <= UInt<1>("h0")
    _cacheFill_WIRE.valid <= UInt<1>("h0")
    reg cacheFill : { valid : UInt<1>, block : UInt<512>}, clock with :
      reset => (reset, _cacheFill_WIRE) @[ICache.scala 96:26]
    node _cacheMissed_T = shr(results[UInt<1>("h0")].address, 12) @[ICache.scala 103:72]
    node _cacheMissed_T_1 = eq(_cacheMissed_T, results[UInt<1>("h0")].tag) @[ICache.scala 103:96]
    node _cacheMissed_T_2 = and(results[UInt<1>("h0")].tagValid, _cacheMissed_T_1) @[ICache.scala 103:46]
    node _cacheMissed_T_3 = eq(_cacheMissed_T_2, UInt<1>("h0")) @[ICache.scala 103:21]
    node cacheMissed = and(_cacheMissed_T_3, results[UInt<1>("h0")].valid) @[ICache.scala 103:119]
    reg arvalid : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[ICache.scala 104:33]
    reg rready : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[ICache.scala 104:33]
    node _T = and(lowLevelMem.RREADY, lowLevelMem.RVALID) @[ICache.scala 106:27]
    when _T : @[ICache.scala 106:50]
      node _cacheFill_block_T = bits(cacheFill.block, 511, 64) @[ICache.scala 106:109]
      node _cacheFill_block_T_1 = cat(lowLevelMem.RDATA, _cacheFill_block_T) @[Cat.scala 33:92]
      cacheFill.block <= _cacheFill_block_T_1 @[ICache.scala 106:68]
    node _T_1 = eq(arvalid, UInt<1>("h0")) @[ICache.scala 108:8]
    when _T_1 : @[ICache.scala 108:18]
      node _arvalid_T = eq(rready, UInt<1>("h0")) @[ICache.scala 108:46]
      node _arvalid_T_1 = and(cacheMissed, _arvalid_T) @[ICache.scala 108:43]
      node _arvalid_T_2 = eq(cacheFill.valid, UInt<1>("h0")) @[ICache.scala 108:57]
      node _arvalid_T_3 = and(_arvalid_T_1, _arvalid_T_2) @[ICache.scala 108:54]
      arvalid <= _arvalid_T_3 @[ICache.scala 108:28]
    else :
      node _arvalid_T_4 = and(lowLevelMem.ARVALID, lowLevelMem.ARREADY) @[ICache.scala 109:49]
      node _arvalid_T_5 = eq(_arvalid_T_4, UInt<1>("h0")) @[ICache.scala 109:27]
      arvalid <= _arvalid_T_5 @[ICache.scala 109:24]
    node _T_2 = eq(rready, UInt<1>("h0")) @[ICache.scala 111:8]
    when _T_2 : @[ICache.scala 111:17]
      node _rready_T = and(lowLevelMem.ARVALID, lowLevelMem.ARREADY) @[ICache.scala 111:50]
      rready <= _rready_T @[ICache.scala 111:26]
    else :
      node _rready_T_1 = and(lowLevelMem.RLAST, lowLevelMem.RREADY) @[ICache.scala 112:46]
      node _rready_T_2 = and(_rready_T_1, lowLevelMem.RVALID) @[ICache.scala 112:68]
      node _rready_T_3 = eq(_rready_T_2, UInt<1>("h0")) @[ICache.scala 112:26]
      rready <= _rready_T_3 @[ICache.scala 112:23]
    node _T_3 = eq(cacheFill.valid, UInt<1>("h0")) @[ICache.scala 114:8]
    when _T_3 : @[ICache.scala 114:26]
      node _cacheFill_valid_T = and(lowLevelMem.RLAST, lowLevelMem.RREADY) @[ICache.scala 114:65]
      node _cacheFill_valid_T_1 = and(_cacheFill_valid_T, lowLevelMem.RVALID) @[ICache.scala 114:87]
      cacheFill.valid <= _cacheFill_valid_T_1 @[ICache.scala 114:44]
    else :
      cacheFill.valid <= UInt<1>("h0") @[ICache.scala 115:32]
    cache.write_block <= cacheFill.block @[ICache.scala 117:24]
    cache.write_in <= cacheFill.valid @[ICache.scala 118:21]
    node _cache_io_write_line_index_T = bits(results[UInt<1>("h0")].address, 12, 6) @[ICache.scala 119:53]
    cache.write_line_index <= _cache_io_write_line_index_T @[ICache.scala 119:29]
    node _cache_io_write_tag_T = bits(results[UInt<1>("h0")].address, 32, 12) @[ICache.scala 120:46]
    cache.write_tag <= _cache_io_write_tag_T @[ICache.scala 120:22]
    cache.clock <= clock @[ICache.scala 121:18]
    cache.reset <= reset @[ICache.scala 122:18]
    node _cacheStalled_T = eq(fromFetch.resp.ready, UInt<1>("h0")) @[ICache.scala 124:62]
    node _cacheStalled_T_1 = and(fromFetch.resp.valid, _cacheStalled_T) @[ICache.scala 124:59]
    node cacheStalled = or(cacheMissed, _cacheStalled_T_1) @[ICache.scala 124:34]
    node _T_4 = eq(cacheMissed, UInt<1>("h0")) @[ICache.scala 125:9]
    node _T_5 = or(fromFetch.resp.ready, commitFence) @[ICache.scala 125:47]
    node _T_6 = and(_T_4, _T_5) @[ICache.scala 125:22]
    node _T_7 = eq(results[UInt<1>("h0")].valid, UInt<1>("h0")) @[ICache.scala 125:67]
    node _T_8 = or(_T_6, _T_7) @[ICache.scala 125:64]
    when _T_8 : @[ICache.scala 125:89]
      when results[UInt<1>("h1")].valid : @[ICache.scala 126:35]
        results[UInt<1>("h0")] <= results[UInt<1>("h1")] @[ICache.scala 126:51]
      else :
        results[UInt<1>("h0")].valid <= requests[UInt<2>("h2")].valid @[ICache.scala 128:27]
        results[UInt<1>("h0")].address <= requests[UInt<2>("h2")].address @[ICache.scala 129:29]
        results[UInt<1>("h0")].instruction <= cache.instruction @[ICache.scala 130:33]
        results[UInt<1>("h0")].tag <= cache.tag @[ICache.scala 131:25]
        results[UInt<1>("h0")].tagValid <= cache.tag_valid @[ICache.scala 132:30]
    else :
      node _T_9 = and(cacheMissed, cacheFill.valid) @[ICache.scala 134:26]
      when _T_9 : @[ICache.scala 134:46]
        node _results_0_instruction_T = bits(cacheFill.block, 31, 0) @[ICache.scala 135:96]
        node _results_0_instruction_T_1 = bits(cacheFill.block, 63, 32) @[ICache.scala 135:96]
        node _results_0_instruction_T_2 = bits(cacheFill.block, 95, 64) @[ICache.scala 135:96]
        node _results_0_instruction_T_3 = bits(cacheFill.block, 127, 96) @[ICache.scala 135:96]
        node _results_0_instruction_T_4 = bits(cacheFill.block, 159, 128) @[ICache.scala 135:96]
        node _results_0_instruction_T_5 = bits(cacheFill.block, 191, 160) @[ICache.scala 135:96]
        node _results_0_instruction_T_6 = bits(cacheFill.block, 223, 192) @[ICache.scala 135:96]
        node _results_0_instruction_T_7 = bits(cacheFill.block, 255, 224) @[ICache.scala 135:96]
        node _results_0_instruction_T_8 = bits(cacheFill.block, 287, 256) @[ICache.scala 135:96]
        node _results_0_instruction_T_9 = bits(cacheFill.block, 319, 288) @[ICache.scala 135:96]
        node _results_0_instruction_T_10 = bits(cacheFill.block, 351, 320) @[ICache.scala 135:96]
        node _results_0_instruction_T_11 = bits(cacheFill.block, 383, 352) @[ICache.scala 135:96]
        node _results_0_instruction_T_12 = bits(cacheFill.block, 415, 384) @[ICache.scala 135:96]
        node _results_0_instruction_T_13 = bits(cacheFill.block, 447, 416) @[ICache.scala 135:96]
        node _results_0_instruction_T_14 = bits(cacheFill.block, 479, 448) @[ICache.scala 135:96]
        node _results_0_instruction_T_15 = bits(cacheFill.block, 511, 480) @[ICache.scala 135:96]
        wire _results_0_instruction_WIRE : UInt<32>[16] @[ICache.scala 135:75]
        _results_0_instruction_WIRE[0] <= _results_0_instruction_T @[ICache.scala 135:75]
        _results_0_instruction_WIRE[1] <= _results_0_instruction_T_1 @[ICache.scala 135:75]
        _results_0_instruction_WIRE[2] <= _results_0_instruction_T_2 @[ICache.scala 135:75]
        _results_0_instruction_WIRE[3] <= _results_0_instruction_T_3 @[ICache.scala 135:75]
        _results_0_instruction_WIRE[4] <= _results_0_instruction_T_4 @[ICache.scala 135:75]
        _results_0_instruction_WIRE[5] <= _results_0_instruction_T_5 @[ICache.scala 135:75]
        _results_0_instruction_WIRE[6] <= _results_0_instruction_T_6 @[ICache.scala 135:75]
        _results_0_instruction_WIRE[7] <= _results_0_instruction_T_7 @[ICache.scala 135:75]
        _results_0_instruction_WIRE[8] <= _results_0_instruction_T_8 @[ICache.scala 135:75]
        _results_0_instruction_WIRE[9] <= _results_0_instruction_T_9 @[ICache.scala 135:75]
        _results_0_instruction_WIRE[10] <= _results_0_instruction_T_10 @[ICache.scala 135:75]
        _results_0_instruction_WIRE[11] <= _results_0_instruction_T_11 @[ICache.scala 135:75]
        _results_0_instruction_WIRE[12] <= _results_0_instruction_T_12 @[ICache.scala 135:75]
        _results_0_instruction_WIRE[13] <= _results_0_instruction_T_13 @[ICache.scala 135:75]
        _results_0_instruction_WIRE[14] <= _results_0_instruction_T_14 @[ICache.scala 135:75]
        _results_0_instruction_WIRE[15] <= _results_0_instruction_T_15 @[ICache.scala 135:75]
        node _results_0_instruction_T_16 = bits(results[UInt<1>("h0")].address, 6, 2) @[ICache.scala 135:137]
        node _results_0_instruction_T_17 = bits(_results_0_instruction_T_16, 3, 0)
        results[UInt<1>("h0")].instruction <= _results_0_instruction_WIRE[_results_0_instruction_T_17] @[ICache.scala 135:31]
        node _results_0_tag_T = bits(results[UInt<1>("h0")].address, 32, 12) @[ICache.scala 136:47]
        results[UInt<1>("h0")].tag <= _results_0_tag_T @[ICache.scala 136:23]
        results[UInt<1>("h0")].tagValid <= UInt<1>("h1") @[ICache.scala 137:28]
    node _T_10 = eq(results[UInt<1>("h1")].valid, UInt<1>("h0")) @[ICache.scala 140:8]
    when _T_10 : @[ICache.scala 140:34]
      node _results_1_valid_T = and(requests[UInt<2>("h2")].valid, results[UInt<1>("h0")].valid) @[ICache.scala 141:58]
      node _results_1_valid_T_1 = eq(fromFetch.resp.ready, UInt<1>("h0")) @[ICache.scala 141:100]
      node _results_1_valid_T_2 = or(cacheMissed, _results_1_valid_T_1) @[ICache.scala 141:97]
      node _results_1_valid_T_3 = and(_results_1_valid_T, _results_1_valid_T_2) @[ICache.scala 141:81]
      results[UInt<1>("h1")].valid <= _results_1_valid_T_3 @[ICache.scala 141:29]
      results[UInt<1>("h1")].address <= requests[UInt<2>("h2")].address @[ICache.scala 142:31]
      results[UInt<1>("h1")].instruction <= cache.instruction @[ICache.scala 143:35]
      results[UInt<1>("h1")].tag <= cache.tag @[ICache.scala 144:27]
      results[UInt<1>("h1")].tagValid <= cache.tag_valid @[ICache.scala 145:32]
    else :
      node _T_11 = and(cacheMissed, cacheFill.valid) @[ICache.scala 146:26]
      node _T_12 = bits(results[UInt<1>("h0")].address, 31, 6) @[ICache.scala 146:70]
      node _T_13 = bits(results[UInt<1>("h1")].address, 31, 6) @[ICache.scala 146:127]
      node _T_14 = eq(_T_12, _T_13) @[ICache.scala 146:98]
      node _T_15 = and(_T_11, _T_14) @[ICache.scala 146:45]
      when _T_15 : @[ICache.scala 146:157]
        node _results_1_instruction_T = bits(cacheFill.block, 31, 0) @[ICache.scala 147:100]
        node _results_1_instruction_T_1 = bits(cacheFill.block, 63, 32) @[ICache.scala 147:100]
        node _results_1_instruction_T_2 = bits(cacheFill.block, 95, 64) @[ICache.scala 147:100]
        node _results_1_instruction_T_3 = bits(cacheFill.block, 127, 96) @[ICache.scala 147:100]
        node _results_1_instruction_T_4 = bits(cacheFill.block, 159, 128) @[ICache.scala 147:100]
        node _results_1_instruction_T_5 = bits(cacheFill.block, 191, 160) @[ICache.scala 147:100]
        node _results_1_instruction_T_6 = bits(cacheFill.block, 223, 192) @[ICache.scala 147:100]
        node _results_1_instruction_T_7 = bits(cacheFill.block, 255, 224) @[ICache.scala 147:100]
        node _results_1_instruction_T_8 = bits(cacheFill.block, 287, 256) @[ICache.scala 147:100]
        node _results_1_instruction_T_9 = bits(cacheFill.block, 319, 288) @[ICache.scala 147:100]
        node _results_1_instruction_T_10 = bits(cacheFill.block, 351, 320) @[ICache.scala 147:100]
        node _results_1_instruction_T_11 = bits(cacheFill.block, 383, 352) @[ICache.scala 147:100]
        node _results_1_instruction_T_12 = bits(cacheFill.block, 415, 384) @[ICache.scala 147:100]
        node _results_1_instruction_T_13 = bits(cacheFill.block, 447, 416) @[ICache.scala 147:100]
        node _results_1_instruction_T_14 = bits(cacheFill.block, 479, 448) @[ICache.scala 147:100]
        node _results_1_instruction_T_15 = bits(cacheFill.block, 511, 480) @[ICache.scala 147:100]
        wire _results_1_instruction_WIRE : UInt<32>[16] @[ICache.scala 147:79]
        _results_1_instruction_WIRE[0] <= _results_1_instruction_T @[ICache.scala 147:79]
        _results_1_instruction_WIRE[1] <= _results_1_instruction_T_1 @[ICache.scala 147:79]
        _results_1_instruction_WIRE[2] <= _results_1_instruction_T_2 @[ICache.scala 147:79]
        _results_1_instruction_WIRE[3] <= _results_1_instruction_T_3 @[ICache.scala 147:79]
        _results_1_instruction_WIRE[4] <= _results_1_instruction_T_4 @[ICache.scala 147:79]
        _results_1_instruction_WIRE[5] <= _results_1_instruction_T_5 @[ICache.scala 147:79]
        _results_1_instruction_WIRE[6] <= _results_1_instruction_T_6 @[ICache.scala 147:79]
        _results_1_instruction_WIRE[7] <= _results_1_instruction_T_7 @[ICache.scala 147:79]
        _results_1_instruction_WIRE[8] <= _results_1_instruction_T_8 @[ICache.scala 147:79]
        _results_1_instruction_WIRE[9] <= _results_1_instruction_T_9 @[ICache.scala 147:79]
        _results_1_instruction_WIRE[10] <= _results_1_instruction_T_10 @[ICache.scala 147:79]
        _results_1_instruction_WIRE[11] <= _results_1_instruction_T_11 @[ICache.scala 147:79]
        _results_1_instruction_WIRE[12] <= _results_1_instruction_T_12 @[ICache.scala 147:79]
        _results_1_instruction_WIRE[13] <= _results_1_instruction_T_13 @[ICache.scala 147:79]
        _results_1_instruction_WIRE[14] <= _results_1_instruction_T_14 @[ICache.scala 147:79]
        _results_1_instruction_WIRE[15] <= _results_1_instruction_T_15 @[ICache.scala 147:79]
        node _results_1_instruction_T_16 = bits(results[UInt<1>("h1")].address, 6, 2) @[ICache.scala 147:145]
        node _results_1_instruction_T_17 = bits(_results_1_instruction_T_16, 3, 0)
        results[UInt<1>("h1")].instruction <= _results_1_instruction_WIRE[_results_1_instruction_T_17] @[ICache.scala 147:35]
        node _results_1_tag_T = bits(results[UInt<1>("h0")].address, 32, 12) @[ICache.scala 148:51]
        results[UInt<1>("h1")].tag <= _results_1_tag_T @[ICache.scala 148:27]
        results[UInt<1>("h1")].tagValid <= UInt<1>("h1") @[ICache.scala 149:32]
      else :
        node _T_16 = eq(cacheStalled, UInt<1>("h0")) @[ICache.scala 150:14]
        when _T_16 : @[ICache.scala 150:29]
          results[UInt<1>("h1")].valid <= UInt<1>("h0") @[ICache.scala 151:29]
    node _T_17 = eq(results[UInt<1>("h1")].valid, UInt<1>("h0")) @[ICache.scala 154:8]
    when _T_17 : @[ICache.scala 154:34]
      requests[UInt<2>("h2")] <= requests[UInt<2>("h0")] @[ICache.scala 155:25]
      node _requests_2_valid_T = eq(cacheStalled, UInt<1>("h0")) @[ICache.scala 156:34]
      node _requests_2_valid_T_1 = and(_requests_2_valid_T, requests[UInt<2>("h0")].valid) @[ICache.scala 156:48]
      requests[UInt<2>("h2")].valid <= _requests_2_valid_T_1 @[ICache.scala 156:31]
    else :
      requests[UInt<2>("h2")].valid <= UInt<1>("h0") @[ICache.scala 158:31]
    node _T_18 = eq(cacheStalled, UInt<1>("h0")) @[ICache.scala 161:9]
    node _T_19 = eq(results[UInt<1>("h1")].valid, UInt<1>("h0")) @[ICache.scala 161:26]
    node _T_20 = and(_T_18, _T_19) @[ICache.scala 161:23]
    node _T_21 = eq(requests[UInt<2>("h0")].valid, UInt<1>("h0")) @[ICache.scala 161:55]
    node _T_22 = or(_T_20, _T_21) @[ICache.scala 161:52]
    when _T_22 : @[ICache.scala 161:78]
      when requests[UInt<2>("h1")].valid : @[ICache.scala 162:36]
        requests[UInt<2>("h0")] <= requests[UInt<2>("h1")] @[ICache.scala 162:53]
      else :
        node _requests_0_valid_T = and(fromFetch.req.ready, fromFetch.req.valid) @[ICache.scala 164:52]
        requests[UInt<2>("h0")].valid <= _requests_0_valid_T @[ICache.scala 164:28]
        requests[UInt<2>("h0")].address <= fromFetch.req.bits @[ICache.scala 165:30]
    node _T_23 = eq(requests[UInt<2>("h1")].valid, UInt<1>("h0")) @[ICache.scala 169:8]
    when _T_23 : @[ICache.scala 169:35]
      node _requests_1_valid_T = or(cacheStalled, results[UInt<1>("h1")].valid) @[ICache.scala 170:47]
      node _requests_1_valid_T_1 = and(fromFetch.req.ready, fromFetch.req.valid) @[ICache.scala 170:99]
      node _requests_1_valid_T_2 = and(_requests_1_valid_T, _requests_1_valid_T_1) @[ICache.scala 170:75]
      node _requests_1_valid_T_3 = and(_requests_1_valid_T_2, requests[UInt<2>("h0")].valid) @[ICache.scala 170:123]
      requests[UInt<2>("h1")].valid <= _requests_1_valid_T_3 @[ICache.scala 170:30]
      requests[UInt<2>("h1")].address <= fromFetch.req.bits @[ICache.scala 171:32]
    else :
      node _requests_1_valid_T_4 = or(cacheStalled, results[UInt<1>("h1")].valid) @[ICache.scala 173:47]
      requests[UInt<2>("h1")].valid <= _requests_1_valid_T_4 @[ICache.scala 173:30]
    node _fromFetch_resp_valid_T = eq(cacheMissed, UInt<1>("h0")) @[ICache.scala 176:27]
    node _fromFetch_resp_valid_T_1 = and(_fromFetch_resp_valid_T, results[UInt<1>("h0")].valid) @[ICache.scala 176:40]
    fromFetch.resp.valid <= _fromFetch_resp_valid_T_1 @[ICache.scala 176:24]
    fromFetch.resp.bits <= results[UInt<1>("h0")].instruction @[ICache.scala 177:23]
    node _fromFetch_req_ready_T = eq(requests[UInt<2>("h1")].valid, UInt<1>("h0")) @[ICache.scala 178:26]
    node _fromFetch_req_ready_T_1 = eq(commitFence, UInt<1>("h0")) @[ICache.scala 178:55]
    node _fromFetch_req_ready_T_2 = and(_fromFetch_req_ready_T, _fromFetch_req_ready_T_1) @[ICache.scala 178:52]
    fromFetch.req.ready <= _fromFetch_req_ready_T_2 @[ICache.scala 178:23]
    cache.address <= requests[UInt<2>("h0")].address @[ICache.scala 180:20]
    node _T_24 = eq(commitFence, UInt<1>("h0")) @[ICache.scala 181:8]
    when _T_24 : @[ICache.scala 181:22]
      commitFence <= updateAllCachelines.fired @[ICache.scala 182:17]
    else :
      node _commitFence_T = or(requests[0].valid, requests[1].valid) @[ICache.scala 184:74]
      node _commitFence_T_1 = or(_commitFence_T, requests[2].valid) @[ICache.scala 184:74]
      node _commitFence_T_2 = or(_commitFence_T_1, results[0].valid) @[ICache.scala 184:74]
      node _commitFence_T_3 = or(_commitFence_T_2, results[1].valid) @[ICache.scala 184:74]
      node _commitFence_T_4 = eq(cachelinesUpdatesResp.fired, UInt<1>("h0")) @[ICache.scala 184:84]
      node _commitFence_T_5 = or(_commitFence_T_3, _commitFence_T_4) @[ICache.scala 184:81]
      commitFence <= _commitFence_T_5 @[ICache.scala 184:17]
    node _updateAllCachelines_ready_T = eq(commitFence, UInt<1>("h0")) @[ICache.scala 186:32]
    updateAllCachelines.ready <= _updateAllCachelines_ready_T @[ICache.scala 186:29]
    node _cachelinesUpdatesResp_ready_T = or(requests[0].valid, requests[1].valid) @[ICache.scala 187:89]
    node _cachelinesUpdatesResp_ready_T_1 = or(_cachelinesUpdatesResp_ready_T, requests[2].valid) @[ICache.scala 187:89]
    node _cachelinesUpdatesResp_ready_T_2 = or(_cachelinesUpdatesResp_ready_T_1, results[0].valid) @[ICache.scala 187:89]
    node _cachelinesUpdatesResp_ready_T_3 = or(_cachelinesUpdatesResp_ready_T_2, results[1].valid) @[ICache.scala 187:89]
    node _cachelinesUpdatesResp_ready_T_4 = eq(_cachelinesUpdatesResp_ready_T_3, UInt<1>("h0")) @[ICache.scala 187:34]
    node _cachelinesUpdatesResp_ready_T_5 = and(_cachelinesUpdatesResp_ready_T_4, commitFence) @[ICache.scala 187:96]
    cachelinesUpdatesResp.ready <= _cachelinesUpdatesResp_ready_T_5 @[ICache.scala 187:31]
    cache.invalidate_all <= cachelinesUpdatesResp.fired @[ICache.scala 188:27]
    node _lowLevelMem_ARADDR_T = bits(results[UInt<1>("h0")].address, 31, 6) @[ICache.scala 191:50]
    node _lowLevelMem_ARADDR_T_1 = cat(_lowLevelMem_ARADDR_T, UInt<6>("h0")) @[Cat.scala 33:92]
    lowLevelMem.ARADDR <= _lowLevelMem_ARADDR_T_1 @[ICache.scala 191:22]
    lowLevelMem.ARBURST <= UInt<1>("h1") @[ICache.scala 192:23]
    lowLevelMem.ARCACHE <= UInt<2>("h2") @[ICache.scala 193:23]
    lowLevelMem.ARID <= UInt<1>("h1") @[ICache.scala 194:20]
    lowLevelMem.ARLEN <= UInt<3>("h7") @[ICache.scala 195:21]
    lowLevelMem.ARLOCK <= UInt<1>("h0") @[ICache.scala 196:22]
    lowLevelMem.ARPROT <= UInt<1>("h0") @[ICache.scala 197:22]
    lowLevelMem.ARQOS <= UInt<1>("h0") @[ICache.scala 198:21]
    lowLevelMem.ARSIZE <= UInt<2>("h3") @[ICache.scala 199:22]
    lowLevelMem.ARVALID <= arvalid @[ICache.scala 200:23]
    lowLevelMem.ARDOMAIN <= UInt<1>("h0") @[ICache.scala 201:24]
    lowLevelMem.ARSNOOP <= UInt<1>("h0") @[ICache.scala 202:23]
    lowLevelMem.ARBAR <= UInt<1>("h0") @[ICache.scala 203:21]
    lowLevelMem.RREADY <= rready @[ICache.scala 205:22]
    lowLevelMem.AWADDR <= UInt<1>("h0") @[ICache.scala 207:22]
    lowLevelMem.AWBURST <= UInt<1>("h1") @[ICache.scala 208:23]
    lowLevelMem.AWCACHE <= UInt<2>("h2") @[ICache.scala 209:23]
    lowLevelMem.AWID <= UInt<1>("h1") @[ICache.scala 210:20]
    lowLevelMem.AWLEN <= UInt<1>("h0") @[ICache.scala 211:21]
    lowLevelMem.AWLOCK <= UInt<1>("h0") @[ICache.scala 212:22]
    lowLevelMem.AWPROT <= UInt<1>("h0") @[ICache.scala 213:22]
    lowLevelMem.AWQOS <= UInt<1>("h0") @[ICache.scala 214:21]
    lowLevelMem.AWSIZE <= UInt<1>("h0") @[ICache.scala 215:22]
    lowLevelMem.AWVALID <= UInt<1>("h0") @[ICache.scala 216:23]
    lowLevelMem.AWDOMAIN <= UInt<1>("h0") @[ICache.scala 217:24]
    lowLevelMem.AWSNOOP <= UInt<1>("h0") @[ICache.scala 218:23]
    lowLevelMem.AWBAR <= UInt<1>("h0") @[ICache.scala 219:21]
    lowLevelMem.WDATA <= UInt<1>("h0") @[ICache.scala 221:21]
    lowLevelMem.WLAST <= UInt<1>("h0") @[ICache.scala 222:21]
    lowLevelMem.WSTRB <= UInt<1>("h0") @[ICache.scala 223:21]
    lowLevelMem.WVALID <= UInt<1>("h0") @[ICache.scala 224:22]
    lowLevelMem.BREADY <= UInt<1>("h0") @[ICache.scala 226:22]
    lowLevelMem.ACREADY <= UInt<1>("h1") @[ICache.scala 228:23]
    lowLevelMem.CRVALID <= UInt<1>("h1") @[ICache.scala 229:23]
    lowLevelMem.CRRESP <= UInt<1>("h0") @[ICache.scala 230:22]
    lowLevelMem.CDVALID <= UInt<1>("h0") @[ICache.scala 231:23]
    lowLevelMem.CDDATA <= UInt<1>("h0") @[ICache.scala 232:22]
    lowLevelMem.CDLAST <= UInt<1>("h0") @[ICache.scala 233:22]

  module shiftReg :
    input clock : Clock
    input reset : Reset
    input in : UInt<1>
    input en : UInt<1>
    output output : UInt<1>[5]

    reg shiftregs_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[fetch.scala 90:56]
    reg shiftregs_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[fetch.scala 90:56]
    reg shiftregs_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[fetch.scala 90:56]
    reg shiftregs_3 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[fetch.scala 90:56]
    reg shiftregs_4 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[fetch.scala 90:56]
    when en : @[fetch.scala 92:14]
      shiftregs_0 <= in @[fetch.scala 93:20]
      shiftregs_1 <= shiftregs_0 @[fetch.scala 95:22]
      shiftregs_2 <= shiftregs_1 @[fetch.scala 95:22]
      shiftregs_3 <= shiftregs_2 @[fetch.scala 95:22]
      shiftregs_4 <= shiftregs_3 @[fetch.scala 95:22]
    output[0] <= shiftregs_0 @[fetch.scala 99:54]
    output[1] <= shiftregs_1 @[fetch.scala 99:54]
    output[2] <= shiftregs_2 @[fetch.scala 99:54]
    output[3] <= shiftregs_3 @[fetch.scala 99:54]
    output[4] <= shiftregs_4 @[fetch.scala 99:54]

  module updateShiftReg :
    input clock : Clock
    input reset : Reset
    input in : UInt<1>
    input en : UInt<1>
    output output : UInt<1>[5]
    input updateVals : UInt<1>[5]
    input update : UInt<1>

    reg shiftregs_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[fetch.scala 90:56]
    reg shiftregs_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[fetch.scala 90:56]
    reg shiftregs_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[fetch.scala 90:56]
    reg shiftregs_3 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[fetch.scala 90:56]
    reg shiftregs_4 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[fetch.scala 90:56]
    when en : @[fetch.scala 92:14]
      shiftregs_0 <= in @[fetch.scala 93:20]
      shiftregs_1 <= shiftregs_0 @[fetch.scala 95:22]
      shiftregs_2 <= shiftregs_1 @[fetch.scala 95:22]
      shiftregs_3 <= shiftregs_2 @[fetch.scala 95:22]
      shiftregs_4 <= shiftregs_3 @[fetch.scala 95:22]
    output[0] <= shiftregs_0 @[fetch.scala 99:54]
    output[1] <= shiftregs_1 @[fetch.scala 99:54]
    output[2] <= shiftregs_2 @[fetch.scala 99:54]
    output[3] <= shiftregs_3 @[fetch.scala 99:54]
    output[4] <= shiftregs_4 @[fetch.scala 99:54]
    when update : @[fetch.scala 106:17]
      shiftregs_0 <= updateVals[0] @[fetch.scala 107:48]
      shiftregs_1 <= updateVals[1] @[fetch.scala 107:48]
      shiftregs_2 <= updateVals[2] @[fetch.scala 107:48]
      shiftregs_3 <= updateVals[3] @[fetch.scala 107:48]
      shiftregs_4 <= updateVals[4] @[fetch.scala 107:48]

  module gshare_predictor :
    input clock : Clock
    input reset : Reset
    output io : { branchres : { ready : UInt<1>, flip fired : UInt<1>, flip isBranch : UInt<1>, flip branchTaken : UInt<1>, flip pc : UInt<64>, flip pcAfterBrnach : UInt<64>}, flip curr_pc : UInt<64>, next_pc : UInt<64>}
    input requestSent : UInt<1>
    input mispredicted : UInt<1>

    inst correct_history of shiftReg @[fetch.scala 121:31]
    correct_history.clock <= clock
    correct_history.reset <= reset
    inst predicted_history of updateShiftReg @[fetch.scala 122:33]
    predicted_history.clock <= clock
    predicted_history.reset <= reset
    node _correct_history_en_T = and(io.branchres.fired, io.branchres.isBranch) @[fetch.scala 123:44]
    correct_history.en <= _correct_history_en_T @[fetch.scala 123:22]
    correct_history.in <= io.branchres.branchTaken @[fetch.scala 124:22]
    predicted_history.updateVals[0] <= correct_history.output[0] @[fetch.scala 127:37]
    predicted_history.updateVals[1] <= correct_history.output[1] @[fetch.scala 127:37]
    predicted_history.updateVals[2] <= correct_history.output[2] @[fetch.scala 127:37]
    predicted_history.updateVals[3] <= correct_history.output[3] @[fetch.scala 127:37]
    predicted_history.updateVals[4] <= correct_history.output[4] @[fetch.scala 127:37]
    node _counterIndex_pred_T = bits(io.curr_pc, 7, 2) @[fetch.scala 131:41]
    node _counterIndex_pred_T_1 = bits(io.curr_pc, 6, 2) @[fetch.scala 131:109]
    node counterIndex_pred_lo = cat(predicted_history.output[1], predicted_history.output[0]) @[fetch.scala 131:178]
    node counterIndex_pred_hi_hi = cat(predicted_history.output[4], predicted_history.output[3]) @[fetch.scala 131:178]
    node counterIndex_pred_hi = cat(counterIndex_pred_hi_hi, predicted_history.output[2]) @[fetch.scala 131:178]
    node _counterIndex_pred_T_2 = cat(counterIndex_pred_hi, counterIndex_pred_lo) @[fetch.scala 131:178]
    node _counterIndex_pred_T_3 = bits(_counterIndex_pred_T_2, 3, 0) @[Bitwise.scala 114:18]
    node _counterIndex_pred_T_4 = bits(_counterIndex_pred_T_3, 1, 0) @[Bitwise.scala 114:18]
    node _counterIndex_pred_T_5 = bits(_counterIndex_pred_T_4, 0, 0) @[Bitwise.scala 114:18]
    node _counterIndex_pred_T_6 = bits(_counterIndex_pred_T_4, 1, 1) @[Bitwise.scala 114:47]
    node _counterIndex_pred_T_7 = cat(_counterIndex_pred_T_5, _counterIndex_pred_T_6) @[Cat.scala 33:92]
    node _counterIndex_pred_T_8 = bits(_counterIndex_pred_T_3, 3, 2) @[Bitwise.scala 114:47]
    node _counterIndex_pred_T_9 = bits(_counterIndex_pred_T_8, 0, 0) @[Bitwise.scala 114:18]
    node _counterIndex_pred_T_10 = bits(_counterIndex_pred_T_8, 1, 1) @[Bitwise.scala 114:47]
    node _counterIndex_pred_T_11 = cat(_counterIndex_pred_T_9, _counterIndex_pred_T_10) @[Cat.scala 33:92]
    node _counterIndex_pred_T_12 = cat(_counterIndex_pred_T_7, _counterIndex_pred_T_11) @[Cat.scala 33:92]
    node _counterIndex_pred_T_13 = bits(_counterIndex_pred_T_2, 4, 4) @[Bitwise.scala 114:47]
    node _counterIndex_pred_T_14 = cat(_counterIndex_pred_T_12, _counterIndex_pred_T_13) @[Cat.scala 33:92]
    node _counterIndex_pred_T_15 = xor(_counterIndex_pred_T_1, _counterIndex_pred_T_14) @[fetch.scala 131:143]
    node counterIndex_pred = cat(_counterIndex_pred_T, _counterIndex_pred_T_15) @[Cat.scala 33:92]
    node _counterIndex_train_T = bits(io.branchres.pc, 7, 2) @[fetch.scala 132:47]
    node _counterIndex_train_T_1 = bits(io.branchres.pc, 6, 2) @[fetch.scala 132:120]
    node counterIndex_train_lo = cat(correct_history.output[1], correct_history.output[0]) @[fetch.scala 132:187]
    node counterIndex_train_hi_hi = cat(correct_history.output[4], correct_history.output[3]) @[fetch.scala 132:187]
    node counterIndex_train_hi = cat(counterIndex_train_hi_hi, correct_history.output[2]) @[fetch.scala 132:187]
    node _counterIndex_train_T_2 = cat(counterIndex_train_hi, counterIndex_train_lo) @[fetch.scala 132:187]
    node _counterIndex_train_T_3 = bits(_counterIndex_train_T_2, 3, 0) @[Bitwise.scala 114:18]
    node _counterIndex_train_T_4 = bits(_counterIndex_train_T_3, 1, 0) @[Bitwise.scala 114:18]
    node _counterIndex_train_T_5 = bits(_counterIndex_train_T_4, 0, 0) @[Bitwise.scala 114:18]
    node _counterIndex_train_T_6 = bits(_counterIndex_train_T_4, 1, 1) @[Bitwise.scala 114:47]
    node _counterIndex_train_T_7 = cat(_counterIndex_train_T_5, _counterIndex_train_T_6) @[Cat.scala 33:92]
    node _counterIndex_train_T_8 = bits(_counterIndex_train_T_3, 3, 2) @[Bitwise.scala 114:47]
    node _counterIndex_train_T_9 = bits(_counterIndex_train_T_8, 0, 0) @[Bitwise.scala 114:18]
    node _counterIndex_train_T_10 = bits(_counterIndex_train_T_8, 1, 1) @[Bitwise.scala 114:47]
    node _counterIndex_train_T_11 = cat(_counterIndex_train_T_9, _counterIndex_train_T_10) @[Cat.scala 33:92]
    node _counterIndex_train_T_12 = cat(_counterIndex_train_T_7, _counterIndex_train_T_11) @[Cat.scala 33:92]
    node _counterIndex_train_T_13 = bits(_counterIndex_train_T_2, 4, 4) @[Bitwise.scala 114:47]
    node _counterIndex_train_T_14 = cat(_counterIndex_train_T_12, _counterIndex_train_T_13) @[Cat.scala 33:92]
    node _counterIndex_train_T_15 = xor(_counterIndex_train_T_1, _counterIndex_train_T_14) @[fetch.scala 132:154]
    node counterIndex_train = cat(_counterIndex_train_T, _counterIndex_train_T_15) @[Cat.scala 33:92]
    node btb_addr = bits(io.curr_pc, 9, 2) @[fetch.scala 140:28]
    node tag = bits(io.curr_pc, 63, 10) @[fetch.scala 141:23]
    node result_addr = bits(io.branchres.pc, 9, 2) @[fetch.scala 142:36]
    node result_tag = bits(io.branchres.pc, 63, 10) @[fetch.scala 143:35]
    cmem btb : UInt<64> [256] @[fetch.scala 146:16]
    cmem counters : UInt<2> [2048] @[fetch.scala 147:21]
    wire _valid_bits_WIRE : UInt<1>[256] @[fetch.scala 148:35]
    _valid_bits_WIRE[0] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[1] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[2] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[3] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[4] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[5] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[6] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[7] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[8] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[9] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[10] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[11] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[12] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[13] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[14] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[15] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[16] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[17] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[18] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[19] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[20] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[21] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[22] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[23] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[24] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[25] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[26] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[27] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[28] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[29] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[30] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[31] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[32] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[33] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[34] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[35] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[36] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[37] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[38] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[39] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[40] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[41] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[42] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[43] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[44] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[45] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[46] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[47] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[48] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[49] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[50] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[51] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[52] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[53] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[54] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[55] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[56] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[57] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[58] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[59] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[60] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[61] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[62] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[63] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[64] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[65] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[66] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[67] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[68] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[69] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[70] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[71] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[72] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[73] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[74] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[75] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[76] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[77] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[78] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[79] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[80] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[81] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[82] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[83] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[84] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[85] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[86] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[87] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[88] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[89] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[90] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[91] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[92] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[93] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[94] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[95] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[96] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[97] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[98] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[99] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[100] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[101] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[102] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[103] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[104] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[105] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[106] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[107] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[108] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[109] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[110] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[111] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[112] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[113] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[114] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[115] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[116] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[117] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[118] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[119] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[120] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[121] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[122] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[123] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[124] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[125] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[126] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[127] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[128] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[129] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[130] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[131] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[132] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[133] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[134] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[135] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[136] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[137] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[138] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[139] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[140] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[141] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[142] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[143] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[144] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[145] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[146] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[147] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[148] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[149] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[150] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[151] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[152] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[153] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[154] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[155] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[156] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[157] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[158] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[159] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[160] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[161] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[162] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[163] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[164] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[165] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[166] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[167] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[168] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[169] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[170] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[171] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[172] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[173] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[174] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[175] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[176] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[177] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[178] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[179] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[180] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[181] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[182] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[183] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[184] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[185] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[186] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[187] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[188] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[189] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[190] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[191] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[192] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[193] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[194] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[195] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[196] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[197] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[198] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[199] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[200] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[201] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[202] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[203] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[204] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[205] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[206] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[207] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[208] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[209] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[210] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[211] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[212] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[213] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[214] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[215] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[216] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[217] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[218] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[219] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[220] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[221] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[222] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[223] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[224] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[225] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[226] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[227] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[228] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[229] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[230] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[231] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[232] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[233] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[234] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[235] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[236] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[237] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[238] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[239] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[240] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[241] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[242] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[243] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[244] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[245] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[246] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[247] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[248] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[249] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[250] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[251] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[252] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[253] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[254] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[255] <= UInt<1>("h0") @[fetch.scala 148:35]
    reg valid_bits : UInt<1>[256], clock with :
      reset => (reset, _valid_bits_WIRE) @[fetch.scala 148:27]
    cmem tag_store : UInt<54> [256] @[fetch.scala 149:22]
    when io.branchres.fired : @[fetch.scala 152:27]
      when io.branchres.isBranch : @[fetch.scala 153:33]
        valid_bits[result_addr] <= UInt<1>("h1") @[fetch.scala 154:31]
        infer mport MPORT = tag_store[result_addr], clock @[fetch.scala 155:16]
        MPORT <= result_tag @[fetch.scala 155:30]
        infer mport MPORT_1 = btb[result_addr], clock @[fetch.scala 156:10]
        MPORT_1 <= io.branchres.pcAfterBrnach @[fetch.scala 156:24]
        when io.branchres.branchTaken : @[fetch.scala 158:37]
          infer mport MPORT_2 = counters[counterIndex_train], clock @[fetch.scala 159:24]
          node _T = eq(MPORT_2, UInt<2>("h3")) @[fetch.scala 159:45]
          node _T_1 = eq(_T, UInt<1>("h0")) @[fetch.scala 159:14]
          when _T_1 : @[fetch.scala 159:54]
            infer mport MPORT_3 = counters[counterIndex_train], clock @[fetch.scala 160:19]
            infer mport MPORT_4 = counters[counterIndex_train], clock @[fetch.scala 160:51]
            node _T_2 = add(MPORT_4, UInt<1>("h1")) @[fetch.scala 160:72]
            node _T_3 = tail(_T_2, 1) @[fetch.scala 160:72]
            MPORT_3 <= _T_3 @[fetch.scala 160:40]
        else :
          infer mport MPORT_5 = counters[counterIndex_train], clock @[fetch.scala 163:24]
          node _T_4 = eq(MPORT_5, UInt<1>("h0")) @[fetch.scala 163:45]
          node _T_5 = eq(_T_4, UInt<1>("h0")) @[fetch.scala 163:14]
          when _T_5 : @[fetch.scala 163:55]
            infer mport MPORT_6 = counters[counterIndex_train], clock @[fetch.scala 164:19]
            infer mport MPORT_7 = counters[counterIndex_train], clock @[fetch.scala 164:51]
            node _T_6 = sub(MPORT_7, UInt<1>("h1")) @[fetch.scala 164:72]
            node _T_7 = tail(_T_6, 1) @[fetch.scala 164:72]
            MPORT_6 <= _T_7 @[fetch.scala 164:40]
      else :
        when io.branchres.branchTaken : @[fetch.scala 168:37]
          valid_bits[result_addr] <= UInt<1>("h0") @[fetch.scala 169:33]
    node _btb_hit_T = eq(valid_bits[btb_addr], UInt<1>("h1")) @[fetch.scala 174:37]
    infer mport btb_hit_MPORT = tag_store[btb_addr], clock @[fetch.scala 174:56]
    node _btb_hit_T_1 = eq(btb_hit_MPORT, tag) @[fetch.scala 174:67]
    node btb_hit = and(_btb_hit_T, _btb_hit_T_1) @[fetch.scala 174:44]
    infer mport prediction_MPORT = counters[counterIndex_pred], clock @[fetch.scala 175:28]
    node _prediction_T = bits(prediction_MPORT, 1, 1) @[fetch.scala 175:47]
    node prediction = eq(_prediction_T, UInt<1>("h1")) @[fetch.scala 175:51]
    node _predicted_history_en_T = eq(mispredicted, UInt<1>("h0")) @[fetch.scala 177:27]
    node _predicted_history_en_T_1 = and(_predicted_history_en_T, btb_hit) @[fetch.scala 177:41]
    node _predicted_history_en_T_2 = and(_predicted_history_en_T_1, requestSent) @[fetch.scala 177:52]
    predicted_history.en <= _predicted_history_en_T_2 @[fetch.scala 177:24]
    predicted_history.in <= prediction @[fetch.scala 178:24]
    node _io_next_pc_T = and(btb_hit, prediction) @[fetch.scala 180:29]
    infer mport io_next_pc_MPORT = btb[btb_addr], clock @[fetch.scala 180:47]
    node _io_next_pc_T_1 = add(io.curr_pc, UInt<3>("h4")) @[fetch.scala 180:70]
    node _io_next_pc_T_2 = tail(_io_next_pc_T_1, 1) @[fetch.scala 180:70]
    node _io_next_pc_T_3 = mux(_io_next_pc_T, io_next_pc_MPORT, _io_next_pc_T_2) @[fetch.scala 180:20]
    io.next_pc <= _io_next_pc_T_3 @[fetch.scala 180:14]
    when mispredicted : @[fetch.scala 183:22]
      predicted_history.update <= UInt<1>("h1") @[fetch.scala 184:30]
      when correct_history.en : @[fetch.scala 185:29]
        predicted_history.updateVals[0] <= io.branchres.branchTaken @[fetch.scala 186:39]
        predicted_history.updateVals[1] <= correct_history.output[1] @[fetch.scala 188:41]
        predicted_history.updateVals[2] <= correct_history.output[2] @[fetch.scala 188:41]
        predicted_history.updateVals[3] <= correct_history.output[3] @[fetch.scala 188:41]
        predicted_history.updateVals[4] <= correct_history.output[4] @[fetch.scala 188:41]
      else :
        predicted_history.updateVals[0] <= correct_history.output[0] @[fetch.scala 192:41]
        predicted_history.updateVals[1] <= correct_history.output[1] @[fetch.scala 192:41]
        predicted_history.updateVals[2] <= correct_history.output[2] @[fetch.scala 192:41]
        predicted_history.updateVals[3] <= correct_history.output[3] @[fetch.scala 192:41]
        predicted_history.updateVals[4] <= correct_history.output[4] @[fetch.scala 192:41]
    else :
      predicted_history.update <= UInt<1>("h0") @[fetch.scala 196:30]
    io.branchres.ready <= UInt<1>("h1") @[fetch.scala 199:22]

  module regFifo :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<128>}, deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<128>}}
    output isEmpty : UInt<1>

    cmem memReg : UInt<128> [4] @[Fifo.scala 21:19]
    wire incrRead : UInt<1>
    incrRead <= UInt<1>("h0")
    wire incrWrite : UInt<1>
    incrWrite <= UInt<1>("h0")
    reg readPtr : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[Fifo.scala 12:26]
    node _nextVal_T = eq(readPtr, UInt<2>("h3")) @[Fifo.scala 13:30]
    node _nextVal_T_1 = add(readPtr, UInt<1>("h1")) @[Fifo.scala 13:60]
    node _nextVal_T_2 = tail(_nextVal_T_1, 1) @[Fifo.scala 13:60]
    node nextRead = mux(_nextVal_T, UInt<1>("h0"), _nextVal_T_2) @[Fifo.scala 13:22]
    when incrRead : @[Fifo.scala 14:17]
      readPtr <= nextRead @[Fifo.scala 15:14]
    reg writePtr : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[Fifo.scala 12:26]
    node _nextVal_T_3 = eq(writePtr, UInt<2>("h3")) @[Fifo.scala 13:30]
    node _nextVal_T_4 = add(writePtr, UInt<1>("h1")) @[Fifo.scala 13:60]
    node _nextVal_T_5 = tail(_nextVal_T_4, 1) @[Fifo.scala 13:60]
    node nextWrite = mux(_nextVal_T_3, UInt<1>("h0"), _nextVal_T_5) @[Fifo.scala 13:22]
    when incrWrite : @[Fifo.scala 14:17]
      writePtr <= nextWrite @[Fifo.scala 15:14]
    reg emptyReg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h1")) @[Fifo.scala 26:25]
    reg fullReg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Fifo.scala 27:24]
    node _T = and(io.deq.ready, io.deq.valid) @[Fifo.scala 30:21]
    node _T_1 = and(_T, io.enq.valid) @[Fifo.scala 30:37]
    node _T_2 = and(_T_1, io.enq.ready) @[Fifo.scala 30:53]
    when _T_2 : @[Fifo.scala 30:70]
      infer mport MPORT = memReg[writePtr], clock @[Fifo.scala 31:11]
      MPORT <= io.enq.bits @[Fifo.scala 31:22]
      incrWrite <= UInt<1>("h1") @[Fifo.scala 32:15]
      incrRead <= UInt<1>("h1") @[Fifo.scala 33:14]
    else :
      node _T_3 = and(io.enq.valid, io.enq.ready) @[Fifo.scala 34:27]
      when _T_3 : @[Fifo.scala 34:44]
        infer mport MPORT_1 = memReg[writePtr], clock @[Fifo.scala 35:11]
        MPORT_1 <= io.enq.bits @[Fifo.scala 35:22]
        emptyReg <= UInt<1>("h0") @[Fifo.scala 36:14]
        node _fullReg_T = eq(nextWrite, readPtr) @[Fifo.scala 37:26]
        fullReg <= _fullReg_T @[Fifo.scala 37:13]
        incrWrite <= UInt<1>("h1") @[Fifo.scala 38:15]
      else :
        node _T_4 = and(io.deq.ready, io.deq.valid) @[Fifo.scala 39:27]
        when _T_4 : @[Fifo.scala 39:44]
          fullReg <= UInt<1>("h0") @[Fifo.scala 40:13]
          node _emptyReg_T = eq(nextRead, writePtr) @[Fifo.scala 41:26]
          emptyReg <= _emptyReg_T @[Fifo.scala 41:14]
          incrRead <= UInt<1>("h1") @[Fifo.scala 42:14]
    infer mport io_deq_bits_MPORT = memReg[readPtr], clock @[Fifo.scala 45:24]
    io.deq.bits <= io_deq_bits_MPORT @[Fifo.scala 45:15]
    node _io_enq_ready_T = eq(fullReg, UInt<1>("h0")) @[Fifo.scala 46:19]
    node _io_enq_ready_T_1 = and(io.deq.valid, io.deq.ready) @[Fifo.scala 46:44]
    node _io_enq_ready_T_2 = or(_io_enq_ready_T, _io_enq_ready_T_1) @[Fifo.scala 46:28]
    io.enq.ready <= _io_enq_ready_T_2 @[Fifo.scala 46:16]
    node _io_deq_valid_T = eq(emptyReg, UInt<1>("h0")) @[Fifo.scala 47:19]
    io.deq.valid <= _io_deq_valid_T @[Fifo.scala 47:16]
    isEmpty <= emptyReg @[Fifo.scala 50:11]

  module fetch :
    input clock : Clock
    input reset : Reset
    output cache : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<64>}, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<32>}}
    output toDecode : { ready : UInt<1>, flip fired : UInt<1>, pc : UInt<64>, instruction : UInt<32>, flip expected : { valid : UInt<1>, pc : UInt<64>, coherency : UInt<1>}}
    output branchRes : { ready : UInt<1>, flip fired : UInt<1>, flip isBranch : UInt<1>, flip branchTaken : UInt<1>, flip pc : UInt<64>, flip pcAfterBrnach : UInt<64>}
    output carryOutFence : { ready : UInt<1>, flip fired : UInt<1>}
    output updateAllCachelines : { ready : UInt<1>, flip fired : UInt<1>}
    output cachelinesUpdatesResp : { ready : UInt<1>, flip fired : UInt<1>}

    reg PC : UInt<64>, clock with :
      reset => (reset, UInt<64>("h10000000")) @[fetch.scala 248:19]
    reg redirect_bit : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[fetch.scala 249:28]
    reg handle_fenceI : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[fetch.scala 250:29]
    reg clear_cache_req : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[fetch.scala 251:31]
    reg cache_cleared : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[fetch.scala 252:29]
    reg fence_pending : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[fetch.scala 253:29]
    inst predictor of gshare_predictor @[fetch.scala 257:25]
    predictor.clock <= clock
    predictor.reset <= reset
    predictor.io.branchres.pcAfterBrnach <= branchRes.pcAfterBrnach @[fetch.scala 258:26]
    predictor.io.branchres.pc <= branchRes.pc @[fetch.scala 258:26]
    predictor.io.branchres.branchTaken <= branchRes.branchTaken @[fetch.scala 258:26]
    predictor.io.branchres.isBranch <= branchRes.isBranch @[fetch.scala 258:26]
    predictor.io.branchres.fired <= branchRes.fired @[fetch.scala 258:26]
    branchRes.ready <= predictor.io.branchres.ready @[fetch.scala 258:26]
    predictor.io.curr_pc <= PC @[fetch.scala 259:24]
    inst PC_fifo of regFifo @[fetch.scala 260:23]
    PC_fifo.clock <= clock
    PC_fifo.reset <= reset
    PC_fifo.io.enq.bits <= PC @[fetch.scala 263:23]
    node _PC_fifo_io_enq_valid_T = and(cache.req.valid, cache.req.ready) @[fetch.scala 264:43]
    PC_fifo.io.enq.valid <= _PC_fifo_io_enq_valid_T @[fetch.scala 264:24]
    node _PC_fifo_io_deq_ready_T = and(cache.resp.valid, cache.resp.ready) @[fetch.scala 265:44]
    PC_fifo.io.deq.ready <= _PC_fifo_io_deq_ready_T @[fetch.scala 265:24]
    toDecode.pc <= PC_fifo.io.deq.bits @[fetch.scala 266:15]
    node _is_fenceI_T = bits(toDecode.instruction, 6, 2) @[fetch.scala 269:40]
    node _is_fenceI_T_1 = eq(_is_fenceI_T, UInt<2>("h3")) @[fetch.scala 269:46]
    node _is_fenceI_T_2 = bits(toDecode.instruction, 14, 13) @[fetch.scala 269:85]
    node _is_fenceI_T_3 = eq(_is_fenceI_T_2, UInt<1>("h0")) @[fetch.scala 269:93]
    node _is_fenceI_T_4 = and(_is_fenceI_T_1, _is_fenceI_T_3) @[fetch.scala 269:62]
    node is_fenceI = and(_is_fenceI_T_4, toDecode.fired) @[fetch.scala 269:102]
    node _T = eq(handle_fenceI, UInt<1>("h1")) @[fetch.scala 270:22]
    when _T : @[fetch.scala 270:29]
      PC_fifo.reset <= UInt<1>("h1") @[fetch.scala 271:18]
    node _T_1 = eq(handle_fenceI, UInt<1>("h0")) @[fetch.scala 273:23]
    when _T_1 : @[fetch.scala 273:31]
      handle_fenceI <= is_fenceI @[fetch.scala 274:19]
    else :
      node _T_2 = eq(clear_cache_req, UInt<1>("h0")) @[fetch.scala 276:26]
      node _T_3 = eq(cache_cleared, UInt<1>("h0")) @[fetch.scala 276:49]
      node _T_4 = and(_T_2, _T_3) @[fetch.scala 276:33]
      node _T_5 = eq(fence_pending, UInt<1>("h0")) @[fetch.scala 276:72]
      node _T_6 = and(_T_4, _T_5) @[fetch.scala 276:57]
      when _T_6 : @[fetch.scala 276:79]
        handle_fenceI <= UInt<1>("h0") @[fetch.scala 277:21]
    node _T_7 = eq(clear_cache_req, UInt<1>("h0")) @[fetch.scala 281:24]
    node _T_8 = eq(handle_fenceI, UInt<1>("h0")) @[fetch.scala 281:33]
    node _T_9 = eq(_T_8, UInt<1>("h1")) @[fetch.scala 281:47]
    node _T_10 = and(_T_7, _T_9) @[fetch.scala 281:31]
    when _T_10 : @[fetch.scala 281:54]
      clear_cache_req <= is_fenceI @[fetch.scala 282:21]
    else :
      when updateAllCachelines.fired : @[fetch.scala 283:40]
        clear_cache_req <= UInt<1>("h0") @[fetch.scala 284:21]
    node _T_11 = eq(cache_cleared, UInt<1>("h0")) @[fetch.scala 287:22]
    node _T_12 = eq(handle_fenceI, UInt<1>("h0")) @[fetch.scala 287:32]
    node _T_13 = eq(_T_12, UInt<1>("h1")) @[fetch.scala 287:46]
    node _T_14 = and(_T_11, _T_13) @[fetch.scala 287:30]
    when _T_14 : @[fetch.scala 287:54]
      cache_cleared <= is_fenceI @[fetch.scala 288:19]
    else :
      when cachelinesUpdatesResp.fired : @[fetch.scala 289:43]
        cache_cleared <= UInt<1>("h0") @[fetch.scala 290:19]
    carryOutFence.ready <= fence_pending @[fetch.scala 293:23]
    node _T_15 = eq(fence_pending, UInt<1>("h0")) @[fetch.scala 295:22]
    node _T_16 = eq(handle_fenceI, UInt<1>("h0")) @[fetch.scala 295:31]
    node _T_17 = eq(_T_16, UInt<1>("h1")) @[fetch.scala 295:45]
    node _T_18 = and(_T_15, _T_17) @[fetch.scala 295:29]
    when _T_18 : @[fetch.scala 295:52]
      fence_pending <= is_fenceI @[fetch.scala 296:18]
    else :
      when carryOutFence.fired : @[fetch.scala 297:34]
        fence_pending <= UInt<1>("h0") @[fetch.scala 298:18]
    wire redirect : UInt<1> @[fetch.scala 302:22]
    wire coherent : UInt<1> @[fetch.scala 303:22]
    node _redirect_T = eq(toDecode.expected.pc, toDecode.pc) @[fetch.scala 305:38]
    node _redirect_T_1 = eq(_redirect_T, UInt<1>("h0")) @[fetch.scala 305:15]
    node _redirect_T_2 = and(_redirect_T_1, toDecode.expected.valid) @[fetch.scala 305:55]
    redirect <= _redirect_T_2 @[fetch.scala 305:12]
    coherent <= toDecode.expected.coherency @[fetch.scala 306:12]
    node _T_19 = eq(redirect_bit, UInt<1>("h0")) @[fetch.scala 309:20]
    node _T_20 = and(_T_19, PC_fifo.io.deq.valid) @[fetch.scala 309:27]
    when _T_20 : @[fetch.scala 309:50]
      redirect_bit <= redirect @[fetch.scala 310:18]
    else :
      node _T_21 = eq(PC_fifo.io.deq.valid, UInt<1>("h0")) @[fetch.scala 311:36]
      when _T_21 : @[fetch.scala 311:44]
        redirect_bit <= UInt<1>("h0") @[fetch.scala 312:18]
    node _T_22 = eq(redirect_bit, UInt<1>("h1")) @[fetch.scala 317:20]
    when _T_22 : @[fetch.scala 317:28]
      PC <= toDecode.expected.pc @[fetch.scala 318:8]
    else :
      when is_fenceI : @[fetch.scala 319:25]
        node _PC_T = add(PC_fifo.io.deq.bits, UInt<3>("h4")) @[fetch.scala 320:31]
        node _PC_T_1 = tail(_PC_T, 1) @[fetch.scala 320:31]
        PC <= _PC_T_1 @[fetch.scala 320:8]
      else :
        node _T_23 = and(cache.req.valid, cache.req.ready) @[fetch.scala 321:30]
        when _T_23 : @[fetch.scala 321:49]
          PC <= predictor.io.next_pc @[fetch.scala 322:8]
    cache.req.bits <= PC @[fetch.scala 324:18]
    node _cache_req_valid_T = eq(redirect_bit, UInt<1>("h0")) @[fetch.scala 327:35]
    node _cache_req_valid_T_1 = and(_cache_req_valid_T, PC_fifo.io.enq.ready) @[fetch.scala 327:43]
    node _cache_req_valid_T_2 = eq(is_fenceI, UInt<1>("h0")) @[fetch.scala 327:68]
    node _cache_req_valid_T_3 = and(_cache_req_valid_T_1, _cache_req_valid_T_2) @[fetch.scala 327:66]
    node _cache_req_valid_T_4 = eq(handle_fenceI, UInt<1>("h1")) @[fetch.scala 327:96]
    node _cache_req_valid_T_5 = eq(_cache_req_valid_T_4, UInt<1>("h0")) @[fetch.scala 327:81]
    node _cache_req_valid_T_6 = and(_cache_req_valid_T_3, _cache_req_valid_T_5) @[fetch.scala 327:79]
    cache.req.valid <= _cache_req_valid_T_6 @[fetch.scala 327:19]
    node _cache_resp_ready_T = eq(redirect_bit, UInt<1>("h1")) @[fetch.scala 328:36]
    node _cache_resp_ready_T_1 = or(_cache_resp_ready_T, toDecode.fired) @[fetch.scala 328:43]
    node _cache_resp_ready_T_2 = eq(handle_fenceI, UInt<1>("h0")) @[fetch.scala 328:64]
    node _cache_resp_ready_T_3 = and(_cache_resp_ready_T_1, _cache_resp_ready_T_2) @[fetch.scala 328:62]
    cache.resp.ready <= _cache_resp_ready_T_3 @[fetch.scala 328:20]
    updateAllCachelines.ready <= clear_cache_req @[fetch.scala 329:29]
    cachelinesUpdatesResp.ready <= cache_cleared @[fetch.scala 330:31]
    node _T_24 = eq(redirect_bit, UInt<1>("h1")) @[fetch.scala 332:33]
    node _T_25 = or(redirect, _T_24) @[fetch.scala 332:18]
    node _T_26 = eq(cache.resp.valid, UInt<1>("h0")) @[fetch.scala 332:43]
    node _T_27 = or(_T_25, _T_26) @[fetch.scala 332:40]
    node _T_28 = eq(PC_fifo.io.deq.valid, UInt<1>("h0")) @[fetch.scala 332:64]
    node _T_29 = or(_T_27, _T_28) @[fetch.scala 332:61]
    node _T_30 = eq(handle_fenceI, UInt<1>("h1")) @[fetch.scala 332:102]
    node _T_31 = or(_T_29, _T_30) @[fetch.scala 332:86]
    when _T_31 : @[fetch.scala 332:109]
      toDecode.ready <= UInt<1>("h0") @[fetch.scala 333:20]
    else :
      toDecode.ready <= UInt<1>("h1") @[fetch.scala 335:20]
    toDecode.instruction <= cache.resp.bits @[fetch.scala 338:24]
    node _predictor_requestSent_T = and(cache.req.valid, cache.req.ready) @[fetch.scala 340:44]
    predictor.requestSent <= _predictor_requestSent_T @[fetch.scala 340:25]
    reg misPredicted : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[fetch.scala 343:29]
    node _T_32 = eq(redirect_bit, UInt<1>("h0")) @[fetch.scala 344:21]
    node _T_33 = and(_T_32, PC_fifo.io.deq.valid) @[fetch.scala 344:28]
    when _T_33 : @[fetch.scala 344:51]
      node _misPredicted_T = eq(coherent, UInt<1>("h0")) @[fetch.scala 345:33]
      node _misPredicted_T_1 = and(redirect, _misPredicted_T) @[fetch.scala 345:30]
      misPredicted <= _misPredicted_T_1 @[fetch.scala 345:18]
    else :
      misPredicted <= UInt<1>("h0") @[fetch.scala 347:18]
    predictor.mispredicted <= misPredicted @[fetch.scala 350:26]
    node _T_34 = bits(handle_fenceI, 0, 0) @[fetch.scala 351:22]
    when _T_34 : @[fetch.scala 351:30]
      cache.resp.ready <= UInt<1>("h1") @[fetch.scala 351:49]

  module core_Anon :
    input clock : Clock
    input reset : Reset
    output fromFetch : { ready : UInt<1>, flip fired : UInt<1>, flip pc : UInt<64>, flip instruction : UInt<32>, expected : { valid : UInt<1>, pc : UInt<64>, coherency : UInt<1>}}
    output toExec : { ready : UInt<1>, flip fired : UInt<1>, instruction : UInt<32>, pc : UInt<64>, PRFDest : UInt<6>, rs1Addr : UInt<6>, rs1Ready : UInt<1>, rs2Addr : UInt<6>, rs2Ready : UInt<1>, immediate : UInt<64>, flip robAddr : UInt<4>, branchMask : UInt<5>}
    output writeBackResult : { ready : UInt<1>, flip fired : UInt<1>, flip pc : UInt<64>, flip instruction : UInt<32>, flip rdAddr : UInt<5>, flip PRFDest : UInt<6>, flip robAddr : UInt<4>, flip data : UInt<64>}
    output writeAddrPRF : { flip exec1Addr : UInt<6>, flip exec2Addr : UInt<6>, flip exec3Addr : UInt<6>, flip exec1Valid : UInt<1>, flip exec2Valid : UInt<1>, flip exec3Valid : UInt<1>}
    output jumpAddrWrite : { ready : UInt<1>, flip fired : UInt<1>, PRFDest : UInt<6>, linkAddr : UInt<64>}
    output branchPCs : { ready : UInt<1>, flip fired : UInt<1>, branchPCReady : UInt<1>, branchPC : UInt<64>, predictedPCReady : UInt<1>, predictedPC : UInt<64>, branchMask : UInt<5>}
    output branchEvalIn : { ready : UInt<1>, flip fired : UInt<1>, flip passFail : UInt<1>, flip branchMask : UInt<5>, flip targetPC : UInt<64>}
    output branchEvalOut : { ready : UInt<1>, flip fired : UInt<1>, passFail : UInt<1>, branchMask : UInt<4>}
    output retiredRenamedTable : { table : UInt<6>[32]}
    input interruptedPC : UInt<64>
    output freeCount : UInt<7>
    output canTakeInterrupt : UInt<1>
    output registersOut : UInt<64>[33]

    wire _inputBuffer_WIRE : { pc : UInt<64>, instruction : UInt<32>}
    _inputBuffer_WIRE.instruction <= UInt<1>("h0")
    _inputBuffer_WIRE.pc <= UInt<28>("hffffffc")
    reg inputBuffer : { pc : UInt<64>, instruction : UInt<32>}, clock with :
      reset => (reset, _inputBuffer_WIRE) @[decode.scala 111:28]
    wire _outputBuffer_WIRE : { instruction : UInt<32>, pc : UInt<64>, PRFDest : UInt<6>, rs1Addr : UInt<6>, rs2Addr : UInt<6>, immediate : UInt<64>, passFail : UInt<1>, branchMask : UInt<5>, branchEvalReady : UInt<1>}
    _outputBuffer_WIRE.branchEvalReady <= UInt<1>("h0")
    _outputBuffer_WIRE.branchMask <= UInt<1>("h0")
    _outputBuffer_WIRE.passFail <= UInt<1>("h0")
    _outputBuffer_WIRE.immediate <= UInt<1>("h0")
    _outputBuffer_WIRE.rs2Addr <= UInt<1>("h0")
    _outputBuffer_WIRE.rs1Addr <= UInt<1>("h0")
    _outputBuffer_WIRE.PRFDest <= UInt<1>("h0")
    _outputBuffer_WIRE.pc <= UInt<1>("h0")
    _outputBuffer_WIRE.instruction <= UInt<1>("h0")
    reg outputBuffer : { instruction : UInt<32>, pc : UInt<64>, PRFDest : UInt<6>, rs1Addr : UInt<6>, rs2Addr : UInt<6>, immediate : UInt<64>, passFail : UInt<1>, branchMask : UInt<5>, branchEvalReady : UInt<1>}, clock with :
      reset => (reset, _outputBuffer_WIRE) @[decode.scala 120:29]
    wire _branchBuffer_WIRE : { branchPCReady : UInt<1>, predictedPCReady : UInt<1>, branchPC : UInt<64>, predictedPC : UInt<64>, branchMask : UInt<1>[5]}
    _branchBuffer_WIRE.branchMask[0] <= UInt<1>("h0")
    _branchBuffer_WIRE.branchMask[1] <= UInt<1>("h0")
    _branchBuffer_WIRE.branchMask[2] <= UInt<1>("h0")
    _branchBuffer_WIRE.branchMask[3] <= UInt<1>("h0")
    _branchBuffer_WIRE.branchMask[4] <= UInt<1>("h1")
    _branchBuffer_WIRE.predictedPC <= UInt<1>("h0")
    _branchBuffer_WIRE.branchPC <= UInt<1>("h0")
    _branchBuffer_WIRE.predictedPCReady <= UInt<1>("h0")
    _branchBuffer_WIRE.branchPCReady <= UInt<1>("h0")
    reg branchBuffer : { branchPCReady : UInt<1>, predictedPCReady : UInt<1>, branchPC : UInt<64>, predictedPC : UInt<64>, branchMask : UInt<1>[5]}, clock with :
      reset => (reset, _branchBuffer_WIRE) @[decode.scala 142:29]
    wire opcode : UInt<7>
    opcode <= UInt<7>("h0")
    wire rs1 : UInt<5>
    rs1 <= UInt<5>("h0")
    wire rs2 : UInt<5>
    rs2 <= UInt<5>("h0")
    wire rd : UInt<5>
    rd <= UInt<5>("h0")
    wire fun3 : UInt<3>
    fun3 <= UInt<3>("h0")
    wire insType : UInt<3>
    insType <= UInt<3>("h0")
    wire immediate : UInt<64>
    immediate <= UInt<64>("h0")
    wire rs1Addr : UInt<6>
    rs1Addr <= UInt<6>("h0")
    wire rs2Addr : UInt<6>
    rs2Addr <= UInt<6>("h0")
    wire rs1Valid : UInt<1>
    rs1Valid <= UInt<1>("h0")
    wire rs2Valid : UInt<1>
    rs2Valid <= UInt<1>("h0")
    wire freeRegAddr : UInt<6>
    freeRegAddr <= UInt<6>("h0")
    reg branchTracker : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[decode.scala 178:30]
    wire ins : UInt<32>
    ins <= UInt<32>("h0")
    wire pc : UInt<64>
    pc <= UInt<64>("h0")
    wire validInputBuf : UInt<1>
    validInputBuf <= UInt<1>("h0")
    wire readyInputBuf : UInt<1>
    readyInputBuf <= UInt<1>("h0")
    wire validOutputBuf : UInt<1>
    validOutputBuf <= UInt<1>("h0")
    wire readyOutputBuf : UInt<1>
    readyOutputBuf <= UInt<1>("h0")
    reg expectedPC : UInt<64>, clock with :
      reset => (reset, UInt<64>("h10000000")) @[decode.scala 188:27]
    reg coherency : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[decode.scala 189:26]
    reg stateRegInputBuf : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[decode.scala 193:34]
    reg stateRegOutputBuf : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[decode.scala 194:34]
    reg stallReg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[decode.scala 196:25]
    reg ecallPC : UInt<64>, clock with :
      reset => (UInt<1>("h0"), ecallPC) @[decode.scala 197:20]
    wire _PRFValidList_WIRE : UInt<1>[64] @[decode.scala 199:37]
    _PRFValidList_WIRE[0] <= UInt<1>("h1") @[decode.scala 199:37]
    _PRFValidList_WIRE[1] <= UInt<1>("h1") @[decode.scala 199:37]
    _PRFValidList_WIRE[2] <= UInt<1>("h1") @[decode.scala 199:37]
    _PRFValidList_WIRE[3] <= UInt<1>("h1") @[decode.scala 199:37]
    _PRFValidList_WIRE[4] <= UInt<1>("h1") @[decode.scala 199:37]
    _PRFValidList_WIRE[5] <= UInt<1>("h1") @[decode.scala 199:37]
    _PRFValidList_WIRE[6] <= UInt<1>("h1") @[decode.scala 199:37]
    _PRFValidList_WIRE[7] <= UInt<1>("h1") @[decode.scala 199:37]
    _PRFValidList_WIRE[8] <= UInt<1>("h1") @[decode.scala 199:37]
    _PRFValidList_WIRE[9] <= UInt<1>("h1") @[decode.scala 199:37]
    _PRFValidList_WIRE[10] <= UInt<1>("h1") @[decode.scala 199:37]
    _PRFValidList_WIRE[11] <= UInt<1>("h1") @[decode.scala 199:37]
    _PRFValidList_WIRE[12] <= UInt<1>("h1") @[decode.scala 199:37]
    _PRFValidList_WIRE[13] <= UInt<1>("h1") @[decode.scala 199:37]
    _PRFValidList_WIRE[14] <= UInt<1>("h1") @[decode.scala 199:37]
    _PRFValidList_WIRE[15] <= UInt<1>("h1") @[decode.scala 199:37]
    _PRFValidList_WIRE[16] <= UInt<1>("h1") @[decode.scala 199:37]
    _PRFValidList_WIRE[17] <= UInt<1>("h1") @[decode.scala 199:37]
    _PRFValidList_WIRE[18] <= UInt<1>("h1") @[decode.scala 199:37]
    _PRFValidList_WIRE[19] <= UInt<1>("h1") @[decode.scala 199:37]
    _PRFValidList_WIRE[20] <= UInt<1>("h1") @[decode.scala 199:37]
    _PRFValidList_WIRE[21] <= UInt<1>("h1") @[decode.scala 199:37]
    _PRFValidList_WIRE[22] <= UInt<1>("h1") @[decode.scala 199:37]
    _PRFValidList_WIRE[23] <= UInt<1>("h1") @[decode.scala 199:37]
    _PRFValidList_WIRE[24] <= UInt<1>("h1") @[decode.scala 199:37]
    _PRFValidList_WIRE[25] <= UInt<1>("h1") @[decode.scala 199:37]
    _PRFValidList_WIRE[26] <= UInt<1>("h1") @[decode.scala 199:37]
    _PRFValidList_WIRE[27] <= UInt<1>("h1") @[decode.scala 199:37]
    _PRFValidList_WIRE[28] <= UInt<1>("h1") @[decode.scala 199:37]
    _PRFValidList_WIRE[29] <= UInt<1>("h1") @[decode.scala 199:37]
    _PRFValidList_WIRE[30] <= UInt<1>("h1") @[decode.scala 199:37]
    _PRFValidList_WIRE[31] <= UInt<1>("h1") @[decode.scala 199:37]
    _PRFValidList_WIRE[32] <= UInt<1>("h0") @[decode.scala 199:37]
    _PRFValidList_WIRE[33] <= UInt<1>("h0") @[decode.scala 199:37]
    _PRFValidList_WIRE[34] <= UInt<1>("h0") @[decode.scala 199:37]
    _PRFValidList_WIRE[35] <= UInt<1>("h0") @[decode.scala 199:37]
    _PRFValidList_WIRE[36] <= UInt<1>("h0") @[decode.scala 199:37]
    _PRFValidList_WIRE[37] <= UInt<1>("h0") @[decode.scala 199:37]
    _PRFValidList_WIRE[38] <= UInt<1>("h0") @[decode.scala 199:37]
    _PRFValidList_WIRE[39] <= UInt<1>("h0") @[decode.scala 199:37]
    _PRFValidList_WIRE[40] <= UInt<1>("h0") @[decode.scala 199:37]
    _PRFValidList_WIRE[41] <= UInt<1>("h0") @[decode.scala 199:37]
    _PRFValidList_WIRE[42] <= UInt<1>("h0") @[decode.scala 199:37]
    _PRFValidList_WIRE[43] <= UInt<1>("h0") @[decode.scala 199:37]
    _PRFValidList_WIRE[44] <= UInt<1>("h0") @[decode.scala 199:37]
    _PRFValidList_WIRE[45] <= UInt<1>("h0") @[decode.scala 199:37]
    _PRFValidList_WIRE[46] <= UInt<1>("h0") @[decode.scala 199:37]
    _PRFValidList_WIRE[47] <= UInt<1>("h0") @[decode.scala 199:37]
    _PRFValidList_WIRE[48] <= UInt<1>("h0") @[decode.scala 199:37]
    _PRFValidList_WIRE[49] <= UInt<1>("h0") @[decode.scala 199:37]
    _PRFValidList_WIRE[50] <= UInt<1>("h0") @[decode.scala 199:37]
    _PRFValidList_WIRE[51] <= UInt<1>("h0") @[decode.scala 199:37]
    _PRFValidList_WIRE[52] <= UInt<1>("h0") @[decode.scala 199:37]
    _PRFValidList_WIRE[53] <= UInt<1>("h0") @[decode.scala 199:37]
    _PRFValidList_WIRE[54] <= UInt<1>("h0") @[decode.scala 199:37]
    _PRFValidList_WIRE[55] <= UInt<1>("h0") @[decode.scala 199:37]
    _PRFValidList_WIRE[56] <= UInt<1>("h0") @[decode.scala 199:37]
    _PRFValidList_WIRE[57] <= UInt<1>("h0") @[decode.scala 199:37]
    _PRFValidList_WIRE[58] <= UInt<1>("h0") @[decode.scala 199:37]
    _PRFValidList_WIRE[59] <= UInt<1>("h0") @[decode.scala 199:37]
    _PRFValidList_WIRE[60] <= UInt<1>("h0") @[decode.scala 199:37]
    _PRFValidList_WIRE[61] <= UInt<1>("h0") @[decode.scala 199:37]
    _PRFValidList_WIRE[62] <= UInt<1>("h0") @[decode.scala 199:37]
    _PRFValidList_WIRE[63] <= UInt<1>("h0") @[decode.scala 199:37]
    reg PRFValidList : UInt<1>[64], clock with :
      reset => (reset, _PRFValidList_WIRE) @[decode.scala 199:29]
    node _T = and(fromFetch.fired, readyInputBuf) @[decode.scala 202:24]
    when _T : @[decode.scala 202:42]
      inputBuffer.instruction <= fromFetch.instruction @[decode.scala 203:29]
      inputBuffer.pc <= fromFetch.pc @[decode.scala 204:29]
      node _T_1 = bits(fromFetch.instruction, 6, 0) @[decode.scala 205:31]
      node _T_2 = eq(_T_1, UInt<7>("h73")) @[decode.scala 205:37]
      when _T_2 : @[decode.scala 205:97]
        stallReg <= UInt<1>("h1") @[decode.scala 206:16]
        ecallPC <= fromFetch.pc @[decode.scala 207:15]
    node _T_3 = and(validInputBuf, readyOutputBuf) @[decode.scala 212:22]
    when _T_3 : @[decode.scala 212:41]
      outputBuffer.instruction <= ins @[decode.scala 213:30]
      outputBuffer.pc <= pc @[decode.scala 214:30]
      outputBuffer.PRFDest <= freeRegAddr @[decode.scala 215:30]
      outputBuffer.rs1Addr <= rs1Addr @[decode.scala 216:30]
      outputBuffer.rs2Addr <= rs2Addr @[decode.scala 217:30]
      outputBuffer.immediate <= immediate @[decode.scala 218:30]
    outputBuffer.branchEvalReady <= branchEvalIn.fired @[decode.scala 221:32]
    outputBuffer.passFail <= branchEvalIn.passFail @[decode.scala 222:32]
    outputBuffer.branchMask <= branchEvalIn.branchMask @[decode.scala 223:32]
    reg branchPCMask : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[decode.scala 225:29]
    reg branchReg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[decode.scala 226:29]
    wire stall : UInt<1>
    stall <= UInt<1>("h0")
    wire isCSR : UInt<1>
    isCSR <= UInt<1>("h0")
    wire waitToCommit : UInt<1>
    waitToCommit <= UInt<1>("h0")
    reg issueRobBuff : UInt<4>, clock with :
      reset => (reset, UInt<4>("h0")) @[decode.scala 232:29]
    reg commitRobBuf : UInt<4>, clock with :
      reset => (reset, UInt<4>("h0")) @[decode.scala 233:29]
    reg csrDone : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[decode.scala 234:24]
    wire unconditionalJumps : UInt<1>
    unconditionalJumps <= UInt<1>("h0")
    wire csrIns : UInt<1>
    csrIns <= UInt<1>("h0")
    reg csrRobAddrReg : UInt<4>, clock with :
      reset => (reset, UInt<4>("h0")) @[decode.scala 239:30]
    reg csrReadDataReg : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[decode.scala 240:31]
    reg csrFunc3Reg : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[decode.scala 241:28]
    reg csrAddrReg : UInt<12>, clock with :
      reset => (reset, UInt<12>("h0")) @[decode.scala 242:27]
    reg csrImmReg : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[decode.scala 243:26]
    reg csrInsReg : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[decode.scala 244:26]
    toExec.ready <= validOutputBuf @[decode.scala 249:22]
    toExec.instruction <= outputBuffer.instruction @[decode.scala 250:22]
    toExec.pc <= outputBuffer.pc @[decode.scala 251:22]
    toExec.PRFDest <= outputBuffer.PRFDest @[decode.scala 252:22]
    toExec.rs1Addr <= outputBuffer.rs1Addr @[decode.scala 253:22]
    toExec.rs1Ready <= PRFValidList[outputBuffer.rs1Addr] @[decode.scala 254:22]
    toExec.rs2Addr <= outputBuffer.rs2Addr @[decode.scala 255:22]
    node _toExec_rs2Ready_T = bits(outputBuffer.instruction, 6, 0) @[decode.scala 256:139]
    wire toExec_rs2Ready_insType : UInt<3>
    toExec_rs2Ready_insType <= UInt<3>("h0")
    node _toExec_rs2Ready_T_1 = eq(UInt<6>("h37"), _toExec_rs2Ready_T) @[utils.scala 10:20]
    when _toExec_rs2Ready_T_1 : @[utils.scala 10:20]
      toExec_rs2Ready_insType <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _toExec_rs2Ready_T_2 = eq(UInt<5>("h17"), _toExec_rs2Ready_T) @[utils.scala 10:20]
      when _toExec_rs2Ready_T_2 : @[utils.scala 10:20]
        toExec_rs2Ready_insType <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _toExec_rs2Ready_T_3 = eq(UInt<7>("h6f"), _toExec_rs2Ready_T) @[utils.scala 10:20]
        when _toExec_rs2Ready_T_3 : @[utils.scala 10:20]
          toExec_rs2Ready_insType <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _toExec_rs2Ready_T_4 = eq(UInt<7>("h67"), _toExec_rs2Ready_T) @[utils.scala 10:20]
          when _toExec_rs2Ready_T_4 : @[utils.scala 10:20]
            toExec_rs2Ready_insType <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _toExec_rs2Ready_T_5 = eq(UInt<7>("h63"), _toExec_rs2Ready_T) @[utils.scala 10:20]
            when _toExec_rs2Ready_T_5 : @[utils.scala 10:20]
              toExec_rs2Ready_insType <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _toExec_rs2Ready_T_6 = eq(UInt<2>("h3"), _toExec_rs2Ready_T) @[utils.scala 10:20]
              when _toExec_rs2Ready_T_6 : @[utils.scala 10:20]
                toExec_rs2Ready_insType <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _toExec_rs2Ready_T_7 = eq(UInt<6>("h23"), _toExec_rs2Ready_T) @[utils.scala 10:20]
                when _toExec_rs2Ready_T_7 : @[utils.scala 10:20]
                  toExec_rs2Ready_insType <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _toExec_rs2Ready_T_8 = eq(UInt<5>("h13"), _toExec_rs2Ready_T) @[utils.scala 10:20]
                  when _toExec_rs2Ready_T_8 : @[utils.scala 10:20]
                    toExec_rs2Ready_insType <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _toExec_rs2Ready_T_9 = eq(UInt<5>("h1b"), _toExec_rs2Ready_T) @[utils.scala 10:20]
                    when _toExec_rs2Ready_T_9 : @[utils.scala 10:20]
                      toExec_rs2Ready_insType <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _toExec_rs2Ready_T_10 = eq(UInt<6>("h33"), _toExec_rs2Ready_T) @[utils.scala 10:20]
                      when _toExec_rs2Ready_T_10 : @[utils.scala 10:20]
                        toExec_rs2Ready_insType <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _toExec_rs2Ready_T_11 = eq(UInt<6>("h3b"), _toExec_rs2Ready_T) @[utils.scala 10:20]
                        when _toExec_rs2Ready_T_11 : @[utils.scala 10:20]
                          toExec_rs2Ready_insType <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _toExec_rs2Ready_T_12 = eq(UInt<7>("h73"), _toExec_rs2Ready_T) @[utils.scala 10:20]
                          when _toExec_rs2Ready_T_12 : @[utils.scala 10:20]
                            toExec_rs2Ready_insType <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _toExec_rs2Ready_T_13 = eq(UInt<4>("hf"), _toExec_rs2Ready_T) @[utils.scala 10:20]
                            when _toExec_rs2Ready_T_13 : @[utils.scala 10:20]
                              toExec_rs2Ready_insType <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _toExec_rs2Ready_T_14 = eq(UInt<6>("h2f"), _toExec_rs2Ready_T) @[utils.scala 10:20]
                              when _toExec_rs2Ready_T_14 : @[utils.scala 10:20]
                                toExec_rs2Ready_insType <= UInt<1>("h0") @[utils.scala 51:17]
    node _toExec_rs2Ready_T_15 = eq(UInt<1>("h1"), toExec_rs2Ready_insType) @[decode.scala 256:100]
    node _toExec_rs2Ready_T_16 = bits(outputBuffer.instruction, 6, 0) @[decode.scala 256:139]
    wire toExec_rs2Ready_insType_1 : UInt<3>
    toExec_rs2Ready_insType_1 <= UInt<3>("h0")
    node _toExec_rs2Ready_T_17 = eq(UInt<6>("h37"), _toExec_rs2Ready_T_16) @[utils.scala 10:20]
    when _toExec_rs2Ready_T_17 : @[utils.scala 10:20]
      toExec_rs2Ready_insType_1 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _toExec_rs2Ready_T_18 = eq(UInt<5>("h17"), _toExec_rs2Ready_T_16) @[utils.scala 10:20]
      when _toExec_rs2Ready_T_18 : @[utils.scala 10:20]
        toExec_rs2Ready_insType_1 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _toExec_rs2Ready_T_19 = eq(UInt<7>("h6f"), _toExec_rs2Ready_T_16) @[utils.scala 10:20]
        when _toExec_rs2Ready_T_19 : @[utils.scala 10:20]
          toExec_rs2Ready_insType_1 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _toExec_rs2Ready_T_20 = eq(UInt<7>("h67"), _toExec_rs2Ready_T_16) @[utils.scala 10:20]
          when _toExec_rs2Ready_T_20 : @[utils.scala 10:20]
            toExec_rs2Ready_insType_1 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _toExec_rs2Ready_T_21 = eq(UInt<7>("h63"), _toExec_rs2Ready_T_16) @[utils.scala 10:20]
            when _toExec_rs2Ready_T_21 : @[utils.scala 10:20]
              toExec_rs2Ready_insType_1 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _toExec_rs2Ready_T_22 = eq(UInt<2>("h3"), _toExec_rs2Ready_T_16) @[utils.scala 10:20]
              when _toExec_rs2Ready_T_22 : @[utils.scala 10:20]
                toExec_rs2Ready_insType_1 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _toExec_rs2Ready_T_23 = eq(UInt<6>("h23"), _toExec_rs2Ready_T_16) @[utils.scala 10:20]
                when _toExec_rs2Ready_T_23 : @[utils.scala 10:20]
                  toExec_rs2Ready_insType_1 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _toExec_rs2Ready_T_24 = eq(UInt<5>("h13"), _toExec_rs2Ready_T_16) @[utils.scala 10:20]
                  when _toExec_rs2Ready_T_24 : @[utils.scala 10:20]
                    toExec_rs2Ready_insType_1 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _toExec_rs2Ready_T_25 = eq(UInt<5>("h1b"), _toExec_rs2Ready_T_16) @[utils.scala 10:20]
                    when _toExec_rs2Ready_T_25 : @[utils.scala 10:20]
                      toExec_rs2Ready_insType_1 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _toExec_rs2Ready_T_26 = eq(UInt<6>("h33"), _toExec_rs2Ready_T_16) @[utils.scala 10:20]
                      when _toExec_rs2Ready_T_26 : @[utils.scala 10:20]
                        toExec_rs2Ready_insType_1 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _toExec_rs2Ready_T_27 = eq(UInt<6>("h3b"), _toExec_rs2Ready_T_16) @[utils.scala 10:20]
                        when _toExec_rs2Ready_T_27 : @[utils.scala 10:20]
                          toExec_rs2Ready_insType_1 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _toExec_rs2Ready_T_28 = eq(UInt<7>("h73"), _toExec_rs2Ready_T_16) @[utils.scala 10:20]
                          when _toExec_rs2Ready_T_28 : @[utils.scala 10:20]
                            toExec_rs2Ready_insType_1 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _toExec_rs2Ready_T_29 = eq(UInt<4>("hf"), _toExec_rs2Ready_T_16) @[utils.scala 10:20]
                            when _toExec_rs2Ready_T_29 : @[utils.scala 10:20]
                              toExec_rs2Ready_insType_1 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _toExec_rs2Ready_T_30 = eq(UInt<6>("h2f"), _toExec_rs2Ready_T_16) @[utils.scala 10:20]
                              when _toExec_rs2Ready_T_30 : @[utils.scala 10:20]
                                toExec_rs2Ready_insType_1 <= UInt<1>("h0") @[utils.scala 51:17]
    node _toExec_rs2Ready_T_31 = eq(UInt<3>("h4"), toExec_rs2Ready_insType_1) @[decode.scala 256:100]
    node _toExec_rs2Ready_T_32 = bits(outputBuffer.instruction, 6, 0) @[decode.scala 256:139]
    wire toExec_rs2Ready_insType_2 : UInt<3>
    toExec_rs2Ready_insType_2 <= UInt<3>("h0")
    node _toExec_rs2Ready_T_33 = eq(UInt<6>("h37"), _toExec_rs2Ready_T_32) @[utils.scala 10:20]
    when _toExec_rs2Ready_T_33 : @[utils.scala 10:20]
      toExec_rs2Ready_insType_2 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _toExec_rs2Ready_T_34 = eq(UInt<5>("h17"), _toExec_rs2Ready_T_32) @[utils.scala 10:20]
      when _toExec_rs2Ready_T_34 : @[utils.scala 10:20]
        toExec_rs2Ready_insType_2 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _toExec_rs2Ready_T_35 = eq(UInt<7>("h6f"), _toExec_rs2Ready_T_32) @[utils.scala 10:20]
        when _toExec_rs2Ready_T_35 : @[utils.scala 10:20]
          toExec_rs2Ready_insType_2 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _toExec_rs2Ready_T_36 = eq(UInt<7>("h67"), _toExec_rs2Ready_T_32) @[utils.scala 10:20]
          when _toExec_rs2Ready_T_36 : @[utils.scala 10:20]
            toExec_rs2Ready_insType_2 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _toExec_rs2Ready_T_37 = eq(UInt<7>("h63"), _toExec_rs2Ready_T_32) @[utils.scala 10:20]
            when _toExec_rs2Ready_T_37 : @[utils.scala 10:20]
              toExec_rs2Ready_insType_2 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _toExec_rs2Ready_T_38 = eq(UInt<2>("h3"), _toExec_rs2Ready_T_32) @[utils.scala 10:20]
              when _toExec_rs2Ready_T_38 : @[utils.scala 10:20]
                toExec_rs2Ready_insType_2 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _toExec_rs2Ready_T_39 = eq(UInt<6>("h23"), _toExec_rs2Ready_T_32) @[utils.scala 10:20]
                when _toExec_rs2Ready_T_39 : @[utils.scala 10:20]
                  toExec_rs2Ready_insType_2 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _toExec_rs2Ready_T_40 = eq(UInt<5>("h13"), _toExec_rs2Ready_T_32) @[utils.scala 10:20]
                  when _toExec_rs2Ready_T_40 : @[utils.scala 10:20]
                    toExec_rs2Ready_insType_2 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _toExec_rs2Ready_T_41 = eq(UInt<5>("h1b"), _toExec_rs2Ready_T_32) @[utils.scala 10:20]
                    when _toExec_rs2Ready_T_41 : @[utils.scala 10:20]
                      toExec_rs2Ready_insType_2 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _toExec_rs2Ready_T_42 = eq(UInt<6>("h33"), _toExec_rs2Ready_T_32) @[utils.scala 10:20]
                      when _toExec_rs2Ready_T_42 : @[utils.scala 10:20]
                        toExec_rs2Ready_insType_2 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _toExec_rs2Ready_T_43 = eq(UInt<6>("h3b"), _toExec_rs2Ready_T_32) @[utils.scala 10:20]
                        when _toExec_rs2Ready_T_43 : @[utils.scala 10:20]
                          toExec_rs2Ready_insType_2 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _toExec_rs2Ready_T_44 = eq(UInt<7>("h73"), _toExec_rs2Ready_T_32) @[utils.scala 10:20]
                          when _toExec_rs2Ready_T_44 : @[utils.scala 10:20]
                            toExec_rs2Ready_insType_2 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _toExec_rs2Ready_T_45 = eq(UInt<4>("hf"), _toExec_rs2Ready_T_32) @[utils.scala 10:20]
                            when _toExec_rs2Ready_T_45 : @[utils.scala 10:20]
                              toExec_rs2Ready_insType_2 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _toExec_rs2Ready_T_46 = eq(UInt<6>("h2f"), _toExec_rs2Ready_T_32) @[utils.scala 10:20]
                              when _toExec_rs2Ready_T_46 : @[utils.scala 10:20]
                                toExec_rs2Ready_insType_2 <= UInt<1>("h0") @[utils.scala 51:17]
    node _toExec_rs2Ready_T_47 = eq(UInt<3>("h5"), toExec_rs2Ready_insType_2) @[decode.scala 256:100]
    node _toExec_rs2Ready_T_48 = or(_toExec_rs2Ready_T_15, _toExec_rs2Ready_T_31) @[decode.scala 256:156]
    node _toExec_rs2Ready_T_49 = or(_toExec_rs2Ready_T_48, _toExec_rs2Ready_T_47) @[decode.scala 256:156]
    node _toExec_rs2Ready_T_50 = or(PRFValidList[outputBuffer.rs2Addr], _toExec_rs2Ready_T_49) @[decode.scala 256:60]
    toExec.rs2Ready <= _toExec_rs2Ready_T_50 @[decode.scala 256:22]
    toExec.immediate <= outputBuffer.immediate @[decode.scala 257:22]
    node toExec_branchMask_lo = cat(branchBuffer.branchMask[1], branchBuffer.branchMask[0]) @[decode.scala 258:49]
    node toExec_branchMask_hi_hi = cat(branchBuffer.branchMask[4], branchBuffer.branchMask[3]) @[decode.scala 258:49]
    node toExec_branchMask_hi = cat(toExec_branchMask_hi_hi, branchBuffer.branchMask[2]) @[decode.scala 258:49]
    node _toExec_branchMask_T = cat(toExec_branchMask_hi, toExec_branchMask_lo) @[decode.scala 258:49]
    toExec.branchMask <= _toExec_branchMask_T @[decode.scala 258:22]
    fromFetch.ready <= readyInputBuf @[decode.scala 260:28]
    node _fromFetch_expected_valid_T = neq(expectedPC, UInt<1>("h0")) @[decode.scala 261:42]
    fromFetch.expected.valid <= _fromFetch_expected_valid_T @[decode.scala 261:28]
    fromFetch.expected.pc <= expectedPC @[decode.scala 262:28]
    fromFetch.expected.coherency <= coherency @[decode.scala 263:32]
    node _jumpAddrWrite_ready_T = or(unconditionalJumps, csrIns) @[decode.scala 265:67]
    node _jumpAddrWrite_ready_T_1 = and(validOutputBuf, _jumpAddrWrite_ready_T) @[decode.scala 265:44]
    jumpAddrWrite.ready <= _jumpAddrWrite_ready_T_1 @[decode.scala 265:26]
    jumpAddrWrite.PRFDest <= outputBuffer.PRFDest @[decode.scala 266:26]
    when unconditionalJumps : @[decode.scala 267:28]
      node _jumpAddrWrite_linkAddr_T = bits(outputBuffer.instruction, 31, 31) @[decode.scala 269:63]
      node _jumpAddrWrite_linkAddr_T_1 = bits(_jumpAddrWrite_linkAddr_T, 0, 0) @[Bitwise.scala 77:15]
      node _jumpAddrWrite_linkAddr_T_2 = mux(_jumpAddrWrite_linkAddr_T_1, UInt<32>("hffffffff"), UInt<32>("h0")) @[Bitwise.scala 77:12]
      node _jumpAddrWrite_linkAddr_T_3 = bits(outputBuffer.instruction, 31, 12) @[decode.scala 269:94]
      node jumpAddrWrite_linkAddr_hi = cat(_jumpAddrWrite_linkAddr_T_2, _jumpAddrWrite_linkAddr_T_3) @[Cat.scala 33:92]
      node _jumpAddrWrite_linkAddr_T_4 = cat(jumpAddrWrite_linkAddr_hi, UInt<12>("h0")) @[Cat.scala 33:92]
      node _jumpAddrWrite_linkAddr_T_5 = add(outputBuffer.pc, _jumpAddrWrite_linkAddr_T_4) @[decode.scala 269:24]
      node _jumpAddrWrite_linkAddr_T_6 = tail(_jumpAddrWrite_linkAddr_T_5, 1) @[decode.scala 269:24]
      node _jumpAddrWrite_linkAddr_T_7 = bits(outputBuffer.instruction, 31, 31) @[decode.scala 270:44]
      node _jumpAddrWrite_linkAddr_T_8 = bits(_jumpAddrWrite_linkAddr_T_7, 0, 0) @[Bitwise.scala 77:15]
      node _jumpAddrWrite_linkAddr_T_9 = mux(_jumpAddrWrite_linkAddr_T_8, UInt<32>("hffffffff"), UInt<32>("h0")) @[Bitwise.scala 77:12]
      node _jumpAddrWrite_linkAddr_T_10 = bits(outputBuffer.instruction, 31, 12) @[decode.scala 270:75]
      node jumpAddrWrite_linkAddr_hi_1 = cat(_jumpAddrWrite_linkAddr_T_9, _jumpAddrWrite_linkAddr_T_10) @[Cat.scala 33:92]
      node _jumpAddrWrite_linkAddr_T_11 = cat(jumpAddrWrite_linkAddr_hi_1, UInt<12>("h0")) @[Cat.scala 33:92]
      node _jumpAddrWrite_linkAddr_T_12 = add(outputBuffer.pc, UInt<3>("h4")) @[decode.scala 272:23]
      node _jumpAddrWrite_linkAddr_T_13 = tail(_jumpAddrWrite_linkAddr_T_12, 1) @[decode.scala 272:23]
      wire _jumpAddrWrite_linkAddr_WIRE : UInt<64>[4] @[decode.scala 268:38]
      _jumpAddrWrite_linkAddr_WIRE[0] <= _jumpAddrWrite_linkAddr_T_6 @[decode.scala 268:38]
      _jumpAddrWrite_linkAddr_WIRE[1] <= _jumpAddrWrite_linkAddr_T_11 @[decode.scala 268:38]
      _jumpAddrWrite_linkAddr_WIRE[2] <= UInt<1>("h0") @[decode.scala 268:38]
      _jumpAddrWrite_linkAddr_WIRE[3] <= _jumpAddrWrite_linkAddr_T_13 @[decode.scala 268:38]
      node _jumpAddrWrite_linkAddr_T_14 = bits(outputBuffer.instruction, 6, 5) @[decode.scala 272:54]
      jumpAddrWrite.linkAddr <= _jumpAddrWrite_linkAddr_WIRE[_jumpAddrWrite_linkAddr_T_14] @[decode.scala 268:28]
    else :
      jumpAddrWrite.linkAddr <= csrReadDataReg @[decode.scala 274:28]
    node _branchPCs_ready_T = or(branchBuffer.branchPCReady, branchBuffer.predictedPCReady) @[decode.scala 278:60]
    branchPCs.ready <= _branchPCs_ready_T @[decode.scala 278:30]
    branchPCs.branchPCReady <= branchBuffer.branchPCReady @[decode.scala 279:30]
    branchPCs.predictedPCReady <= branchBuffer.predictedPCReady @[decode.scala 280:30]
    branchPCs.branchPC <= branchBuffer.branchPC @[decode.scala 281:30]
    branchPCs.predictedPC <= branchBuffer.predictedPC @[decode.scala 282:30]
    branchPCs.branchMask <= branchPCMask @[decode.scala 283:30]
    branchEvalOut.ready <= outputBuffer.branchEvalReady @[decode.scala 285:28]
    branchEvalOut.branchMask <= outputBuffer.branchMask @[decode.scala 286:28]
    branchEvalOut.passFail <= outputBuffer.passFail @[decode.scala 287:28]
    branchEvalIn.ready <= UInt<1>("h1") @[decode.scala 289:25]
    writeBackResult.ready <= UInt<1>("h1") @[decode.scala 290:25]
    ins <= inputBuffer.instruction @[decode.scala 293:7]
    pc <= inputBuffer.pc @[decode.scala 294:7]
    node _opcode_T = bits(ins, 6, 0) @[decode.scala 296:16]
    opcode <= _opcode_T @[decode.scala 296:10]
    node _rs1_T = bits(ins, 19, 15) @[decode.scala 297:16]
    rs1 <= _rs1_T @[decode.scala 297:10]
    node _rs2_T = bits(ins, 24, 20) @[decode.scala 298:16]
    rs2 <= _rs2_T @[decode.scala 298:10]
    node _rd_T = bits(ins, 11, 7) @[decode.scala 299:16]
    rd <= _rd_T @[decode.scala 299:10]
    node _fun3_T = bits(ins, 14, 12) @[decode.scala 300:16]
    fun3 <= _fun3_T @[decode.scala 300:10]
    wire insType_insType : UInt<3>
    insType_insType <= UInt<3>("h0")
    node _insType_T = eq(UInt<6>("h37"), opcode) @[utils.scala 10:20]
    when _insType_T : @[utils.scala 10:20]
      insType_insType <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _insType_T_1 = eq(UInt<5>("h17"), opcode) @[utils.scala 10:20]
      when _insType_T_1 : @[utils.scala 10:20]
        insType_insType <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _insType_T_2 = eq(UInt<7>("h6f"), opcode) @[utils.scala 10:20]
        when _insType_T_2 : @[utils.scala 10:20]
          insType_insType <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _insType_T_3 = eq(UInt<7>("h67"), opcode) @[utils.scala 10:20]
          when _insType_T_3 : @[utils.scala 10:20]
            insType_insType <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _insType_T_4 = eq(UInt<7>("h63"), opcode) @[utils.scala 10:20]
            when _insType_T_4 : @[utils.scala 10:20]
              insType_insType <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _insType_T_5 = eq(UInt<2>("h3"), opcode) @[utils.scala 10:20]
              when _insType_T_5 : @[utils.scala 10:20]
                insType_insType <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _insType_T_6 = eq(UInt<6>("h23"), opcode) @[utils.scala 10:20]
                when _insType_T_6 : @[utils.scala 10:20]
                  insType_insType <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _insType_T_7 = eq(UInt<5>("h13"), opcode) @[utils.scala 10:20]
                  when _insType_T_7 : @[utils.scala 10:20]
                    insType_insType <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _insType_T_8 = eq(UInt<5>("h1b"), opcode) @[utils.scala 10:20]
                    when _insType_T_8 : @[utils.scala 10:20]
                      insType_insType <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _insType_T_9 = eq(UInt<6>("h33"), opcode) @[utils.scala 10:20]
                      when _insType_T_9 : @[utils.scala 10:20]
                        insType_insType <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _insType_T_10 = eq(UInt<6>("h3b"), opcode) @[utils.scala 10:20]
                        when _insType_T_10 : @[utils.scala 10:20]
                          insType_insType <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _insType_T_11 = eq(UInt<7>("h73"), opcode) @[utils.scala 10:20]
                          when _insType_T_11 : @[utils.scala 10:20]
                            insType_insType <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _insType_T_12 = eq(UInt<4>("hf"), opcode) @[utils.scala 10:20]
                            when _insType_T_12 : @[utils.scala 10:20]
                              insType_insType <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _insType_T_13 = eq(UInt<6>("h2f"), opcode) @[utils.scala 10:20]
                              when _insType_T_13 : @[utils.scala 10:20]
                                insType_insType <= UInt<1>("h0") @[utils.scala 51:17]
    insType <= insType_insType @[decode.scala 302:13]
    wire immediate_immediate : UInt<64>
    immediate_immediate <= UInt<64>("h0")
    node _immediate_T = eq(UInt<1>("h1"), insType) @[utils.scala 59:29]
    when _immediate_T : @[utils.scala 59:29]
      node _immediate_immediate_T = bits(ins, 31, 31) @[utils.scala 61:46]
      node _immediate_immediate_T_1 = bits(_immediate_immediate_T, 0, 0) @[Bitwise.scala 77:15]
      node _immediate_immediate_T_2 = mux(_immediate_immediate_T_1, UInt<53>("h1fffffffffffff"), UInt<53>("h0")) @[Bitwise.scala 77:12]
      node _immediate_immediate_T_3 = bits(ins, 30, 20) @[utils.scala 61:64]
      node _immediate_immediate_T_4 = cat(_immediate_immediate_T_2, _immediate_immediate_T_3) @[Cat.scala 33:92]
      immediate_immediate <= _immediate_immediate_T_4 @[utils.scala 61:19]
    else :
      node _immediate_T_1 = eq(UInt<2>("h2"), insType) @[utils.scala 59:29]
      when _immediate_T_1 : @[utils.scala 59:29]
        node _immediate_immediate_T_5 = bits(ins, 31, 31) @[utils.scala 64:46]
        node _immediate_immediate_T_6 = bits(_immediate_immediate_T_5, 0, 0) @[Bitwise.scala 77:15]
        node _immediate_immediate_T_7 = mux(_immediate_immediate_T_6, UInt<53>("h1fffffffffffff"), UInt<53>("h0")) @[Bitwise.scala 77:12]
        node _immediate_immediate_T_8 = bits(ins, 30, 25) @[utils.scala 64:64]
        node _immediate_immediate_T_9 = bits(ins, 11, 7) @[utils.scala 64:85]
        node immediate_immediate_hi = cat(_immediate_immediate_T_7, _immediate_immediate_T_8) @[Cat.scala 33:92]
        node _immediate_immediate_T_10 = cat(immediate_immediate_hi, _immediate_immediate_T_9) @[Cat.scala 33:92]
        immediate_immediate <= _immediate_immediate_T_10 @[utils.scala 64:19]
      else :
        node _immediate_T_2 = eq(UInt<2>("h3"), insType) @[utils.scala 59:29]
        when _immediate_T_2 : @[utils.scala 59:29]
          node _immediate_immediate_T_11 = bits(ins, 31, 31) @[utils.scala 67:46]
          node _immediate_immediate_T_12 = bits(_immediate_immediate_T_11, 0, 0) @[Bitwise.scala 77:15]
          node _immediate_immediate_T_13 = mux(_immediate_immediate_T_12, UInt<53>("h1fffffffffffff"), UInt<53>("h0")) @[Bitwise.scala 77:12]
          node _immediate_immediate_T_14 = bits(ins, 7, 7) @[utils.scala 67:64]
          node _immediate_immediate_T_15 = bits(ins, 30, 25) @[utils.scala 67:80]
          node _immediate_immediate_T_16 = bits(ins, 11, 8) @[utils.scala 67:101]
          node immediate_immediate_lo = cat(_immediate_immediate_T_16, UInt<1>("h0")) @[Cat.scala 33:92]
          node immediate_immediate_hi_hi = cat(_immediate_immediate_T_13, _immediate_immediate_T_14) @[Cat.scala 33:92]
          node immediate_immediate_hi_1 = cat(immediate_immediate_hi_hi, _immediate_immediate_T_15) @[Cat.scala 33:92]
          node _immediate_immediate_T_17 = cat(immediate_immediate_hi_1, immediate_immediate_lo) @[Cat.scala 33:92]
          immediate_immediate <= _immediate_immediate_T_17 @[utils.scala 67:19]
        else :
          node _immediate_T_3 = eq(UInt<3>("h4"), insType) @[utils.scala 59:29]
          when _immediate_T_3 : @[utils.scala 59:29]
            node _immediate_immediate_T_18 = bits(ins, 31, 31) @[utils.scala 70:46]
            node _immediate_immediate_T_19 = bits(_immediate_immediate_T_18, 0, 0) @[Bitwise.scala 77:15]
            node _immediate_immediate_T_20 = mux(_immediate_immediate_T_19, UInt<32>("hffffffff"), UInt<32>("h0")) @[Bitwise.scala 77:12]
            node _immediate_immediate_T_21 = bits(ins, 31, 12) @[utils.scala 70:64]
            node immediate_immediate_hi_2 = cat(_immediate_immediate_T_20, _immediate_immediate_T_21) @[Cat.scala 33:92]
            node _immediate_immediate_T_22 = cat(immediate_immediate_hi_2, UInt<12>("h0")) @[Cat.scala 33:92]
            immediate_immediate <= _immediate_immediate_T_22 @[utils.scala 70:19]
          else :
            node _immediate_T_4 = eq(UInt<3>("h5"), insType) @[utils.scala 59:29]
            when _immediate_T_4 : @[utils.scala 59:29]
              node _immediate_immediate_T_23 = bits(ins, 31, 31) @[utils.scala 73:46]
              node _immediate_immediate_T_24 = bits(_immediate_immediate_T_23, 0, 0) @[Bitwise.scala 77:15]
              node _immediate_immediate_T_25 = mux(_immediate_immediate_T_24, UInt<44>("hfffffffffff"), UInt<44>("h0")) @[Bitwise.scala 77:12]
              node _immediate_immediate_T_26 = bits(ins, 19, 12) @[utils.scala 73:64]
              node _immediate_immediate_T_27 = bits(ins, 20, 20) @[utils.scala 73:85]
              node _immediate_immediate_T_28 = bits(ins, 30, 25) @[utils.scala 73:102]
              node _immediate_immediate_T_29 = bits(ins, 24, 21) @[utils.scala 73:123]
              node immediate_immediate_lo_hi = cat(_immediate_immediate_T_28, _immediate_immediate_T_29) @[Cat.scala 33:92]
              node immediate_immediate_lo_1 = cat(immediate_immediate_lo_hi, UInt<1>("h0")) @[Cat.scala 33:92]
              node immediate_immediate_hi_hi_1 = cat(_immediate_immediate_T_25, _immediate_immediate_T_26) @[Cat.scala 33:92]
              node immediate_immediate_hi_3 = cat(immediate_immediate_hi_hi_1, _immediate_immediate_T_27) @[Cat.scala 33:92]
              node _immediate_immediate_T_30 = cat(immediate_immediate_hi_3, immediate_immediate_lo_1) @[Cat.scala 33:92]
              immediate_immediate <= _immediate_immediate_T_30 @[utils.scala 73:19]
            else :
              node _immediate_T_5 = eq(UInt<3>("h6"), insType) @[utils.scala 59:29]
              when _immediate_T_5 : @[utils.scala 59:29]
                node _immediate_immediate_T_31 = mux(UInt<1>("h0"), UInt<64>("hffffffffffffffff"), UInt<64>("h0")) @[Bitwise.scala 77:12]
                immediate_immediate <= _immediate_immediate_T_31 @[utils.scala 76:19]
              else :
                node _immediate_T_6 = eq(UInt<1>("h0"), insType) @[utils.scala 59:29]
                when _immediate_T_6 : @[utils.scala 59:29]
                  node _immediate_immediate_T_32 = mux(UInt<1>("h0"), UInt<64>("hffffffffffffffff"), UInt<64>("h0")) @[Bitwise.scala 77:12]
                  immediate_immediate <= _immediate_immediate_T_32 @[utils.scala 79:19]
    immediate <= immediate_immediate @[decode.scala 303:13]
    node _unconditionalJumps_T = bits(outputBuffer.instruction, 6, 0) @[decode.scala 305:49]
    node _unconditionalJumps_T_1 = eq(_unconditionalJumps_T, UInt<7>("h6f")) @[decode.scala 305:55]
    node _unconditionalJumps_T_2 = bits(outputBuffer.instruction, 6, 0) @[decode.scala 305:93]
    node _unconditionalJumps_T_3 = eq(_unconditionalJumps_T_2, UInt<7>("h67")) @[decode.scala 305:99]
    node _unconditionalJumps_T_4 = or(_unconditionalJumps_T_1, _unconditionalJumps_T_3) @[decode.scala 305:66]
    node _unconditionalJumps_T_5 = bits(outputBuffer.instruction, 6, 0) @[decode.scala 305:138]
    node _unconditionalJumps_T_6 = eq(_unconditionalJumps_T_5, UInt<6>("h37")) @[decode.scala 305:144]
    node _unconditionalJumps_T_7 = or(_unconditionalJumps_T_4, _unconditionalJumps_T_6) @[decode.scala 305:111]
    node _unconditionalJumps_T_8 = bits(outputBuffer.instruction, 6, 0) @[decode.scala 305:181]
    node _unconditionalJumps_T_9 = eq(_unconditionalJumps_T_8, UInt<5>("h17")) @[decode.scala 305:187]
    node _unconditionalJumps_T_10 = or(_unconditionalJumps_T_7, _unconditionalJumps_T_9) @[decode.scala 305:154]
    unconditionalJumps <= _unconditionalJumps_T_10 @[decode.scala 305:22]
    node _csrIns_T = bits(outputBuffer.instruction, 6, 0) @[decode.scala 306:37]
    node _csrIns_T_1 = eq(_csrIns_T, UInt<7>("h73")) @[decode.scala 306:43]
    node _csrIns_T_2 = bits(outputBuffer.instruction, 14, 12) @[decode.scala 306:83]
    node _csrIns_T_3 = neq(_csrIns_T_2, UInt<1>("h0")) @[decode.scala 306:91]
    node _csrIns_T_4 = and(_csrIns_T_1, _csrIns_T_3) @[decode.scala 306:56]
    csrIns <= _csrIns_T_4 @[decode.scala 306:10]
    wire _frontEndRegMap_WIRE : UInt<6>[32] @[decode.scala 308:44]
    _frontEndRegMap_WIRE[0] <= UInt<6>("h0") @[decode.scala 308:44]
    _frontEndRegMap_WIRE[1] <= UInt<6>("h1") @[decode.scala 308:44]
    _frontEndRegMap_WIRE[2] <= UInt<6>("h2") @[decode.scala 308:44]
    _frontEndRegMap_WIRE[3] <= UInt<6>("h3") @[decode.scala 308:44]
    _frontEndRegMap_WIRE[4] <= UInt<6>("h4") @[decode.scala 308:44]
    _frontEndRegMap_WIRE[5] <= UInt<6>("h5") @[decode.scala 308:44]
    _frontEndRegMap_WIRE[6] <= UInt<6>("h6") @[decode.scala 308:44]
    _frontEndRegMap_WIRE[7] <= UInt<6>("h7") @[decode.scala 308:44]
    _frontEndRegMap_WIRE[8] <= UInt<6>("h8") @[decode.scala 308:44]
    _frontEndRegMap_WIRE[9] <= UInt<6>("h9") @[decode.scala 308:44]
    _frontEndRegMap_WIRE[10] <= UInt<6>("ha") @[decode.scala 308:44]
    _frontEndRegMap_WIRE[11] <= UInt<6>("hb") @[decode.scala 308:44]
    _frontEndRegMap_WIRE[12] <= UInt<6>("hc") @[decode.scala 308:44]
    _frontEndRegMap_WIRE[13] <= UInt<6>("hd") @[decode.scala 308:44]
    _frontEndRegMap_WIRE[14] <= UInt<6>("he") @[decode.scala 308:44]
    _frontEndRegMap_WIRE[15] <= UInt<6>("hf") @[decode.scala 308:44]
    _frontEndRegMap_WIRE[16] <= UInt<6>("h10") @[decode.scala 308:44]
    _frontEndRegMap_WIRE[17] <= UInt<6>("h11") @[decode.scala 308:44]
    _frontEndRegMap_WIRE[18] <= UInt<6>("h12") @[decode.scala 308:44]
    _frontEndRegMap_WIRE[19] <= UInt<6>("h13") @[decode.scala 308:44]
    _frontEndRegMap_WIRE[20] <= UInt<6>("h14") @[decode.scala 308:44]
    _frontEndRegMap_WIRE[21] <= UInt<6>("h15") @[decode.scala 308:44]
    _frontEndRegMap_WIRE[22] <= UInt<6>("h16") @[decode.scala 308:44]
    _frontEndRegMap_WIRE[23] <= UInt<6>("h17") @[decode.scala 308:44]
    _frontEndRegMap_WIRE[24] <= UInt<6>("h18") @[decode.scala 308:44]
    _frontEndRegMap_WIRE[25] <= UInt<6>("h19") @[decode.scala 308:44]
    _frontEndRegMap_WIRE[26] <= UInt<6>("h1a") @[decode.scala 308:44]
    _frontEndRegMap_WIRE[27] <= UInt<6>("h1b") @[decode.scala 308:44]
    _frontEndRegMap_WIRE[28] <= UInt<6>("h1c") @[decode.scala 308:44]
    _frontEndRegMap_WIRE[29] <= UInt<6>("h1d") @[decode.scala 308:44]
    _frontEndRegMap_WIRE[30] <= UInt<6>("h1e") @[decode.scala 308:44]
    _frontEndRegMap_WIRE[31] <= UInt<6>("h1f") @[decode.scala 308:44]
    reg frontEndRegMap : UInt<6>[32], clock with :
      reset => (reset, _frontEndRegMap_WIRE) @[decode.scala 308:36]
    wire _architecturalRegMap_WIRE : UInt<6>[32] @[decode.scala 309:44]
    _architecturalRegMap_WIRE[0] <= UInt<6>("h0") @[decode.scala 309:44]
    _architecturalRegMap_WIRE[1] <= UInt<6>("h1") @[decode.scala 309:44]
    _architecturalRegMap_WIRE[2] <= UInt<6>("h2") @[decode.scala 309:44]
    _architecturalRegMap_WIRE[3] <= UInt<6>("h3") @[decode.scala 309:44]
    _architecturalRegMap_WIRE[4] <= UInt<6>("h4") @[decode.scala 309:44]
    _architecturalRegMap_WIRE[5] <= UInt<6>("h5") @[decode.scala 309:44]
    _architecturalRegMap_WIRE[6] <= UInt<6>("h6") @[decode.scala 309:44]
    _architecturalRegMap_WIRE[7] <= UInt<6>("h7") @[decode.scala 309:44]
    _architecturalRegMap_WIRE[8] <= UInt<6>("h8") @[decode.scala 309:44]
    _architecturalRegMap_WIRE[9] <= UInt<6>("h9") @[decode.scala 309:44]
    _architecturalRegMap_WIRE[10] <= UInt<6>("ha") @[decode.scala 309:44]
    _architecturalRegMap_WIRE[11] <= UInt<6>("hb") @[decode.scala 309:44]
    _architecturalRegMap_WIRE[12] <= UInt<6>("hc") @[decode.scala 309:44]
    _architecturalRegMap_WIRE[13] <= UInt<6>("hd") @[decode.scala 309:44]
    _architecturalRegMap_WIRE[14] <= UInt<6>("he") @[decode.scala 309:44]
    _architecturalRegMap_WIRE[15] <= UInt<6>("hf") @[decode.scala 309:44]
    _architecturalRegMap_WIRE[16] <= UInt<6>("h10") @[decode.scala 309:44]
    _architecturalRegMap_WIRE[17] <= UInt<6>("h11") @[decode.scala 309:44]
    _architecturalRegMap_WIRE[18] <= UInt<6>("h12") @[decode.scala 309:44]
    _architecturalRegMap_WIRE[19] <= UInt<6>("h13") @[decode.scala 309:44]
    _architecturalRegMap_WIRE[20] <= UInt<6>("h14") @[decode.scala 309:44]
    _architecturalRegMap_WIRE[21] <= UInt<6>("h15") @[decode.scala 309:44]
    _architecturalRegMap_WIRE[22] <= UInt<6>("h16") @[decode.scala 309:44]
    _architecturalRegMap_WIRE[23] <= UInt<6>("h17") @[decode.scala 309:44]
    _architecturalRegMap_WIRE[24] <= UInt<6>("h18") @[decode.scala 309:44]
    _architecturalRegMap_WIRE[25] <= UInt<6>("h19") @[decode.scala 309:44]
    _architecturalRegMap_WIRE[26] <= UInt<6>("h1a") @[decode.scala 309:44]
    _architecturalRegMap_WIRE[27] <= UInt<6>("h1b") @[decode.scala 309:44]
    _architecturalRegMap_WIRE[28] <= UInt<6>("h1c") @[decode.scala 309:44]
    _architecturalRegMap_WIRE[29] <= UInt<6>("h1d") @[decode.scala 309:44]
    _architecturalRegMap_WIRE[30] <= UInt<6>("h1e") @[decode.scala 309:44]
    _architecturalRegMap_WIRE[31] <= UInt<6>("h1f") @[decode.scala 309:44]
    reg architecturalRegMap : UInt<6>[32], clock with :
      reset => (reset, _architecturalRegMap_WIRE) @[decode.scala 309:36]
    wire _PRFFreeList_WIRE : UInt<1>[64] @[decode.scala 310:44]
    _PRFFreeList_WIRE[0] <= UInt<1>("h0") @[decode.scala 310:44]
    _PRFFreeList_WIRE[1] <= UInt<1>("h0") @[decode.scala 310:44]
    _PRFFreeList_WIRE[2] <= UInt<1>("h0") @[decode.scala 310:44]
    _PRFFreeList_WIRE[3] <= UInt<1>("h0") @[decode.scala 310:44]
    _PRFFreeList_WIRE[4] <= UInt<1>("h0") @[decode.scala 310:44]
    _PRFFreeList_WIRE[5] <= UInt<1>("h0") @[decode.scala 310:44]
    _PRFFreeList_WIRE[6] <= UInt<1>("h0") @[decode.scala 310:44]
    _PRFFreeList_WIRE[7] <= UInt<1>("h0") @[decode.scala 310:44]
    _PRFFreeList_WIRE[8] <= UInt<1>("h0") @[decode.scala 310:44]
    _PRFFreeList_WIRE[9] <= UInt<1>("h0") @[decode.scala 310:44]
    _PRFFreeList_WIRE[10] <= UInt<1>("h0") @[decode.scala 310:44]
    _PRFFreeList_WIRE[11] <= UInt<1>("h0") @[decode.scala 310:44]
    _PRFFreeList_WIRE[12] <= UInt<1>("h0") @[decode.scala 310:44]
    _PRFFreeList_WIRE[13] <= UInt<1>("h0") @[decode.scala 310:44]
    _PRFFreeList_WIRE[14] <= UInt<1>("h0") @[decode.scala 310:44]
    _PRFFreeList_WIRE[15] <= UInt<1>("h0") @[decode.scala 310:44]
    _PRFFreeList_WIRE[16] <= UInt<1>("h0") @[decode.scala 310:44]
    _PRFFreeList_WIRE[17] <= UInt<1>("h0") @[decode.scala 310:44]
    _PRFFreeList_WIRE[18] <= UInt<1>("h0") @[decode.scala 310:44]
    _PRFFreeList_WIRE[19] <= UInt<1>("h0") @[decode.scala 310:44]
    _PRFFreeList_WIRE[20] <= UInt<1>("h0") @[decode.scala 310:44]
    _PRFFreeList_WIRE[21] <= UInt<1>("h0") @[decode.scala 310:44]
    _PRFFreeList_WIRE[22] <= UInt<1>("h0") @[decode.scala 310:44]
    _PRFFreeList_WIRE[23] <= UInt<1>("h0") @[decode.scala 310:44]
    _PRFFreeList_WIRE[24] <= UInt<1>("h0") @[decode.scala 310:44]
    _PRFFreeList_WIRE[25] <= UInt<1>("h0") @[decode.scala 310:44]
    _PRFFreeList_WIRE[26] <= UInt<1>("h0") @[decode.scala 310:44]
    _PRFFreeList_WIRE[27] <= UInt<1>("h0") @[decode.scala 310:44]
    _PRFFreeList_WIRE[28] <= UInt<1>("h0") @[decode.scala 310:44]
    _PRFFreeList_WIRE[29] <= UInt<1>("h0") @[decode.scala 310:44]
    _PRFFreeList_WIRE[30] <= UInt<1>("h0") @[decode.scala 310:44]
    _PRFFreeList_WIRE[31] <= UInt<1>("h0") @[decode.scala 310:44]
    _PRFFreeList_WIRE[32] <= UInt<1>("h1") @[decode.scala 310:44]
    _PRFFreeList_WIRE[33] <= UInt<1>("h1") @[decode.scala 310:44]
    _PRFFreeList_WIRE[34] <= UInt<1>("h1") @[decode.scala 310:44]
    _PRFFreeList_WIRE[35] <= UInt<1>("h1") @[decode.scala 310:44]
    _PRFFreeList_WIRE[36] <= UInt<1>("h1") @[decode.scala 310:44]
    _PRFFreeList_WIRE[37] <= UInt<1>("h1") @[decode.scala 310:44]
    _PRFFreeList_WIRE[38] <= UInt<1>("h1") @[decode.scala 310:44]
    _PRFFreeList_WIRE[39] <= UInt<1>("h1") @[decode.scala 310:44]
    _PRFFreeList_WIRE[40] <= UInt<1>("h1") @[decode.scala 310:44]
    _PRFFreeList_WIRE[41] <= UInt<1>("h1") @[decode.scala 310:44]
    _PRFFreeList_WIRE[42] <= UInt<1>("h1") @[decode.scala 310:44]
    _PRFFreeList_WIRE[43] <= UInt<1>("h1") @[decode.scala 310:44]
    _PRFFreeList_WIRE[44] <= UInt<1>("h1") @[decode.scala 310:44]
    _PRFFreeList_WIRE[45] <= UInt<1>("h1") @[decode.scala 310:44]
    _PRFFreeList_WIRE[46] <= UInt<1>("h1") @[decode.scala 310:44]
    _PRFFreeList_WIRE[47] <= UInt<1>("h1") @[decode.scala 310:44]
    _PRFFreeList_WIRE[48] <= UInt<1>("h1") @[decode.scala 310:44]
    _PRFFreeList_WIRE[49] <= UInt<1>("h1") @[decode.scala 310:44]
    _PRFFreeList_WIRE[50] <= UInt<1>("h1") @[decode.scala 310:44]
    _PRFFreeList_WIRE[51] <= UInt<1>("h1") @[decode.scala 310:44]
    _PRFFreeList_WIRE[52] <= UInt<1>("h1") @[decode.scala 310:44]
    _PRFFreeList_WIRE[53] <= UInt<1>("h1") @[decode.scala 310:44]
    _PRFFreeList_WIRE[54] <= UInt<1>("h1") @[decode.scala 310:44]
    _PRFFreeList_WIRE[55] <= UInt<1>("h1") @[decode.scala 310:44]
    _PRFFreeList_WIRE[56] <= UInt<1>("h1") @[decode.scala 310:44]
    _PRFFreeList_WIRE[57] <= UInt<1>("h1") @[decode.scala 310:44]
    _PRFFreeList_WIRE[58] <= UInt<1>("h1") @[decode.scala 310:44]
    _PRFFreeList_WIRE[59] <= UInt<1>("h1") @[decode.scala 310:44]
    _PRFFreeList_WIRE[60] <= UInt<1>("h1") @[decode.scala 310:44]
    _PRFFreeList_WIRE[61] <= UInt<1>("h1") @[decode.scala 310:44]
    _PRFFreeList_WIRE[62] <= UInt<1>("h1") @[decode.scala 310:44]
    _PRFFreeList_WIRE[63] <= UInt<1>("h1") @[decode.scala 310:44]
    reg PRFFreeList : UInt<1>[64], clock with :
      reset => (reset, _PRFFreeList_WIRE) @[decode.scala 310:36]
    retiredRenamedTable.table[0] <= architecturalRegMap[0] @[decode.scala 314:34]
    retiredRenamedTable.table[1] <= architecturalRegMap[1] @[decode.scala 314:34]
    retiredRenamedTable.table[2] <= architecturalRegMap[2] @[decode.scala 314:34]
    retiredRenamedTable.table[3] <= architecturalRegMap[3] @[decode.scala 314:34]
    retiredRenamedTable.table[4] <= architecturalRegMap[4] @[decode.scala 314:34]
    retiredRenamedTable.table[5] <= architecturalRegMap[5] @[decode.scala 314:34]
    retiredRenamedTable.table[6] <= architecturalRegMap[6] @[decode.scala 314:34]
    retiredRenamedTable.table[7] <= architecturalRegMap[7] @[decode.scala 314:34]
    retiredRenamedTable.table[8] <= architecturalRegMap[8] @[decode.scala 314:34]
    retiredRenamedTable.table[9] <= architecturalRegMap[9] @[decode.scala 314:34]
    retiredRenamedTable.table[10] <= architecturalRegMap[10] @[decode.scala 314:34]
    retiredRenamedTable.table[11] <= architecturalRegMap[11] @[decode.scala 314:34]
    retiredRenamedTable.table[12] <= architecturalRegMap[12] @[decode.scala 314:34]
    retiredRenamedTable.table[13] <= architecturalRegMap[13] @[decode.scala 314:34]
    retiredRenamedTable.table[14] <= architecturalRegMap[14] @[decode.scala 314:34]
    retiredRenamedTable.table[15] <= architecturalRegMap[15] @[decode.scala 314:34]
    retiredRenamedTable.table[16] <= architecturalRegMap[16] @[decode.scala 314:34]
    retiredRenamedTable.table[17] <= architecturalRegMap[17] @[decode.scala 314:34]
    retiredRenamedTable.table[18] <= architecturalRegMap[18] @[decode.scala 314:34]
    retiredRenamedTable.table[19] <= architecturalRegMap[19] @[decode.scala 314:34]
    retiredRenamedTable.table[20] <= architecturalRegMap[20] @[decode.scala 314:34]
    retiredRenamedTable.table[21] <= architecturalRegMap[21] @[decode.scala 314:34]
    retiredRenamedTable.table[22] <= architecturalRegMap[22] @[decode.scala 314:34]
    retiredRenamedTable.table[23] <= architecturalRegMap[23] @[decode.scala 314:34]
    retiredRenamedTable.table[24] <= architecturalRegMap[24] @[decode.scala 314:34]
    retiredRenamedTable.table[25] <= architecturalRegMap[25] @[decode.scala 314:34]
    retiredRenamedTable.table[26] <= architecturalRegMap[26] @[decode.scala 314:34]
    retiredRenamedTable.table[27] <= architecturalRegMap[27] @[decode.scala 314:34]
    retiredRenamedTable.table[28] <= architecturalRegMap[28] @[decode.scala 314:34]
    retiredRenamedTable.table[29] <= architecturalRegMap[29] @[decode.scala 314:34]
    retiredRenamedTable.table[30] <= architecturalRegMap[30] @[decode.scala 314:34]
    retiredRenamedTable.table[31] <= architecturalRegMap[31] @[decode.scala 314:34]
    reg reservedRegMap1 : UInt<6>[32], clock with :
      reset => (UInt<1>("h0"), reservedRegMap1) @[decode.scala 317:28]
    reg reservedRegMap2 : UInt<6>[32], clock with :
      reset => (UInt<1>("h0"), reservedRegMap2) @[decode.scala 318:28]
    reg reservedRegMap3 : UInt<6>[32], clock with :
      reset => (UInt<1>("h0"), reservedRegMap3) @[decode.scala 319:28]
    reg reservedRegMap4 : UInt<6>[32], clock with :
      reset => (UInt<1>("h0"), reservedRegMap4) @[decode.scala 320:28]
    reg reservedFreeList1 : UInt<1>[64], clock with :
      reset => (UInt<1>("h0"), reservedFreeList1) @[decode.scala 322:30]
    reg reservedFreeList2 : UInt<1>[64], clock with :
      reset => (UInt<1>("h0"), reservedFreeList2) @[decode.scala 323:30]
    reg reservedFreeList3 : UInt<1>[64], clock with :
      reset => (UInt<1>("h0"), reservedFreeList3) @[decode.scala 324:30]
    reg reservedFreeList4 : UInt<1>[64], clock with :
      reset => (UInt<1>("h0"), reservedFreeList4) @[decode.scala 325:30]
    reg reservedValidList1 : UInt<1>[64], clock with :
      reset => (UInt<1>("h0"), reservedValidList1) @[decode.scala 327:31]
    reg reservedValidList2 : UInt<1>[64], clock with :
      reset => (UInt<1>("h0"), reservedValidList2) @[decode.scala 328:31]
    reg reservedValidList3 : UInt<1>[64], clock with :
      reset => (UInt<1>("h0"), reservedValidList3) @[decode.scala 329:31]
    reg reservedValidList4 : UInt<1>[64], clock with :
      reset => (UInt<1>("h0"), reservedValidList4) @[decode.scala 330:31]
    rs1Addr <= frontEndRegMap[rs1] @[decode.scala 332:12]
    rs2Addr <= frontEndRegMap[rs2] @[decode.scala 333:12]
    node _freeRegAddr_T = mux(PRFFreeList[62], UInt<6>("h3e"), UInt<6>("h3f")) @[Mux.scala 47:70]
    node _freeRegAddr_T_1 = mux(PRFFreeList[61], UInt<6>("h3d"), _freeRegAddr_T) @[Mux.scala 47:70]
    node _freeRegAddr_T_2 = mux(PRFFreeList[60], UInt<6>("h3c"), _freeRegAddr_T_1) @[Mux.scala 47:70]
    node _freeRegAddr_T_3 = mux(PRFFreeList[59], UInt<6>("h3b"), _freeRegAddr_T_2) @[Mux.scala 47:70]
    node _freeRegAddr_T_4 = mux(PRFFreeList[58], UInt<6>("h3a"), _freeRegAddr_T_3) @[Mux.scala 47:70]
    node _freeRegAddr_T_5 = mux(PRFFreeList[57], UInt<6>("h39"), _freeRegAddr_T_4) @[Mux.scala 47:70]
    node _freeRegAddr_T_6 = mux(PRFFreeList[56], UInt<6>("h38"), _freeRegAddr_T_5) @[Mux.scala 47:70]
    node _freeRegAddr_T_7 = mux(PRFFreeList[55], UInt<6>("h37"), _freeRegAddr_T_6) @[Mux.scala 47:70]
    node _freeRegAddr_T_8 = mux(PRFFreeList[54], UInt<6>("h36"), _freeRegAddr_T_7) @[Mux.scala 47:70]
    node _freeRegAddr_T_9 = mux(PRFFreeList[53], UInt<6>("h35"), _freeRegAddr_T_8) @[Mux.scala 47:70]
    node _freeRegAddr_T_10 = mux(PRFFreeList[52], UInt<6>("h34"), _freeRegAddr_T_9) @[Mux.scala 47:70]
    node _freeRegAddr_T_11 = mux(PRFFreeList[51], UInt<6>("h33"), _freeRegAddr_T_10) @[Mux.scala 47:70]
    node _freeRegAddr_T_12 = mux(PRFFreeList[50], UInt<6>("h32"), _freeRegAddr_T_11) @[Mux.scala 47:70]
    node _freeRegAddr_T_13 = mux(PRFFreeList[49], UInt<6>("h31"), _freeRegAddr_T_12) @[Mux.scala 47:70]
    node _freeRegAddr_T_14 = mux(PRFFreeList[48], UInt<6>("h30"), _freeRegAddr_T_13) @[Mux.scala 47:70]
    node _freeRegAddr_T_15 = mux(PRFFreeList[47], UInt<6>("h2f"), _freeRegAddr_T_14) @[Mux.scala 47:70]
    node _freeRegAddr_T_16 = mux(PRFFreeList[46], UInt<6>("h2e"), _freeRegAddr_T_15) @[Mux.scala 47:70]
    node _freeRegAddr_T_17 = mux(PRFFreeList[45], UInt<6>("h2d"), _freeRegAddr_T_16) @[Mux.scala 47:70]
    node _freeRegAddr_T_18 = mux(PRFFreeList[44], UInt<6>("h2c"), _freeRegAddr_T_17) @[Mux.scala 47:70]
    node _freeRegAddr_T_19 = mux(PRFFreeList[43], UInt<6>("h2b"), _freeRegAddr_T_18) @[Mux.scala 47:70]
    node _freeRegAddr_T_20 = mux(PRFFreeList[42], UInt<6>("h2a"), _freeRegAddr_T_19) @[Mux.scala 47:70]
    node _freeRegAddr_T_21 = mux(PRFFreeList[41], UInt<6>("h29"), _freeRegAddr_T_20) @[Mux.scala 47:70]
    node _freeRegAddr_T_22 = mux(PRFFreeList[40], UInt<6>("h28"), _freeRegAddr_T_21) @[Mux.scala 47:70]
    node _freeRegAddr_T_23 = mux(PRFFreeList[39], UInt<6>("h27"), _freeRegAddr_T_22) @[Mux.scala 47:70]
    node _freeRegAddr_T_24 = mux(PRFFreeList[38], UInt<6>("h26"), _freeRegAddr_T_23) @[Mux.scala 47:70]
    node _freeRegAddr_T_25 = mux(PRFFreeList[37], UInt<6>("h25"), _freeRegAddr_T_24) @[Mux.scala 47:70]
    node _freeRegAddr_T_26 = mux(PRFFreeList[36], UInt<6>("h24"), _freeRegAddr_T_25) @[Mux.scala 47:70]
    node _freeRegAddr_T_27 = mux(PRFFreeList[35], UInt<6>("h23"), _freeRegAddr_T_26) @[Mux.scala 47:70]
    node _freeRegAddr_T_28 = mux(PRFFreeList[34], UInt<6>("h22"), _freeRegAddr_T_27) @[Mux.scala 47:70]
    node _freeRegAddr_T_29 = mux(PRFFreeList[33], UInt<6>("h21"), _freeRegAddr_T_28) @[Mux.scala 47:70]
    node _freeRegAddr_T_30 = mux(PRFFreeList[32], UInt<6>("h20"), _freeRegAddr_T_29) @[Mux.scala 47:70]
    node _freeRegAddr_T_31 = mux(PRFFreeList[31], UInt<5>("h1f"), _freeRegAddr_T_30) @[Mux.scala 47:70]
    node _freeRegAddr_T_32 = mux(PRFFreeList[30], UInt<5>("h1e"), _freeRegAddr_T_31) @[Mux.scala 47:70]
    node _freeRegAddr_T_33 = mux(PRFFreeList[29], UInt<5>("h1d"), _freeRegAddr_T_32) @[Mux.scala 47:70]
    node _freeRegAddr_T_34 = mux(PRFFreeList[28], UInt<5>("h1c"), _freeRegAddr_T_33) @[Mux.scala 47:70]
    node _freeRegAddr_T_35 = mux(PRFFreeList[27], UInt<5>("h1b"), _freeRegAddr_T_34) @[Mux.scala 47:70]
    node _freeRegAddr_T_36 = mux(PRFFreeList[26], UInt<5>("h1a"), _freeRegAddr_T_35) @[Mux.scala 47:70]
    node _freeRegAddr_T_37 = mux(PRFFreeList[25], UInt<5>("h19"), _freeRegAddr_T_36) @[Mux.scala 47:70]
    node _freeRegAddr_T_38 = mux(PRFFreeList[24], UInt<5>("h18"), _freeRegAddr_T_37) @[Mux.scala 47:70]
    node _freeRegAddr_T_39 = mux(PRFFreeList[23], UInt<5>("h17"), _freeRegAddr_T_38) @[Mux.scala 47:70]
    node _freeRegAddr_T_40 = mux(PRFFreeList[22], UInt<5>("h16"), _freeRegAddr_T_39) @[Mux.scala 47:70]
    node _freeRegAddr_T_41 = mux(PRFFreeList[21], UInt<5>("h15"), _freeRegAddr_T_40) @[Mux.scala 47:70]
    node _freeRegAddr_T_42 = mux(PRFFreeList[20], UInt<5>("h14"), _freeRegAddr_T_41) @[Mux.scala 47:70]
    node _freeRegAddr_T_43 = mux(PRFFreeList[19], UInt<5>("h13"), _freeRegAddr_T_42) @[Mux.scala 47:70]
    node _freeRegAddr_T_44 = mux(PRFFreeList[18], UInt<5>("h12"), _freeRegAddr_T_43) @[Mux.scala 47:70]
    node _freeRegAddr_T_45 = mux(PRFFreeList[17], UInt<5>("h11"), _freeRegAddr_T_44) @[Mux.scala 47:70]
    node _freeRegAddr_T_46 = mux(PRFFreeList[16], UInt<5>("h10"), _freeRegAddr_T_45) @[Mux.scala 47:70]
    node _freeRegAddr_T_47 = mux(PRFFreeList[15], UInt<4>("hf"), _freeRegAddr_T_46) @[Mux.scala 47:70]
    node _freeRegAddr_T_48 = mux(PRFFreeList[14], UInt<4>("he"), _freeRegAddr_T_47) @[Mux.scala 47:70]
    node _freeRegAddr_T_49 = mux(PRFFreeList[13], UInt<4>("hd"), _freeRegAddr_T_48) @[Mux.scala 47:70]
    node _freeRegAddr_T_50 = mux(PRFFreeList[12], UInt<4>("hc"), _freeRegAddr_T_49) @[Mux.scala 47:70]
    node _freeRegAddr_T_51 = mux(PRFFreeList[11], UInt<4>("hb"), _freeRegAddr_T_50) @[Mux.scala 47:70]
    node _freeRegAddr_T_52 = mux(PRFFreeList[10], UInt<4>("ha"), _freeRegAddr_T_51) @[Mux.scala 47:70]
    node _freeRegAddr_T_53 = mux(PRFFreeList[9], UInt<4>("h9"), _freeRegAddr_T_52) @[Mux.scala 47:70]
    node _freeRegAddr_T_54 = mux(PRFFreeList[8], UInt<4>("h8"), _freeRegAddr_T_53) @[Mux.scala 47:70]
    node _freeRegAddr_T_55 = mux(PRFFreeList[7], UInt<3>("h7"), _freeRegAddr_T_54) @[Mux.scala 47:70]
    node _freeRegAddr_T_56 = mux(PRFFreeList[6], UInt<3>("h6"), _freeRegAddr_T_55) @[Mux.scala 47:70]
    node _freeRegAddr_T_57 = mux(PRFFreeList[5], UInt<3>("h5"), _freeRegAddr_T_56) @[Mux.scala 47:70]
    node _freeRegAddr_T_58 = mux(PRFFreeList[4], UInt<3>("h4"), _freeRegAddr_T_57) @[Mux.scala 47:70]
    node _freeRegAddr_T_59 = mux(PRFFreeList[3], UInt<2>("h3"), _freeRegAddr_T_58) @[Mux.scala 47:70]
    node _freeRegAddr_T_60 = mux(PRFFreeList[2], UInt<2>("h2"), _freeRegAddr_T_59) @[Mux.scala 47:70]
    node _freeRegAddr_T_61 = mux(PRFFreeList[1], UInt<1>("h1"), _freeRegAddr_T_60) @[Mux.scala 47:70]
    node _freeRegAddr_T_62 = mux(PRFFreeList[0], UInt<1>("h0"), _freeRegAddr_T_61) @[Mux.scala 47:70]
    freeRegAddr <= _freeRegAddr_T_62 @[decode.scala 335:15]
    node _T_4 = eq(freeRegAddr, UInt<6>("h3f")) @[decode.scala 338:20]
    node _T_5 = eq(UInt<7>("h6f"), opcode) @[decode.scala 338:69]
    node _T_6 = eq(UInt<7>("h67"), opcode) @[decode.scala 338:69]
    node _T_7 = eq(UInt<7>("h63"), opcode) @[decode.scala 338:69]
    node _T_8 = or(_T_5, _T_6) @[decode.scala 338:90]
    node _T_9 = or(_T_8, _T_7) @[decode.scala 338:90]
    node _T_10 = bits(branchBuffer.branchMask[0], 0, 0) @[decode.scala 338:129]
    node _T_11 = bits(branchBuffer.branchMask[1], 0, 0) @[decode.scala 338:129]
    node _T_12 = bits(branchBuffer.branchMask[2], 0, 0) @[decode.scala 338:129]
    node _T_13 = bits(branchBuffer.branchMask[3], 0, 0) @[decode.scala 338:129]
    node _T_14 = bits(branchBuffer.branchMask[4], 0, 0) @[decode.scala 338:129]
    node _T_15 = and(_T_10, _T_11) @[decode.scala 338:146]
    node _T_16 = and(_T_15, _T_12) @[decode.scala 338:146]
    node _T_17 = and(_T_16, _T_13) @[decode.scala 338:146]
    node _T_18 = and(_T_17, _T_14) @[decode.scala 338:146]
    node _T_19 = and(_T_9, _T_18) @[decode.scala 338:96]
    node _T_20 = or(_T_4, _T_19) @[decode.scala 338:29]
    when _T_20 : @[decode.scala 338:154]
      stall <= UInt<1>("h1") @[decode.scala 339:11]
    node _T_21 = eq(rs1Addr, freeRegAddr) @[decode.scala 342:16]
    node _T_22 = eq(rs2Addr, freeRegAddr) @[decode.scala 342:43]
    node _T_23 = or(_T_21, _T_22) @[decode.scala 342:32]
    when _T_23 : @[decode.scala 342:60]
      stall <= UInt<1>("h1") @[decode.scala 343:11]
      node _T_24 = eq(rs1Addr, freeRegAddr) @[decode.scala 344:18]
      when _T_24 : @[decode.scala 344:35]
        PRFFreeList[rs1Addr] <= UInt<1>("h0") @[decode.scala 345:28]
      else :
        node _T_25 = eq(rs2Addr, freeRegAddr) @[decode.scala 346:24]
        when _T_25 : @[decode.scala 346:41]
          PRFFreeList[rs2Addr] <= UInt<1>("h0") @[decode.scala 347:28]
    node _T_26 = bits(outputBuffer.instruction, 11, 7) @[decode.scala 351:55]
    node _T_27 = neq(_T_26, UInt<1>("h0")) @[decode.scala 351:62]
    node _T_28 = and(jumpAddrWrite.fired, _T_27) @[decode.scala 351:28]
    when _T_28 : @[decode.scala 351:71]
      PRFValidList[outputBuffer.PRFDest] <= UInt<1>("h1") @[decode.scala 351:108]
    node _T_29 = and(validInputBuf, readyOutputBuf) @[decode.scala 353:22]
    node _T_30 = eq(insType, UInt<1>("h1")) @[decode.scala 353:52]
    node _T_31 = eq(insType, UInt<1>("h0")) @[decode.scala 353:75]
    node _T_32 = or(_T_30, _T_31) @[decode.scala 353:64]
    node _T_33 = eq(insType, UInt<3>("h4")) @[decode.scala 353:98]
    node _T_34 = or(_T_32, _T_33) @[decode.scala 353:87]
    node _T_35 = eq(insType, UInt<3>("h5")) @[decode.scala 353:121]
    node _T_36 = or(_T_34, _T_35) @[decode.scala 353:110]
    node _T_37 = and(_T_29, _T_36) @[decode.scala 353:40]
    node _T_38 = neq(rd, UInt<1>("h0")) @[decode.scala 353:140]
    node _T_39 = and(_T_37, _T_38) @[decode.scala 353:134]
    when _T_39 : @[decode.scala 353:149]
      node _T_40 = eq(branchEvalIn.fired, UInt<1>("h0")) @[decode.scala 354:10]
      node _T_41 = or(_T_40, branchEvalIn.passFail) @[decode.scala 354:30]
      when _T_41 : @[decode.scala 354:55]
        PRFFreeList[freeRegAddr] <= UInt<1>("h0") @[decode.scala 355:33]
        PRFValidList[freeRegAddr] <= UInt<1>("h0") @[decode.scala 356:33]
        frontEndRegMap[rd] <= freeRegAddr @[decode.scala 357:33]
    when branchEvalIn.fired : @[decode.scala 363:28]
      node _branchTracker_T = sub(branchTracker, UInt<1>("h1")) @[decode.scala 364:36]
      node _branchTracker_T_1 = tail(_branchTracker_T, 1) @[decode.scala 364:36]
      branchTracker <= _branchTracker_T_1 @[decode.scala 364:19]
      node lo = cat(branchBuffer.branchMask[1], branchBuffer.branchMask[0]) @[decode.scala 367:66]
      node hi_hi = cat(branchBuffer.branchMask[4], branchBuffer.branchMask[3]) @[decode.scala 367:66]
      node hi = cat(hi_hi, branchBuffer.branchMask[2]) @[decode.scala 367:66]
      node _T_42 = cat(hi, lo) @[decode.scala 367:66]
      node _T_43 = not(UInt<5>("hf")) @[decode.scala 367:75]
      node _T_44 = and(_T_42, _T_43) @[decode.scala 367:73]
      node lo_1 = cat(branchBuffer.branchMask[1], branchBuffer.branchMask[0]) @[decode.scala 367:114]
      node hi_hi_1 = cat(branchBuffer.branchMask[4], branchBuffer.branchMask[3]) @[decode.scala 367:114]
      node hi_1 = cat(hi_hi_1, branchBuffer.branchMask[2]) @[decode.scala 367:114]
      node _T_45 = cat(hi_1, lo_1) @[decode.scala 367:114]
      node _T_46 = not(branchEvalIn.branchMask) @[decode.scala 367:124]
      node _T_47 = and(_T_45, _T_46) @[decode.scala 367:121]
      node _T_48 = and(_T_47, UInt<5>("hf")) @[decode.scala 367:151]
      node _T_49 = or(_T_44, _T_48) @[decode.scala 367:86]
      node _T_50 = bits(_T_49, 0, 0) @[decode.scala 367:164]
      node _T_51 = bits(_T_49, 1, 1) @[decode.scala 367:164]
      node _T_52 = bits(_T_49, 2, 2) @[decode.scala 367:164]
      node _T_53 = bits(_T_49, 3, 3) @[decode.scala 367:164]
      node _T_54 = bits(_T_49, 4, 4) @[decode.scala 367:164]
      wire _WIRE : UInt<1>[5] @[decode.scala 367:39]
      _WIRE[0] <= _T_50 @[decode.scala 367:39]
      _WIRE[1] <= _T_51 @[decode.scala 367:39]
      _WIRE[2] <= _T_52 @[decode.scala 367:39]
      _WIRE[3] <= _T_53 @[decode.scala 367:39]
      _WIRE[4] <= _T_54 @[decode.scala 367:39]
      branchBuffer.branchMask[0] <= _WIRE[0] @[decode.scala 367:29]
      branchBuffer.branchMask[1] <= _WIRE[1] @[decode.scala 367:29]
      branchBuffer.branchMask[2] <= _WIRE[2] @[decode.scala 367:29]
      branchBuffer.branchMask[3] <= _WIRE[3] @[decode.scala 367:29]
      branchBuffer.branchMask[4] <= _WIRE[4] @[decode.scala 367:29]
      node _T_55 = eq(branchEvalIn.passFail, UInt<1>("h0")) @[decode.scala 369:10]
      when _T_55 : @[decode.scala 369:34]
        branchReg <= UInt<1>("h0") @[decode.scala 370:17]
        branchBuffer.branchMask[0] <= UInt<1>("h0") @[decode.scala 372:34]
        branchBuffer.branchMask[1] <= UInt<1>("h0") @[decode.scala 373:34]
        branchBuffer.branchMask[2] <= UInt<1>("h0") @[decode.scala 374:34]
        branchBuffer.branchMask[3] <= UInt<1>("h0") @[decode.scala 375:34]
        branchBuffer.branchMask[4] <= UInt<1>("h1") @[decode.scala 376:34]
        expectedPC <= branchEvalIn.targetPC @[decode.scala 378:18]
        node _T_56 = bits(branchEvalIn.branchMask, 3, 0) @[decode.scala 381:35]
        node _T_57 = orr(_T_56) @[decode.scala 381:41]
        when _T_57 : @[decode.scala 381:45]
          frontEndRegMap <= reservedRegMap1 @[decode.scala 382:22]
          node _T_58 = or(reservedFreeList1[0], PRFFreeList[0]) @[decode.scala 383:100]
          node _T_59 = or(reservedFreeList1[1], PRFFreeList[1]) @[decode.scala 383:100]
          node _T_60 = or(reservedFreeList1[2], PRFFreeList[2]) @[decode.scala 383:100]
          node _T_61 = or(reservedFreeList1[3], PRFFreeList[3]) @[decode.scala 383:100]
          node _T_62 = or(reservedFreeList1[4], PRFFreeList[4]) @[decode.scala 383:100]
          node _T_63 = or(reservedFreeList1[5], PRFFreeList[5]) @[decode.scala 383:100]
          node _T_64 = or(reservedFreeList1[6], PRFFreeList[6]) @[decode.scala 383:100]
          node _T_65 = or(reservedFreeList1[7], PRFFreeList[7]) @[decode.scala 383:100]
          node _T_66 = or(reservedFreeList1[8], PRFFreeList[8]) @[decode.scala 383:100]
          node _T_67 = or(reservedFreeList1[9], PRFFreeList[9]) @[decode.scala 383:100]
          node _T_68 = or(reservedFreeList1[10], PRFFreeList[10]) @[decode.scala 383:100]
          node _T_69 = or(reservedFreeList1[11], PRFFreeList[11]) @[decode.scala 383:100]
          node _T_70 = or(reservedFreeList1[12], PRFFreeList[12]) @[decode.scala 383:100]
          node _T_71 = or(reservedFreeList1[13], PRFFreeList[13]) @[decode.scala 383:100]
          node _T_72 = or(reservedFreeList1[14], PRFFreeList[14]) @[decode.scala 383:100]
          node _T_73 = or(reservedFreeList1[15], PRFFreeList[15]) @[decode.scala 383:100]
          node _T_74 = or(reservedFreeList1[16], PRFFreeList[16]) @[decode.scala 383:100]
          node _T_75 = or(reservedFreeList1[17], PRFFreeList[17]) @[decode.scala 383:100]
          node _T_76 = or(reservedFreeList1[18], PRFFreeList[18]) @[decode.scala 383:100]
          node _T_77 = or(reservedFreeList1[19], PRFFreeList[19]) @[decode.scala 383:100]
          node _T_78 = or(reservedFreeList1[20], PRFFreeList[20]) @[decode.scala 383:100]
          node _T_79 = or(reservedFreeList1[21], PRFFreeList[21]) @[decode.scala 383:100]
          node _T_80 = or(reservedFreeList1[22], PRFFreeList[22]) @[decode.scala 383:100]
          node _T_81 = or(reservedFreeList1[23], PRFFreeList[23]) @[decode.scala 383:100]
          node _T_82 = or(reservedFreeList1[24], PRFFreeList[24]) @[decode.scala 383:100]
          node _T_83 = or(reservedFreeList1[25], PRFFreeList[25]) @[decode.scala 383:100]
          node _T_84 = or(reservedFreeList1[26], PRFFreeList[26]) @[decode.scala 383:100]
          node _T_85 = or(reservedFreeList1[27], PRFFreeList[27]) @[decode.scala 383:100]
          node _T_86 = or(reservedFreeList1[28], PRFFreeList[28]) @[decode.scala 383:100]
          node _T_87 = or(reservedFreeList1[29], PRFFreeList[29]) @[decode.scala 383:100]
          node _T_88 = or(reservedFreeList1[30], PRFFreeList[30]) @[decode.scala 383:100]
          node _T_89 = or(reservedFreeList1[31], PRFFreeList[31]) @[decode.scala 383:100]
          node _T_90 = or(reservedFreeList1[32], PRFFreeList[32]) @[decode.scala 383:100]
          node _T_91 = or(reservedFreeList1[33], PRFFreeList[33]) @[decode.scala 383:100]
          node _T_92 = or(reservedFreeList1[34], PRFFreeList[34]) @[decode.scala 383:100]
          node _T_93 = or(reservedFreeList1[35], PRFFreeList[35]) @[decode.scala 383:100]
          node _T_94 = or(reservedFreeList1[36], PRFFreeList[36]) @[decode.scala 383:100]
          node _T_95 = or(reservedFreeList1[37], PRFFreeList[37]) @[decode.scala 383:100]
          node _T_96 = or(reservedFreeList1[38], PRFFreeList[38]) @[decode.scala 383:100]
          node _T_97 = or(reservedFreeList1[39], PRFFreeList[39]) @[decode.scala 383:100]
          node _T_98 = or(reservedFreeList1[40], PRFFreeList[40]) @[decode.scala 383:100]
          node _T_99 = or(reservedFreeList1[41], PRFFreeList[41]) @[decode.scala 383:100]
          node _T_100 = or(reservedFreeList1[42], PRFFreeList[42]) @[decode.scala 383:100]
          node _T_101 = or(reservedFreeList1[43], PRFFreeList[43]) @[decode.scala 383:100]
          node _T_102 = or(reservedFreeList1[44], PRFFreeList[44]) @[decode.scala 383:100]
          node _T_103 = or(reservedFreeList1[45], PRFFreeList[45]) @[decode.scala 383:100]
          node _T_104 = or(reservedFreeList1[46], PRFFreeList[46]) @[decode.scala 383:100]
          node _T_105 = or(reservedFreeList1[47], PRFFreeList[47]) @[decode.scala 383:100]
          node _T_106 = or(reservedFreeList1[48], PRFFreeList[48]) @[decode.scala 383:100]
          node _T_107 = or(reservedFreeList1[49], PRFFreeList[49]) @[decode.scala 383:100]
          node _T_108 = or(reservedFreeList1[50], PRFFreeList[50]) @[decode.scala 383:100]
          node _T_109 = or(reservedFreeList1[51], PRFFreeList[51]) @[decode.scala 383:100]
          node _T_110 = or(reservedFreeList1[52], PRFFreeList[52]) @[decode.scala 383:100]
          node _T_111 = or(reservedFreeList1[53], PRFFreeList[53]) @[decode.scala 383:100]
          node _T_112 = or(reservedFreeList1[54], PRFFreeList[54]) @[decode.scala 383:100]
          node _T_113 = or(reservedFreeList1[55], PRFFreeList[55]) @[decode.scala 383:100]
          node _T_114 = or(reservedFreeList1[56], PRFFreeList[56]) @[decode.scala 383:100]
          node _T_115 = or(reservedFreeList1[57], PRFFreeList[57]) @[decode.scala 383:100]
          node _T_116 = or(reservedFreeList1[58], PRFFreeList[58]) @[decode.scala 383:100]
          node _T_117 = or(reservedFreeList1[59], PRFFreeList[59]) @[decode.scala 383:100]
          node _T_118 = or(reservedFreeList1[60], PRFFreeList[60]) @[decode.scala 383:100]
          node _T_119 = or(reservedFreeList1[61], PRFFreeList[61]) @[decode.scala 383:100]
          node _T_120 = or(reservedFreeList1[62], PRFFreeList[62]) @[decode.scala 383:100]
          node _T_121 = or(reservedFreeList1[63], PRFFreeList[63]) @[decode.scala 383:100]
          PRFFreeList[0] <= _T_58 @[decode.scala 383:22]
          PRFFreeList[1] <= _T_59 @[decode.scala 383:22]
          PRFFreeList[2] <= _T_60 @[decode.scala 383:22]
          PRFFreeList[3] <= _T_61 @[decode.scala 383:22]
          PRFFreeList[4] <= _T_62 @[decode.scala 383:22]
          PRFFreeList[5] <= _T_63 @[decode.scala 383:22]
          PRFFreeList[6] <= _T_64 @[decode.scala 383:22]
          PRFFreeList[7] <= _T_65 @[decode.scala 383:22]
          PRFFreeList[8] <= _T_66 @[decode.scala 383:22]
          PRFFreeList[9] <= _T_67 @[decode.scala 383:22]
          PRFFreeList[10] <= _T_68 @[decode.scala 383:22]
          PRFFreeList[11] <= _T_69 @[decode.scala 383:22]
          PRFFreeList[12] <= _T_70 @[decode.scala 383:22]
          PRFFreeList[13] <= _T_71 @[decode.scala 383:22]
          PRFFreeList[14] <= _T_72 @[decode.scala 383:22]
          PRFFreeList[15] <= _T_73 @[decode.scala 383:22]
          PRFFreeList[16] <= _T_74 @[decode.scala 383:22]
          PRFFreeList[17] <= _T_75 @[decode.scala 383:22]
          PRFFreeList[18] <= _T_76 @[decode.scala 383:22]
          PRFFreeList[19] <= _T_77 @[decode.scala 383:22]
          PRFFreeList[20] <= _T_78 @[decode.scala 383:22]
          PRFFreeList[21] <= _T_79 @[decode.scala 383:22]
          PRFFreeList[22] <= _T_80 @[decode.scala 383:22]
          PRFFreeList[23] <= _T_81 @[decode.scala 383:22]
          PRFFreeList[24] <= _T_82 @[decode.scala 383:22]
          PRFFreeList[25] <= _T_83 @[decode.scala 383:22]
          PRFFreeList[26] <= _T_84 @[decode.scala 383:22]
          PRFFreeList[27] <= _T_85 @[decode.scala 383:22]
          PRFFreeList[28] <= _T_86 @[decode.scala 383:22]
          PRFFreeList[29] <= _T_87 @[decode.scala 383:22]
          PRFFreeList[30] <= _T_88 @[decode.scala 383:22]
          PRFFreeList[31] <= _T_89 @[decode.scala 383:22]
          PRFFreeList[32] <= _T_90 @[decode.scala 383:22]
          PRFFreeList[33] <= _T_91 @[decode.scala 383:22]
          PRFFreeList[34] <= _T_92 @[decode.scala 383:22]
          PRFFreeList[35] <= _T_93 @[decode.scala 383:22]
          PRFFreeList[36] <= _T_94 @[decode.scala 383:22]
          PRFFreeList[37] <= _T_95 @[decode.scala 383:22]
          PRFFreeList[38] <= _T_96 @[decode.scala 383:22]
          PRFFreeList[39] <= _T_97 @[decode.scala 383:22]
          PRFFreeList[40] <= _T_98 @[decode.scala 383:22]
          PRFFreeList[41] <= _T_99 @[decode.scala 383:22]
          PRFFreeList[42] <= _T_100 @[decode.scala 383:22]
          PRFFreeList[43] <= _T_101 @[decode.scala 383:22]
          PRFFreeList[44] <= _T_102 @[decode.scala 383:22]
          PRFFreeList[45] <= _T_103 @[decode.scala 383:22]
          PRFFreeList[46] <= _T_104 @[decode.scala 383:22]
          PRFFreeList[47] <= _T_105 @[decode.scala 383:22]
          PRFFreeList[48] <= _T_106 @[decode.scala 383:22]
          PRFFreeList[49] <= _T_107 @[decode.scala 383:22]
          PRFFreeList[50] <= _T_108 @[decode.scala 383:22]
          PRFFreeList[51] <= _T_109 @[decode.scala 383:22]
          PRFFreeList[52] <= _T_110 @[decode.scala 383:22]
          PRFFreeList[53] <= _T_111 @[decode.scala 383:22]
          PRFFreeList[54] <= _T_112 @[decode.scala 383:22]
          PRFFreeList[55] <= _T_113 @[decode.scala 383:22]
          PRFFreeList[56] <= _T_114 @[decode.scala 383:22]
          PRFFreeList[57] <= _T_115 @[decode.scala 383:22]
          PRFFreeList[58] <= _T_116 @[decode.scala 383:22]
          PRFFreeList[59] <= _T_117 @[decode.scala 383:22]
          PRFFreeList[60] <= _T_118 @[decode.scala 383:22]
          PRFFreeList[61] <= _T_119 @[decode.scala 383:22]
          PRFFreeList[62] <= _T_120 @[decode.scala 383:22]
          PRFFreeList[63] <= _T_121 @[decode.scala 383:22]
          node _T_122 = or(reservedValidList1[0], PRFValidList[0]) @[decode.scala 384:102]
          node _T_123 = or(reservedValidList1[1], PRFValidList[1]) @[decode.scala 384:102]
          node _T_124 = or(reservedValidList1[2], PRFValidList[2]) @[decode.scala 384:102]
          node _T_125 = or(reservedValidList1[3], PRFValidList[3]) @[decode.scala 384:102]
          node _T_126 = or(reservedValidList1[4], PRFValidList[4]) @[decode.scala 384:102]
          node _T_127 = or(reservedValidList1[5], PRFValidList[5]) @[decode.scala 384:102]
          node _T_128 = or(reservedValidList1[6], PRFValidList[6]) @[decode.scala 384:102]
          node _T_129 = or(reservedValidList1[7], PRFValidList[7]) @[decode.scala 384:102]
          node _T_130 = or(reservedValidList1[8], PRFValidList[8]) @[decode.scala 384:102]
          node _T_131 = or(reservedValidList1[9], PRFValidList[9]) @[decode.scala 384:102]
          node _T_132 = or(reservedValidList1[10], PRFValidList[10]) @[decode.scala 384:102]
          node _T_133 = or(reservedValidList1[11], PRFValidList[11]) @[decode.scala 384:102]
          node _T_134 = or(reservedValidList1[12], PRFValidList[12]) @[decode.scala 384:102]
          node _T_135 = or(reservedValidList1[13], PRFValidList[13]) @[decode.scala 384:102]
          node _T_136 = or(reservedValidList1[14], PRFValidList[14]) @[decode.scala 384:102]
          node _T_137 = or(reservedValidList1[15], PRFValidList[15]) @[decode.scala 384:102]
          node _T_138 = or(reservedValidList1[16], PRFValidList[16]) @[decode.scala 384:102]
          node _T_139 = or(reservedValidList1[17], PRFValidList[17]) @[decode.scala 384:102]
          node _T_140 = or(reservedValidList1[18], PRFValidList[18]) @[decode.scala 384:102]
          node _T_141 = or(reservedValidList1[19], PRFValidList[19]) @[decode.scala 384:102]
          node _T_142 = or(reservedValidList1[20], PRFValidList[20]) @[decode.scala 384:102]
          node _T_143 = or(reservedValidList1[21], PRFValidList[21]) @[decode.scala 384:102]
          node _T_144 = or(reservedValidList1[22], PRFValidList[22]) @[decode.scala 384:102]
          node _T_145 = or(reservedValidList1[23], PRFValidList[23]) @[decode.scala 384:102]
          node _T_146 = or(reservedValidList1[24], PRFValidList[24]) @[decode.scala 384:102]
          node _T_147 = or(reservedValidList1[25], PRFValidList[25]) @[decode.scala 384:102]
          node _T_148 = or(reservedValidList1[26], PRFValidList[26]) @[decode.scala 384:102]
          node _T_149 = or(reservedValidList1[27], PRFValidList[27]) @[decode.scala 384:102]
          node _T_150 = or(reservedValidList1[28], PRFValidList[28]) @[decode.scala 384:102]
          node _T_151 = or(reservedValidList1[29], PRFValidList[29]) @[decode.scala 384:102]
          node _T_152 = or(reservedValidList1[30], PRFValidList[30]) @[decode.scala 384:102]
          node _T_153 = or(reservedValidList1[31], PRFValidList[31]) @[decode.scala 384:102]
          node _T_154 = or(reservedValidList1[32], PRFValidList[32]) @[decode.scala 384:102]
          node _T_155 = or(reservedValidList1[33], PRFValidList[33]) @[decode.scala 384:102]
          node _T_156 = or(reservedValidList1[34], PRFValidList[34]) @[decode.scala 384:102]
          node _T_157 = or(reservedValidList1[35], PRFValidList[35]) @[decode.scala 384:102]
          node _T_158 = or(reservedValidList1[36], PRFValidList[36]) @[decode.scala 384:102]
          node _T_159 = or(reservedValidList1[37], PRFValidList[37]) @[decode.scala 384:102]
          node _T_160 = or(reservedValidList1[38], PRFValidList[38]) @[decode.scala 384:102]
          node _T_161 = or(reservedValidList1[39], PRFValidList[39]) @[decode.scala 384:102]
          node _T_162 = or(reservedValidList1[40], PRFValidList[40]) @[decode.scala 384:102]
          node _T_163 = or(reservedValidList1[41], PRFValidList[41]) @[decode.scala 384:102]
          node _T_164 = or(reservedValidList1[42], PRFValidList[42]) @[decode.scala 384:102]
          node _T_165 = or(reservedValidList1[43], PRFValidList[43]) @[decode.scala 384:102]
          node _T_166 = or(reservedValidList1[44], PRFValidList[44]) @[decode.scala 384:102]
          node _T_167 = or(reservedValidList1[45], PRFValidList[45]) @[decode.scala 384:102]
          node _T_168 = or(reservedValidList1[46], PRFValidList[46]) @[decode.scala 384:102]
          node _T_169 = or(reservedValidList1[47], PRFValidList[47]) @[decode.scala 384:102]
          node _T_170 = or(reservedValidList1[48], PRFValidList[48]) @[decode.scala 384:102]
          node _T_171 = or(reservedValidList1[49], PRFValidList[49]) @[decode.scala 384:102]
          node _T_172 = or(reservedValidList1[50], PRFValidList[50]) @[decode.scala 384:102]
          node _T_173 = or(reservedValidList1[51], PRFValidList[51]) @[decode.scala 384:102]
          node _T_174 = or(reservedValidList1[52], PRFValidList[52]) @[decode.scala 384:102]
          node _T_175 = or(reservedValidList1[53], PRFValidList[53]) @[decode.scala 384:102]
          node _T_176 = or(reservedValidList1[54], PRFValidList[54]) @[decode.scala 384:102]
          node _T_177 = or(reservedValidList1[55], PRFValidList[55]) @[decode.scala 384:102]
          node _T_178 = or(reservedValidList1[56], PRFValidList[56]) @[decode.scala 384:102]
          node _T_179 = or(reservedValidList1[57], PRFValidList[57]) @[decode.scala 384:102]
          node _T_180 = or(reservedValidList1[58], PRFValidList[58]) @[decode.scala 384:102]
          node _T_181 = or(reservedValidList1[59], PRFValidList[59]) @[decode.scala 384:102]
          node _T_182 = or(reservedValidList1[60], PRFValidList[60]) @[decode.scala 384:102]
          node _T_183 = or(reservedValidList1[61], PRFValidList[61]) @[decode.scala 384:102]
          node _T_184 = or(reservedValidList1[62], PRFValidList[62]) @[decode.scala 384:102]
          node _T_185 = or(reservedValidList1[63], PRFValidList[63]) @[decode.scala 384:102]
          PRFValidList[0] <= _T_122 @[decode.scala 384:22]
          PRFValidList[1] <= _T_123 @[decode.scala 384:22]
          PRFValidList[2] <= _T_124 @[decode.scala 384:22]
          PRFValidList[3] <= _T_125 @[decode.scala 384:22]
          PRFValidList[4] <= _T_126 @[decode.scala 384:22]
          PRFValidList[5] <= _T_127 @[decode.scala 384:22]
          PRFValidList[6] <= _T_128 @[decode.scala 384:22]
          PRFValidList[7] <= _T_129 @[decode.scala 384:22]
          PRFValidList[8] <= _T_130 @[decode.scala 384:22]
          PRFValidList[9] <= _T_131 @[decode.scala 384:22]
          PRFValidList[10] <= _T_132 @[decode.scala 384:22]
          PRFValidList[11] <= _T_133 @[decode.scala 384:22]
          PRFValidList[12] <= _T_134 @[decode.scala 384:22]
          PRFValidList[13] <= _T_135 @[decode.scala 384:22]
          PRFValidList[14] <= _T_136 @[decode.scala 384:22]
          PRFValidList[15] <= _T_137 @[decode.scala 384:22]
          PRFValidList[16] <= _T_138 @[decode.scala 384:22]
          PRFValidList[17] <= _T_139 @[decode.scala 384:22]
          PRFValidList[18] <= _T_140 @[decode.scala 384:22]
          PRFValidList[19] <= _T_141 @[decode.scala 384:22]
          PRFValidList[20] <= _T_142 @[decode.scala 384:22]
          PRFValidList[21] <= _T_143 @[decode.scala 384:22]
          PRFValidList[22] <= _T_144 @[decode.scala 384:22]
          PRFValidList[23] <= _T_145 @[decode.scala 384:22]
          PRFValidList[24] <= _T_146 @[decode.scala 384:22]
          PRFValidList[25] <= _T_147 @[decode.scala 384:22]
          PRFValidList[26] <= _T_148 @[decode.scala 384:22]
          PRFValidList[27] <= _T_149 @[decode.scala 384:22]
          PRFValidList[28] <= _T_150 @[decode.scala 384:22]
          PRFValidList[29] <= _T_151 @[decode.scala 384:22]
          PRFValidList[30] <= _T_152 @[decode.scala 384:22]
          PRFValidList[31] <= _T_153 @[decode.scala 384:22]
          PRFValidList[32] <= _T_154 @[decode.scala 384:22]
          PRFValidList[33] <= _T_155 @[decode.scala 384:22]
          PRFValidList[34] <= _T_156 @[decode.scala 384:22]
          PRFValidList[35] <= _T_157 @[decode.scala 384:22]
          PRFValidList[36] <= _T_158 @[decode.scala 384:22]
          PRFValidList[37] <= _T_159 @[decode.scala 384:22]
          PRFValidList[38] <= _T_160 @[decode.scala 384:22]
          PRFValidList[39] <= _T_161 @[decode.scala 384:22]
          PRFValidList[40] <= _T_162 @[decode.scala 384:22]
          PRFValidList[41] <= _T_163 @[decode.scala 384:22]
          PRFValidList[42] <= _T_164 @[decode.scala 384:22]
          PRFValidList[43] <= _T_165 @[decode.scala 384:22]
          PRFValidList[44] <= _T_166 @[decode.scala 384:22]
          PRFValidList[45] <= _T_167 @[decode.scala 384:22]
          PRFValidList[46] <= _T_168 @[decode.scala 384:22]
          PRFValidList[47] <= _T_169 @[decode.scala 384:22]
          PRFValidList[48] <= _T_170 @[decode.scala 384:22]
          PRFValidList[49] <= _T_171 @[decode.scala 384:22]
          PRFValidList[50] <= _T_172 @[decode.scala 384:22]
          PRFValidList[51] <= _T_173 @[decode.scala 384:22]
          PRFValidList[52] <= _T_174 @[decode.scala 384:22]
          PRFValidList[53] <= _T_175 @[decode.scala 384:22]
          PRFValidList[54] <= _T_176 @[decode.scala 384:22]
          PRFValidList[55] <= _T_177 @[decode.scala 384:22]
          PRFValidList[56] <= _T_178 @[decode.scala 384:22]
          PRFValidList[57] <= _T_179 @[decode.scala 384:22]
          PRFValidList[58] <= _T_180 @[decode.scala 384:22]
          PRFValidList[59] <= _T_181 @[decode.scala 384:22]
          PRFValidList[60] <= _T_182 @[decode.scala 384:22]
          PRFValidList[61] <= _T_183 @[decode.scala 384:22]
          PRFValidList[62] <= _T_184 @[decode.scala 384:22]
          PRFValidList[63] <= _T_185 @[decode.scala 384:22]
        else :
          frontEndRegMap <= architecturalRegMap @[decode.scala 386:24]
          wire _WIRE_1 : UInt<1>[64] @[decode.scala 387:34]
          _WIRE_1[0] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[1] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[2] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[3] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[4] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[5] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[6] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[7] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[8] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[9] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[10] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[11] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[12] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[13] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[14] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[15] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[16] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[17] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[18] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[19] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[20] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[21] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[22] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[23] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[24] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[25] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[26] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[27] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[28] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[29] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[30] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[31] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[32] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[33] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[34] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[35] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[36] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[37] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[38] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[39] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[40] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[41] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[42] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[43] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[44] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[45] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[46] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[47] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[48] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[49] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[50] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[51] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[52] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[53] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[54] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[55] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[56] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[57] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[58] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[59] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[60] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[61] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[62] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[63] <= UInt<1>("h1") @[decode.scala 387:34]
          PRFFreeList <= _WIRE_1 @[decode.scala 387:24]
          wire _WIRE_2 : UInt<1>[64] @[decode.scala 388:34]
          _WIRE_2[0] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[1] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[2] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[3] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[4] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[5] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[6] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[7] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[8] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[9] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[10] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[11] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[12] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[13] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[14] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[15] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[16] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[17] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[18] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[19] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[20] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[21] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[22] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[23] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[24] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[25] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[26] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[27] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[28] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[29] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[30] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[31] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[32] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[33] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[34] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[35] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[36] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[37] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[38] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[39] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[40] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[41] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[42] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[43] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[44] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[45] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[46] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[47] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[48] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[49] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[50] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[51] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[52] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[53] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[54] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[55] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[56] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[57] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[58] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[59] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[60] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[61] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[62] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[63] <= UInt<1>("h0") @[decode.scala 388:34]
          PRFValidList <= _WIRE_2 @[decode.scala 388:24]
          coherency <= UInt<1>("h1") @[decode.scala 389:19]
          PRFValidList[architecturalRegMap[0]] <= UInt<1>("h1") @[decode.scala 392:47]
          PRFFreeList[architecturalRegMap[0]] <= UInt<1>("h0") @[decode.scala 393:46]
          PRFValidList[architecturalRegMap[1]] <= UInt<1>("h1") @[decode.scala 392:47]
          PRFFreeList[architecturalRegMap[1]] <= UInt<1>("h0") @[decode.scala 393:46]
          PRFValidList[architecturalRegMap[2]] <= UInt<1>("h1") @[decode.scala 392:47]
          PRFFreeList[architecturalRegMap[2]] <= UInt<1>("h0") @[decode.scala 393:46]
          PRFValidList[architecturalRegMap[3]] <= UInt<1>("h1") @[decode.scala 392:47]
          PRFFreeList[architecturalRegMap[3]] <= UInt<1>("h0") @[decode.scala 393:46]
          PRFValidList[architecturalRegMap[4]] <= UInt<1>("h1") @[decode.scala 392:47]
          PRFFreeList[architecturalRegMap[4]] <= UInt<1>("h0") @[decode.scala 393:46]
          PRFValidList[architecturalRegMap[5]] <= UInt<1>("h1") @[decode.scala 392:47]
          PRFFreeList[architecturalRegMap[5]] <= UInt<1>("h0") @[decode.scala 393:46]
          PRFValidList[architecturalRegMap[6]] <= UInt<1>("h1") @[decode.scala 392:47]
          PRFFreeList[architecturalRegMap[6]] <= UInt<1>("h0") @[decode.scala 393:46]
          PRFValidList[architecturalRegMap[7]] <= UInt<1>("h1") @[decode.scala 392:47]
          PRFFreeList[architecturalRegMap[7]] <= UInt<1>("h0") @[decode.scala 393:46]
          PRFValidList[architecturalRegMap[8]] <= UInt<1>("h1") @[decode.scala 392:47]
          PRFFreeList[architecturalRegMap[8]] <= UInt<1>("h0") @[decode.scala 393:46]
          PRFValidList[architecturalRegMap[9]] <= UInt<1>("h1") @[decode.scala 392:47]
          PRFFreeList[architecturalRegMap[9]] <= UInt<1>("h0") @[decode.scala 393:46]
          PRFValidList[architecturalRegMap[10]] <= UInt<1>("h1") @[decode.scala 392:47]
          PRFFreeList[architecturalRegMap[10]] <= UInt<1>("h0") @[decode.scala 393:46]
          PRFValidList[architecturalRegMap[11]] <= UInt<1>("h1") @[decode.scala 392:47]
          PRFFreeList[architecturalRegMap[11]] <= UInt<1>("h0") @[decode.scala 393:46]
          PRFValidList[architecturalRegMap[12]] <= UInt<1>("h1") @[decode.scala 392:47]
          PRFFreeList[architecturalRegMap[12]] <= UInt<1>("h0") @[decode.scala 393:46]
          PRFValidList[architecturalRegMap[13]] <= UInt<1>("h1") @[decode.scala 392:47]
          PRFFreeList[architecturalRegMap[13]] <= UInt<1>("h0") @[decode.scala 393:46]
          PRFValidList[architecturalRegMap[14]] <= UInt<1>("h1") @[decode.scala 392:47]
          PRFFreeList[architecturalRegMap[14]] <= UInt<1>("h0") @[decode.scala 393:46]
          PRFValidList[architecturalRegMap[15]] <= UInt<1>("h1") @[decode.scala 392:47]
          PRFFreeList[architecturalRegMap[15]] <= UInt<1>("h0") @[decode.scala 393:46]
          PRFValidList[architecturalRegMap[16]] <= UInt<1>("h1") @[decode.scala 392:47]
          PRFFreeList[architecturalRegMap[16]] <= UInt<1>("h0") @[decode.scala 393:46]
          PRFValidList[architecturalRegMap[17]] <= UInt<1>("h1") @[decode.scala 392:47]
          PRFFreeList[architecturalRegMap[17]] <= UInt<1>("h0") @[decode.scala 393:46]
          PRFValidList[architecturalRegMap[18]] <= UInt<1>("h1") @[decode.scala 392:47]
          PRFFreeList[architecturalRegMap[18]] <= UInt<1>("h0") @[decode.scala 393:46]
          PRFValidList[architecturalRegMap[19]] <= UInt<1>("h1") @[decode.scala 392:47]
          PRFFreeList[architecturalRegMap[19]] <= UInt<1>("h0") @[decode.scala 393:46]
          PRFValidList[architecturalRegMap[20]] <= UInt<1>("h1") @[decode.scala 392:47]
          PRFFreeList[architecturalRegMap[20]] <= UInt<1>("h0") @[decode.scala 393:46]
          PRFValidList[architecturalRegMap[21]] <= UInt<1>("h1") @[decode.scala 392:47]
          PRFFreeList[architecturalRegMap[21]] <= UInt<1>("h0") @[decode.scala 393:46]
          PRFValidList[architecturalRegMap[22]] <= UInt<1>("h1") @[decode.scala 392:47]
          PRFFreeList[architecturalRegMap[22]] <= UInt<1>("h0") @[decode.scala 393:46]
          PRFValidList[architecturalRegMap[23]] <= UInt<1>("h1") @[decode.scala 392:47]
          PRFFreeList[architecturalRegMap[23]] <= UInt<1>("h0") @[decode.scala 393:46]
          PRFValidList[architecturalRegMap[24]] <= UInt<1>("h1") @[decode.scala 392:47]
          PRFFreeList[architecturalRegMap[24]] <= UInt<1>("h0") @[decode.scala 393:46]
          PRFValidList[architecturalRegMap[25]] <= UInt<1>("h1") @[decode.scala 392:47]
          PRFFreeList[architecturalRegMap[25]] <= UInt<1>("h0") @[decode.scala 393:46]
          PRFValidList[architecturalRegMap[26]] <= UInt<1>("h1") @[decode.scala 392:47]
          PRFFreeList[architecturalRegMap[26]] <= UInt<1>("h0") @[decode.scala 393:46]
          PRFValidList[architecturalRegMap[27]] <= UInt<1>("h1") @[decode.scala 392:47]
          PRFFreeList[architecturalRegMap[27]] <= UInt<1>("h0") @[decode.scala 393:46]
          PRFValidList[architecturalRegMap[28]] <= UInt<1>("h1") @[decode.scala 392:47]
          PRFFreeList[architecturalRegMap[28]] <= UInt<1>("h0") @[decode.scala 393:46]
          PRFValidList[architecturalRegMap[29]] <= UInt<1>("h1") @[decode.scala 392:47]
          PRFFreeList[architecturalRegMap[29]] <= UInt<1>("h0") @[decode.scala 393:46]
          PRFValidList[architecturalRegMap[30]] <= UInt<1>("h1") @[decode.scala 392:47]
          PRFFreeList[architecturalRegMap[30]] <= UInt<1>("h0") @[decode.scala 393:46]
          PRFValidList[architecturalRegMap[31]] <= UInt<1>("h1") @[decode.scala 392:47]
          PRFFreeList[architecturalRegMap[31]] <= UInt<1>("h0") @[decode.scala 393:46]
        branchTracker <= UInt<1>("h0") @[decode.scala 398:21]
      else :
        reservedRegMap1 <= reservedRegMap2 @[decode.scala 400:23]
        reservedRegMap2 <= reservedRegMap3 @[decode.scala 401:23]
        reservedRegMap3 <= reservedRegMap4 @[decode.scala 402:23]
        reservedFreeList1 <= reservedFreeList2 @[decode.scala 404:25]
        reservedFreeList2 <= reservedFreeList3 @[decode.scala 405:25]
        reservedFreeList3 <= reservedFreeList4 @[decode.scala 406:25]
        reservedValidList1 <= reservedValidList2 @[decode.scala 408:26]
        reservedValidList2 <= reservedValidList3 @[decode.scala 409:26]
        reservedValidList3 <= reservedValidList4 @[decode.scala 410:26]
    wire bitPosition : UInt<2>
    bitPosition <= UInt<2>("h0")
    node bitPosition_lo = cat(branchBuffer.branchMask[1], branchBuffer.branchMask[0]) @[decode.scala 417:59]
    node bitPosition_hi_hi = cat(branchBuffer.branchMask[4], branchBuffer.branchMask[3]) @[decode.scala 417:59]
    node bitPosition_hi = cat(bitPosition_hi_hi, branchBuffer.branchMask[2]) @[decode.scala 417:59]
    node _bitPosition_T = cat(bitPosition_hi, bitPosition_lo) @[decode.scala 417:59]
    node _bitPosition_T_1 = not(_bitPosition_T) @[decode.scala 417:34]
    node _bitPosition_T_2 = bits(_bitPosition_T_1, 0, 0) @[OneHot.scala 47:45]
    node _bitPosition_T_3 = bits(_bitPosition_T_1, 1, 1) @[OneHot.scala 47:45]
    node _bitPosition_T_4 = bits(_bitPosition_T_1, 2, 2) @[OneHot.scala 47:45]
    node _bitPosition_T_5 = bits(_bitPosition_T_1, 3, 3) @[OneHot.scala 47:45]
    node _bitPosition_T_6 = bits(_bitPosition_T_1, 4, 4) @[OneHot.scala 47:45]
    node _bitPosition_T_7 = mux(_bitPosition_T_5, UInt<2>("h3"), UInt<3>("h4")) @[Mux.scala 47:70]
    node _bitPosition_T_8 = mux(_bitPosition_T_4, UInt<2>("h2"), _bitPosition_T_7) @[Mux.scala 47:70]
    node _bitPosition_T_9 = mux(_bitPosition_T_3, UInt<1>("h1"), _bitPosition_T_8) @[Mux.scala 47:70]
    node _bitPosition_T_10 = mux(_bitPosition_T_2, UInt<1>("h0"), _bitPosition_T_9) @[Mux.scala 47:70]
    bitPosition <= _bitPosition_T_10 @[decode.scala 417:15]
    node _T_186 = and(validInputBuf, readyOutputBuf) @[decode.scala 419:22]
    when _T_186 : @[decode.scala 419:41]
      node _T_187 = eq(opcode, UInt<7>("h6f")) @[decode.scala 420:17]
      node _T_188 = eq(opcode, UInt<7>("h67")) @[decode.scala 420:38]
      node _T_189 = or(_T_187, _T_188) @[decode.scala 420:28]
      node _T_190 = eq(opcode, UInt<7>("h63")) @[decode.scala 420:60]
      node _T_191 = or(_T_189, _T_190) @[decode.scala 420:50]
      when _T_191 : @[decode.scala 420:73]
        branchReg <= UInt<1>("h1") @[decode.scala 421:17]
        branchBuffer.branchPC <= pc @[decode.scala 422:29]
        branchBuffer.branchMask[bitPosition] <= UInt<1>("h1") @[decode.scala 423:44]
        node _T_192 = eq(UInt<1>("h0"), bitPosition) @[decode.scala 424:27]
        when _T_192 : @[decode.scala 424:27]
          branchPCMask <= UInt<1>("h1") @[decode.scala 425:32]
        else :
          node _T_193 = eq(UInt<1>("h1"), bitPosition) @[decode.scala 424:27]
          when _T_193 : @[decode.scala 424:27]
            branchPCMask <= UInt<2>("h2") @[decode.scala 426:32]
          else :
            node _T_194 = eq(UInt<2>("h2"), bitPosition) @[decode.scala 424:27]
            when _T_194 : @[decode.scala 424:27]
              branchPCMask <= UInt<3>("h4") @[decode.scala 427:32]
            else :
              node _T_195 = eq(UInt<2>("h3"), bitPosition) @[decode.scala 424:27]
              when _T_195 : @[decode.scala 424:27]
                branchPCMask <= UInt<4>("h8") @[decode.scala 428:32]
        node _T_196 = eq(UInt<1>("h0"), branchTracker) @[decode.scala 431:29]
        when _T_196 : @[decode.scala 431:29]
          reservedRegMap1 <= frontEndRegMap @[decode.scala 433:30]
          reservedFreeList1 <= PRFFreeList @[decode.scala 434:30]
          reservedValidList1 <= PRFValidList @[decode.scala 435:30]
          node _T_197 = bits(opcode, 2, 2) @[decode.scala 436:22]
          node _T_198 = bits(_T_197, 0, 0) @[decode.scala 436:26]
          node _T_199 = orr(rd) @[decode.scala 436:39]
          node _T_200 = and(_T_198, _T_199) @[decode.scala 436:33]
          when _T_200 : @[decode.scala 436:44]
            reservedRegMap1[rd] <= freeRegAddr @[decode.scala 437:45]
            reservedFreeList1[freeRegAddr] <= UInt<1>("h0") @[decode.scala 438:45]
            reservedValidList1[freeRegAddr] <= UInt<1>("h0") @[decode.scala 439:45]
        else :
          node _T_201 = eq(UInt<1>("h1"), branchTracker) @[decode.scala 431:29]
          when _T_201 : @[decode.scala 431:29]
            reservedRegMap2 <= frontEndRegMap @[decode.scala 443:30]
            reservedFreeList2 <= PRFFreeList @[decode.scala 444:30]
            reservedValidList2 <= PRFValidList @[decode.scala 445:30]
            node _T_202 = bits(opcode, 2, 2) @[decode.scala 446:22]
            node _T_203 = bits(_T_202, 0, 0) @[decode.scala 446:26]
            node _T_204 = orr(rd) @[decode.scala 446:39]
            node _T_205 = and(_T_203, _T_204) @[decode.scala 446:33]
            when _T_205 : @[decode.scala 446:44]
              reservedRegMap2[rd] <= freeRegAddr @[decode.scala 447:45]
              reservedFreeList2[freeRegAddr] <= UInt<1>("h0") @[decode.scala 448:45]
              reservedValidList2[freeRegAddr] <= UInt<1>("h0") @[decode.scala 449:45]
          else :
            node _T_206 = eq(UInt<2>("h2"), branchTracker) @[decode.scala 431:29]
            when _T_206 : @[decode.scala 431:29]
              reservedRegMap3 <= frontEndRegMap @[decode.scala 453:30]
              reservedFreeList3 <= PRFFreeList @[decode.scala 454:30]
              reservedValidList3 <= PRFValidList @[decode.scala 455:30]
              node _T_207 = bits(opcode, 2, 2) @[decode.scala 456:22]
              node _T_208 = bits(_T_207, 0, 0) @[decode.scala 456:26]
              node _T_209 = orr(rd) @[decode.scala 456:39]
              node _T_210 = and(_T_208, _T_209) @[decode.scala 456:33]
              when _T_210 : @[decode.scala 456:44]
                reservedRegMap3[rd] <= freeRegAddr @[decode.scala 457:45]
                reservedFreeList3[freeRegAddr] <= UInt<1>("h0") @[decode.scala 458:45]
                reservedValidList3[freeRegAddr] <= UInt<1>("h0") @[decode.scala 459:45]
            else :
              node _T_211 = eq(UInt<2>("h3"), branchTracker) @[decode.scala 431:29]
              when _T_211 : @[decode.scala 431:29]
                reservedRegMap4 <= frontEndRegMap @[decode.scala 463:30]
                reservedFreeList4 <= PRFFreeList @[decode.scala 464:30]
                reservedValidList4 <= PRFValidList @[decode.scala 465:30]
                node _T_212 = bits(opcode, 2, 2) @[decode.scala 466:22]
                node _T_213 = bits(_T_212, 0, 0) @[decode.scala 466:26]
                node _T_214 = orr(rd) @[decode.scala 466:39]
                node _T_215 = and(_T_213, _T_214) @[decode.scala 466:33]
                when _T_215 : @[decode.scala 466:44]
                  reservedRegMap4[rd] <= freeRegAddr @[decode.scala 467:45]
                  reservedFreeList4[freeRegAddr] <= UInt<1>("h0") @[decode.scala 468:45]
                  reservedValidList4[freeRegAddr] <= UInt<1>("h0") @[decode.scala 469:45]
        node _branchTracker_T_2 = add(branchTracker, UInt<1>("h1")) @[decode.scala 473:38]
        node _branchTracker_T_3 = tail(_branchTracker_T_2, 1) @[decode.scala 473:38]
        branchTracker <= _branchTracker_T_3 @[decode.scala 473:21]
      else :
        branchReg <= UInt<1>("h0") @[decode.scala 475:17]
    node lo_2 = cat(branchBuffer.branchMask[1], branchBuffer.branchMask[0]) @[decode.scala 480:32]
    node hi_hi_2 = cat(branchBuffer.branchMask[4], branchBuffer.branchMask[3]) @[decode.scala 480:32]
    node hi_2 = cat(hi_hi_2, branchBuffer.branchMask[2]) @[decode.scala 480:32]
    node _T_216 = cat(hi_2, lo_2) @[decode.scala 480:32]
    node _T_217 = neq(_T_216, UInt<1>("h0")) @[decode.scala 480:39]
    node _T_218 = and(_T_217, validInputBuf) @[decode.scala 480:47]
    node _T_219 = and(_T_218, readyOutputBuf) @[decode.scala 480:64]
    when _T_219 : @[decode.scala 480:83]
      branchBuffer.predictedPC <= pc @[decode.scala 481:30]
    node _branchBuffer_branchPCReady_T = eq(opcode, UInt<7>("h63")) @[decode.scala 484:41]
    node _branchBuffer_branchPCReady_T_1 = eq(opcode, UInt<7>("h6f")) @[decode.scala 484:63]
    node _branchBuffer_branchPCReady_T_2 = or(_branchBuffer_branchPCReady_T, _branchBuffer_branchPCReady_T_1) @[decode.scala 484:53]
    node _branchBuffer_branchPCReady_T_3 = eq(opcode, UInt<7>("h67")) @[decode.scala 484:84]
    node _branchBuffer_branchPCReady_T_4 = or(_branchBuffer_branchPCReady_T_2, _branchBuffer_branchPCReady_T_3) @[decode.scala 484:74]
    node _branchBuffer_branchPCReady_T_5 = and(_branchBuffer_branchPCReady_T_4, validInputBuf) @[decode.scala 484:97]
    node _branchBuffer_branchPCReady_T_6 = and(_branchBuffer_branchPCReady_T_5, readyOutputBuf) @[decode.scala 484:114]
    branchBuffer.branchPCReady <= _branchBuffer_branchPCReady_T_6 @[decode.scala 484:30]
    node _branchBuffer_predictedPCReady_T = and(branchReg, validInputBuf) @[decode.scala 485:46]
    node _branchBuffer_predictedPCReady_T_1 = and(_branchBuffer_predictedPCReady_T, readyOutputBuf) @[decode.scala 485:63]
    branchBuffer.predictedPCReady <= _branchBuffer_predictedPCReady_T_1 @[decode.scala 485:33]
    node _T_220 = neq(expectedPC, UInt<1>("h0")) @[decode.scala 487:19]
    node _T_221 = and(_T_220, fromFetch.fired) @[decode.scala 487:27]
    node _T_222 = eq(fromFetch.expected.pc, fromFetch.pc) @[decode.scala 487:71]
    node _T_223 = and(_T_221, _T_222) @[decode.scala 487:46]
    when _T_223 : @[decode.scala 487:89]
      expectedPC <= UInt<1>("h0") @[decode.scala 488:16]
      coherency <= UInt<1>("h0") @[decode.scala 489:15]
    when toExec.fired : @[decode.scala 492:22]
      issueRobBuff <= toExec.robAddr @[decode.scala 492:37]
    when writeBackResult.fired : @[decode.scala 493:31]
      commitRobBuf <= writeBackResult.robAddr @[decode.scala 493:46]
    node _isCSR_T = bits(outputBuffer.instruction, 6, 0) @[decode.scala 495:36]
    node _isCSR_T_1 = eq(_isCSR_T, UInt<7>("h73")) @[decode.scala 495:42]
    node _isCSR_T_2 = bits(outputBuffer.instruction, 14, 12) @[decode.scala 495:82]
    node _isCSR_T_3 = neq(_isCSR_T_2, UInt<1>("h0")) @[decode.scala 495:90]
    node _isCSR_T_4 = and(_isCSR_T_1, _isCSR_T_3) @[decode.scala 495:55]
    node _isCSR_T_5 = and(_isCSR_T_4, toExec.fired) @[decode.scala 495:98]
    isCSR <= _isCSR_T_5 @[decode.scala 495:9]
    reg ustatus : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[decode.scala 497:28]
    reg utvec : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[decode.scala 498:28]
    reg uepc : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[decode.scala 499:28]
    reg ucause : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[decode.scala 500:28]
    reg scounteren : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[decode.scala 501:28]
    reg satp : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[decode.scala 502:28]
    reg mstatus : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[decode.scala 503:28]
    reg misa : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[decode.scala 504:28]
    reg medeleg : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[decode.scala 505:28]
    reg mideleg : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[decode.scala 506:28]
    reg mie : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[decode.scala 507:28]
    reg mtvec : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[decode.scala 508:28]
    reg mcounteren : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[decode.scala 509:28]
    reg mscratch : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[decode.scala 510:28]
    reg mepc : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[decode.scala 511:28]
    reg mcause : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[decode.scala 512:28]
    reg mtval : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[decode.scala 513:28]
    reg mip : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[decode.scala 514:28]
    reg pmpcfg0 : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[decode.scala 515:28]
    reg pmpaddr0 : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[decode.scala 516:28]
    reg mvendorid : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[decode.scala 517:28]
    reg marchid : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[decode.scala 518:28]
    reg mimpid : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[decode.scala 519:28]
    reg mhartid : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[decode.scala 520:28]
    node _mstatus_T = and(mstatus, UInt<13>("h1888")) @[decode.scala 522:23]
    node _mstatus_T_1 = or(_mstatus_T, UInt<36>("ha00000000")) @[decode.scala 522:48]
    mstatus <= _mstatus_T_1 @[decode.scala 522:11]
    node _misa_T = shl(UInt<64>("h1"), 63) @[decode.scala 523:36]
    node _misa_T_1 = or(UInt<21>("h101101"), _misa_T) @[decode.scala 523:23]
    misa <= _misa_T_1 @[decode.scala 523:8]
    when isCSR : @[decode.scala 525:15]
      csrRobAddrReg <= toExec.robAddr @[decode.scala 526:19]
      node _csrFunc3Reg_T = bits(outputBuffer.instruction, 14, 12) @[decode.scala 527:46]
      csrFunc3Reg <= _csrFunc3Reg_T @[decode.scala 527:19]
      csrAddrReg <= outputBuffer.immediate @[decode.scala 528:19]
      node _csrImmReg_T = bits(outputBuffer.instruction, 19, 15) @[decode.scala 529:46]
      node _csrImmReg_T_1 = and(_csrImmReg_T, UInt<5>("h1f")) @[decode.scala 529:54]
      csrImmReg <= _csrImmReg_T_1 @[decode.scala 529:19]
      csrInsReg <= outputBuffer.instruction @[decode.scala 530:19]
    node _T_224 = eq(opcode, UInt<7>("h73")) @[decode.scala 534:15]
    node _T_225 = neq(fun3, UInt<1>("h0")) @[decode.scala 534:36]
    node _T_226 = and(_T_224, _T_225) @[decode.scala 534:28]
    node _T_227 = and(_T_226, validInputBuf) @[decode.scala 534:44]
    node _T_228 = and(_T_227, readyOutputBuf) @[decode.scala 534:61]
    when _T_228 : @[decode.scala 534:80]
      node _T_229 = and(immediate, UInt<12>("hfff")) @[decode.scala 535:22]
      node _T_230 = eq(UInt<1>("h0"), _T_229) @[decode.scala 535:34]
      when _T_230 : @[decode.scala 535:34]
        csrReadDataReg <= ustatus @[decode.scala 536:37]
      else :
        node _T_231 = eq(UInt<3>("h5"), _T_229) @[decode.scala 535:34]
        when _T_231 : @[decode.scala 535:34]
          csrReadDataReg <= utvec @[decode.scala 537:37]
        else :
          node _T_232 = eq(UInt<7>("h41"), _T_229) @[decode.scala 535:34]
          when _T_232 : @[decode.scala 535:34]
            csrReadDataReg <= uepc @[decode.scala 538:37]
          else :
            node _T_233 = eq(UInt<7>("h42"), _T_229) @[decode.scala 535:34]
            when _T_233 : @[decode.scala 535:34]
              csrReadDataReg <= ucause @[decode.scala 539:37]
            else :
              node _T_234 = eq(UInt<9>("h106"), _T_229) @[decode.scala 535:34]
              when _T_234 : @[decode.scala 535:34]
                csrReadDataReg <= scounteren @[decode.scala 540:37]
              else :
                node _T_235 = eq(UInt<9>("h180"), _T_229) @[decode.scala 535:34]
                when _T_235 : @[decode.scala 535:34]
                  csrReadDataReg <= satp @[decode.scala 541:37]
                else :
                  node _T_236 = eq(UInt<10>("h300"), _T_229) @[decode.scala 535:34]
                  when _T_236 : @[decode.scala 535:34]
                    csrReadDataReg <= mstatus @[decode.scala 542:37]
                  else :
                    node _T_237 = eq(UInt<10>("h301"), _T_229) @[decode.scala 535:34]
                    when _T_237 : @[decode.scala 535:34]
                      csrReadDataReg <= misa @[decode.scala 543:37]
                    else :
                      node _T_238 = eq(UInt<10>("h302"), _T_229) @[decode.scala 535:34]
                      when _T_238 : @[decode.scala 535:34]
                        csrReadDataReg <= medeleg @[decode.scala 544:37]
                      else :
                        node _T_239 = eq(UInt<10>("h303"), _T_229) @[decode.scala 535:34]
                        when _T_239 : @[decode.scala 535:34]
                          csrReadDataReg <= mideleg @[decode.scala 545:37]
                        else :
                          node _T_240 = eq(UInt<10>("h304"), _T_229) @[decode.scala 535:34]
                          when _T_240 : @[decode.scala 535:34]
                            csrReadDataReg <= mie @[decode.scala 546:37]
                          else :
                            node _T_241 = eq(UInt<10>("h305"), _T_229) @[decode.scala 535:34]
                            when _T_241 : @[decode.scala 535:34]
                              csrReadDataReg <= mtvec @[decode.scala 547:37]
                            else :
                              node _T_242 = eq(UInt<10>("h306"), _T_229) @[decode.scala 535:34]
                              when _T_242 : @[decode.scala 535:34]
                                csrReadDataReg <= mcounteren @[decode.scala 548:37]
                              else :
                                node _T_243 = eq(UInt<10>("h340"), _T_229) @[decode.scala 535:34]
                                when _T_243 : @[decode.scala 535:34]
                                  csrReadDataReg <= mscratch @[decode.scala 549:37]
                                else :
                                  node _T_244 = eq(UInt<10>("h341"), _T_229) @[decode.scala 535:34]
                                  when _T_244 : @[decode.scala 535:34]
                                    csrReadDataReg <= mepc @[decode.scala 550:37]
                                  else :
                                    node _T_245 = eq(UInt<10>("h342"), _T_229) @[decode.scala 535:34]
                                    when _T_245 : @[decode.scala 535:34]
                                      csrReadDataReg <= mcause @[decode.scala 551:37]
                                    else :
                                      node _T_246 = eq(UInt<10>("h343"), _T_229) @[decode.scala 535:34]
                                      when _T_246 : @[decode.scala 535:34]
                                        csrReadDataReg <= mtval @[decode.scala 552:37]
                                      else :
                                        node _T_247 = eq(UInt<10>("h344"), _T_229) @[decode.scala 535:34]
                                        when _T_247 : @[decode.scala 535:34]
                                          csrReadDataReg <= mip @[decode.scala 553:37]
                                        else :
                                          node _T_248 = eq(UInt<10>("h3a0"), _T_229) @[decode.scala 535:34]
                                          when _T_248 : @[decode.scala 535:34]
                                            csrReadDataReg <= pmpcfg0 @[decode.scala 554:37]
                                          else :
                                            node _T_249 = eq(UInt<10>("h3b0"), _T_229) @[decode.scala 535:34]
                                            when _T_249 : @[decode.scala 535:34]
                                              csrReadDataReg <= pmpaddr0 @[decode.scala 555:37]
                                            else :
                                              node _T_250 = eq(UInt<12>("hf11"), _T_229) @[decode.scala 535:34]
                                              when _T_250 : @[decode.scala 535:34]
                                                csrReadDataReg <= mvendorid @[decode.scala 556:37]
                                              else :
                                                node _T_251 = eq(UInt<12>("hf12"), _T_229) @[decode.scala 535:34]
                                                when _T_251 : @[decode.scala 535:34]
                                                  csrReadDataReg <= marchid @[decode.scala 557:37]
                                                else :
                                                  node _T_252 = eq(UInt<12>("hf13"), _T_229) @[decode.scala 535:34]
                                                  when _T_252 : @[decode.scala 535:34]
                                                    csrReadDataReg <= mimpid @[decode.scala 558:37]
                                                  else :
                                                    node _T_253 = eq(UInt<12>("hf14"), _T_229) @[decode.scala 535:34]
                                                    when _T_253 : @[decode.scala 535:34]
                                                      csrReadDataReg <= mhartid @[decode.scala 559:37]
    wire csrWriteData : UInt<64>
    csrWriteData <= UInt<64>("h0")
    node _T_254 = bits(writeBackResult.instruction, 6, 0) @[decode.scala 564:60]
    node _T_255 = eq(_T_254, UInt<7>("h73")) @[decode.scala 564:66]
    node _T_256 = and(writeBackResult.fired, _T_255) @[decode.scala 564:30]
    when _T_256 : @[decode.scala 564:80]
      stallReg <= UInt<1>("h0") @[decode.scala 565:14]
    node _T_257 = bits(writeBackResult.instruction, 6, 0) @[decode.scala 568:60]
    node _T_258 = eq(_T_257, UInt<7>("h73")) @[decode.scala 568:66]
    node _T_259 = and(writeBackResult.fired, _T_258) @[decode.scala 568:30]
    node _T_260 = bits(writeBackResult.instruction, 14, 12) @[decode.scala 568:109]
    node _T_261 = neq(_T_260, UInt<1>("h0")) @[decode.scala 568:117]
    node _T_262 = and(_T_259, _T_261) @[decode.scala 568:79]
    when _T_262 : @[decode.scala 568:126]
      csrWriteData <= writeBackResult.data @[decode.scala 570:18]
      node _T_263 = bits(writeBackResult.instruction, 14, 12) @[decode.scala 571:39]
      node _T_264 = eq(UInt<1>("h1"), _T_263) @[decode.scala 571:48]
      when _T_264 : @[decode.scala 571:48]
        node _T_265 = and(csrAddrReg, UInt<12>("hfff")) @[decode.scala 573:27]
        node _T_266 = eq(UInt<1>("h0"), _T_265) @[decode.scala 573:39]
        when _T_266 : @[decode.scala 573:39]
          ustatus <= csrWriteData @[decode.scala 574:37]
        else :
          node _T_267 = eq(UInt<3>("h5"), _T_265) @[decode.scala 573:39]
          when _T_267 : @[decode.scala 573:39]
            utvec <= csrWriteData @[decode.scala 575:37]
          else :
            node _T_268 = eq(UInt<7>("h41"), _T_265) @[decode.scala 573:39]
            when _T_268 : @[decode.scala 573:39]
              uepc <= csrWriteData @[decode.scala 576:37]
            else :
              node _T_269 = eq(UInt<7>("h42"), _T_265) @[decode.scala 573:39]
              when _T_269 : @[decode.scala 573:39]
                ucause <= csrWriteData @[decode.scala 577:37]
              else :
                node _T_270 = eq(UInt<9>("h106"), _T_265) @[decode.scala 573:39]
                when _T_270 : @[decode.scala 573:39]
                  scounteren <= csrWriteData @[decode.scala 578:37]
                else :
                  node _T_271 = eq(UInt<9>("h180"), _T_265) @[decode.scala 573:39]
                  when _T_271 : @[decode.scala 573:39]
                    satp <= csrWriteData @[decode.scala 579:37]
                  else :
                    node _T_272 = eq(UInt<10>("h300"), _T_265) @[decode.scala 573:39]
                    when _T_272 : @[decode.scala 573:39]
                      mstatus <= csrWriteData @[decode.scala 580:37]
                    else :
                      node _T_273 = eq(UInt<10>("h301"), _T_265) @[decode.scala 573:39]
                      when _T_273 : @[decode.scala 573:39]
                        misa <= csrWriteData @[decode.scala 581:37]
                      else :
                        node _T_274 = eq(UInt<10>("h302"), _T_265) @[decode.scala 573:39]
                        when _T_274 : @[decode.scala 573:39]
                          medeleg <= csrWriteData @[decode.scala 582:37]
                        else :
                          node _T_275 = eq(UInt<10>("h303"), _T_265) @[decode.scala 573:39]
                          when _T_275 : @[decode.scala 573:39]
                            mideleg <= csrWriteData @[decode.scala 583:37]
                          else :
                            node _T_276 = eq(UInt<10>("h304"), _T_265) @[decode.scala 573:39]
                            when _T_276 : @[decode.scala 573:39]
                              mie <= csrWriteData @[decode.scala 584:37]
                            else :
                              node _T_277 = eq(UInt<10>("h305"), _T_265) @[decode.scala 573:39]
                              when _T_277 : @[decode.scala 573:39]
                                mtvec <= csrWriteData @[decode.scala 585:37]
                              else :
                                node _T_278 = eq(UInt<10>("h306"), _T_265) @[decode.scala 573:39]
                                when _T_278 : @[decode.scala 573:39]
                                  mcounteren <= csrWriteData @[decode.scala 586:37]
                                else :
                                  node _T_279 = eq(UInt<10>("h340"), _T_265) @[decode.scala 573:39]
                                  when _T_279 : @[decode.scala 573:39]
                                    mscratch <= csrWriteData @[decode.scala 587:37]
                                  else :
                                    node _T_280 = eq(UInt<10>("h341"), _T_265) @[decode.scala 573:39]
                                    when _T_280 : @[decode.scala 573:39]
                                      mepc <= csrWriteData @[decode.scala 588:37]
                                    else :
                                      node _T_281 = eq(UInt<10>("h342"), _T_265) @[decode.scala 573:39]
                                      when _T_281 : @[decode.scala 573:39]
                                        mcause <= csrWriteData @[decode.scala 589:37]
                                      else :
                                        node _T_282 = eq(UInt<10>("h343"), _T_265) @[decode.scala 573:39]
                                        when _T_282 : @[decode.scala 573:39]
                                          mtval <= csrWriteData @[decode.scala 590:37]
                                        else :
                                          node _T_283 = eq(UInt<10>("h344"), _T_265) @[decode.scala 573:39]
                                          when _T_283 : @[decode.scala 573:39]
                                            mip <= csrWriteData @[decode.scala 591:37]
                                          else :
                                            node _T_284 = eq(UInt<10>("h3a0"), _T_265) @[decode.scala 573:39]
                                            when _T_284 : @[decode.scala 573:39]
                                              pmpcfg0 <= csrWriteData @[decode.scala 592:37]
                                            else :
                                              node _T_285 = eq(UInt<10>("h3b0"), _T_265) @[decode.scala 573:39]
                                              when _T_285 : @[decode.scala 573:39]
                                                pmpaddr0 <= csrWriteData @[decode.scala 593:37]
                                              else :
                                                node _T_286 = eq(UInt<12>("hf11"), _T_265) @[decode.scala 573:39]
                                                when _T_286 : @[decode.scala 573:39]
                                                  mvendorid <= csrWriteData @[decode.scala 594:37]
                                                else :
                                                  node _T_287 = eq(UInt<12>("hf12"), _T_265) @[decode.scala 573:39]
                                                  when _T_287 : @[decode.scala 573:39]
                                                    marchid <= csrWriteData @[decode.scala 595:37]
                                                  else :
                                                    node _T_288 = eq(UInt<12>("hf13"), _T_265) @[decode.scala 573:39]
                                                    when _T_288 : @[decode.scala 573:39]
                                                      mimpid <= csrWriteData @[decode.scala 596:37]
                                                    else :
                                                      node _T_289 = eq(UInt<12>("hf14"), _T_265) @[decode.scala 573:39]
                                                      when _T_289 : @[decode.scala 573:39]
                                                        mhartid <= csrWriteData @[decode.scala 597:37]
      else :
        node _T_290 = eq(UInt<2>("h2"), _T_263) @[decode.scala 571:48]
        when _T_290 : @[decode.scala 571:48]
          node _T_291 = and(csrAddrReg, UInt<12>("hfff")) @[decode.scala 601:27]
          node _T_292 = eq(UInt<1>("h0"), _T_291) @[decode.scala 601:39]
          when _T_292 : @[decode.scala 601:39]
            node _ustatus_T = or(ustatus, csrWriteData) @[decode.scala 602:49]
            ustatus <= _ustatus_T @[decode.scala 602:38]
          else :
            node _T_293 = eq(UInt<3>("h5"), _T_291) @[decode.scala 601:39]
            when _T_293 : @[decode.scala 601:39]
              node _utvec_T = or(utvec, csrWriteData) @[decode.scala 603:47]
              utvec <= _utvec_T @[decode.scala 603:38]
            else :
              node _T_294 = eq(UInt<7>("h41"), _T_291) @[decode.scala 601:39]
              when _T_294 : @[decode.scala 601:39]
                node _uepc_T = or(uepc, csrWriteData) @[decode.scala 604:46]
                uepc <= _uepc_T @[decode.scala 604:38]
              else :
                node _T_295 = eq(UInt<7>("h42"), _T_291) @[decode.scala 601:39]
                when _T_295 : @[decode.scala 601:39]
                  node _ucause_T = or(ucause, csrWriteData) @[decode.scala 605:48]
                  ucause <= _ucause_T @[decode.scala 605:38]
                else :
                  node _T_296 = eq(UInt<9>("h106"), _T_291) @[decode.scala 601:39]
                  when _T_296 : @[decode.scala 601:39]
                    node _scounteren_T = or(scounteren, csrWriteData) @[decode.scala 606:52]
                    scounteren <= _scounteren_T @[decode.scala 606:38]
                  else :
                    node _T_297 = eq(UInt<9>("h180"), _T_291) @[decode.scala 601:39]
                    when _T_297 : @[decode.scala 601:39]
                      node _satp_T = or(satp, csrWriteData) @[decode.scala 607:46]
                      satp <= _satp_T @[decode.scala 607:38]
                    else :
                      node _T_298 = eq(UInt<10>("h300"), _T_291) @[decode.scala 601:39]
                      when _T_298 : @[decode.scala 601:39]
                        node _mstatus_T_2 = or(mstatus, csrWriteData) @[decode.scala 608:49]
                        mstatus <= _mstatus_T_2 @[decode.scala 608:38]
                      else :
                        node _T_299 = eq(UInt<10>("h301"), _T_291) @[decode.scala 601:39]
                        when _T_299 : @[decode.scala 601:39]
                          node _misa_T_2 = or(misa, csrWriteData) @[decode.scala 609:46]
                          misa <= _misa_T_2 @[decode.scala 609:38]
                        else :
                          node _T_300 = eq(UInt<10>("h302"), _T_291) @[decode.scala 601:39]
                          when _T_300 : @[decode.scala 601:39]
                            node _medeleg_T = or(medeleg, csrWriteData) @[decode.scala 610:49]
                            medeleg <= _medeleg_T @[decode.scala 610:38]
                          else :
                            node _T_301 = eq(UInt<10>("h303"), _T_291) @[decode.scala 601:39]
                            when _T_301 : @[decode.scala 601:39]
                              node _mideleg_T = or(mideleg, csrWriteData) @[decode.scala 611:49]
                              mideleg <= _mideleg_T @[decode.scala 611:38]
                            else :
                              node _T_302 = eq(UInt<10>("h304"), _T_291) @[decode.scala 601:39]
                              when _T_302 : @[decode.scala 601:39]
                                node _mie_T = or(mie, csrWriteData) @[decode.scala 612:46]
                                mie <= _mie_T @[decode.scala 612:38]
                              else :
                                node _T_303 = eq(UInt<10>("h305"), _T_291) @[decode.scala 601:39]
                                when _T_303 : @[decode.scala 601:39]
                                  node _mtvec_T = or(mtvec, csrWriteData) @[decode.scala 613:47]
                                  mtvec <= _mtvec_T @[decode.scala 613:38]
                                else :
                                  node _T_304 = eq(UInt<10>("h306"), _T_291) @[decode.scala 601:39]
                                  when _T_304 : @[decode.scala 601:39]
                                    node _mcounteren_T = or(mcounteren, csrWriteData) @[decode.scala 614:52]
                                    mcounteren <= _mcounteren_T @[decode.scala 614:38]
                                  else :
                                    node _T_305 = eq(UInt<10>("h340"), _T_291) @[decode.scala 601:39]
                                    when _T_305 : @[decode.scala 601:39]
                                      node _mscratch_T = or(mscratch, csrWriteData) @[decode.scala 615:50]
                                      mscratch <= _mscratch_T @[decode.scala 615:38]
                                    else :
                                      node _T_306 = eq(UInt<10>("h341"), _T_291) @[decode.scala 601:39]
                                      when _T_306 : @[decode.scala 601:39]
                                        node _mepc_T = or(mepc, csrWriteData) @[decode.scala 616:46]
                                        mepc <= _mepc_T @[decode.scala 616:38]
                                      else :
                                        node _T_307 = eq(UInt<10>("h342"), _T_291) @[decode.scala 601:39]
                                        when _T_307 : @[decode.scala 601:39]
                                          node _mcause_T = or(mcause, csrWriteData) @[decode.scala 617:48]
                                          mcause <= _mcause_T @[decode.scala 617:38]
                                        else :
                                          node _T_308 = eq(UInt<10>("h343"), _T_291) @[decode.scala 601:39]
                                          when _T_308 : @[decode.scala 601:39]
                                            node _mtval_T = or(mtval, csrWriteData) @[decode.scala 618:47]
                                            mtval <= _mtval_T @[decode.scala 618:38]
                                          else :
                                            node _T_309 = eq(UInt<10>("h344"), _T_291) @[decode.scala 601:39]
                                            when _T_309 : @[decode.scala 601:39]
                                              node _mip_T = or(mip, csrWriteData) @[decode.scala 619:45]
                                              mip <= _mip_T @[decode.scala 619:38]
                                            else :
                                              node _T_310 = eq(UInt<10>("h3a0"), _T_291) @[decode.scala 601:39]
                                              when _T_310 : @[decode.scala 601:39]
                                                node _pmpcfg0_T = or(pmpcfg0, csrWriteData) @[decode.scala 620:49]
                                                pmpcfg0 <= _pmpcfg0_T @[decode.scala 620:38]
                                              else :
                                                node _T_311 = eq(UInt<10>("h3b0"), _T_291) @[decode.scala 601:39]
                                                when _T_311 : @[decode.scala 601:39]
                                                  node _pmpaddr0_T = or(pmpaddr0, csrWriteData) @[decode.scala 621:50]
                                                  pmpaddr0 <= _pmpaddr0_T @[decode.scala 621:38]
                                                else :
                                                  node _T_312 = eq(UInt<12>("hf11"), _T_291) @[decode.scala 601:39]
                                                  when _T_312 : @[decode.scala 601:39]
                                                    node _mvendorid_T = or(mvendorid, csrWriteData) @[decode.scala 622:51]
                                                    mvendorid <= _mvendorid_T @[decode.scala 622:38]
                                                  else :
                                                    node _T_313 = eq(UInt<12>("hf12"), _T_291) @[decode.scala 601:39]
                                                    when _T_313 : @[decode.scala 601:39]
                                                      node _marchid_T = or(marchid, csrWriteData) @[decode.scala 623:49]
                                                      marchid <= _marchid_T @[decode.scala 623:38]
                                                    else :
                                                      node _T_314 = eq(UInt<12>("hf13"), _T_291) @[decode.scala 601:39]
                                                      when _T_314 : @[decode.scala 601:39]
                                                        node _mimpid_T = or(mimpid, csrWriteData) @[decode.scala 624:48]
                                                        mimpid <= _mimpid_T @[decode.scala 624:38]
                                                      else :
                                                        node _T_315 = eq(UInt<12>("hf14"), _T_291) @[decode.scala 601:39]
                                                        when _T_315 : @[decode.scala 601:39]
                                                          node _mhartid_T = or(mhartid, csrWriteData) @[decode.scala 625:49]
                                                          mhartid <= _mhartid_T @[decode.scala 625:38]
        else :
          node _T_316 = eq(UInt<2>("h3"), _T_263) @[decode.scala 571:48]
          when _T_316 : @[decode.scala 571:48]
            node _T_317 = and(csrAddrReg, UInt<12>("hfff")) @[decode.scala 629:27]
            node _T_318 = eq(UInt<1>("h0"), _T_317) @[decode.scala 629:39]
            when _T_318 : @[decode.scala 629:39]
              node _ustatus_T_1 = not(csrWriteData) @[decode.scala 630:51]
              node _ustatus_T_2 = and(ustatus, _ustatus_T_1) @[decode.scala 630:49]
              ustatus <= _ustatus_T_2 @[decode.scala 630:38]
            else :
              node _T_319 = eq(UInt<3>("h5"), _T_317) @[decode.scala 629:39]
              when _T_319 : @[decode.scala 629:39]
                node _utvec_T_1 = not(csrWriteData) @[decode.scala 631:49]
                node _utvec_T_2 = and(mtvec, _utvec_T_1) @[decode.scala 631:47]
                utvec <= _utvec_T_2 @[decode.scala 631:38]
              else :
                node _T_320 = eq(UInt<7>("h41"), _T_317) @[decode.scala 629:39]
                when _T_320 : @[decode.scala 629:39]
                  node _uepc_T_1 = not(csrWriteData) @[decode.scala 632:48]
                  node _uepc_T_2 = and(uepc, _uepc_T_1) @[decode.scala 632:46]
                  uepc <= _uepc_T_2 @[decode.scala 632:38]
                else :
                  node _T_321 = eq(UInt<7>("h42"), _T_317) @[decode.scala 629:39]
                  when _T_321 : @[decode.scala 629:39]
                    node _ucause_T_1 = not(csrWriteData) @[decode.scala 633:50]
                    node _ucause_T_2 = and(ucause, _ucause_T_1) @[decode.scala 633:48]
                    ucause <= _ucause_T_2 @[decode.scala 633:38]
                  else :
                    node _T_322 = eq(UInt<9>("h106"), _T_317) @[decode.scala 629:39]
                    when _T_322 : @[decode.scala 629:39]
                      node _scounteren_T_1 = not(csrWriteData) @[decode.scala 634:54]
                      node _scounteren_T_2 = and(scounteren, _scounteren_T_1) @[decode.scala 634:52]
                      scounteren <= _scounteren_T_2 @[decode.scala 634:38]
                    else :
                      node _T_323 = eq(UInt<9>("h180"), _T_317) @[decode.scala 629:39]
                      when _T_323 : @[decode.scala 629:39]
                        node _satp_T_1 = not(csrWriteData) @[decode.scala 635:48]
                        node _satp_T_2 = and(satp, _satp_T_1) @[decode.scala 635:46]
                        satp <= _satp_T_2 @[decode.scala 635:38]
                      else :
                        node _T_324 = eq(UInt<10>("h300"), _T_317) @[decode.scala 629:39]
                        when _T_324 : @[decode.scala 629:39]
                          node _mstatus_T_3 = not(csrWriteData) @[decode.scala 636:51]
                          node _mstatus_T_4 = and(mstatus, _mstatus_T_3) @[decode.scala 636:49]
                          mstatus <= _mstatus_T_4 @[decode.scala 636:38]
                        else :
                          node _T_325 = eq(UInt<10>("h301"), _T_317) @[decode.scala 629:39]
                          when _T_325 : @[decode.scala 629:39]
                            node _misa_T_3 = not(csrWriteData) @[decode.scala 637:48]
                            node _misa_T_4 = and(misa, _misa_T_3) @[decode.scala 637:46]
                            misa <= _misa_T_4 @[decode.scala 637:38]
                          else :
                            node _T_326 = eq(UInt<10>("h302"), _T_317) @[decode.scala 629:39]
                            when _T_326 : @[decode.scala 629:39]
                              node _medeleg_T_1 = not(csrWriteData) @[decode.scala 638:51]
                              node _medeleg_T_2 = and(medeleg, _medeleg_T_1) @[decode.scala 638:49]
                              medeleg <= _medeleg_T_2 @[decode.scala 638:38]
                            else :
                              node _T_327 = eq(UInt<10>("h303"), _T_317) @[decode.scala 629:39]
                              when _T_327 : @[decode.scala 629:39]
                                node _mideleg_T_1 = not(csrWriteData) @[decode.scala 639:51]
                                node _mideleg_T_2 = and(mideleg, _mideleg_T_1) @[decode.scala 639:49]
                                mideleg <= _mideleg_T_2 @[decode.scala 639:38]
                              else :
                                node _T_328 = eq(UInt<10>("h304"), _T_317) @[decode.scala 629:39]
                                when _T_328 : @[decode.scala 629:39]
                                  node _mie_T_1 = not(csrWriteData) @[decode.scala 640:47]
                                  node _mie_T_2 = and(mie, _mie_T_1) @[decode.scala 640:45]
                                  mie <= _mie_T_2 @[decode.scala 640:38]
                                else :
                                  node _T_329 = eq(UInt<10>("h305"), _T_317) @[decode.scala 629:39]
                                  when _T_329 : @[decode.scala 629:39]
                                    node _mtvec_T_1 = not(csrWriteData) @[decode.scala 641:49]
                                    node _mtvec_T_2 = and(mtvec, _mtvec_T_1) @[decode.scala 641:47]
                                    mtvec <= _mtvec_T_2 @[decode.scala 641:38]
                                  else :
                                    node _T_330 = eq(UInt<10>("h306"), _T_317) @[decode.scala 629:39]
                                    when _T_330 : @[decode.scala 629:39]
                                      node _mcounteren_T_1 = not(csrWriteData) @[decode.scala 642:54]
                                      node _mcounteren_T_2 = and(mcounteren, _mcounteren_T_1) @[decode.scala 642:52]
                                      mcounteren <= _mcounteren_T_2 @[decode.scala 642:38]
                                    else :
                                      node _T_331 = eq(UInt<10>("h340"), _T_317) @[decode.scala 629:39]
                                      when _T_331 : @[decode.scala 629:39]
                                        node _mscratch_T_1 = not(csrWriteData) @[decode.scala 643:52]
                                        node _mscratch_T_2 = and(mscratch, _mscratch_T_1) @[decode.scala 643:50]
                                        mscratch <= _mscratch_T_2 @[decode.scala 643:38]
                                      else :
                                        node _T_332 = eq(UInt<10>("h341"), _T_317) @[decode.scala 629:39]
                                        when _T_332 : @[decode.scala 629:39]
                                          node _mepc_T_1 = not(csrWriteData) @[decode.scala 644:48]
                                          node _mepc_T_2 = and(mepc, _mepc_T_1) @[decode.scala 644:46]
                                          mepc <= _mepc_T_2 @[decode.scala 644:38]
                                        else :
                                          node _T_333 = eq(UInt<10>("h342"), _T_317) @[decode.scala 629:39]
                                          when _T_333 : @[decode.scala 629:39]
                                            node _mcause_T_1 = not(csrWriteData) @[decode.scala 645:50]
                                            node _mcause_T_2 = and(mcause, _mcause_T_1) @[decode.scala 645:48]
                                            mcause <= _mcause_T_2 @[decode.scala 645:38]
                                          else :
                                            node _T_334 = eq(UInt<10>("h343"), _T_317) @[decode.scala 629:39]
                                            when _T_334 : @[decode.scala 629:39]
                                              node _mtval_T_1 = not(csrWriteData) @[decode.scala 646:49]
                                              node _mtval_T_2 = and(mtval, _mtval_T_1) @[decode.scala 646:47]
                                              mtval <= _mtval_T_2 @[decode.scala 646:38]
                                            else :
                                              node _T_335 = eq(UInt<10>("h344"), _T_317) @[decode.scala 629:39]
                                              when _T_335 : @[decode.scala 629:39]
                                                node _mip_T_1 = not(csrWriteData) @[decode.scala 647:47]
                                                node _mip_T_2 = and(mip, _mip_T_1) @[decode.scala 647:45]
                                                mip <= _mip_T_2 @[decode.scala 647:38]
                                              else :
                                                node _T_336 = eq(UInt<10>("h3a0"), _T_317) @[decode.scala 629:39]
                                                when _T_336 : @[decode.scala 629:39]
                                                  node _pmpcfg0_T_1 = not(csrWriteData) @[decode.scala 648:51]
                                                  node _pmpcfg0_T_2 = and(pmpcfg0, _pmpcfg0_T_1) @[decode.scala 648:49]
                                                  pmpcfg0 <= _pmpcfg0_T_2 @[decode.scala 648:38]
                                                else :
                                                  node _T_337 = eq(UInt<10>("h3b0"), _T_317) @[decode.scala 629:39]
                                                  when _T_337 : @[decode.scala 629:39]
                                                    node _pmpaddr0_T_1 = not(csrWriteData) @[decode.scala 649:52]
                                                    node _pmpaddr0_T_2 = and(pmpaddr0, _pmpaddr0_T_1) @[decode.scala 649:50]
                                                    pmpaddr0 <= _pmpaddr0_T_2 @[decode.scala 649:38]
                                                  else :
                                                    node _T_338 = eq(UInt<12>("hf11"), _T_317) @[decode.scala 629:39]
                                                    when _T_338 : @[decode.scala 629:39]
                                                      node _mvendorid_T_1 = not(csrWriteData) @[decode.scala 650:53]
                                                      node _mvendorid_T_2 = and(mvendorid, _mvendorid_T_1) @[decode.scala 650:51]
                                                      mvendorid <= _mvendorid_T_2 @[decode.scala 650:38]
                                                    else :
                                                      node _T_339 = eq(UInt<12>("hf12"), _T_317) @[decode.scala 629:39]
                                                      when _T_339 : @[decode.scala 629:39]
                                                        node _marchid_T_1 = not(csrWriteData) @[decode.scala 651:51]
                                                        node _marchid_T_2 = and(marchid, _marchid_T_1) @[decode.scala 651:49]
                                                        marchid <= _marchid_T_2 @[decode.scala 651:38]
                                                      else :
                                                        node _T_340 = eq(UInt<12>("hf13"), _T_317) @[decode.scala 629:39]
                                                        when _T_340 : @[decode.scala 629:39]
                                                          node _mimpid_T_1 = not(csrWriteData) @[decode.scala 652:50]
                                                          node _mimpid_T_2 = and(mimpid, _mimpid_T_1) @[decode.scala 652:48]
                                                          mimpid <= _mimpid_T_2 @[decode.scala 652:38]
                                                        else :
                                                          node _T_341 = eq(UInt<12>("hf14"), _T_317) @[decode.scala 629:39]
                                                          when _T_341 : @[decode.scala 629:39]
                                                            node _mhartid_T_1 = not(csrWriteData) @[decode.scala 653:51]
                                                            node _mhartid_T_2 = and(mhartid, _mhartid_T_1) @[decode.scala 653:49]
                                                            mhartid <= _mhartid_T_2 @[decode.scala 653:38]
          else :
            node _T_342 = eq(UInt<3>("h5"), _T_263) @[decode.scala 571:48]
            when _T_342 : @[decode.scala 571:48]
              node _T_343 = and(csrAddrReg, UInt<12>("hfff")) @[decode.scala 657:27]
              node _T_344 = eq(UInt<1>("h0"), _T_343) @[decode.scala 657:39]
              when _T_344 : @[decode.scala 657:39]
                ustatus <= csrImmReg @[decode.scala 658:38]
              else :
                node _T_345 = eq(UInt<3>("h5"), _T_343) @[decode.scala 657:39]
                when _T_345 : @[decode.scala 657:39]
                  utvec <= csrImmReg @[decode.scala 659:38]
                else :
                  node _T_346 = eq(UInt<7>("h41"), _T_343) @[decode.scala 657:39]
                  when _T_346 : @[decode.scala 657:39]
                    uepc <= csrImmReg @[decode.scala 660:38]
                  else :
                    node _T_347 = eq(UInt<7>("h42"), _T_343) @[decode.scala 657:39]
                    when _T_347 : @[decode.scala 657:39]
                      ucause <= csrImmReg @[decode.scala 661:38]
                    else :
                      node _T_348 = eq(UInt<9>("h106"), _T_343) @[decode.scala 657:39]
                      when _T_348 : @[decode.scala 657:39]
                        scounteren <= csrImmReg @[decode.scala 662:38]
                      else :
                        node _T_349 = eq(UInt<9>("h180"), _T_343) @[decode.scala 657:39]
                        when _T_349 : @[decode.scala 657:39]
                          satp <= csrImmReg @[decode.scala 663:38]
                        else :
                          node _T_350 = eq(UInt<10>("h300"), _T_343) @[decode.scala 657:39]
                          when _T_350 : @[decode.scala 657:39]
                            mstatus <= csrImmReg @[decode.scala 664:38]
                          else :
                            node _T_351 = eq(UInt<10>("h301"), _T_343) @[decode.scala 657:39]
                            when _T_351 : @[decode.scala 657:39]
                              misa <= csrImmReg @[decode.scala 665:38]
                            else :
                              node _T_352 = eq(UInt<10>("h302"), _T_343) @[decode.scala 657:39]
                              when _T_352 : @[decode.scala 657:39]
                                medeleg <= csrImmReg @[decode.scala 666:38]
                              else :
                                node _T_353 = eq(UInt<10>("h303"), _T_343) @[decode.scala 657:39]
                                when _T_353 : @[decode.scala 657:39]
                                  mideleg <= csrImmReg @[decode.scala 667:38]
                                else :
                                  node _T_354 = eq(UInt<10>("h304"), _T_343) @[decode.scala 657:39]
                                  when _T_354 : @[decode.scala 657:39]
                                    mie <= csrImmReg @[decode.scala 668:38]
                                  else :
                                    node _T_355 = eq(UInt<10>("h305"), _T_343) @[decode.scala 657:39]
                                    when _T_355 : @[decode.scala 657:39]
                                      mtvec <= csrImmReg @[decode.scala 669:38]
                                    else :
                                      node _T_356 = eq(UInt<10>("h306"), _T_343) @[decode.scala 657:39]
                                      when _T_356 : @[decode.scala 657:39]
                                        mcounteren <= csrImmReg @[decode.scala 670:38]
                                      else :
                                        node _T_357 = eq(UInt<10>("h340"), _T_343) @[decode.scala 657:39]
                                        when _T_357 : @[decode.scala 657:39]
                                          mscratch <= csrImmReg @[decode.scala 671:38]
                                        else :
                                          node _T_358 = eq(UInt<10>("h341"), _T_343) @[decode.scala 657:39]
                                          when _T_358 : @[decode.scala 657:39]
                                            mepc <= csrImmReg @[decode.scala 672:38]
                                          else :
                                            node _T_359 = eq(UInt<10>("h342"), _T_343) @[decode.scala 657:39]
                                            when _T_359 : @[decode.scala 657:39]
                                              mcause <= csrImmReg @[decode.scala 673:38]
                                            else :
                                              node _T_360 = eq(UInt<10>("h343"), _T_343) @[decode.scala 657:39]
                                              when _T_360 : @[decode.scala 657:39]
                                                mtval <= csrImmReg @[decode.scala 674:38]
                                              else :
                                                node _T_361 = eq(UInt<10>("h344"), _T_343) @[decode.scala 657:39]
                                                when _T_361 : @[decode.scala 657:39]
                                                  mip <= csrImmReg @[decode.scala 675:38]
                                                else :
                                                  node _T_362 = eq(UInt<10>("h3a0"), _T_343) @[decode.scala 657:39]
                                                  when _T_362 : @[decode.scala 657:39]
                                                    pmpcfg0 <= csrImmReg @[decode.scala 676:38]
                                                  else :
                                                    node _T_363 = eq(UInt<10>("h3b0"), _T_343) @[decode.scala 657:39]
                                                    when _T_363 : @[decode.scala 657:39]
                                                      pmpaddr0 <= csrImmReg @[decode.scala 677:38]
                                                    else :
                                                      node _T_364 = eq(UInt<12>("hf11"), _T_343) @[decode.scala 657:39]
                                                      when _T_364 : @[decode.scala 657:39]
                                                        mvendorid <= csrImmReg @[decode.scala 678:38]
                                                      else :
                                                        node _T_365 = eq(UInt<12>("hf12"), _T_343) @[decode.scala 657:39]
                                                        when _T_365 : @[decode.scala 657:39]
                                                          marchid <= csrImmReg @[decode.scala 679:38]
                                                        else :
                                                          node _T_366 = eq(UInt<12>("hf13"), _T_343) @[decode.scala 657:39]
                                                          when _T_366 : @[decode.scala 657:39]
                                                            mimpid <= csrImmReg @[decode.scala 680:38]
                                                          else :
                                                            node _T_367 = eq(UInt<12>("hf14"), _T_343) @[decode.scala 657:39]
                                                            when _T_367 : @[decode.scala 657:39]
                                                              mhartid <= csrImmReg @[decode.scala 681:38]
            else :
              node _T_368 = eq(UInt<3>("h6"), _T_263) @[decode.scala 571:48]
              when _T_368 : @[decode.scala 571:48]
                node _T_369 = and(csrAddrReg, UInt<12>("hfff")) @[decode.scala 685:27]
                node _T_370 = eq(UInt<1>("h0"), _T_369) @[decode.scala 685:39]
                when _T_370 : @[decode.scala 685:39]
                  node _ustatus_T_3 = or(ustatus, csrImmReg) @[decode.scala 686:49]
                  ustatus <= _ustatus_T_3 @[decode.scala 686:38]
                else :
                  node _T_371 = eq(UInt<3>("h5"), _T_369) @[decode.scala 685:39]
                  when _T_371 : @[decode.scala 685:39]
                    node _utvec_T_3 = or(utvec, csrImmReg) @[decode.scala 687:47]
                    utvec <= _utvec_T_3 @[decode.scala 687:38]
                  else :
                    node _T_372 = eq(UInt<7>("h41"), _T_369) @[decode.scala 685:39]
                    when _T_372 : @[decode.scala 685:39]
                      node _uepc_T_3 = or(uepc, csrImmReg) @[decode.scala 688:46]
                      uepc <= _uepc_T_3 @[decode.scala 688:38]
                    else :
                      node _T_373 = eq(UInt<7>("h42"), _T_369) @[decode.scala 685:39]
                      when _T_373 : @[decode.scala 685:39]
                        node _ucause_T_3 = or(ucause, csrImmReg) @[decode.scala 689:48]
                        ucause <= _ucause_T_3 @[decode.scala 689:38]
                      else :
                        node _T_374 = eq(UInt<9>("h106"), _T_369) @[decode.scala 685:39]
                        when _T_374 : @[decode.scala 685:39]
                          node _scounteren_T_3 = or(scounteren, csrImmReg) @[decode.scala 690:52]
                          scounteren <= _scounteren_T_3 @[decode.scala 690:38]
                        else :
                          node _T_375 = eq(UInt<9>("h180"), _T_369) @[decode.scala 685:39]
                          when _T_375 : @[decode.scala 685:39]
                            node _satp_T_3 = or(satp, csrImmReg) @[decode.scala 691:46]
                            satp <= _satp_T_3 @[decode.scala 691:38]
                          else :
                            node _T_376 = eq(UInt<10>("h300"), _T_369) @[decode.scala 685:39]
                            when _T_376 : @[decode.scala 685:39]
                              node _mstatus_T_5 = or(mstatus, csrImmReg) @[decode.scala 692:49]
                              mstatus <= _mstatus_T_5 @[decode.scala 692:38]
                            else :
                              node _T_377 = eq(UInt<10>("h301"), _T_369) @[decode.scala 685:39]
                              when _T_377 : @[decode.scala 685:39]
                                node _misa_T_5 = or(misa, csrImmReg) @[decode.scala 693:46]
                                misa <= _misa_T_5 @[decode.scala 693:38]
                              else :
                                node _T_378 = eq(UInt<10>("h302"), _T_369) @[decode.scala 685:39]
                                when _T_378 : @[decode.scala 685:39]
                                  node _medeleg_T_3 = or(medeleg, csrImmReg) @[decode.scala 694:49]
                                  medeleg <= _medeleg_T_3 @[decode.scala 694:38]
                                else :
                                  node _T_379 = eq(UInt<10>("h303"), _T_369) @[decode.scala 685:39]
                                  when _T_379 : @[decode.scala 685:39]
                                    node _mideleg_T_3 = or(mideleg, csrImmReg) @[decode.scala 695:49]
                                    mideleg <= _mideleg_T_3 @[decode.scala 695:38]
                                  else :
                                    node _T_380 = eq(UInt<10>("h304"), _T_369) @[decode.scala 685:39]
                                    when _T_380 : @[decode.scala 685:39]
                                      node _mie_T_3 = or(mie, csrImmReg) @[decode.scala 696:45]
                                      mie <= _mie_T_3 @[decode.scala 696:38]
                                    else :
                                      node _T_381 = eq(UInt<10>("h305"), _T_369) @[decode.scala 685:39]
                                      when _T_381 : @[decode.scala 685:39]
                                        node _mtvec_T_3 = or(mtvec, csrImmReg) @[decode.scala 697:47]
                                        mtvec <= _mtvec_T_3 @[decode.scala 697:38]
                                      else :
                                        node _T_382 = eq(UInt<10>("h306"), _T_369) @[decode.scala 685:39]
                                        when _T_382 : @[decode.scala 685:39]
                                          node _mcounteren_T_3 = or(mcounteren, csrImmReg) @[decode.scala 698:52]
                                          mcounteren <= _mcounteren_T_3 @[decode.scala 698:38]
                                        else :
                                          node _T_383 = eq(UInt<10>("h340"), _T_369) @[decode.scala 685:39]
                                          when _T_383 : @[decode.scala 685:39]
                                            node _mscratch_T_3 = or(mscratch, csrImmReg) @[decode.scala 699:50]
                                            mscratch <= _mscratch_T_3 @[decode.scala 699:38]
                                          else :
                                            node _T_384 = eq(UInt<10>("h341"), _T_369) @[decode.scala 685:39]
                                            when _T_384 : @[decode.scala 685:39]
                                              node _mepc_T_3 = or(mepc, csrImmReg) @[decode.scala 700:46]
                                              mepc <= _mepc_T_3 @[decode.scala 700:38]
                                            else :
                                              node _T_385 = eq(UInt<10>("h342"), _T_369) @[decode.scala 685:39]
                                              when _T_385 : @[decode.scala 685:39]
                                                node _mcause_T_3 = or(mcause, csrImmReg) @[decode.scala 701:48]
                                                mcause <= _mcause_T_3 @[decode.scala 701:38]
                                              else :
                                                node _T_386 = eq(UInt<10>("h343"), _T_369) @[decode.scala 685:39]
                                                when _T_386 : @[decode.scala 685:39]
                                                  node _mtval_T_3 = or(mtval, csrImmReg) @[decode.scala 702:47]
                                                  mtval <= _mtval_T_3 @[decode.scala 702:38]
                                                else :
                                                  node _T_387 = eq(UInt<10>("h344"), _T_369) @[decode.scala 685:39]
                                                  when _T_387 : @[decode.scala 685:39]
                                                    node _mip_T_3 = or(mip, csrImmReg) @[decode.scala 703:45]
                                                    mip <= _mip_T_3 @[decode.scala 703:38]
                                                  else :
                                                    node _T_388 = eq(UInt<10>("h3a0"), _T_369) @[decode.scala 685:39]
                                                    when _T_388 : @[decode.scala 685:39]
                                                      node _pmpcfg0_T_3 = or(pmpcfg0, csrImmReg) @[decode.scala 704:49]
                                                      pmpcfg0 <= _pmpcfg0_T_3 @[decode.scala 704:38]
                                                    else :
                                                      node _T_389 = eq(UInt<10>("h3b0"), _T_369) @[decode.scala 685:39]
                                                      when _T_389 : @[decode.scala 685:39]
                                                        node _pmpaddr0_T_3 = or(pmpaddr0, csrImmReg) @[decode.scala 705:50]
                                                        pmpaddr0 <= _pmpaddr0_T_3 @[decode.scala 705:38]
                                                      else :
                                                        node _T_390 = eq(UInt<12>("hf11"), _T_369) @[decode.scala 685:39]
                                                        when _T_390 : @[decode.scala 685:39]
                                                          node _mvendorid_T_3 = or(mvendorid, csrImmReg) @[decode.scala 706:51]
                                                          mvendorid <= _mvendorid_T_3 @[decode.scala 706:38]
                                                        else :
                                                          node _T_391 = eq(UInt<12>("hf12"), _T_369) @[decode.scala 685:39]
                                                          when _T_391 : @[decode.scala 685:39]
                                                            node _marchid_T_3 = or(marchid, csrImmReg) @[decode.scala 707:49]
                                                            marchid <= _marchid_T_3 @[decode.scala 707:38]
                                                          else :
                                                            node _T_392 = eq(UInt<12>("hf13"), _T_369) @[decode.scala 685:39]
                                                            when _T_392 : @[decode.scala 685:39]
                                                              node _mimpid_T_3 = or(mimpid, csrImmReg) @[decode.scala 708:48]
                                                              mimpid <= _mimpid_T_3 @[decode.scala 708:38]
                                                            else :
                                                              node _T_393 = eq(UInt<12>("hf14"), _T_369) @[decode.scala 685:39]
                                                              when _T_393 : @[decode.scala 685:39]
                                                                node _mhartid_T_3 = or(mhartid, csrImmReg) @[decode.scala 709:49]
                                                                mhartid <= _mhartid_T_3 @[decode.scala 709:38]
              else :
                node _T_394 = eq(UInt<3>("h7"), _T_263) @[decode.scala 571:48]
                when _T_394 : @[decode.scala 571:48]
                  node _T_395 = and(csrAddrReg, UInt<12>("hfff")) @[decode.scala 713:27]
                  node _T_396 = eq(UInt<1>("h0"), _T_395) @[decode.scala 713:39]
                  when _T_396 : @[decode.scala 713:39]
                    node _ustatus_T_4 = not(csrImmReg) @[decode.scala 714:51]
                    node _ustatus_T_5 = and(ustatus, _ustatus_T_4) @[decode.scala 714:49]
                    ustatus <= _ustatus_T_5 @[decode.scala 714:38]
                  else :
                    node _T_397 = eq(UInt<3>("h5"), _T_395) @[decode.scala 713:39]
                    when _T_397 : @[decode.scala 713:39]
                      node _utvec_T_4 = not(csrImmReg) @[decode.scala 715:49]
                      node _utvec_T_5 = and(utvec, _utvec_T_4) @[decode.scala 715:47]
                      utvec <= _utvec_T_5 @[decode.scala 715:38]
                    else :
                      node _T_398 = eq(UInt<7>("h41"), _T_395) @[decode.scala 713:39]
                      when _T_398 : @[decode.scala 713:39]
                        node _uepc_T_4 = not(csrImmReg) @[decode.scala 716:48]
                        node _uepc_T_5 = and(uepc, _uepc_T_4) @[decode.scala 716:46]
                        uepc <= _uepc_T_5 @[decode.scala 716:38]
                      else :
                        node _T_399 = eq(UInt<7>("h42"), _T_395) @[decode.scala 713:39]
                        when _T_399 : @[decode.scala 713:39]
                          node _ucause_T_4 = not(csrImmReg) @[decode.scala 717:50]
                          node _ucause_T_5 = and(ucause, _ucause_T_4) @[decode.scala 717:48]
                          ucause <= _ucause_T_5 @[decode.scala 717:38]
                        else :
                          node _T_400 = eq(UInt<9>("h106"), _T_395) @[decode.scala 713:39]
                          when _T_400 : @[decode.scala 713:39]
                            node _scounteren_T_4 = not(csrImmReg) @[decode.scala 718:54]
                            node _scounteren_T_5 = and(scounteren, _scounteren_T_4) @[decode.scala 718:52]
                            scounteren <= _scounteren_T_5 @[decode.scala 718:38]
                          else :
                            node _T_401 = eq(UInt<9>("h180"), _T_395) @[decode.scala 713:39]
                            when _T_401 : @[decode.scala 713:39]
                              node _satp_T_4 = not(csrImmReg) @[decode.scala 719:48]
                              node _satp_T_5 = and(satp, _satp_T_4) @[decode.scala 719:46]
                              satp <= _satp_T_5 @[decode.scala 719:38]
                            else :
                              node _T_402 = eq(UInt<10>("h300"), _T_395) @[decode.scala 713:39]
                              when _T_402 : @[decode.scala 713:39]
                                node _mstatus_T_6 = not(csrImmReg) @[decode.scala 720:51]
                                node _mstatus_T_7 = and(mstatus, _mstatus_T_6) @[decode.scala 720:49]
                                mstatus <= _mstatus_T_7 @[decode.scala 720:38]
                              else :
                                node _T_403 = eq(UInt<10>("h301"), _T_395) @[decode.scala 713:39]
                                when _T_403 : @[decode.scala 713:39]
                                  node _misa_T_6 = not(csrImmReg) @[decode.scala 721:48]
                                  node _misa_T_7 = and(misa, _misa_T_6) @[decode.scala 721:46]
                                  misa <= _misa_T_7 @[decode.scala 721:38]
                                else :
                                  node _T_404 = eq(UInt<10>("h302"), _T_395) @[decode.scala 713:39]
                                  when _T_404 : @[decode.scala 713:39]
                                    node _medeleg_T_4 = not(csrImmReg) @[decode.scala 722:51]
                                    node _medeleg_T_5 = and(medeleg, _medeleg_T_4) @[decode.scala 722:49]
                                    medeleg <= _medeleg_T_5 @[decode.scala 722:38]
                                  else :
                                    node _T_405 = eq(UInt<10>("h303"), _T_395) @[decode.scala 713:39]
                                    when _T_405 : @[decode.scala 713:39]
                                      node _mideleg_T_4 = not(csrImmReg) @[decode.scala 723:51]
                                      node _mideleg_T_5 = and(mideleg, _mideleg_T_4) @[decode.scala 723:49]
                                      mideleg <= _mideleg_T_5 @[decode.scala 723:38]
                                    else :
                                      node _T_406 = eq(UInt<10>("h304"), _T_395) @[decode.scala 713:39]
                                      when _T_406 : @[decode.scala 713:39]
                                        node _mie_T_4 = not(csrImmReg) @[decode.scala 724:47]
                                        node _mie_T_5 = and(mie, _mie_T_4) @[decode.scala 724:45]
                                        mie <= _mie_T_5 @[decode.scala 724:38]
                                      else :
                                        node _T_407 = eq(UInt<10>("h305"), _T_395) @[decode.scala 713:39]
                                        when _T_407 : @[decode.scala 713:39]
                                          node _mtvec_T_4 = not(csrImmReg) @[decode.scala 725:49]
                                          node _mtvec_T_5 = and(mtvec, _mtvec_T_4) @[decode.scala 725:47]
                                          mtvec <= _mtvec_T_5 @[decode.scala 725:38]
                                        else :
                                          node _T_408 = eq(UInt<10>("h306"), _T_395) @[decode.scala 713:39]
                                          when _T_408 : @[decode.scala 713:39]
                                            node _mcounteren_T_4 = not(csrImmReg) @[decode.scala 726:54]
                                            node _mcounteren_T_5 = and(mcounteren, _mcounteren_T_4) @[decode.scala 726:52]
                                            mcounteren <= _mcounteren_T_5 @[decode.scala 726:38]
                                          else :
                                            node _T_409 = eq(UInt<10>("h340"), _T_395) @[decode.scala 713:39]
                                            when _T_409 : @[decode.scala 713:39]
                                              node _mscratch_T_4 = not(csrImmReg) @[decode.scala 727:52]
                                              node _mscratch_T_5 = and(mscratch, _mscratch_T_4) @[decode.scala 727:50]
                                              mscratch <= _mscratch_T_5 @[decode.scala 727:38]
                                            else :
                                              node _T_410 = eq(UInt<10>("h341"), _T_395) @[decode.scala 713:39]
                                              when _T_410 : @[decode.scala 713:39]
                                                node _mepc_T_4 = not(csrImmReg) @[decode.scala 728:48]
                                                node _mepc_T_5 = and(mepc, _mepc_T_4) @[decode.scala 728:46]
                                                mepc <= _mepc_T_5 @[decode.scala 728:38]
                                              else :
                                                node _T_411 = eq(UInt<10>("h342"), _T_395) @[decode.scala 713:39]
                                                when _T_411 : @[decode.scala 713:39]
                                                  node _mcause_T_4 = not(csrImmReg) @[decode.scala 729:50]
                                                  node _mcause_T_5 = and(mcause, _mcause_T_4) @[decode.scala 729:48]
                                                  mcause <= _mcause_T_5 @[decode.scala 729:38]
                                                else :
                                                  node _T_412 = eq(UInt<10>("h343"), _T_395) @[decode.scala 713:39]
                                                  when _T_412 : @[decode.scala 713:39]
                                                    node _mtval_T_4 = not(csrImmReg) @[decode.scala 730:49]
                                                    node _mtval_T_5 = and(mtval, _mtval_T_4) @[decode.scala 730:47]
                                                    mtval <= _mtval_T_5 @[decode.scala 730:38]
                                                  else :
                                                    node _T_413 = eq(UInt<10>("h344"), _T_395) @[decode.scala 713:39]
                                                    when _T_413 : @[decode.scala 713:39]
                                                      node _mip_T_4 = not(csrImmReg) @[decode.scala 731:47]
                                                      node _mip_T_5 = and(mip, _mip_T_4) @[decode.scala 731:45]
                                                      mip <= _mip_T_5 @[decode.scala 731:38]
                                                    else :
                                                      node _T_414 = eq(UInt<10>("h3a0"), _T_395) @[decode.scala 713:39]
                                                      when _T_414 : @[decode.scala 713:39]
                                                        node _pmpcfg0_T_4 = not(csrImmReg) @[decode.scala 732:51]
                                                        node _pmpcfg0_T_5 = and(pmpcfg0, _pmpcfg0_T_4) @[decode.scala 732:49]
                                                        pmpcfg0 <= _pmpcfg0_T_5 @[decode.scala 732:38]
                                                      else :
                                                        node _T_415 = eq(UInt<10>("h3b0"), _T_395) @[decode.scala 713:39]
                                                        when _T_415 : @[decode.scala 713:39]
                                                          node _pmpaddr0_T_4 = not(csrImmReg) @[decode.scala 733:52]
                                                          node _pmpaddr0_T_5 = and(pmpaddr0, _pmpaddr0_T_4) @[decode.scala 733:50]
                                                          pmpaddr0 <= _pmpaddr0_T_5 @[decode.scala 733:38]
                                                        else :
                                                          node _T_416 = eq(UInt<12>("hf11"), _T_395) @[decode.scala 713:39]
                                                          when _T_416 : @[decode.scala 713:39]
                                                            node _mvendorid_T_4 = not(csrImmReg) @[decode.scala 734:53]
                                                            node _mvendorid_T_5 = and(mvendorid, _mvendorid_T_4) @[decode.scala 734:51]
                                                            mvendorid <= _mvendorid_T_5 @[decode.scala 734:38]
                                                          else :
                                                            node _T_417 = eq(UInt<12>("hf12"), _T_395) @[decode.scala 713:39]
                                                            when _T_417 : @[decode.scala 713:39]
                                                              node _marchid_T_4 = not(csrImmReg) @[decode.scala 735:51]
                                                              node _marchid_T_5 = and(marchid, _marchid_T_4) @[decode.scala 735:49]
                                                              marchid <= _marchid_T_5 @[decode.scala 735:38]
                                                            else :
                                                              node _T_418 = eq(UInt<12>("hf13"), _T_395) @[decode.scala 713:39]
                                                              when _T_418 : @[decode.scala 713:39]
                                                                node _mimpid_T_4 = not(csrImmReg) @[decode.scala 736:50]
                                                                node _mimpid_T_5 = and(mimpid, _mimpid_T_4) @[decode.scala 736:48]
                                                                mimpid <= _mimpid_T_5 @[decode.scala 736:38]
                                                              else :
                                                                node _T_419 = eq(UInt<12>("hf14"), _T_395) @[decode.scala 713:39]
                                                                when _T_419 : @[decode.scala 713:39]
                                                                  node _mhartid_T_4 = not(csrImmReg) @[decode.scala 737:51]
                                                                  node _mhartid_T_5 = and(mhartid, _mhartid_T_4) @[decode.scala 737:49]
                                                                  mhartid <= _mhartid_T_5 @[decode.scala 737:38]
    reg currentPrivilege : UInt<64>, clock with :
      reset => (reset, UInt<64>("h2200000000")) @[decode.scala 743:33]
    node _T_420 = bits(writeBackResult.instruction, 6, 0) @[decode.scala 744:60]
    node _T_421 = eq(_T_420, UInt<7>("h73")) @[decode.scala 744:66]
    node _T_422 = and(writeBackResult.fired, _T_421) @[decode.scala 744:30]
    node _T_423 = bits(writeBackResult.instruction, 14, 12) @[decode.scala 744:109]
    node _T_424 = eq(_T_423, UInt<1>("h0")) @[decode.scala 744:117]
    node _T_425 = and(_T_422, _T_424) @[decode.scala 744:79]
    when _T_425 : @[decode.scala 744:126]
      node _T_426 = bits(writeBackResult.instruction, 31, 20) @[decode.scala 745:37]
      node _T_427 = eq(_T_426, UInt<10>("h302")) @[decode.scala 745:46]
      when _T_427 : @[decode.scala 745:60]
        wire _currentPrivilege_WIRE : UInt<38>[2] @[decode.scala 747:34]
        _currentPrivilege_WIRE[0] <= UInt<38>("h2200001800") @[decode.scala 747:34]
        _currentPrivilege_WIRE[1] <= UInt<38>("h2200000000") @[decode.scala 747:34]
        node _currentPrivilege_T = bits(mstatus, 12, 12) @[decode.scala 747:60]
        currentPrivilege <= _currentPrivilege_WIRE[_currentPrivilege_T] @[decode.scala 747:24]
        expectedPC <= mepc @[decode.scala 748:18]
        node _mstatus_T_8 = bits(mstatus, 7, 4) @[decode.scala 749:69]
        node mstatus_hi = cat(UInt<52>("ha00000"), UInt<8>("h8")) @[Cat.scala 33:92]
        node _mstatus_T_9 = cat(mstatus_hi, _mstatus_T_8) @[Cat.scala 33:92]
        mstatus <= _mstatus_T_9 @[decode.scala 749:15]
      else :
        node _T_428 = bits(writeBackResult.instruction, 31, 20) @[decode.scala 750:44]
        node _T_429 = orr(_T_428) @[decode.scala 750:53]
        node _T_430 = eq(_T_429, UInt<1>("h0")) @[decode.scala 750:16]
        when _T_430 : @[decode.scala 750:58]
          mepc <= ecallPC @[decode.scala 752:12]
          node _T_431 = eq(currentPrivilege, UInt<38>("h2200000000")) @[decode.scala 753:29]
          when _T_431 : @[decode.scala 753:42]
            mcause <= UInt<4>("hb") @[decode.scala 753:51]
          else :
            mcause <= UInt<4>("h8") @[decode.scala 754:27]
          currentPrivilege <= UInt<38>("h2200000000") @[decode.scala 755:24]
          expectedPC <= mtvec @[decode.scala 756:18]
          node _mstatus_T_10 = eq(currentPrivilege, UInt<38>("h2200000000")) @[decode.scala 757:83]
          node _mstatus_T_11 = mux(_mstatus_T_10, UInt<5>("h18"), UInt<5>("h0")) @[decode.scala 757:66]
          node _mstatus_T_12 = bits(mstatus, 3, 0) @[decode.scala 757:130]
          node mstatus_lo = cat(_mstatus_T_12, UInt<4>("h0")) @[Cat.scala 33:92]
          node mstatus_hi_1 = cat(UInt<51>("h0"), _mstatus_T_11) @[Cat.scala 33:92]
          node _mstatus_T_13 = cat(mstatus_hi_1, mstatus_lo) @[Cat.scala 33:92]
          node _mstatus_T_14 = or(UInt<64>("ha00000000"), _mstatus_T_13) @[decode.scala 757:46]
          mstatus <= _mstatus_T_14 @[decode.scala 757:15]
        else :
          node _T_432 = eq(writeBackResult.instruction, UInt<64>("h80000073")) @[decode.scala 758:44]
          when _T_432 : @[decode.scala 758:69]
            node _mepc_T_6 = mux(stallReg, ecallPC, interruptedPC) @[decode.scala 761:18]
            mepc <= _mepc_T_6 @[decode.scala 761:12]
            mcause <= UInt<64>("h8000000000000007") @[decode.scala 762:14]
            currentPrivilege <= UInt<38>("h2200000000") @[decode.scala 763:24]
            expectedPC <= mtvec @[decode.scala 764:18]
            node _mstatus_T_15 = eq(currentPrivilege, UInt<38>("h2200000000")) @[decode.scala 765:83]
            node _mstatus_T_16 = mux(_mstatus_T_15, UInt<5>("h18"), UInt<5>("h0")) @[decode.scala 765:66]
            node _mstatus_T_17 = bits(mstatus, 3, 0) @[decode.scala 765:130]
            node mstatus_lo_1 = cat(_mstatus_T_17, UInt<4>("h0")) @[Cat.scala 33:92]
            node mstatus_hi_2 = cat(UInt<51>("h0"), _mstatus_T_16) @[Cat.scala 33:92]
            node _mstatus_T_18 = cat(mstatus_hi_2, mstatus_lo_1) @[Cat.scala 33:92]
            node _mstatus_T_19 = or(UInt<64>("ha00000000"), _mstatus_T_18) @[decode.scala 765:46]
            mstatus <= _mstatus_T_19 @[decode.scala 765:15]
    when writeAddrPRF.exec1Valid : @[decode.scala 784:33]
      PRFValidList[writeAddrPRF.exec1Addr] <= UInt<1>("h1") @[decode.scala 784:72]
    when writeAddrPRF.exec2Valid : @[decode.scala 785:33]
      PRFValidList[writeAddrPRF.exec2Addr] <= UInt<1>("h1") @[decode.scala 785:72]
    when writeAddrPRF.exec3Valid : @[decode.scala 786:33]
      PRFValidList[writeAddrPRF.exec3Addr] <= UInt<1>("h1") @[decode.scala 786:72]
    node _T_433 = eq(UInt<1>("h0"), stateRegInputBuf) @[decode.scala 792:28]
    when _T_433 : @[decode.scala 792:28]
      node _T_434 = eq(branchEvalIn.passFail, UInt<1>("h0")) @[decode.scala 794:34]
      node _T_435 = and(branchEvalIn.fired, _T_434) @[decode.scala 794:31]
      when _T_435 : @[decode.scala 794:58]
        stateRegInputBuf <= UInt<1>("h0") @[decode.scala 795:26]
        validInputBuf <= UInt<1>("h0") @[decode.scala 796:26]
        readyInputBuf <= UInt<1>("h0") @[decode.scala 797:26]
        stallReg <= UInt<1>("h0") @[decode.scala 798:18]
      else :
        validInputBuf <= UInt<1>("h0") @[decode.scala 800:23]
        readyInputBuf <= UInt<1>("h1") @[decode.scala 801:23]
        when fromFetch.fired : @[decode.scala 802:31]
          when fromFetch.expected.valid : @[decode.scala 803:42]
            node _T_436 = eq(fromFetch.expected.pc, fromFetch.pc) @[decode.scala 804:40]
            when _T_436 : @[decode.scala 804:58]
              stateRegInputBuf <= UInt<1>("h1") @[decode.scala 805:32]
          else :
            stateRegInputBuf <= UInt<1>("h1") @[decode.scala 808:30]
      when stallReg : @[decode.scala 812:22]
        readyInputBuf <= UInt<1>("h0") @[decode.scala 813:23]
    else :
      node _T_437 = eq(UInt<1>("h1"), stateRegInputBuf) @[decode.scala 792:28]
      when _T_437 : @[decode.scala 792:28]
        node _T_438 = eq(branchEvalIn.passFail, UInt<1>("h0")) @[decode.scala 817:34]
        node _T_439 = and(branchEvalIn.fired, _T_438) @[decode.scala 817:31]
        when _T_439 : @[decode.scala 817:58]
          stateRegInputBuf <= UInt<1>("h0") @[decode.scala 818:26]
          validInputBuf <= UInt<1>("h0") @[decode.scala 819:26]
          readyInputBuf <= UInt<1>("h0") @[decode.scala 820:26]
          stallReg <= UInt<1>("h0") @[decode.scala 821:18]
        else :
          node _T_440 = eq(stall, UInt<1>("h0")) @[decode.scala 823:14]
          node _T_441 = eq(opcode, UInt<7>("h63")) @[decode.scala 823:56]
          node _T_442 = eq(opcode, UInt<7>("h6f")) @[decode.scala 823:78]
          node _T_443 = or(_T_441, _T_442) @[decode.scala 823:68]
          node _T_444 = eq(opcode, UInt<7>("h67")) @[decode.scala 823:99]
          node _T_445 = or(_T_443, _T_444) @[decode.scala 823:89]
          node _T_446 = and(branchEvalIn.fired, _T_445) @[decode.scala 823:45]
          node _T_447 = eq(_T_446, UInt<1>("h0")) @[decode.scala 823:24]
          node _T_448 = and(_T_440, _T_447) @[decode.scala 823:21]
          when _T_448 : @[decode.scala 823:114]
            validInputBuf <= UInt<1>("h1") @[decode.scala 824:25]
            when readyOutputBuf : @[decode.scala 825:32]
              readyInputBuf <= UInt<1>("h1") @[decode.scala 826:27]
              node _T_449 = eq(fromFetch.fired, UInt<1>("h0")) @[decode.scala 827:18]
              node _T_450 = eq(opcode, UInt<7>("h73")) @[decode.scala 827:46]
              node _T_451 = eq(fun3, UInt<1>("h0")) @[decode.scala 827:67]
              node _T_452 = and(_T_450, _T_451) @[decode.scala 827:59]
              node _T_453 = eq(immediate, UInt<10>("h302")) @[decode.scala 827:88]
              node _T_454 = and(_T_452, _T_453) @[decode.scala 827:75]
              node _T_455 = or(_T_449, _T_454) @[decode.scala 827:35]
              when _T_455 : @[decode.scala 827:100]
                stateRegInputBuf <= UInt<1>("h0") @[decode.scala 828:32]
            else :
              readyInputBuf <= UInt<1>("h0") @[decode.scala 831:27]
          else :
            validInputBuf <= UInt<1>("h0") @[decode.scala 834:25]
        when stallReg : @[decode.scala 837:22]
          readyInputBuf <= UInt<1>("h0") @[decode.scala 838:23]
    node _T_456 = eq(UInt<1>("h0"), stateRegOutputBuf) @[decode.scala 846:29]
    when _T_456 : @[decode.scala 846:29]
      node _T_457 = eq(branchEvalIn.passFail, UInt<1>("h0")) @[decode.scala 848:34]
      node _T_458 = and(branchEvalIn.fired, _T_457) @[decode.scala 848:31]
      when _T_458 : @[decode.scala 848:58]
        stateRegOutputBuf <= UInt<1>("h0") @[decode.scala 849:27]
        validOutputBuf <= UInt<1>("h0") @[decode.scala 850:27]
        readyOutputBuf <= UInt<1>("h0") @[decode.scala 851:27]
      else :
        validOutputBuf <= UInt<1>("h0") @[decode.scala 853:24]
        readyOutputBuf <= UInt<1>("h1") @[decode.scala 854:24]
        when validInputBuf : @[decode.scala 855:29]
          stateRegOutputBuf <= UInt<1>("h1") @[decode.scala 856:29]
    else :
      node _T_459 = eq(UInt<1>("h1"), stateRegOutputBuf) @[decode.scala 846:29]
      when _T_459 : @[decode.scala 846:29]
        node _T_460 = eq(branchEvalIn.passFail, UInt<1>("h0")) @[decode.scala 861:34]
        node _T_461 = and(branchEvalIn.fired, _T_460) @[decode.scala 861:31]
        when _T_461 : @[decode.scala 861:58]
          stateRegOutputBuf <= UInt<1>("h0") @[decode.scala 862:27]
          validOutputBuf <= UInt<1>("h0") @[decode.scala 863:27]
          readyOutputBuf <= UInt<1>("h0") @[decode.scala 864:27]
        else :
          validOutputBuf <= UInt<1>("h1") @[decode.scala 866:24]
          when toExec.fired : @[decode.scala 867:28]
            readyOutputBuf <= UInt<1>("h1") @[decode.scala 868:26]
            node _T_462 = eq(validInputBuf, UInt<1>("h0")) @[decode.scala 869:16]
            when _T_462 : @[decode.scala 869:32]
              stateRegOutputBuf <= UInt<1>("h0") @[decode.scala 870:31]
          else :
            readyOutputBuf <= UInt<1>("h0") @[decode.scala 873:26]
    node _freeCount_T = add(PRFFreeList[0], PRFFreeList[1]) @[decode.scala 879:51]
    node _freeCount_T_1 = add(_freeCount_T, PRFFreeList[2]) @[decode.scala 879:51]
    node _freeCount_T_2 = add(_freeCount_T_1, PRFFreeList[3]) @[decode.scala 879:51]
    node _freeCount_T_3 = add(_freeCount_T_2, PRFFreeList[4]) @[decode.scala 879:51]
    node _freeCount_T_4 = add(_freeCount_T_3, PRFFreeList[5]) @[decode.scala 879:51]
    node _freeCount_T_5 = add(_freeCount_T_4, PRFFreeList[6]) @[decode.scala 879:51]
    node _freeCount_T_6 = add(_freeCount_T_5, PRFFreeList[7]) @[decode.scala 879:51]
    node _freeCount_T_7 = add(_freeCount_T_6, PRFFreeList[8]) @[decode.scala 879:51]
    node _freeCount_T_8 = add(_freeCount_T_7, PRFFreeList[9]) @[decode.scala 879:51]
    node _freeCount_T_9 = add(_freeCount_T_8, PRFFreeList[10]) @[decode.scala 879:51]
    node _freeCount_T_10 = add(_freeCount_T_9, PRFFreeList[11]) @[decode.scala 879:51]
    node _freeCount_T_11 = add(_freeCount_T_10, PRFFreeList[12]) @[decode.scala 879:51]
    node _freeCount_T_12 = add(_freeCount_T_11, PRFFreeList[13]) @[decode.scala 879:51]
    node _freeCount_T_13 = add(_freeCount_T_12, PRFFreeList[14]) @[decode.scala 879:51]
    node _freeCount_T_14 = add(_freeCount_T_13, PRFFreeList[15]) @[decode.scala 879:51]
    node _freeCount_T_15 = add(_freeCount_T_14, PRFFreeList[16]) @[decode.scala 879:51]
    node _freeCount_T_16 = add(_freeCount_T_15, PRFFreeList[17]) @[decode.scala 879:51]
    node _freeCount_T_17 = add(_freeCount_T_16, PRFFreeList[18]) @[decode.scala 879:51]
    node _freeCount_T_18 = add(_freeCount_T_17, PRFFreeList[19]) @[decode.scala 879:51]
    node _freeCount_T_19 = add(_freeCount_T_18, PRFFreeList[20]) @[decode.scala 879:51]
    node _freeCount_T_20 = add(_freeCount_T_19, PRFFreeList[21]) @[decode.scala 879:51]
    node _freeCount_T_21 = add(_freeCount_T_20, PRFFreeList[22]) @[decode.scala 879:51]
    node _freeCount_T_22 = add(_freeCount_T_21, PRFFreeList[23]) @[decode.scala 879:51]
    node _freeCount_T_23 = add(_freeCount_T_22, PRFFreeList[24]) @[decode.scala 879:51]
    node _freeCount_T_24 = add(_freeCount_T_23, PRFFreeList[25]) @[decode.scala 879:51]
    node _freeCount_T_25 = add(_freeCount_T_24, PRFFreeList[26]) @[decode.scala 879:51]
    node _freeCount_T_26 = add(_freeCount_T_25, PRFFreeList[27]) @[decode.scala 879:51]
    node _freeCount_T_27 = add(_freeCount_T_26, PRFFreeList[28]) @[decode.scala 879:51]
    node _freeCount_T_28 = add(_freeCount_T_27, PRFFreeList[29]) @[decode.scala 879:51]
    node _freeCount_T_29 = add(_freeCount_T_28, PRFFreeList[30]) @[decode.scala 879:51]
    node _freeCount_T_30 = add(_freeCount_T_29, PRFFreeList[31]) @[decode.scala 879:51]
    node _freeCount_T_31 = add(_freeCount_T_30, PRFFreeList[32]) @[decode.scala 879:51]
    node _freeCount_T_32 = add(_freeCount_T_31, PRFFreeList[33]) @[decode.scala 879:51]
    node _freeCount_T_33 = add(_freeCount_T_32, PRFFreeList[34]) @[decode.scala 879:51]
    node _freeCount_T_34 = add(_freeCount_T_33, PRFFreeList[35]) @[decode.scala 879:51]
    node _freeCount_T_35 = add(_freeCount_T_34, PRFFreeList[36]) @[decode.scala 879:51]
    node _freeCount_T_36 = add(_freeCount_T_35, PRFFreeList[37]) @[decode.scala 879:51]
    node _freeCount_T_37 = add(_freeCount_T_36, PRFFreeList[38]) @[decode.scala 879:51]
    node _freeCount_T_38 = add(_freeCount_T_37, PRFFreeList[39]) @[decode.scala 879:51]
    node _freeCount_T_39 = add(_freeCount_T_38, PRFFreeList[40]) @[decode.scala 879:51]
    node _freeCount_T_40 = add(_freeCount_T_39, PRFFreeList[41]) @[decode.scala 879:51]
    node _freeCount_T_41 = add(_freeCount_T_40, PRFFreeList[42]) @[decode.scala 879:51]
    node _freeCount_T_42 = add(_freeCount_T_41, PRFFreeList[43]) @[decode.scala 879:51]
    node _freeCount_T_43 = add(_freeCount_T_42, PRFFreeList[44]) @[decode.scala 879:51]
    node _freeCount_T_44 = add(_freeCount_T_43, PRFFreeList[45]) @[decode.scala 879:51]
    node _freeCount_T_45 = add(_freeCount_T_44, PRFFreeList[46]) @[decode.scala 879:51]
    node _freeCount_T_46 = add(_freeCount_T_45, PRFFreeList[47]) @[decode.scala 879:51]
    node _freeCount_T_47 = add(_freeCount_T_46, PRFFreeList[48]) @[decode.scala 879:51]
    node _freeCount_T_48 = add(_freeCount_T_47, PRFFreeList[49]) @[decode.scala 879:51]
    node _freeCount_T_49 = add(_freeCount_T_48, PRFFreeList[50]) @[decode.scala 879:51]
    node _freeCount_T_50 = add(_freeCount_T_49, PRFFreeList[51]) @[decode.scala 879:51]
    node _freeCount_T_51 = add(_freeCount_T_50, PRFFreeList[52]) @[decode.scala 879:51]
    node _freeCount_T_52 = add(_freeCount_T_51, PRFFreeList[53]) @[decode.scala 879:51]
    node _freeCount_T_53 = add(_freeCount_T_52, PRFFreeList[54]) @[decode.scala 879:51]
    node _freeCount_T_54 = add(_freeCount_T_53, PRFFreeList[55]) @[decode.scala 879:51]
    node _freeCount_T_55 = add(_freeCount_T_54, PRFFreeList[56]) @[decode.scala 879:51]
    node _freeCount_T_56 = add(_freeCount_T_55, PRFFreeList[57]) @[decode.scala 879:51]
    node _freeCount_T_57 = add(_freeCount_T_56, PRFFreeList[58]) @[decode.scala 879:51]
    node _freeCount_T_58 = add(_freeCount_T_57, PRFFreeList[59]) @[decode.scala 879:51]
    node _freeCount_T_59 = add(_freeCount_T_58, PRFFreeList[60]) @[decode.scala 879:51]
    node _freeCount_T_60 = add(_freeCount_T_59, PRFFreeList[61]) @[decode.scala 879:51]
    node _freeCount_T_61 = add(_freeCount_T_60, PRFFreeList[62]) @[decode.scala 879:51]
    node _freeCount_T_62 = add(_freeCount_T_61, PRFFreeList[63]) @[decode.scala 879:51]
    freeCount <= _freeCount_T_62 @[decode.scala 879:13]
    node _T_463 = neq(writeBackResult.rdAddr, UInt<1>("h0")) @[decode.scala 884:53]
    node _T_464 = and(writeBackResult.fired, _T_463) @[decode.scala 884:27]
    node _T_465 = bits(writeBackResult.instruction, 6, 0) @[decode.scala 885:32]
    node _T_466 = neq(_T_465, UInt<7>("h63")) @[decode.scala 885:38]
    node _T_467 = and(_T_464, _T_466) @[decode.scala 884:61]
    node _T_468 = bits(writeBackResult.instruction, 6, 0) @[decode.scala 886:32]
    node _T_469 = neq(_T_468, UInt<6>("h23")) @[decode.scala 886:38]
    node _T_470 = and(_T_467, _T_469) @[decode.scala 885:50]
    node _T_471 = neq(architecturalRegMap[writeBackResult.rdAddr], writeBackResult.PRFDest) @[decode.scala 887:49]
    node _T_472 = and(_T_470, _T_471) @[decode.scala 886:50]
    node _T_473 = neq(writeBackResult.instruction, UInt<32>("h80000073")) @[decode.scala 888:33]
    node _T_474 = and(_T_472, _T_473) @[decode.scala 887:77]
    when _T_474 : @[decode.scala 889:5]
      architecturalRegMap[writeBackResult.rdAddr] <= writeBackResult.PRFDest @[decode.scala 890:62]
      PRFFreeList[architecturalRegMap[writeBackResult.rdAddr]] <= UInt<1>("h1") @[decode.scala 891:62]
      reservedFreeList1[architecturalRegMap[writeBackResult.rdAddr]] <= UInt<1>("h1") @[decode.scala 892:68]
      reservedFreeList2[architecturalRegMap[writeBackResult.rdAddr]] <= UInt<1>("h1") @[decode.scala 893:68]
      reservedFreeList3[architecturalRegMap[writeBackResult.rdAddr]] <= UInt<1>("h1") @[decode.scala 894:68]
      reservedFreeList4[architecturalRegMap[writeBackResult.rdAddr]] <= UInt<1>("h1") @[decode.scala 895:68]
    when stallReg : @[decode.scala 899:18]
      canTakeInterrupt <= UInt<1>("h0") @[decode.scala 902:22]
    else :
      node _T_475 = eq(currentPrivilege, UInt<38>("h2200001800")) @[decode.scala 903:31]
      when _T_475 : @[decode.scala 903:44]
        node _canTakeInterrupt_T = bits(mie, 7, 7) @[decode.scala 905:28]
        node _canTakeInterrupt_T_1 = bits(_canTakeInterrupt_T, 0, 0) @[decode.scala 905:32]
        canTakeInterrupt <= _canTakeInterrupt_T_1 @[decode.scala 905:22]
      else :
        node _canTakeInterrupt_T_2 = bits(mstatus, 3, 3) @[decode.scala 908:32]
        node _canTakeInterrupt_T_3 = bits(_canTakeInterrupt_T_2, 0, 0) @[decode.scala 908:36]
        node _canTakeInterrupt_T_4 = bits(mie, 7, 7) @[decode.scala 908:49]
        node _canTakeInterrupt_T_5 = bits(_canTakeInterrupt_T_4, 0, 0) @[decode.scala 908:53]
        node _canTakeInterrupt_T_6 = and(_canTakeInterrupt_T_3, _canTakeInterrupt_T_5) @[decode.scala 908:43]
        canTakeInterrupt <= _canTakeInterrupt_T_6 @[decode.scala 908:22]
    registersOut[0] <= UInt<1>("h0") @[core.scala 50:28]
    registersOut[1] <= UInt<1>("h0") @[core.scala 50:28]
    registersOut[2] <= UInt<1>("h0") @[core.scala 50:28]
    registersOut[3] <= UInt<1>("h0") @[core.scala 50:28]
    registersOut[4] <= UInt<1>("h0") @[core.scala 50:28]
    registersOut[5] <= UInt<1>("h0") @[core.scala 50:28]
    registersOut[6] <= UInt<1>("h0") @[core.scala 50:28]
    registersOut[7] <= UInt<1>("h0") @[core.scala 50:28]
    registersOut[8] <= UInt<1>("h0") @[core.scala 50:28]
    registersOut[9] <= UInt<1>("h0") @[core.scala 50:28]
    registersOut[10] <= UInt<1>("h0") @[core.scala 50:28]
    registersOut[11] <= UInt<1>("h0") @[core.scala 50:28]
    registersOut[12] <= UInt<1>("h0") @[core.scala 50:28]
    registersOut[13] <= UInt<1>("h0") @[core.scala 50:28]
    registersOut[14] <= UInt<1>("h0") @[core.scala 50:28]
    registersOut[15] <= UInt<1>("h0") @[core.scala 50:28]
    registersOut[16] <= UInt<1>("h0") @[core.scala 50:28]
    registersOut[17] <= UInt<1>("h0") @[core.scala 50:28]
    registersOut[18] <= UInt<1>("h0") @[core.scala 50:28]
    registersOut[19] <= UInt<1>("h0") @[core.scala 50:28]
    registersOut[20] <= UInt<1>("h0") @[core.scala 50:28]
    registersOut[21] <= UInt<1>("h0") @[core.scala 50:28]
    registersOut[22] <= UInt<1>("h0") @[core.scala 50:28]
    registersOut[23] <= UInt<1>("h0") @[core.scala 50:28]
    registersOut[24] <= UInt<1>("h0") @[core.scala 50:28]
    registersOut[25] <= UInt<1>("h0") @[core.scala 50:28]
    registersOut[26] <= UInt<1>("h0") @[core.scala 50:28]
    registersOut[27] <= UInt<1>("h0") @[core.scala 50:28]
    registersOut[28] <= UInt<1>("h0") @[core.scala 50:28]
    registersOut[29] <= UInt<1>("h0") @[core.scala 50:28]
    registersOut[30] <= UInt<1>("h0") @[core.scala 50:28]
    registersOut[31] <= UInt<1>("h0") @[core.scala 50:28]
    registersOut[32] <= UInt<1>("h0") @[core.scala 50:28]
    registersOut[0] <= mstatus @[core.scala 51:23]

  module storeDataIssue_Anon :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<11>}, deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<11>}}
    input modifyVal : UInt<4>
    input modify : UInt<1>
    output allocatedAddr : UInt<4>
    output readPtrOut : UInt<4>

    reg readPtr : UInt<4>, clock with :
      reset => (reset, UInt<4>("h0")) @[storeDataIssue.scala 25:24]
    node _nextRead_T = eq(readPtr, UInt<4>("hf")) @[storeDataIssue.scala 26:30]
    node _nextRead_T_1 = add(readPtr, UInt<1>("h1")) @[storeDataIssue.scala 26:62]
    node _nextRead_T_2 = tail(_nextRead_T_1, 1) @[storeDataIssue.scala 26:62]
    node nextRead = mux(_nextRead_T, UInt<1>("h0"), _nextRead_T_2) @[storeDataIssue.scala 26:21]
    reg writePtr : UInt<4>, clock with :
      reset => (reset, UInt<4>("h0")) @[storeDataIssue.scala 27:25]
    node _nextWrite_T = eq(writePtr, UInt<4>("hf")) @[storeDataIssue.scala 28:32]
    node _nextWrite_T_1 = add(writePtr, UInt<1>("h1")) @[storeDataIssue.scala 28:65]
    node _nextWrite_T_2 = tail(_nextWrite_T_1, 1) @[storeDataIssue.scala 28:65]
    node nextWrite = mux(_nextWrite_T, UInt<1>("h0"), _nextWrite_T_2) @[storeDataIssue.scala 28:22]
    cmem memReg : UInt<11> [16] @[storeDataIssue.scala 31:19]
    reg emptyReg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h1")) @[storeDataIssue.scala 34:25]
    reg fullReg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[storeDataIssue.scala 35:24]
    wire incrRead : UInt<1>
    incrRead <= UInt<1>("h0")
    wire incrWrite : UInt<1>
    incrWrite <= UInt<1>("h0")
    when incrRead : @[storeDataIssue.scala 48:19]
      readPtr <= nextRead @[storeDataIssue.scala 49:13]
    node _T = eq(emptyReg, UInt<1>("h0")) @[storeDataIssue.scala 53:19]
    node _T_1 = and(modify, _T) @[storeDataIssue.scala 53:16]
    when _T_1 : @[storeDataIssue.scala 53:29]
      writePtr <= modifyVal @[storeDataIssue.scala 56:14]
      node _emptyReg_T = eq(modifyVal, readPtr) @[storeDataIssue.scala 58:25]
      emptyReg <= _emptyReg_T @[storeDataIssue.scala 58:14]
    else :
      when incrWrite : @[storeDataIssue.scala 59:24]
        writePtr <= nextWrite @[storeDataIssue.scala 60:14]
    wire _validBits_WIRE : UInt<1>[16] @[storeDataIssue.scala 62:34]
    _validBits_WIRE[0] <= UInt<1>("h0") @[storeDataIssue.scala 62:34]
    _validBits_WIRE[1] <= UInt<1>("h0") @[storeDataIssue.scala 62:34]
    _validBits_WIRE[2] <= UInt<1>("h0") @[storeDataIssue.scala 62:34]
    _validBits_WIRE[3] <= UInt<1>("h0") @[storeDataIssue.scala 62:34]
    _validBits_WIRE[4] <= UInt<1>("h0") @[storeDataIssue.scala 62:34]
    _validBits_WIRE[5] <= UInt<1>("h0") @[storeDataIssue.scala 62:34]
    _validBits_WIRE[6] <= UInt<1>("h0") @[storeDataIssue.scala 62:34]
    _validBits_WIRE[7] <= UInt<1>("h0") @[storeDataIssue.scala 62:34]
    _validBits_WIRE[8] <= UInt<1>("h0") @[storeDataIssue.scala 62:34]
    _validBits_WIRE[9] <= UInt<1>("h0") @[storeDataIssue.scala 62:34]
    _validBits_WIRE[10] <= UInt<1>("h0") @[storeDataIssue.scala 62:34]
    _validBits_WIRE[11] <= UInt<1>("h0") @[storeDataIssue.scala 62:34]
    _validBits_WIRE[12] <= UInt<1>("h0") @[storeDataIssue.scala 62:34]
    _validBits_WIRE[13] <= UInt<1>("h0") @[storeDataIssue.scala 62:34]
    _validBits_WIRE[14] <= UInt<1>("h0") @[storeDataIssue.scala 62:34]
    _validBits_WIRE[15] <= UInt<1>("h0") @[storeDataIssue.scala 62:34]
    reg validBits : UInt<1>[16], clock with :
      reset => (reset, _validBits_WIRE) @[storeDataIssue.scala 62:26]
    node _T_2 = and(io.deq.ready, io.deq.valid) @[storeDataIssue.scala 64:21]
    node _T_3 = and(_T_2, io.enq.valid) @[storeDataIssue.scala 64:37]
    node _T_4 = and(_T_3, io.enq.ready) @[storeDataIssue.scala 64:53]
    when _T_4 : @[storeDataIssue.scala 64:70]
      infer mport MPORT = memReg[writePtr], clock @[storeDataIssue.scala 65:11]
      MPORT <= io.enq.bits @[storeDataIssue.scala 65:22]
      validBits[writePtr] <= UInt<1>("h1") @[storeDataIssue.scala 66:25]
      validBits[readPtr] <= UInt<1>("h0") @[storeDataIssue.scala 67:24]
      incrWrite <= UInt<1>("h1") @[storeDataIssue.scala 68:15]
      incrRead <= UInt<1>("h1") @[storeDataIssue.scala 69:14]
    else :
      node _T_5 = and(io.enq.valid, io.enq.ready) @[storeDataIssue.scala 70:27]
      when _T_5 : @[storeDataIssue.scala 70:44]
        infer mport MPORT_1 = memReg[writePtr], clock @[storeDataIssue.scala 71:11]
        MPORT_1 <= io.enq.bits @[storeDataIssue.scala 71:22]
        validBits[writePtr] <= UInt<1>("h1") @[storeDataIssue.scala 72:25]
        emptyReg <= UInt<1>("h0") @[storeDataIssue.scala 73:14]
        node _fullReg_T = eq(nextWrite, readPtr) @[storeDataIssue.scala 74:26]
        fullReg <= _fullReg_T @[storeDataIssue.scala 74:13]
        incrWrite <= UInt<1>("h1") @[storeDataIssue.scala 75:15]
      else :
        node _T_6 = and(io.deq.ready, io.deq.valid) @[storeDataIssue.scala 76:27]
        when _T_6 : @[storeDataIssue.scala 76:44]
          fullReg <= UInt<1>("h0") @[storeDataIssue.scala 77:13]
          node _emptyReg_T_1 = eq(nextRead, writePtr) @[storeDataIssue.scala 78:26]
          emptyReg <= _emptyReg_T_1 @[storeDataIssue.scala 78:14]
          incrRead <= UInt<1>("h1") @[storeDataIssue.scala 79:14]
          validBits[readPtr] <= UInt<1>("h0") @[storeDataIssue.scala 80:24]
    infer mport io_deq_bits_MPORT = memReg[readPtr], clock @[storeDataIssue.scala 83:24]
    io.deq.bits <= io_deq_bits_MPORT @[storeDataIssue.scala 83:15]
    node _io_enq_ready_T = eq(fullReg, UInt<1>("h0")) @[storeDataIssue.scala 84:20]
    node _io_enq_ready_T_1 = and(io.deq.valid, io.deq.ready) @[storeDataIssue.scala 84:45]
    node _io_enq_ready_T_2 = or(_io_enq_ready_T, _io_enq_ready_T_1) @[storeDataIssue.scala 84:29]
    node _io_enq_ready_T_3 = eq(modify, UInt<1>("h0")) @[storeDataIssue.scala 84:64]
    node _io_enq_ready_T_4 = and(_io_enq_ready_T_2, _io_enq_ready_T_3) @[storeDataIssue.scala 84:62]
    io.enq.ready <= _io_enq_ready_T_4 @[storeDataIssue.scala 84:16]
    node _io_deq_valid_T = eq(emptyReg, UInt<1>("h0")) @[storeDataIssue.scala 85:19]
    node _io_deq_valid_T_1 = eq(modify, UInt<1>("h0")) @[storeDataIssue.scala 85:31]
    node _io_deq_valid_T_2 = and(_io_deq_valid_T, _io_deq_valid_T_1) @[storeDataIssue.scala 85:29]
    io.deq.valid <= _io_deq_valid_T_2 @[storeDataIssue.scala 85:16]
    allocatedAddr <= writePtr @[storeDataIssue.scala 92:17]
    readPtrOut <= readPtr @[storeDataIssue.scala 148:16]

  module storeDataIssue :
    input clock : Clock
    input reset : Reset
    output fromROB : { flip readyNow : UInt<1>}
    output fromBranch : { flip passOrFail : UInt<1>, flip robAddr : UInt<4>, flip valid : UInt<1>}
    output fromDecode : { ready : UInt<1>, flip valid : UInt<1>, flip instruction : UInt<32>, flip rs2Addr : UInt<6>, flip rs2Ready : UInt<1>, flip branchMask : UInt<5>}
    output toPRF : { instruction : UInt<32>, valid : UInt<1>, rs2Addr : UInt<6>, branchMask : UInt<5>}
    output robMapUpdate : { ready : UInt<1>, flip valid : UInt<1>, flip robAddr : UInt<4>}
    output robOfStore : UInt<4>

    reg toStore_reg : UInt<11>, clock with :
      reset => (UInt<1>("h0"), toStore_reg) @[storeDataIssue.scala 142:24]
    reg branchMask_reg : UInt<5>, clock with :
      reset => (UInt<1>("h0"), branchMask_reg) @[storeDataIssue.scala 143:28]
    inst sdiFifo of storeDataIssue_Anon @[storeDataIssue.scala 146:27]
    sdiFifo.clock <= clock
    sdiFifo.reset <= reset
    cmem map : UInt<4> [16] @[storeDataIssue.scala 152:16]
    when robMapUpdate.valid : @[storeDataIssue.scala 154:28]
      infer mport MPORT = map[robMapUpdate.robAddr], clock @[storeDataIssue.scala 155:8]
      MPORT <= sdiFifo.allocatedAddr @[storeDataIssue.scala 155:31]
    robMapUpdate.ready <= UInt<1>("h1") @[storeDataIssue.scala 157:22]
    reg sdAddrToRobAddr : UInt<4>[16], clock with :
      reset => (UInt<1>("h0"), sdAddrToRobAddr) @[storeDataIssue.scala 160:28]
    node _T = and(fromDecode.valid, fromDecode.ready) @[storeDataIssue.scala 161:25]
    when _T : @[storeDataIssue.scala 161:46]
      sdAddrToRobAddr[sdiFifo.allocatedAddr] <= robMapUpdate.robAddr @[storeDataIssue.scala 162:44]
    sdiFifo.io.enq.valid <= fromDecode.valid @[storeDataIssue.scala 166:29]
    fromDecode.ready <= sdiFifo.io.enq.ready @[storeDataIssue.scala 167:29]
    node _sdiFifo_io_enq_bits_T = cat(fromDecode.branchMask, fromDecode.rs2Addr) @[Cat.scala 33:92]
    sdiFifo.io.enq.bits <= _sdiFifo_io_enq_bits_T @[storeDataIssue.scala 168:29]
    infer mport sdiFifo_modifyVal_MPORT = map[fromBranch.robAddr], clock @[storeDataIssue.scala 169:27]
    sdiFifo.modifyVal <= sdiFifo_modifyVal_MPORT @[storeDataIssue.scala 169:21]
    node _sdiFifo_modify_T = eq(fromBranch.passOrFail, UInt<1>("h0")) @[storeDataIssue.scala 170:44]
    node _sdiFifo_modify_T_1 = and(fromBranch.valid, _sdiFifo_modify_T) @[storeDataIssue.scala 170:41]
    sdiFifo.modify <= _sdiFifo_modify_T_1 @[storeDataIssue.scala 170:21]
    sdiFifo.io.deq.ready <= fromROB.readyNow @[storeDataIssue.scala 172:29]
    node _toPRF_rs2Addr_T = bits(sdiFifo.io.deq.bits, 5, 0) @[storeDataIssue.scala 176:43]
    toPRF.rs2Addr <= _toPRF_rs2Addr_T @[storeDataIssue.scala 176:21]
    node _toPRF_branchMask_T = bits(sdiFifo.io.deq.bits, 10, 6) @[storeDataIssue.scala 177:43]
    toPRF.branchMask <= _toPRF_branchMask_T @[storeDataIssue.scala 177:21]
    toPRF.instruction <= fromDecode.instruction @[storeDataIssue.scala 178:21]
    toPRF.valid <= sdiFifo.io.deq.valid @[storeDataIssue.scala 179:21]
    robOfStore <= sdAddrToRobAddr[sdiFifo.readPtrOut] @[storeDataIssue.scala 183:14]

  module rob_Anon :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<102>}, deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<102>}}
    input modify : UInt<1>
    input modifyVal : UInt<4>
    output debugFIFOOut : { valid : UInt<1>, instruction : UInt<32>, prfDest : UInt<6>, pc : UInt<64>, writeBackGPR : UInt<1>}[16]
    output allocatedPRFCount : UInt<16>

    wire incrRead : UInt<1>
    incrRead <= UInt<1>("h0")
    wire incrWrite : UInt<1>
    incrWrite <= UInt<1>("h0")
    reg readPtr : UInt<4>, clock with :
      reset => (reset, UInt<4>("h0")) @[Fifo.scala 75:25]
    node _nextRead_T = eq(readPtr, UInt<4>("hf")) @[Fifo.scala 76:30]
    node _nextRead_T_1 = add(readPtr, UInt<1>("h1")) @[Fifo.scala 76:61]
    node _nextRead_T_2 = tail(_nextRead_T_1, 1) @[Fifo.scala 76:61]
    node nextRead = mux(_nextRead_T, UInt<1>("h0"), _nextRead_T_2) @[Fifo.scala 76:21]
    when incrRead : @[Fifo.scala 77:19]
      readPtr <= nextRead @[Fifo.scala 78:13]
    reg writePtr : UInt<4>, clock with :
      reset => (reset, UInt<4>("h0")) @[Fifo.scala 81:25]
    node _nextWrite_T = eq(writePtr, UInt<4>("hf")) @[Fifo.scala 82:32]
    node _nextWrite_T_1 = add(writePtr, UInt<1>("h1")) @[Fifo.scala 82:65]
    node _nextWrite_T_2 = tail(_nextWrite_T_1, 1) @[Fifo.scala 82:65]
    node nextWrite = mux(_nextWrite_T, UInt<1>("h0"), _nextWrite_T_2) @[Fifo.scala 82:22]
    reg fullReg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Fifo.scala 84:24]
    cmem memReg : UInt<102> [16] @[Fifo.scala 86:19]
    reg emptyReg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h1")) @[Fifo.scala 89:25]
    node _nextval_T = eq(modifyVal, UInt<4>("hf")) @[Fifo.scala 91:31]
    node _nextval_T_1 = add(modifyVal, UInt<1>("h1")) @[Fifo.scala 91:65]
    node _nextval_T_2 = tail(_nextval_T_1, 1) @[Fifo.scala 91:65]
    node nextval = mux(_nextval_T, UInt<1>("h0"), _nextval_T_2) @[Fifo.scala 91:20]
    when modify : @[Fifo.scala 93:16]
      writePtr <= nextval @[Fifo.scala 95:14]
      node _emptyReg_T = eq(nextval, readPtr) @[Fifo.scala 97:25]
      emptyReg <= _emptyReg_T @[Fifo.scala 97:14]
    else :
      when incrWrite : @[Fifo.scala 98:24]
        writePtr <= nextWrite @[Fifo.scala 99:14]
    node _T = and(io.deq.ready, io.deq.valid) @[Fifo.scala 105:21]
    node _T_1 = and(_T, io.enq.valid) @[Fifo.scala 105:37]
    node _T_2 = and(_T_1, io.enq.ready) @[Fifo.scala 105:53]
    when _T_2 : @[Fifo.scala 105:70]
      infer mport MPORT = memReg[writePtr], clock @[Fifo.scala 106:11]
      MPORT <= io.enq.bits @[Fifo.scala 106:22]
      incrWrite <= UInt<1>("h1") @[Fifo.scala 107:15]
      incrRead <= UInt<1>("h1") @[Fifo.scala 108:14]
    else :
      node _T_3 = and(io.enq.valid, io.enq.ready) @[Fifo.scala 109:27]
      when _T_3 : @[Fifo.scala 109:44]
        infer mport MPORT_1 = memReg[writePtr], clock @[Fifo.scala 110:11]
        MPORT_1 <= io.enq.bits @[Fifo.scala 110:22]
        emptyReg <= UInt<1>("h0") @[Fifo.scala 111:14]
        node _fullReg_T = eq(nextWrite, readPtr) @[Fifo.scala 112:26]
        fullReg <= _fullReg_T @[Fifo.scala 112:13]
        incrWrite <= UInt<1>("h1") @[Fifo.scala 113:15]
      else :
        node _T_4 = and(io.deq.ready, io.deq.valid) @[Fifo.scala 114:27]
        when _T_4 : @[Fifo.scala 114:44]
          fullReg <= UInt<1>("h0") @[Fifo.scala 115:13]
          node _emptyReg_T_1 = eq(nextRead, writePtr) @[Fifo.scala 116:26]
          emptyReg <= _emptyReg_T_1 @[Fifo.scala 116:14]
          incrRead <= UInt<1>("h1") @[Fifo.scala 117:14]
    infer mport io_deq_bits_MPORT = memReg[readPtr], clock @[Fifo.scala 120:24]
    io.deq.bits <= io_deq_bits_MPORT @[Fifo.scala 120:15]
    node _io_enq_ready_T = eq(fullReg, UInt<1>("h0")) @[Fifo.scala 121:20]
    node _io_enq_ready_T_1 = and(io.deq.valid, io.deq.ready) @[Fifo.scala 121:45]
    node _io_enq_ready_T_2 = or(_io_enq_ready_T, _io_enq_ready_T_1) @[Fifo.scala 121:29]
    node _io_enq_ready_T_3 = eq(modify, UInt<1>("h0")) @[Fifo.scala 121:64]
    node _io_enq_ready_T_4 = and(_io_enq_ready_T_2, _io_enq_ready_T_3) @[Fifo.scala 121:62]
    io.enq.ready <= _io_enq_ready_T_4 @[Fifo.scala 121:16]
    node _io_deq_valid_T = eq(emptyReg, UInt<1>("h0")) @[Fifo.scala 122:19]
    node _io_deq_valid_T_1 = eq(modify, UInt<1>("h0")) @[Fifo.scala 122:31]
    node _io_deq_valid_T_2 = and(_io_deq_valid_T, _io_deq_valid_T_1) @[Fifo.scala 122:29]
    io.deq.valid <= _io_deq_valid_T_2 @[Fifo.scala 122:16]
    wire debugFIFO : { valid : UInt<1>, instruction : UInt<32>, prfDest : UInt<6>, pc : UInt<64>, writeBackGPR : UInt<1>}[16] @[rob.scala 25:25]
    infer mport MPORT_2 = memReg[UInt<1>("h0")], clock @[rob.scala 33:37]
    infer mport MPORT_3 = memReg[UInt<1>("h1")], clock @[rob.scala 33:37]
    infer mport MPORT_4 = memReg[UInt<2>("h2")], clock @[rob.scala 33:37]
    infer mport MPORT_5 = memReg[UInt<2>("h3")], clock @[rob.scala 33:37]
    infer mport MPORT_6 = memReg[UInt<3>("h4")], clock @[rob.scala 33:37]
    infer mport MPORT_7 = memReg[UInt<3>("h5")], clock @[rob.scala 33:37]
    infer mport MPORT_8 = memReg[UInt<3>("h6")], clock @[rob.scala 33:37]
    infer mport MPORT_9 = memReg[UInt<3>("h7")], clock @[rob.scala 33:37]
    infer mport MPORT_10 = memReg[UInt<4>("h8")], clock @[rob.scala 33:37]
    infer mport MPORT_11 = memReg[UInt<4>("h9")], clock @[rob.scala 33:37]
    infer mport MPORT_12 = memReg[UInt<4>("ha")], clock @[rob.scala 33:37]
    infer mport MPORT_13 = memReg[UInt<4>("hb")], clock @[rob.scala 33:37]
    infer mport MPORT_14 = memReg[UInt<4>("hc")], clock @[rob.scala 33:37]
    infer mport MPORT_15 = memReg[UInt<4>("hd")], clock @[rob.scala 33:37]
    infer mport MPORT_16 = memReg[UInt<4>("he")], clock @[rob.scala 33:37]
    infer mport MPORT_17 = memReg[UInt<4>("hf")], clock @[rob.scala 33:37]
    node _debugFIFO_0_prfDest_T = bits(MPORT_2, 5, 0) @[rob.scala 35:27]
    debugFIFO[0].prfDest <= _debugFIFO_0_prfDest_T @[rob.scala 35:21]
    node _debugFIFO_0_instruction_T = bits(MPORT_2, 37, 6) @[rob.scala 36:31]
    debugFIFO[0].instruction <= _debugFIFO_0_instruction_T @[rob.scala 36:25]
    node _debugFIFO_0_pc_T = bits(MPORT_2, 101, 38) @[rob.scala 37:22]
    debugFIFO[0].pc <= _debugFIFO_0_pc_T @[rob.scala 37:16]
    node _debugFIFO_1_prfDest_T = bits(MPORT_3, 5, 0) @[rob.scala 35:27]
    debugFIFO[1].prfDest <= _debugFIFO_1_prfDest_T @[rob.scala 35:21]
    node _debugFIFO_1_instruction_T = bits(MPORT_3, 37, 6) @[rob.scala 36:31]
    debugFIFO[1].instruction <= _debugFIFO_1_instruction_T @[rob.scala 36:25]
    node _debugFIFO_1_pc_T = bits(MPORT_3, 101, 38) @[rob.scala 37:22]
    debugFIFO[1].pc <= _debugFIFO_1_pc_T @[rob.scala 37:16]
    node _debugFIFO_2_prfDest_T = bits(MPORT_4, 5, 0) @[rob.scala 35:27]
    debugFIFO[2].prfDest <= _debugFIFO_2_prfDest_T @[rob.scala 35:21]
    node _debugFIFO_2_instruction_T = bits(MPORT_4, 37, 6) @[rob.scala 36:31]
    debugFIFO[2].instruction <= _debugFIFO_2_instruction_T @[rob.scala 36:25]
    node _debugFIFO_2_pc_T = bits(MPORT_4, 101, 38) @[rob.scala 37:22]
    debugFIFO[2].pc <= _debugFIFO_2_pc_T @[rob.scala 37:16]
    node _debugFIFO_3_prfDest_T = bits(MPORT_5, 5, 0) @[rob.scala 35:27]
    debugFIFO[3].prfDest <= _debugFIFO_3_prfDest_T @[rob.scala 35:21]
    node _debugFIFO_3_instruction_T = bits(MPORT_5, 37, 6) @[rob.scala 36:31]
    debugFIFO[3].instruction <= _debugFIFO_3_instruction_T @[rob.scala 36:25]
    node _debugFIFO_3_pc_T = bits(MPORT_5, 101, 38) @[rob.scala 37:22]
    debugFIFO[3].pc <= _debugFIFO_3_pc_T @[rob.scala 37:16]
    node _debugFIFO_4_prfDest_T = bits(MPORT_6, 5, 0) @[rob.scala 35:27]
    debugFIFO[4].prfDest <= _debugFIFO_4_prfDest_T @[rob.scala 35:21]
    node _debugFIFO_4_instruction_T = bits(MPORT_6, 37, 6) @[rob.scala 36:31]
    debugFIFO[4].instruction <= _debugFIFO_4_instruction_T @[rob.scala 36:25]
    node _debugFIFO_4_pc_T = bits(MPORT_6, 101, 38) @[rob.scala 37:22]
    debugFIFO[4].pc <= _debugFIFO_4_pc_T @[rob.scala 37:16]
    node _debugFIFO_5_prfDest_T = bits(MPORT_7, 5, 0) @[rob.scala 35:27]
    debugFIFO[5].prfDest <= _debugFIFO_5_prfDest_T @[rob.scala 35:21]
    node _debugFIFO_5_instruction_T = bits(MPORT_7, 37, 6) @[rob.scala 36:31]
    debugFIFO[5].instruction <= _debugFIFO_5_instruction_T @[rob.scala 36:25]
    node _debugFIFO_5_pc_T = bits(MPORT_7, 101, 38) @[rob.scala 37:22]
    debugFIFO[5].pc <= _debugFIFO_5_pc_T @[rob.scala 37:16]
    node _debugFIFO_6_prfDest_T = bits(MPORT_8, 5, 0) @[rob.scala 35:27]
    debugFIFO[6].prfDest <= _debugFIFO_6_prfDest_T @[rob.scala 35:21]
    node _debugFIFO_6_instruction_T = bits(MPORT_8, 37, 6) @[rob.scala 36:31]
    debugFIFO[6].instruction <= _debugFIFO_6_instruction_T @[rob.scala 36:25]
    node _debugFIFO_6_pc_T = bits(MPORT_8, 101, 38) @[rob.scala 37:22]
    debugFIFO[6].pc <= _debugFIFO_6_pc_T @[rob.scala 37:16]
    node _debugFIFO_7_prfDest_T = bits(MPORT_9, 5, 0) @[rob.scala 35:27]
    debugFIFO[7].prfDest <= _debugFIFO_7_prfDest_T @[rob.scala 35:21]
    node _debugFIFO_7_instruction_T = bits(MPORT_9, 37, 6) @[rob.scala 36:31]
    debugFIFO[7].instruction <= _debugFIFO_7_instruction_T @[rob.scala 36:25]
    node _debugFIFO_7_pc_T = bits(MPORT_9, 101, 38) @[rob.scala 37:22]
    debugFIFO[7].pc <= _debugFIFO_7_pc_T @[rob.scala 37:16]
    node _debugFIFO_8_prfDest_T = bits(MPORT_10, 5, 0) @[rob.scala 35:27]
    debugFIFO[8].prfDest <= _debugFIFO_8_prfDest_T @[rob.scala 35:21]
    node _debugFIFO_8_instruction_T = bits(MPORT_10, 37, 6) @[rob.scala 36:31]
    debugFIFO[8].instruction <= _debugFIFO_8_instruction_T @[rob.scala 36:25]
    node _debugFIFO_8_pc_T = bits(MPORT_10, 101, 38) @[rob.scala 37:22]
    debugFIFO[8].pc <= _debugFIFO_8_pc_T @[rob.scala 37:16]
    node _debugFIFO_9_prfDest_T = bits(MPORT_11, 5, 0) @[rob.scala 35:27]
    debugFIFO[9].prfDest <= _debugFIFO_9_prfDest_T @[rob.scala 35:21]
    node _debugFIFO_9_instruction_T = bits(MPORT_11, 37, 6) @[rob.scala 36:31]
    debugFIFO[9].instruction <= _debugFIFO_9_instruction_T @[rob.scala 36:25]
    node _debugFIFO_9_pc_T = bits(MPORT_11, 101, 38) @[rob.scala 37:22]
    debugFIFO[9].pc <= _debugFIFO_9_pc_T @[rob.scala 37:16]
    node _debugFIFO_10_prfDest_T = bits(MPORT_12, 5, 0) @[rob.scala 35:27]
    debugFIFO[10].prfDest <= _debugFIFO_10_prfDest_T @[rob.scala 35:21]
    node _debugFIFO_10_instruction_T = bits(MPORT_12, 37, 6) @[rob.scala 36:31]
    debugFIFO[10].instruction <= _debugFIFO_10_instruction_T @[rob.scala 36:25]
    node _debugFIFO_10_pc_T = bits(MPORT_12, 101, 38) @[rob.scala 37:22]
    debugFIFO[10].pc <= _debugFIFO_10_pc_T @[rob.scala 37:16]
    node _debugFIFO_11_prfDest_T = bits(MPORT_13, 5, 0) @[rob.scala 35:27]
    debugFIFO[11].prfDest <= _debugFIFO_11_prfDest_T @[rob.scala 35:21]
    node _debugFIFO_11_instruction_T = bits(MPORT_13, 37, 6) @[rob.scala 36:31]
    debugFIFO[11].instruction <= _debugFIFO_11_instruction_T @[rob.scala 36:25]
    node _debugFIFO_11_pc_T = bits(MPORT_13, 101, 38) @[rob.scala 37:22]
    debugFIFO[11].pc <= _debugFIFO_11_pc_T @[rob.scala 37:16]
    node _debugFIFO_12_prfDest_T = bits(MPORT_14, 5, 0) @[rob.scala 35:27]
    debugFIFO[12].prfDest <= _debugFIFO_12_prfDest_T @[rob.scala 35:21]
    node _debugFIFO_12_instruction_T = bits(MPORT_14, 37, 6) @[rob.scala 36:31]
    debugFIFO[12].instruction <= _debugFIFO_12_instruction_T @[rob.scala 36:25]
    node _debugFIFO_12_pc_T = bits(MPORT_14, 101, 38) @[rob.scala 37:22]
    debugFIFO[12].pc <= _debugFIFO_12_pc_T @[rob.scala 37:16]
    node _debugFIFO_13_prfDest_T = bits(MPORT_15, 5, 0) @[rob.scala 35:27]
    debugFIFO[13].prfDest <= _debugFIFO_13_prfDest_T @[rob.scala 35:21]
    node _debugFIFO_13_instruction_T = bits(MPORT_15, 37, 6) @[rob.scala 36:31]
    debugFIFO[13].instruction <= _debugFIFO_13_instruction_T @[rob.scala 36:25]
    node _debugFIFO_13_pc_T = bits(MPORT_15, 101, 38) @[rob.scala 37:22]
    debugFIFO[13].pc <= _debugFIFO_13_pc_T @[rob.scala 37:16]
    node _debugFIFO_14_prfDest_T = bits(MPORT_16, 5, 0) @[rob.scala 35:27]
    debugFIFO[14].prfDest <= _debugFIFO_14_prfDest_T @[rob.scala 35:21]
    node _debugFIFO_14_instruction_T = bits(MPORT_16, 37, 6) @[rob.scala 36:31]
    debugFIFO[14].instruction <= _debugFIFO_14_instruction_T @[rob.scala 36:25]
    node _debugFIFO_14_pc_T = bits(MPORT_16, 101, 38) @[rob.scala 37:22]
    debugFIFO[14].pc <= _debugFIFO_14_pc_T @[rob.scala 37:16]
    node _debugFIFO_15_prfDest_T = bits(MPORT_17, 5, 0) @[rob.scala 35:27]
    debugFIFO[15].prfDest <= _debugFIFO_15_prfDest_T @[rob.scala 35:21]
    node _debugFIFO_15_instruction_T = bits(MPORT_17, 37, 6) @[rob.scala 36:31]
    debugFIFO[15].instruction <= _debugFIFO_15_instruction_T @[rob.scala 36:25]
    node _debugFIFO_15_pc_T = bits(MPORT_17, 101, 38) @[rob.scala 37:22]
    debugFIFO[15].pc <= _debugFIFO_15_pc_T @[rob.scala 37:16]
    debugFIFO[0].valid <= UInt<1>("h0") @[rob.scala 39:31]
    debugFIFO[1].valid <= UInt<1>("h0") @[rob.scala 39:31]
    debugFIFO[2].valid <= UInt<1>("h0") @[rob.scala 39:31]
    debugFIFO[3].valid <= UInt<1>("h0") @[rob.scala 39:31]
    debugFIFO[4].valid <= UInt<1>("h0") @[rob.scala 39:31]
    debugFIFO[5].valid <= UInt<1>("h0") @[rob.scala 39:31]
    debugFIFO[6].valid <= UInt<1>("h0") @[rob.scala 39:31]
    debugFIFO[7].valid <= UInt<1>("h0") @[rob.scala 39:31]
    debugFIFO[8].valid <= UInt<1>("h0") @[rob.scala 39:31]
    debugFIFO[9].valid <= UInt<1>("h0") @[rob.scala 39:31]
    debugFIFO[10].valid <= UInt<1>("h0") @[rob.scala 39:31]
    debugFIFO[11].valid <= UInt<1>("h0") @[rob.scala 39:31]
    debugFIFO[12].valid <= UInt<1>("h0") @[rob.scala 39:31]
    debugFIFO[13].valid <= UInt<1>("h0") @[rob.scala 39:31]
    debugFIFO[14].valid <= UInt<1>("h0") @[rob.scala 39:31]
    debugFIFO[15].valid <= UInt<1>("h0") @[rob.scala 39:31]
    node _T_5 = neq(readPtr, writePtr) @[rob.scala 40:18]
    when _T_5 : @[rob.scala 40:32]
      node _T_6 = geq(UInt<1>("h0"), readPtr) @[rob.scala 41:37]
      node _T_7 = lt(UInt<1>("h0"), writePtr) @[rob.scala 41:57]
      node _T_8 = and(_T_6, _T_7) @[rob.scala 41:49]
      node _T_9 = geq(UInt<1>("h1"), readPtr) @[rob.scala 41:37]
      node _T_10 = lt(UInt<1>("h1"), writePtr) @[rob.scala 41:57]
      node _T_11 = and(_T_9, _T_10) @[rob.scala 41:49]
      node _T_12 = geq(UInt<2>("h2"), readPtr) @[rob.scala 41:37]
      node _T_13 = lt(UInt<2>("h2"), writePtr) @[rob.scala 41:57]
      node _T_14 = and(_T_12, _T_13) @[rob.scala 41:49]
      node _T_15 = geq(UInt<2>("h3"), readPtr) @[rob.scala 41:37]
      node _T_16 = lt(UInt<2>("h3"), writePtr) @[rob.scala 41:57]
      node _T_17 = and(_T_15, _T_16) @[rob.scala 41:49]
      node _T_18 = geq(UInt<3>("h4"), readPtr) @[rob.scala 41:37]
      node _T_19 = lt(UInt<3>("h4"), writePtr) @[rob.scala 41:57]
      node _T_20 = and(_T_18, _T_19) @[rob.scala 41:49]
      node _T_21 = geq(UInt<3>("h5"), readPtr) @[rob.scala 41:37]
      node _T_22 = lt(UInt<3>("h5"), writePtr) @[rob.scala 41:57]
      node _T_23 = and(_T_21, _T_22) @[rob.scala 41:49]
      node _T_24 = geq(UInt<3>("h6"), readPtr) @[rob.scala 41:37]
      node _T_25 = lt(UInt<3>("h6"), writePtr) @[rob.scala 41:57]
      node _T_26 = and(_T_24, _T_25) @[rob.scala 41:49]
      node _T_27 = geq(UInt<3>("h7"), readPtr) @[rob.scala 41:37]
      node _T_28 = lt(UInt<3>("h7"), writePtr) @[rob.scala 41:57]
      node _T_29 = and(_T_27, _T_28) @[rob.scala 41:49]
      node _T_30 = geq(UInt<4>("h8"), readPtr) @[rob.scala 41:37]
      node _T_31 = lt(UInt<4>("h8"), writePtr) @[rob.scala 41:57]
      node _T_32 = and(_T_30, _T_31) @[rob.scala 41:49]
      node _T_33 = geq(UInt<4>("h9"), readPtr) @[rob.scala 41:37]
      node _T_34 = lt(UInt<4>("h9"), writePtr) @[rob.scala 41:57]
      node _T_35 = and(_T_33, _T_34) @[rob.scala 41:49]
      node _T_36 = geq(UInt<4>("ha"), readPtr) @[rob.scala 41:37]
      node _T_37 = lt(UInt<4>("ha"), writePtr) @[rob.scala 41:57]
      node _T_38 = and(_T_36, _T_37) @[rob.scala 41:49]
      node _T_39 = geq(UInt<4>("hb"), readPtr) @[rob.scala 41:37]
      node _T_40 = lt(UInt<4>("hb"), writePtr) @[rob.scala 41:57]
      node _T_41 = and(_T_39, _T_40) @[rob.scala 41:49]
      node _T_42 = geq(UInt<4>("hc"), readPtr) @[rob.scala 41:37]
      node _T_43 = lt(UInt<4>("hc"), writePtr) @[rob.scala 41:57]
      node _T_44 = and(_T_42, _T_43) @[rob.scala 41:49]
      node _T_45 = geq(UInt<4>("hd"), readPtr) @[rob.scala 41:37]
      node _T_46 = lt(UInt<4>("hd"), writePtr) @[rob.scala 41:57]
      node _T_47 = and(_T_45, _T_46) @[rob.scala 41:49]
      node _T_48 = geq(UInt<4>("he"), readPtr) @[rob.scala 41:37]
      node _T_49 = lt(UInt<4>("he"), writePtr) @[rob.scala 41:57]
      node _T_50 = and(_T_48, _T_49) @[rob.scala 41:49]
      node _T_51 = geq(UInt<4>("hf"), readPtr) @[rob.scala 41:37]
      node _T_52 = lt(UInt<4>("hf"), writePtr) @[rob.scala 41:57]
      node _T_53 = and(_T_51, _T_52) @[rob.scala 41:49]
      debugFIFO[0].valid <= _T_8 @[rob.scala 43:52]
      debugFIFO[1].valid <= _T_11 @[rob.scala 43:52]
      debugFIFO[2].valid <= _T_14 @[rob.scala 43:52]
      debugFIFO[3].valid <= _T_17 @[rob.scala 43:52]
      debugFIFO[4].valid <= _T_20 @[rob.scala 43:52]
      debugFIFO[5].valid <= _T_23 @[rob.scala 43:52]
      debugFIFO[6].valid <= _T_26 @[rob.scala 43:52]
      debugFIFO[7].valid <= _T_29 @[rob.scala 43:52]
      debugFIFO[8].valid <= _T_32 @[rob.scala 43:52]
      debugFIFO[9].valid <= _T_35 @[rob.scala 43:52]
      debugFIFO[10].valid <= _T_38 @[rob.scala 43:52]
      debugFIFO[11].valid <= _T_41 @[rob.scala 43:52]
      debugFIFO[12].valid <= _T_44 @[rob.scala 43:52]
      debugFIFO[13].valid <= _T_47 @[rob.scala 43:52]
      debugFIFO[14].valid <= _T_50 @[rob.scala 43:52]
      debugFIFO[15].valid <= _T_53 @[rob.scala 43:52]
      node _T_54 = gt(readPtr, writePtr) @[rob.scala 44:21]
      when _T_54 : @[rob.scala 44:33]
        node _T_55 = geq(UInt<1>("h0"), readPtr) @[rob.scala 45:39]
        node _T_56 = lt(UInt<1>("h0"), writePtr) @[rob.scala 45:59]
        node _T_57 = or(_T_55, _T_56) @[rob.scala 45:51]
        node _T_58 = geq(UInt<1>("h1"), readPtr) @[rob.scala 45:39]
        node _T_59 = lt(UInt<1>("h1"), writePtr) @[rob.scala 45:59]
        node _T_60 = or(_T_58, _T_59) @[rob.scala 45:51]
        node _T_61 = geq(UInt<2>("h2"), readPtr) @[rob.scala 45:39]
        node _T_62 = lt(UInt<2>("h2"), writePtr) @[rob.scala 45:59]
        node _T_63 = or(_T_61, _T_62) @[rob.scala 45:51]
        node _T_64 = geq(UInt<2>("h3"), readPtr) @[rob.scala 45:39]
        node _T_65 = lt(UInt<2>("h3"), writePtr) @[rob.scala 45:59]
        node _T_66 = or(_T_64, _T_65) @[rob.scala 45:51]
        node _T_67 = geq(UInt<3>("h4"), readPtr) @[rob.scala 45:39]
        node _T_68 = lt(UInt<3>("h4"), writePtr) @[rob.scala 45:59]
        node _T_69 = or(_T_67, _T_68) @[rob.scala 45:51]
        node _T_70 = geq(UInt<3>("h5"), readPtr) @[rob.scala 45:39]
        node _T_71 = lt(UInt<3>("h5"), writePtr) @[rob.scala 45:59]
        node _T_72 = or(_T_70, _T_71) @[rob.scala 45:51]
        node _T_73 = geq(UInt<3>("h6"), readPtr) @[rob.scala 45:39]
        node _T_74 = lt(UInt<3>("h6"), writePtr) @[rob.scala 45:59]
        node _T_75 = or(_T_73, _T_74) @[rob.scala 45:51]
        node _T_76 = geq(UInt<3>("h7"), readPtr) @[rob.scala 45:39]
        node _T_77 = lt(UInt<3>("h7"), writePtr) @[rob.scala 45:59]
        node _T_78 = or(_T_76, _T_77) @[rob.scala 45:51]
        node _T_79 = geq(UInt<4>("h8"), readPtr) @[rob.scala 45:39]
        node _T_80 = lt(UInt<4>("h8"), writePtr) @[rob.scala 45:59]
        node _T_81 = or(_T_79, _T_80) @[rob.scala 45:51]
        node _T_82 = geq(UInt<4>("h9"), readPtr) @[rob.scala 45:39]
        node _T_83 = lt(UInt<4>("h9"), writePtr) @[rob.scala 45:59]
        node _T_84 = or(_T_82, _T_83) @[rob.scala 45:51]
        node _T_85 = geq(UInt<4>("ha"), readPtr) @[rob.scala 45:39]
        node _T_86 = lt(UInt<4>("ha"), writePtr) @[rob.scala 45:59]
        node _T_87 = or(_T_85, _T_86) @[rob.scala 45:51]
        node _T_88 = geq(UInt<4>("hb"), readPtr) @[rob.scala 45:39]
        node _T_89 = lt(UInt<4>("hb"), writePtr) @[rob.scala 45:59]
        node _T_90 = or(_T_88, _T_89) @[rob.scala 45:51]
        node _T_91 = geq(UInt<4>("hc"), readPtr) @[rob.scala 45:39]
        node _T_92 = lt(UInt<4>("hc"), writePtr) @[rob.scala 45:59]
        node _T_93 = or(_T_91, _T_92) @[rob.scala 45:51]
        node _T_94 = geq(UInt<4>("hd"), readPtr) @[rob.scala 45:39]
        node _T_95 = lt(UInt<4>("hd"), writePtr) @[rob.scala 45:59]
        node _T_96 = or(_T_94, _T_95) @[rob.scala 45:51]
        node _T_97 = geq(UInt<4>("he"), readPtr) @[rob.scala 45:39]
        node _T_98 = lt(UInt<4>("he"), writePtr) @[rob.scala 45:59]
        node _T_99 = or(_T_97, _T_98) @[rob.scala 45:51]
        node _T_100 = geq(UInt<4>("hf"), readPtr) @[rob.scala 45:39]
        node _T_101 = lt(UInt<4>("hf"), writePtr) @[rob.scala 45:59]
        node _T_102 = or(_T_100, _T_101) @[rob.scala 45:51]
        debugFIFO[0].valid <= _T_57 @[rob.scala 47:54]
        debugFIFO[1].valid <= _T_60 @[rob.scala 47:54]
        debugFIFO[2].valid <= _T_63 @[rob.scala 47:54]
        debugFIFO[3].valid <= _T_66 @[rob.scala 47:54]
        debugFIFO[4].valid <= _T_69 @[rob.scala 47:54]
        debugFIFO[5].valid <= _T_72 @[rob.scala 47:54]
        debugFIFO[6].valid <= _T_75 @[rob.scala 47:54]
        debugFIFO[7].valid <= _T_78 @[rob.scala 47:54]
        debugFIFO[8].valid <= _T_81 @[rob.scala 47:54]
        debugFIFO[9].valid <= _T_84 @[rob.scala 47:54]
        debugFIFO[10].valid <= _T_87 @[rob.scala 47:54]
        debugFIFO[11].valid <= _T_90 @[rob.scala 47:54]
        debugFIFO[12].valid <= _T_93 @[rob.scala 47:54]
        debugFIFO[13].valid <= _T_96 @[rob.scala 47:54]
        debugFIFO[14].valid <= _T_99 @[rob.scala 47:54]
        debugFIFO[15].valid <= _T_102 @[rob.scala 47:54]
    else :
      when fullReg : @[rob.scala 49:25]
        debugFIFO[0].valid <= UInt<1>("h1") @[rob.scala 50:33]
        debugFIFO[1].valid <= UInt<1>("h1") @[rob.scala 50:33]
        debugFIFO[2].valid <= UInt<1>("h1") @[rob.scala 50:33]
        debugFIFO[3].valid <= UInt<1>("h1") @[rob.scala 50:33]
        debugFIFO[4].valid <= UInt<1>("h1") @[rob.scala 50:33]
        debugFIFO[5].valid <= UInt<1>("h1") @[rob.scala 50:33]
        debugFIFO[6].valid <= UInt<1>("h1") @[rob.scala 50:33]
        debugFIFO[7].valid <= UInt<1>("h1") @[rob.scala 50:33]
        debugFIFO[8].valid <= UInt<1>("h1") @[rob.scala 50:33]
        debugFIFO[9].valid <= UInt<1>("h1") @[rob.scala 50:33]
        debugFIFO[10].valid <= UInt<1>("h1") @[rob.scala 50:33]
        debugFIFO[11].valid <= UInt<1>("h1") @[rob.scala 50:33]
        debugFIFO[12].valid <= UInt<1>("h1") @[rob.scala 50:33]
        debugFIFO[13].valid <= UInt<1>("h1") @[rob.scala 50:33]
        debugFIFO[14].valid <= UInt<1>("h1") @[rob.scala 50:33]
        debugFIFO[15].valid <= UInt<1>("h1") @[rob.scala 50:33]
    node _debugFIFO_0_writeBackGPR_T = bits(debugFIFO[0].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_0_writeBackGPR_insType : UInt<3>
    debugFIFO_0_writeBackGPR_insType <= UInt<3>("h0")
    node _debugFIFO_0_writeBackGPR_T_1 = eq(UInt<6>("h37"), _debugFIFO_0_writeBackGPR_T) @[utils.scala 10:20]
    when _debugFIFO_0_writeBackGPR_T_1 : @[utils.scala 10:20]
      debugFIFO_0_writeBackGPR_insType <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_0_writeBackGPR_T_2 = eq(UInt<5>("h17"), _debugFIFO_0_writeBackGPR_T) @[utils.scala 10:20]
      when _debugFIFO_0_writeBackGPR_T_2 : @[utils.scala 10:20]
        debugFIFO_0_writeBackGPR_insType <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_0_writeBackGPR_T_3 = eq(UInt<7>("h6f"), _debugFIFO_0_writeBackGPR_T) @[utils.scala 10:20]
        when _debugFIFO_0_writeBackGPR_T_3 : @[utils.scala 10:20]
          debugFIFO_0_writeBackGPR_insType <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_0_writeBackGPR_T_4 = eq(UInt<7>("h67"), _debugFIFO_0_writeBackGPR_T) @[utils.scala 10:20]
          when _debugFIFO_0_writeBackGPR_T_4 : @[utils.scala 10:20]
            debugFIFO_0_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_0_writeBackGPR_T_5 = eq(UInt<7>("h63"), _debugFIFO_0_writeBackGPR_T) @[utils.scala 10:20]
            when _debugFIFO_0_writeBackGPR_T_5 : @[utils.scala 10:20]
              debugFIFO_0_writeBackGPR_insType <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_0_writeBackGPR_T_6 = eq(UInt<2>("h3"), _debugFIFO_0_writeBackGPR_T) @[utils.scala 10:20]
              when _debugFIFO_0_writeBackGPR_T_6 : @[utils.scala 10:20]
                debugFIFO_0_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_0_writeBackGPR_T_7 = eq(UInt<6>("h23"), _debugFIFO_0_writeBackGPR_T) @[utils.scala 10:20]
                when _debugFIFO_0_writeBackGPR_T_7 : @[utils.scala 10:20]
                  debugFIFO_0_writeBackGPR_insType <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_0_writeBackGPR_T_8 = eq(UInt<5>("h13"), _debugFIFO_0_writeBackGPR_T) @[utils.scala 10:20]
                  when _debugFIFO_0_writeBackGPR_T_8 : @[utils.scala 10:20]
                    debugFIFO_0_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_0_writeBackGPR_T_9 = eq(UInt<5>("h1b"), _debugFIFO_0_writeBackGPR_T) @[utils.scala 10:20]
                    when _debugFIFO_0_writeBackGPR_T_9 : @[utils.scala 10:20]
                      debugFIFO_0_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_0_writeBackGPR_T_10 = eq(UInt<6>("h33"), _debugFIFO_0_writeBackGPR_T) @[utils.scala 10:20]
                      when _debugFIFO_0_writeBackGPR_T_10 : @[utils.scala 10:20]
                        debugFIFO_0_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_0_writeBackGPR_T_11 = eq(UInt<6>("h3b"), _debugFIFO_0_writeBackGPR_T) @[utils.scala 10:20]
                        when _debugFIFO_0_writeBackGPR_T_11 : @[utils.scala 10:20]
                          debugFIFO_0_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_0_writeBackGPR_T_12 = eq(UInt<7>("h73"), _debugFIFO_0_writeBackGPR_T) @[utils.scala 10:20]
                          when _debugFIFO_0_writeBackGPR_T_12 : @[utils.scala 10:20]
                            debugFIFO_0_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_0_writeBackGPR_T_13 = eq(UInt<4>("hf"), _debugFIFO_0_writeBackGPR_T) @[utils.scala 10:20]
                            when _debugFIFO_0_writeBackGPR_T_13 : @[utils.scala 10:20]
                              debugFIFO_0_writeBackGPR_insType <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_0_writeBackGPR_T_14 = eq(UInt<6>("h2f"), _debugFIFO_0_writeBackGPR_T) @[utils.scala 10:20]
                              when _debugFIFO_0_writeBackGPR_T_14 : @[utils.scala 10:20]
                                debugFIFO_0_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_0_writeBackGPR_T_15 = eq(UInt<1>("h1"), debugFIFO_0_writeBackGPR_insType) @[rob.scala 52:141]
    node _debugFIFO_0_writeBackGPR_T_16 = bits(debugFIFO[0].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_0_writeBackGPR_insType_1 : UInt<3>
    debugFIFO_0_writeBackGPR_insType_1 <= UInt<3>("h0")
    node _debugFIFO_0_writeBackGPR_T_17 = eq(UInt<6>("h37"), _debugFIFO_0_writeBackGPR_T_16) @[utils.scala 10:20]
    when _debugFIFO_0_writeBackGPR_T_17 : @[utils.scala 10:20]
      debugFIFO_0_writeBackGPR_insType_1 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_0_writeBackGPR_T_18 = eq(UInt<5>("h17"), _debugFIFO_0_writeBackGPR_T_16) @[utils.scala 10:20]
      when _debugFIFO_0_writeBackGPR_T_18 : @[utils.scala 10:20]
        debugFIFO_0_writeBackGPR_insType_1 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_0_writeBackGPR_T_19 = eq(UInt<7>("h6f"), _debugFIFO_0_writeBackGPR_T_16) @[utils.scala 10:20]
        when _debugFIFO_0_writeBackGPR_T_19 : @[utils.scala 10:20]
          debugFIFO_0_writeBackGPR_insType_1 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_0_writeBackGPR_T_20 = eq(UInt<7>("h67"), _debugFIFO_0_writeBackGPR_T_16) @[utils.scala 10:20]
          when _debugFIFO_0_writeBackGPR_T_20 : @[utils.scala 10:20]
            debugFIFO_0_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_0_writeBackGPR_T_21 = eq(UInt<7>("h63"), _debugFIFO_0_writeBackGPR_T_16) @[utils.scala 10:20]
            when _debugFIFO_0_writeBackGPR_T_21 : @[utils.scala 10:20]
              debugFIFO_0_writeBackGPR_insType_1 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_0_writeBackGPR_T_22 = eq(UInt<2>("h3"), _debugFIFO_0_writeBackGPR_T_16) @[utils.scala 10:20]
              when _debugFIFO_0_writeBackGPR_T_22 : @[utils.scala 10:20]
                debugFIFO_0_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_0_writeBackGPR_T_23 = eq(UInt<6>("h23"), _debugFIFO_0_writeBackGPR_T_16) @[utils.scala 10:20]
                when _debugFIFO_0_writeBackGPR_T_23 : @[utils.scala 10:20]
                  debugFIFO_0_writeBackGPR_insType_1 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_0_writeBackGPR_T_24 = eq(UInt<5>("h13"), _debugFIFO_0_writeBackGPR_T_16) @[utils.scala 10:20]
                  when _debugFIFO_0_writeBackGPR_T_24 : @[utils.scala 10:20]
                    debugFIFO_0_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_0_writeBackGPR_T_25 = eq(UInt<5>("h1b"), _debugFIFO_0_writeBackGPR_T_16) @[utils.scala 10:20]
                    when _debugFIFO_0_writeBackGPR_T_25 : @[utils.scala 10:20]
                      debugFIFO_0_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_0_writeBackGPR_T_26 = eq(UInt<6>("h33"), _debugFIFO_0_writeBackGPR_T_16) @[utils.scala 10:20]
                      when _debugFIFO_0_writeBackGPR_T_26 : @[utils.scala 10:20]
                        debugFIFO_0_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_0_writeBackGPR_T_27 = eq(UInt<6>("h3b"), _debugFIFO_0_writeBackGPR_T_16) @[utils.scala 10:20]
                        when _debugFIFO_0_writeBackGPR_T_27 : @[utils.scala 10:20]
                          debugFIFO_0_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_0_writeBackGPR_T_28 = eq(UInt<7>("h73"), _debugFIFO_0_writeBackGPR_T_16) @[utils.scala 10:20]
                          when _debugFIFO_0_writeBackGPR_T_28 : @[utils.scala 10:20]
                            debugFIFO_0_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_0_writeBackGPR_T_29 = eq(UInt<4>("hf"), _debugFIFO_0_writeBackGPR_T_16) @[utils.scala 10:20]
                            when _debugFIFO_0_writeBackGPR_T_29 : @[utils.scala 10:20]
                              debugFIFO_0_writeBackGPR_insType_1 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_0_writeBackGPR_T_30 = eq(UInt<6>("h2f"), _debugFIFO_0_writeBackGPR_T_16) @[utils.scala 10:20]
                              when _debugFIFO_0_writeBackGPR_T_30 : @[utils.scala 10:20]
                                debugFIFO_0_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_0_writeBackGPR_T_31 = eq(UInt<1>("h0"), debugFIFO_0_writeBackGPR_insType_1) @[rob.scala 52:141]
    node _debugFIFO_0_writeBackGPR_T_32 = bits(debugFIFO[0].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_0_writeBackGPR_insType_2 : UInt<3>
    debugFIFO_0_writeBackGPR_insType_2 <= UInt<3>("h0")
    node _debugFIFO_0_writeBackGPR_T_33 = eq(UInt<6>("h37"), _debugFIFO_0_writeBackGPR_T_32) @[utils.scala 10:20]
    when _debugFIFO_0_writeBackGPR_T_33 : @[utils.scala 10:20]
      debugFIFO_0_writeBackGPR_insType_2 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_0_writeBackGPR_T_34 = eq(UInt<5>("h17"), _debugFIFO_0_writeBackGPR_T_32) @[utils.scala 10:20]
      when _debugFIFO_0_writeBackGPR_T_34 : @[utils.scala 10:20]
        debugFIFO_0_writeBackGPR_insType_2 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_0_writeBackGPR_T_35 = eq(UInt<7>("h6f"), _debugFIFO_0_writeBackGPR_T_32) @[utils.scala 10:20]
        when _debugFIFO_0_writeBackGPR_T_35 : @[utils.scala 10:20]
          debugFIFO_0_writeBackGPR_insType_2 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_0_writeBackGPR_T_36 = eq(UInt<7>("h67"), _debugFIFO_0_writeBackGPR_T_32) @[utils.scala 10:20]
          when _debugFIFO_0_writeBackGPR_T_36 : @[utils.scala 10:20]
            debugFIFO_0_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_0_writeBackGPR_T_37 = eq(UInt<7>("h63"), _debugFIFO_0_writeBackGPR_T_32) @[utils.scala 10:20]
            when _debugFIFO_0_writeBackGPR_T_37 : @[utils.scala 10:20]
              debugFIFO_0_writeBackGPR_insType_2 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_0_writeBackGPR_T_38 = eq(UInt<2>("h3"), _debugFIFO_0_writeBackGPR_T_32) @[utils.scala 10:20]
              when _debugFIFO_0_writeBackGPR_T_38 : @[utils.scala 10:20]
                debugFIFO_0_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_0_writeBackGPR_T_39 = eq(UInt<6>("h23"), _debugFIFO_0_writeBackGPR_T_32) @[utils.scala 10:20]
                when _debugFIFO_0_writeBackGPR_T_39 : @[utils.scala 10:20]
                  debugFIFO_0_writeBackGPR_insType_2 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_0_writeBackGPR_T_40 = eq(UInt<5>("h13"), _debugFIFO_0_writeBackGPR_T_32) @[utils.scala 10:20]
                  when _debugFIFO_0_writeBackGPR_T_40 : @[utils.scala 10:20]
                    debugFIFO_0_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_0_writeBackGPR_T_41 = eq(UInt<5>("h1b"), _debugFIFO_0_writeBackGPR_T_32) @[utils.scala 10:20]
                    when _debugFIFO_0_writeBackGPR_T_41 : @[utils.scala 10:20]
                      debugFIFO_0_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_0_writeBackGPR_T_42 = eq(UInt<6>("h33"), _debugFIFO_0_writeBackGPR_T_32) @[utils.scala 10:20]
                      when _debugFIFO_0_writeBackGPR_T_42 : @[utils.scala 10:20]
                        debugFIFO_0_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_0_writeBackGPR_T_43 = eq(UInt<6>("h3b"), _debugFIFO_0_writeBackGPR_T_32) @[utils.scala 10:20]
                        when _debugFIFO_0_writeBackGPR_T_43 : @[utils.scala 10:20]
                          debugFIFO_0_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_0_writeBackGPR_T_44 = eq(UInt<7>("h73"), _debugFIFO_0_writeBackGPR_T_32) @[utils.scala 10:20]
                          when _debugFIFO_0_writeBackGPR_T_44 : @[utils.scala 10:20]
                            debugFIFO_0_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_0_writeBackGPR_T_45 = eq(UInt<4>("hf"), _debugFIFO_0_writeBackGPR_T_32) @[utils.scala 10:20]
                            when _debugFIFO_0_writeBackGPR_T_45 : @[utils.scala 10:20]
                              debugFIFO_0_writeBackGPR_insType_2 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_0_writeBackGPR_T_46 = eq(UInt<6>("h2f"), _debugFIFO_0_writeBackGPR_T_32) @[utils.scala 10:20]
                              when _debugFIFO_0_writeBackGPR_T_46 : @[utils.scala 10:20]
                                debugFIFO_0_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_0_writeBackGPR_T_47 = eq(UInt<3>("h4"), debugFIFO_0_writeBackGPR_insType_2) @[rob.scala 52:141]
    node _debugFIFO_0_writeBackGPR_T_48 = bits(debugFIFO[0].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_0_writeBackGPR_insType_3 : UInt<3>
    debugFIFO_0_writeBackGPR_insType_3 <= UInt<3>("h0")
    node _debugFIFO_0_writeBackGPR_T_49 = eq(UInt<6>("h37"), _debugFIFO_0_writeBackGPR_T_48) @[utils.scala 10:20]
    when _debugFIFO_0_writeBackGPR_T_49 : @[utils.scala 10:20]
      debugFIFO_0_writeBackGPR_insType_3 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_0_writeBackGPR_T_50 = eq(UInt<5>("h17"), _debugFIFO_0_writeBackGPR_T_48) @[utils.scala 10:20]
      when _debugFIFO_0_writeBackGPR_T_50 : @[utils.scala 10:20]
        debugFIFO_0_writeBackGPR_insType_3 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_0_writeBackGPR_T_51 = eq(UInt<7>("h6f"), _debugFIFO_0_writeBackGPR_T_48) @[utils.scala 10:20]
        when _debugFIFO_0_writeBackGPR_T_51 : @[utils.scala 10:20]
          debugFIFO_0_writeBackGPR_insType_3 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_0_writeBackGPR_T_52 = eq(UInt<7>("h67"), _debugFIFO_0_writeBackGPR_T_48) @[utils.scala 10:20]
          when _debugFIFO_0_writeBackGPR_T_52 : @[utils.scala 10:20]
            debugFIFO_0_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_0_writeBackGPR_T_53 = eq(UInt<7>("h63"), _debugFIFO_0_writeBackGPR_T_48) @[utils.scala 10:20]
            when _debugFIFO_0_writeBackGPR_T_53 : @[utils.scala 10:20]
              debugFIFO_0_writeBackGPR_insType_3 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_0_writeBackGPR_T_54 = eq(UInt<2>("h3"), _debugFIFO_0_writeBackGPR_T_48) @[utils.scala 10:20]
              when _debugFIFO_0_writeBackGPR_T_54 : @[utils.scala 10:20]
                debugFIFO_0_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_0_writeBackGPR_T_55 = eq(UInt<6>("h23"), _debugFIFO_0_writeBackGPR_T_48) @[utils.scala 10:20]
                when _debugFIFO_0_writeBackGPR_T_55 : @[utils.scala 10:20]
                  debugFIFO_0_writeBackGPR_insType_3 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_0_writeBackGPR_T_56 = eq(UInt<5>("h13"), _debugFIFO_0_writeBackGPR_T_48) @[utils.scala 10:20]
                  when _debugFIFO_0_writeBackGPR_T_56 : @[utils.scala 10:20]
                    debugFIFO_0_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_0_writeBackGPR_T_57 = eq(UInt<5>("h1b"), _debugFIFO_0_writeBackGPR_T_48) @[utils.scala 10:20]
                    when _debugFIFO_0_writeBackGPR_T_57 : @[utils.scala 10:20]
                      debugFIFO_0_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_0_writeBackGPR_T_58 = eq(UInt<6>("h33"), _debugFIFO_0_writeBackGPR_T_48) @[utils.scala 10:20]
                      when _debugFIFO_0_writeBackGPR_T_58 : @[utils.scala 10:20]
                        debugFIFO_0_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_0_writeBackGPR_T_59 = eq(UInt<6>("h3b"), _debugFIFO_0_writeBackGPR_T_48) @[utils.scala 10:20]
                        when _debugFIFO_0_writeBackGPR_T_59 : @[utils.scala 10:20]
                          debugFIFO_0_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_0_writeBackGPR_T_60 = eq(UInt<7>("h73"), _debugFIFO_0_writeBackGPR_T_48) @[utils.scala 10:20]
                          when _debugFIFO_0_writeBackGPR_T_60 : @[utils.scala 10:20]
                            debugFIFO_0_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_0_writeBackGPR_T_61 = eq(UInt<4>("hf"), _debugFIFO_0_writeBackGPR_T_48) @[utils.scala 10:20]
                            when _debugFIFO_0_writeBackGPR_T_61 : @[utils.scala 10:20]
                              debugFIFO_0_writeBackGPR_insType_3 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_0_writeBackGPR_T_62 = eq(UInt<6>("h2f"), _debugFIFO_0_writeBackGPR_T_48) @[utils.scala 10:20]
                              when _debugFIFO_0_writeBackGPR_T_62 : @[utils.scala 10:20]
                                debugFIFO_0_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_0_writeBackGPR_T_63 = eq(UInt<3>("h5"), debugFIFO_0_writeBackGPR_insType_3) @[rob.scala 52:141]
    node _debugFIFO_0_writeBackGPR_T_64 = or(_debugFIFO_0_writeBackGPR_T_15, _debugFIFO_0_writeBackGPR_T_31) @[rob.scala 52:197]
    node _debugFIFO_0_writeBackGPR_T_65 = or(_debugFIFO_0_writeBackGPR_T_64, _debugFIFO_0_writeBackGPR_T_47) @[rob.scala 52:197]
    node _debugFIFO_0_writeBackGPR_T_66 = or(_debugFIFO_0_writeBackGPR_T_65, _debugFIFO_0_writeBackGPR_T_63) @[rob.scala 52:197]
    node _debugFIFO_0_writeBackGPR_T_67 = bits(debugFIFO[0].instruction, 11, 7) @[rob.scala 52:223]
    node _debugFIFO_0_writeBackGPR_T_68 = orr(_debugFIFO_0_writeBackGPR_T_67) @[rob.scala 52:231]
    node _debugFIFO_0_writeBackGPR_T_69 = and(_debugFIFO_0_writeBackGPR_T_66, _debugFIFO_0_writeBackGPR_T_68) @[rob.scala 52:203]
    node _debugFIFO_0_writeBackGPR_T_70 = and(_debugFIFO_0_writeBackGPR_T_69, debugFIFO[0].valid) @[rob.scala 52:235]
    debugFIFO[0].writeBackGPR <= _debugFIFO_0_writeBackGPR_T_70 @[rob.scala 52:52]
    node _debugFIFO_1_writeBackGPR_T = bits(debugFIFO[1].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_1_writeBackGPR_insType : UInt<3>
    debugFIFO_1_writeBackGPR_insType <= UInt<3>("h0")
    node _debugFIFO_1_writeBackGPR_T_1 = eq(UInt<6>("h37"), _debugFIFO_1_writeBackGPR_T) @[utils.scala 10:20]
    when _debugFIFO_1_writeBackGPR_T_1 : @[utils.scala 10:20]
      debugFIFO_1_writeBackGPR_insType <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_1_writeBackGPR_T_2 = eq(UInt<5>("h17"), _debugFIFO_1_writeBackGPR_T) @[utils.scala 10:20]
      when _debugFIFO_1_writeBackGPR_T_2 : @[utils.scala 10:20]
        debugFIFO_1_writeBackGPR_insType <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_1_writeBackGPR_T_3 = eq(UInt<7>("h6f"), _debugFIFO_1_writeBackGPR_T) @[utils.scala 10:20]
        when _debugFIFO_1_writeBackGPR_T_3 : @[utils.scala 10:20]
          debugFIFO_1_writeBackGPR_insType <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_1_writeBackGPR_T_4 = eq(UInt<7>("h67"), _debugFIFO_1_writeBackGPR_T) @[utils.scala 10:20]
          when _debugFIFO_1_writeBackGPR_T_4 : @[utils.scala 10:20]
            debugFIFO_1_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_1_writeBackGPR_T_5 = eq(UInt<7>("h63"), _debugFIFO_1_writeBackGPR_T) @[utils.scala 10:20]
            when _debugFIFO_1_writeBackGPR_T_5 : @[utils.scala 10:20]
              debugFIFO_1_writeBackGPR_insType <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_1_writeBackGPR_T_6 = eq(UInt<2>("h3"), _debugFIFO_1_writeBackGPR_T) @[utils.scala 10:20]
              when _debugFIFO_1_writeBackGPR_T_6 : @[utils.scala 10:20]
                debugFIFO_1_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_1_writeBackGPR_T_7 = eq(UInt<6>("h23"), _debugFIFO_1_writeBackGPR_T) @[utils.scala 10:20]
                when _debugFIFO_1_writeBackGPR_T_7 : @[utils.scala 10:20]
                  debugFIFO_1_writeBackGPR_insType <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_1_writeBackGPR_T_8 = eq(UInt<5>("h13"), _debugFIFO_1_writeBackGPR_T) @[utils.scala 10:20]
                  when _debugFIFO_1_writeBackGPR_T_8 : @[utils.scala 10:20]
                    debugFIFO_1_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_1_writeBackGPR_T_9 = eq(UInt<5>("h1b"), _debugFIFO_1_writeBackGPR_T) @[utils.scala 10:20]
                    when _debugFIFO_1_writeBackGPR_T_9 : @[utils.scala 10:20]
                      debugFIFO_1_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_1_writeBackGPR_T_10 = eq(UInt<6>("h33"), _debugFIFO_1_writeBackGPR_T) @[utils.scala 10:20]
                      when _debugFIFO_1_writeBackGPR_T_10 : @[utils.scala 10:20]
                        debugFIFO_1_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_1_writeBackGPR_T_11 = eq(UInt<6>("h3b"), _debugFIFO_1_writeBackGPR_T) @[utils.scala 10:20]
                        when _debugFIFO_1_writeBackGPR_T_11 : @[utils.scala 10:20]
                          debugFIFO_1_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_1_writeBackGPR_T_12 = eq(UInt<7>("h73"), _debugFIFO_1_writeBackGPR_T) @[utils.scala 10:20]
                          when _debugFIFO_1_writeBackGPR_T_12 : @[utils.scala 10:20]
                            debugFIFO_1_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_1_writeBackGPR_T_13 = eq(UInt<4>("hf"), _debugFIFO_1_writeBackGPR_T) @[utils.scala 10:20]
                            when _debugFIFO_1_writeBackGPR_T_13 : @[utils.scala 10:20]
                              debugFIFO_1_writeBackGPR_insType <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_1_writeBackGPR_T_14 = eq(UInt<6>("h2f"), _debugFIFO_1_writeBackGPR_T) @[utils.scala 10:20]
                              when _debugFIFO_1_writeBackGPR_T_14 : @[utils.scala 10:20]
                                debugFIFO_1_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_1_writeBackGPR_T_15 = eq(UInt<1>("h1"), debugFIFO_1_writeBackGPR_insType) @[rob.scala 52:141]
    node _debugFIFO_1_writeBackGPR_T_16 = bits(debugFIFO[1].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_1_writeBackGPR_insType_1 : UInt<3>
    debugFIFO_1_writeBackGPR_insType_1 <= UInt<3>("h0")
    node _debugFIFO_1_writeBackGPR_T_17 = eq(UInt<6>("h37"), _debugFIFO_1_writeBackGPR_T_16) @[utils.scala 10:20]
    when _debugFIFO_1_writeBackGPR_T_17 : @[utils.scala 10:20]
      debugFIFO_1_writeBackGPR_insType_1 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_1_writeBackGPR_T_18 = eq(UInt<5>("h17"), _debugFIFO_1_writeBackGPR_T_16) @[utils.scala 10:20]
      when _debugFIFO_1_writeBackGPR_T_18 : @[utils.scala 10:20]
        debugFIFO_1_writeBackGPR_insType_1 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_1_writeBackGPR_T_19 = eq(UInt<7>("h6f"), _debugFIFO_1_writeBackGPR_T_16) @[utils.scala 10:20]
        when _debugFIFO_1_writeBackGPR_T_19 : @[utils.scala 10:20]
          debugFIFO_1_writeBackGPR_insType_1 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_1_writeBackGPR_T_20 = eq(UInt<7>("h67"), _debugFIFO_1_writeBackGPR_T_16) @[utils.scala 10:20]
          when _debugFIFO_1_writeBackGPR_T_20 : @[utils.scala 10:20]
            debugFIFO_1_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_1_writeBackGPR_T_21 = eq(UInt<7>("h63"), _debugFIFO_1_writeBackGPR_T_16) @[utils.scala 10:20]
            when _debugFIFO_1_writeBackGPR_T_21 : @[utils.scala 10:20]
              debugFIFO_1_writeBackGPR_insType_1 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_1_writeBackGPR_T_22 = eq(UInt<2>("h3"), _debugFIFO_1_writeBackGPR_T_16) @[utils.scala 10:20]
              when _debugFIFO_1_writeBackGPR_T_22 : @[utils.scala 10:20]
                debugFIFO_1_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_1_writeBackGPR_T_23 = eq(UInt<6>("h23"), _debugFIFO_1_writeBackGPR_T_16) @[utils.scala 10:20]
                when _debugFIFO_1_writeBackGPR_T_23 : @[utils.scala 10:20]
                  debugFIFO_1_writeBackGPR_insType_1 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_1_writeBackGPR_T_24 = eq(UInt<5>("h13"), _debugFIFO_1_writeBackGPR_T_16) @[utils.scala 10:20]
                  when _debugFIFO_1_writeBackGPR_T_24 : @[utils.scala 10:20]
                    debugFIFO_1_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_1_writeBackGPR_T_25 = eq(UInt<5>("h1b"), _debugFIFO_1_writeBackGPR_T_16) @[utils.scala 10:20]
                    when _debugFIFO_1_writeBackGPR_T_25 : @[utils.scala 10:20]
                      debugFIFO_1_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_1_writeBackGPR_T_26 = eq(UInt<6>("h33"), _debugFIFO_1_writeBackGPR_T_16) @[utils.scala 10:20]
                      when _debugFIFO_1_writeBackGPR_T_26 : @[utils.scala 10:20]
                        debugFIFO_1_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_1_writeBackGPR_T_27 = eq(UInt<6>("h3b"), _debugFIFO_1_writeBackGPR_T_16) @[utils.scala 10:20]
                        when _debugFIFO_1_writeBackGPR_T_27 : @[utils.scala 10:20]
                          debugFIFO_1_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_1_writeBackGPR_T_28 = eq(UInt<7>("h73"), _debugFIFO_1_writeBackGPR_T_16) @[utils.scala 10:20]
                          when _debugFIFO_1_writeBackGPR_T_28 : @[utils.scala 10:20]
                            debugFIFO_1_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_1_writeBackGPR_T_29 = eq(UInt<4>("hf"), _debugFIFO_1_writeBackGPR_T_16) @[utils.scala 10:20]
                            when _debugFIFO_1_writeBackGPR_T_29 : @[utils.scala 10:20]
                              debugFIFO_1_writeBackGPR_insType_1 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_1_writeBackGPR_T_30 = eq(UInt<6>("h2f"), _debugFIFO_1_writeBackGPR_T_16) @[utils.scala 10:20]
                              when _debugFIFO_1_writeBackGPR_T_30 : @[utils.scala 10:20]
                                debugFIFO_1_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_1_writeBackGPR_T_31 = eq(UInt<1>("h0"), debugFIFO_1_writeBackGPR_insType_1) @[rob.scala 52:141]
    node _debugFIFO_1_writeBackGPR_T_32 = bits(debugFIFO[1].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_1_writeBackGPR_insType_2 : UInt<3>
    debugFIFO_1_writeBackGPR_insType_2 <= UInt<3>("h0")
    node _debugFIFO_1_writeBackGPR_T_33 = eq(UInt<6>("h37"), _debugFIFO_1_writeBackGPR_T_32) @[utils.scala 10:20]
    when _debugFIFO_1_writeBackGPR_T_33 : @[utils.scala 10:20]
      debugFIFO_1_writeBackGPR_insType_2 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_1_writeBackGPR_T_34 = eq(UInt<5>("h17"), _debugFIFO_1_writeBackGPR_T_32) @[utils.scala 10:20]
      when _debugFIFO_1_writeBackGPR_T_34 : @[utils.scala 10:20]
        debugFIFO_1_writeBackGPR_insType_2 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_1_writeBackGPR_T_35 = eq(UInt<7>("h6f"), _debugFIFO_1_writeBackGPR_T_32) @[utils.scala 10:20]
        when _debugFIFO_1_writeBackGPR_T_35 : @[utils.scala 10:20]
          debugFIFO_1_writeBackGPR_insType_2 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_1_writeBackGPR_T_36 = eq(UInt<7>("h67"), _debugFIFO_1_writeBackGPR_T_32) @[utils.scala 10:20]
          when _debugFIFO_1_writeBackGPR_T_36 : @[utils.scala 10:20]
            debugFIFO_1_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_1_writeBackGPR_T_37 = eq(UInt<7>("h63"), _debugFIFO_1_writeBackGPR_T_32) @[utils.scala 10:20]
            when _debugFIFO_1_writeBackGPR_T_37 : @[utils.scala 10:20]
              debugFIFO_1_writeBackGPR_insType_2 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_1_writeBackGPR_T_38 = eq(UInt<2>("h3"), _debugFIFO_1_writeBackGPR_T_32) @[utils.scala 10:20]
              when _debugFIFO_1_writeBackGPR_T_38 : @[utils.scala 10:20]
                debugFIFO_1_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_1_writeBackGPR_T_39 = eq(UInt<6>("h23"), _debugFIFO_1_writeBackGPR_T_32) @[utils.scala 10:20]
                when _debugFIFO_1_writeBackGPR_T_39 : @[utils.scala 10:20]
                  debugFIFO_1_writeBackGPR_insType_2 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_1_writeBackGPR_T_40 = eq(UInt<5>("h13"), _debugFIFO_1_writeBackGPR_T_32) @[utils.scala 10:20]
                  when _debugFIFO_1_writeBackGPR_T_40 : @[utils.scala 10:20]
                    debugFIFO_1_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_1_writeBackGPR_T_41 = eq(UInt<5>("h1b"), _debugFIFO_1_writeBackGPR_T_32) @[utils.scala 10:20]
                    when _debugFIFO_1_writeBackGPR_T_41 : @[utils.scala 10:20]
                      debugFIFO_1_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_1_writeBackGPR_T_42 = eq(UInt<6>("h33"), _debugFIFO_1_writeBackGPR_T_32) @[utils.scala 10:20]
                      when _debugFIFO_1_writeBackGPR_T_42 : @[utils.scala 10:20]
                        debugFIFO_1_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_1_writeBackGPR_T_43 = eq(UInt<6>("h3b"), _debugFIFO_1_writeBackGPR_T_32) @[utils.scala 10:20]
                        when _debugFIFO_1_writeBackGPR_T_43 : @[utils.scala 10:20]
                          debugFIFO_1_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_1_writeBackGPR_T_44 = eq(UInt<7>("h73"), _debugFIFO_1_writeBackGPR_T_32) @[utils.scala 10:20]
                          when _debugFIFO_1_writeBackGPR_T_44 : @[utils.scala 10:20]
                            debugFIFO_1_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_1_writeBackGPR_T_45 = eq(UInt<4>("hf"), _debugFIFO_1_writeBackGPR_T_32) @[utils.scala 10:20]
                            when _debugFIFO_1_writeBackGPR_T_45 : @[utils.scala 10:20]
                              debugFIFO_1_writeBackGPR_insType_2 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_1_writeBackGPR_T_46 = eq(UInt<6>("h2f"), _debugFIFO_1_writeBackGPR_T_32) @[utils.scala 10:20]
                              when _debugFIFO_1_writeBackGPR_T_46 : @[utils.scala 10:20]
                                debugFIFO_1_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_1_writeBackGPR_T_47 = eq(UInt<3>("h4"), debugFIFO_1_writeBackGPR_insType_2) @[rob.scala 52:141]
    node _debugFIFO_1_writeBackGPR_T_48 = bits(debugFIFO[1].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_1_writeBackGPR_insType_3 : UInt<3>
    debugFIFO_1_writeBackGPR_insType_3 <= UInt<3>("h0")
    node _debugFIFO_1_writeBackGPR_T_49 = eq(UInt<6>("h37"), _debugFIFO_1_writeBackGPR_T_48) @[utils.scala 10:20]
    when _debugFIFO_1_writeBackGPR_T_49 : @[utils.scala 10:20]
      debugFIFO_1_writeBackGPR_insType_3 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_1_writeBackGPR_T_50 = eq(UInt<5>("h17"), _debugFIFO_1_writeBackGPR_T_48) @[utils.scala 10:20]
      when _debugFIFO_1_writeBackGPR_T_50 : @[utils.scala 10:20]
        debugFIFO_1_writeBackGPR_insType_3 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_1_writeBackGPR_T_51 = eq(UInt<7>("h6f"), _debugFIFO_1_writeBackGPR_T_48) @[utils.scala 10:20]
        when _debugFIFO_1_writeBackGPR_T_51 : @[utils.scala 10:20]
          debugFIFO_1_writeBackGPR_insType_3 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_1_writeBackGPR_T_52 = eq(UInt<7>("h67"), _debugFIFO_1_writeBackGPR_T_48) @[utils.scala 10:20]
          when _debugFIFO_1_writeBackGPR_T_52 : @[utils.scala 10:20]
            debugFIFO_1_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_1_writeBackGPR_T_53 = eq(UInt<7>("h63"), _debugFIFO_1_writeBackGPR_T_48) @[utils.scala 10:20]
            when _debugFIFO_1_writeBackGPR_T_53 : @[utils.scala 10:20]
              debugFIFO_1_writeBackGPR_insType_3 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_1_writeBackGPR_T_54 = eq(UInt<2>("h3"), _debugFIFO_1_writeBackGPR_T_48) @[utils.scala 10:20]
              when _debugFIFO_1_writeBackGPR_T_54 : @[utils.scala 10:20]
                debugFIFO_1_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_1_writeBackGPR_T_55 = eq(UInt<6>("h23"), _debugFIFO_1_writeBackGPR_T_48) @[utils.scala 10:20]
                when _debugFIFO_1_writeBackGPR_T_55 : @[utils.scala 10:20]
                  debugFIFO_1_writeBackGPR_insType_3 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_1_writeBackGPR_T_56 = eq(UInt<5>("h13"), _debugFIFO_1_writeBackGPR_T_48) @[utils.scala 10:20]
                  when _debugFIFO_1_writeBackGPR_T_56 : @[utils.scala 10:20]
                    debugFIFO_1_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_1_writeBackGPR_T_57 = eq(UInt<5>("h1b"), _debugFIFO_1_writeBackGPR_T_48) @[utils.scala 10:20]
                    when _debugFIFO_1_writeBackGPR_T_57 : @[utils.scala 10:20]
                      debugFIFO_1_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_1_writeBackGPR_T_58 = eq(UInt<6>("h33"), _debugFIFO_1_writeBackGPR_T_48) @[utils.scala 10:20]
                      when _debugFIFO_1_writeBackGPR_T_58 : @[utils.scala 10:20]
                        debugFIFO_1_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_1_writeBackGPR_T_59 = eq(UInt<6>("h3b"), _debugFIFO_1_writeBackGPR_T_48) @[utils.scala 10:20]
                        when _debugFIFO_1_writeBackGPR_T_59 : @[utils.scala 10:20]
                          debugFIFO_1_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_1_writeBackGPR_T_60 = eq(UInt<7>("h73"), _debugFIFO_1_writeBackGPR_T_48) @[utils.scala 10:20]
                          when _debugFIFO_1_writeBackGPR_T_60 : @[utils.scala 10:20]
                            debugFIFO_1_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_1_writeBackGPR_T_61 = eq(UInt<4>("hf"), _debugFIFO_1_writeBackGPR_T_48) @[utils.scala 10:20]
                            when _debugFIFO_1_writeBackGPR_T_61 : @[utils.scala 10:20]
                              debugFIFO_1_writeBackGPR_insType_3 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_1_writeBackGPR_T_62 = eq(UInt<6>("h2f"), _debugFIFO_1_writeBackGPR_T_48) @[utils.scala 10:20]
                              when _debugFIFO_1_writeBackGPR_T_62 : @[utils.scala 10:20]
                                debugFIFO_1_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_1_writeBackGPR_T_63 = eq(UInt<3>("h5"), debugFIFO_1_writeBackGPR_insType_3) @[rob.scala 52:141]
    node _debugFIFO_1_writeBackGPR_T_64 = or(_debugFIFO_1_writeBackGPR_T_15, _debugFIFO_1_writeBackGPR_T_31) @[rob.scala 52:197]
    node _debugFIFO_1_writeBackGPR_T_65 = or(_debugFIFO_1_writeBackGPR_T_64, _debugFIFO_1_writeBackGPR_T_47) @[rob.scala 52:197]
    node _debugFIFO_1_writeBackGPR_T_66 = or(_debugFIFO_1_writeBackGPR_T_65, _debugFIFO_1_writeBackGPR_T_63) @[rob.scala 52:197]
    node _debugFIFO_1_writeBackGPR_T_67 = bits(debugFIFO[1].instruction, 11, 7) @[rob.scala 52:223]
    node _debugFIFO_1_writeBackGPR_T_68 = orr(_debugFIFO_1_writeBackGPR_T_67) @[rob.scala 52:231]
    node _debugFIFO_1_writeBackGPR_T_69 = and(_debugFIFO_1_writeBackGPR_T_66, _debugFIFO_1_writeBackGPR_T_68) @[rob.scala 52:203]
    node _debugFIFO_1_writeBackGPR_T_70 = and(_debugFIFO_1_writeBackGPR_T_69, debugFIFO[1].valid) @[rob.scala 52:235]
    debugFIFO[1].writeBackGPR <= _debugFIFO_1_writeBackGPR_T_70 @[rob.scala 52:52]
    node _debugFIFO_2_writeBackGPR_T = bits(debugFIFO[2].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_2_writeBackGPR_insType : UInt<3>
    debugFIFO_2_writeBackGPR_insType <= UInt<3>("h0")
    node _debugFIFO_2_writeBackGPR_T_1 = eq(UInt<6>("h37"), _debugFIFO_2_writeBackGPR_T) @[utils.scala 10:20]
    when _debugFIFO_2_writeBackGPR_T_1 : @[utils.scala 10:20]
      debugFIFO_2_writeBackGPR_insType <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_2_writeBackGPR_T_2 = eq(UInt<5>("h17"), _debugFIFO_2_writeBackGPR_T) @[utils.scala 10:20]
      when _debugFIFO_2_writeBackGPR_T_2 : @[utils.scala 10:20]
        debugFIFO_2_writeBackGPR_insType <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_2_writeBackGPR_T_3 = eq(UInt<7>("h6f"), _debugFIFO_2_writeBackGPR_T) @[utils.scala 10:20]
        when _debugFIFO_2_writeBackGPR_T_3 : @[utils.scala 10:20]
          debugFIFO_2_writeBackGPR_insType <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_2_writeBackGPR_T_4 = eq(UInt<7>("h67"), _debugFIFO_2_writeBackGPR_T) @[utils.scala 10:20]
          when _debugFIFO_2_writeBackGPR_T_4 : @[utils.scala 10:20]
            debugFIFO_2_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_2_writeBackGPR_T_5 = eq(UInt<7>("h63"), _debugFIFO_2_writeBackGPR_T) @[utils.scala 10:20]
            when _debugFIFO_2_writeBackGPR_T_5 : @[utils.scala 10:20]
              debugFIFO_2_writeBackGPR_insType <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_2_writeBackGPR_T_6 = eq(UInt<2>("h3"), _debugFIFO_2_writeBackGPR_T) @[utils.scala 10:20]
              when _debugFIFO_2_writeBackGPR_T_6 : @[utils.scala 10:20]
                debugFIFO_2_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_2_writeBackGPR_T_7 = eq(UInt<6>("h23"), _debugFIFO_2_writeBackGPR_T) @[utils.scala 10:20]
                when _debugFIFO_2_writeBackGPR_T_7 : @[utils.scala 10:20]
                  debugFIFO_2_writeBackGPR_insType <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_2_writeBackGPR_T_8 = eq(UInt<5>("h13"), _debugFIFO_2_writeBackGPR_T) @[utils.scala 10:20]
                  when _debugFIFO_2_writeBackGPR_T_8 : @[utils.scala 10:20]
                    debugFIFO_2_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_2_writeBackGPR_T_9 = eq(UInt<5>("h1b"), _debugFIFO_2_writeBackGPR_T) @[utils.scala 10:20]
                    when _debugFIFO_2_writeBackGPR_T_9 : @[utils.scala 10:20]
                      debugFIFO_2_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_2_writeBackGPR_T_10 = eq(UInt<6>("h33"), _debugFIFO_2_writeBackGPR_T) @[utils.scala 10:20]
                      when _debugFIFO_2_writeBackGPR_T_10 : @[utils.scala 10:20]
                        debugFIFO_2_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_2_writeBackGPR_T_11 = eq(UInt<6>("h3b"), _debugFIFO_2_writeBackGPR_T) @[utils.scala 10:20]
                        when _debugFIFO_2_writeBackGPR_T_11 : @[utils.scala 10:20]
                          debugFIFO_2_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_2_writeBackGPR_T_12 = eq(UInt<7>("h73"), _debugFIFO_2_writeBackGPR_T) @[utils.scala 10:20]
                          when _debugFIFO_2_writeBackGPR_T_12 : @[utils.scala 10:20]
                            debugFIFO_2_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_2_writeBackGPR_T_13 = eq(UInt<4>("hf"), _debugFIFO_2_writeBackGPR_T) @[utils.scala 10:20]
                            when _debugFIFO_2_writeBackGPR_T_13 : @[utils.scala 10:20]
                              debugFIFO_2_writeBackGPR_insType <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_2_writeBackGPR_T_14 = eq(UInt<6>("h2f"), _debugFIFO_2_writeBackGPR_T) @[utils.scala 10:20]
                              when _debugFIFO_2_writeBackGPR_T_14 : @[utils.scala 10:20]
                                debugFIFO_2_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_2_writeBackGPR_T_15 = eq(UInt<1>("h1"), debugFIFO_2_writeBackGPR_insType) @[rob.scala 52:141]
    node _debugFIFO_2_writeBackGPR_T_16 = bits(debugFIFO[2].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_2_writeBackGPR_insType_1 : UInt<3>
    debugFIFO_2_writeBackGPR_insType_1 <= UInt<3>("h0")
    node _debugFIFO_2_writeBackGPR_T_17 = eq(UInt<6>("h37"), _debugFIFO_2_writeBackGPR_T_16) @[utils.scala 10:20]
    when _debugFIFO_2_writeBackGPR_T_17 : @[utils.scala 10:20]
      debugFIFO_2_writeBackGPR_insType_1 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_2_writeBackGPR_T_18 = eq(UInt<5>("h17"), _debugFIFO_2_writeBackGPR_T_16) @[utils.scala 10:20]
      when _debugFIFO_2_writeBackGPR_T_18 : @[utils.scala 10:20]
        debugFIFO_2_writeBackGPR_insType_1 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_2_writeBackGPR_T_19 = eq(UInt<7>("h6f"), _debugFIFO_2_writeBackGPR_T_16) @[utils.scala 10:20]
        when _debugFIFO_2_writeBackGPR_T_19 : @[utils.scala 10:20]
          debugFIFO_2_writeBackGPR_insType_1 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_2_writeBackGPR_T_20 = eq(UInt<7>("h67"), _debugFIFO_2_writeBackGPR_T_16) @[utils.scala 10:20]
          when _debugFIFO_2_writeBackGPR_T_20 : @[utils.scala 10:20]
            debugFIFO_2_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_2_writeBackGPR_T_21 = eq(UInt<7>("h63"), _debugFIFO_2_writeBackGPR_T_16) @[utils.scala 10:20]
            when _debugFIFO_2_writeBackGPR_T_21 : @[utils.scala 10:20]
              debugFIFO_2_writeBackGPR_insType_1 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_2_writeBackGPR_T_22 = eq(UInt<2>("h3"), _debugFIFO_2_writeBackGPR_T_16) @[utils.scala 10:20]
              when _debugFIFO_2_writeBackGPR_T_22 : @[utils.scala 10:20]
                debugFIFO_2_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_2_writeBackGPR_T_23 = eq(UInt<6>("h23"), _debugFIFO_2_writeBackGPR_T_16) @[utils.scala 10:20]
                when _debugFIFO_2_writeBackGPR_T_23 : @[utils.scala 10:20]
                  debugFIFO_2_writeBackGPR_insType_1 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_2_writeBackGPR_T_24 = eq(UInt<5>("h13"), _debugFIFO_2_writeBackGPR_T_16) @[utils.scala 10:20]
                  when _debugFIFO_2_writeBackGPR_T_24 : @[utils.scala 10:20]
                    debugFIFO_2_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_2_writeBackGPR_T_25 = eq(UInt<5>("h1b"), _debugFIFO_2_writeBackGPR_T_16) @[utils.scala 10:20]
                    when _debugFIFO_2_writeBackGPR_T_25 : @[utils.scala 10:20]
                      debugFIFO_2_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_2_writeBackGPR_T_26 = eq(UInt<6>("h33"), _debugFIFO_2_writeBackGPR_T_16) @[utils.scala 10:20]
                      when _debugFIFO_2_writeBackGPR_T_26 : @[utils.scala 10:20]
                        debugFIFO_2_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_2_writeBackGPR_T_27 = eq(UInt<6>("h3b"), _debugFIFO_2_writeBackGPR_T_16) @[utils.scala 10:20]
                        when _debugFIFO_2_writeBackGPR_T_27 : @[utils.scala 10:20]
                          debugFIFO_2_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_2_writeBackGPR_T_28 = eq(UInt<7>("h73"), _debugFIFO_2_writeBackGPR_T_16) @[utils.scala 10:20]
                          when _debugFIFO_2_writeBackGPR_T_28 : @[utils.scala 10:20]
                            debugFIFO_2_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_2_writeBackGPR_T_29 = eq(UInt<4>("hf"), _debugFIFO_2_writeBackGPR_T_16) @[utils.scala 10:20]
                            when _debugFIFO_2_writeBackGPR_T_29 : @[utils.scala 10:20]
                              debugFIFO_2_writeBackGPR_insType_1 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_2_writeBackGPR_T_30 = eq(UInt<6>("h2f"), _debugFIFO_2_writeBackGPR_T_16) @[utils.scala 10:20]
                              when _debugFIFO_2_writeBackGPR_T_30 : @[utils.scala 10:20]
                                debugFIFO_2_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_2_writeBackGPR_T_31 = eq(UInt<1>("h0"), debugFIFO_2_writeBackGPR_insType_1) @[rob.scala 52:141]
    node _debugFIFO_2_writeBackGPR_T_32 = bits(debugFIFO[2].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_2_writeBackGPR_insType_2 : UInt<3>
    debugFIFO_2_writeBackGPR_insType_2 <= UInt<3>("h0")
    node _debugFIFO_2_writeBackGPR_T_33 = eq(UInt<6>("h37"), _debugFIFO_2_writeBackGPR_T_32) @[utils.scala 10:20]
    when _debugFIFO_2_writeBackGPR_T_33 : @[utils.scala 10:20]
      debugFIFO_2_writeBackGPR_insType_2 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_2_writeBackGPR_T_34 = eq(UInt<5>("h17"), _debugFIFO_2_writeBackGPR_T_32) @[utils.scala 10:20]
      when _debugFIFO_2_writeBackGPR_T_34 : @[utils.scala 10:20]
        debugFIFO_2_writeBackGPR_insType_2 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_2_writeBackGPR_T_35 = eq(UInt<7>("h6f"), _debugFIFO_2_writeBackGPR_T_32) @[utils.scala 10:20]
        when _debugFIFO_2_writeBackGPR_T_35 : @[utils.scala 10:20]
          debugFIFO_2_writeBackGPR_insType_2 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_2_writeBackGPR_T_36 = eq(UInt<7>("h67"), _debugFIFO_2_writeBackGPR_T_32) @[utils.scala 10:20]
          when _debugFIFO_2_writeBackGPR_T_36 : @[utils.scala 10:20]
            debugFIFO_2_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_2_writeBackGPR_T_37 = eq(UInt<7>("h63"), _debugFIFO_2_writeBackGPR_T_32) @[utils.scala 10:20]
            when _debugFIFO_2_writeBackGPR_T_37 : @[utils.scala 10:20]
              debugFIFO_2_writeBackGPR_insType_2 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_2_writeBackGPR_T_38 = eq(UInt<2>("h3"), _debugFIFO_2_writeBackGPR_T_32) @[utils.scala 10:20]
              when _debugFIFO_2_writeBackGPR_T_38 : @[utils.scala 10:20]
                debugFIFO_2_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_2_writeBackGPR_T_39 = eq(UInt<6>("h23"), _debugFIFO_2_writeBackGPR_T_32) @[utils.scala 10:20]
                when _debugFIFO_2_writeBackGPR_T_39 : @[utils.scala 10:20]
                  debugFIFO_2_writeBackGPR_insType_2 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_2_writeBackGPR_T_40 = eq(UInt<5>("h13"), _debugFIFO_2_writeBackGPR_T_32) @[utils.scala 10:20]
                  when _debugFIFO_2_writeBackGPR_T_40 : @[utils.scala 10:20]
                    debugFIFO_2_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_2_writeBackGPR_T_41 = eq(UInt<5>("h1b"), _debugFIFO_2_writeBackGPR_T_32) @[utils.scala 10:20]
                    when _debugFIFO_2_writeBackGPR_T_41 : @[utils.scala 10:20]
                      debugFIFO_2_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_2_writeBackGPR_T_42 = eq(UInt<6>("h33"), _debugFIFO_2_writeBackGPR_T_32) @[utils.scala 10:20]
                      when _debugFIFO_2_writeBackGPR_T_42 : @[utils.scala 10:20]
                        debugFIFO_2_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_2_writeBackGPR_T_43 = eq(UInt<6>("h3b"), _debugFIFO_2_writeBackGPR_T_32) @[utils.scala 10:20]
                        when _debugFIFO_2_writeBackGPR_T_43 : @[utils.scala 10:20]
                          debugFIFO_2_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_2_writeBackGPR_T_44 = eq(UInt<7>("h73"), _debugFIFO_2_writeBackGPR_T_32) @[utils.scala 10:20]
                          when _debugFIFO_2_writeBackGPR_T_44 : @[utils.scala 10:20]
                            debugFIFO_2_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_2_writeBackGPR_T_45 = eq(UInt<4>("hf"), _debugFIFO_2_writeBackGPR_T_32) @[utils.scala 10:20]
                            when _debugFIFO_2_writeBackGPR_T_45 : @[utils.scala 10:20]
                              debugFIFO_2_writeBackGPR_insType_2 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_2_writeBackGPR_T_46 = eq(UInt<6>("h2f"), _debugFIFO_2_writeBackGPR_T_32) @[utils.scala 10:20]
                              when _debugFIFO_2_writeBackGPR_T_46 : @[utils.scala 10:20]
                                debugFIFO_2_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_2_writeBackGPR_T_47 = eq(UInt<3>("h4"), debugFIFO_2_writeBackGPR_insType_2) @[rob.scala 52:141]
    node _debugFIFO_2_writeBackGPR_T_48 = bits(debugFIFO[2].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_2_writeBackGPR_insType_3 : UInt<3>
    debugFIFO_2_writeBackGPR_insType_3 <= UInt<3>("h0")
    node _debugFIFO_2_writeBackGPR_T_49 = eq(UInt<6>("h37"), _debugFIFO_2_writeBackGPR_T_48) @[utils.scala 10:20]
    when _debugFIFO_2_writeBackGPR_T_49 : @[utils.scala 10:20]
      debugFIFO_2_writeBackGPR_insType_3 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_2_writeBackGPR_T_50 = eq(UInt<5>("h17"), _debugFIFO_2_writeBackGPR_T_48) @[utils.scala 10:20]
      when _debugFIFO_2_writeBackGPR_T_50 : @[utils.scala 10:20]
        debugFIFO_2_writeBackGPR_insType_3 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_2_writeBackGPR_T_51 = eq(UInt<7>("h6f"), _debugFIFO_2_writeBackGPR_T_48) @[utils.scala 10:20]
        when _debugFIFO_2_writeBackGPR_T_51 : @[utils.scala 10:20]
          debugFIFO_2_writeBackGPR_insType_3 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_2_writeBackGPR_T_52 = eq(UInt<7>("h67"), _debugFIFO_2_writeBackGPR_T_48) @[utils.scala 10:20]
          when _debugFIFO_2_writeBackGPR_T_52 : @[utils.scala 10:20]
            debugFIFO_2_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_2_writeBackGPR_T_53 = eq(UInt<7>("h63"), _debugFIFO_2_writeBackGPR_T_48) @[utils.scala 10:20]
            when _debugFIFO_2_writeBackGPR_T_53 : @[utils.scala 10:20]
              debugFIFO_2_writeBackGPR_insType_3 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_2_writeBackGPR_T_54 = eq(UInt<2>("h3"), _debugFIFO_2_writeBackGPR_T_48) @[utils.scala 10:20]
              when _debugFIFO_2_writeBackGPR_T_54 : @[utils.scala 10:20]
                debugFIFO_2_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_2_writeBackGPR_T_55 = eq(UInt<6>("h23"), _debugFIFO_2_writeBackGPR_T_48) @[utils.scala 10:20]
                when _debugFIFO_2_writeBackGPR_T_55 : @[utils.scala 10:20]
                  debugFIFO_2_writeBackGPR_insType_3 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_2_writeBackGPR_T_56 = eq(UInt<5>("h13"), _debugFIFO_2_writeBackGPR_T_48) @[utils.scala 10:20]
                  when _debugFIFO_2_writeBackGPR_T_56 : @[utils.scala 10:20]
                    debugFIFO_2_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_2_writeBackGPR_T_57 = eq(UInt<5>("h1b"), _debugFIFO_2_writeBackGPR_T_48) @[utils.scala 10:20]
                    when _debugFIFO_2_writeBackGPR_T_57 : @[utils.scala 10:20]
                      debugFIFO_2_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_2_writeBackGPR_T_58 = eq(UInt<6>("h33"), _debugFIFO_2_writeBackGPR_T_48) @[utils.scala 10:20]
                      when _debugFIFO_2_writeBackGPR_T_58 : @[utils.scala 10:20]
                        debugFIFO_2_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_2_writeBackGPR_T_59 = eq(UInt<6>("h3b"), _debugFIFO_2_writeBackGPR_T_48) @[utils.scala 10:20]
                        when _debugFIFO_2_writeBackGPR_T_59 : @[utils.scala 10:20]
                          debugFIFO_2_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_2_writeBackGPR_T_60 = eq(UInt<7>("h73"), _debugFIFO_2_writeBackGPR_T_48) @[utils.scala 10:20]
                          when _debugFIFO_2_writeBackGPR_T_60 : @[utils.scala 10:20]
                            debugFIFO_2_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_2_writeBackGPR_T_61 = eq(UInt<4>("hf"), _debugFIFO_2_writeBackGPR_T_48) @[utils.scala 10:20]
                            when _debugFIFO_2_writeBackGPR_T_61 : @[utils.scala 10:20]
                              debugFIFO_2_writeBackGPR_insType_3 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_2_writeBackGPR_T_62 = eq(UInt<6>("h2f"), _debugFIFO_2_writeBackGPR_T_48) @[utils.scala 10:20]
                              when _debugFIFO_2_writeBackGPR_T_62 : @[utils.scala 10:20]
                                debugFIFO_2_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_2_writeBackGPR_T_63 = eq(UInt<3>("h5"), debugFIFO_2_writeBackGPR_insType_3) @[rob.scala 52:141]
    node _debugFIFO_2_writeBackGPR_T_64 = or(_debugFIFO_2_writeBackGPR_T_15, _debugFIFO_2_writeBackGPR_T_31) @[rob.scala 52:197]
    node _debugFIFO_2_writeBackGPR_T_65 = or(_debugFIFO_2_writeBackGPR_T_64, _debugFIFO_2_writeBackGPR_T_47) @[rob.scala 52:197]
    node _debugFIFO_2_writeBackGPR_T_66 = or(_debugFIFO_2_writeBackGPR_T_65, _debugFIFO_2_writeBackGPR_T_63) @[rob.scala 52:197]
    node _debugFIFO_2_writeBackGPR_T_67 = bits(debugFIFO[2].instruction, 11, 7) @[rob.scala 52:223]
    node _debugFIFO_2_writeBackGPR_T_68 = orr(_debugFIFO_2_writeBackGPR_T_67) @[rob.scala 52:231]
    node _debugFIFO_2_writeBackGPR_T_69 = and(_debugFIFO_2_writeBackGPR_T_66, _debugFIFO_2_writeBackGPR_T_68) @[rob.scala 52:203]
    node _debugFIFO_2_writeBackGPR_T_70 = and(_debugFIFO_2_writeBackGPR_T_69, debugFIFO[2].valid) @[rob.scala 52:235]
    debugFIFO[2].writeBackGPR <= _debugFIFO_2_writeBackGPR_T_70 @[rob.scala 52:52]
    node _debugFIFO_3_writeBackGPR_T = bits(debugFIFO[3].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_3_writeBackGPR_insType : UInt<3>
    debugFIFO_3_writeBackGPR_insType <= UInt<3>("h0")
    node _debugFIFO_3_writeBackGPR_T_1 = eq(UInt<6>("h37"), _debugFIFO_3_writeBackGPR_T) @[utils.scala 10:20]
    when _debugFIFO_3_writeBackGPR_T_1 : @[utils.scala 10:20]
      debugFIFO_3_writeBackGPR_insType <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_3_writeBackGPR_T_2 = eq(UInt<5>("h17"), _debugFIFO_3_writeBackGPR_T) @[utils.scala 10:20]
      when _debugFIFO_3_writeBackGPR_T_2 : @[utils.scala 10:20]
        debugFIFO_3_writeBackGPR_insType <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_3_writeBackGPR_T_3 = eq(UInt<7>("h6f"), _debugFIFO_3_writeBackGPR_T) @[utils.scala 10:20]
        when _debugFIFO_3_writeBackGPR_T_3 : @[utils.scala 10:20]
          debugFIFO_3_writeBackGPR_insType <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_3_writeBackGPR_T_4 = eq(UInt<7>("h67"), _debugFIFO_3_writeBackGPR_T) @[utils.scala 10:20]
          when _debugFIFO_3_writeBackGPR_T_4 : @[utils.scala 10:20]
            debugFIFO_3_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_3_writeBackGPR_T_5 = eq(UInt<7>("h63"), _debugFIFO_3_writeBackGPR_T) @[utils.scala 10:20]
            when _debugFIFO_3_writeBackGPR_T_5 : @[utils.scala 10:20]
              debugFIFO_3_writeBackGPR_insType <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_3_writeBackGPR_T_6 = eq(UInt<2>("h3"), _debugFIFO_3_writeBackGPR_T) @[utils.scala 10:20]
              when _debugFIFO_3_writeBackGPR_T_6 : @[utils.scala 10:20]
                debugFIFO_3_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_3_writeBackGPR_T_7 = eq(UInt<6>("h23"), _debugFIFO_3_writeBackGPR_T) @[utils.scala 10:20]
                when _debugFIFO_3_writeBackGPR_T_7 : @[utils.scala 10:20]
                  debugFIFO_3_writeBackGPR_insType <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_3_writeBackGPR_T_8 = eq(UInt<5>("h13"), _debugFIFO_3_writeBackGPR_T) @[utils.scala 10:20]
                  when _debugFIFO_3_writeBackGPR_T_8 : @[utils.scala 10:20]
                    debugFIFO_3_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_3_writeBackGPR_T_9 = eq(UInt<5>("h1b"), _debugFIFO_3_writeBackGPR_T) @[utils.scala 10:20]
                    when _debugFIFO_3_writeBackGPR_T_9 : @[utils.scala 10:20]
                      debugFIFO_3_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_3_writeBackGPR_T_10 = eq(UInt<6>("h33"), _debugFIFO_3_writeBackGPR_T) @[utils.scala 10:20]
                      when _debugFIFO_3_writeBackGPR_T_10 : @[utils.scala 10:20]
                        debugFIFO_3_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_3_writeBackGPR_T_11 = eq(UInt<6>("h3b"), _debugFIFO_3_writeBackGPR_T) @[utils.scala 10:20]
                        when _debugFIFO_3_writeBackGPR_T_11 : @[utils.scala 10:20]
                          debugFIFO_3_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_3_writeBackGPR_T_12 = eq(UInt<7>("h73"), _debugFIFO_3_writeBackGPR_T) @[utils.scala 10:20]
                          when _debugFIFO_3_writeBackGPR_T_12 : @[utils.scala 10:20]
                            debugFIFO_3_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_3_writeBackGPR_T_13 = eq(UInt<4>("hf"), _debugFIFO_3_writeBackGPR_T) @[utils.scala 10:20]
                            when _debugFIFO_3_writeBackGPR_T_13 : @[utils.scala 10:20]
                              debugFIFO_3_writeBackGPR_insType <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_3_writeBackGPR_T_14 = eq(UInt<6>("h2f"), _debugFIFO_3_writeBackGPR_T) @[utils.scala 10:20]
                              when _debugFIFO_3_writeBackGPR_T_14 : @[utils.scala 10:20]
                                debugFIFO_3_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_3_writeBackGPR_T_15 = eq(UInt<1>("h1"), debugFIFO_3_writeBackGPR_insType) @[rob.scala 52:141]
    node _debugFIFO_3_writeBackGPR_T_16 = bits(debugFIFO[3].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_3_writeBackGPR_insType_1 : UInt<3>
    debugFIFO_3_writeBackGPR_insType_1 <= UInt<3>("h0")
    node _debugFIFO_3_writeBackGPR_T_17 = eq(UInt<6>("h37"), _debugFIFO_3_writeBackGPR_T_16) @[utils.scala 10:20]
    when _debugFIFO_3_writeBackGPR_T_17 : @[utils.scala 10:20]
      debugFIFO_3_writeBackGPR_insType_1 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_3_writeBackGPR_T_18 = eq(UInt<5>("h17"), _debugFIFO_3_writeBackGPR_T_16) @[utils.scala 10:20]
      when _debugFIFO_3_writeBackGPR_T_18 : @[utils.scala 10:20]
        debugFIFO_3_writeBackGPR_insType_1 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_3_writeBackGPR_T_19 = eq(UInt<7>("h6f"), _debugFIFO_3_writeBackGPR_T_16) @[utils.scala 10:20]
        when _debugFIFO_3_writeBackGPR_T_19 : @[utils.scala 10:20]
          debugFIFO_3_writeBackGPR_insType_1 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_3_writeBackGPR_T_20 = eq(UInt<7>("h67"), _debugFIFO_3_writeBackGPR_T_16) @[utils.scala 10:20]
          when _debugFIFO_3_writeBackGPR_T_20 : @[utils.scala 10:20]
            debugFIFO_3_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_3_writeBackGPR_T_21 = eq(UInt<7>("h63"), _debugFIFO_3_writeBackGPR_T_16) @[utils.scala 10:20]
            when _debugFIFO_3_writeBackGPR_T_21 : @[utils.scala 10:20]
              debugFIFO_3_writeBackGPR_insType_1 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_3_writeBackGPR_T_22 = eq(UInt<2>("h3"), _debugFIFO_3_writeBackGPR_T_16) @[utils.scala 10:20]
              when _debugFIFO_3_writeBackGPR_T_22 : @[utils.scala 10:20]
                debugFIFO_3_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_3_writeBackGPR_T_23 = eq(UInt<6>("h23"), _debugFIFO_3_writeBackGPR_T_16) @[utils.scala 10:20]
                when _debugFIFO_3_writeBackGPR_T_23 : @[utils.scala 10:20]
                  debugFIFO_3_writeBackGPR_insType_1 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_3_writeBackGPR_T_24 = eq(UInt<5>("h13"), _debugFIFO_3_writeBackGPR_T_16) @[utils.scala 10:20]
                  when _debugFIFO_3_writeBackGPR_T_24 : @[utils.scala 10:20]
                    debugFIFO_3_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_3_writeBackGPR_T_25 = eq(UInt<5>("h1b"), _debugFIFO_3_writeBackGPR_T_16) @[utils.scala 10:20]
                    when _debugFIFO_3_writeBackGPR_T_25 : @[utils.scala 10:20]
                      debugFIFO_3_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_3_writeBackGPR_T_26 = eq(UInt<6>("h33"), _debugFIFO_3_writeBackGPR_T_16) @[utils.scala 10:20]
                      when _debugFIFO_3_writeBackGPR_T_26 : @[utils.scala 10:20]
                        debugFIFO_3_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_3_writeBackGPR_T_27 = eq(UInt<6>("h3b"), _debugFIFO_3_writeBackGPR_T_16) @[utils.scala 10:20]
                        when _debugFIFO_3_writeBackGPR_T_27 : @[utils.scala 10:20]
                          debugFIFO_3_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_3_writeBackGPR_T_28 = eq(UInt<7>("h73"), _debugFIFO_3_writeBackGPR_T_16) @[utils.scala 10:20]
                          when _debugFIFO_3_writeBackGPR_T_28 : @[utils.scala 10:20]
                            debugFIFO_3_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_3_writeBackGPR_T_29 = eq(UInt<4>("hf"), _debugFIFO_3_writeBackGPR_T_16) @[utils.scala 10:20]
                            when _debugFIFO_3_writeBackGPR_T_29 : @[utils.scala 10:20]
                              debugFIFO_3_writeBackGPR_insType_1 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_3_writeBackGPR_T_30 = eq(UInt<6>("h2f"), _debugFIFO_3_writeBackGPR_T_16) @[utils.scala 10:20]
                              when _debugFIFO_3_writeBackGPR_T_30 : @[utils.scala 10:20]
                                debugFIFO_3_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_3_writeBackGPR_T_31 = eq(UInt<1>("h0"), debugFIFO_3_writeBackGPR_insType_1) @[rob.scala 52:141]
    node _debugFIFO_3_writeBackGPR_T_32 = bits(debugFIFO[3].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_3_writeBackGPR_insType_2 : UInt<3>
    debugFIFO_3_writeBackGPR_insType_2 <= UInt<3>("h0")
    node _debugFIFO_3_writeBackGPR_T_33 = eq(UInt<6>("h37"), _debugFIFO_3_writeBackGPR_T_32) @[utils.scala 10:20]
    when _debugFIFO_3_writeBackGPR_T_33 : @[utils.scala 10:20]
      debugFIFO_3_writeBackGPR_insType_2 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_3_writeBackGPR_T_34 = eq(UInt<5>("h17"), _debugFIFO_3_writeBackGPR_T_32) @[utils.scala 10:20]
      when _debugFIFO_3_writeBackGPR_T_34 : @[utils.scala 10:20]
        debugFIFO_3_writeBackGPR_insType_2 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_3_writeBackGPR_T_35 = eq(UInt<7>("h6f"), _debugFIFO_3_writeBackGPR_T_32) @[utils.scala 10:20]
        when _debugFIFO_3_writeBackGPR_T_35 : @[utils.scala 10:20]
          debugFIFO_3_writeBackGPR_insType_2 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_3_writeBackGPR_T_36 = eq(UInt<7>("h67"), _debugFIFO_3_writeBackGPR_T_32) @[utils.scala 10:20]
          when _debugFIFO_3_writeBackGPR_T_36 : @[utils.scala 10:20]
            debugFIFO_3_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_3_writeBackGPR_T_37 = eq(UInt<7>("h63"), _debugFIFO_3_writeBackGPR_T_32) @[utils.scala 10:20]
            when _debugFIFO_3_writeBackGPR_T_37 : @[utils.scala 10:20]
              debugFIFO_3_writeBackGPR_insType_2 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_3_writeBackGPR_T_38 = eq(UInt<2>("h3"), _debugFIFO_3_writeBackGPR_T_32) @[utils.scala 10:20]
              when _debugFIFO_3_writeBackGPR_T_38 : @[utils.scala 10:20]
                debugFIFO_3_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_3_writeBackGPR_T_39 = eq(UInt<6>("h23"), _debugFIFO_3_writeBackGPR_T_32) @[utils.scala 10:20]
                when _debugFIFO_3_writeBackGPR_T_39 : @[utils.scala 10:20]
                  debugFIFO_3_writeBackGPR_insType_2 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_3_writeBackGPR_T_40 = eq(UInt<5>("h13"), _debugFIFO_3_writeBackGPR_T_32) @[utils.scala 10:20]
                  when _debugFIFO_3_writeBackGPR_T_40 : @[utils.scala 10:20]
                    debugFIFO_3_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_3_writeBackGPR_T_41 = eq(UInt<5>("h1b"), _debugFIFO_3_writeBackGPR_T_32) @[utils.scala 10:20]
                    when _debugFIFO_3_writeBackGPR_T_41 : @[utils.scala 10:20]
                      debugFIFO_3_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_3_writeBackGPR_T_42 = eq(UInt<6>("h33"), _debugFIFO_3_writeBackGPR_T_32) @[utils.scala 10:20]
                      when _debugFIFO_3_writeBackGPR_T_42 : @[utils.scala 10:20]
                        debugFIFO_3_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_3_writeBackGPR_T_43 = eq(UInt<6>("h3b"), _debugFIFO_3_writeBackGPR_T_32) @[utils.scala 10:20]
                        when _debugFIFO_3_writeBackGPR_T_43 : @[utils.scala 10:20]
                          debugFIFO_3_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_3_writeBackGPR_T_44 = eq(UInt<7>("h73"), _debugFIFO_3_writeBackGPR_T_32) @[utils.scala 10:20]
                          when _debugFIFO_3_writeBackGPR_T_44 : @[utils.scala 10:20]
                            debugFIFO_3_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_3_writeBackGPR_T_45 = eq(UInt<4>("hf"), _debugFIFO_3_writeBackGPR_T_32) @[utils.scala 10:20]
                            when _debugFIFO_3_writeBackGPR_T_45 : @[utils.scala 10:20]
                              debugFIFO_3_writeBackGPR_insType_2 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_3_writeBackGPR_T_46 = eq(UInt<6>("h2f"), _debugFIFO_3_writeBackGPR_T_32) @[utils.scala 10:20]
                              when _debugFIFO_3_writeBackGPR_T_46 : @[utils.scala 10:20]
                                debugFIFO_3_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_3_writeBackGPR_T_47 = eq(UInt<3>("h4"), debugFIFO_3_writeBackGPR_insType_2) @[rob.scala 52:141]
    node _debugFIFO_3_writeBackGPR_T_48 = bits(debugFIFO[3].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_3_writeBackGPR_insType_3 : UInt<3>
    debugFIFO_3_writeBackGPR_insType_3 <= UInt<3>("h0")
    node _debugFIFO_3_writeBackGPR_T_49 = eq(UInt<6>("h37"), _debugFIFO_3_writeBackGPR_T_48) @[utils.scala 10:20]
    when _debugFIFO_3_writeBackGPR_T_49 : @[utils.scala 10:20]
      debugFIFO_3_writeBackGPR_insType_3 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_3_writeBackGPR_T_50 = eq(UInt<5>("h17"), _debugFIFO_3_writeBackGPR_T_48) @[utils.scala 10:20]
      when _debugFIFO_3_writeBackGPR_T_50 : @[utils.scala 10:20]
        debugFIFO_3_writeBackGPR_insType_3 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_3_writeBackGPR_T_51 = eq(UInt<7>("h6f"), _debugFIFO_3_writeBackGPR_T_48) @[utils.scala 10:20]
        when _debugFIFO_3_writeBackGPR_T_51 : @[utils.scala 10:20]
          debugFIFO_3_writeBackGPR_insType_3 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_3_writeBackGPR_T_52 = eq(UInt<7>("h67"), _debugFIFO_3_writeBackGPR_T_48) @[utils.scala 10:20]
          when _debugFIFO_3_writeBackGPR_T_52 : @[utils.scala 10:20]
            debugFIFO_3_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_3_writeBackGPR_T_53 = eq(UInt<7>("h63"), _debugFIFO_3_writeBackGPR_T_48) @[utils.scala 10:20]
            when _debugFIFO_3_writeBackGPR_T_53 : @[utils.scala 10:20]
              debugFIFO_3_writeBackGPR_insType_3 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_3_writeBackGPR_T_54 = eq(UInt<2>("h3"), _debugFIFO_3_writeBackGPR_T_48) @[utils.scala 10:20]
              when _debugFIFO_3_writeBackGPR_T_54 : @[utils.scala 10:20]
                debugFIFO_3_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_3_writeBackGPR_T_55 = eq(UInt<6>("h23"), _debugFIFO_3_writeBackGPR_T_48) @[utils.scala 10:20]
                when _debugFIFO_3_writeBackGPR_T_55 : @[utils.scala 10:20]
                  debugFIFO_3_writeBackGPR_insType_3 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_3_writeBackGPR_T_56 = eq(UInt<5>("h13"), _debugFIFO_3_writeBackGPR_T_48) @[utils.scala 10:20]
                  when _debugFIFO_3_writeBackGPR_T_56 : @[utils.scala 10:20]
                    debugFIFO_3_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_3_writeBackGPR_T_57 = eq(UInt<5>("h1b"), _debugFIFO_3_writeBackGPR_T_48) @[utils.scala 10:20]
                    when _debugFIFO_3_writeBackGPR_T_57 : @[utils.scala 10:20]
                      debugFIFO_3_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_3_writeBackGPR_T_58 = eq(UInt<6>("h33"), _debugFIFO_3_writeBackGPR_T_48) @[utils.scala 10:20]
                      when _debugFIFO_3_writeBackGPR_T_58 : @[utils.scala 10:20]
                        debugFIFO_3_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_3_writeBackGPR_T_59 = eq(UInt<6>("h3b"), _debugFIFO_3_writeBackGPR_T_48) @[utils.scala 10:20]
                        when _debugFIFO_3_writeBackGPR_T_59 : @[utils.scala 10:20]
                          debugFIFO_3_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_3_writeBackGPR_T_60 = eq(UInt<7>("h73"), _debugFIFO_3_writeBackGPR_T_48) @[utils.scala 10:20]
                          when _debugFIFO_3_writeBackGPR_T_60 : @[utils.scala 10:20]
                            debugFIFO_3_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_3_writeBackGPR_T_61 = eq(UInt<4>("hf"), _debugFIFO_3_writeBackGPR_T_48) @[utils.scala 10:20]
                            when _debugFIFO_3_writeBackGPR_T_61 : @[utils.scala 10:20]
                              debugFIFO_3_writeBackGPR_insType_3 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_3_writeBackGPR_T_62 = eq(UInt<6>("h2f"), _debugFIFO_3_writeBackGPR_T_48) @[utils.scala 10:20]
                              when _debugFIFO_3_writeBackGPR_T_62 : @[utils.scala 10:20]
                                debugFIFO_3_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_3_writeBackGPR_T_63 = eq(UInt<3>("h5"), debugFIFO_3_writeBackGPR_insType_3) @[rob.scala 52:141]
    node _debugFIFO_3_writeBackGPR_T_64 = or(_debugFIFO_3_writeBackGPR_T_15, _debugFIFO_3_writeBackGPR_T_31) @[rob.scala 52:197]
    node _debugFIFO_3_writeBackGPR_T_65 = or(_debugFIFO_3_writeBackGPR_T_64, _debugFIFO_3_writeBackGPR_T_47) @[rob.scala 52:197]
    node _debugFIFO_3_writeBackGPR_T_66 = or(_debugFIFO_3_writeBackGPR_T_65, _debugFIFO_3_writeBackGPR_T_63) @[rob.scala 52:197]
    node _debugFIFO_3_writeBackGPR_T_67 = bits(debugFIFO[3].instruction, 11, 7) @[rob.scala 52:223]
    node _debugFIFO_3_writeBackGPR_T_68 = orr(_debugFIFO_3_writeBackGPR_T_67) @[rob.scala 52:231]
    node _debugFIFO_3_writeBackGPR_T_69 = and(_debugFIFO_3_writeBackGPR_T_66, _debugFIFO_3_writeBackGPR_T_68) @[rob.scala 52:203]
    node _debugFIFO_3_writeBackGPR_T_70 = and(_debugFIFO_3_writeBackGPR_T_69, debugFIFO[3].valid) @[rob.scala 52:235]
    debugFIFO[3].writeBackGPR <= _debugFIFO_3_writeBackGPR_T_70 @[rob.scala 52:52]
    node _debugFIFO_4_writeBackGPR_T = bits(debugFIFO[4].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_4_writeBackGPR_insType : UInt<3>
    debugFIFO_4_writeBackGPR_insType <= UInt<3>("h0")
    node _debugFIFO_4_writeBackGPR_T_1 = eq(UInt<6>("h37"), _debugFIFO_4_writeBackGPR_T) @[utils.scala 10:20]
    when _debugFIFO_4_writeBackGPR_T_1 : @[utils.scala 10:20]
      debugFIFO_4_writeBackGPR_insType <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_4_writeBackGPR_T_2 = eq(UInt<5>("h17"), _debugFIFO_4_writeBackGPR_T) @[utils.scala 10:20]
      when _debugFIFO_4_writeBackGPR_T_2 : @[utils.scala 10:20]
        debugFIFO_4_writeBackGPR_insType <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_4_writeBackGPR_T_3 = eq(UInt<7>("h6f"), _debugFIFO_4_writeBackGPR_T) @[utils.scala 10:20]
        when _debugFIFO_4_writeBackGPR_T_3 : @[utils.scala 10:20]
          debugFIFO_4_writeBackGPR_insType <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_4_writeBackGPR_T_4 = eq(UInt<7>("h67"), _debugFIFO_4_writeBackGPR_T) @[utils.scala 10:20]
          when _debugFIFO_4_writeBackGPR_T_4 : @[utils.scala 10:20]
            debugFIFO_4_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_4_writeBackGPR_T_5 = eq(UInt<7>("h63"), _debugFIFO_4_writeBackGPR_T) @[utils.scala 10:20]
            when _debugFIFO_4_writeBackGPR_T_5 : @[utils.scala 10:20]
              debugFIFO_4_writeBackGPR_insType <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_4_writeBackGPR_T_6 = eq(UInt<2>("h3"), _debugFIFO_4_writeBackGPR_T) @[utils.scala 10:20]
              when _debugFIFO_4_writeBackGPR_T_6 : @[utils.scala 10:20]
                debugFIFO_4_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_4_writeBackGPR_T_7 = eq(UInt<6>("h23"), _debugFIFO_4_writeBackGPR_T) @[utils.scala 10:20]
                when _debugFIFO_4_writeBackGPR_T_7 : @[utils.scala 10:20]
                  debugFIFO_4_writeBackGPR_insType <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_4_writeBackGPR_T_8 = eq(UInt<5>("h13"), _debugFIFO_4_writeBackGPR_T) @[utils.scala 10:20]
                  when _debugFIFO_4_writeBackGPR_T_8 : @[utils.scala 10:20]
                    debugFIFO_4_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_4_writeBackGPR_T_9 = eq(UInt<5>("h1b"), _debugFIFO_4_writeBackGPR_T) @[utils.scala 10:20]
                    when _debugFIFO_4_writeBackGPR_T_9 : @[utils.scala 10:20]
                      debugFIFO_4_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_4_writeBackGPR_T_10 = eq(UInt<6>("h33"), _debugFIFO_4_writeBackGPR_T) @[utils.scala 10:20]
                      when _debugFIFO_4_writeBackGPR_T_10 : @[utils.scala 10:20]
                        debugFIFO_4_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_4_writeBackGPR_T_11 = eq(UInt<6>("h3b"), _debugFIFO_4_writeBackGPR_T) @[utils.scala 10:20]
                        when _debugFIFO_4_writeBackGPR_T_11 : @[utils.scala 10:20]
                          debugFIFO_4_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_4_writeBackGPR_T_12 = eq(UInt<7>("h73"), _debugFIFO_4_writeBackGPR_T) @[utils.scala 10:20]
                          when _debugFIFO_4_writeBackGPR_T_12 : @[utils.scala 10:20]
                            debugFIFO_4_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_4_writeBackGPR_T_13 = eq(UInt<4>("hf"), _debugFIFO_4_writeBackGPR_T) @[utils.scala 10:20]
                            when _debugFIFO_4_writeBackGPR_T_13 : @[utils.scala 10:20]
                              debugFIFO_4_writeBackGPR_insType <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_4_writeBackGPR_T_14 = eq(UInt<6>("h2f"), _debugFIFO_4_writeBackGPR_T) @[utils.scala 10:20]
                              when _debugFIFO_4_writeBackGPR_T_14 : @[utils.scala 10:20]
                                debugFIFO_4_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_4_writeBackGPR_T_15 = eq(UInt<1>("h1"), debugFIFO_4_writeBackGPR_insType) @[rob.scala 52:141]
    node _debugFIFO_4_writeBackGPR_T_16 = bits(debugFIFO[4].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_4_writeBackGPR_insType_1 : UInt<3>
    debugFIFO_4_writeBackGPR_insType_1 <= UInt<3>("h0")
    node _debugFIFO_4_writeBackGPR_T_17 = eq(UInt<6>("h37"), _debugFIFO_4_writeBackGPR_T_16) @[utils.scala 10:20]
    when _debugFIFO_4_writeBackGPR_T_17 : @[utils.scala 10:20]
      debugFIFO_4_writeBackGPR_insType_1 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_4_writeBackGPR_T_18 = eq(UInt<5>("h17"), _debugFIFO_4_writeBackGPR_T_16) @[utils.scala 10:20]
      when _debugFIFO_4_writeBackGPR_T_18 : @[utils.scala 10:20]
        debugFIFO_4_writeBackGPR_insType_1 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_4_writeBackGPR_T_19 = eq(UInt<7>("h6f"), _debugFIFO_4_writeBackGPR_T_16) @[utils.scala 10:20]
        when _debugFIFO_4_writeBackGPR_T_19 : @[utils.scala 10:20]
          debugFIFO_4_writeBackGPR_insType_1 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_4_writeBackGPR_T_20 = eq(UInt<7>("h67"), _debugFIFO_4_writeBackGPR_T_16) @[utils.scala 10:20]
          when _debugFIFO_4_writeBackGPR_T_20 : @[utils.scala 10:20]
            debugFIFO_4_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_4_writeBackGPR_T_21 = eq(UInt<7>("h63"), _debugFIFO_4_writeBackGPR_T_16) @[utils.scala 10:20]
            when _debugFIFO_4_writeBackGPR_T_21 : @[utils.scala 10:20]
              debugFIFO_4_writeBackGPR_insType_1 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_4_writeBackGPR_T_22 = eq(UInt<2>("h3"), _debugFIFO_4_writeBackGPR_T_16) @[utils.scala 10:20]
              when _debugFIFO_4_writeBackGPR_T_22 : @[utils.scala 10:20]
                debugFIFO_4_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_4_writeBackGPR_T_23 = eq(UInt<6>("h23"), _debugFIFO_4_writeBackGPR_T_16) @[utils.scala 10:20]
                when _debugFIFO_4_writeBackGPR_T_23 : @[utils.scala 10:20]
                  debugFIFO_4_writeBackGPR_insType_1 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_4_writeBackGPR_T_24 = eq(UInt<5>("h13"), _debugFIFO_4_writeBackGPR_T_16) @[utils.scala 10:20]
                  when _debugFIFO_4_writeBackGPR_T_24 : @[utils.scala 10:20]
                    debugFIFO_4_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_4_writeBackGPR_T_25 = eq(UInt<5>("h1b"), _debugFIFO_4_writeBackGPR_T_16) @[utils.scala 10:20]
                    when _debugFIFO_4_writeBackGPR_T_25 : @[utils.scala 10:20]
                      debugFIFO_4_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_4_writeBackGPR_T_26 = eq(UInt<6>("h33"), _debugFIFO_4_writeBackGPR_T_16) @[utils.scala 10:20]
                      when _debugFIFO_4_writeBackGPR_T_26 : @[utils.scala 10:20]
                        debugFIFO_4_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_4_writeBackGPR_T_27 = eq(UInt<6>("h3b"), _debugFIFO_4_writeBackGPR_T_16) @[utils.scala 10:20]
                        when _debugFIFO_4_writeBackGPR_T_27 : @[utils.scala 10:20]
                          debugFIFO_4_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_4_writeBackGPR_T_28 = eq(UInt<7>("h73"), _debugFIFO_4_writeBackGPR_T_16) @[utils.scala 10:20]
                          when _debugFIFO_4_writeBackGPR_T_28 : @[utils.scala 10:20]
                            debugFIFO_4_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_4_writeBackGPR_T_29 = eq(UInt<4>("hf"), _debugFIFO_4_writeBackGPR_T_16) @[utils.scala 10:20]
                            when _debugFIFO_4_writeBackGPR_T_29 : @[utils.scala 10:20]
                              debugFIFO_4_writeBackGPR_insType_1 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_4_writeBackGPR_T_30 = eq(UInt<6>("h2f"), _debugFIFO_4_writeBackGPR_T_16) @[utils.scala 10:20]
                              when _debugFIFO_4_writeBackGPR_T_30 : @[utils.scala 10:20]
                                debugFIFO_4_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_4_writeBackGPR_T_31 = eq(UInt<1>("h0"), debugFIFO_4_writeBackGPR_insType_1) @[rob.scala 52:141]
    node _debugFIFO_4_writeBackGPR_T_32 = bits(debugFIFO[4].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_4_writeBackGPR_insType_2 : UInt<3>
    debugFIFO_4_writeBackGPR_insType_2 <= UInt<3>("h0")
    node _debugFIFO_4_writeBackGPR_T_33 = eq(UInt<6>("h37"), _debugFIFO_4_writeBackGPR_T_32) @[utils.scala 10:20]
    when _debugFIFO_4_writeBackGPR_T_33 : @[utils.scala 10:20]
      debugFIFO_4_writeBackGPR_insType_2 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_4_writeBackGPR_T_34 = eq(UInt<5>("h17"), _debugFIFO_4_writeBackGPR_T_32) @[utils.scala 10:20]
      when _debugFIFO_4_writeBackGPR_T_34 : @[utils.scala 10:20]
        debugFIFO_4_writeBackGPR_insType_2 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_4_writeBackGPR_T_35 = eq(UInt<7>("h6f"), _debugFIFO_4_writeBackGPR_T_32) @[utils.scala 10:20]
        when _debugFIFO_4_writeBackGPR_T_35 : @[utils.scala 10:20]
          debugFIFO_4_writeBackGPR_insType_2 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_4_writeBackGPR_T_36 = eq(UInt<7>("h67"), _debugFIFO_4_writeBackGPR_T_32) @[utils.scala 10:20]
          when _debugFIFO_4_writeBackGPR_T_36 : @[utils.scala 10:20]
            debugFIFO_4_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_4_writeBackGPR_T_37 = eq(UInt<7>("h63"), _debugFIFO_4_writeBackGPR_T_32) @[utils.scala 10:20]
            when _debugFIFO_4_writeBackGPR_T_37 : @[utils.scala 10:20]
              debugFIFO_4_writeBackGPR_insType_2 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_4_writeBackGPR_T_38 = eq(UInt<2>("h3"), _debugFIFO_4_writeBackGPR_T_32) @[utils.scala 10:20]
              when _debugFIFO_4_writeBackGPR_T_38 : @[utils.scala 10:20]
                debugFIFO_4_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_4_writeBackGPR_T_39 = eq(UInt<6>("h23"), _debugFIFO_4_writeBackGPR_T_32) @[utils.scala 10:20]
                when _debugFIFO_4_writeBackGPR_T_39 : @[utils.scala 10:20]
                  debugFIFO_4_writeBackGPR_insType_2 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_4_writeBackGPR_T_40 = eq(UInt<5>("h13"), _debugFIFO_4_writeBackGPR_T_32) @[utils.scala 10:20]
                  when _debugFIFO_4_writeBackGPR_T_40 : @[utils.scala 10:20]
                    debugFIFO_4_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_4_writeBackGPR_T_41 = eq(UInt<5>("h1b"), _debugFIFO_4_writeBackGPR_T_32) @[utils.scala 10:20]
                    when _debugFIFO_4_writeBackGPR_T_41 : @[utils.scala 10:20]
                      debugFIFO_4_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_4_writeBackGPR_T_42 = eq(UInt<6>("h33"), _debugFIFO_4_writeBackGPR_T_32) @[utils.scala 10:20]
                      when _debugFIFO_4_writeBackGPR_T_42 : @[utils.scala 10:20]
                        debugFIFO_4_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_4_writeBackGPR_T_43 = eq(UInt<6>("h3b"), _debugFIFO_4_writeBackGPR_T_32) @[utils.scala 10:20]
                        when _debugFIFO_4_writeBackGPR_T_43 : @[utils.scala 10:20]
                          debugFIFO_4_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_4_writeBackGPR_T_44 = eq(UInt<7>("h73"), _debugFIFO_4_writeBackGPR_T_32) @[utils.scala 10:20]
                          when _debugFIFO_4_writeBackGPR_T_44 : @[utils.scala 10:20]
                            debugFIFO_4_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_4_writeBackGPR_T_45 = eq(UInt<4>("hf"), _debugFIFO_4_writeBackGPR_T_32) @[utils.scala 10:20]
                            when _debugFIFO_4_writeBackGPR_T_45 : @[utils.scala 10:20]
                              debugFIFO_4_writeBackGPR_insType_2 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_4_writeBackGPR_T_46 = eq(UInt<6>("h2f"), _debugFIFO_4_writeBackGPR_T_32) @[utils.scala 10:20]
                              when _debugFIFO_4_writeBackGPR_T_46 : @[utils.scala 10:20]
                                debugFIFO_4_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_4_writeBackGPR_T_47 = eq(UInt<3>("h4"), debugFIFO_4_writeBackGPR_insType_2) @[rob.scala 52:141]
    node _debugFIFO_4_writeBackGPR_T_48 = bits(debugFIFO[4].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_4_writeBackGPR_insType_3 : UInt<3>
    debugFIFO_4_writeBackGPR_insType_3 <= UInt<3>("h0")
    node _debugFIFO_4_writeBackGPR_T_49 = eq(UInt<6>("h37"), _debugFIFO_4_writeBackGPR_T_48) @[utils.scala 10:20]
    when _debugFIFO_4_writeBackGPR_T_49 : @[utils.scala 10:20]
      debugFIFO_4_writeBackGPR_insType_3 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_4_writeBackGPR_T_50 = eq(UInt<5>("h17"), _debugFIFO_4_writeBackGPR_T_48) @[utils.scala 10:20]
      when _debugFIFO_4_writeBackGPR_T_50 : @[utils.scala 10:20]
        debugFIFO_4_writeBackGPR_insType_3 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_4_writeBackGPR_T_51 = eq(UInt<7>("h6f"), _debugFIFO_4_writeBackGPR_T_48) @[utils.scala 10:20]
        when _debugFIFO_4_writeBackGPR_T_51 : @[utils.scala 10:20]
          debugFIFO_4_writeBackGPR_insType_3 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_4_writeBackGPR_T_52 = eq(UInt<7>("h67"), _debugFIFO_4_writeBackGPR_T_48) @[utils.scala 10:20]
          when _debugFIFO_4_writeBackGPR_T_52 : @[utils.scala 10:20]
            debugFIFO_4_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_4_writeBackGPR_T_53 = eq(UInt<7>("h63"), _debugFIFO_4_writeBackGPR_T_48) @[utils.scala 10:20]
            when _debugFIFO_4_writeBackGPR_T_53 : @[utils.scala 10:20]
              debugFIFO_4_writeBackGPR_insType_3 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_4_writeBackGPR_T_54 = eq(UInt<2>("h3"), _debugFIFO_4_writeBackGPR_T_48) @[utils.scala 10:20]
              when _debugFIFO_4_writeBackGPR_T_54 : @[utils.scala 10:20]
                debugFIFO_4_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_4_writeBackGPR_T_55 = eq(UInt<6>("h23"), _debugFIFO_4_writeBackGPR_T_48) @[utils.scala 10:20]
                when _debugFIFO_4_writeBackGPR_T_55 : @[utils.scala 10:20]
                  debugFIFO_4_writeBackGPR_insType_3 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_4_writeBackGPR_T_56 = eq(UInt<5>("h13"), _debugFIFO_4_writeBackGPR_T_48) @[utils.scala 10:20]
                  when _debugFIFO_4_writeBackGPR_T_56 : @[utils.scala 10:20]
                    debugFIFO_4_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_4_writeBackGPR_T_57 = eq(UInt<5>("h1b"), _debugFIFO_4_writeBackGPR_T_48) @[utils.scala 10:20]
                    when _debugFIFO_4_writeBackGPR_T_57 : @[utils.scala 10:20]
                      debugFIFO_4_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_4_writeBackGPR_T_58 = eq(UInt<6>("h33"), _debugFIFO_4_writeBackGPR_T_48) @[utils.scala 10:20]
                      when _debugFIFO_4_writeBackGPR_T_58 : @[utils.scala 10:20]
                        debugFIFO_4_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_4_writeBackGPR_T_59 = eq(UInt<6>("h3b"), _debugFIFO_4_writeBackGPR_T_48) @[utils.scala 10:20]
                        when _debugFIFO_4_writeBackGPR_T_59 : @[utils.scala 10:20]
                          debugFIFO_4_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_4_writeBackGPR_T_60 = eq(UInt<7>("h73"), _debugFIFO_4_writeBackGPR_T_48) @[utils.scala 10:20]
                          when _debugFIFO_4_writeBackGPR_T_60 : @[utils.scala 10:20]
                            debugFIFO_4_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_4_writeBackGPR_T_61 = eq(UInt<4>("hf"), _debugFIFO_4_writeBackGPR_T_48) @[utils.scala 10:20]
                            when _debugFIFO_4_writeBackGPR_T_61 : @[utils.scala 10:20]
                              debugFIFO_4_writeBackGPR_insType_3 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_4_writeBackGPR_T_62 = eq(UInt<6>("h2f"), _debugFIFO_4_writeBackGPR_T_48) @[utils.scala 10:20]
                              when _debugFIFO_4_writeBackGPR_T_62 : @[utils.scala 10:20]
                                debugFIFO_4_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_4_writeBackGPR_T_63 = eq(UInt<3>("h5"), debugFIFO_4_writeBackGPR_insType_3) @[rob.scala 52:141]
    node _debugFIFO_4_writeBackGPR_T_64 = or(_debugFIFO_4_writeBackGPR_T_15, _debugFIFO_4_writeBackGPR_T_31) @[rob.scala 52:197]
    node _debugFIFO_4_writeBackGPR_T_65 = or(_debugFIFO_4_writeBackGPR_T_64, _debugFIFO_4_writeBackGPR_T_47) @[rob.scala 52:197]
    node _debugFIFO_4_writeBackGPR_T_66 = or(_debugFIFO_4_writeBackGPR_T_65, _debugFIFO_4_writeBackGPR_T_63) @[rob.scala 52:197]
    node _debugFIFO_4_writeBackGPR_T_67 = bits(debugFIFO[4].instruction, 11, 7) @[rob.scala 52:223]
    node _debugFIFO_4_writeBackGPR_T_68 = orr(_debugFIFO_4_writeBackGPR_T_67) @[rob.scala 52:231]
    node _debugFIFO_4_writeBackGPR_T_69 = and(_debugFIFO_4_writeBackGPR_T_66, _debugFIFO_4_writeBackGPR_T_68) @[rob.scala 52:203]
    node _debugFIFO_4_writeBackGPR_T_70 = and(_debugFIFO_4_writeBackGPR_T_69, debugFIFO[4].valid) @[rob.scala 52:235]
    debugFIFO[4].writeBackGPR <= _debugFIFO_4_writeBackGPR_T_70 @[rob.scala 52:52]
    node _debugFIFO_5_writeBackGPR_T = bits(debugFIFO[5].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_5_writeBackGPR_insType : UInt<3>
    debugFIFO_5_writeBackGPR_insType <= UInt<3>("h0")
    node _debugFIFO_5_writeBackGPR_T_1 = eq(UInt<6>("h37"), _debugFIFO_5_writeBackGPR_T) @[utils.scala 10:20]
    when _debugFIFO_5_writeBackGPR_T_1 : @[utils.scala 10:20]
      debugFIFO_5_writeBackGPR_insType <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_5_writeBackGPR_T_2 = eq(UInt<5>("h17"), _debugFIFO_5_writeBackGPR_T) @[utils.scala 10:20]
      when _debugFIFO_5_writeBackGPR_T_2 : @[utils.scala 10:20]
        debugFIFO_5_writeBackGPR_insType <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_5_writeBackGPR_T_3 = eq(UInt<7>("h6f"), _debugFIFO_5_writeBackGPR_T) @[utils.scala 10:20]
        when _debugFIFO_5_writeBackGPR_T_3 : @[utils.scala 10:20]
          debugFIFO_5_writeBackGPR_insType <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_5_writeBackGPR_T_4 = eq(UInt<7>("h67"), _debugFIFO_5_writeBackGPR_T) @[utils.scala 10:20]
          when _debugFIFO_5_writeBackGPR_T_4 : @[utils.scala 10:20]
            debugFIFO_5_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_5_writeBackGPR_T_5 = eq(UInt<7>("h63"), _debugFIFO_5_writeBackGPR_T) @[utils.scala 10:20]
            when _debugFIFO_5_writeBackGPR_T_5 : @[utils.scala 10:20]
              debugFIFO_5_writeBackGPR_insType <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_5_writeBackGPR_T_6 = eq(UInt<2>("h3"), _debugFIFO_5_writeBackGPR_T) @[utils.scala 10:20]
              when _debugFIFO_5_writeBackGPR_T_6 : @[utils.scala 10:20]
                debugFIFO_5_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_5_writeBackGPR_T_7 = eq(UInt<6>("h23"), _debugFIFO_5_writeBackGPR_T) @[utils.scala 10:20]
                when _debugFIFO_5_writeBackGPR_T_7 : @[utils.scala 10:20]
                  debugFIFO_5_writeBackGPR_insType <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_5_writeBackGPR_T_8 = eq(UInt<5>("h13"), _debugFIFO_5_writeBackGPR_T) @[utils.scala 10:20]
                  when _debugFIFO_5_writeBackGPR_T_8 : @[utils.scala 10:20]
                    debugFIFO_5_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_5_writeBackGPR_T_9 = eq(UInt<5>("h1b"), _debugFIFO_5_writeBackGPR_T) @[utils.scala 10:20]
                    when _debugFIFO_5_writeBackGPR_T_9 : @[utils.scala 10:20]
                      debugFIFO_5_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_5_writeBackGPR_T_10 = eq(UInt<6>("h33"), _debugFIFO_5_writeBackGPR_T) @[utils.scala 10:20]
                      when _debugFIFO_5_writeBackGPR_T_10 : @[utils.scala 10:20]
                        debugFIFO_5_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_5_writeBackGPR_T_11 = eq(UInt<6>("h3b"), _debugFIFO_5_writeBackGPR_T) @[utils.scala 10:20]
                        when _debugFIFO_5_writeBackGPR_T_11 : @[utils.scala 10:20]
                          debugFIFO_5_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_5_writeBackGPR_T_12 = eq(UInt<7>("h73"), _debugFIFO_5_writeBackGPR_T) @[utils.scala 10:20]
                          when _debugFIFO_5_writeBackGPR_T_12 : @[utils.scala 10:20]
                            debugFIFO_5_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_5_writeBackGPR_T_13 = eq(UInt<4>("hf"), _debugFIFO_5_writeBackGPR_T) @[utils.scala 10:20]
                            when _debugFIFO_5_writeBackGPR_T_13 : @[utils.scala 10:20]
                              debugFIFO_5_writeBackGPR_insType <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_5_writeBackGPR_T_14 = eq(UInt<6>("h2f"), _debugFIFO_5_writeBackGPR_T) @[utils.scala 10:20]
                              when _debugFIFO_5_writeBackGPR_T_14 : @[utils.scala 10:20]
                                debugFIFO_5_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_5_writeBackGPR_T_15 = eq(UInt<1>("h1"), debugFIFO_5_writeBackGPR_insType) @[rob.scala 52:141]
    node _debugFIFO_5_writeBackGPR_T_16 = bits(debugFIFO[5].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_5_writeBackGPR_insType_1 : UInt<3>
    debugFIFO_5_writeBackGPR_insType_1 <= UInt<3>("h0")
    node _debugFIFO_5_writeBackGPR_T_17 = eq(UInt<6>("h37"), _debugFIFO_5_writeBackGPR_T_16) @[utils.scala 10:20]
    when _debugFIFO_5_writeBackGPR_T_17 : @[utils.scala 10:20]
      debugFIFO_5_writeBackGPR_insType_1 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_5_writeBackGPR_T_18 = eq(UInt<5>("h17"), _debugFIFO_5_writeBackGPR_T_16) @[utils.scala 10:20]
      when _debugFIFO_5_writeBackGPR_T_18 : @[utils.scala 10:20]
        debugFIFO_5_writeBackGPR_insType_1 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_5_writeBackGPR_T_19 = eq(UInt<7>("h6f"), _debugFIFO_5_writeBackGPR_T_16) @[utils.scala 10:20]
        when _debugFIFO_5_writeBackGPR_T_19 : @[utils.scala 10:20]
          debugFIFO_5_writeBackGPR_insType_1 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_5_writeBackGPR_T_20 = eq(UInt<7>("h67"), _debugFIFO_5_writeBackGPR_T_16) @[utils.scala 10:20]
          when _debugFIFO_5_writeBackGPR_T_20 : @[utils.scala 10:20]
            debugFIFO_5_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_5_writeBackGPR_T_21 = eq(UInt<7>("h63"), _debugFIFO_5_writeBackGPR_T_16) @[utils.scala 10:20]
            when _debugFIFO_5_writeBackGPR_T_21 : @[utils.scala 10:20]
              debugFIFO_5_writeBackGPR_insType_1 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_5_writeBackGPR_T_22 = eq(UInt<2>("h3"), _debugFIFO_5_writeBackGPR_T_16) @[utils.scala 10:20]
              when _debugFIFO_5_writeBackGPR_T_22 : @[utils.scala 10:20]
                debugFIFO_5_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_5_writeBackGPR_T_23 = eq(UInt<6>("h23"), _debugFIFO_5_writeBackGPR_T_16) @[utils.scala 10:20]
                when _debugFIFO_5_writeBackGPR_T_23 : @[utils.scala 10:20]
                  debugFIFO_5_writeBackGPR_insType_1 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_5_writeBackGPR_T_24 = eq(UInt<5>("h13"), _debugFIFO_5_writeBackGPR_T_16) @[utils.scala 10:20]
                  when _debugFIFO_5_writeBackGPR_T_24 : @[utils.scala 10:20]
                    debugFIFO_5_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_5_writeBackGPR_T_25 = eq(UInt<5>("h1b"), _debugFIFO_5_writeBackGPR_T_16) @[utils.scala 10:20]
                    when _debugFIFO_5_writeBackGPR_T_25 : @[utils.scala 10:20]
                      debugFIFO_5_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_5_writeBackGPR_T_26 = eq(UInt<6>("h33"), _debugFIFO_5_writeBackGPR_T_16) @[utils.scala 10:20]
                      when _debugFIFO_5_writeBackGPR_T_26 : @[utils.scala 10:20]
                        debugFIFO_5_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_5_writeBackGPR_T_27 = eq(UInt<6>("h3b"), _debugFIFO_5_writeBackGPR_T_16) @[utils.scala 10:20]
                        when _debugFIFO_5_writeBackGPR_T_27 : @[utils.scala 10:20]
                          debugFIFO_5_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_5_writeBackGPR_T_28 = eq(UInt<7>("h73"), _debugFIFO_5_writeBackGPR_T_16) @[utils.scala 10:20]
                          when _debugFIFO_5_writeBackGPR_T_28 : @[utils.scala 10:20]
                            debugFIFO_5_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_5_writeBackGPR_T_29 = eq(UInt<4>("hf"), _debugFIFO_5_writeBackGPR_T_16) @[utils.scala 10:20]
                            when _debugFIFO_5_writeBackGPR_T_29 : @[utils.scala 10:20]
                              debugFIFO_5_writeBackGPR_insType_1 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_5_writeBackGPR_T_30 = eq(UInt<6>("h2f"), _debugFIFO_5_writeBackGPR_T_16) @[utils.scala 10:20]
                              when _debugFIFO_5_writeBackGPR_T_30 : @[utils.scala 10:20]
                                debugFIFO_5_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_5_writeBackGPR_T_31 = eq(UInt<1>("h0"), debugFIFO_5_writeBackGPR_insType_1) @[rob.scala 52:141]
    node _debugFIFO_5_writeBackGPR_T_32 = bits(debugFIFO[5].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_5_writeBackGPR_insType_2 : UInt<3>
    debugFIFO_5_writeBackGPR_insType_2 <= UInt<3>("h0")
    node _debugFIFO_5_writeBackGPR_T_33 = eq(UInt<6>("h37"), _debugFIFO_5_writeBackGPR_T_32) @[utils.scala 10:20]
    when _debugFIFO_5_writeBackGPR_T_33 : @[utils.scala 10:20]
      debugFIFO_5_writeBackGPR_insType_2 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_5_writeBackGPR_T_34 = eq(UInt<5>("h17"), _debugFIFO_5_writeBackGPR_T_32) @[utils.scala 10:20]
      when _debugFIFO_5_writeBackGPR_T_34 : @[utils.scala 10:20]
        debugFIFO_5_writeBackGPR_insType_2 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_5_writeBackGPR_T_35 = eq(UInt<7>("h6f"), _debugFIFO_5_writeBackGPR_T_32) @[utils.scala 10:20]
        when _debugFIFO_5_writeBackGPR_T_35 : @[utils.scala 10:20]
          debugFIFO_5_writeBackGPR_insType_2 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_5_writeBackGPR_T_36 = eq(UInt<7>("h67"), _debugFIFO_5_writeBackGPR_T_32) @[utils.scala 10:20]
          when _debugFIFO_5_writeBackGPR_T_36 : @[utils.scala 10:20]
            debugFIFO_5_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_5_writeBackGPR_T_37 = eq(UInt<7>("h63"), _debugFIFO_5_writeBackGPR_T_32) @[utils.scala 10:20]
            when _debugFIFO_5_writeBackGPR_T_37 : @[utils.scala 10:20]
              debugFIFO_5_writeBackGPR_insType_2 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_5_writeBackGPR_T_38 = eq(UInt<2>("h3"), _debugFIFO_5_writeBackGPR_T_32) @[utils.scala 10:20]
              when _debugFIFO_5_writeBackGPR_T_38 : @[utils.scala 10:20]
                debugFIFO_5_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_5_writeBackGPR_T_39 = eq(UInt<6>("h23"), _debugFIFO_5_writeBackGPR_T_32) @[utils.scala 10:20]
                when _debugFIFO_5_writeBackGPR_T_39 : @[utils.scala 10:20]
                  debugFIFO_5_writeBackGPR_insType_2 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_5_writeBackGPR_T_40 = eq(UInt<5>("h13"), _debugFIFO_5_writeBackGPR_T_32) @[utils.scala 10:20]
                  when _debugFIFO_5_writeBackGPR_T_40 : @[utils.scala 10:20]
                    debugFIFO_5_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_5_writeBackGPR_T_41 = eq(UInt<5>("h1b"), _debugFIFO_5_writeBackGPR_T_32) @[utils.scala 10:20]
                    when _debugFIFO_5_writeBackGPR_T_41 : @[utils.scala 10:20]
                      debugFIFO_5_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_5_writeBackGPR_T_42 = eq(UInt<6>("h33"), _debugFIFO_5_writeBackGPR_T_32) @[utils.scala 10:20]
                      when _debugFIFO_5_writeBackGPR_T_42 : @[utils.scala 10:20]
                        debugFIFO_5_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_5_writeBackGPR_T_43 = eq(UInt<6>("h3b"), _debugFIFO_5_writeBackGPR_T_32) @[utils.scala 10:20]
                        when _debugFIFO_5_writeBackGPR_T_43 : @[utils.scala 10:20]
                          debugFIFO_5_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_5_writeBackGPR_T_44 = eq(UInt<7>("h73"), _debugFIFO_5_writeBackGPR_T_32) @[utils.scala 10:20]
                          when _debugFIFO_5_writeBackGPR_T_44 : @[utils.scala 10:20]
                            debugFIFO_5_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_5_writeBackGPR_T_45 = eq(UInt<4>("hf"), _debugFIFO_5_writeBackGPR_T_32) @[utils.scala 10:20]
                            when _debugFIFO_5_writeBackGPR_T_45 : @[utils.scala 10:20]
                              debugFIFO_5_writeBackGPR_insType_2 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_5_writeBackGPR_T_46 = eq(UInt<6>("h2f"), _debugFIFO_5_writeBackGPR_T_32) @[utils.scala 10:20]
                              when _debugFIFO_5_writeBackGPR_T_46 : @[utils.scala 10:20]
                                debugFIFO_5_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_5_writeBackGPR_T_47 = eq(UInt<3>("h4"), debugFIFO_5_writeBackGPR_insType_2) @[rob.scala 52:141]
    node _debugFIFO_5_writeBackGPR_T_48 = bits(debugFIFO[5].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_5_writeBackGPR_insType_3 : UInt<3>
    debugFIFO_5_writeBackGPR_insType_3 <= UInt<3>("h0")
    node _debugFIFO_5_writeBackGPR_T_49 = eq(UInt<6>("h37"), _debugFIFO_5_writeBackGPR_T_48) @[utils.scala 10:20]
    when _debugFIFO_5_writeBackGPR_T_49 : @[utils.scala 10:20]
      debugFIFO_5_writeBackGPR_insType_3 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_5_writeBackGPR_T_50 = eq(UInt<5>("h17"), _debugFIFO_5_writeBackGPR_T_48) @[utils.scala 10:20]
      when _debugFIFO_5_writeBackGPR_T_50 : @[utils.scala 10:20]
        debugFIFO_5_writeBackGPR_insType_3 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_5_writeBackGPR_T_51 = eq(UInt<7>("h6f"), _debugFIFO_5_writeBackGPR_T_48) @[utils.scala 10:20]
        when _debugFIFO_5_writeBackGPR_T_51 : @[utils.scala 10:20]
          debugFIFO_5_writeBackGPR_insType_3 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_5_writeBackGPR_T_52 = eq(UInt<7>("h67"), _debugFIFO_5_writeBackGPR_T_48) @[utils.scala 10:20]
          when _debugFIFO_5_writeBackGPR_T_52 : @[utils.scala 10:20]
            debugFIFO_5_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_5_writeBackGPR_T_53 = eq(UInt<7>("h63"), _debugFIFO_5_writeBackGPR_T_48) @[utils.scala 10:20]
            when _debugFIFO_5_writeBackGPR_T_53 : @[utils.scala 10:20]
              debugFIFO_5_writeBackGPR_insType_3 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_5_writeBackGPR_T_54 = eq(UInt<2>("h3"), _debugFIFO_5_writeBackGPR_T_48) @[utils.scala 10:20]
              when _debugFIFO_5_writeBackGPR_T_54 : @[utils.scala 10:20]
                debugFIFO_5_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_5_writeBackGPR_T_55 = eq(UInt<6>("h23"), _debugFIFO_5_writeBackGPR_T_48) @[utils.scala 10:20]
                when _debugFIFO_5_writeBackGPR_T_55 : @[utils.scala 10:20]
                  debugFIFO_5_writeBackGPR_insType_3 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_5_writeBackGPR_T_56 = eq(UInt<5>("h13"), _debugFIFO_5_writeBackGPR_T_48) @[utils.scala 10:20]
                  when _debugFIFO_5_writeBackGPR_T_56 : @[utils.scala 10:20]
                    debugFIFO_5_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_5_writeBackGPR_T_57 = eq(UInt<5>("h1b"), _debugFIFO_5_writeBackGPR_T_48) @[utils.scala 10:20]
                    when _debugFIFO_5_writeBackGPR_T_57 : @[utils.scala 10:20]
                      debugFIFO_5_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_5_writeBackGPR_T_58 = eq(UInt<6>("h33"), _debugFIFO_5_writeBackGPR_T_48) @[utils.scala 10:20]
                      when _debugFIFO_5_writeBackGPR_T_58 : @[utils.scala 10:20]
                        debugFIFO_5_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_5_writeBackGPR_T_59 = eq(UInt<6>("h3b"), _debugFIFO_5_writeBackGPR_T_48) @[utils.scala 10:20]
                        when _debugFIFO_5_writeBackGPR_T_59 : @[utils.scala 10:20]
                          debugFIFO_5_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_5_writeBackGPR_T_60 = eq(UInt<7>("h73"), _debugFIFO_5_writeBackGPR_T_48) @[utils.scala 10:20]
                          when _debugFIFO_5_writeBackGPR_T_60 : @[utils.scala 10:20]
                            debugFIFO_5_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_5_writeBackGPR_T_61 = eq(UInt<4>("hf"), _debugFIFO_5_writeBackGPR_T_48) @[utils.scala 10:20]
                            when _debugFIFO_5_writeBackGPR_T_61 : @[utils.scala 10:20]
                              debugFIFO_5_writeBackGPR_insType_3 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_5_writeBackGPR_T_62 = eq(UInt<6>("h2f"), _debugFIFO_5_writeBackGPR_T_48) @[utils.scala 10:20]
                              when _debugFIFO_5_writeBackGPR_T_62 : @[utils.scala 10:20]
                                debugFIFO_5_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_5_writeBackGPR_T_63 = eq(UInt<3>("h5"), debugFIFO_5_writeBackGPR_insType_3) @[rob.scala 52:141]
    node _debugFIFO_5_writeBackGPR_T_64 = or(_debugFIFO_5_writeBackGPR_T_15, _debugFIFO_5_writeBackGPR_T_31) @[rob.scala 52:197]
    node _debugFIFO_5_writeBackGPR_T_65 = or(_debugFIFO_5_writeBackGPR_T_64, _debugFIFO_5_writeBackGPR_T_47) @[rob.scala 52:197]
    node _debugFIFO_5_writeBackGPR_T_66 = or(_debugFIFO_5_writeBackGPR_T_65, _debugFIFO_5_writeBackGPR_T_63) @[rob.scala 52:197]
    node _debugFIFO_5_writeBackGPR_T_67 = bits(debugFIFO[5].instruction, 11, 7) @[rob.scala 52:223]
    node _debugFIFO_5_writeBackGPR_T_68 = orr(_debugFIFO_5_writeBackGPR_T_67) @[rob.scala 52:231]
    node _debugFIFO_5_writeBackGPR_T_69 = and(_debugFIFO_5_writeBackGPR_T_66, _debugFIFO_5_writeBackGPR_T_68) @[rob.scala 52:203]
    node _debugFIFO_5_writeBackGPR_T_70 = and(_debugFIFO_5_writeBackGPR_T_69, debugFIFO[5].valid) @[rob.scala 52:235]
    debugFIFO[5].writeBackGPR <= _debugFIFO_5_writeBackGPR_T_70 @[rob.scala 52:52]
    node _debugFIFO_6_writeBackGPR_T = bits(debugFIFO[6].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_6_writeBackGPR_insType : UInt<3>
    debugFIFO_6_writeBackGPR_insType <= UInt<3>("h0")
    node _debugFIFO_6_writeBackGPR_T_1 = eq(UInt<6>("h37"), _debugFIFO_6_writeBackGPR_T) @[utils.scala 10:20]
    when _debugFIFO_6_writeBackGPR_T_1 : @[utils.scala 10:20]
      debugFIFO_6_writeBackGPR_insType <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_6_writeBackGPR_T_2 = eq(UInt<5>("h17"), _debugFIFO_6_writeBackGPR_T) @[utils.scala 10:20]
      when _debugFIFO_6_writeBackGPR_T_2 : @[utils.scala 10:20]
        debugFIFO_6_writeBackGPR_insType <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_6_writeBackGPR_T_3 = eq(UInt<7>("h6f"), _debugFIFO_6_writeBackGPR_T) @[utils.scala 10:20]
        when _debugFIFO_6_writeBackGPR_T_3 : @[utils.scala 10:20]
          debugFIFO_6_writeBackGPR_insType <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_6_writeBackGPR_T_4 = eq(UInt<7>("h67"), _debugFIFO_6_writeBackGPR_T) @[utils.scala 10:20]
          when _debugFIFO_6_writeBackGPR_T_4 : @[utils.scala 10:20]
            debugFIFO_6_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_6_writeBackGPR_T_5 = eq(UInt<7>("h63"), _debugFIFO_6_writeBackGPR_T) @[utils.scala 10:20]
            when _debugFIFO_6_writeBackGPR_T_5 : @[utils.scala 10:20]
              debugFIFO_6_writeBackGPR_insType <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_6_writeBackGPR_T_6 = eq(UInt<2>("h3"), _debugFIFO_6_writeBackGPR_T) @[utils.scala 10:20]
              when _debugFIFO_6_writeBackGPR_T_6 : @[utils.scala 10:20]
                debugFIFO_6_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_6_writeBackGPR_T_7 = eq(UInt<6>("h23"), _debugFIFO_6_writeBackGPR_T) @[utils.scala 10:20]
                when _debugFIFO_6_writeBackGPR_T_7 : @[utils.scala 10:20]
                  debugFIFO_6_writeBackGPR_insType <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_6_writeBackGPR_T_8 = eq(UInt<5>("h13"), _debugFIFO_6_writeBackGPR_T) @[utils.scala 10:20]
                  when _debugFIFO_6_writeBackGPR_T_8 : @[utils.scala 10:20]
                    debugFIFO_6_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_6_writeBackGPR_T_9 = eq(UInt<5>("h1b"), _debugFIFO_6_writeBackGPR_T) @[utils.scala 10:20]
                    when _debugFIFO_6_writeBackGPR_T_9 : @[utils.scala 10:20]
                      debugFIFO_6_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_6_writeBackGPR_T_10 = eq(UInt<6>("h33"), _debugFIFO_6_writeBackGPR_T) @[utils.scala 10:20]
                      when _debugFIFO_6_writeBackGPR_T_10 : @[utils.scala 10:20]
                        debugFIFO_6_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_6_writeBackGPR_T_11 = eq(UInt<6>("h3b"), _debugFIFO_6_writeBackGPR_T) @[utils.scala 10:20]
                        when _debugFIFO_6_writeBackGPR_T_11 : @[utils.scala 10:20]
                          debugFIFO_6_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_6_writeBackGPR_T_12 = eq(UInt<7>("h73"), _debugFIFO_6_writeBackGPR_T) @[utils.scala 10:20]
                          when _debugFIFO_6_writeBackGPR_T_12 : @[utils.scala 10:20]
                            debugFIFO_6_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_6_writeBackGPR_T_13 = eq(UInt<4>("hf"), _debugFIFO_6_writeBackGPR_T) @[utils.scala 10:20]
                            when _debugFIFO_6_writeBackGPR_T_13 : @[utils.scala 10:20]
                              debugFIFO_6_writeBackGPR_insType <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_6_writeBackGPR_T_14 = eq(UInt<6>("h2f"), _debugFIFO_6_writeBackGPR_T) @[utils.scala 10:20]
                              when _debugFIFO_6_writeBackGPR_T_14 : @[utils.scala 10:20]
                                debugFIFO_6_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_6_writeBackGPR_T_15 = eq(UInt<1>("h1"), debugFIFO_6_writeBackGPR_insType) @[rob.scala 52:141]
    node _debugFIFO_6_writeBackGPR_T_16 = bits(debugFIFO[6].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_6_writeBackGPR_insType_1 : UInt<3>
    debugFIFO_6_writeBackGPR_insType_1 <= UInt<3>("h0")
    node _debugFIFO_6_writeBackGPR_T_17 = eq(UInt<6>("h37"), _debugFIFO_6_writeBackGPR_T_16) @[utils.scala 10:20]
    when _debugFIFO_6_writeBackGPR_T_17 : @[utils.scala 10:20]
      debugFIFO_6_writeBackGPR_insType_1 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_6_writeBackGPR_T_18 = eq(UInt<5>("h17"), _debugFIFO_6_writeBackGPR_T_16) @[utils.scala 10:20]
      when _debugFIFO_6_writeBackGPR_T_18 : @[utils.scala 10:20]
        debugFIFO_6_writeBackGPR_insType_1 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_6_writeBackGPR_T_19 = eq(UInt<7>("h6f"), _debugFIFO_6_writeBackGPR_T_16) @[utils.scala 10:20]
        when _debugFIFO_6_writeBackGPR_T_19 : @[utils.scala 10:20]
          debugFIFO_6_writeBackGPR_insType_1 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_6_writeBackGPR_T_20 = eq(UInt<7>("h67"), _debugFIFO_6_writeBackGPR_T_16) @[utils.scala 10:20]
          when _debugFIFO_6_writeBackGPR_T_20 : @[utils.scala 10:20]
            debugFIFO_6_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_6_writeBackGPR_T_21 = eq(UInt<7>("h63"), _debugFIFO_6_writeBackGPR_T_16) @[utils.scala 10:20]
            when _debugFIFO_6_writeBackGPR_T_21 : @[utils.scala 10:20]
              debugFIFO_6_writeBackGPR_insType_1 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_6_writeBackGPR_T_22 = eq(UInt<2>("h3"), _debugFIFO_6_writeBackGPR_T_16) @[utils.scala 10:20]
              when _debugFIFO_6_writeBackGPR_T_22 : @[utils.scala 10:20]
                debugFIFO_6_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_6_writeBackGPR_T_23 = eq(UInt<6>("h23"), _debugFIFO_6_writeBackGPR_T_16) @[utils.scala 10:20]
                when _debugFIFO_6_writeBackGPR_T_23 : @[utils.scala 10:20]
                  debugFIFO_6_writeBackGPR_insType_1 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_6_writeBackGPR_T_24 = eq(UInt<5>("h13"), _debugFIFO_6_writeBackGPR_T_16) @[utils.scala 10:20]
                  when _debugFIFO_6_writeBackGPR_T_24 : @[utils.scala 10:20]
                    debugFIFO_6_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_6_writeBackGPR_T_25 = eq(UInt<5>("h1b"), _debugFIFO_6_writeBackGPR_T_16) @[utils.scala 10:20]
                    when _debugFIFO_6_writeBackGPR_T_25 : @[utils.scala 10:20]
                      debugFIFO_6_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_6_writeBackGPR_T_26 = eq(UInt<6>("h33"), _debugFIFO_6_writeBackGPR_T_16) @[utils.scala 10:20]
                      when _debugFIFO_6_writeBackGPR_T_26 : @[utils.scala 10:20]
                        debugFIFO_6_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_6_writeBackGPR_T_27 = eq(UInt<6>("h3b"), _debugFIFO_6_writeBackGPR_T_16) @[utils.scala 10:20]
                        when _debugFIFO_6_writeBackGPR_T_27 : @[utils.scala 10:20]
                          debugFIFO_6_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_6_writeBackGPR_T_28 = eq(UInt<7>("h73"), _debugFIFO_6_writeBackGPR_T_16) @[utils.scala 10:20]
                          when _debugFIFO_6_writeBackGPR_T_28 : @[utils.scala 10:20]
                            debugFIFO_6_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_6_writeBackGPR_T_29 = eq(UInt<4>("hf"), _debugFIFO_6_writeBackGPR_T_16) @[utils.scala 10:20]
                            when _debugFIFO_6_writeBackGPR_T_29 : @[utils.scala 10:20]
                              debugFIFO_6_writeBackGPR_insType_1 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_6_writeBackGPR_T_30 = eq(UInt<6>("h2f"), _debugFIFO_6_writeBackGPR_T_16) @[utils.scala 10:20]
                              when _debugFIFO_6_writeBackGPR_T_30 : @[utils.scala 10:20]
                                debugFIFO_6_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_6_writeBackGPR_T_31 = eq(UInt<1>("h0"), debugFIFO_6_writeBackGPR_insType_1) @[rob.scala 52:141]
    node _debugFIFO_6_writeBackGPR_T_32 = bits(debugFIFO[6].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_6_writeBackGPR_insType_2 : UInt<3>
    debugFIFO_6_writeBackGPR_insType_2 <= UInt<3>("h0")
    node _debugFIFO_6_writeBackGPR_T_33 = eq(UInt<6>("h37"), _debugFIFO_6_writeBackGPR_T_32) @[utils.scala 10:20]
    when _debugFIFO_6_writeBackGPR_T_33 : @[utils.scala 10:20]
      debugFIFO_6_writeBackGPR_insType_2 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_6_writeBackGPR_T_34 = eq(UInt<5>("h17"), _debugFIFO_6_writeBackGPR_T_32) @[utils.scala 10:20]
      when _debugFIFO_6_writeBackGPR_T_34 : @[utils.scala 10:20]
        debugFIFO_6_writeBackGPR_insType_2 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_6_writeBackGPR_T_35 = eq(UInt<7>("h6f"), _debugFIFO_6_writeBackGPR_T_32) @[utils.scala 10:20]
        when _debugFIFO_6_writeBackGPR_T_35 : @[utils.scala 10:20]
          debugFIFO_6_writeBackGPR_insType_2 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_6_writeBackGPR_T_36 = eq(UInt<7>("h67"), _debugFIFO_6_writeBackGPR_T_32) @[utils.scala 10:20]
          when _debugFIFO_6_writeBackGPR_T_36 : @[utils.scala 10:20]
            debugFIFO_6_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_6_writeBackGPR_T_37 = eq(UInt<7>("h63"), _debugFIFO_6_writeBackGPR_T_32) @[utils.scala 10:20]
            when _debugFIFO_6_writeBackGPR_T_37 : @[utils.scala 10:20]
              debugFIFO_6_writeBackGPR_insType_2 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_6_writeBackGPR_T_38 = eq(UInt<2>("h3"), _debugFIFO_6_writeBackGPR_T_32) @[utils.scala 10:20]
              when _debugFIFO_6_writeBackGPR_T_38 : @[utils.scala 10:20]
                debugFIFO_6_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_6_writeBackGPR_T_39 = eq(UInt<6>("h23"), _debugFIFO_6_writeBackGPR_T_32) @[utils.scala 10:20]
                when _debugFIFO_6_writeBackGPR_T_39 : @[utils.scala 10:20]
                  debugFIFO_6_writeBackGPR_insType_2 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_6_writeBackGPR_T_40 = eq(UInt<5>("h13"), _debugFIFO_6_writeBackGPR_T_32) @[utils.scala 10:20]
                  when _debugFIFO_6_writeBackGPR_T_40 : @[utils.scala 10:20]
                    debugFIFO_6_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_6_writeBackGPR_T_41 = eq(UInt<5>("h1b"), _debugFIFO_6_writeBackGPR_T_32) @[utils.scala 10:20]
                    when _debugFIFO_6_writeBackGPR_T_41 : @[utils.scala 10:20]
                      debugFIFO_6_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_6_writeBackGPR_T_42 = eq(UInt<6>("h33"), _debugFIFO_6_writeBackGPR_T_32) @[utils.scala 10:20]
                      when _debugFIFO_6_writeBackGPR_T_42 : @[utils.scala 10:20]
                        debugFIFO_6_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_6_writeBackGPR_T_43 = eq(UInt<6>("h3b"), _debugFIFO_6_writeBackGPR_T_32) @[utils.scala 10:20]
                        when _debugFIFO_6_writeBackGPR_T_43 : @[utils.scala 10:20]
                          debugFIFO_6_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_6_writeBackGPR_T_44 = eq(UInt<7>("h73"), _debugFIFO_6_writeBackGPR_T_32) @[utils.scala 10:20]
                          when _debugFIFO_6_writeBackGPR_T_44 : @[utils.scala 10:20]
                            debugFIFO_6_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_6_writeBackGPR_T_45 = eq(UInt<4>("hf"), _debugFIFO_6_writeBackGPR_T_32) @[utils.scala 10:20]
                            when _debugFIFO_6_writeBackGPR_T_45 : @[utils.scala 10:20]
                              debugFIFO_6_writeBackGPR_insType_2 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_6_writeBackGPR_T_46 = eq(UInt<6>("h2f"), _debugFIFO_6_writeBackGPR_T_32) @[utils.scala 10:20]
                              when _debugFIFO_6_writeBackGPR_T_46 : @[utils.scala 10:20]
                                debugFIFO_6_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_6_writeBackGPR_T_47 = eq(UInt<3>("h4"), debugFIFO_6_writeBackGPR_insType_2) @[rob.scala 52:141]
    node _debugFIFO_6_writeBackGPR_T_48 = bits(debugFIFO[6].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_6_writeBackGPR_insType_3 : UInt<3>
    debugFIFO_6_writeBackGPR_insType_3 <= UInt<3>("h0")
    node _debugFIFO_6_writeBackGPR_T_49 = eq(UInt<6>("h37"), _debugFIFO_6_writeBackGPR_T_48) @[utils.scala 10:20]
    when _debugFIFO_6_writeBackGPR_T_49 : @[utils.scala 10:20]
      debugFIFO_6_writeBackGPR_insType_3 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_6_writeBackGPR_T_50 = eq(UInt<5>("h17"), _debugFIFO_6_writeBackGPR_T_48) @[utils.scala 10:20]
      when _debugFIFO_6_writeBackGPR_T_50 : @[utils.scala 10:20]
        debugFIFO_6_writeBackGPR_insType_3 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_6_writeBackGPR_T_51 = eq(UInt<7>("h6f"), _debugFIFO_6_writeBackGPR_T_48) @[utils.scala 10:20]
        when _debugFIFO_6_writeBackGPR_T_51 : @[utils.scala 10:20]
          debugFIFO_6_writeBackGPR_insType_3 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_6_writeBackGPR_T_52 = eq(UInt<7>("h67"), _debugFIFO_6_writeBackGPR_T_48) @[utils.scala 10:20]
          when _debugFIFO_6_writeBackGPR_T_52 : @[utils.scala 10:20]
            debugFIFO_6_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_6_writeBackGPR_T_53 = eq(UInt<7>("h63"), _debugFIFO_6_writeBackGPR_T_48) @[utils.scala 10:20]
            when _debugFIFO_6_writeBackGPR_T_53 : @[utils.scala 10:20]
              debugFIFO_6_writeBackGPR_insType_3 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_6_writeBackGPR_T_54 = eq(UInt<2>("h3"), _debugFIFO_6_writeBackGPR_T_48) @[utils.scala 10:20]
              when _debugFIFO_6_writeBackGPR_T_54 : @[utils.scala 10:20]
                debugFIFO_6_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_6_writeBackGPR_T_55 = eq(UInt<6>("h23"), _debugFIFO_6_writeBackGPR_T_48) @[utils.scala 10:20]
                when _debugFIFO_6_writeBackGPR_T_55 : @[utils.scala 10:20]
                  debugFIFO_6_writeBackGPR_insType_3 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_6_writeBackGPR_T_56 = eq(UInt<5>("h13"), _debugFIFO_6_writeBackGPR_T_48) @[utils.scala 10:20]
                  when _debugFIFO_6_writeBackGPR_T_56 : @[utils.scala 10:20]
                    debugFIFO_6_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_6_writeBackGPR_T_57 = eq(UInt<5>("h1b"), _debugFIFO_6_writeBackGPR_T_48) @[utils.scala 10:20]
                    when _debugFIFO_6_writeBackGPR_T_57 : @[utils.scala 10:20]
                      debugFIFO_6_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_6_writeBackGPR_T_58 = eq(UInt<6>("h33"), _debugFIFO_6_writeBackGPR_T_48) @[utils.scala 10:20]
                      when _debugFIFO_6_writeBackGPR_T_58 : @[utils.scala 10:20]
                        debugFIFO_6_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_6_writeBackGPR_T_59 = eq(UInt<6>("h3b"), _debugFIFO_6_writeBackGPR_T_48) @[utils.scala 10:20]
                        when _debugFIFO_6_writeBackGPR_T_59 : @[utils.scala 10:20]
                          debugFIFO_6_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_6_writeBackGPR_T_60 = eq(UInt<7>("h73"), _debugFIFO_6_writeBackGPR_T_48) @[utils.scala 10:20]
                          when _debugFIFO_6_writeBackGPR_T_60 : @[utils.scala 10:20]
                            debugFIFO_6_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_6_writeBackGPR_T_61 = eq(UInt<4>("hf"), _debugFIFO_6_writeBackGPR_T_48) @[utils.scala 10:20]
                            when _debugFIFO_6_writeBackGPR_T_61 : @[utils.scala 10:20]
                              debugFIFO_6_writeBackGPR_insType_3 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_6_writeBackGPR_T_62 = eq(UInt<6>("h2f"), _debugFIFO_6_writeBackGPR_T_48) @[utils.scala 10:20]
                              when _debugFIFO_6_writeBackGPR_T_62 : @[utils.scala 10:20]
                                debugFIFO_6_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_6_writeBackGPR_T_63 = eq(UInt<3>("h5"), debugFIFO_6_writeBackGPR_insType_3) @[rob.scala 52:141]
    node _debugFIFO_6_writeBackGPR_T_64 = or(_debugFIFO_6_writeBackGPR_T_15, _debugFIFO_6_writeBackGPR_T_31) @[rob.scala 52:197]
    node _debugFIFO_6_writeBackGPR_T_65 = or(_debugFIFO_6_writeBackGPR_T_64, _debugFIFO_6_writeBackGPR_T_47) @[rob.scala 52:197]
    node _debugFIFO_6_writeBackGPR_T_66 = or(_debugFIFO_6_writeBackGPR_T_65, _debugFIFO_6_writeBackGPR_T_63) @[rob.scala 52:197]
    node _debugFIFO_6_writeBackGPR_T_67 = bits(debugFIFO[6].instruction, 11, 7) @[rob.scala 52:223]
    node _debugFIFO_6_writeBackGPR_T_68 = orr(_debugFIFO_6_writeBackGPR_T_67) @[rob.scala 52:231]
    node _debugFIFO_6_writeBackGPR_T_69 = and(_debugFIFO_6_writeBackGPR_T_66, _debugFIFO_6_writeBackGPR_T_68) @[rob.scala 52:203]
    node _debugFIFO_6_writeBackGPR_T_70 = and(_debugFIFO_6_writeBackGPR_T_69, debugFIFO[6].valid) @[rob.scala 52:235]
    debugFIFO[6].writeBackGPR <= _debugFIFO_6_writeBackGPR_T_70 @[rob.scala 52:52]
    node _debugFIFO_7_writeBackGPR_T = bits(debugFIFO[7].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_7_writeBackGPR_insType : UInt<3>
    debugFIFO_7_writeBackGPR_insType <= UInt<3>("h0")
    node _debugFIFO_7_writeBackGPR_T_1 = eq(UInt<6>("h37"), _debugFIFO_7_writeBackGPR_T) @[utils.scala 10:20]
    when _debugFIFO_7_writeBackGPR_T_1 : @[utils.scala 10:20]
      debugFIFO_7_writeBackGPR_insType <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_7_writeBackGPR_T_2 = eq(UInt<5>("h17"), _debugFIFO_7_writeBackGPR_T) @[utils.scala 10:20]
      when _debugFIFO_7_writeBackGPR_T_2 : @[utils.scala 10:20]
        debugFIFO_7_writeBackGPR_insType <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_7_writeBackGPR_T_3 = eq(UInt<7>("h6f"), _debugFIFO_7_writeBackGPR_T) @[utils.scala 10:20]
        when _debugFIFO_7_writeBackGPR_T_3 : @[utils.scala 10:20]
          debugFIFO_7_writeBackGPR_insType <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_7_writeBackGPR_T_4 = eq(UInt<7>("h67"), _debugFIFO_7_writeBackGPR_T) @[utils.scala 10:20]
          when _debugFIFO_7_writeBackGPR_T_4 : @[utils.scala 10:20]
            debugFIFO_7_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_7_writeBackGPR_T_5 = eq(UInt<7>("h63"), _debugFIFO_7_writeBackGPR_T) @[utils.scala 10:20]
            when _debugFIFO_7_writeBackGPR_T_5 : @[utils.scala 10:20]
              debugFIFO_7_writeBackGPR_insType <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_7_writeBackGPR_T_6 = eq(UInt<2>("h3"), _debugFIFO_7_writeBackGPR_T) @[utils.scala 10:20]
              when _debugFIFO_7_writeBackGPR_T_6 : @[utils.scala 10:20]
                debugFIFO_7_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_7_writeBackGPR_T_7 = eq(UInt<6>("h23"), _debugFIFO_7_writeBackGPR_T) @[utils.scala 10:20]
                when _debugFIFO_7_writeBackGPR_T_7 : @[utils.scala 10:20]
                  debugFIFO_7_writeBackGPR_insType <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_7_writeBackGPR_T_8 = eq(UInt<5>("h13"), _debugFIFO_7_writeBackGPR_T) @[utils.scala 10:20]
                  when _debugFIFO_7_writeBackGPR_T_8 : @[utils.scala 10:20]
                    debugFIFO_7_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_7_writeBackGPR_T_9 = eq(UInt<5>("h1b"), _debugFIFO_7_writeBackGPR_T) @[utils.scala 10:20]
                    when _debugFIFO_7_writeBackGPR_T_9 : @[utils.scala 10:20]
                      debugFIFO_7_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_7_writeBackGPR_T_10 = eq(UInt<6>("h33"), _debugFIFO_7_writeBackGPR_T) @[utils.scala 10:20]
                      when _debugFIFO_7_writeBackGPR_T_10 : @[utils.scala 10:20]
                        debugFIFO_7_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_7_writeBackGPR_T_11 = eq(UInt<6>("h3b"), _debugFIFO_7_writeBackGPR_T) @[utils.scala 10:20]
                        when _debugFIFO_7_writeBackGPR_T_11 : @[utils.scala 10:20]
                          debugFIFO_7_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_7_writeBackGPR_T_12 = eq(UInt<7>("h73"), _debugFIFO_7_writeBackGPR_T) @[utils.scala 10:20]
                          when _debugFIFO_7_writeBackGPR_T_12 : @[utils.scala 10:20]
                            debugFIFO_7_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_7_writeBackGPR_T_13 = eq(UInt<4>("hf"), _debugFIFO_7_writeBackGPR_T) @[utils.scala 10:20]
                            when _debugFIFO_7_writeBackGPR_T_13 : @[utils.scala 10:20]
                              debugFIFO_7_writeBackGPR_insType <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_7_writeBackGPR_T_14 = eq(UInt<6>("h2f"), _debugFIFO_7_writeBackGPR_T) @[utils.scala 10:20]
                              when _debugFIFO_7_writeBackGPR_T_14 : @[utils.scala 10:20]
                                debugFIFO_7_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_7_writeBackGPR_T_15 = eq(UInt<1>("h1"), debugFIFO_7_writeBackGPR_insType) @[rob.scala 52:141]
    node _debugFIFO_7_writeBackGPR_T_16 = bits(debugFIFO[7].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_7_writeBackGPR_insType_1 : UInt<3>
    debugFIFO_7_writeBackGPR_insType_1 <= UInt<3>("h0")
    node _debugFIFO_7_writeBackGPR_T_17 = eq(UInt<6>("h37"), _debugFIFO_7_writeBackGPR_T_16) @[utils.scala 10:20]
    when _debugFIFO_7_writeBackGPR_T_17 : @[utils.scala 10:20]
      debugFIFO_7_writeBackGPR_insType_1 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_7_writeBackGPR_T_18 = eq(UInt<5>("h17"), _debugFIFO_7_writeBackGPR_T_16) @[utils.scala 10:20]
      when _debugFIFO_7_writeBackGPR_T_18 : @[utils.scala 10:20]
        debugFIFO_7_writeBackGPR_insType_1 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_7_writeBackGPR_T_19 = eq(UInt<7>("h6f"), _debugFIFO_7_writeBackGPR_T_16) @[utils.scala 10:20]
        when _debugFIFO_7_writeBackGPR_T_19 : @[utils.scala 10:20]
          debugFIFO_7_writeBackGPR_insType_1 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_7_writeBackGPR_T_20 = eq(UInt<7>("h67"), _debugFIFO_7_writeBackGPR_T_16) @[utils.scala 10:20]
          when _debugFIFO_7_writeBackGPR_T_20 : @[utils.scala 10:20]
            debugFIFO_7_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_7_writeBackGPR_T_21 = eq(UInt<7>("h63"), _debugFIFO_7_writeBackGPR_T_16) @[utils.scala 10:20]
            when _debugFIFO_7_writeBackGPR_T_21 : @[utils.scala 10:20]
              debugFIFO_7_writeBackGPR_insType_1 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_7_writeBackGPR_T_22 = eq(UInt<2>("h3"), _debugFIFO_7_writeBackGPR_T_16) @[utils.scala 10:20]
              when _debugFIFO_7_writeBackGPR_T_22 : @[utils.scala 10:20]
                debugFIFO_7_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_7_writeBackGPR_T_23 = eq(UInt<6>("h23"), _debugFIFO_7_writeBackGPR_T_16) @[utils.scala 10:20]
                when _debugFIFO_7_writeBackGPR_T_23 : @[utils.scala 10:20]
                  debugFIFO_7_writeBackGPR_insType_1 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_7_writeBackGPR_T_24 = eq(UInt<5>("h13"), _debugFIFO_7_writeBackGPR_T_16) @[utils.scala 10:20]
                  when _debugFIFO_7_writeBackGPR_T_24 : @[utils.scala 10:20]
                    debugFIFO_7_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_7_writeBackGPR_T_25 = eq(UInt<5>("h1b"), _debugFIFO_7_writeBackGPR_T_16) @[utils.scala 10:20]
                    when _debugFIFO_7_writeBackGPR_T_25 : @[utils.scala 10:20]
                      debugFIFO_7_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_7_writeBackGPR_T_26 = eq(UInt<6>("h33"), _debugFIFO_7_writeBackGPR_T_16) @[utils.scala 10:20]
                      when _debugFIFO_7_writeBackGPR_T_26 : @[utils.scala 10:20]
                        debugFIFO_7_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_7_writeBackGPR_T_27 = eq(UInt<6>("h3b"), _debugFIFO_7_writeBackGPR_T_16) @[utils.scala 10:20]
                        when _debugFIFO_7_writeBackGPR_T_27 : @[utils.scala 10:20]
                          debugFIFO_7_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_7_writeBackGPR_T_28 = eq(UInt<7>("h73"), _debugFIFO_7_writeBackGPR_T_16) @[utils.scala 10:20]
                          when _debugFIFO_7_writeBackGPR_T_28 : @[utils.scala 10:20]
                            debugFIFO_7_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_7_writeBackGPR_T_29 = eq(UInt<4>("hf"), _debugFIFO_7_writeBackGPR_T_16) @[utils.scala 10:20]
                            when _debugFIFO_7_writeBackGPR_T_29 : @[utils.scala 10:20]
                              debugFIFO_7_writeBackGPR_insType_1 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_7_writeBackGPR_T_30 = eq(UInt<6>("h2f"), _debugFIFO_7_writeBackGPR_T_16) @[utils.scala 10:20]
                              when _debugFIFO_7_writeBackGPR_T_30 : @[utils.scala 10:20]
                                debugFIFO_7_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_7_writeBackGPR_T_31 = eq(UInt<1>("h0"), debugFIFO_7_writeBackGPR_insType_1) @[rob.scala 52:141]
    node _debugFIFO_7_writeBackGPR_T_32 = bits(debugFIFO[7].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_7_writeBackGPR_insType_2 : UInt<3>
    debugFIFO_7_writeBackGPR_insType_2 <= UInt<3>("h0")
    node _debugFIFO_7_writeBackGPR_T_33 = eq(UInt<6>("h37"), _debugFIFO_7_writeBackGPR_T_32) @[utils.scala 10:20]
    when _debugFIFO_7_writeBackGPR_T_33 : @[utils.scala 10:20]
      debugFIFO_7_writeBackGPR_insType_2 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_7_writeBackGPR_T_34 = eq(UInt<5>("h17"), _debugFIFO_7_writeBackGPR_T_32) @[utils.scala 10:20]
      when _debugFIFO_7_writeBackGPR_T_34 : @[utils.scala 10:20]
        debugFIFO_7_writeBackGPR_insType_2 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_7_writeBackGPR_T_35 = eq(UInt<7>("h6f"), _debugFIFO_7_writeBackGPR_T_32) @[utils.scala 10:20]
        when _debugFIFO_7_writeBackGPR_T_35 : @[utils.scala 10:20]
          debugFIFO_7_writeBackGPR_insType_2 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_7_writeBackGPR_T_36 = eq(UInt<7>("h67"), _debugFIFO_7_writeBackGPR_T_32) @[utils.scala 10:20]
          when _debugFIFO_7_writeBackGPR_T_36 : @[utils.scala 10:20]
            debugFIFO_7_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_7_writeBackGPR_T_37 = eq(UInt<7>("h63"), _debugFIFO_7_writeBackGPR_T_32) @[utils.scala 10:20]
            when _debugFIFO_7_writeBackGPR_T_37 : @[utils.scala 10:20]
              debugFIFO_7_writeBackGPR_insType_2 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_7_writeBackGPR_T_38 = eq(UInt<2>("h3"), _debugFIFO_7_writeBackGPR_T_32) @[utils.scala 10:20]
              when _debugFIFO_7_writeBackGPR_T_38 : @[utils.scala 10:20]
                debugFIFO_7_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_7_writeBackGPR_T_39 = eq(UInt<6>("h23"), _debugFIFO_7_writeBackGPR_T_32) @[utils.scala 10:20]
                when _debugFIFO_7_writeBackGPR_T_39 : @[utils.scala 10:20]
                  debugFIFO_7_writeBackGPR_insType_2 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_7_writeBackGPR_T_40 = eq(UInt<5>("h13"), _debugFIFO_7_writeBackGPR_T_32) @[utils.scala 10:20]
                  when _debugFIFO_7_writeBackGPR_T_40 : @[utils.scala 10:20]
                    debugFIFO_7_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_7_writeBackGPR_T_41 = eq(UInt<5>("h1b"), _debugFIFO_7_writeBackGPR_T_32) @[utils.scala 10:20]
                    when _debugFIFO_7_writeBackGPR_T_41 : @[utils.scala 10:20]
                      debugFIFO_7_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_7_writeBackGPR_T_42 = eq(UInt<6>("h33"), _debugFIFO_7_writeBackGPR_T_32) @[utils.scala 10:20]
                      when _debugFIFO_7_writeBackGPR_T_42 : @[utils.scala 10:20]
                        debugFIFO_7_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_7_writeBackGPR_T_43 = eq(UInt<6>("h3b"), _debugFIFO_7_writeBackGPR_T_32) @[utils.scala 10:20]
                        when _debugFIFO_7_writeBackGPR_T_43 : @[utils.scala 10:20]
                          debugFIFO_7_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_7_writeBackGPR_T_44 = eq(UInt<7>("h73"), _debugFIFO_7_writeBackGPR_T_32) @[utils.scala 10:20]
                          when _debugFIFO_7_writeBackGPR_T_44 : @[utils.scala 10:20]
                            debugFIFO_7_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_7_writeBackGPR_T_45 = eq(UInt<4>("hf"), _debugFIFO_7_writeBackGPR_T_32) @[utils.scala 10:20]
                            when _debugFIFO_7_writeBackGPR_T_45 : @[utils.scala 10:20]
                              debugFIFO_7_writeBackGPR_insType_2 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_7_writeBackGPR_T_46 = eq(UInt<6>("h2f"), _debugFIFO_7_writeBackGPR_T_32) @[utils.scala 10:20]
                              when _debugFIFO_7_writeBackGPR_T_46 : @[utils.scala 10:20]
                                debugFIFO_7_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_7_writeBackGPR_T_47 = eq(UInt<3>("h4"), debugFIFO_7_writeBackGPR_insType_2) @[rob.scala 52:141]
    node _debugFIFO_7_writeBackGPR_T_48 = bits(debugFIFO[7].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_7_writeBackGPR_insType_3 : UInt<3>
    debugFIFO_7_writeBackGPR_insType_3 <= UInt<3>("h0")
    node _debugFIFO_7_writeBackGPR_T_49 = eq(UInt<6>("h37"), _debugFIFO_7_writeBackGPR_T_48) @[utils.scala 10:20]
    when _debugFIFO_7_writeBackGPR_T_49 : @[utils.scala 10:20]
      debugFIFO_7_writeBackGPR_insType_3 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_7_writeBackGPR_T_50 = eq(UInt<5>("h17"), _debugFIFO_7_writeBackGPR_T_48) @[utils.scala 10:20]
      when _debugFIFO_7_writeBackGPR_T_50 : @[utils.scala 10:20]
        debugFIFO_7_writeBackGPR_insType_3 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_7_writeBackGPR_T_51 = eq(UInt<7>("h6f"), _debugFIFO_7_writeBackGPR_T_48) @[utils.scala 10:20]
        when _debugFIFO_7_writeBackGPR_T_51 : @[utils.scala 10:20]
          debugFIFO_7_writeBackGPR_insType_3 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_7_writeBackGPR_T_52 = eq(UInt<7>("h67"), _debugFIFO_7_writeBackGPR_T_48) @[utils.scala 10:20]
          when _debugFIFO_7_writeBackGPR_T_52 : @[utils.scala 10:20]
            debugFIFO_7_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_7_writeBackGPR_T_53 = eq(UInt<7>("h63"), _debugFIFO_7_writeBackGPR_T_48) @[utils.scala 10:20]
            when _debugFIFO_7_writeBackGPR_T_53 : @[utils.scala 10:20]
              debugFIFO_7_writeBackGPR_insType_3 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_7_writeBackGPR_T_54 = eq(UInt<2>("h3"), _debugFIFO_7_writeBackGPR_T_48) @[utils.scala 10:20]
              when _debugFIFO_7_writeBackGPR_T_54 : @[utils.scala 10:20]
                debugFIFO_7_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_7_writeBackGPR_T_55 = eq(UInt<6>("h23"), _debugFIFO_7_writeBackGPR_T_48) @[utils.scala 10:20]
                when _debugFIFO_7_writeBackGPR_T_55 : @[utils.scala 10:20]
                  debugFIFO_7_writeBackGPR_insType_3 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_7_writeBackGPR_T_56 = eq(UInt<5>("h13"), _debugFIFO_7_writeBackGPR_T_48) @[utils.scala 10:20]
                  when _debugFIFO_7_writeBackGPR_T_56 : @[utils.scala 10:20]
                    debugFIFO_7_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_7_writeBackGPR_T_57 = eq(UInt<5>("h1b"), _debugFIFO_7_writeBackGPR_T_48) @[utils.scala 10:20]
                    when _debugFIFO_7_writeBackGPR_T_57 : @[utils.scala 10:20]
                      debugFIFO_7_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_7_writeBackGPR_T_58 = eq(UInt<6>("h33"), _debugFIFO_7_writeBackGPR_T_48) @[utils.scala 10:20]
                      when _debugFIFO_7_writeBackGPR_T_58 : @[utils.scala 10:20]
                        debugFIFO_7_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_7_writeBackGPR_T_59 = eq(UInt<6>("h3b"), _debugFIFO_7_writeBackGPR_T_48) @[utils.scala 10:20]
                        when _debugFIFO_7_writeBackGPR_T_59 : @[utils.scala 10:20]
                          debugFIFO_7_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_7_writeBackGPR_T_60 = eq(UInt<7>("h73"), _debugFIFO_7_writeBackGPR_T_48) @[utils.scala 10:20]
                          when _debugFIFO_7_writeBackGPR_T_60 : @[utils.scala 10:20]
                            debugFIFO_7_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_7_writeBackGPR_T_61 = eq(UInt<4>("hf"), _debugFIFO_7_writeBackGPR_T_48) @[utils.scala 10:20]
                            when _debugFIFO_7_writeBackGPR_T_61 : @[utils.scala 10:20]
                              debugFIFO_7_writeBackGPR_insType_3 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_7_writeBackGPR_T_62 = eq(UInt<6>("h2f"), _debugFIFO_7_writeBackGPR_T_48) @[utils.scala 10:20]
                              when _debugFIFO_7_writeBackGPR_T_62 : @[utils.scala 10:20]
                                debugFIFO_7_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_7_writeBackGPR_T_63 = eq(UInt<3>("h5"), debugFIFO_7_writeBackGPR_insType_3) @[rob.scala 52:141]
    node _debugFIFO_7_writeBackGPR_T_64 = or(_debugFIFO_7_writeBackGPR_T_15, _debugFIFO_7_writeBackGPR_T_31) @[rob.scala 52:197]
    node _debugFIFO_7_writeBackGPR_T_65 = or(_debugFIFO_7_writeBackGPR_T_64, _debugFIFO_7_writeBackGPR_T_47) @[rob.scala 52:197]
    node _debugFIFO_7_writeBackGPR_T_66 = or(_debugFIFO_7_writeBackGPR_T_65, _debugFIFO_7_writeBackGPR_T_63) @[rob.scala 52:197]
    node _debugFIFO_7_writeBackGPR_T_67 = bits(debugFIFO[7].instruction, 11, 7) @[rob.scala 52:223]
    node _debugFIFO_7_writeBackGPR_T_68 = orr(_debugFIFO_7_writeBackGPR_T_67) @[rob.scala 52:231]
    node _debugFIFO_7_writeBackGPR_T_69 = and(_debugFIFO_7_writeBackGPR_T_66, _debugFIFO_7_writeBackGPR_T_68) @[rob.scala 52:203]
    node _debugFIFO_7_writeBackGPR_T_70 = and(_debugFIFO_7_writeBackGPR_T_69, debugFIFO[7].valid) @[rob.scala 52:235]
    debugFIFO[7].writeBackGPR <= _debugFIFO_7_writeBackGPR_T_70 @[rob.scala 52:52]
    node _debugFIFO_8_writeBackGPR_T = bits(debugFIFO[8].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_8_writeBackGPR_insType : UInt<3>
    debugFIFO_8_writeBackGPR_insType <= UInt<3>("h0")
    node _debugFIFO_8_writeBackGPR_T_1 = eq(UInt<6>("h37"), _debugFIFO_8_writeBackGPR_T) @[utils.scala 10:20]
    when _debugFIFO_8_writeBackGPR_T_1 : @[utils.scala 10:20]
      debugFIFO_8_writeBackGPR_insType <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_8_writeBackGPR_T_2 = eq(UInt<5>("h17"), _debugFIFO_8_writeBackGPR_T) @[utils.scala 10:20]
      when _debugFIFO_8_writeBackGPR_T_2 : @[utils.scala 10:20]
        debugFIFO_8_writeBackGPR_insType <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_8_writeBackGPR_T_3 = eq(UInt<7>("h6f"), _debugFIFO_8_writeBackGPR_T) @[utils.scala 10:20]
        when _debugFIFO_8_writeBackGPR_T_3 : @[utils.scala 10:20]
          debugFIFO_8_writeBackGPR_insType <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_8_writeBackGPR_T_4 = eq(UInt<7>("h67"), _debugFIFO_8_writeBackGPR_T) @[utils.scala 10:20]
          when _debugFIFO_8_writeBackGPR_T_4 : @[utils.scala 10:20]
            debugFIFO_8_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_8_writeBackGPR_T_5 = eq(UInt<7>("h63"), _debugFIFO_8_writeBackGPR_T) @[utils.scala 10:20]
            when _debugFIFO_8_writeBackGPR_T_5 : @[utils.scala 10:20]
              debugFIFO_8_writeBackGPR_insType <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_8_writeBackGPR_T_6 = eq(UInt<2>("h3"), _debugFIFO_8_writeBackGPR_T) @[utils.scala 10:20]
              when _debugFIFO_8_writeBackGPR_T_6 : @[utils.scala 10:20]
                debugFIFO_8_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_8_writeBackGPR_T_7 = eq(UInt<6>("h23"), _debugFIFO_8_writeBackGPR_T) @[utils.scala 10:20]
                when _debugFIFO_8_writeBackGPR_T_7 : @[utils.scala 10:20]
                  debugFIFO_8_writeBackGPR_insType <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_8_writeBackGPR_T_8 = eq(UInt<5>("h13"), _debugFIFO_8_writeBackGPR_T) @[utils.scala 10:20]
                  when _debugFIFO_8_writeBackGPR_T_8 : @[utils.scala 10:20]
                    debugFIFO_8_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_8_writeBackGPR_T_9 = eq(UInt<5>("h1b"), _debugFIFO_8_writeBackGPR_T) @[utils.scala 10:20]
                    when _debugFIFO_8_writeBackGPR_T_9 : @[utils.scala 10:20]
                      debugFIFO_8_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_8_writeBackGPR_T_10 = eq(UInt<6>("h33"), _debugFIFO_8_writeBackGPR_T) @[utils.scala 10:20]
                      when _debugFIFO_8_writeBackGPR_T_10 : @[utils.scala 10:20]
                        debugFIFO_8_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_8_writeBackGPR_T_11 = eq(UInt<6>("h3b"), _debugFIFO_8_writeBackGPR_T) @[utils.scala 10:20]
                        when _debugFIFO_8_writeBackGPR_T_11 : @[utils.scala 10:20]
                          debugFIFO_8_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_8_writeBackGPR_T_12 = eq(UInt<7>("h73"), _debugFIFO_8_writeBackGPR_T) @[utils.scala 10:20]
                          when _debugFIFO_8_writeBackGPR_T_12 : @[utils.scala 10:20]
                            debugFIFO_8_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_8_writeBackGPR_T_13 = eq(UInt<4>("hf"), _debugFIFO_8_writeBackGPR_T) @[utils.scala 10:20]
                            when _debugFIFO_8_writeBackGPR_T_13 : @[utils.scala 10:20]
                              debugFIFO_8_writeBackGPR_insType <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_8_writeBackGPR_T_14 = eq(UInt<6>("h2f"), _debugFIFO_8_writeBackGPR_T) @[utils.scala 10:20]
                              when _debugFIFO_8_writeBackGPR_T_14 : @[utils.scala 10:20]
                                debugFIFO_8_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_8_writeBackGPR_T_15 = eq(UInt<1>("h1"), debugFIFO_8_writeBackGPR_insType) @[rob.scala 52:141]
    node _debugFIFO_8_writeBackGPR_T_16 = bits(debugFIFO[8].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_8_writeBackGPR_insType_1 : UInt<3>
    debugFIFO_8_writeBackGPR_insType_1 <= UInt<3>("h0")
    node _debugFIFO_8_writeBackGPR_T_17 = eq(UInt<6>("h37"), _debugFIFO_8_writeBackGPR_T_16) @[utils.scala 10:20]
    when _debugFIFO_8_writeBackGPR_T_17 : @[utils.scala 10:20]
      debugFIFO_8_writeBackGPR_insType_1 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_8_writeBackGPR_T_18 = eq(UInt<5>("h17"), _debugFIFO_8_writeBackGPR_T_16) @[utils.scala 10:20]
      when _debugFIFO_8_writeBackGPR_T_18 : @[utils.scala 10:20]
        debugFIFO_8_writeBackGPR_insType_1 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_8_writeBackGPR_T_19 = eq(UInt<7>("h6f"), _debugFIFO_8_writeBackGPR_T_16) @[utils.scala 10:20]
        when _debugFIFO_8_writeBackGPR_T_19 : @[utils.scala 10:20]
          debugFIFO_8_writeBackGPR_insType_1 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_8_writeBackGPR_T_20 = eq(UInt<7>("h67"), _debugFIFO_8_writeBackGPR_T_16) @[utils.scala 10:20]
          when _debugFIFO_8_writeBackGPR_T_20 : @[utils.scala 10:20]
            debugFIFO_8_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_8_writeBackGPR_T_21 = eq(UInt<7>("h63"), _debugFIFO_8_writeBackGPR_T_16) @[utils.scala 10:20]
            when _debugFIFO_8_writeBackGPR_T_21 : @[utils.scala 10:20]
              debugFIFO_8_writeBackGPR_insType_1 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_8_writeBackGPR_T_22 = eq(UInt<2>("h3"), _debugFIFO_8_writeBackGPR_T_16) @[utils.scala 10:20]
              when _debugFIFO_8_writeBackGPR_T_22 : @[utils.scala 10:20]
                debugFIFO_8_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_8_writeBackGPR_T_23 = eq(UInt<6>("h23"), _debugFIFO_8_writeBackGPR_T_16) @[utils.scala 10:20]
                when _debugFIFO_8_writeBackGPR_T_23 : @[utils.scala 10:20]
                  debugFIFO_8_writeBackGPR_insType_1 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_8_writeBackGPR_T_24 = eq(UInt<5>("h13"), _debugFIFO_8_writeBackGPR_T_16) @[utils.scala 10:20]
                  when _debugFIFO_8_writeBackGPR_T_24 : @[utils.scala 10:20]
                    debugFIFO_8_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_8_writeBackGPR_T_25 = eq(UInt<5>("h1b"), _debugFIFO_8_writeBackGPR_T_16) @[utils.scala 10:20]
                    when _debugFIFO_8_writeBackGPR_T_25 : @[utils.scala 10:20]
                      debugFIFO_8_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_8_writeBackGPR_T_26 = eq(UInt<6>("h33"), _debugFIFO_8_writeBackGPR_T_16) @[utils.scala 10:20]
                      when _debugFIFO_8_writeBackGPR_T_26 : @[utils.scala 10:20]
                        debugFIFO_8_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_8_writeBackGPR_T_27 = eq(UInt<6>("h3b"), _debugFIFO_8_writeBackGPR_T_16) @[utils.scala 10:20]
                        when _debugFIFO_8_writeBackGPR_T_27 : @[utils.scala 10:20]
                          debugFIFO_8_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_8_writeBackGPR_T_28 = eq(UInt<7>("h73"), _debugFIFO_8_writeBackGPR_T_16) @[utils.scala 10:20]
                          when _debugFIFO_8_writeBackGPR_T_28 : @[utils.scala 10:20]
                            debugFIFO_8_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_8_writeBackGPR_T_29 = eq(UInt<4>("hf"), _debugFIFO_8_writeBackGPR_T_16) @[utils.scala 10:20]
                            when _debugFIFO_8_writeBackGPR_T_29 : @[utils.scala 10:20]
                              debugFIFO_8_writeBackGPR_insType_1 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_8_writeBackGPR_T_30 = eq(UInt<6>("h2f"), _debugFIFO_8_writeBackGPR_T_16) @[utils.scala 10:20]
                              when _debugFIFO_8_writeBackGPR_T_30 : @[utils.scala 10:20]
                                debugFIFO_8_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_8_writeBackGPR_T_31 = eq(UInt<1>("h0"), debugFIFO_8_writeBackGPR_insType_1) @[rob.scala 52:141]
    node _debugFIFO_8_writeBackGPR_T_32 = bits(debugFIFO[8].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_8_writeBackGPR_insType_2 : UInt<3>
    debugFIFO_8_writeBackGPR_insType_2 <= UInt<3>("h0")
    node _debugFIFO_8_writeBackGPR_T_33 = eq(UInt<6>("h37"), _debugFIFO_8_writeBackGPR_T_32) @[utils.scala 10:20]
    when _debugFIFO_8_writeBackGPR_T_33 : @[utils.scala 10:20]
      debugFIFO_8_writeBackGPR_insType_2 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_8_writeBackGPR_T_34 = eq(UInt<5>("h17"), _debugFIFO_8_writeBackGPR_T_32) @[utils.scala 10:20]
      when _debugFIFO_8_writeBackGPR_T_34 : @[utils.scala 10:20]
        debugFIFO_8_writeBackGPR_insType_2 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_8_writeBackGPR_T_35 = eq(UInt<7>("h6f"), _debugFIFO_8_writeBackGPR_T_32) @[utils.scala 10:20]
        when _debugFIFO_8_writeBackGPR_T_35 : @[utils.scala 10:20]
          debugFIFO_8_writeBackGPR_insType_2 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_8_writeBackGPR_T_36 = eq(UInt<7>("h67"), _debugFIFO_8_writeBackGPR_T_32) @[utils.scala 10:20]
          when _debugFIFO_8_writeBackGPR_T_36 : @[utils.scala 10:20]
            debugFIFO_8_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_8_writeBackGPR_T_37 = eq(UInt<7>("h63"), _debugFIFO_8_writeBackGPR_T_32) @[utils.scala 10:20]
            when _debugFIFO_8_writeBackGPR_T_37 : @[utils.scala 10:20]
              debugFIFO_8_writeBackGPR_insType_2 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_8_writeBackGPR_T_38 = eq(UInt<2>("h3"), _debugFIFO_8_writeBackGPR_T_32) @[utils.scala 10:20]
              when _debugFIFO_8_writeBackGPR_T_38 : @[utils.scala 10:20]
                debugFIFO_8_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_8_writeBackGPR_T_39 = eq(UInt<6>("h23"), _debugFIFO_8_writeBackGPR_T_32) @[utils.scala 10:20]
                when _debugFIFO_8_writeBackGPR_T_39 : @[utils.scala 10:20]
                  debugFIFO_8_writeBackGPR_insType_2 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_8_writeBackGPR_T_40 = eq(UInt<5>("h13"), _debugFIFO_8_writeBackGPR_T_32) @[utils.scala 10:20]
                  when _debugFIFO_8_writeBackGPR_T_40 : @[utils.scala 10:20]
                    debugFIFO_8_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_8_writeBackGPR_T_41 = eq(UInt<5>("h1b"), _debugFIFO_8_writeBackGPR_T_32) @[utils.scala 10:20]
                    when _debugFIFO_8_writeBackGPR_T_41 : @[utils.scala 10:20]
                      debugFIFO_8_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_8_writeBackGPR_T_42 = eq(UInt<6>("h33"), _debugFIFO_8_writeBackGPR_T_32) @[utils.scala 10:20]
                      when _debugFIFO_8_writeBackGPR_T_42 : @[utils.scala 10:20]
                        debugFIFO_8_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_8_writeBackGPR_T_43 = eq(UInt<6>("h3b"), _debugFIFO_8_writeBackGPR_T_32) @[utils.scala 10:20]
                        when _debugFIFO_8_writeBackGPR_T_43 : @[utils.scala 10:20]
                          debugFIFO_8_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_8_writeBackGPR_T_44 = eq(UInt<7>("h73"), _debugFIFO_8_writeBackGPR_T_32) @[utils.scala 10:20]
                          when _debugFIFO_8_writeBackGPR_T_44 : @[utils.scala 10:20]
                            debugFIFO_8_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_8_writeBackGPR_T_45 = eq(UInt<4>("hf"), _debugFIFO_8_writeBackGPR_T_32) @[utils.scala 10:20]
                            when _debugFIFO_8_writeBackGPR_T_45 : @[utils.scala 10:20]
                              debugFIFO_8_writeBackGPR_insType_2 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_8_writeBackGPR_T_46 = eq(UInt<6>("h2f"), _debugFIFO_8_writeBackGPR_T_32) @[utils.scala 10:20]
                              when _debugFIFO_8_writeBackGPR_T_46 : @[utils.scala 10:20]
                                debugFIFO_8_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_8_writeBackGPR_T_47 = eq(UInt<3>("h4"), debugFIFO_8_writeBackGPR_insType_2) @[rob.scala 52:141]
    node _debugFIFO_8_writeBackGPR_T_48 = bits(debugFIFO[8].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_8_writeBackGPR_insType_3 : UInt<3>
    debugFIFO_8_writeBackGPR_insType_3 <= UInt<3>("h0")
    node _debugFIFO_8_writeBackGPR_T_49 = eq(UInt<6>("h37"), _debugFIFO_8_writeBackGPR_T_48) @[utils.scala 10:20]
    when _debugFIFO_8_writeBackGPR_T_49 : @[utils.scala 10:20]
      debugFIFO_8_writeBackGPR_insType_3 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_8_writeBackGPR_T_50 = eq(UInt<5>("h17"), _debugFIFO_8_writeBackGPR_T_48) @[utils.scala 10:20]
      when _debugFIFO_8_writeBackGPR_T_50 : @[utils.scala 10:20]
        debugFIFO_8_writeBackGPR_insType_3 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_8_writeBackGPR_T_51 = eq(UInt<7>("h6f"), _debugFIFO_8_writeBackGPR_T_48) @[utils.scala 10:20]
        when _debugFIFO_8_writeBackGPR_T_51 : @[utils.scala 10:20]
          debugFIFO_8_writeBackGPR_insType_3 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_8_writeBackGPR_T_52 = eq(UInt<7>("h67"), _debugFIFO_8_writeBackGPR_T_48) @[utils.scala 10:20]
          when _debugFIFO_8_writeBackGPR_T_52 : @[utils.scala 10:20]
            debugFIFO_8_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_8_writeBackGPR_T_53 = eq(UInt<7>("h63"), _debugFIFO_8_writeBackGPR_T_48) @[utils.scala 10:20]
            when _debugFIFO_8_writeBackGPR_T_53 : @[utils.scala 10:20]
              debugFIFO_8_writeBackGPR_insType_3 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_8_writeBackGPR_T_54 = eq(UInt<2>("h3"), _debugFIFO_8_writeBackGPR_T_48) @[utils.scala 10:20]
              when _debugFIFO_8_writeBackGPR_T_54 : @[utils.scala 10:20]
                debugFIFO_8_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_8_writeBackGPR_T_55 = eq(UInt<6>("h23"), _debugFIFO_8_writeBackGPR_T_48) @[utils.scala 10:20]
                when _debugFIFO_8_writeBackGPR_T_55 : @[utils.scala 10:20]
                  debugFIFO_8_writeBackGPR_insType_3 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_8_writeBackGPR_T_56 = eq(UInt<5>("h13"), _debugFIFO_8_writeBackGPR_T_48) @[utils.scala 10:20]
                  when _debugFIFO_8_writeBackGPR_T_56 : @[utils.scala 10:20]
                    debugFIFO_8_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_8_writeBackGPR_T_57 = eq(UInt<5>("h1b"), _debugFIFO_8_writeBackGPR_T_48) @[utils.scala 10:20]
                    when _debugFIFO_8_writeBackGPR_T_57 : @[utils.scala 10:20]
                      debugFIFO_8_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_8_writeBackGPR_T_58 = eq(UInt<6>("h33"), _debugFIFO_8_writeBackGPR_T_48) @[utils.scala 10:20]
                      when _debugFIFO_8_writeBackGPR_T_58 : @[utils.scala 10:20]
                        debugFIFO_8_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_8_writeBackGPR_T_59 = eq(UInt<6>("h3b"), _debugFIFO_8_writeBackGPR_T_48) @[utils.scala 10:20]
                        when _debugFIFO_8_writeBackGPR_T_59 : @[utils.scala 10:20]
                          debugFIFO_8_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_8_writeBackGPR_T_60 = eq(UInt<7>("h73"), _debugFIFO_8_writeBackGPR_T_48) @[utils.scala 10:20]
                          when _debugFIFO_8_writeBackGPR_T_60 : @[utils.scala 10:20]
                            debugFIFO_8_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_8_writeBackGPR_T_61 = eq(UInt<4>("hf"), _debugFIFO_8_writeBackGPR_T_48) @[utils.scala 10:20]
                            when _debugFIFO_8_writeBackGPR_T_61 : @[utils.scala 10:20]
                              debugFIFO_8_writeBackGPR_insType_3 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_8_writeBackGPR_T_62 = eq(UInt<6>("h2f"), _debugFIFO_8_writeBackGPR_T_48) @[utils.scala 10:20]
                              when _debugFIFO_8_writeBackGPR_T_62 : @[utils.scala 10:20]
                                debugFIFO_8_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_8_writeBackGPR_T_63 = eq(UInt<3>("h5"), debugFIFO_8_writeBackGPR_insType_3) @[rob.scala 52:141]
    node _debugFIFO_8_writeBackGPR_T_64 = or(_debugFIFO_8_writeBackGPR_T_15, _debugFIFO_8_writeBackGPR_T_31) @[rob.scala 52:197]
    node _debugFIFO_8_writeBackGPR_T_65 = or(_debugFIFO_8_writeBackGPR_T_64, _debugFIFO_8_writeBackGPR_T_47) @[rob.scala 52:197]
    node _debugFIFO_8_writeBackGPR_T_66 = or(_debugFIFO_8_writeBackGPR_T_65, _debugFIFO_8_writeBackGPR_T_63) @[rob.scala 52:197]
    node _debugFIFO_8_writeBackGPR_T_67 = bits(debugFIFO[8].instruction, 11, 7) @[rob.scala 52:223]
    node _debugFIFO_8_writeBackGPR_T_68 = orr(_debugFIFO_8_writeBackGPR_T_67) @[rob.scala 52:231]
    node _debugFIFO_8_writeBackGPR_T_69 = and(_debugFIFO_8_writeBackGPR_T_66, _debugFIFO_8_writeBackGPR_T_68) @[rob.scala 52:203]
    node _debugFIFO_8_writeBackGPR_T_70 = and(_debugFIFO_8_writeBackGPR_T_69, debugFIFO[8].valid) @[rob.scala 52:235]
    debugFIFO[8].writeBackGPR <= _debugFIFO_8_writeBackGPR_T_70 @[rob.scala 52:52]
    node _debugFIFO_9_writeBackGPR_T = bits(debugFIFO[9].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_9_writeBackGPR_insType : UInt<3>
    debugFIFO_9_writeBackGPR_insType <= UInt<3>("h0")
    node _debugFIFO_9_writeBackGPR_T_1 = eq(UInt<6>("h37"), _debugFIFO_9_writeBackGPR_T) @[utils.scala 10:20]
    when _debugFIFO_9_writeBackGPR_T_1 : @[utils.scala 10:20]
      debugFIFO_9_writeBackGPR_insType <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_9_writeBackGPR_T_2 = eq(UInt<5>("h17"), _debugFIFO_9_writeBackGPR_T) @[utils.scala 10:20]
      when _debugFIFO_9_writeBackGPR_T_2 : @[utils.scala 10:20]
        debugFIFO_9_writeBackGPR_insType <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_9_writeBackGPR_T_3 = eq(UInt<7>("h6f"), _debugFIFO_9_writeBackGPR_T) @[utils.scala 10:20]
        when _debugFIFO_9_writeBackGPR_T_3 : @[utils.scala 10:20]
          debugFIFO_9_writeBackGPR_insType <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_9_writeBackGPR_T_4 = eq(UInt<7>("h67"), _debugFIFO_9_writeBackGPR_T) @[utils.scala 10:20]
          when _debugFIFO_9_writeBackGPR_T_4 : @[utils.scala 10:20]
            debugFIFO_9_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_9_writeBackGPR_T_5 = eq(UInt<7>("h63"), _debugFIFO_9_writeBackGPR_T) @[utils.scala 10:20]
            when _debugFIFO_9_writeBackGPR_T_5 : @[utils.scala 10:20]
              debugFIFO_9_writeBackGPR_insType <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_9_writeBackGPR_T_6 = eq(UInt<2>("h3"), _debugFIFO_9_writeBackGPR_T) @[utils.scala 10:20]
              when _debugFIFO_9_writeBackGPR_T_6 : @[utils.scala 10:20]
                debugFIFO_9_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_9_writeBackGPR_T_7 = eq(UInt<6>("h23"), _debugFIFO_9_writeBackGPR_T) @[utils.scala 10:20]
                when _debugFIFO_9_writeBackGPR_T_7 : @[utils.scala 10:20]
                  debugFIFO_9_writeBackGPR_insType <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_9_writeBackGPR_T_8 = eq(UInt<5>("h13"), _debugFIFO_9_writeBackGPR_T) @[utils.scala 10:20]
                  when _debugFIFO_9_writeBackGPR_T_8 : @[utils.scala 10:20]
                    debugFIFO_9_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_9_writeBackGPR_T_9 = eq(UInt<5>("h1b"), _debugFIFO_9_writeBackGPR_T) @[utils.scala 10:20]
                    when _debugFIFO_9_writeBackGPR_T_9 : @[utils.scala 10:20]
                      debugFIFO_9_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_9_writeBackGPR_T_10 = eq(UInt<6>("h33"), _debugFIFO_9_writeBackGPR_T) @[utils.scala 10:20]
                      when _debugFIFO_9_writeBackGPR_T_10 : @[utils.scala 10:20]
                        debugFIFO_9_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_9_writeBackGPR_T_11 = eq(UInt<6>("h3b"), _debugFIFO_9_writeBackGPR_T) @[utils.scala 10:20]
                        when _debugFIFO_9_writeBackGPR_T_11 : @[utils.scala 10:20]
                          debugFIFO_9_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_9_writeBackGPR_T_12 = eq(UInt<7>("h73"), _debugFIFO_9_writeBackGPR_T) @[utils.scala 10:20]
                          when _debugFIFO_9_writeBackGPR_T_12 : @[utils.scala 10:20]
                            debugFIFO_9_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_9_writeBackGPR_T_13 = eq(UInt<4>("hf"), _debugFIFO_9_writeBackGPR_T) @[utils.scala 10:20]
                            when _debugFIFO_9_writeBackGPR_T_13 : @[utils.scala 10:20]
                              debugFIFO_9_writeBackGPR_insType <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_9_writeBackGPR_T_14 = eq(UInt<6>("h2f"), _debugFIFO_9_writeBackGPR_T) @[utils.scala 10:20]
                              when _debugFIFO_9_writeBackGPR_T_14 : @[utils.scala 10:20]
                                debugFIFO_9_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_9_writeBackGPR_T_15 = eq(UInt<1>("h1"), debugFIFO_9_writeBackGPR_insType) @[rob.scala 52:141]
    node _debugFIFO_9_writeBackGPR_T_16 = bits(debugFIFO[9].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_9_writeBackGPR_insType_1 : UInt<3>
    debugFIFO_9_writeBackGPR_insType_1 <= UInt<3>("h0")
    node _debugFIFO_9_writeBackGPR_T_17 = eq(UInt<6>("h37"), _debugFIFO_9_writeBackGPR_T_16) @[utils.scala 10:20]
    when _debugFIFO_9_writeBackGPR_T_17 : @[utils.scala 10:20]
      debugFIFO_9_writeBackGPR_insType_1 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_9_writeBackGPR_T_18 = eq(UInt<5>("h17"), _debugFIFO_9_writeBackGPR_T_16) @[utils.scala 10:20]
      when _debugFIFO_9_writeBackGPR_T_18 : @[utils.scala 10:20]
        debugFIFO_9_writeBackGPR_insType_1 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_9_writeBackGPR_T_19 = eq(UInt<7>("h6f"), _debugFIFO_9_writeBackGPR_T_16) @[utils.scala 10:20]
        when _debugFIFO_9_writeBackGPR_T_19 : @[utils.scala 10:20]
          debugFIFO_9_writeBackGPR_insType_1 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_9_writeBackGPR_T_20 = eq(UInt<7>("h67"), _debugFIFO_9_writeBackGPR_T_16) @[utils.scala 10:20]
          when _debugFIFO_9_writeBackGPR_T_20 : @[utils.scala 10:20]
            debugFIFO_9_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_9_writeBackGPR_T_21 = eq(UInt<7>("h63"), _debugFIFO_9_writeBackGPR_T_16) @[utils.scala 10:20]
            when _debugFIFO_9_writeBackGPR_T_21 : @[utils.scala 10:20]
              debugFIFO_9_writeBackGPR_insType_1 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_9_writeBackGPR_T_22 = eq(UInt<2>("h3"), _debugFIFO_9_writeBackGPR_T_16) @[utils.scala 10:20]
              when _debugFIFO_9_writeBackGPR_T_22 : @[utils.scala 10:20]
                debugFIFO_9_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_9_writeBackGPR_T_23 = eq(UInt<6>("h23"), _debugFIFO_9_writeBackGPR_T_16) @[utils.scala 10:20]
                when _debugFIFO_9_writeBackGPR_T_23 : @[utils.scala 10:20]
                  debugFIFO_9_writeBackGPR_insType_1 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_9_writeBackGPR_T_24 = eq(UInt<5>("h13"), _debugFIFO_9_writeBackGPR_T_16) @[utils.scala 10:20]
                  when _debugFIFO_9_writeBackGPR_T_24 : @[utils.scala 10:20]
                    debugFIFO_9_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_9_writeBackGPR_T_25 = eq(UInt<5>("h1b"), _debugFIFO_9_writeBackGPR_T_16) @[utils.scala 10:20]
                    when _debugFIFO_9_writeBackGPR_T_25 : @[utils.scala 10:20]
                      debugFIFO_9_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_9_writeBackGPR_T_26 = eq(UInt<6>("h33"), _debugFIFO_9_writeBackGPR_T_16) @[utils.scala 10:20]
                      when _debugFIFO_9_writeBackGPR_T_26 : @[utils.scala 10:20]
                        debugFIFO_9_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_9_writeBackGPR_T_27 = eq(UInt<6>("h3b"), _debugFIFO_9_writeBackGPR_T_16) @[utils.scala 10:20]
                        when _debugFIFO_9_writeBackGPR_T_27 : @[utils.scala 10:20]
                          debugFIFO_9_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_9_writeBackGPR_T_28 = eq(UInt<7>("h73"), _debugFIFO_9_writeBackGPR_T_16) @[utils.scala 10:20]
                          when _debugFIFO_9_writeBackGPR_T_28 : @[utils.scala 10:20]
                            debugFIFO_9_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_9_writeBackGPR_T_29 = eq(UInt<4>("hf"), _debugFIFO_9_writeBackGPR_T_16) @[utils.scala 10:20]
                            when _debugFIFO_9_writeBackGPR_T_29 : @[utils.scala 10:20]
                              debugFIFO_9_writeBackGPR_insType_1 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_9_writeBackGPR_T_30 = eq(UInt<6>("h2f"), _debugFIFO_9_writeBackGPR_T_16) @[utils.scala 10:20]
                              when _debugFIFO_9_writeBackGPR_T_30 : @[utils.scala 10:20]
                                debugFIFO_9_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_9_writeBackGPR_T_31 = eq(UInt<1>("h0"), debugFIFO_9_writeBackGPR_insType_1) @[rob.scala 52:141]
    node _debugFIFO_9_writeBackGPR_T_32 = bits(debugFIFO[9].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_9_writeBackGPR_insType_2 : UInt<3>
    debugFIFO_9_writeBackGPR_insType_2 <= UInt<3>("h0")
    node _debugFIFO_9_writeBackGPR_T_33 = eq(UInt<6>("h37"), _debugFIFO_9_writeBackGPR_T_32) @[utils.scala 10:20]
    when _debugFIFO_9_writeBackGPR_T_33 : @[utils.scala 10:20]
      debugFIFO_9_writeBackGPR_insType_2 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_9_writeBackGPR_T_34 = eq(UInt<5>("h17"), _debugFIFO_9_writeBackGPR_T_32) @[utils.scala 10:20]
      when _debugFIFO_9_writeBackGPR_T_34 : @[utils.scala 10:20]
        debugFIFO_9_writeBackGPR_insType_2 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_9_writeBackGPR_T_35 = eq(UInt<7>("h6f"), _debugFIFO_9_writeBackGPR_T_32) @[utils.scala 10:20]
        when _debugFIFO_9_writeBackGPR_T_35 : @[utils.scala 10:20]
          debugFIFO_9_writeBackGPR_insType_2 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_9_writeBackGPR_T_36 = eq(UInt<7>("h67"), _debugFIFO_9_writeBackGPR_T_32) @[utils.scala 10:20]
          when _debugFIFO_9_writeBackGPR_T_36 : @[utils.scala 10:20]
            debugFIFO_9_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_9_writeBackGPR_T_37 = eq(UInt<7>("h63"), _debugFIFO_9_writeBackGPR_T_32) @[utils.scala 10:20]
            when _debugFIFO_9_writeBackGPR_T_37 : @[utils.scala 10:20]
              debugFIFO_9_writeBackGPR_insType_2 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_9_writeBackGPR_T_38 = eq(UInt<2>("h3"), _debugFIFO_9_writeBackGPR_T_32) @[utils.scala 10:20]
              when _debugFIFO_9_writeBackGPR_T_38 : @[utils.scala 10:20]
                debugFIFO_9_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_9_writeBackGPR_T_39 = eq(UInt<6>("h23"), _debugFIFO_9_writeBackGPR_T_32) @[utils.scala 10:20]
                when _debugFIFO_9_writeBackGPR_T_39 : @[utils.scala 10:20]
                  debugFIFO_9_writeBackGPR_insType_2 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_9_writeBackGPR_T_40 = eq(UInt<5>("h13"), _debugFIFO_9_writeBackGPR_T_32) @[utils.scala 10:20]
                  when _debugFIFO_9_writeBackGPR_T_40 : @[utils.scala 10:20]
                    debugFIFO_9_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_9_writeBackGPR_T_41 = eq(UInt<5>("h1b"), _debugFIFO_9_writeBackGPR_T_32) @[utils.scala 10:20]
                    when _debugFIFO_9_writeBackGPR_T_41 : @[utils.scala 10:20]
                      debugFIFO_9_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_9_writeBackGPR_T_42 = eq(UInt<6>("h33"), _debugFIFO_9_writeBackGPR_T_32) @[utils.scala 10:20]
                      when _debugFIFO_9_writeBackGPR_T_42 : @[utils.scala 10:20]
                        debugFIFO_9_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_9_writeBackGPR_T_43 = eq(UInt<6>("h3b"), _debugFIFO_9_writeBackGPR_T_32) @[utils.scala 10:20]
                        when _debugFIFO_9_writeBackGPR_T_43 : @[utils.scala 10:20]
                          debugFIFO_9_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_9_writeBackGPR_T_44 = eq(UInt<7>("h73"), _debugFIFO_9_writeBackGPR_T_32) @[utils.scala 10:20]
                          when _debugFIFO_9_writeBackGPR_T_44 : @[utils.scala 10:20]
                            debugFIFO_9_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_9_writeBackGPR_T_45 = eq(UInt<4>("hf"), _debugFIFO_9_writeBackGPR_T_32) @[utils.scala 10:20]
                            when _debugFIFO_9_writeBackGPR_T_45 : @[utils.scala 10:20]
                              debugFIFO_9_writeBackGPR_insType_2 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_9_writeBackGPR_T_46 = eq(UInt<6>("h2f"), _debugFIFO_9_writeBackGPR_T_32) @[utils.scala 10:20]
                              when _debugFIFO_9_writeBackGPR_T_46 : @[utils.scala 10:20]
                                debugFIFO_9_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_9_writeBackGPR_T_47 = eq(UInt<3>("h4"), debugFIFO_9_writeBackGPR_insType_2) @[rob.scala 52:141]
    node _debugFIFO_9_writeBackGPR_T_48 = bits(debugFIFO[9].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_9_writeBackGPR_insType_3 : UInt<3>
    debugFIFO_9_writeBackGPR_insType_3 <= UInt<3>("h0")
    node _debugFIFO_9_writeBackGPR_T_49 = eq(UInt<6>("h37"), _debugFIFO_9_writeBackGPR_T_48) @[utils.scala 10:20]
    when _debugFIFO_9_writeBackGPR_T_49 : @[utils.scala 10:20]
      debugFIFO_9_writeBackGPR_insType_3 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_9_writeBackGPR_T_50 = eq(UInt<5>("h17"), _debugFIFO_9_writeBackGPR_T_48) @[utils.scala 10:20]
      when _debugFIFO_9_writeBackGPR_T_50 : @[utils.scala 10:20]
        debugFIFO_9_writeBackGPR_insType_3 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_9_writeBackGPR_T_51 = eq(UInt<7>("h6f"), _debugFIFO_9_writeBackGPR_T_48) @[utils.scala 10:20]
        when _debugFIFO_9_writeBackGPR_T_51 : @[utils.scala 10:20]
          debugFIFO_9_writeBackGPR_insType_3 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_9_writeBackGPR_T_52 = eq(UInt<7>("h67"), _debugFIFO_9_writeBackGPR_T_48) @[utils.scala 10:20]
          when _debugFIFO_9_writeBackGPR_T_52 : @[utils.scala 10:20]
            debugFIFO_9_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_9_writeBackGPR_T_53 = eq(UInt<7>("h63"), _debugFIFO_9_writeBackGPR_T_48) @[utils.scala 10:20]
            when _debugFIFO_9_writeBackGPR_T_53 : @[utils.scala 10:20]
              debugFIFO_9_writeBackGPR_insType_3 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_9_writeBackGPR_T_54 = eq(UInt<2>("h3"), _debugFIFO_9_writeBackGPR_T_48) @[utils.scala 10:20]
              when _debugFIFO_9_writeBackGPR_T_54 : @[utils.scala 10:20]
                debugFIFO_9_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_9_writeBackGPR_T_55 = eq(UInt<6>("h23"), _debugFIFO_9_writeBackGPR_T_48) @[utils.scala 10:20]
                when _debugFIFO_9_writeBackGPR_T_55 : @[utils.scala 10:20]
                  debugFIFO_9_writeBackGPR_insType_3 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_9_writeBackGPR_T_56 = eq(UInt<5>("h13"), _debugFIFO_9_writeBackGPR_T_48) @[utils.scala 10:20]
                  when _debugFIFO_9_writeBackGPR_T_56 : @[utils.scala 10:20]
                    debugFIFO_9_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_9_writeBackGPR_T_57 = eq(UInt<5>("h1b"), _debugFIFO_9_writeBackGPR_T_48) @[utils.scala 10:20]
                    when _debugFIFO_9_writeBackGPR_T_57 : @[utils.scala 10:20]
                      debugFIFO_9_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_9_writeBackGPR_T_58 = eq(UInt<6>("h33"), _debugFIFO_9_writeBackGPR_T_48) @[utils.scala 10:20]
                      when _debugFIFO_9_writeBackGPR_T_58 : @[utils.scala 10:20]
                        debugFIFO_9_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_9_writeBackGPR_T_59 = eq(UInt<6>("h3b"), _debugFIFO_9_writeBackGPR_T_48) @[utils.scala 10:20]
                        when _debugFIFO_9_writeBackGPR_T_59 : @[utils.scala 10:20]
                          debugFIFO_9_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_9_writeBackGPR_T_60 = eq(UInt<7>("h73"), _debugFIFO_9_writeBackGPR_T_48) @[utils.scala 10:20]
                          when _debugFIFO_9_writeBackGPR_T_60 : @[utils.scala 10:20]
                            debugFIFO_9_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_9_writeBackGPR_T_61 = eq(UInt<4>("hf"), _debugFIFO_9_writeBackGPR_T_48) @[utils.scala 10:20]
                            when _debugFIFO_9_writeBackGPR_T_61 : @[utils.scala 10:20]
                              debugFIFO_9_writeBackGPR_insType_3 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_9_writeBackGPR_T_62 = eq(UInt<6>("h2f"), _debugFIFO_9_writeBackGPR_T_48) @[utils.scala 10:20]
                              when _debugFIFO_9_writeBackGPR_T_62 : @[utils.scala 10:20]
                                debugFIFO_9_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_9_writeBackGPR_T_63 = eq(UInt<3>("h5"), debugFIFO_9_writeBackGPR_insType_3) @[rob.scala 52:141]
    node _debugFIFO_9_writeBackGPR_T_64 = or(_debugFIFO_9_writeBackGPR_T_15, _debugFIFO_9_writeBackGPR_T_31) @[rob.scala 52:197]
    node _debugFIFO_9_writeBackGPR_T_65 = or(_debugFIFO_9_writeBackGPR_T_64, _debugFIFO_9_writeBackGPR_T_47) @[rob.scala 52:197]
    node _debugFIFO_9_writeBackGPR_T_66 = or(_debugFIFO_9_writeBackGPR_T_65, _debugFIFO_9_writeBackGPR_T_63) @[rob.scala 52:197]
    node _debugFIFO_9_writeBackGPR_T_67 = bits(debugFIFO[9].instruction, 11, 7) @[rob.scala 52:223]
    node _debugFIFO_9_writeBackGPR_T_68 = orr(_debugFIFO_9_writeBackGPR_T_67) @[rob.scala 52:231]
    node _debugFIFO_9_writeBackGPR_T_69 = and(_debugFIFO_9_writeBackGPR_T_66, _debugFIFO_9_writeBackGPR_T_68) @[rob.scala 52:203]
    node _debugFIFO_9_writeBackGPR_T_70 = and(_debugFIFO_9_writeBackGPR_T_69, debugFIFO[9].valid) @[rob.scala 52:235]
    debugFIFO[9].writeBackGPR <= _debugFIFO_9_writeBackGPR_T_70 @[rob.scala 52:52]
    node _debugFIFO_10_writeBackGPR_T = bits(debugFIFO[10].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_10_writeBackGPR_insType : UInt<3>
    debugFIFO_10_writeBackGPR_insType <= UInt<3>("h0")
    node _debugFIFO_10_writeBackGPR_T_1 = eq(UInt<6>("h37"), _debugFIFO_10_writeBackGPR_T) @[utils.scala 10:20]
    when _debugFIFO_10_writeBackGPR_T_1 : @[utils.scala 10:20]
      debugFIFO_10_writeBackGPR_insType <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_10_writeBackGPR_T_2 = eq(UInt<5>("h17"), _debugFIFO_10_writeBackGPR_T) @[utils.scala 10:20]
      when _debugFIFO_10_writeBackGPR_T_2 : @[utils.scala 10:20]
        debugFIFO_10_writeBackGPR_insType <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_10_writeBackGPR_T_3 = eq(UInt<7>("h6f"), _debugFIFO_10_writeBackGPR_T) @[utils.scala 10:20]
        when _debugFIFO_10_writeBackGPR_T_3 : @[utils.scala 10:20]
          debugFIFO_10_writeBackGPR_insType <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_10_writeBackGPR_T_4 = eq(UInt<7>("h67"), _debugFIFO_10_writeBackGPR_T) @[utils.scala 10:20]
          when _debugFIFO_10_writeBackGPR_T_4 : @[utils.scala 10:20]
            debugFIFO_10_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_10_writeBackGPR_T_5 = eq(UInt<7>("h63"), _debugFIFO_10_writeBackGPR_T) @[utils.scala 10:20]
            when _debugFIFO_10_writeBackGPR_T_5 : @[utils.scala 10:20]
              debugFIFO_10_writeBackGPR_insType <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_10_writeBackGPR_T_6 = eq(UInt<2>("h3"), _debugFIFO_10_writeBackGPR_T) @[utils.scala 10:20]
              when _debugFIFO_10_writeBackGPR_T_6 : @[utils.scala 10:20]
                debugFIFO_10_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_10_writeBackGPR_T_7 = eq(UInt<6>("h23"), _debugFIFO_10_writeBackGPR_T) @[utils.scala 10:20]
                when _debugFIFO_10_writeBackGPR_T_7 : @[utils.scala 10:20]
                  debugFIFO_10_writeBackGPR_insType <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_10_writeBackGPR_T_8 = eq(UInt<5>("h13"), _debugFIFO_10_writeBackGPR_T) @[utils.scala 10:20]
                  when _debugFIFO_10_writeBackGPR_T_8 : @[utils.scala 10:20]
                    debugFIFO_10_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_10_writeBackGPR_T_9 = eq(UInt<5>("h1b"), _debugFIFO_10_writeBackGPR_T) @[utils.scala 10:20]
                    when _debugFIFO_10_writeBackGPR_T_9 : @[utils.scala 10:20]
                      debugFIFO_10_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_10_writeBackGPR_T_10 = eq(UInt<6>("h33"), _debugFIFO_10_writeBackGPR_T) @[utils.scala 10:20]
                      when _debugFIFO_10_writeBackGPR_T_10 : @[utils.scala 10:20]
                        debugFIFO_10_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_10_writeBackGPR_T_11 = eq(UInt<6>("h3b"), _debugFIFO_10_writeBackGPR_T) @[utils.scala 10:20]
                        when _debugFIFO_10_writeBackGPR_T_11 : @[utils.scala 10:20]
                          debugFIFO_10_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_10_writeBackGPR_T_12 = eq(UInt<7>("h73"), _debugFIFO_10_writeBackGPR_T) @[utils.scala 10:20]
                          when _debugFIFO_10_writeBackGPR_T_12 : @[utils.scala 10:20]
                            debugFIFO_10_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_10_writeBackGPR_T_13 = eq(UInt<4>("hf"), _debugFIFO_10_writeBackGPR_T) @[utils.scala 10:20]
                            when _debugFIFO_10_writeBackGPR_T_13 : @[utils.scala 10:20]
                              debugFIFO_10_writeBackGPR_insType <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_10_writeBackGPR_T_14 = eq(UInt<6>("h2f"), _debugFIFO_10_writeBackGPR_T) @[utils.scala 10:20]
                              when _debugFIFO_10_writeBackGPR_T_14 : @[utils.scala 10:20]
                                debugFIFO_10_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_10_writeBackGPR_T_15 = eq(UInt<1>("h1"), debugFIFO_10_writeBackGPR_insType) @[rob.scala 52:141]
    node _debugFIFO_10_writeBackGPR_T_16 = bits(debugFIFO[10].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_10_writeBackGPR_insType_1 : UInt<3>
    debugFIFO_10_writeBackGPR_insType_1 <= UInt<3>("h0")
    node _debugFIFO_10_writeBackGPR_T_17 = eq(UInt<6>("h37"), _debugFIFO_10_writeBackGPR_T_16) @[utils.scala 10:20]
    when _debugFIFO_10_writeBackGPR_T_17 : @[utils.scala 10:20]
      debugFIFO_10_writeBackGPR_insType_1 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_10_writeBackGPR_T_18 = eq(UInt<5>("h17"), _debugFIFO_10_writeBackGPR_T_16) @[utils.scala 10:20]
      when _debugFIFO_10_writeBackGPR_T_18 : @[utils.scala 10:20]
        debugFIFO_10_writeBackGPR_insType_1 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_10_writeBackGPR_T_19 = eq(UInt<7>("h6f"), _debugFIFO_10_writeBackGPR_T_16) @[utils.scala 10:20]
        when _debugFIFO_10_writeBackGPR_T_19 : @[utils.scala 10:20]
          debugFIFO_10_writeBackGPR_insType_1 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_10_writeBackGPR_T_20 = eq(UInt<7>("h67"), _debugFIFO_10_writeBackGPR_T_16) @[utils.scala 10:20]
          when _debugFIFO_10_writeBackGPR_T_20 : @[utils.scala 10:20]
            debugFIFO_10_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_10_writeBackGPR_T_21 = eq(UInt<7>("h63"), _debugFIFO_10_writeBackGPR_T_16) @[utils.scala 10:20]
            when _debugFIFO_10_writeBackGPR_T_21 : @[utils.scala 10:20]
              debugFIFO_10_writeBackGPR_insType_1 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_10_writeBackGPR_T_22 = eq(UInt<2>("h3"), _debugFIFO_10_writeBackGPR_T_16) @[utils.scala 10:20]
              when _debugFIFO_10_writeBackGPR_T_22 : @[utils.scala 10:20]
                debugFIFO_10_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_10_writeBackGPR_T_23 = eq(UInt<6>("h23"), _debugFIFO_10_writeBackGPR_T_16) @[utils.scala 10:20]
                when _debugFIFO_10_writeBackGPR_T_23 : @[utils.scala 10:20]
                  debugFIFO_10_writeBackGPR_insType_1 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_10_writeBackGPR_T_24 = eq(UInt<5>("h13"), _debugFIFO_10_writeBackGPR_T_16) @[utils.scala 10:20]
                  when _debugFIFO_10_writeBackGPR_T_24 : @[utils.scala 10:20]
                    debugFIFO_10_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_10_writeBackGPR_T_25 = eq(UInt<5>("h1b"), _debugFIFO_10_writeBackGPR_T_16) @[utils.scala 10:20]
                    when _debugFIFO_10_writeBackGPR_T_25 : @[utils.scala 10:20]
                      debugFIFO_10_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_10_writeBackGPR_T_26 = eq(UInt<6>("h33"), _debugFIFO_10_writeBackGPR_T_16) @[utils.scala 10:20]
                      when _debugFIFO_10_writeBackGPR_T_26 : @[utils.scala 10:20]
                        debugFIFO_10_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_10_writeBackGPR_T_27 = eq(UInt<6>("h3b"), _debugFIFO_10_writeBackGPR_T_16) @[utils.scala 10:20]
                        when _debugFIFO_10_writeBackGPR_T_27 : @[utils.scala 10:20]
                          debugFIFO_10_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_10_writeBackGPR_T_28 = eq(UInt<7>("h73"), _debugFIFO_10_writeBackGPR_T_16) @[utils.scala 10:20]
                          when _debugFIFO_10_writeBackGPR_T_28 : @[utils.scala 10:20]
                            debugFIFO_10_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_10_writeBackGPR_T_29 = eq(UInt<4>("hf"), _debugFIFO_10_writeBackGPR_T_16) @[utils.scala 10:20]
                            when _debugFIFO_10_writeBackGPR_T_29 : @[utils.scala 10:20]
                              debugFIFO_10_writeBackGPR_insType_1 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_10_writeBackGPR_T_30 = eq(UInt<6>("h2f"), _debugFIFO_10_writeBackGPR_T_16) @[utils.scala 10:20]
                              when _debugFIFO_10_writeBackGPR_T_30 : @[utils.scala 10:20]
                                debugFIFO_10_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_10_writeBackGPR_T_31 = eq(UInt<1>("h0"), debugFIFO_10_writeBackGPR_insType_1) @[rob.scala 52:141]
    node _debugFIFO_10_writeBackGPR_T_32 = bits(debugFIFO[10].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_10_writeBackGPR_insType_2 : UInt<3>
    debugFIFO_10_writeBackGPR_insType_2 <= UInt<3>("h0")
    node _debugFIFO_10_writeBackGPR_T_33 = eq(UInt<6>("h37"), _debugFIFO_10_writeBackGPR_T_32) @[utils.scala 10:20]
    when _debugFIFO_10_writeBackGPR_T_33 : @[utils.scala 10:20]
      debugFIFO_10_writeBackGPR_insType_2 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_10_writeBackGPR_T_34 = eq(UInt<5>("h17"), _debugFIFO_10_writeBackGPR_T_32) @[utils.scala 10:20]
      when _debugFIFO_10_writeBackGPR_T_34 : @[utils.scala 10:20]
        debugFIFO_10_writeBackGPR_insType_2 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_10_writeBackGPR_T_35 = eq(UInt<7>("h6f"), _debugFIFO_10_writeBackGPR_T_32) @[utils.scala 10:20]
        when _debugFIFO_10_writeBackGPR_T_35 : @[utils.scala 10:20]
          debugFIFO_10_writeBackGPR_insType_2 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_10_writeBackGPR_T_36 = eq(UInt<7>("h67"), _debugFIFO_10_writeBackGPR_T_32) @[utils.scala 10:20]
          when _debugFIFO_10_writeBackGPR_T_36 : @[utils.scala 10:20]
            debugFIFO_10_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_10_writeBackGPR_T_37 = eq(UInt<7>("h63"), _debugFIFO_10_writeBackGPR_T_32) @[utils.scala 10:20]
            when _debugFIFO_10_writeBackGPR_T_37 : @[utils.scala 10:20]
              debugFIFO_10_writeBackGPR_insType_2 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_10_writeBackGPR_T_38 = eq(UInt<2>("h3"), _debugFIFO_10_writeBackGPR_T_32) @[utils.scala 10:20]
              when _debugFIFO_10_writeBackGPR_T_38 : @[utils.scala 10:20]
                debugFIFO_10_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_10_writeBackGPR_T_39 = eq(UInt<6>("h23"), _debugFIFO_10_writeBackGPR_T_32) @[utils.scala 10:20]
                when _debugFIFO_10_writeBackGPR_T_39 : @[utils.scala 10:20]
                  debugFIFO_10_writeBackGPR_insType_2 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_10_writeBackGPR_T_40 = eq(UInt<5>("h13"), _debugFIFO_10_writeBackGPR_T_32) @[utils.scala 10:20]
                  when _debugFIFO_10_writeBackGPR_T_40 : @[utils.scala 10:20]
                    debugFIFO_10_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_10_writeBackGPR_T_41 = eq(UInt<5>("h1b"), _debugFIFO_10_writeBackGPR_T_32) @[utils.scala 10:20]
                    when _debugFIFO_10_writeBackGPR_T_41 : @[utils.scala 10:20]
                      debugFIFO_10_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_10_writeBackGPR_T_42 = eq(UInt<6>("h33"), _debugFIFO_10_writeBackGPR_T_32) @[utils.scala 10:20]
                      when _debugFIFO_10_writeBackGPR_T_42 : @[utils.scala 10:20]
                        debugFIFO_10_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_10_writeBackGPR_T_43 = eq(UInt<6>("h3b"), _debugFIFO_10_writeBackGPR_T_32) @[utils.scala 10:20]
                        when _debugFIFO_10_writeBackGPR_T_43 : @[utils.scala 10:20]
                          debugFIFO_10_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_10_writeBackGPR_T_44 = eq(UInt<7>("h73"), _debugFIFO_10_writeBackGPR_T_32) @[utils.scala 10:20]
                          when _debugFIFO_10_writeBackGPR_T_44 : @[utils.scala 10:20]
                            debugFIFO_10_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_10_writeBackGPR_T_45 = eq(UInt<4>("hf"), _debugFIFO_10_writeBackGPR_T_32) @[utils.scala 10:20]
                            when _debugFIFO_10_writeBackGPR_T_45 : @[utils.scala 10:20]
                              debugFIFO_10_writeBackGPR_insType_2 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_10_writeBackGPR_T_46 = eq(UInt<6>("h2f"), _debugFIFO_10_writeBackGPR_T_32) @[utils.scala 10:20]
                              when _debugFIFO_10_writeBackGPR_T_46 : @[utils.scala 10:20]
                                debugFIFO_10_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_10_writeBackGPR_T_47 = eq(UInt<3>("h4"), debugFIFO_10_writeBackGPR_insType_2) @[rob.scala 52:141]
    node _debugFIFO_10_writeBackGPR_T_48 = bits(debugFIFO[10].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_10_writeBackGPR_insType_3 : UInt<3>
    debugFIFO_10_writeBackGPR_insType_3 <= UInt<3>("h0")
    node _debugFIFO_10_writeBackGPR_T_49 = eq(UInt<6>("h37"), _debugFIFO_10_writeBackGPR_T_48) @[utils.scala 10:20]
    when _debugFIFO_10_writeBackGPR_T_49 : @[utils.scala 10:20]
      debugFIFO_10_writeBackGPR_insType_3 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_10_writeBackGPR_T_50 = eq(UInt<5>("h17"), _debugFIFO_10_writeBackGPR_T_48) @[utils.scala 10:20]
      when _debugFIFO_10_writeBackGPR_T_50 : @[utils.scala 10:20]
        debugFIFO_10_writeBackGPR_insType_3 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_10_writeBackGPR_T_51 = eq(UInt<7>("h6f"), _debugFIFO_10_writeBackGPR_T_48) @[utils.scala 10:20]
        when _debugFIFO_10_writeBackGPR_T_51 : @[utils.scala 10:20]
          debugFIFO_10_writeBackGPR_insType_3 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_10_writeBackGPR_T_52 = eq(UInt<7>("h67"), _debugFIFO_10_writeBackGPR_T_48) @[utils.scala 10:20]
          when _debugFIFO_10_writeBackGPR_T_52 : @[utils.scala 10:20]
            debugFIFO_10_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_10_writeBackGPR_T_53 = eq(UInt<7>("h63"), _debugFIFO_10_writeBackGPR_T_48) @[utils.scala 10:20]
            when _debugFIFO_10_writeBackGPR_T_53 : @[utils.scala 10:20]
              debugFIFO_10_writeBackGPR_insType_3 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_10_writeBackGPR_T_54 = eq(UInt<2>("h3"), _debugFIFO_10_writeBackGPR_T_48) @[utils.scala 10:20]
              when _debugFIFO_10_writeBackGPR_T_54 : @[utils.scala 10:20]
                debugFIFO_10_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_10_writeBackGPR_T_55 = eq(UInt<6>("h23"), _debugFIFO_10_writeBackGPR_T_48) @[utils.scala 10:20]
                when _debugFIFO_10_writeBackGPR_T_55 : @[utils.scala 10:20]
                  debugFIFO_10_writeBackGPR_insType_3 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_10_writeBackGPR_T_56 = eq(UInt<5>("h13"), _debugFIFO_10_writeBackGPR_T_48) @[utils.scala 10:20]
                  when _debugFIFO_10_writeBackGPR_T_56 : @[utils.scala 10:20]
                    debugFIFO_10_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_10_writeBackGPR_T_57 = eq(UInt<5>("h1b"), _debugFIFO_10_writeBackGPR_T_48) @[utils.scala 10:20]
                    when _debugFIFO_10_writeBackGPR_T_57 : @[utils.scala 10:20]
                      debugFIFO_10_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_10_writeBackGPR_T_58 = eq(UInt<6>("h33"), _debugFIFO_10_writeBackGPR_T_48) @[utils.scala 10:20]
                      when _debugFIFO_10_writeBackGPR_T_58 : @[utils.scala 10:20]
                        debugFIFO_10_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_10_writeBackGPR_T_59 = eq(UInt<6>("h3b"), _debugFIFO_10_writeBackGPR_T_48) @[utils.scala 10:20]
                        when _debugFIFO_10_writeBackGPR_T_59 : @[utils.scala 10:20]
                          debugFIFO_10_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_10_writeBackGPR_T_60 = eq(UInt<7>("h73"), _debugFIFO_10_writeBackGPR_T_48) @[utils.scala 10:20]
                          when _debugFIFO_10_writeBackGPR_T_60 : @[utils.scala 10:20]
                            debugFIFO_10_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_10_writeBackGPR_T_61 = eq(UInt<4>("hf"), _debugFIFO_10_writeBackGPR_T_48) @[utils.scala 10:20]
                            when _debugFIFO_10_writeBackGPR_T_61 : @[utils.scala 10:20]
                              debugFIFO_10_writeBackGPR_insType_3 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_10_writeBackGPR_T_62 = eq(UInt<6>("h2f"), _debugFIFO_10_writeBackGPR_T_48) @[utils.scala 10:20]
                              when _debugFIFO_10_writeBackGPR_T_62 : @[utils.scala 10:20]
                                debugFIFO_10_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_10_writeBackGPR_T_63 = eq(UInt<3>("h5"), debugFIFO_10_writeBackGPR_insType_3) @[rob.scala 52:141]
    node _debugFIFO_10_writeBackGPR_T_64 = or(_debugFIFO_10_writeBackGPR_T_15, _debugFIFO_10_writeBackGPR_T_31) @[rob.scala 52:197]
    node _debugFIFO_10_writeBackGPR_T_65 = or(_debugFIFO_10_writeBackGPR_T_64, _debugFIFO_10_writeBackGPR_T_47) @[rob.scala 52:197]
    node _debugFIFO_10_writeBackGPR_T_66 = or(_debugFIFO_10_writeBackGPR_T_65, _debugFIFO_10_writeBackGPR_T_63) @[rob.scala 52:197]
    node _debugFIFO_10_writeBackGPR_T_67 = bits(debugFIFO[10].instruction, 11, 7) @[rob.scala 52:223]
    node _debugFIFO_10_writeBackGPR_T_68 = orr(_debugFIFO_10_writeBackGPR_T_67) @[rob.scala 52:231]
    node _debugFIFO_10_writeBackGPR_T_69 = and(_debugFIFO_10_writeBackGPR_T_66, _debugFIFO_10_writeBackGPR_T_68) @[rob.scala 52:203]
    node _debugFIFO_10_writeBackGPR_T_70 = and(_debugFIFO_10_writeBackGPR_T_69, debugFIFO[10].valid) @[rob.scala 52:235]
    debugFIFO[10].writeBackGPR <= _debugFIFO_10_writeBackGPR_T_70 @[rob.scala 52:52]
    node _debugFIFO_11_writeBackGPR_T = bits(debugFIFO[11].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_11_writeBackGPR_insType : UInt<3>
    debugFIFO_11_writeBackGPR_insType <= UInt<3>("h0")
    node _debugFIFO_11_writeBackGPR_T_1 = eq(UInt<6>("h37"), _debugFIFO_11_writeBackGPR_T) @[utils.scala 10:20]
    when _debugFIFO_11_writeBackGPR_T_1 : @[utils.scala 10:20]
      debugFIFO_11_writeBackGPR_insType <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_11_writeBackGPR_T_2 = eq(UInt<5>("h17"), _debugFIFO_11_writeBackGPR_T) @[utils.scala 10:20]
      when _debugFIFO_11_writeBackGPR_T_2 : @[utils.scala 10:20]
        debugFIFO_11_writeBackGPR_insType <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_11_writeBackGPR_T_3 = eq(UInt<7>("h6f"), _debugFIFO_11_writeBackGPR_T) @[utils.scala 10:20]
        when _debugFIFO_11_writeBackGPR_T_3 : @[utils.scala 10:20]
          debugFIFO_11_writeBackGPR_insType <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_11_writeBackGPR_T_4 = eq(UInt<7>("h67"), _debugFIFO_11_writeBackGPR_T) @[utils.scala 10:20]
          when _debugFIFO_11_writeBackGPR_T_4 : @[utils.scala 10:20]
            debugFIFO_11_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_11_writeBackGPR_T_5 = eq(UInt<7>("h63"), _debugFIFO_11_writeBackGPR_T) @[utils.scala 10:20]
            when _debugFIFO_11_writeBackGPR_T_5 : @[utils.scala 10:20]
              debugFIFO_11_writeBackGPR_insType <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_11_writeBackGPR_T_6 = eq(UInt<2>("h3"), _debugFIFO_11_writeBackGPR_T) @[utils.scala 10:20]
              when _debugFIFO_11_writeBackGPR_T_6 : @[utils.scala 10:20]
                debugFIFO_11_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_11_writeBackGPR_T_7 = eq(UInt<6>("h23"), _debugFIFO_11_writeBackGPR_T) @[utils.scala 10:20]
                when _debugFIFO_11_writeBackGPR_T_7 : @[utils.scala 10:20]
                  debugFIFO_11_writeBackGPR_insType <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_11_writeBackGPR_T_8 = eq(UInt<5>("h13"), _debugFIFO_11_writeBackGPR_T) @[utils.scala 10:20]
                  when _debugFIFO_11_writeBackGPR_T_8 : @[utils.scala 10:20]
                    debugFIFO_11_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_11_writeBackGPR_T_9 = eq(UInt<5>("h1b"), _debugFIFO_11_writeBackGPR_T) @[utils.scala 10:20]
                    when _debugFIFO_11_writeBackGPR_T_9 : @[utils.scala 10:20]
                      debugFIFO_11_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_11_writeBackGPR_T_10 = eq(UInt<6>("h33"), _debugFIFO_11_writeBackGPR_T) @[utils.scala 10:20]
                      when _debugFIFO_11_writeBackGPR_T_10 : @[utils.scala 10:20]
                        debugFIFO_11_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_11_writeBackGPR_T_11 = eq(UInt<6>("h3b"), _debugFIFO_11_writeBackGPR_T) @[utils.scala 10:20]
                        when _debugFIFO_11_writeBackGPR_T_11 : @[utils.scala 10:20]
                          debugFIFO_11_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_11_writeBackGPR_T_12 = eq(UInt<7>("h73"), _debugFIFO_11_writeBackGPR_T) @[utils.scala 10:20]
                          when _debugFIFO_11_writeBackGPR_T_12 : @[utils.scala 10:20]
                            debugFIFO_11_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_11_writeBackGPR_T_13 = eq(UInt<4>("hf"), _debugFIFO_11_writeBackGPR_T) @[utils.scala 10:20]
                            when _debugFIFO_11_writeBackGPR_T_13 : @[utils.scala 10:20]
                              debugFIFO_11_writeBackGPR_insType <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_11_writeBackGPR_T_14 = eq(UInt<6>("h2f"), _debugFIFO_11_writeBackGPR_T) @[utils.scala 10:20]
                              when _debugFIFO_11_writeBackGPR_T_14 : @[utils.scala 10:20]
                                debugFIFO_11_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_11_writeBackGPR_T_15 = eq(UInt<1>("h1"), debugFIFO_11_writeBackGPR_insType) @[rob.scala 52:141]
    node _debugFIFO_11_writeBackGPR_T_16 = bits(debugFIFO[11].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_11_writeBackGPR_insType_1 : UInt<3>
    debugFIFO_11_writeBackGPR_insType_1 <= UInt<3>("h0")
    node _debugFIFO_11_writeBackGPR_T_17 = eq(UInt<6>("h37"), _debugFIFO_11_writeBackGPR_T_16) @[utils.scala 10:20]
    when _debugFIFO_11_writeBackGPR_T_17 : @[utils.scala 10:20]
      debugFIFO_11_writeBackGPR_insType_1 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_11_writeBackGPR_T_18 = eq(UInt<5>("h17"), _debugFIFO_11_writeBackGPR_T_16) @[utils.scala 10:20]
      when _debugFIFO_11_writeBackGPR_T_18 : @[utils.scala 10:20]
        debugFIFO_11_writeBackGPR_insType_1 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_11_writeBackGPR_T_19 = eq(UInt<7>("h6f"), _debugFIFO_11_writeBackGPR_T_16) @[utils.scala 10:20]
        when _debugFIFO_11_writeBackGPR_T_19 : @[utils.scala 10:20]
          debugFIFO_11_writeBackGPR_insType_1 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_11_writeBackGPR_T_20 = eq(UInt<7>("h67"), _debugFIFO_11_writeBackGPR_T_16) @[utils.scala 10:20]
          when _debugFIFO_11_writeBackGPR_T_20 : @[utils.scala 10:20]
            debugFIFO_11_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_11_writeBackGPR_T_21 = eq(UInt<7>("h63"), _debugFIFO_11_writeBackGPR_T_16) @[utils.scala 10:20]
            when _debugFIFO_11_writeBackGPR_T_21 : @[utils.scala 10:20]
              debugFIFO_11_writeBackGPR_insType_1 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_11_writeBackGPR_T_22 = eq(UInt<2>("h3"), _debugFIFO_11_writeBackGPR_T_16) @[utils.scala 10:20]
              when _debugFIFO_11_writeBackGPR_T_22 : @[utils.scala 10:20]
                debugFIFO_11_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_11_writeBackGPR_T_23 = eq(UInt<6>("h23"), _debugFIFO_11_writeBackGPR_T_16) @[utils.scala 10:20]
                when _debugFIFO_11_writeBackGPR_T_23 : @[utils.scala 10:20]
                  debugFIFO_11_writeBackGPR_insType_1 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_11_writeBackGPR_T_24 = eq(UInt<5>("h13"), _debugFIFO_11_writeBackGPR_T_16) @[utils.scala 10:20]
                  when _debugFIFO_11_writeBackGPR_T_24 : @[utils.scala 10:20]
                    debugFIFO_11_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_11_writeBackGPR_T_25 = eq(UInt<5>("h1b"), _debugFIFO_11_writeBackGPR_T_16) @[utils.scala 10:20]
                    when _debugFIFO_11_writeBackGPR_T_25 : @[utils.scala 10:20]
                      debugFIFO_11_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_11_writeBackGPR_T_26 = eq(UInt<6>("h33"), _debugFIFO_11_writeBackGPR_T_16) @[utils.scala 10:20]
                      when _debugFIFO_11_writeBackGPR_T_26 : @[utils.scala 10:20]
                        debugFIFO_11_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_11_writeBackGPR_T_27 = eq(UInt<6>("h3b"), _debugFIFO_11_writeBackGPR_T_16) @[utils.scala 10:20]
                        when _debugFIFO_11_writeBackGPR_T_27 : @[utils.scala 10:20]
                          debugFIFO_11_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_11_writeBackGPR_T_28 = eq(UInt<7>("h73"), _debugFIFO_11_writeBackGPR_T_16) @[utils.scala 10:20]
                          when _debugFIFO_11_writeBackGPR_T_28 : @[utils.scala 10:20]
                            debugFIFO_11_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_11_writeBackGPR_T_29 = eq(UInt<4>("hf"), _debugFIFO_11_writeBackGPR_T_16) @[utils.scala 10:20]
                            when _debugFIFO_11_writeBackGPR_T_29 : @[utils.scala 10:20]
                              debugFIFO_11_writeBackGPR_insType_1 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_11_writeBackGPR_T_30 = eq(UInt<6>("h2f"), _debugFIFO_11_writeBackGPR_T_16) @[utils.scala 10:20]
                              when _debugFIFO_11_writeBackGPR_T_30 : @[utils.scala 10:20]
                                debugFIFO_11_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_11_writeBackGPR_T_31 = eq(UInt<1>("h0"), debugFIFO_11_writeBackGPR_insType_1) @[rob.scala 52:141]
    node _debugFIFO_11_writeBackGPR_T_32 = bits(debugFIFO[11].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_11_writeBackGPR_insType_2 : UInt<3>
    debugFIFO_11_writeBackGPR_insType_2 <= UInt<3>("h0")
    node _debugFIFO_11_writeBackGPR_T_33 = eq(UInt<6>("h37"), _debugFIFO_11_writeBackGPR_T_32) @[utils.scala 10:20]
    when _debugFIFO_11_writeBackGPR_T_33 : @[utils.scala 10:20]
      debugFIFO_11_writeBackGPR_insType_2 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_11_writeBackGPR_T_34 = eq(UInt<5>("h17"), _debugFIFO_11_writeBackGPR_T_32) @[utils.scala 10:20]
      when _debugFIFO_11_writeBackGPR_T_34 : @[utils.scala 10:20]
        debugFIFO_11_writeBackGPR_insType_2 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_11_writeBackGPR_T_35 = eq(UInt<7>("h6f"), _debugFIFO_11_writeBackGPR_T_32) @[utils.scala 10:20]
        when _debugFIFO_11_writeBackGPR_T_35 : @[utils.scala 10:20]
          debugFIFO_11_writeBackGPR_insType_2 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_11_writeBackGPR_T_36 = eq(UInt<7>("h67"), _debugFIFO_11_writeBackGPR_T_32) @[utils.scala 10:20]
          when _debugFIFO_11_writeBackGPR_T_36 : @[utils.scala 10:20]
            debugFIFO_11_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_11_writeBackGPR_T_37 = eq(UInt<7>("h63"), _debugFIFO_11_writeBackGPR_T_32) @[utils.scala 10:20]
            when _debugFIFO_11_writeBackGPR_T_37 : @[utils.scala 10:20]
              debugFIFO_11_writeBackGPR_insType_2 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_11_writeBackGPR_T_38 = eq(UInt<2>("h3"), _debugFIFO_11_writeBackGPR_T_32) @[utils.scala 10:20]
              when _debugFIFO_11_writeBackGPR_T_38 : @[utils.scala 10:20]
                debugFIFO_11_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_11_writeBackGPR_T_39 = eq(UInt<6>("h23"), _debugFIFO_11_writeBackGPR_T_32) @[utils.scala 10:20]
                when _debugFIFO_11_writeBackGPR_T_39 : @[utils.scala 10:20]
                  debugFIFO_11_writeBackGPR_insType_2 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_11_writeBackGPR_T_40 = eq(UInt<5>("h13"), _debugFIFO_11_writeBackGPR_T_32) @[utils.scala 10:20]
                  when _debugFIFO_11_writeBackGPR_T_40 : @[utils.scala 10:20]
                    debugFIFO_11_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_11_writeBackGPR_T_41 = eq(UInt<5>("h1b"), _debugFIFO_11_writeBackGPR_T_32) @[utils.scala 10:20]
                    when _debugFIFO_11_writeBackGPR_T_41 : @[utils.scala 10:20]
                      debugFIFO_11_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_11_writeBackGPR_T_42 = eq(UInt<6>("h33"), _debugFIFO_11_writeBackGPR_T_32) @[utils.scala 10:20]
                      when _debugFIFO_11_writeBackGPR_T_42 : @[utils.scala 10:20]
                        debugFIFO_11_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_11_writeBackGPR_T_43 = eq(UInt<6>("h3b"), _debugFIFO_11_writeBackGPR_T_32) @[utils.scala 10:20]
                        when _debugFIFO_11_writeBackGPR_T_43 : @[utils.scala 10:20]
                          debugFIFO_11_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_11_writeBackGPR_T_44 = eq(UInt<7>("h73"), _debugFIFO_11_writeBackGPR_T_32) @[utils.scala 10:20]
                          when _debugFIFO_11_writeBackGPR_T_44 : @[utils.scala 10:20]
                            debugFIFO_11_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_11_writeBackGPR_T_45 = eq(UInt<4>("hf"), _debugFIFO_11_writeBackGPR_T_32) @[utils.scala 10:20]
                            when _debugFIFO_11_writeBackGPR_T_45 : @[utils.scala 10:20]
                              debugFIFO_11_writeBackGPR_insType_2 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_11_writeBackGPR_T_46 = eq(UInt<6>("h2f"), _debugFIFO_11_writeBackGPR_T_32) @[utils.scala 10:20]
                              when _debugFIFO_11_writeBackGPR_T_46 : @[utils.scala 10:20]
                                debugFIFO_11_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_11_writeBackGPR_T_47 = eq(UInt<3>("h4"), debugFIFO_11_writeBackGPR_insType_2) @[rob.scala 52:141]
    node _debugFIFO_11_writeBackGPR_T_48 = bits(debugFIFO[11].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_11_writeBackGPR_insType_3 : UInt<3>
    debugFIFO_11_writeBackGPR_insType_3 <= UInt<3>("h0")
    node _debugFIFO_11_writeBackGPR_T_49 = eq(UInt<6>("h37"), _debugFIFO_11_writeBackGPR_T_48) @[utils.scala 10:20]
    when _debugFIFO_11_writeBackGPR_T_49 : @[utils.scala 10:20]
      debugFIFO_11_writeBackGPR_insType_3 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_11_writeBackGPR_T_50 = eq(UInt<5>("h17"), _debugFIFO_11_writeBackGPR_T_48) @[utils.scala 10:20]
      when _debugFIFO_11_writeBackGPR_T_50 : @[utils.scala 10:20]
        debugFIFO_11_writeBackGPR_insType_3 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_11_writeBackGPR_T_51 = eq(UInt<7>("h6f"), _debugFIFO_11_writeBackGPR_T_48) @[utils.scala 10:20]
        when _debugFIFO_11_writeBackGPR_T_51 : @[utils.scala 10:20]
          debugFIFO_11_writeBackGPR_insType_3 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_11_writeBackGPR_T_52 = eq(UInt<7>("h67"), _debugFIFO_11_writeBackGPR_T_48) @[utils.scala 10:20]
          when _debugFIFO_11_writeBackGPR_T_52 : @[utils.scala 10:20]
            debugFIFO_11_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_11_writeBackGPR_T_53 = eq(UInt<7>("h63"), _debugFIFO_11_writeBackGPR_T_48) @[utils.scala 10:20]
            when _debugFIFO_11_writeBackGPR_T_53 : @[utils.scala 10:20]
              debugFIFO_11_writeBackGPR_insType_3 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_11_writeBackGPR_T_54 = eq(UInt<2>("h3"), _debugFIFO_11_writeBackGPR_T_48) @[utils.scala 10:20]
              when _debugFIFO_11_writeBackGPR_T_54 : @[utils.scala 10:20]
                debugFIFO_11_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_11_writeBackGPR_T_55 = eq(UInt<6>("h23"), _debugFIFO_11_writeBackGPR_T_48) @[utils.scala 10:20]
                when _debugFIFO_11_writeBackGPR_T_55 : @[utils.scala 10:20]
                  debugFIFO_11_writeBackGPR_insType_3 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_11_writeBackGPR_T_56 = eq(UInt<5>("h13"), _debugFIFO_11_writeBackGPR_T_48) @[utils.scala 10:20]
                  when _debugFIFO_11_writeBackGPR_T_56 : @[utils.scala 10:20]
                    debugFIFO_11_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_11_writeBackGPR_T_57 = eq(UInt<5>("h1b"), _debugFIFO_11_writeBackGPR_T_48) @[utils.scala 10:20]
                    when _debugFIFO_11_writeBackGPR_T_57 : @[utils.scala 10:20]
                      debugFIFO_11_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_11_writeBackGPR_T_58 = eq(UInt<6>("h33"), _debugFIFO_11_writeBackGPR_T_48) @[utils.scala 10:20]
                      when _debugFIFO_11_writeBackGPR_T_58 : @[utils.scala 10:20]
                        debugFIFO_11_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_11_writeBackGPR_T_59 = eq(UInt<6>("h3b"), _debugFIFO_11_writeBackGPR_T_48) @[utils.scala 10:20]
                        when _debugFIFO_11_writeBackGPR_T_59 : @[utils.scala 10:20]
                          debugFIFO_11_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_11_writeBackGPR_T_60 = eq(UInt<7>("h73"), _debugFIFO_11_writeBackGPR_T_48) @[utils.scala 10:20]
                          when _debugFIFO_11_writeBackGPR_T_60 : @[utils.scala 10:20]
                            debugFIFO_11_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_11_writeBackGPR_T_61 = eq(UInt<4>("hf"), _debugFIFO_11_writeBackGPR_T_48) @[utils.scala 10:20]
                            when _debugFIFO_11_writeBackGPR_T_61 : @[utils.scala 10:20]
                              debugFIFO_11_writeBackGPR_insType_3 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_11_writeBackGPR_T_62 = eq(UInt<6>("h2f"), _debugFIFO_11_writeBackGPR_T_48) @[utils.scala 10:20]
                              when _debugFIFO_11_writeBackGPR_T_62 : @[utils.scala 10:20]
                                debugFIFO_11_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_11_writeBackGPR_T_63 = eq(UInt<3>("h5"), debugFIFO_11_writeBackGPR_insType_3) @[rob.scala 52:141]
    node _debugFIFO_11_writeBackGPR_T_64 = or(_debugFIFO_11_writeBackGPR_T_15, _debugFIFO_11_writeBackGPR_T_31) @[rob.scala 52:197]
    node _debugFIFO_11_writeBackGPR_T_65 = or(_debugFIFO_11_writeBackGPR_T_64, _debugFIFO_11_writeBackGPR_T_47) @[rob.scala 52:197]
    node _debugFIFO_11_writeBackGPR_T_66 = or(_debugFIFO_11_writeBackGPR_T_65, _debugFIFO_11_writeBackGPR_T_63) @[rob.scala 52:197]
    node _debugFIFO_11_writeBackGPR_T_67 = bits(debugFIFO[11].instruction, 11, 7) @[rob.scala 52:223]
    node _debugFIFO_11_writeBackGPR_T_68 = orr(_debugFIFO_11_writeBackGPR_T_67) @[rob.scala 52:231]
    node _debugFIFO_11_writeBackGPR_T_69 = and(_debugFIFO_11_writeBackGPR_T_66, _debugFIFO_11_writeBackGPR_T_68) @[rob.scala 52:203]
    node _debugFIFO_11_writeBackGPR_T_70 = and(_debugFIFO_11_writeBackGPR_T_69, debugFIFO[11].valid) @[rob.scala 52:235]
    debugFIFO[11].writeBackGPR <= _debugFIFO_11_writeBackGPR_T_70 @[rob.scala 52:52]
    node _debugFIFO_12_writeBackGPR_T = bits(debugFIFO[12].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_12_writeBackGPR_insType : UInt<3>
    debugFIFO_12_writeBackGPR_insType <= UInt<3>("h0")
    node _debugFIFO_12_writeBackGPR_T_1 = eq(UInt<6>("h37"), _debugFIFO_12_writeBackGPR_T) @[utils.scala 10:20]
    when _debugFIFO_12_writeBackGPR_T_1 : @[utils.scala 10:20]
      debugFIFO_12_writeBackGPR_insType <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_12_writeBackGPR_T_2 = eq(UInt<5>("h17"), _debugFIFO_12_writeBackGPR_T) @[utils.scala 10:20]
      when _debugFIFO_12_writeBackGPR_T_2 : @[utils.scala 10:20]
        debugFIFO_12_writeBackGPR_insType <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_12_writeBackGPR_T_3 = eq(UInt<7>("h6f"), _debugFIFO_12_writeBackGPR_T) @[utils.scala 10:20]
        when _debugFIFO_12_writeBackGPR_T_3 : @[utils.scala 10:20]
          debugFIFO_12_writeBackGPR_insType <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_12_writeBackGPR_T_4 = eq(UInt<7>("h67"), _debugFIFO_12_writeBackGPR_T) @[utils.scala 10:20]
          when _debugFIFO_12_writeBackGPR_T_4 : @[utils.scala 10:20]
            debugFIFO_12_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_12_writeBackGPR_T_5 = eq(UInt<7>("h63"), _debugFIFO_12_writeBackGPR_T) @[utils.scala 10:20]
            when _debugFIFO_12_writeBackGPR_T_5 : @[utils.scala 10:20]
              debugFIFO_12_writeBackGPR_insType <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_12_writeBackGPR_T_6 = eq(UInt<2>("h3"), _debugFIFO_12_writeBackGPR_T) @[utils.scala 10:20]
              when _debugFIFO_12_writeBackGPR_T_6 : @[utils.scala 10:20]
                debugFIFO_12_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_12_writeBackGPR_T_7 = eq(UInt<6>("h23"), _debugFIFO_12_writeBackGPR_T) @[utils.scala 10:20]
                when _debugFIFO_12_writeBackGPR_T_7 : @[utils.scala 10:20]
                  debugFIFO_12_writeBackGPR_insType <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_12_writeBackGPR_T_8 = eq(UInt<5>("h13"), _debugFIFO_12_writeBackGPR_T) @[utils.scala 10:20]
                  when _debugFIFO_12_writeBackGPR_T_8 : @[utils.scala 10:20]
                    debugFIFO_12_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_12_writeBackGPR_T_9 = eq(UInt<5>("h1b"), _debugFIFO_12_writeBackGPR_T) @[utils.scala 10:20]
                    when _debugFIFO_12_writeBackGPR_T_9 : @[utils.scala 10:20]
                      debugFIFO_12_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_12_writeBackGPR_T_10 = eq(UInt<6>("h33"), _debugFIFO_12_writeBackGPR_T) @[utils.scala 10:20]
                      when _debugFIFO_12_writeBackGPR_T_10 : @[utils.scala 10:20]
                        debugFIFO_12_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_12_writeBackGPR_T_11 = eq(UInt<6>("h3b"), _debugFIFO_12_writeBackGPR_T) @[utils.scala 10:20]
                        when _debugFIFO_12_writeBackGPR_T_11 : @[utils.scala 10:20]
                          debugFIFO_12_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_12_writeBackGPR_T_12 = eq(UInt<7>("h73"), _debugFIFO_12_writeBackGPR_T) @[utils.scala 10:20]
                          when _debugFIFO_12_writeBackGPR_T_12 : @[utils.scala 10:20]
                            debugFIFO_12_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_12_writeBackGPR_T_13 = eq(UInt<4>("hf"), _debugFIFO_12_writeBackGPR_T) @[utils.scala 10:20]
                            when _debugFIFO_12_writeBackGPR_T_13 : @[utils.scala 10:20]
                              debugFIFO_12_writeBackGPR_insType <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_12_writeBackGPR_T_14 = eq(UInt<6>("h2f"), _debugFIFO_12_writeBackGPR_T) @[utils.scala 10:20]
                              when _debugFIFO_12_writeBackGPR_T_14 : @[utils.scala 10:20]
                                debugFIFO_12_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_12_writeBackGPR_T_15 = eq(UInt<1>("h1"), debugFIFO_12_writeBackGPR_insType) @[rob.scala 52:141]
    node _debugFIFO_12_writeBackGPR_T_16 = bits(debugFIFO[12].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_12_writeBackGPR_insType_1 : UInt<3>
    debugFIFO_12_writeBackGPR_insType_1 <= UInt<3>("h0")
    node _debugFIFO_12_writeBackGPR_T_17 = eq(UInt<6>("h37"), _debugFIFO_12_writeBackGPR_T_16) @[utils.scala 10:20]
    when _debugFIFO_12_writeBackGPR_T_17 : @[utils.scala 10:20]
      debugFIFO_12_writeBackGPR_insType_1 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_12_writeBackGPR_T_18 = eq(UInt<5>("h17"), _debugFIFO_12_writeBackGPR_T_16) @[utils.scala 10:20]
      when _debugFIFO_12_writeBackGPR_T_18 : @[utils.scala 10:20]
        debugFIFO_12_writeBackGPR_insType_1 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_12_writeBackGPR_T_19 = eq(UInt<7>("h6f"), _debugFIFO_12_writeBackGPR_T_16) @[utils.scala 10:20]
        when _debugFIFO_12_writeBackGPR_T_19 : @[utils.scala 10:20]
          debugFIFO_12_writeBackGPR_insType_1 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_12_writeBackGPR_T_20 = eq(UInt<7>("h67"), _debugFIFO_12_writeBackGPR_T_16) @[utils.scala 10:20]
          when _debugFIFO_12_writeBackGPR_T_20 : @[utils.scala 10:20]
            debugFIFO_12_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_12_writeBackGPR_T_21 = eq(UInt<7>("h63"), _debugFIFO_12_writeBackGPR_T_16) @[utils.scala 10:20]
            when _debugFIFO_12_writeBackGPR_T_21 : @[utils.scala 10:20]
              debugFIFO_12_writeBackGPR_insType_1 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_12_writeBackGPR_T_22 = eq(UInt<2>("h3"), _debugFIFO_12_writeBackGPR_T_16) @[utils.scala 10:20]
              when _debugFIFO_12_writeBackGPR_T_22 : @[utils.scala 10:20]
                debugFIFO_12_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_12_writeBackGPR_T_23 = eq(UInt<6>("h23"), _debugFIFO_12_writeBackGPR_T_16) @[utils.scala 10:20]
                when _debugFIFO_12_writeBackGPR_T_23 : @[utils.scala 10:20]
                  debugFIFO_12_writeBackGPR_insType_1 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_12_writeBackGPR_T_24 = eq(UInt<5>("h13"), _debugFIFO_12_writeBackGPR_T_16) @[utils.scala 10:20]
                  when _debugFIFO_12_writeBackGPR_T_24 : @[utils.scala 10:20]
                    debugFIFO_12_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_12_writeBackGPR_T_25 = eq(UInt<5>("h1b"), _debugFIFO_12_writeBackGPR_T_16) @[utils.scala 10:20]
                    when _debugFIFO_12_writeBackGPR_T_25 : @[utils.scala 10:20]
                      debugFIFO_12_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_12_writeBackGPR_T_26 = eq(UInt<6>("h33"), _debugFIFO_12_writeBackGPR_T_16) @[utils.scala 10:20]
                      when _debugFIFO_12_writeBackGPR_T_26 : @[utils.scala 10:20]
                        debugFIFO_12_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_12_writeBackGPR_T_27 = eq(UInt<6>("h3b"), _debugFIFO_12_writeBackGPR_T_16) @[utils.scala 10:20]
                        when _debugFIFO_12_writeBackGPR_T_27 : @[utils.scala 10:20]
                          debugFIFO_12_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_12_writeBackGPR_T_28 = eq(UInt<7>("h73"), _debugFIFO_12_writeBackGPR_T_16) @[utils.scala 10:20]
                          when _debugFIFO_12_writeBackGPR_T_28 : @[utils.scala 10:20]
                            debugFIFO_12_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_12_writeBackGPR_T_29 = eq(UInt<4>("hf"), _debugFIFO_12_writeBackGPR_T_16) @[utils.scala 10:20]
                            when _debugFIFO_12_writeBackGPR_T_29 : @[utils.scala 10:20]
                              debugFIFO_12_writeBackGPR_insType_1 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_12_writeBackGPR_T_30 = eq(UInt<6>("h2f"), _debugFIFO_12_writeBackGPR_T_16) @[utils.scala 10:20]
                              when _debugFIFO_12_writeBackGPR_T_30 : @[utils.scala 10:20]
                                debugFIFO_12_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_12_writeBackGPR_T_31 = eq(UInt<1>("h0"), debugFIFO_12_writeBackGPR_insType_1) @[rob.scala 52:141]
    node _debugFIFO_12_writeBackGPR_T_32 = bits(debugFIFO[12].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_12_writeBackGPR_insType_2 : UInt<3>
    debugFIFO_12_writeBackGPR_insType_2 <= UInt<3>("h0")
    node _debugFIFO_12_writeBackGPR_T_33 = eq(UInt<6>("h37"), _debugFIFO_12_writeBackGPR_T_32) @[utils.scala 10:20]
    when _debugFIFO_12_writeBackGPR_T_33 : @[utils.scala 10:20]
      debugFIFO_12_writeBackGPR_insType_2 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_12_writeBackGPR_T_34 = eq(UInt<5>("h17"), _debugFIFO_12_writeBackGPR_T_32) @[utils.scala 10:20]
      when _debugFIFO_12_writeBackGPR_T_34 : @[utils.scala 10:20]
        debugFIFO_12_writeBackGPR_insType_2 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_12_writeBackGPR_T_35 = eq(UInt<7>("h6f"), _debugFIFO_12_writeBackGPR_T_32) @[utils.scala 10:20]
        when _debugFIFO_12_writeBackGPR_T_35 : @[utils.scala 10:20]
          debugFIFO_12_writeBackGPR_insType_2 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_12_writeBackGPR_T_36 = eq(UInt<7>("h67"), _debugFIFO_12_writeBackGPR_T_32) @[utils.scala 10:20]
          when _debugFIFO_12_writeBackGPR_T_36 : @[utils.scala 10:20]
            debugFIFO_12_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_12_writeBackGPR_T_37 = eq(UInt<7>("h63"), _debugFIFO_12_writeBackGPR_T_32) @[utils.scala 10:20]
            when _debugFIFO_12_writeBackGPR_T_37 : @[utils.scala 10:20]
              debugFIFO_12_writeBackGPR_insType_2 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_12_writeBackGPR_T_38 = eq(UInt<2>("h3"), _debugFIFO_12_writeBackGPR_T_32) @[utils.scala 10:20]
              when _debugFIFO_12_writeBackGPR_T_38 : @[utils.scala 10:20]
                debugFIFO_12_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_12_writeBackGPR_T_39 = eq(UInt<6>("h23"), _debugFIFO_12_writeBackGPR_T_32) @[utils.scala 10:20]
                when _debugFIFO_12_writeBackGPR_T_39 : @[utils.scala 10:20]
                  debugFIFO_12_writeBackGPR_insType_2 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_12_writeBackGPR_T_40 = eq(UInt<5>("h13"), _debugFIFO_12_writeBackGPR_T_32) @[utils.scala 10:20]
                  when _debugFIFO_12_writeBackGPR_T_40 : @[utils.scala 10:20]
                    debugFIFO_12_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_12_writeBackGPR_T_41 = eq(UInt<5>("h1b"), _debugFIFO_12_writeBackGPR_T_32) @[utils.scala 10:20]
                    when _debugFIFO_12_writeBackGPR_T_41 : @[utils.scala 10:20]
                      debugFIFO_12_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_12_writeBackGPR_T_42 = eq(UInt<6>("h33"), _debugFIFO_12_writeBackGPR_T_32) @[utils.scala 10:20]
                      when _debugFIFO_12_writeBackGPR_T_42 : @[utils.scala 10:20]
                        debugFIFO_12_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_12_writeBackGPR_T_43 = eq(UInt<6>("h3b"), _debugFIFO_12_writeBackGPR_T_32) @[utils.scala 10:20]
                        when _debugFIFO_12_writeBackGPR_T_43 : @[utils.scala 10:20]
                          debugFIFO_12_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_12_writeBackGPR_T_44 = eq(UInt<7>("h73"), _debugFIFO_12_writeBackGPR_T_32) @[utils.scala 10:20]
                          when _debugFIFO_12_writeBackGPR_T_44 : @[utils.scala 10:20]
                            debugFIFO_12_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_12_writeBackGPR_T_45 = eq(UInt<4>("hf"), _debugFIFO_12_writeBackGPR_T_32) @[utils.scala 10:20]
                            when _debugFIFO_12_writeBackGPR_T_45 : @[utils.scala 10:20]
                              debugFIFO_12_writeBackGPR_insType_2 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_12_writeBackGPR_T_46 = eq(UInt<6>("h2f"), _debugFIFO_12_writeBackGPR_T_32) @[utils.scala 10:20]
                              when _debugFIFO_12_writeBackGPR_T_46 : @[utils.scala 10:20]
                                debugFIFO_12_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_12_writeBackGPR_T_47 = eq(UInt<3>("h4"), debugFIFO_12_writeBackGPR_insType_2) @[rob.scala 52:141]
    node _debugFIFO_12_writeBackGPR_T_48 = bits(debugFIFO[12].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_12_writeBackGPR_insType_3 : UInt<3>
    debugFIFO_12_writeBackGPR_insType_3 <= UInt<3>("h0")
    node _debugFIFO_12_writeBackGPR_T_49 = eq(UInt<6>("h37"), _debugFIFO_12_writeBackGPR_T_48) @[utils.scala 10:20]
    when _debugFIFO_12_writeBackGPR_T_49 : @[utils.scala 10:20]
      debugFIFO_12_writeBackGPR_insType_3 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_12_writeBackGPR_T_50 = eq(UInt<5>("h17"), _debugFIFO_12_writeBackGPR_T_48) @[utils.scala 10:20]
      when _debugFIFO_12_writeBackGPR_T_50 : @[utils.scala 10:20]
        debugFIFO_12_writeBackGPR_insType_3 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_12_writeBackGPR_T_51 = eq(UInt<7>("h6f"), _debugFIFO_12_writeBackGPR_T_48) @[utils.scala 10:20]
        when _debugFIFO_12_writeBackGPR_T_51 : @[utils.scala 10:20]
          debugFIFO_12_writeBackGPR_insType_3 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_12_writeBackGPR_T_52 = eq(UInt<7>("h67"), _debugFIFO_12_writeBackGPR_T_48) @[utils.scala 10:20]
          when _debugFIFO_12_writeBackGPR_T_52 : @[utils.scala 10:20]
            debugFIFO_12_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_12_writeBackGPR_T_53 = eq(UInt<7>("h63"), _debugFIFO_12_writeBackGPR_T_48) @[utils.scala 10:20]
            when _debugFIFO_12_writeBackGPR_T_53 : @[utils.scala 10:20]
              debugFIFO_12_writeBackGPR_insType_3 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_12_writeBackGPR_T_54 = eq(UInt<2>("h3"), _debugFIFO_12_writeBackGPR_T_48) @[utils.scala 10:20]
              when _debugFIFO_12_writeBackGPR_T_54 : @[utils.scala 10:20]
                debugFIFO_12_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_12_writeBackGPR_T_55 = eq(UInt<6>("h23"), _debugFIFO_12_writeBackGPR_T_48) @[utils.scala 10:20]
                when _debugFIFO_12_writeBackGPR_T_55 : @[utils.scala 10:20]
                  debugFIFO_12_writeBackGPR_insType_3 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_12_writeBackGPR_T_56 = eq(UInt<5>("h13"), _debugFIFO_12_writeBackGPR_T_48) @[utils.scala 10:20]
                  when _debugFIFO_12_writeBackGPR_T_56 : @[utils.scala 10:20]
                    debugFIFO_12_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_12_writeBackGPR_T_57 = eq(UInt<5>("h1b"), _debugFIFO_12_writeBackGPR_T_48) @[utils.scala 10:20]
                    when _debugFIFO_12_writeBackGPR_T_57 : @[utils.scala 10:20]
                      debugFIFO_12_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_12_writeBackGPR_T_58 = eq(UInt<6>("h33"), _debugFIFO_12_writeBackGPR_T_48) @[utils.scala 10:20]
                      when _debugFIFO_12_writeBackGPR_T_58 : @[utils.scala 10:20]
                        debugFIFO_12_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_12_writeBackGPR_T_59 = eq(UInt<6>("h3b"), _debugFIFO_12_writeBackGPR_T_48) @[utils.scala 10:20]
                        when _debugFIFO_12_writeBackGPR_T_59 : @[utils.scala 10:20]
                          debugFIFO_12_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_12_writeBackGPR_T_60 = eq(UInt<7>("h73"), _debugFIFO_12_writeBackGPR_T_48) @[utils.scala 10:20]
                          when _debugFIFO_12_writeBackGPR_T_60 : @[utils.scala 10:20]
                            debugFIFO_12_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_12_writeBackGPR_T_61 = eq(UInt<4>("hf"), _debugFIFO_12_writeBackGPR_T_48) @[utils.scala 10:20]
                            when _debugFIFO_12_writeBackGPR_T_61 : @[utils.scala 10:20]
                              debugFIFO_12_writeBackGPR_insType_3 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_12_writeBackGPR_T_62 = eq(UInt<6>("h2f"), _debugFIFO_12_writeBackGPR_T_48) @[utils.scala 10:20]
                              when _debugFIFO_12_writeBackGPR_T_62 : @[utils.scala 10:20]
                                debugFIFO_12_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_12_writeBackGPR_T_63 = eq(UInt<3>("h5"), debugFIFO_12_writeBackGPR_insType_3) @[rob.scala 52:141]
    node _debugFIFO_12_writeBackGPR_T_64 = or(_debugFIFO_12_writeBackGPR_T_15, _debugFIFO_12_writeBackGPR_T_31) @[rob.scala 52:197]
    node _debugFIFO_12_writeBackGPR_T_65 = or(_debugFIFO_12_writeBackGPR_T_64, _debugFIFO_12_writeBackGPR_T_47) @[rob.scala 52:197]
    node _debugFIFO_12_writeBackGPR_T_66 = or(_debugFIFO_12_writeBackGPR_T_65, _debugFIFO_12_writeBackGPR_T_63) @[rob.scala 52:197]
    node _debugFIFO_12_writeBackGPR_T_67 = bits(debugFIFO[12].instruction, 11, 7) @[rob.scala 52:223]
    node _debugFIFO_12_writeBackGPR_T_68 = orr(_debugFIFO_12_writeBackGPR_T_67) @[rob.scala 52:231]
    node _debugFIFO_12_writeBackGPR_T_69 = and(_debugFIFO_12_writeBackGPR_T_66, _debugFIFO_12_writeBackGPR_T_68) @[rob.scala 52:203]
    node _debugFIFO_12_writeBackGPR_T_70 = and(_debugFIFO_12_writeBackGPR_T_69, debugFIFO[12].valid) @[rob.scala 52:235]
    debugFIFO[12].writeBackGPR <= _debugFIFO_12_writeBackGPR_T_70 @[rob.scala 52:52]
    node _debugFIFO_13_writeBackGPR_T = bits(debugFIFO[13].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_13_writeBackGPR_insType : UInt<3>
    debugFIFO_13_writeBackGPR_insType <= UInt<3>("h0")
    node _debugFIFO_13_writeBackGPR_T_1 = eq(UInt<6>("h37"), _debugFIFO_13_writeBackGPR_T) @[utils.scala 10:20]
    when _debugFIFO_13_writeBackGPR_T_1 : @[utils.scala 10:20]
      debugFIFO_13_writeBackGPR_insType <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_13_writeBackGPR_T_2 = eq(UInt<5>("h17"), _debugFIFO_13_writeBackGPR_T) @[utils.scala 10:20]
      when _debugFIFO_13_writeBackGPR_T_2 : @[utils.scala 10:20]
        debugFIFO_13_writeBackGPR_insType <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_13_writeBackGPR_T_3 = eq(UInt<7>("h6f"), _debugFIFO_13_writeBackGPR_T) @[utils.scala 10:20]
        when _debugFIFO_13_writeBackGPR_T_3 : @[utils.scala 10:20]
          debugFIFO_13_writeBackGPR_insType <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_13_writeBackGPR_T_4 = eq(UInt<7>("h67"), _debugFIFO_13_writeBackGPR_T) @[utils.scala 10:20]
          when _debugFIFO_13_writeBackGPR_T_4 : @[utils.scala 10:20]
            debugFIFO_13_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_13_writeBackGPR_T_5 = eq(UInt<7>("h63"), _debugFIFO_13_writeBackGPR_T) @[utils.scala 10:20]
            when _debugFIFO_13_writeBackGPR_T_5 : @[utils.scala 10:20]
              debugFIFO_13_writeBackGPR_insType <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_13_writeBackGPR_T_6 = eq(UInt<2>("h3"), _debugFIFO_13_writeBackGPR_T) @[utils.scala 10:20]
              when _debugFIFO_13_writeBackGPR_T_6 : @[utils.scala 10:20]
                debugFIFO_13_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_13_writeBackGPR_T_7 = eq(UInt<6>("h23"), _debugFIFO_13_writeBackGPR_T) @[utils.scala 10:20]
                when _debugFIFO_13_writeBackGPR_T_7 : @[utils.scala 10:20]
                  debugFIFO_13_writeBackGPR_insType <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_13_writeBackGPR_T_8 = eq(UInt<5>("h13"), _debugFIFO_13_writeBackGPR_T) @[utils.scala 10:20]
                  when _debugFIFO_13_writeBackGPR_T_8 : @[utils.scala 10:20]
                    debugFIFO_13_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_13_writeBackGPR_T_9 = eq(UInt<5>("h1b"), _debugFIFO_13_writeBackGPR_T) @[utils.scala 10:20]
                    when _debugFIFO_13_writeBackGPR_T_9 : @[utils.scala 10:20]
                      debugFIFO_13_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_13_writeBackGPR_T_10 = eq(UInt<6>("h33"), _debugFIFO_13_writeBackGPR_T) @[utils.scala 10:20]
                      when _debugFIFO_13_writeBackGPR_T_10 : @[utils.scala 10:20]
                        debugFIFO_13_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_13_writeBackGPR_T_11 = eq(UInt<6>("h3b"), _debugFIFO_13_writeBackGPR_T) @[utils.scala 10:20]
                        when _debugFIFO_13_writeBackGPR_T_11 : @[utils.scala 10:20]
                          debugFIFO_13_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_13_writeBackGPR_T_12 = eq(UInt<7>("h73"), _debugFIFO_13_writeBackGPR_T) @[utils.scala 10:20]
                          when _debugFIFO_13_writeBackGPR_T_12 : @[utils.scala 10:20]
                            debugFIFO_13_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_13_writeBackGPR_T_13 = eq(UInt<4>("hf"), _debugFIFO_13_writeBackGPR_T) @[utils.scala 10:20]
                            when _debugFIFO_13_writeBackGPR_T_13 : @[utils.scala 10:20]
                              debugFIFO_13_writeBackGPR_insType <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_13_writeBackGPR_T_14 = eq(UInt<6>("h2f"), _debugFIFO_13_writeBackGPR_T) @[utils.scala 10:20]
                              when _debugFIFO_13_writeBackGPR_T_14 : @[utils.scala 10:20]
                                debugFIFO_13_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_13_writeBackGPR_T_15 = eq(UInt<1>("h1"), debugFIFO_13_writeBackGPR_insType) @[rob.scala 52:141]
    node _debugFIFO_13_writeBackGPR_T_16 = bits(debugFIFO[13].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_13_writeBackGPR_insType_1 : UInt<3>
    debugFIFO_13_writeBackGPR_insType_1 <= UInt<3>("h0")
    node _debugFIFO_13_writeBackGPR_T_17 = eq(UInt<6>("h37"), _debugFIFO_13_writeBackGPR_T_16) @[utils.scala 10:20]
    when _debugFIFO_13_writeBackGPR_T_17 : @[utils.scala 10:20]
      debugFIFO_13_writeBackGPR_insType_1 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_13_writeBackGPR_T_18 = eq(UInt<5>("h17"), _debugFIFO_13_writeBackGPR_T_16) @[utils.scala 10:20]
      when _debugFIFO_13_writeBackGPR_T_18 : @[utils.scala 10:20]
        debugFIFO_13_writeBackGPR_insType_1 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_13_writeBackGPR_T_19 = eq(UInt<7>("h6f"), _debugFIFO_13_writeBackGPR_T_16) @[utils.scala 10:20]
        when _debugFIFO_13_writeBackGPR_T_19 : @[utils.scala 10:20]
          debugFIFO_13_writeBackGPR_insType_1 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_13_writeBackGPR_T_20 = eq(UInt<7>("h67"), _debugFIFO_13_writeBackGPR_T_16) @[utils.scala 10:20]
          when _debugFIFO_13_writeBackGPR_T_20 : @[utils.scala 10:20]
            debugFIFO_13_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_13_writeBackGPR_T_21 = eq(UInt<7>("h63"), _debugFIFO_13_writeBackGPR_T_16) @[utils.scala 10:20]
            when _debugFIFO_13_writeBackGPR_T_21 : @[utils.scala 10:20]
              debugFIFO_13_writeBackGPR_insType_1 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_13_writeBackGPR_T_22 = eq(UInt<2>("h3"), _debugFIFO_13_writeBackGPR_T_16) @[utils.scala 10:20]
              when _debugFIFO_13_writeBackGPR_T_22 : @[utils.scala 10:20]
                debugFIFO_13_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_13_writeBackGPR_T_23 = eq(UInt<6>("h23"), _debugFIFO_13_writeBackGPR_T_16) @[utils.scala 10:20]
                when _debugFIFO_13_writeBackGPR_T_23 : @[utils.scala 10:20]
                  debugFIFO_13_writeBackGPR_insType_1 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_13_writeBackGPR_T_24 = eq(UInt<5>("h13"), _debugFIFO_13_writeBackGPR_T_16) @[utils.scala 10:20]
                  when _debugFIFO_13_writeBackGPR_T_24 : @[utils.scala 10:20]
                    debugFIFO_13_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_13_writeBackGPR_T_25 = eq(UInt<5>("h1b"), _debugFIFO_13_writeBackGPR_T_16) @[utils.scala 10:20]
                    when _debugFIFO_13_writeBackGPR_T_25 : @[utils.scala 10:20]
                      debugFIFO_13_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_13_writeBackGPR_T_26 = eq(UInt<6>("h33"), _debugFIFO_13_writeBackGPR_T_16) @[utils.scala 10:20]
                      when _debugFIFO_13_writeBackGPR_T_26 : @[utils.scala 10:20]
                        debugFIFO_13_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_13_writeBackGPR_T_27 = eq(UInt<6>("h3b"), _debugFIFO_13_writeBackGPR_T_16) @[utils.scala 10:20]
                        when _debugFIFO_13_writeBackGPR_T_27 : @[utils.scala 10:20]
                          debugFIFO_13_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_13_writeBackGPR_T_28 = eq(UInt<7>("h73"), _debugFIFO_13_writeBackGPR_T_16) @[utils.scala 10:20]
                          when _debugFIFO_13_writeBackGPR_T_28 : @[utils.scala 10:20]
                            debugFIFO_13_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_13_writeBackGPR_T_29 = eq(UInt<4>("hf"), _debugFIFO_13_writeBackGPR_T_16) @[utils.scala 10:20]
                            when _debugFIFO_13_writeBackGPR_T_29 : @[utils.scala 10:20]
                              debugFIFO_13_writeBackGPR_insType_1 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_13_writeBackGPR_T_30 = eq(UInt<6>("h2f"), _debugFIFO_13_writeBackGPR_T_16) @[utils.scala 10:20]
                              when _debugFIFO_13_writeBackGPR_T_30 : @[utils.scala 10:20]
                                debugFIFO_13_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_13_writeBackGPR_T_31 = eq(UInt<1>("h0"), debugFIFO_13_writeBackGPR_insType_1) @[rob.scala 52:141]
    node _debugFIFO_13_writeBackGPR_T_32 = bits(debugFIFO[13].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_13_writeBackGPR_insType_2 : UInt<3>
    debugFIFO_13_writeBackGPR_insType_2 <= UInt<3>("h0")
    node _debugFIFO_13_writeBackGPR_T_33 = eq(UInt<6>("h37"), _debugFIFO_13_writeBackGPR_T_32) @[utils.scala 10:20]
    when _debugFIFO_13_writeBackGPR_T_33 : @[utils.scala 10:20]
      debugFIFO_13_writeBackGPR_insType_2 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_13_writeBackGPR_T_34 = eq(UInt<5>("h17"), _debugFIFO_13_writeBackGPR_T_32) @[utils.scala 10:20]
      when _debugFIFO_13_writeBackGPR_T_34 : @[utils.scala 10:20]
        debugFIFO_13_writeBackGPR_insType_2 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_13_writeBackGPR_T_35 = eq(UInt<7>("h6f"), _debugFIFO_13_writeBackGPR_T_32) @[utils.scala 10:20]
        when _debugFIFO_13_writeBackGPR_T_35 : @[utils.scala 10:20]
          debugFIFO_13_writeBackGPR_insType_2 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_13_writeBackGPR_T_36 = eq(UInt<7>("h67"), _debugFIFO_13_writeBackGPR_T_32) @[utils.scala 10:20]
          when _debugFIFO_13_writeBackGPR_T_36 : @[utils.scala 10:20]
            debugFIFO_13_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_13_writeBackGPR_T_37 = eq(UInt<7>("h63"), _debugFIFO_13_writeBackGPR_T_32) @[utils.scala 10:20]
            when _debugFIFO_13_writeBackGPR_T_37 : @[utils.scala 10:20]
              debugFIFO_13_writeBackGPR_insType_2 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_13_writeBackGPR_T_38 = eq(UInt<2>("h3"), _debugFIFO_13_writeBackGPR_T_32) @[utils.scala 10:20]
              when _debugFIFO_13_writeBackGPR_T_38 : @[utils.scala 10:20]
                debugFIFO_13_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_13_writeBackGPR_T_39 = eq(UInt<6>("h23"), _debugFIFO_13_writeBackGPR_T_32) @[utils.scala 10:20]
                when _debugFIFO_13_writeBackGPR_T_39 : @[utils.scala 10:20]
                  debugFIFO_13_writeBackGPR_insType_2 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_13_writeBackGPR_T_40 = eq(UInt<5>("h13"), _debugFIFO_13_writeBackGPR_T_32) @[utils.scala 10:20]
                  when _debugFIFO_13_writeBackGPR_T_40 : @[utils.scala 10:20]
                    debugFIFO_13_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_13_writeBackGPR_T_41 = eq(UInt<5>("h1b"), _debugFIFO_13_writeBackGPR_T_32) @[utils.scala 10:20]
                    when _debugFIFO_13_writeBackGPR_T_41 : @[utils.scala 10:20]
                      debugFIFO_13_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_13_writeBackGPR_T_42 = eq(UInt<6>("h33"), _debugFIFO_13_writeBackGPR_T_32) @[utils.scala 10:20]
                      when _debugFIFO_13_writeBackGPR_T_42 : @[utils.scala 10:20]
                        debugFIFO_13_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_13_writeBackGPR_T_43 = eq(UInt<6>("h3b"), _debugFIFO_13_writeBackGPR_T_32) @[utils.scala 10:20]
                        when _debugFIFO_13_writeBackGPR_T_43 : @[utils.scala 10:20]
                          debugFIFO_13_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_13_writeBackGPR_T_44 = eq(UInt<7>("h73"), _debugFIFO_13_writeBackGPR_T_32) @[utils.scala 10:20]
                          when _debugFIFO_13_writeBackGPR_T_44 : @[utils.scala 10:20]
                            debugFIFO_13_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_13_writeBackGPR_T_45 = eq(UInt<4>("hf"), _debugFIFO_13_writeBackGPR_T_32) @[utils.scala 10:20]
                            when _debugFIFO_13_writeBackGPR_T_45 : @[utils.scala 10:20]
                              debugFIFO_13_writeBackGPR_insType_2 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_13_writeBackGPR_T_46 = eq(UInt<6>("h2f"), _debugFIFO_13_writeBackGPR_T_32) @[utils.scala 10:20]
                              when _debugFIFO_13_writeBackGPR_T_46 : @[utils.scala 10:20]
                                debugFIFO_13_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_13_writeBackGPR_T_47 = eq(UInt<3>("h4"), debugFIFO_13_writeBackGPR_insType_2) @[rob.scala 52:141]
    node _debugFIFO_13_writeBackGPR_T_48 = bits(debugFIFO[13].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_13_writeBackGPR_insType_3 : UInt<3>
    debugFIFO_13_writeBackGPR_insType_3 <= UInt<3>("h0")
    node _debugFIFO_13_writeBackGPR_T_49 = eq(UInt<6>("h37"), _debugFIFO_13_writeBackGPR_T_48) @[utils.scala 10:20]
    when _debugFIFO_13_writeBackGPR_T_49 : @[utils.scala 10:20]
      debugFIFO_13_writeBackGPR_insType_3 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_13_writeBackGPR_T_50 = eq(UInt<5>("h17"), _debugFIFO_13_writeBackGPR_T_48) @[utils.scala 10:20]
      when _debugFIFO_13_writeBackGPR_T_50 : @[utils.scala 10:20]
        debugFIFO_13_writeBackGPR_insType_3 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_13_writeBackGPR_T_51 = eq(UInt<7>("h6f"), _debugFIFO_13_writeBackGPR_T_48) @[utils.scala 10:20]
        when _debugFIFO_13_writeBackGPR_T_51 : @[utils.scala 10:20]
          debugFIFO_13_writeBackGPR_insType_3 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_13_writeBackGPR_T_52 = eq(UInt<7>("h67"), _debugFIFO_13_writeBackGPR_T_48) @[utils.scala 10:20]
          when _debugFIFO_13_writeBackGPR_T_52 : @[utils.scala 10:20]
            debugFIFO_13_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_13_writeBackGPR_T_53 = eq(UInt<7>("h63"), _debugFIFO_13_writeBackGPR_T_48) @[utils.scala 10:20]
            when _debugFIFO_13_writeBackGPR_T_53 : @[utils.scala 10:20]
              debugFIFO_13_writeBackGPR_insType_3 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_13_writeBackGPR_T_54 = eq(UInt<2>("h3"), _debugFIFO_13_writeBackGPR_T_48) @[utils.scala 10:20]
              when _debugFIFO_13_writeBackGPR_T_54 : @[utils.scala 10:20]
                debugFIFO_13_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_13_writeBackGPR_T_55 = eq(UInt<6>("h23"), _debugFIFO_13_writeBackGPR_T_48) @[utils.scala 10:20]
                when _debugFIFO_13_writeBackGPR_T_55 : @[utils.scala 10:20]
                  debugFIFO_13_writeBackGPR_insType_3 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_13_writeBackGPR_T_56 = eq(UInt<5>("h13"), _debugFIFO_13_writeBackGPR_T_48) @[utils.scala 10:20]
                  when _debugFIFO_13_writeBackGPR_T_56 : @[utils.scala 10:20]
                    debugFIFO_13_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_13_writeBackGPR_T_57 = eq(UInt<5>("h1b"), _debugFIFO_13_writeBackGPR_T_48) @[utils.scala 10:20]
                    when _debugFIFO_13_writeBackGPR_T_57 : @[utils.scala 10:20]
                      debugFIFO_13_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_13_writeBackGPR_T_58 = eq(UInt<6>("h33"), _debugFIFO_13_writeBackGPR_T_48) @[utils.scala 10:20]
                      when _debugFIFO_13_writeBackGPR_T_58 : @[utils.scala 10:20]
                        debugFIFO_13_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_13_writeBackGPR_T_59 = eq(UInt<6>("h3b"), _debugFIFO_13_writeBackGPR_T_48) @[utils.scala 10:20]
                        when _debugFIFO_13_writeBackGPR_T_59 : @[utils.scala 10:20]
                          debugFIFO_13_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_13_writeBackGPR_T_60 = eq(UInt<7>("h73"), _debugFIFO_13_writeBackGPR_T_48) @[utils.scala 10:20]
                          when _debugFIFO_13_writeBackGPR_T_60 : @[utils.scala 10:20]
                            debugFIFO_13_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_13_writeBackGPR_T_61 = eq(UInt<4>("hf"), _debugFIFO_13_writeBackGPR_T_48) @[utils.scala 10:20]
                            when _debugFIFO_13_writeBackGPR_T_61 : @[utils.scala 10:20]
                              debugFIFO_13_writeBackGPR_insType_3 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_13_writeBackGPR_T_62 = eq(UInt<6>("h2f"), _debugFIFO_13_writeBackGPR_T_48) @[utils.scala 10:20]
                              when _debugFIFO_13_writeBackGPR_T_62 : @[utils.scala 10:20]
                                debugFIFO_13_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_13_writeBackGPR_T_63 = eq(UInt<3>("h5"), debugFIFO_13_writeBackGPR_insType_3) @[rob.scala 52:141]
    node _debugFIFO_13_writeBackGPR_T_64 = or(_debugFIFO_13_writeBackGPR_T_15, _debugFIFO_13_writeBackGPR_T_31) @[rob.scala 52:197]
    node _debugFIFO_13_writeBackGPR_T_65 = or(_debugFIFO_13_writeBackGPR_T_64, _debugFIFO_13_writeBackGPR_T_47) @[rob.scala 52:197]
    node _debugFIFO_13_writeBackGPR_T_66 = or(_debugFIFO_13_writeBackGPR_T_65, _debugFIFO_13_writeBackGPR_T_63) @[rob.scala 52:197]
    node _debugFIFO_13_writeBackGPR_T_67 = bits(debugFIFO[13].instruction, 11, 7) @[rob.scala 52:223]
    node _debugFIFO_13_writeBackGPR_T_68 = orr(_debugFIFO_13_writeBackGPR_T_67) @[rob.scala 52:231]
    node _debugFIFO_13_writeBackGPR_T_69 = and(_debugFIFO_13_writeBackGPR_T_66, _debugFIFO_13_writeBackGPR_T_68) @[rob.scala 52:203]
    node _debugFIFO_13_writeBackGPR_T_70 = and(_debugFIFO_13_writeBackGPR_T_69, debugFIFO[13].valid) @[rob.scala 52:235]
    debugFIFO[13].writeBackGPR <= _debugFIFO_13_writeBackGPR_T_70 @[rob.scala 52:52]
    node _debugFIFO_14_writeBackGPR_T = bits(debugFIFO[14].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_14_writeBackGPR_insType : UInt<3>
    debugFIFO_14_writeBackGPR_insType <= UInt<3>("h0")
    node _debugFIFO_14_writeBackGPR_T_1 = eq(UInt<6>("h37"), _debugFIFO_14_writeBackGPR_T) @[utils.scala 10:20]
    when _debugFIFO_14_writeBackGPR_T_1 : @[utils.scala 10:20]
      debugFIFO_14_writeBackGPR_insType <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_14_writeBackGPR_T_2 = eq(UInt<5>("h17"), _debugFIFO_14_writeBackGPR_T) @[utils.scala 10:20]
      when _debugFIFO_14_writeBackGPR_T_2 : @[utils.scala 10:20]
        debugFIFO_14_writeBackGPR_insType <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_14_writeBackGPR_T_3 = eq(UInt<7>("h6f"), _debugFIFO_14_writeBackGPR_T) @[utils.scala 10:20]
        when _debugFIFO_14_writeBackGPR_T_3 : @[utils.scala 10:20]
          debugFIFO_14_writeBackGPR_insType <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_14_writeBackGPR_T_4 = eq(UInt<7>("h67"), _debugFIFO_14_writeBackGPR_T) @[utils.scala 10:20]
          when _debugFIFO_14_writeBackGPR_T_4 : @[utils.scala 10:20]
            debugFIFO_14_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_14_writeBackGPR_T_5 = eq(UInt<7>("h63"), _debugFIFO_14_writeBackGPR_T) @[utils.scala 10:20]
            when _debugFIFO_14_writeBackGPR_T_5 : @[utils.scala 10:20]
              debugFIFO_14_writeBackGPR_insType <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_14_writeBackGPR_T_6 = eq(UInt<2>("h3"), _debugFIFO_14_writeBackGPR_T) @[utils.scala 10:20]
              when _debugFIFO_14_writeBackGPR_T_6 : @[utils.scala 10:20]
                debugFIFO_14_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_14_writeBackGPR_T_7 = eq(UInt<6>("h23"), _debugFIFO_14_writeBackGPR_T) @[utils.scala 10:20]
                when _debugFIFO_14_writeBackGPR_T_7 : @[utils.scala 10:20]
                  debugFIFO_14_writeBackGPR_insType <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_14_writeBackGPR_T_8 = eq(UInt<5>("h13"), _debugFIFO_14_writeBackGPR_T) @[utils.scala 10:20]
                  when _debugFIFO_14_writeBackGPR_T_8 : @[utils.scala 10:20]
                    debugFIFO_14_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_14_writeBackGPR_T_9 = eq(UInt<5>("h1b"), _debugFIFO_14_writeBackGPR_T) @[utils.scala 10:20]
                    when _debugFIFO_14_writeBackGPR_T_9 : @[utils.scala 10:20]
                      debugFIFO_14_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_14_writeBackGPR_T_10 = eq(UInt<6>("h33"), _debugFIFO_14_writeBackGPR_T) @[utils.scala 10:20]
                      when _debugFIFO_14_writeBackGPR_T_10 : @[utils.scala 10:20]
                        debugFIFO_14_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_14_writeBackGPR_T_11 = eq(UInt<6>("h3b"), _debugFIFO_14_writeBackGPR_T) @[utils.scala 10:20]
                        when _debugFIFO_14_writeBackGPR_T_11 : @[utils.scala 10:20]
                          debugFIFO_14_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_14_writeBackGPR_T_12 = eq(UInt<7>("h73"), _debugFIFO_14_writeBackGPR_T) @[utils.scala 10:20]
                          when _debugFIFO_14_writeBackGPR_T_12 : @[utils.scala 10:20]
                            debugFIFO_14_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_14_writeBackGPR_T_13 = eq(UInt<4>("hf"), _debugFIFO_14_writeBackGPR_T) @[utils.scala 10:20]
                            when _debugFIFO_14_writeBackGPR_T_13 : @[utils.scala 10:20]
                              debugFIFO_14_writeBackGPR_insType <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_14_writeBackGPR_T_14 = eq(UInt<6>("h2f"), _debugFIFO_14_writeBackGPR_T) @[utils.scala 10:20]
                              when _debugFIFO_14_writeBackGPR_T_14 : @[utils.scala 10:20]
                                debugFIFO_14_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_14_writeBackGPR_T_15 = eq(UInt<1>("h1"), debugFIFO_14_writeBackGPR_insType) @[rob.scala 52:141]
    node _debugFIFO_14_writeBackGPR_T_16 = bits(debugFIFO[14].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_14_writeBackGPR_insType_1 : UInt<3>
    debugFIFO_14_writeBackGPR_insType_1 <= UInt<3>("h0")
    node _debugFIFO_14_writeBackGPR_T_17 = eq(UInt<6>("h37"), _debugFIFO_14_writeBackGPR_T_16) @[utils.scala 10:20]
    when _debugFIFO_14_writeBackGPR_T_17 : @[utils.scala 10:20]
      debugFIFO_14_writeBackGPR_insType_1 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_14_writeBackGPR_T_18 = eq(UInt<5>("h17"), _debugFIFO_14_writeBackGPR_T_16) @[utils.scala 10:20]
      when _debugFIFO_14_writeBackGPR_T_18 : @[utils.scala 10:20]
        debugFIFO_14_writeBackGPR_insType_1 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_14_writeBackGPR_T_19 = eq(UInt<7>("h6f"), _debugFIFO_14_writeBackGPR_T_16) @[utils.scala 10:20]
        when _debugFIFO_14_writeBackGPR_T_19 : @[utils.scala 10:20]
          debugFIFO_14_writeBackGPR_insType_1 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_14_writeBackGPR_T_20 = eq(UInt<7>("h67"), _debugFIFO_14_writeBackGPR_T_16) @[utils.scala 10:20]
          when _debugFIFO_14_writeBackGPR_T_20 : @[utils.scala 10:20]
            debugFIFO_14_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_14_writeBackGPR_T_21 = eq(UInt<7>("h63"), _debugFIFO_14_writeBackGPR_T_16) @[utils.scala 10:20]
            when _debugFIFO_14_writeBackGPR_T_21 : @[utils.scala 10:20]
              debugFIFO_14_writeBackGPR_insType_1 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_14_writeBackGPR_T_22 = eq(UInt<2>("h3"), _debugFIFO_14_writeBackGPR_T_16) @[utils.scala 10:20]
              when _debugFIFO_14_writeBackGPR_T_22 : @[utils.scala 10:20]
                debugFIFO_14_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_14_writeBackGPR_T_23 = eq(UInt<6>("h23"), _debugFIFO_14_writeBackGPR_T_16) @[utils.scala 10:20]
                when _debugFIFO_14_writeBackGPR_T_23 : @[utils.scala 10:20]
                  debugFIFO_14_writeBackGPR_insType_1 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_14_writeBackGPR_T_24 = eq(UInt<5>("h13"), _debugFIFO_14_writeBackGPR_T_16) @[utils.scala 10:20]
                  when _debugFIFO_14_writeBackGPR_T_24 : @[utils.scala 10:20]
                    debugFIFO_14_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_14_writeBackGPR_T_25 = eq(UInt<5>("h1b"), _debugFIFO_14_writeBackGPR_T_16) @[utils.scala 10:20]
                    when _debugFIFO_14_writeBackGPR_T_25 : @[utils.scala 10:20]
                      debugFIFO_14_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_14_writeBackGPR_T_26 = eq(UInt<6>("h33"), _debugFIFO_14_writeBackGPR_T_16) @[utils.scala 10:20]
                      when _debugFIFO_14_writeBackGPR_T_26 : @[utils.scala 10:20]
                        debugFIFO_14_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_14_writeBackGPR_T_27 = eq(UInt<6>("h3b"), _debugFIFO_14_writeBackGPR_T_16) @[utils.scala 10:20]
                        when _debugFIFO_14_writeBackGPR_T_27 : @[utils.scala 10:20]
                          debugFIFO_14_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_14_writeBackGPR_T_28 = eq(UInt<7>("h73"), _debugFIFO_14_writeBackGPR_T_16) @[utils.scala 10:20]
                          when _debugFIFO_14_writeBackGPR_T_28 : @[utils.scala 10:20]
                            debugFIFO_14_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_14_writeBackGPR_T_29 = eq(UInt<4>("hf"), _debugFIFO_14_writeBackGPR_T_16) @[utils.scala 10:20]
                            when _debugFIFO_14_writeBackGPR_T_29 : @[utils.scala 10:20]
                              debugFIFO_14_writeBackGPR_insType_1 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_14_writeBackGPR_T_30 = eq(UInt<6>("h2f"), _debugFIFO_14_writeBackGPR_T_16) @[utils.scala 10:20]
                              when _debugFIFO_14_writeBackGPR_T_30 : @[utils.scala 10:20]
                                debugFIFO_14_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_14_writeBackGPR_T_31 = eq(UInt<1>("h0"), debugFIFO_14_writeBackGPR_insType_1) @[rob.scala 52:141]
    node _debugFIFO_14_writeBackGPR_T_32 = bits(debugFIFO[14].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_14_writeBackGPR_insType_2 : UInt<3>
    debugFIFO_14_writeBackGPR_insType_2 <= UInt<3>("h0")
    node _debugFIFO_14_writeBackGPR_T_33 = eq(UInt<6>("h37"), _debugFIFO_14_writeBackGPR_T_32) @[utils.scala 10:20]
    when _debugFIFO_14_writeBackGPR_T_33 : @[utils.scala 10:20]
      debugFIFO_14_writeBackGPR_insType_2 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_14_writeBackGPR_T_34 = eq(UInt<5>("h17"), _debugFIFO_14_writeBackGPR_T_32) @[utils.scala 10:20]
      when _debugFIFO_14_writeBackGPR_T_34 : @[utils.scala 10:20]
        debugFIFO_14_writeBackGPR_insType_2 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_14_writeBackGPR_T_35 = eq(UInt<7>("h6f"), _debugFIFO_14_writeBackGPR_T_32) @[utils.scala 10:20]
        when _debugFIFO_14_writeBackGPR_T_35 : @[utils.scala 10:20]
          debugFIFO_14_writeBackGPR_insType_2 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_14_writeBackGPR_T_36 = eq(UInt<7>("h67"), _debugFIFO_14_writeBackGPR_T_32) @[utils.scala 10:20]
          when _debugFIFO_14_writeBackGPR_T_36 : @[utils.scala 10:20]
            debugFIFO_14_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_14_writeBackGPR_T_37 = eq(UInt<7>("h63"), _debugFIFO_14_writeBackGPR_T_32) @[utils.scala 10:20]
            when _debugFIFO_14_writeBackGPR_T_37 : @[utils.scala 10:20]
              debugFIFO_14_writeBackGPR_insType_2 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_14_writeBackGPR_T_38 = eq(UInt<2>("h3"), _debugFIFO_14_writeBackGPR_T_32) @[utils.scala 10:20]
              when _debugFIFO_14_writeBackGPR_T_38 : @[utils.scala 10:20]
                debugFIFO_14_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_14_writeBackGPR_T_39 = eq(UInt<6>("h23"), _debugFIFO_14_writeBackGPR_T_32) @[utils.scala 10:20]
                when _debugFIFO_14_writeBackGPR_T_39 : @[utils.scala 10:20]
                  debugFIFO_14_writeBackGPR_insType_2 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_14_writeBackGPR_T_40 = eq(UInt<5>("h13"), _debugFIFO_14_writeBackGPR_T_32) @[utils.scala 10:20]
                  when _debugFIFO_14_writeBackGPR_T_40 : @[utils.scala 10:20]
                    debugFIFO_14_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_14_writeBackGPR_T_41 = eq(UInt<5>("h1b"), _debugFIFO_14_writeBackGPR_T_32) @[utils.scala 10:20]
                    when _debugFIFO_14_writeBackGPR_T_41 : @[utils.scala 10:20]
                      debugFIFO_14_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_14_writeBackGPR_T_42 = eq(UInt<6>("h33"), _debugFIFO_14_writeBackGPR_T_32) @[utils.scala 10:20]
                      when _debugFIFO_14_writeBackGPR_T_42 : @[utils.scala 10:20]
                        debugFIFO_14_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_14_writeBackGPR_T_43 = eq(UInt<6>("h3b"), _debugFIFO_14_writeBackGPR_T_32) @[utils.scala 10:20]
                        when _debugFIFO_14_writeBackGPR_T_43 : @[utils.scala 10:20]
                          debugFIFO_14_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_14_writeBackGPR_T_44 = eq(UInt<7>("h73"), _debugFIFO_14_writeBackGPR_T_32) @[utils.scala 10:20]
                          when _debugFIFO_14_writeBackGPR_T_44 : @[utils.scala 10:20]
                            debugFIFO_14_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_14_writeBackGPR_T_45 = eq(UInt<4>("hf"), _debugFIFO_14_writeBackGPR_T_32) @[utils.scala 10:20]
                            when _debugFIFO_14_writeBackGPR_T_45 : @[utils.scala 10:20]
                              debugFIFO_14_writeBackGPR_insType_2 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_14_writeBackGPR_T_46 = eq(UInt<6>("h2f"), _debugFIFO_14_writeBackGPR_T_32) @[utils.scala 10:20]
                              when _debugFIFO_14_writeBackGPR_T_46 : @[utils.scala 10:20]
                                debugFIFO_14_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_14_writeBackGPR_T_47 = eq(UInt<3>("h4"), debugFIFO_14_writeBackGPR_insType_2) @[rob.scala 52:141]
    node _debugFIFO_14_writeBackGPR_T_48 = bits(debugFIFO[14].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_14_writeBackGPR_insType_3 : UInt<3>
    debugFIFO_14_writeBackGPR_insType_3 <= UInt<3>("h0")
    node _debugFIFO_14_writeBackGPR_T_49 = eq(UInt<6>("h37"), _debugFIFO_14_writeBackGPR_T_48) @[utils.scala 10:20]
    when _debugFIFO_14_writeBackGPR_T_49 : @[utils.scala 10:20]
      debugFIFO_14_writeBackGPR_insType_3 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_14_writeBackGPR_T_50 = eq(UInt<5>("h17"), _debugFIFO_14_writeBackGPR_T_48) @[utils.scala 10:20]
      when _debugFIFO_14_writeBackGPR_T_50 : @[utils.scala 10:20]
        debugFIFO_14_writeBackGPR_insType_3 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_14_writeBackGPR_T_51 = eq(UInt<7>("h6f"), _debugFIFO_14_writeBackGPR_T_48) @[utils.scala 10:20]
        when _debugFIFO_14_writeBackGPR_T_51 : @[utils.scala 10:20]
          debugFIFO_14_writeBackGPR_insType_3 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_14_writeBackGPR_T_52 = eq(UInt<7>("h67"), _debugFIFO_14_writeBackGPR_T_48) @[utils.scala 10:20]
          when _debugFIFO_14_writeBackGPR_T_52 : @[utils.scala 10:20]
            debugFIFO_14_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_14_writeBackGPR_T_53 = eq(UInt<7>("h63"), _debugFIFO_14_writeBackGPR_T_48) @[utils.scala 10:20]
            when _debugFIFO_14_writeBackGPR_T_53 : @[utils.scala 10:20]
              debugFIFO_14_writeBackGPR_insType_3 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_14_writeBackGPR_T_54 = eq(UInt<2>("h3"), _debugFIFO_14_writeBackGPR_T_48) @[utils.scala 10:20]
              when _debugFIFO_14_writeBackGPR_T_54 : @[utils.scala 10:20]
                debugFIFO_14_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_14_writeBackGPR_T_55 = eq(UInt<6>("h23"), _debugFIFO_14_writeBackGPR_T_48) @[utils.scala 10:20]
                when _debugFIFO_14_writeBackGPR_T_55 : @[utils.scala 10:20]
                  debugFIFO_14_writeBackGPR_insType_3 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_14_writeBackGPR_T_56 = eq(UInt<5>("h13"), _debugFIFO_14_writeBackGPR_T_48) @[utils.scala 10:20]
                  when _debugFIFO_14_writeBackGPR_T_56 : @[utils.scala 10:20]
                    debugFIFO_14_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_14_writeBackGPR_T_57 = eq(UInt<5>("h1b"), _debugFIFO_14_writeBackGPR_T_48) @[utils.scala 10:20]
                    when _debugFIFO_14_writeBackGPR_T_57 : @[utils.scala 10:20]
                      debugFIFO_14_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_14_writeBackGPR_T_58 = eq(UInt<6>("h33"), _debugFIFO_14_writeBackGPR_T_48) @[utils.scala 10:20]
                      when _debugFIFO_14_writeBackGPR_T_58 : @[utils.scala 10:20]
                        debugFIFO_14_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_14_writeBackGPR_T_59 = eq(UInt<6>("h3b"), _debugFIFO_14_writeBackGPR_T_48) @[utils.scala 10:20]
                        when _debugFIFO_14_writeBackGPR_T_59 : @[utils.scala 10:20]
                          debugFIFO_14_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_14_writeBackGPR_T_60 = eq(UInt<7>("h73"), _debugFIFO_14_writeBackGPR_T_48) @[utils.scala 10:20]
                          when _debugFIFO_14_writeBackGPR_T_60 : @[utils.scala 10:20]
                            debugFIFO_14_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_14_writeBackGPR_T_61 = eq(UInt<4>("hf"), _debugFIFO_14_writeBackGPR_T_48) @[utils.scala 10:20]
                            when _debugFIFO_14_writeBackGPR_T_61 : @[utils.scala 10:20]
                              debugFIFO_14_writeBackGPR_insType_3 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_14_writeBackGPR_T_62 = eq(UInt<6>("h2f"), _debugFIFO_14_writeBackGPR_T_48) @[utils.scala 10:20]
                              when _debugFIFO_14_writeBackGPR_T_62 : @[utils.scala 10:20]
                                debugFIFO_14_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_14_writeBackGPR_T_63 = eq(UInt<3>("h5"), debugFIFO_14_writeBackGPR_insType_3) @[rob.scala 52:141]
    node _debugFIFO_14_writeBackGPR_T_64 = or(_debugFIFO_14_writeBackGPR_T_15, _debugFIFO_14_writeBackGPR_T_31) @[rob.scala 52:197]
    node _debugFIFO_14_writeBackGPR_T_65 = or(_debugFIFO_14_writeBackGPR_T_64, _debugFIFO_14_writeBackGPR_T_47) @[rob.scala 52:197]
    node _debugFIFO_14_writeBackGPR_T_66 = or(_debugFIFO_14_writeBackGPR_T_65, _debugFIFO_14_writeBackGPR_T_63) @[rob.scala 52:197]
    node _debugFIFO_14_writeBackGPR_T_67 = bits(debugFIFO[14].instruction, 11, 7) @[rob.scala 52:223]
    node _debugFIFO_14_writeBackGPR_T_68 = orr(_debugFIFO_14_writeBackGPR_T_67) @[rob.scala 52:231]
    node _debugFIFO_14_writeBackGPR_T_69 = and(_debugFIFO_14_writeBackGPR_T_66, _debugFIFO_14_writeBackGPR_T_68) @[rob.scala 52:203]
    node _debugFIFO_14_writeBackGPR_T_70 = and(_debugFIFO_14_writeBackGPR_T_69, debugFIFO[14].valid) @[rob.scala 52:235]
    debugFIFO[14].writeBackGPR <= _debugFIFO_14_writeBackGPR_T_70 @[rob.scala 52:52]
    node _debugFIFO_15_writeBackGPR_T = bits(debugFIFO[15].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_15_writeBackGPR_insType : UInt<3>
    debugFIFO_15_writeBackGPR_insType <= UInt<3>("h0")
    node _debugFIFO_15_writeBackGPR_T_1 = eq(UInt<6>("h37"), _debugFIFO_15_writeBackGPR_T) @[utils.scala 10:20]
    when _debugFIFO_15_writeBackGPR_T_1 : @[utils.scala 10:20]
      debugFIFO_15_writeBackGPR_insType <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_15_writeBackGPR_T_2 = eq(UInt<5>("h17"), _debugFIFO_15_writeBackGPR_T) @[utils.scala 10:20]
      when _debugFIFO_15_writeBackGPR_T_2 : @[utils.scala 10:20]
        debugFIFO_15_writeBackGPR_insType <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_15_writeBackGPR_T_3 = eq(UInt<7>("h6f"), _debugFIFO_15_writeBackGPR_T) @[utils.scala 10:20]
        when _debugFIFO_15_writeBackGPR_T_3 : @[utils.scala 10:20]
          debugFIFO_15_writeBackGPR_insType <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_15_writeBackGPR_T_4 = eq(UInt<7>("h67"), _debugFIFO_15_writeBackGPR_T) @[utils.scala 10:20]
          when _debugFIFO_15_writeBackGPR_T_4 : @[utils.scala 10:20]
            debugFIFO_15_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_15_writeBackGPR_T_5 = eq(UInt<7>("h63"), _debugFIFO_15_writeBackGPR_T) @[utils.scala 10:20]
            when _debugFIFO_15_writeBackGPR_T_5 : @[utils.scala 10:20]
              debugFIFO_15_writeBackGPR_insType <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_15_writeBackGPR_T_6 = eq(UInt<2>("h3"), _debugFIFO_15_writeBackGPR_T) @[utils.scala 10:20]
              when _debugFIFO_15_writeBackGPR_T_6 : @[utils.scala 10:20]
                debugFIFO_15_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_15_writeBackGPR_T_7 = eq(UInt<6>("h23"), _debugFIFO_15_writeBackGPR_T) @[utils.scala 10:20]
                when _debugFIFO_15_writeBackGPR_T_7 : @[utils.scala 10:20]
                  debugFIFO_15_writeBackGPR_insType <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_15_writeBackGPR_T_8 = eq(UInt<5>("h13"), _debugFIFO_15_writeBackGPR_T) @[utils.scala 10:20]
                  when _debugFIFO_15_writeBackGPR_T_8 : @[utils.scala 10:20]
                    debugFIFO_15_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_15_writeBackGPR_T_9 = eq(UInt<5>("h1b"), _debugFIFO_15_writeBackGPR_T) @[utils.scala 10:20]
                    when _debugFIFO_15_writeBackGPR_T_9 : @[utils.scala 10:20]
                      debugFIFO_15_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_15_writeBackGPR_T_10 = eq(UInt<6>("h33"), _debugFIFO_15_writeBackGPR_T) @[utils.scala 10:20]
                      when _debugFIFO_15_writeBackGPR_T_10 : @[utils.scala 10:20]
                        debugFIFO_15_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_15_writeBackGPR_T_11 = eq(UInt<6>("h3b"), _debugFIFO_15_writeBackGPR_T) @[utils.scala 10:20]
                        when _debugFIFO_15_writeBackGPR_T_11 : @[utils.scala 10:20]
                          debugFIFO_15_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_15_writeBackGPR_T_12 = eq(UInt<7>("h73"), _debugFIFO_15_writeBackGPR_T) @[utils.scala 10:20]
                          when _debugFIFO_15_writeBackGPR_T_12 : @[utils.scala 10:20]
                            debugFIFO_15_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_15_writeBackGPR_T_13 = eq(UInt<4>("hf"), _debugFIFO_15_writeBackGPR_T) @[utils.scala 10:20]
                            when _debugFIFO_15_writeBackGPR_T_13 : @[utils.scala 10:20]
                              debugFIFO_15_writeBackGPR_insType <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_15_writeBackGPR_T_14 = eq(UInt<6>("h2f"), _debugFIFO_15_writeBackGPR_T) @[utils.scala 10:20]
                              when _debugFIFO_15_writeBackGPR_T_14 : @[utils.scala 10:20]
                                debugFIFO_15_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_15_writeBackGPR_T_15 = eq(UInt<1>("h1"), debugFIFO_15_writeBackGPR_insType) @[rob.scala 52:141]
    node _debugFIFO_15_writeBackGPR_T_16 = bits(debugFIFO[15].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_15_writeBackGPR_insType_1 : UInt<3>
    debugFIFO_15_writeBackGPR_insType_1 <= UInt<3>("h0")
    node _debugFIFO_15_writeBackGPR_T_17 = eq(UInt<6>("h37"), _debugFIFO_15_writeBackGPR_T_16) @[utils.scala 10:20]
    when _debugFIFO_15_writeBackGPR_T_17 : @[utils.scala 10:20]
      debugFIFO_15_writeBackGPR_insType_1 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_15_writeBackGPR_T_18 = eq(UInt<5>("h17"), _debugFIFO_15_writeBackGPR_T_16) @[utils.scala 10:20]
      when _debugFIFO_15_writeBackGPR_T_18 : @[utils.scala 10:20]
        debugFIFO_15_writeBackGPR_insType_1 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_15_writeBackGPR_T_19 = eq(UInt<7>("h6f"), _debugFIFO_15_writeBackGPR_T_16) @[utils.scala 10:20]
        when _debugFIFO_15_writeBackGPR_T_19 : @[utils.scala 10:20]
          debugFIFO_15_writeBackGPR_insType_1 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_15_writeBackGPR_T_20 = eq(UInt<7>("h67"), _debugFIFO_15_writeBackGPR_T_16) @[utils.scala 10:20]
          when _debugFIFO_15_writeBackGPR_T_20 : @[utils.scala 10:20]
            debugFIFO_15_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_15_writeBackGPR_T_21 = eq(UInt<7>("h63"), _debugFIFO_15_writeBackGPR_T_16) @[utils.scala 10:20]
            when _debugFIFO_15_writeBackGPR_T_21 : @[utils.scala 10:20]
              debugFIFO_15_writeBackGPR_insType_1 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_15_writeBackGPR_T_22 = eq(UInt<2>("h3"), _debugFIFO_15_writeBackGPR_T_16) @[utils.scala 10:20]
              when _debugFIFO_15_writeBackGPR_T_22 : @[utils.scala 10:20]
                debugFIFO_15_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_15_writeBackGPR_T_23 = eq(UInt<6>("h23"), _debugFIFO_15_writeBackGPR_T_16) @[utils.scala 10:20]
                when _debugFIFO_15_writeBackGPR_T_23 : @[utils.scala 10:20]
                  debugFIFO_15_writeBackGPR_insType_1 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_15_writeBackGPR_T_24 = eq(UInt<5>("h13"), _debugFIFO_15_writeBackGPR_T_16) @[utils.scala 10:20]
                  when _debugFIFO_15_writeBackGPR_T_24 : @[utils.scala 10:20]
                    debugFIFO_15_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_15_writeBackGPR_T_25 = eq(UInt<5>("h1b"), _debugFIFO_15_writeBackGPR_T_16) @[utils.scala 10:20]
                    when _debugFIFO_15_writeBackGPR_T_25 : @[utils.scala 10:20]
                      debugFIFO_15_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_15_writeBackGPR_T_26 = eq(UInt<6>("h33"), _debugFIFO_15_writeBackGPR_T_16) @[utils.scala 10:20]
                      when _debugFIFO_15_writeBackGPR_T_26 : @[utils.scala 10:20]
                        debugFIFO_15_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_15_writeBackGPR_T_27 = eq(UInt<6>("h3b"), _debugFIFO_15_writeBackGPR_T_16) @[utils.scala 10:20]
                        when _debugFIFO_15_writeBackGPR_T_27 : @[utils.scala 10:20]
                          debugFIFO_15_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_15_writeBackGPR_T_28 = eq(UInt<7>("h73"), _debugFIFO_15_writeBackGPR_T_16) @[utils.scala 10:20]
                          when _debugFIFO_15_writeBackGPR_T_28 : @[utils.scala 10:20]
                            debugFIFO_15_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_15_writeBackGPR_T_29 = eq(UInt<4>("hf"), _debugFIFO_15_writeBackGPR_T_16) @[utils.scala 10:20]
                            when _debugFIFO_15_writeBackGPR_T_29 : @[utils.scala 10:20]
                              debugFIFO_15_writeBackGPR_insType_1 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_15_writeBackGPR_T_30 = eq(UInt<6>("h2f"), _debugFIFO_15_writeBackGPR_T_16) @[utils.scala 10:20]
                              when _debugFIFO_15_writeBackGPR_T_30 : @[utils.scala 10:20]
                                debugFIFO_15_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_15_writeBackGPR_T_31 = eq(UInt<1>("h0"), debugFIFO_15_writeBackGPR_insType_1) @[rob.scala 52:141]
    node _debugFIFO_15_writeBackGPR_T_32 = bits(debugFIFO[15].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_15_writeBackGPR_insType_2 : UInt<3>
    debugFIFO_15_writeBackGPR_insType_2 <= UInt<3>("h0")
    node _debugFIFO_15_writeBackGPR_T_33 = eq(UInt<6>("h37"), _debugFIFO_15_writeBackGPR_T_32) @[utils.scala 10:20]
    when _debugFIFO_15_writeBackGPR_T_33 : @[utils.scala 10:20]
      debugFIFO_15_writeBackGPR_insType_2 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_15_writeBackGPR_T_34 = eq(UInt<5>("h17"), _debugFIFO_15_writeBackGPR_T_32) @[utils.scala 10:20]
      when _debugFIFO_15_writeBackGPR_T_34 : @[utils.scala 10:20]
        debugFIFO_15_writeBackGPR_insType_2 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_15_writeBackGPR_T_35 = eq(UInt<7>("h6f"), _debugFIFO_15_writeBackGPR_T_32) @[utils.scala 10:20]
        when _debugFIFO_15_writeBackGPR_T_35 : @[utils.scala 10:20]
          debugFIFO_15_writeBackGPR_insType_2 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_15_writeBackGPR_T_36 = eq(UInt<7>("h67"), _debugFIFO_15_writeBackGPR_T_32) @[utils.scala 10:20]
          when _debugFIFO_15_writeBackGPR_T_36 : @[utils.scala 10:20]
            debugFIFO_15_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_15_writeBackGPR_T_37 = eq(UInt<7>("h63"), _debugFIFO_15_writeBackGPR_T_32) @[utils.scala 10:20]
            when _debugFIFO_15_writeBackGPR_T_37 : @[utils.scala 10:20]
              debugFIFO_15_writeBackGPR_insType_2 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_15_writeBackGPR_T_38 = eq(UInt<2>("h3"), _debugFIFO_15_writeBackGPR_T_32) @[utils.scala 10:20]
              when _debugFIFO_15_writeBackGPR_T_38 : @[utils.scala 10:20]
                debugFIFO_15_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_15_writeBackGPR_T_39 = eq(UInt<6>("h23"), _debugFIFO_15_writeBackGPR_T_32) @[utils.scala 10:20]
                when _debugFIFO_15_writeBackGPR_T_39 : @[utils.scala 10:20]
                  debugFIFO_15_writeBackGPR_insType_2 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_15_writeBackGPR_T_40 = eq(UInt<5>("h13"), _debugFIFO_15_writeBackGPR_T_32) @[utils.scala 10:20]
                  when _debugFIFO_15_writeBackGPR_T_40 : @[utils.scala 10:20]
                    debugFIFO_15_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_15_writeBackGPR_T_41 = eq(UInt<5>("h1b"), _debugFIFO_15_writeBackGPR_T_32) @[utils.scala 10:20]
                    when _debugFIFO_15_writeBackGPR_T_41 : @[utils.scala 10:20]
                      debugFIFO_15_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_15_writeBackGPR_T_42 = eq(UInt<6>("h33"), _debugFIFO_15_writeBackGPR_T_32) @[utils.scala 10:20]
                      when _debugFIFO_15_writeBackGPR_T_42 : @[utils.scala 10:20]
                        debugFIFO_15_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_15_writeBackGPR_T_43 = eq(UInt<6>("h3b"), _debugFIFO_15_writeBackGPR_T_32) @[utils.scala 10:20]
                        when _debugFIFO_15_writeBackGPR_T_43 : @[utils.scala 10:20]
                          debugFIFO_15_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_15_writeBackGPR_T_44 = eq(UInt<7>("h73"), _debugFIFO_15_writeBackGPR_T_32) @[utils.scala 10:20]
                          when _debugFIFO_15_writeBackGPR_T_44 : @[utils.scala 10:20]
                            debugFIFO_15_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_15_writeBackGPR_T_45 = eq(UInt<4>("hf"), _debugFIFO_15_writeBackGPR_T_32) @[utils.scala 10:20]
                            when _debugFIFO_15_writeBackGPR_T_45 : @[utils.scala 10:20]
                              debugFIFO_15_writeBackGPR_insType_2 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_15_writeBackGPR_T_46 = eq(UInt<6>("h2f"), _debugFIFO_15_writeBackGPR_T_32) @[utils.scala 10:20]
                              when _debugFIFO_15_writeBackGPR_T_46 : @[utils.scala 10:20]
                                debugFIFO_15_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_15_writeBackGPR_T_47 = eq(UInt<3>("h4"), debugFIFO_15_writeBackGPR_insType_2) @[rob.scala 52:141]
    node _debugFIFO_15_writeBackGPR_T_48 = bits(debugFIFO[15].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_15_writeBackGPR_insType_3 : UInt<3>
    debugFIFO_15_writeBackGPR_insType_3 <= UInt<3>("h0")
    node _debugFIFO_15_writeBackGPR_T_49 = eq(UInt<6>("h37"), _debugFIFO_15_writeBackGPR_T_48) @[utils.scala 10:20]
    when _debugFIFO_15_writeBackGPR_T_49 : @[utils.scala 10:20]
      debugFIFO_15_writeBackGPR_insType_3 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_15_writeBackGPR_T_50 = eq(UInt<5>("h17"), _debugFIFO_15_writeBackGPR_T_48) @[utils.scala 10:20]
      when _debugFIFO_15_writeBackGPR_T_50 : @[utils.scala 10:20]
        debugFIFO_15_writeBackGPR_insType_3 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_15_writeBackGPR_T_51 = eq(UInt<7>("h6f"), _debugFIFO_15_writeBackGPR_T_48) @[utils.scala 10:20]
        when _debugFIFO_15_writeBackGPR_T_51 : @[utils.scala 10:20]
          debugFIFO_15_writeBackGPR_insType_3 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_15_writeBackGPR_T_52 = eq(UInt<7>("h67"), _debugFIFO_15_writeBackGPR_T_48) @[utils.scala 10:20]
          when _debugFIFO_15_writeBackGPR_T_52 : @[utils.scala 10:20]
            debugFIFO_15_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_15_writeBackGPR_T_53 = eq(UInt<7>("h63"), _debugFIFO_15_writeBackGPR_T_48) @[utils.scala 10:20]
            when _debugFIFO_15_writeBackGPR_T_53 : @[utils.scala 10:20]
              debugFIFO_15_writeBackGPR_insType_3 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_15_writeBackGPR_T_54 = eq(UInt<2>("h3"), _debugFIFO_15_writeBackGPR_T_48) @[utils.scala 10:20]
              when _debugFIFO_15_writeBackGPR_T_54 : @[utils.scala 10:20]
                debugFIFO_15_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_15_writeBackGPR_T_55 = eq(UInt<6>("h23"), _debugFIFO_15_writeBackGPR_T_48) @[utils.scala 10:20]
                when _debugFIFO_15_writeBackGPR_T_55 : @[utils.scala 10:20]
                  debugFIFO_15_writeBackGPR_insType_3 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_15_writeBackGPR_T_56 = eq(UInt<5>("h13"), _debugFIFO_15_writeBackGPR_T_48) @[utils.scala 10:20]
                  when _debugFIFO_15_writeBackGPR_T_56 : @[utils.scala 10:20]
                    debugFIFO_15_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_15_writeBackGPR_T_57 = eq(UInt<5>("h1b"), _debugFIFO_15_writeBackGPR_T_48) @[utils.scala 10:20]
                    when _debugFIFO_15_writeBackGPR_T_57 : @[utils.scala 10:20]
                      debugFIFO_15_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_15_writeBackGPR_T_58 = eq(UInt<6>("h33"), _debugFIFO_15_writeBackGPR_T_48) @[utils.scala 10:20]
                      when _debugFIFO_15_writeBackGPR_T_58 : @[utils.scala 10:20]
                        debugFIFO_15_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_15_writeBackGPR_T_59 = eq(UInt<6>("h3b"), _debugFIFO_15_writeBackGPR_T_48) @[utils.scala 10:20]
                        when _debugFIFO_15_writeBackGPR_T_59 : @[utils.scala 10:20]
                          debugFIFO_15_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_15_writeBackGPR_T_60 = eq(UInt<7>("h73"), _debugFIFO_15_writeBackGPR_T_48) @[utils.scala 10:20]
                          when _debugFIFO_15_writeBackGPR_T_60 : @[utils.scala 10:20]
                            debugFIFO_15_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_15_writeBackGPR_T_61 = eq(UInt<4>("hf"), _debugFIFO_15_writeBackGPR_T_48) @[utils.scala 10:20]
                            when _debugFIFO_15_writeBackGPR_T_61 : @[utils.scala 10:20]
                              debugFIFO_15_writeBackGPR_insType_3 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_15_writeBackGPR_T_62 = eq(UInt<6>("h2f"), _debugFIFO_15_writeBackGPR_T_48) @[utils.scala 10:20]
                              when _debugFIFO_15_writeBackGPR_T_62 : @[utils.scala 10:20]
                                debugFIFO_15_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_15_writeBackGPR_T_63 = eq(UInt<3>("h5"), debugFIFO_15_writeBackGPR_insType_3) @[rob.scala 52:141]
    node _debugFIFO_15_writeBackGPR_T_64 = or(_debugFIFO_15_writeBackGPR_T_15, _debugFIFO_15_writeBackGPR_T_31) @[rob.scala 52:197]
    node _debugFIFO_15_writeBackGPR_T_65 = or(_debugFIFO_15_writeBackGPR_T_64, _debugFIFO_15_writeBackGPR_T_47) @[rob.scala 52:197]
    node _debugFIFO_15_writeBackGPR_T_66 = or(_debugFIFO_15_writeBackGPR_T_65, _debugFIFO_15_writeBackGPR_T_63) @[rob.scala 52:197]
    node _debugFIFO_15_writeBackGPR_T_67 = bits(debugFIFO[15].instruction, 11, 7) @[rob.scala 52:223]
    node _debugFIFO_15_writeBackGPR_T_68 = orr(_debugFIFO_15_writeBackGPR_T_67) @[rob.scala 52:231]
    node _debugFIFO_15_writeBackGPR_T_69 = and(_debugFIFO_15_writeBackGPR_T_66, _debugFIFO_15_writeBackGPR_T_68) @[rob.scala 52:203]
    node _debugFIFO_15_writeBackGPR_T_70 = and(_debugFIFO_15_writeBackGPR_T_69, debugFIFO[15].valid) @[rob.scala 52:235]
    debugFIFO[15].writeBackGPR <= _debugFIFO_15_writeBackGPR_T_70 @[rob.scala 52:52]
    debugFIFOOut <= debugFIFO @[rob.scala 55:18]
    node _allocatedPRFCount_T = add(debugFIFO[0].writeBackGPR, debugFIFO[1].writeBackGPR) @[rob.scala 58:72]
    node _allocatedPRFCount_T_1 = add(_allocatedPRFCount_T, debugFIFO[2].writeBackGPR) @[rob.scala 58:72]
    node _allocatedPRFCount_T_2 = add(_allocatedPRFCount_T_1, debugFIFO[3].writeBackGPR) @[rob.scala 58:72]
    node _allocatedPRFCount_T_3 = add(_allocatedPRFCount_T_2, debugFIFO[4].writeBackGPR) @[rob.scala 58:72]
    node _allocatedPRFCount_T_4 = add(_allocatedPRFCount_T_3, debugFIFO[5].writeBackGPR) @[rob.scala 58:72]
    node _allocatedPRFCount_T_5 = add(_allocatedPRFCount_T_4, debugFIFO[6].writeBackGPR) @[rob.scala 58:72]
    node _allocatedPRFCount_T_6 = add(_allocatedPRFCount_T_5, debugFIFO[7].writeBackGPR) @[rob.scala 58:72]
    node _allocatedPRFCount_T_7 = add(_allocatedPRFCount_T_6, debugFIFO[8].writeBackGPR) @[rob.scala 58:72]
    node _allocatedPRFCount_T_8 = add(_allocatedPRFCount_T_7, debugFIFO[9].writeBackGPR) @[rob.scala 58:72]
    node _allocatedPRFCount_T_9 = add(_allocatedPRFCount_T_8, debugFIFO[10].writeBackGPR) @[rob.scala 58:72]
    node _allocatedPRFCount_T_10 = add(_allocatedPRFCount_T_9, debugFIFO[11].writeBackGPR) @[rob.scala 58:72]
    node _allocatedPRFCount_T_11 = add(_allocatedPRFCount_T_10, debugFIFO[12].writeBackGPR) @[rob.scala 58:72]
    node _allocatedPRFCount_T_12 = add(_allocatedPRFCount_T_11, debugFIFO[13].writeBackGPR) @[rob.scala 58:72]
    node _allocatedPRFCount_T_13 = add(_allocatedPRFCount_T_12, debugFIFO[14].writeBackGPR) @[rob.scala 58:72]
    node _allocatedPRFCount_T_14 = add(_allocatedPRFCount_T_13, debugFIFO[15].writeBackGPR) @[rob.scala 58:72]
    allocatedPRFCount <= _allocatedPRFCount_T_14 @[rob.scala 58:23]

  module rob_Anon_1 :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<130>}, deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<130>}}
    input modify : UInt<1>
    input modifyVal : UInt<4>
    output writeports : { flip valid : UInt<1>, flip data : UInt<130>, flip addr : UInt<4>}[5]
    output allocatedAddr : UInt<4>
    output robAddrRelease : UInt<4>

    wire incrRead : UInt<1>
    incrRead <= UInt<1>("h0")
    wire incrWrite : UInt<1>
    incrWrite <= UInt<1>("h0")
    reg readPtr : UInt<4>, clock with :
      reset => (reset, UInt<4>("h0")) @[Fifo.scala 75:25]
    node _nextRead_T = eq(readPtr, UInt<4>("hf")) @[Fifo.scala 76:30]
    node _nextRead_T_1 = add(readPtr, UInt<1>("h1")) @[Fifo.scala 76:61]
    node _nextRead_T_2 = tail(_nextRead_T_1, 1) @[Fifo.scala 76:61]
    node nextRead = mux(_nextRead_T, UInt<1>("h0"), _nextRead_T_2) @[Fifo.scala 76:21]
    when incrRead : @[Fifo.scala 77:19]
      readPtr <= nextRead @[Fifo.scala 78:13]
    reg writePtr : UInt<4>, clock with :
      reset => (reset, UInt<4>("h0")) @[Fifo.scala 81:25]
    node _nextWrite_T = eq(writePtr, UInt<4>("hf")) @[Fifo.scala 82:32]
    node _nextWrite_T_1 = add(writePtr, UInt<1>("h1")) @[Fifo.scala 82:65]
    node _nextWrite_T_2 = tail(_nextWrite_T_1, 1) @[Fifo.scala 82:65]
    node nextWrite = mux(_nextWrite_T, UInt<1>("h0"), _nextWrite_T_2) @[Fifo.scala 82:22]
    reg fullReg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Fifo.scala 84:24]
    cmem memReg : UInt<130> [16] @[Fifo.scala 86:19]
    reg emptyReg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h1")) @[Fifo.scala 89:25]
    node _nextval_T = eq(modifyVal, UInt<4>("hf")) @[Fifo.scala 91:31]
    node _nextval_T_1 = add(modifyVal, UInt<1>("h1")) @[Fifo.scala 91:65]
    node _nextval_T_2 = tail(_nextval_T_1, 1) @[Fifo.scala 91:65]
    node nextval = mux(_nextval_T, UInt<1>("h0"), _nextval_T_2) @[Fifo.scala 91:20]
    when modify : @[Fifo.scala 93:16]
      writePtr <= nextval @[Fifo.scala 95:14]
      node _emptyReg_T = eq(nextval, readPtr) @[Fifo.scala 97:25]
      emptyReg <= _emptyReg_T @[Fifo.scala 97:14]
    else :
      when incrWrite : @[Fifo.scala 98:24]
        writePtr <= nextWrite @[Fifo.scala 99:14]
    node _T = and(io.deq.ready, io.deq.valid) @[Fifo.scala 105:21]
    node _T_1 = and(_T, io.enq.valid) @[Fifo.scala 105:37]
    node _T_2 = and(_T_1, io.enq.ready) @[Fifo.scala 105:53]
    when _T_2 : @[Fifo.scala 105:70]
      infer mport MPORT = memReg[writePtr], clock @[Fifo.scala 106:11]
      MPORT <= io.enq.bits @[Fifo.scala 106:22]
      incrWrite <= UInt<1>("h1") @[Fifo.scala 107:15]
      incrRead <= UInt<1>("h1") @[Fifo.scala 108:14]
    else :
      node _T_3 = and(io.enq.valid, io.enq.ready) @[Fifo.scala 109:27]
      when _T_3 : @[Fifo.scala 109:44]
        infer mport MPORT_1 = memReg[writePtr], clock @[Fifo.scala 110:11]
        MPORT_1 <= io.enq.bits @[Fifo.scala 110:22]
        emptyReg <= UInt<1>("h0") @[Fifo.scala 111:14]
        node _fullReg_T = eq(nextWrite, readPtr) @[Fifo.scala 112:26]
        fullReg <= _fullReg_T @[Fifo.scala 112:13]
        incrWrite <= UInt<1>("h1") @[Fifo.scala 113:15]
      else :
        node _T_4 = and(io.deq.ready, io.deq.valid) @[Fifo.scala 114:27]
        when _T_4 : @[Fifo.scala 114:44]
          fullReg <= UInt<1>("h0") @[Fifo.scala 115:13]
          node _emptyReg_T_1 = eq(nextRead, writePtr) @[Fifo.scala 116:26]
          emptyReg <= _emptyReg_T_1 @[Fifo.scala 116:14]
          incrRead <= UInt<1>("h1") @[Fifo.scala 117:14]
    infer mport io_deq_bits_MPORT = memReg[readPtr], clock @[Fifo.scala 120:24]
    io.deq.bits <= io_deq_bits_MPORT @[Fifo.scala 120:15]
    node _io_enq_ready_T = eq(fullReg, UInt<1>("h0")) @[Fifo.scala 121:20]
    node _io_enq_ready_T_1 = and(io.deq.valid, io.deq.ready) @[Fifo.scala 121:45]
    node _io_enq_ready_T_2 = or(_io_enq_ready_T, _io_enq_ready_T_1) @[Fifo.scala 121:29]
    node _io_enq_ready_T_3 = eq(modify, UInt<1>("h0")) @[Fifo.scala 121:64]
    node _io_enq_ready_T_4 = and(_io_enq_ready_T_2, _io_enq_ready_T_3) @[Fifo.scala 121:62]
    io.enq.ready <= _io_enq_ready_T_4 @[Fifo.scala 121:16]
    node _io_deq_valid_T = eq(emptyReg, UInt<1>("h0")) @[Fifo.scala 122:19]
    node _io_deq_valid_T_1 = eq(modify, UInt<1>("h0")) @[Fifo.scala 122:31]
    node _io_deq_valid_T_2 = and(_io_deq_valid_T, _io_deq_valid_T_1) @[Fifo.scala 122:29]
    io.deq.valid <= _io_deq_valid_T_2 @[Fifo.scala 122:16]
    when writeports[0].valid : @[Fifo.scala 138:31]
      infer mport MPORT_2 = memReg[writeports[0].addr], clock @[Fifo.scala 139:13]
      MPORT_2 <= writeports[0].data @[Fifo.scala 139:34]
    when writeports[1].valid : @[Fifo.scala 138:31]
      infer mport MPORT_3 = memReg[writeports[1].addr], clock @[Fifo.scala 139:13]
      MPORT_3 <= writeports[1].data @[Fifo.scala 139:34]
    when writeports[2].valid : @[Fifo.scala 138:31]
      infer mport MPORT_4 = memReg[writeports[2].addr], clock @[Fifo.scala 139:13]
      MPORT_4 <= writeports[2].data @[Fifo.scala 139:34]
    when writeports[3].valid : @[Fifo.scala 138:31]
      infer mport MPORT_5 = memReg[writeports[3].addr], clock @[Fifo.scala 139:13]
      MPORT_5 <= writeports[3].data @[Fifo.scala 139:34]
    when writeports[4].valid : @[Fifo.scala 138:31]
      infer mport MPORT_6 = memReg[writeports[4].addr], clock @[Fifo.scala 139:13]
      MPORT_6 <= writeports[4].data @[Fifo.scala 139:34]
    allocatedAddr <= writePtr @[Fifo.scala 145:17]
    robAddrRelease <= readPtr @[rob.scala 63:20]

  module rob :
    input clock : Clock
    input reset : Reset
    output allocate : { ready : UInt<1>, flip fired : UInt<1>, flip pc : UInt<64>, flip instruction : UInt<32>, flip prfDest : UInt<6>, robAddr : UInt<4>, flip isReady : UInt<1>}
    output commit : { ready : UInt<1>, flip fired : UInt<1>, prfDest : UInt<6>, pc : UInt<64>, instruction : UInt<32>, exceptionOccurred : UInt<1>, mcause : UInt<64>, mtval : UInt<64>, isStore : UInt<1>, is_fence : UInt<1>, robAddr : UInt<4>}
    output branch : { flip valid : UInt<1>, flip pass : UInt<1>, flip robAddr : UInt<4>}
    output execPorts : { flip robAddr : UInt<4>, flip exceptionOccurred : UInt<1>, flip mcause : UInt<64>, flip mtval : UInt<64>, flip valid : UInt<1>}[4]
    output debugFIFOOut : { valid : UInt<1>, instruction : UInt<32>, prfDest : UInt<6>, pc : UInt<64>, writeBackGPR : UInt<1>}[16]
    output allocatedPRFCount : UInt<16>
    output robAddrRelease : UInt<4>

    inst fifo of rob_Anon @[rob.scala 24:20]
    fifo.clock <= clock
    fifo.reset <= reset
    inst results of rob_Anon_1 @[rob.scala 61:23]
    results.clock <= clock
    results.reset <= reset
    node _allocate_ready_T = and(fifo.io.enq.ready, results.io.enq.ready) @[rob.scala 67:39]
    allocate.ready <= _allocate_ready_T @[rob.scala 67:18]
    node _fifo_data_T = cat(allocate.instruction, allocate.prfDest) @[Cat.scala 33:92]
    node fifo_data = cat(allocate.pc, _fifo_data_T) @[Cat.scala 33:92]
    node resultsdata = cat(UInt<129>("h0"), allocate.isReady) @[Cat.scala 33:92]
    fifo.io.enq.bits <= fifo_data @[rob.scala 70:20]
    results.io.enq.bits <= resultsdata @[rob.scala 71:23]
    allocate.robAddr <= results.allocatedAddr @[rob.scala 72:20]
    when allocate.fired : @[rob.scala 73:23]
      fifo.io.enq.valid <= UInt<1>("h1") @[rob.scala 74:23]
      results.io.enq.valid <= UInt<1>("h1") @[rob.scala 75:26]
    else :
      fifo.io.enq.valid <= UInt<1>("h0") @[rob.scala 77:23]
      results.io.enq.valid <= UInt<1>("h0") @[rob.scala 78:26]
    node _is_fence_T = bits(commit.instruction, 6, 0) @[rob.scala 81:36]
    node is_fence = eq(_is_fence_T, UInt<4>("hf")) @[rob.scala 81:42]
    node _commit_ready_T = bits(results.io.deq.bits, 0, 0) @[rob.scala 84:39]
    node _commit_ready_T_1 = or(_commit_ready_T, is_fence) @[rob.scala 84:43]
    node _commit_ready_T_2 = or(_commit_ready_T_1, commit.isStore) @[rob.scala 84:54]
    node _commit_ready_T_3 = and(_commit_ready_T_2, fifo.io.deq.valid) @[rob.scala 84:72]
    node _commit_ready_T_4 = and(_commit_ready_T_3, results.io.deq.valid) @[rob.scala 84:92]
    commit.ready <= _commit_ready_T_4 @[rob.scala 84:16]
    node _commit_mcause_T = bits(results.io.deq.bits, 64, 1) @[rob.scala 85:39]
    commit.mcause <= _commit_mcause_T @[rob.scala 85:17]
    node _commit_mtval_T = bits(results.io.deq.bits, 128, 65) @[rob.scala 86:38]
    commit.mtval <= _commit_mtval_T @[rob.scala 86:16]
    node _commit_exceptionOccurred_T = bits(results.io.deq.bits, 129, 129) @[rob.scala 87:50]
    commit.exceptionOccurred <= _commit_exceptionOccurred_T @[rob.scala 87:28]
    node _commit_prfDest_T = bits(fifo.io.deq.bits, 5, 0) @[rob.scala 88:37]
    commit.prfDest <= _commit_prfDest_T @[rob.scala 88:18]
    node _commit_instruction_T = bits(fifo.io.deq.bits, 37, 6) @[rob.scala 89:41]
    commit.instruction <= _commit_instruction_T @[rob.scala 89:22]
    node _commit_pc_T = bits(fifo.io.deq.bits, 101, 38) @[rob.scala 90:32]
    commit.pc <= _commit_pc_T @[rob.scala 90:13]
    commit.is_fence <= is_fence @[rob.scala 91:19]
    commit.robAddr <= results.robAddrRelease @[rob.scala 92:18]
    when commit.fired : @[rob.scala 94:22]
      fifo.io.deq.ready <= UInt<1>("h1") @[rob.scala 95:23]
      results.io.deq.ready <= UInt<1>("h1") @[rob.scala 96:26]
    else :
      fifo.io.deq.ready <= UInt<1>("h0") @[rob.scala 98:23]
      results.io.deq.ready <= UInt<1>("h0") @[rob.scala 99:26]
    node _commit_isStore_T = bits(fifo.io.deq.bits, 12, 6) @[rob.scala 102:37]
    node _commit_isStore_T_1 = eq(_commit_isStore_T, UInt<6>("h23")) @[rob.scala 102:44]
    commit.isStore <= _commit_isStore_T_1 @[rob.scala 102:18]
    node _fifo_modify_T = eq(branch.pass, UInt<1>("h0")) @[rob.scala 105:33]
    node _fifo_modify_T_1 = and(branch.valid, _fifo_modify_T) @[rob.scala 105:31]
    fifo.modify <= _fifo_modify_T_1 @[rob.scala 105:15]
    fifo.modifyVal <= branch.robAddr @[rob.scala 106:18]
    node _results_modify_T = eq(branch.pass, UInt<1>("h0")) @[rob.scala 107:36]
    node _results_modify_T_1 = and(branch.valid, _results_modify_T) @[rob.scala 107:34]
    results.modify <= _results_modify_T_1 @[rob.scala 107:18]
    results.modifyVal <= branch.robAddr @[rob.scala 108:21]
    results.writeports[4].valid <= branch.valid @[rob.scala 109:43]
    results.writeports[4].addr <= branch.robAddr @[rob.scala 110:42]
    node _results_writeports_4_data_T = cat(UInt<129>("h0"), UInt<1>("h1")) @[Cat.scala 33:92]
    results.writeports[4].data <= _results_writeports_4_data_T @[rob.scala 111:42]
    node _writeval_T = cat(execPorts[0].mcause, UInt<1>("h1")) @[Cat.scala 33:92]
    node _writeval_T_1 = cat(execPorts[0].mtval, _writeval_T) @[Cat.scala 33:92]
    node writeval = cat(execPorts[0].exceptionOccurred, _writeval_T_1) @[Cat.scala 33:92]
    results.writeports[0].valid <= execPorts[0].valid @[rob.scala 117:33]
    results.writeports[0].data <= writeval @[rob.scala 118:32]
    results.writeports[0].addr <= execPorts[0].robAddr @[rob.scala 119:32]
    node _writeval_T_2 = cat(execPorts[1].mcause, UInt<1>("h1")) @[Cat.scala 33:92]
    node _writeval_T_3 = cat(execPorts[1].mtval, _writeval_T_2) @[Cat.scala 33:92]
    node writeval_1 = cat(execPorts[1].exceptionOccurred, _writeval_T_3) @[Cat.scala 33:92]
    results.writeports[1].valid <= execPorts[1].valid @[rob.scala 117:33]
    results.writeports[1].data <= writeval_1 @[rob.scala 118:32]
    results.writeports[1].addr <= execPorts[1].robAddr @[rob.scala 119:32]
    node _writeval_T_4 = cat(execPorts[2].mcause, UInt<1>("h1")) @[Cat.scala 33:92]
    node _writeval_T_5 = cat(execPorts[2].mtval, _writeval_T_4) @[Cat.scala 33:92]
    node writeval_2 = cat(execPorts[2].exceptionOccurred, _writeval_T_5) @[Cat.scala 33:92]
    results.writeports[2].valid <= execPorts[2].valid @[rob.scala 117:33]
    results.writeports[2].data <= writeval_2 @[rob.scala 118:32]
    results.writeports[2].addr <= execPorts[2].robAddr @[rob.scala 119:32]
    node _writeval_T_6 = cat(execPorts[3].mcause, UInt<1>("h1")) @[Cat.scala 33:92]
    node _writeval_T_7 = cat(execPorts[3].mtval, _writeval_T_6) @[Cat.scala 33:92]
    node writeval_3 = cat(execPorts[3].exceptionOccurred, _writeval_T_7) @[Cat.scala 33:92]
    results.writeports[3].valid <= execPorts[3].valid @[rob.scala 117:33]
    results.writeports[3].data <= writeval_3 @[rob.scala 118:32]
    results.writeports[3].addr <= execPorts[3].robAddr @[rob.scala 119:32]
    node _T = and(commit.exceptionOccurred, commit.fired) @[rob.scala 123:33]
    when _T : @[rob.scala 123:49]
      results.reset <= UInt<1>("h1") @[rob.scala 124:19]
      fifo.reset <= UInt<1>("h1") @[rob.scala 125:16]
    debugFIFOOut <= fifo.debugFIFOOut @[rob.scala 131:16]
    allocatedPRFCount <= fifo.allocatedPRFCount @[rob.scala 134:21]
    robAddrRelease <= results.robAddrRelease @[rob.scala 137:18]
    node _T_1 = eq(commit.fired, UInt<1>("h0")) @[rob.scala 142:24]
    node _T_2 = and(commit.ready, _T_1) @[rob.scala 142:21]
    when _T_2 : @[rob.scala 142:39]
      allocate.ready <= UInt<1>("h0") @[rob.scala 142:56]

  module scheduler :
    input clock : Clock
    input reset : Reset
    output allocate : { ready : UInt<1>, flip fired : UInt<1>, flip instruction : UInt<32>, flip branchMask : UInt<5>, flip rs1 : { ready : UInt<1>, prfAddr : UInt<6>}, flip rs2 : { ready : UInt<1>, prfAddr : UInt<6>}, flip prfDest : UInt<6>, flip robAddr : UInt<4>}
    output release : { ready : UInt<1>, flip fired : UInt<1>, instruction : UInt<32>, branchMask : UInt<5>, rs1prfAddr : UInt<6>, rs2prfAddr : UInt<6>, prfDest : UInt<6>, robAddr : UInt<4>}
    input wakeUpExt : { valid : UInt<1>, prfAddr : UInt<6>}[2]
    input branchOps : { valid : UInt<1>, branchMask : UInt<5>, passed : UInt<1>}
    input memoryReady : UInt<1>
    input multuplyAndDivideReady : UInt<1>
    output instrRetired : { valid : UInt<1>, prfAddr : UInt<6>}

    wire _queue_WIRE : { opcodeMeta : { isBranch : UInt<1>, isMemAccess : UInt<1>, isM : UInt<1>}, valid : UInt<1>, instruction : UInt<32>, branchMask : UInt<5>, rs1 : { ready : UInt<1>, prfAddr : UInt<6>}, rs2 : { ready : UInt<1>, prfAddr : UInt<6>}, prfDest : UInt<6>, robAddr : UInt<4>}[8] @[scheduler.scala 26:30]
    _queue_WIRE[0].robAddr is invalid @[scheduler.scala 26:30]
    _queue_WIRE[0].prfDest is invalid @[scheduler.scala 26:30]
    _queue_WIRE[0].rs2.prfAddr is invalid @[scheduler.scala 26:30]
    _queue_WIRE[0].rs2.ready is invalid @[scheduler.scala 26:30]
    _queue_WIRE[0].rs1.prfAddr is invalid @[scheduler.scala 26:30]
    _queue_WIRE[0].rs1.ready is invalid @[scheduler.scala 26:30]
    _queue_WIRE[0].branchMask is invalid @[scheduler.scala 26:30]
    _queue_WIRE[0].instruction is invalid @[scheduler.scala 26:30]
    _queue_WIRE[0].valid <= UInt<1>("h0") @[scheduler.scala 26:30]
    _queue_WIRE[0].opcodeMeta.isM is invalid @[scheduler.scala 26:30]
    _queue_WIRE[0].opcodeMeta.isMemAccess is invalid @[scheduler.scala 26:30]
    _queue_WIRE[0].opcodeMeta.isBranch is invalid @[scheduler.scala 26:30]
    _queue_WIRE[1].robAddr is invalid @[scheduler.scala 26:30]
    _queue_WIRE[1].prfDest is invalid @[scheduler.scala 26:30]
    _queue_WIRE[1].rs2.prfAddr is invalid @[scheduler.scala 26:30]
    _queue_WIRE[1].rs2.ready is invalid @[scheduler.scala 26:30]
    _queue_WIRE[1].rs1.prfAddr is invalid @[scheduler.scala 26:30]
    _queue_WIRE[1].rs1.ready is invalid @[scheduler.scala 26:30]
    _queue_WIRE[1].branchMask is invalid @[scheduler.scala 26:30]
    _queue_WIRE[1].instruction is invalid @[scheduler.scala 26:30]
    _queue_WIRE[1].valid <= UInt<1>("h0") @[scheduler.scala 26:30]
    _queue_WIRE[1].opcodeMeta.isM is invalid @[scheduler.scala 26:30]
    _queue_WIRE[1].opcodeMeta.isMemAccess is invalid @[scheduler.scala 26:30]
    _queue_WIRE[1].opcodeMeta.isBranch is invalid @[scheduler.scala 26:30]
    _queue_WIRE[2].robAddr is invalid @[scheduler.scala 26:30]
    _queue_WIRE[2].prfDest is invalid @[scheduler.scala 26:30]
    _queue_WIRE[2].rs2.prfAddr is invalid @[scheduler.scala 26:30]
    _queue_WIRE[2].rs2.ready is invalid @[scheduler.scala 26:30]
    _queue_WIRE[2].rs1.prfAddr is invalid @[scheduler.scala 26:30]
    _queue_WIRE[2].rs1.ready is invalid @[scheduler.scala 26:30]
    _queue_WIRE[2].branchMask is invalid @[scheduler.scala 26:30]
    _queue_WIRE[2].instruction is invalid @[scheduler.scala 26:30]
    _queue_WIRE[2].valid <= UInt<1>("h0") @[scheduler.scala 26:30]
    _queue_WIRE[2].opcodeMeta.isM is invalid @[scheduler.scala 26:30]
    _queue_WIRE[2].opcodeMeta.isMemAccess is invalid @[scheduler.scala 26:30]
    _queue_WIRE[2].opcodeMeta.isBranch is invalid @[scheduler.scala 26:30]
    _queue_WIRE[3].robAddr is invalid @[scheduler.scala 26:30]
    _queue_WIRE[3].prfDest is invalid @[scheduler.scala 26:30]
    _queue_WIRE[3].rs2.prfAddr is invalid @[scheduler.scala 26:30]
    _queue_WIRE[3].rs2.ready is invalid @[scheduler.scala 26:30]
    _queue_WIRE[3].rs1.prfAddr is invalid @[scheduler.scala 26:30]
    _queue_WIRE[3].rs1.ready is invalid @[scheduler.scala 26:30]
    _queue_WIRE[3].branchMask is invalid @[scheduler.scala 26:30]
    _queue_WIRE[3].instruction is invalid @[scheduler.scala 26:30]
    _queue_WIRE[3].valid <= UInt<1>("h0") @[scheduler.scala 26:30]
    _queue_WIRE[3].opcodeMeta.isM is invalid @[scheduler.scala 26:30]
    _queue_WIRE[3].opcodeMeta.isMemAccess is invalid @[scheduler.scala 26:30]
    _queue_WIRE[3].opcodeMeta.isBranch is invalid @[scheduler.scala 26:30]
    _queue_WIRE[4].robAddr is invalid @[scheduler.scala 26:30]
    _queue_WIRE[4].prfDest is invalid @[scheduler.scala 26:30]
    _queue_WIRE[4].rs2.prfAddr is invalid @[scheduler.scala 26:30]
    _queue_WIRE[4].rs2.ready is invalid @[scheduler.scala 26:30]
    _queue_WIRE[4].rs1.prfAddr is invalid @[scheduler.scala 26:30]
    _queue_WIRE[4].rs1.ready is invalid @[scheduler.scala 26:30]
    _queue_WIRE[4].branchMask is invalid @[scheduler.scala 26:30]
    _queue_WIRE[4].instruction is invalid @[scheduler.scala 26:30]
    _queue_WIRE[4].valid <= UInt<1>("h0") @[scheduler.scala 26:30]
    _queue_WIRE[4].opcodeMeta.isM is invalid @[scheduler.scala 26:30]
    _queue_WIRE[4].opcodeMeta.isMemAccess is invalid @[scheduler.scala 26:30]
    _queue_WIRE[4].opcodeMeta.isBranch is invalid @[scheduler.scala 26:30]
    _queue_WIRE[5].robAddr is invalid @[scheduler.scala 26:30]
    _queue_WIRE[5].prfDest is invalid @[scheduler.scala 26:30]
    _queue_WIRE[5].rs2.prfAddr is invalid @[scheduler.scala 26:30]
    _queue_WIRE[5].rs2.ready is invalid @[scheduler.scala 26:30]
    _queue_WIRE[5].rs1.prfAddr is invalid @[scheduler.scala 26:30]
    _queue_WIRE[5].rs1.ready is invalid @[scheduler.scala 26:30]
    _queue_WIRE[5].branchMask is invalid @[scheduler.scala 26:30]
    _queue_WIRE[5].instruction is invalid @[scheduler.scala 26:30]
    _queue_WIRE[5].valid <= UInt<1>("h0") @[scheduler.scala 26:30]
    _queue_WIRE[5].opcodeMeta.isM is invalid @[scheduler.scala 26:30]
    _queue_WIRE[5].opcodeMeta.isMemAccess is invalid @[scheduler.scala 26:30]
    _queue_WIRE[5].opcodeMeta.isBranch is invalid @[scheduler.scala 26:30]
    _queue_WIRE[6].robAddr is invalid @[scheduler.scala 26:30]
    _queue_WIRE[6].prfDest is invalid @[scheduler.scala 26:30]
    _queue_WIRE[6].rs2.prfAddr is invalid @[scheduler.scala 26:30]
    _queue_WIRE[6].rs2.ready is invalid @[scheduler.scala 26:30]
    _queue_WIRE[6].rs1.prfAddr is invalid @[scheduler.scala 26:30]
    _queue_WIRE[6].rs1.ready is invalid @[scheduler.scala 26:30]
    _queue_WIRE[6].branchMask is invalid @[scheduler.scala 26:30]
    _queue_WIRE[6].instruction is invalid @[scheduler.scala 26:30]
    _queue_WIRE[6].valid <= UInt<1>("h0") @[scheduler.scala 26:30]
    _queue_WIRE[6].opcodeMeta.isM is invalid @[scheduler.scala 26:30]
    _queue_WIRE[6].opcodeMeta.isMemAccess is invalid @[scheduler.scala 26:30]
    _queue_WIRE[6].opcodeMeta.isBranch is invalid @[scheduler.scala 26:30]
    _queue_WIRE[7].robAddr is invalid @[scheduler.scala 26:30]
    _queue_WIRE[7].prfDest is invalid @[scheduler.scala 26:30]
    _queue_WIRE[7].rs2.prfAddr is invalid @[scheduler.scala 26:30]
    _queue_WIRE[7].rs2.ready is invalid @[scheduler.scala 26:30]
    _queue_WIRE[7].rs1.prfAddr is invalid @[scheduler.scala 26:30]
    _queue_WIRE[7].rs1.ready is invalid @[scheduler.scala 26:30]
    _queue_WIRE[7].branchMask is invalid @[scheduler.scala 26:30]
    _queue_WIRE[7].instruction is invalid @[scheduler.scala 26:30]
    _queue_WIRE[7].valid <= UInt<1>("h0") @[scheduler.scala 26:30]
    _queue_WIRE[7].opcodeMeta.isM is invalid @[scheduler.scala 26:30]
    _queue_WIRE[7].opcodeMeta.isMemAccess is invalid @[scheduler.scala 26:30]
    _queue_WIRE[7].opcodeMeta.isBranch is invalid @[scheduler.scala 26:30]
    reg queue : { opcodeMeta : { isBranch : UInt<1>, isMemAccess : UInt<1>, isM : UInt<1>}, valid : UInt<1>, instruction : UInt<32>, branchMask : UInt<5>, rs1 : { ready : UInt<1>, prfAddr : UInt<6>}, rs2 : { ready : UInt<1>, prfAddr : UInt<6>}, prfDest : UInt<6>, robAddr : UInt<4>}[8], clock with :
      reset => (reset, _queue_WIRE) @[scheduler.scala 26:22]
    node _readyVector_T = and(queue[0].valid, queue[0].rs1.ready) @[scheduler.scala 51:20]
    node _readyVector_T_1 = and(_readyVector_T, queue[0].rs2.ready) @[scheduler.scala 51:42]
    node _readyVector_T_2 = eq(queue[0].opcodeMeta.isBranch, UInt<1>("h0")) @[scheduler.scala 52:6]
    node _readyVector_T_3 = or(_readyVector_T_2, UInt<1>("h1")) @[scheduler.scala 52:36]
    node _readyVector_T_4 = and(_readyVector_T_1, _readyVector_T_3) @[scheduler.scala 51:64]
    node _readyVector_T_5 = eq(queue[0].opcodeMeta.isMemAccess, UInt<1>("h0")) @[scheduler.scala 53:6]
    node _readyVector_T_6 = and(UInt<1>("h1"), memoryReady) @[scheduler.scala 53:157]
    node _readyVector_T_7 = or(_readyVector_T_5, _readyVector_T_6) @[scheduler.scala 53:39]
    node _readyVector_T_8 = and(_readyVector_T_4, _readyVector_T_7) @[scheduler.scala 52:151]
    node _readyVector_T_9 = eq(queue[0].opcodeMeta.isM, UInt<1>("h0")) @[scheduler.scala 54:6]
    node _readyVector_T_10 = or(_readyVector_T_9, multuplyAndDivideReady) @[scheduler.scala 54:31]
    node _readyVector_T_11 = and(_readyVector_T_8, _readyVector_T_10) @[scheduler.scala 53:174]
    node _readyVector_T_12 = and(queue[1].valid, queue[1].rs1.ready) @[scheduler.scala 51:20]
    node _readyVector_T_13 = and(_readyVector_T_12, queue[1].rs2.ready) @[scheduler.scala 51:42]
    node _readyVector_T_14 = eq(queue[1].opcodeMeta.isBranch, UInt<1>("h0")) @[scheduler.scala 52:6]
    node _readyVector_T_15 = and(queue[0].valid, queue[0].opcodeMeta.isBranch) @[scheduler.scala 52:101]
    node _readyVector_T_16 = eq(_readyVector_T_15, UInt<1>("h0")) @[scheduler.scala 52:64]
    node _readyVector_T_17 = or(_readyVector_T_14, _readyVector_T_16) @[scheduler.scala 52:36]
    node _readyVector_T_18 = and(_readyVector_T_13, _readyVector_T_17) @[scheduler.scala 51:64]
    node _readyVector_T_19 = eq(queue[1].opcodeMeta.isMemAccess, UInt<1>("h0")) @[scheduler.scala 53:6]
    node _readyVector_T_20 = and(queue[0].valid, queue[0].opcodeMeta.isMemAccess) @[scheduler.scala 53:105]
    node _readyVector_T_21 = eq(_readyVector_T_20, UInt<1>("h0")) @[scheduler.scala 53:68]
    node _readyVector_T_22 = and(_readyVector_T_21, memoryReady) @[scheduler.scala 53:157]
    node _readyVector_T_23 = or(_readyVector_T_19, _readyVector_T_22) @[scheduler.scala 53:39]
    node _readyVector_T_24 = and(_readyVector_T_18, _readyVector_T_23) @[scheduler.scala 52:151]
    node _readyVector_T_25 = eq(queue[1].opcodeMeta.isM, UInt<1>("h0")) @[scheduler.scala 54:6]
    node _readyVector_T_26 = or(_readyVector_T_25, multuplyAndDivideReady) @[scheduler.scala 54:31]
    node _readyVector_T_27 = and(_readyVector_T_24, _readyVector_T_26) @[scheduler.scala 53:174]
    node _readyVector_T_28 = and(queue[2].valid, queue[2].rs1.ready) @[scheduler.scala 51:20]
    node _readyVector_T_29 = and(_readyVector_T_28, queue[2].rs2.ready) @[scheduler.scala 51:42]
    node _readyVector_T_30 = eq(queue[2].opcodeMeta.isBranch, UInt<1>("h0")) @[scheduler.scala 52:6]
    node _readyVector_T_31 = and(queue[0].valid, queue[0].opcodeMeta.isBranch) @[scheduler.scala 52:101]
    node _readyVector_T_32 = and(queue[1].valid, queue[1].opcodeMeta.isBranch) @[scheduler.scala 52:101]
    node _readyVector_T_33 = or(_readyVector_T_31, _readyVector_T_32) @[scheduler.scala 52:143]
    node _readyVector_T_34 = eq(_readyVector_T_33, UInt<1>("h0")) @[scheduler.scala 52:64]
    node _readyVector_T_35 = or(_readyVector_T_30, _readyVector_T_34) @[scheduler.scala 52:36]
    node _readyVector_T_36 = and(_readyVector_T_29, _readyVector_T_35) @[scheduler.scala 51:64]
    node _readyVector_T_37 = eq(queue[2].opcodeMeta.isMemAccess, UInt<1>("h0")) @[scheduler.scala 53:6]
    node _readyVector_T_38 = and(queue[0].valid, queue[0].opcodeMeta.isMemAccess) @[scheduler.scala 53:105]
    node _readyVector_T_39 = and(queue[1].valid, queue[1].opcodeMeta.isMemAccess) @[scheduler.scala 53:105]
    node _readyVector_T_40 = or(_readyVector_T_38, _readyVector_T_39) @[scheduler.scala 53:150]
    node _readyVector_T_41 = eq(_readyVector_T_40, UInt<1>("h0")) @[scheduler.scala 53:68]
    node _readyVector_T_42 = and(_readyVector_T_41, memoryReady) @[scheduler.scala 53:157]
    node _readyVector_T_43 = or(_readyVector_T_37, _readyVector_T_42) @[scheduler.scala 53:39]
    node _readyVector_T_44 = and(_readyVector_T_36, _readyVector_T_43) @[scheduler.scala 52:151]
    node _readyVector_T_45 = eq(queue[2].opcodeMeta.isM, UInt<1>("h0")) @[scheduler.scala 54:6]
    node _readyVector_T_46 = or(_readyVector_T_45, multuplyAndDivideReady) @[scheduler.scala 54:31]
    node _readyVector_T_47 = and(_readyVector_T_44, _readyVector_T_46) @[scheduler.scala 53:174]
    node _readyVector_T_48 = and(queue[3].valid, queue[3].rs1.ready) @[scheduler.scala 51:20]
    node _readyVector_T_49 = and(_readyVector_T_48, queue[3].rs2.ready) @[scheduler.scala 51:42]
    node _readyVector_T_50 = eq(queue[3].opcodeMeta.isBranch, UInt<1>("h0")) @[scheduler.scala 52:6]
    node _readyVector_T_51 = and(queue[0].valid, queue[0].opcodeMeta.isBranch) @[scheduler.scala 52:101]
    node _readyVector_T_52 = and(queue[1].valid, queue[1].opcodeMeta.isBranch) @[scheduler.scala 52:101]
    node _readyVector_T_53 = and(queue[2].valid, queue[2].opcodeMeta.isBranch) @[scheduler.scala 52:101]
    node _readyVector_T_54 = or(_readyVector_T_51, _readyVector_T_52) @[scheduler.scala 52:143]
    node _readyVector_T_55 = or(_readyVector_T_54, _readyVector_T_53) @[scheduler.scala 52:143]
    node _readyVector_T_56 = eq(_readyVector_T_55, UInt<1>("h0")) @[scheduler.scala 52:64]
    node _readyVector_T_57 = or(_readyVector_T_50, _readyVector_T_56) @[scheduler.scala 52:36]
    node _readyVector_T_58 = and(_readyVector_T_49, _readyVector_T_57) @[scheduler.scala 51:64]
    node _readyVector_T_59 = eq(queue[3].opcodeMeta.isMemAccess, UInt<1>("h0")) @[scheduler.scala 53:6]
    node _readyVector_T_60 = and(queue[0].valid, queue[0].opcodeMeta.isMemAccess) @[scheduler.scala 53:105]
    node _readyVector_T_61 = and(queue[1].valid, queue[1].opcodeMeta.isMemAccess) @[scheduler.scala 53:105]
    node _readyVector_T_62 = and(queue[2].valid, queue[2].opcodeMeta.isMemAccess) @[scheduler.scala 53:105]
    node _readyVector_T_63 = or(_readyVector_T_60, _readyVector_T_61) @[scheduler.scala 53:150]
    node _readyVector_T_64 = or(_readyVector_T_63, _readyVector_T_62) @[scheduler.scala 53:150]
    node _readyVector_T_65 = eq(_readyVector_T_64, UInt<1>("h0")) @[scheduler.scala 53:68]
    node _readyVector_T_66 = and(_readyVector_T_65, memoryReady) @[scheduler.scala 53:157]
    node _readyVector_T_67 = or(_readyVector_T_59, _readyVector_T_66) @[scheduler.scala 53:39]
    node _readyVector_T_68 = and(_readyVector_T_58, _readyVector_T_67) @[scheduler.scala 52:151]
    node _readyVector_T_69 = eq(queue[3].opcodeMeta.isM, UInt<1>("h0")) @[scheduler.scala 54:6]
    node _readyVector_T_70 = or(_readyVector_T_69, multuplyAndDivideReady) @[scheduler.scala 54:31]
    node _readyVector_T_71 = and(_readyVector_T_68, _readyVector_T_70) @[scheduler.scala 53:174]
    node _readyVector_T_72 = and(queue[4].valid, queue[4].rs1.ready) @[scheduler.scala 51:20]
    node _readyVector_T_73 = and(_readyVector_T_72, queue[4].rs2.ready) @[scheduler.scala 51:42]
    node _readyVector_T_74 = eq(queue[4].opcodeMeta.isBranch, UInt<1>("h0")) @[scheduler.scala 52:6]
    node _readyVector_T_75 = and(queue[0].valid, queue[0].opcodeMeta.isBranch) @[scheduler.scala 52:101]
    node _readyVector_T_76 = and(queue[1].valid, queue[1].opcodeMeta.isBranch) @[scheduler.scala 52:101]
    node _readyVector_T_77 = and(queue[2].valid, queue[2].opcodeMeta.isBranch) @[scheduler.scala 52:101]
    node _readyVector_T_78 = and(queue[3].valid, queue[3].opcodeMeta.isBranch) @[scheduler.scala 52:101]
    node _readyVector_T_79 = or(_readyVector_T_75, _readyVector_T_76) @[scheduler.scala 52:143]
    node _readyVector_T_80 = or(_readyVector_T_79, _readyVector_T_77) @[scheduler.scala 52:143]
    node _readyVector_T_81 = or(_readyVector_T_80, _readyVector_T_78) @[scheduler.scala 52:143]
    node _readyVector_T_82 = eq(_readyVector_T_81, UInt<1>("h0")) @[scheduler.scala 52:64]
    node _readyVector_T_83 = or(_readyVector_T_74, _readyVector_T_82) @[scheduler.scala 52:36]
    node _readyVector_T_84 = and(_readyVector_T_73, _readyVector_T_83) @[scheduler.scala 51:64]
    node _readyVector_T_85 = eq(queue[4].opcodeMeta.isMemAccess, UInt<1>("h0")) @[scheduler.scala 53:6]
    node _readyVector_T_86 = and(queue[0].valid, queue[0].opcodeMeta.isMemAccess) @[scheduler.scala 53:105]
    node _readyVector_T_87 = and(queue[1].valid, queue[1].opcodeMeta.isMemAccess) @[scheduler.scala 53:105]
    node _readyVector_T_88 = and(queue[2].valid, queue[2].opcodeMeta.isMemAccess) @[scheduler.scala 53:105]
    node _readyVector_T_89 = and(queue[3].valid, queue[3].opcodeMeta.isMemAccess) @[scheduler.scala 53:105]
    node _readyVector_T_90 = or(_readyVector_T_86, _readyVector_T_87) @[scheduler.scala 53:150]
    node _readyVector_T_91 = or(_readyVector_T_90, _readyVector_T_88) @[scheduler.scala 53:150]
    node _readyVector_T_92 = or(_readyVector_T_91, _readyVector_T_89) @[scheduler.scala 53:150]
    node _readyVector_T_93 = eq(_readyVector_T_92, UInt<1>("h0")) @[scheduler.scala 53:68]
    node _readyVector_T_94 = and(_readyVector_T_93, memoryReady) @[scheduler.scala 53:157]
    node _readyVector_T_95 = or(_readyVector_T_85, _readyVector_T_94) @[scheduler.scala 53:39]
    node _readyVector_T_96 = and(_readyVector_T_84, _readyVector_T_95) @[scheduler.scala 52:151]
    node _readyVector_T_97 = eq(queue[4].opcodeMeta.isM, UInt<1>("h0")) @[scheduler.scala 54:6]
    node _readyVector_T_98 = or(_readyVector_T_97, multuplyAndDivideReady) @[scheduler.scala 54:31]
    node _readyVector_T_99 = and(_readyVector_T_96, _readyVector_T_98) @[scheduler.scala 53:174]
    node _readyVector_T_100 = and(queue[5].valid, queue[5].rs1.ready) @[scheduler.scala 51:20]
    node _readyVector_T_101 = and(_readyVector_T_100, queue[5].rs2.ready) @[scheduler.scala 51:42]
    node _readyVector_T_102 = eq(queue[5].opcodeMeta.isBranch, UInt<1>("h0")) @[scheduler.scala 52:6]
    node _readyVector_T_103 = and(queue[0].valid, queue[0].opcodeMeta.isBranch) @[scheduler.scala 52:101]
    node _readyVector_T_104 = and(queue[1].valid, queue[1].opcodeMeta.isBranch) @[scheduler.scala 52:101]
    node _readyVector_T_105 = and(queue[2].valid, queue[2].opcodeMeta.isBranch) @[scheduler.scala 52:101]
    node _readyVector_T_106 = and(queue[3].valid, queue[3].opcodeMeta.isBranch) @[scheduler.scala 52:101]
    node _readyVector_T_107 = and(queue[4].valid, queue[4].opcodeMeta.isBranch) @[scheduler.scala 52:101]
    node _readyVector_T_108 = or(_readyVector_T_103, _readyVector_T_104) @[scheduler.scala 52:143]
    node _readyVector_T_109 = or(_readyVector_T_108, _readyVector_T_105) @[scheduler.scala 52:143]
    node _readyVector_T_110 = or(_readyVector_T_109, _readyVector_T_106) @[scheduler.scala 52:143]
    node _readyVector_T_111 = or(_readyVector_T_110, _readyVector_T_107) @[scheduler.scala 52:143]
    node _readyVector_T_112 = eq(_readyVector_T_111, UInt<1>("h0")) @[scheduler.scala 52:64]
    node _readyVector_T_113 = or(_readyVector_T_102, _readyVector_T_112) @[scheduler.scala 52:36]
    node _readyVector_T_114 = and(_readyVector_T_101, _readyVector_T_113) @[scheduler.scala 51:64]
    node _readyVector_T_115 = eq(queue[5].opcodeMeta.isMemAccess, UInt<1>("h0")) @[scheduler.scala 53:6]
    node _readyVector_T_116 = and(queue[0].valid, queue[0].opcodeMeta.isMemAccess) @[scheduler.scala 53:105]
    node _readyVector_T_117 = and(queue[1].valid, queue[1].opcodeMeta.isMemAccess) @[scheduler.scala 53:105]
    node _readyVector_T_118 = and(queue[2].valid, queue[2].opcodeMeta.isMemAccess) @[scheduler.scala 53:105]
    node _readyVector_T_119 = and(queue[3].valid, queue[3].opcodeMeta.isMemAccess) @[scheduler.scala 53:105]
    node _readyVector_T_120 = and(queue[4].valid, queue[4].opcodeMeta.isMemAccess) @[scheduler.scala 53:105]
    node _readyVector_T_121 = or(_readyVector_T_116, _readyVector_T_117) @[scheduler.scala 53:150]
    node _readyVector_T_122 = or(_readyVector_T_121, _readyVector_T_118) @[scheduler.scala 53:150]
    node _readyVector_T_123 = or(_readyVector_T_122, _readyVector_T_119) @[scheduler.scala 53:150]
    node _readyVector_T_124 = or(_readyVector_T_123, _readyVector_T_120) @[scheduler.scala 53:150]
    node _readyVector_T_125 = eq(_readyVector_T_124, UInt<1>("h0")) @[scheduler.scala 53:68]
    node _readyVector_T_126 = and(_readyVector_T_125, memoryReady) @[scheduler.scala 53:157]
    node _readyVector_T_127 = or(_readyVector_T_115, _readyVector_T_126) @[scheduler.scala 53:39]
    node _readyVector_T_128 = and(_readyVector_T_114, _readyVector_T_127) @[scheduler.scala 52:151]
    node _readyVector_T_129 = eq(queue[5].opcodeMeta.isM, UInt<1>("h0")) @[scheduler.scala 54:6]
    node _readyVector_T_130 = or(_readyVector_T_129, multuplyAndDivideReady) @[scheduler.scala 54:31]
    node _readyVector_T_131 = and(_readyVector_T_128, _readyVector_T_130) @[scheduler.scala 53:174]
    node _readyVector_T_132 = and(queue[6].valid, queue[6].rs1.ready) @[scheduler.scala 51:20]
    node _readyVector_T_133 = and(_readyVector_T_132, queue[6].rs2.ready) @[scheduler.scala 51:42]
    node _readyVector_T_134 = eq(queue[6].opcodeMeta.isBranch, UInt<1>("h0")) @[scheduler.scala 52:6]
    node _readyVector_T_135 = and(queue[0].valid, queue[0].opcodeMeta.isBranch) @[scheduler.scala 52:101]
    node _readyVector_T_136 = and(queue[1].valid, queue[1].opcodeMeta.isBranch) @[scheduler.scala 52:101]
    node _readyVector_T_137 = and(queue[2].valid, queue[2].opcodeMeta.isBranch) @[scheduler.scala 52:101]
    node _readyVector_T_138 = and(queue[3].valid, queue[3].opcodeMeta.isBranch) @[scheduler.scala 52:101]
    node _readyVector_T_139 = and(queue[4].valid, queue[4].opcodeMeta.isBranch) @[scheduler.scala 52:101]
    node _readyVector_T_140 = and(queue[5].valid, queue[5].opcodeMeta.isBranch) @[scheduler.scala 52:101]
    node _readyVector_T_141 = or(_readyVector_T_135, _readyVector_T_136) @[scheduler.scala 52:143]
    node _readyVector_T_142 = or(_readyVector_T_141, _readyVector_T_137) @[scheduler.scala 52:143]
    node _readyVector_T_143 = or(_readyVector_T_142, _readyVector_T_138) @[scheduler.scala 52:143]
    node _readyVector_T_144 = or(_readyVector_T_143, _readyVector_T_139) @[scheduler.scala 52:143]
    node _readyVector_T_145 = or(_readyVector_T_144, _readyVector_T_140) @[scheduler.scala 52:143]
    node _readyVector_T_146 = eq(_readyVector_T_145, UInt<1>("h0")) @[scheduler.scala 52:64]
    node _readyVector_T_147 = or(_readyVector_T_134, _readyVector_T_146) @[scheduler.scala 52:36]
    node _readyVector_T_148 = and(_readyVector_T_133, _readyVector_T_147) @[scheduler.scala 51:64]
    node _readyVector_T_149 = eq(queue[6].opcodeMeta.isMemAccess, UInt<1>("h0")) @[scheduler.scala 53:6]
    node _readyVector_T_150 = and(queue[0].valid, queue[0].opcodeMeta.isMemAccess) @[scheduler.scala 53:105]
    node _readyVector_T_151 = and(queue[1].valid, queue[1].opcodeMeta.isMemAccess) @[scheduler.scala 53:105]
    node _readyVector_T_152 = and(queue[2].valid, queue[2].opcodeMeta.isMemAccess) @[scheduler.scala 53:105]
    node _readyVector_T_153 = and(queue[3].valid, queue[3].opcodeMeta.isMemAccess) @[scheduler.scala 53:105]
    node _readyVector_T_154 = and(queue[4].valid, queue[4].opcodeMeta.isMemAccess) @[scheduler.scala 53:105]
    node _readyVector_T_155 = and(queue[5].valid, queue[5].opcodeMeta.isMemAccess) @[scheduler.scala 53:105]
    node _readyVector_T_156 = or(_readyVector_T_150, _readyVector_T_151) @[scheduler.scala 53:150]
    node _readyVector_T_157 = or(_readyVector_T_156, _readyVector_T_152) @[scheduler.scala 53:150]
    node _readyVector_T_158 = or(_readyVector_T_157, _readyVector_T_153) @[scheduler.scala 53:150]
    node _readyVector_T_159 = or(_readyVector_T_158, _readyVector_T_154) @[scheduler.scala 53:150]
    node _readyVector_T_160 = or(_readyVector_T_159, _readyVector_T_155) @[scheduler.scala 53:150]
    node _readyVector_T_161 = eq(_readyVector_T_160, UInt<1>("h0")) @[scheduler.scala 53:68]
    node _readyVector_T_162 = and(_readyVector_T_161, memoryReady) @[scheduler.scala 53:157]
    node _readyVector_T_163 = or(_readyVector_T_149, _readyVector_T_162) @[scheduler.scala 53:39]
    node _readyVector_T_164 = and(_readyVector_T_148, _readyVector_T_163) @[scheduler.scala 52:151]
    node _readyVector_T_165 = eq(queue[6].opcodeMeta.isM, UInt<1>("h0")) @[scheduler.scala 54:6]
    node _readyVector_T_166 = or(_readyVector_T_165, multuplyAndDivideReady) @[scheduler.scala 54:31]
    node _readyVector_T_167 = and(_readyVector_T_164, _readyVector_T_166) @[scheduler.scala 53:174]
    node _readyVector_T_168 = and(queue[7].valid, queue[7].rs1.ready) @[scheduler.scala 51:20]
    node _readyVector_T_169 = and(_readyVector_T_168, queue[7].rs2.ready) @[scheduler.scala 51:42]
    node _readyVector_T_170 = eq(queue[7].opcodeMeta.isBranch, UInt<1>("h0")) @[scheduler.scala 52:6]
    node _readyVector_T_171 = and(queue[0].valid, queue[0].opcodeMeta.isBranch) @[scheduler.scala 52:101]
    node _readyVector_T_172 = and(queue[1].valid, queue[1].opcodeMeta.isBranch) @[scheduler.scala 52:101]
    node _readyVector_T_173 = and(queue[2].valid, queue[2].opcodeMeta.isBranch) @[scheduler.scala 52:101]
    node _readyVector_T_174 = and(queue[3].valid, queue[3].opcodeMeta.isBranch) @[scheduler.scala 52:101]
    node _readyVector_T_175 = and(queue[4].valid, queue[4].opcodeMeta.isBranch) @[scheduler.scala 52:101]
    node _readyVector_T_176 = and(queue[5].valid, queue[5].opcodeMeta.isBranch) @[scheduler.scala 52:101]
    node _readyVector_T_177 = and(queue[6].valid, queue[6].opcodeMeta.isBranch) @[scheduler.scala 52:101]
    node _readyVector_T_178 = or(_readyVector_T_171, _readyVector_T_172) @[scheduler.scala 52:143]
    node _readyVector_T_179 = or(_readyVector_T_178, _readyVector_T_173) @[scheduler.scala 52:143]
    node _readyVector_T_180 = or(_readyVector_T_179, _readyVector_T_174) @[scheduler.scala 52:143]
    node _readyVector_T_181 = or(_readyVector_T_180, _readyVector_T_175) @[scheduler.scala 52:143]
    node _readyVector_T_182 = or(_readyVector_T_181, _readyVector_T_176) @[scheduler.scala 52:143]
    node _readyVector_T_183 = or(_readyVector_T_182, _readyVector_T_177) @[scheduler.scala 52:143]
    node _readyVector_T_184 = eq(_readyVector_T_183, UInt<1>("h0")) @[scheduler.scala 52:64]
    node _readyVector_T_185 = or(_readyVector_T_170, _readyVector_T_184) @[scheduler.scala 52:36]
    node _readyVector_T_186 = and(_readyVector_T_169, _readyVector_T_185) @[scheduler.scala 51:64]
    node _readyVector_T_187 = eq(queue[7].opcodeMeta.isMemAccess, UInt<1>("h0")) @[scheduler.scala 53:6]
    node _readyVector_T_188 = and(queue[0].valid, queue[0].opcodeMeta.isMemAccess) @[scheduler.scala 53:105]
    node _readyVector_T_189 = and(queue[1].valid, queue[1].opcodeMeta.isMemAccess) @[scheduler.scala 53:105]
    node _readyVector_T_190 = and(queue[2].valid, queue[2].opcodeMeta.isMemAccess) @[scheduler.scala 53:105]
    node _readyVector_T_191 = and(queue[3].valid, queue[3].opcodeMeta.isMemAccess) @[scheduler.scala 53:105]
    node _readyVector_T_192 = and(queue[4].valid, queue[4].opcodeMeta.isMemAccess) @[scheduler.scala 53:105]
    node _readyVector_T_193 = and(queue[5].valid, queue[5].opcodeMeta.isMemAccess) @[scheduler.scala 53:105]
    node _readyVector_T_194 = and(queue[6].valid, queue[6].opcodeMeta.isMemAccess) @[scheduler.scala 53:105]
    node _readyVector_T_195 = or(_readyVector_T_188, _readyVector_T_189) @[scheduler.scala 53:150]
    node _readyVector_T_196 = or(_readyVector_T_195, _readyVector_T_190) @[scheduler.scala 53:150]
    node _readyVector_T_197 = or(_readyVector_T_196, _readyVector_T_191) @[scheduler.scala 53:150]
    node _readyVector_T_198 = or(_readyVector_T_197, _readyVector_T_192) @[scheduler.scala 53:150]
    node _readyVector_T_199 = or(_readyVector_T_198, _readyVector_T_193) @[scheduler.scala 53:150]
    node _readyVector_T_200 = or(_readyVector_T_199, _readyVector_T_194) @[scheduler.scala 53:150]
    node _readyVector_T_201 = eq(_readyVector_T_200, UInt<1>("h0")) @[scheduler.scala 53:68]
    node _readyVector_T_202 = and(_readyVector_T_201, memoryReady) @[scheduler.scala 53:157]
    node _readyVector_T_203 = or(_readyVector_T_187, _readyVector_T_202) @[scheduler.scala 53:39]
    node _readyVector_T_204 = and(_readyVector_T_186, _readyVector_T_203) @[scheduler.scala 52:151]
    node _readyVector_T_205 = eq(queue[7].opcodeMeta.isM, UInt<1>("h0")) @[scheduler.scala 54:6]
    node _readyVector_T_206 = or(_readyVector_T_205, multuplyAndDivideReady) @[scheduler.scala 54:31]
    node _readyVector_T_207 = and(_readyVector_T_204, _readyVector_T_206) @[scheduler.scala 53:174]
    node readyVector_lo_lo = cat(_readyVector_T_27, _readyVector_T_11) @[Cat.scala 33:92]
    node readyVector_lo_hi = cat(_readyVector_T_71, _readyVector_T_47) @[Cat.scala 33:92]
    node readyVector_lo = cat(readyVector_lo_hi, readyVector_lo_lo) @[Cat.scala 33:92]
    node readyVector_hi_lo = cat(_readyVector_T_131, _readyVector_T_99) @[Cat.scala 33:92]
    node readyVector_hi_hi = cat(_readyVector_T_207, _readyVector_T_167) @[Cat.scala 33:92]
    node readyVector_hi = cat(readyVector_hi_hi, readyVector_hi_lo) @[Cat.scala 33:92]
    node readyVector = cat(readyVector_hi, readyVector_lo) @[Cat.scala 33:92]
    node _dequeuedIndex_T = bits(readyVector, 0, 0) @[scheduler.scala 57:83]
    node _dequeuedIndex_T_1 = bits(_dequeuedIndex_T, 0, 0) @[scheduler.scala 57:87]
    node _dequeuedIndex_T_2 = bits(readyVector, 1, 1) @[scheduler.scala 57:83]
    node _dequeuedIndex_T_3 = bits(_dequeuedIndex_T_2, 0, 0) @[scheduler.scala 57:87]
    node _dequeuedIndex_T_4 = bits(readyVector, 2, 2) @[scheduler.scala 57:83]
    node _dequeuedIndex_T_5 = bits(_dequeuedIndex_T_4, 0, 0) @[scheduler.scala 57:87]
    node _dequeuedIndex_T_6 = bits(readyVector, 3, 3) @[scheduler.scala 57:83]
    node _dequeuedIndex_T_7 = bits(_dequeuedIndex_T_6, 0, 0) @[scheduler.scala 57:87]
    node _dequeuedIndex_T_8 = bits(readyVector, 4, 4) @[scheduler.scala 57:83]
    node _dequeuedIndex_T_9 = bits(_dequeuedIndex_T_8, 0, 0) @[scheduler.scala 57:87]
    node _dequeuedIndex_T_10 = bits(readyVector, 5, 5) @[scheduler.scala 57:83]
    node _dequeuedIndex_T_11 = bits(_dequeuedIndex_T_10, 0, 0) @[scheduler.scala 57:87]
    node _dequeuedIndex_T_12 = bits(readyVector, 6, 6) @[scheduler.scala 57:83]
    node _dequeuedIndex_T_13 = bits(_dequeuedIndex_T_12, 0, 0) @[scheduler.scala 57:87]
    node _dequeuedIndex_T_14 = bits(readyVector, 7, 7) @[scheduler.scala 57:83]
    node _dequeuedIndex_T_15 = bits(_dequeuedIndex_T_14, 0, 0) @[scheduler.scala 57:87]
    node _dequeuedIndex_T_16 = mux(_dequeuedIndex_T_15, UInt<3>("h7"), UInt<1>("h0")) @[Mux.scala 101:16]
    node _dequeuedIndex_T_17 = mux(_dequeuedIndex_T_13, UInt<3>("h6"), _dequeuedIndex_T_16) @[Mux.scala 101:16]
    node _dequeuedIndex_T_18 = mux(_dequeuedIndex_T_11, UInt<3>("h5"), _dequeuedIndex_T_17) @[Mux.scala 101:16]
    node _dequeuedIndex_T_19 = mux(_dequeuedIndex_T_9, UInt<3>("h4"), _dequeuedIndex_T_18) @[Mux.scala 101:16]
    node _dequeuedIndex_T_20 = mux(_dequeuedIndex_T_7, UInt<2>("h3"), _dequeuedIndex_T_19) @[Mux.scala 101:16]
    node _dequeuedIndex_T_21 = mux(_dequeuedIndex_T_5, UInt<2>("h2"), _dequeuedIndex_T_20) @[Mux.scala 101:16]
    node _dequeuedIndex_T_22 = mux(_dequeuedIndex_T_3, UInt<1>("h1"), _dequeuedIndex_T_21) @[Mux.scala 101:16]
    node dequeuedIndex = mux(_dequeuedIndex_T_1, UInt<1>("h0"), _dequeuedIndex_T_22) @[Mux.scala 101:16]
    node _dequeued_T = bits(readyVector, 0, 0) @[scheduler.scala 58:101]
    node _dequeued_T_1 = bits(_dequeued_T, 0, 0) @[scheduler.scala 58:105]
    node _dequeued_T_2 = bits(readyVector, 1, 1) @[scheduler.scala 58:101]
    node _dequeued_T_3 = bits(_dequeued_T_2, 0, 0) @[scheduler.scala 58:105]
    node _dequeued_T_4 = bits(readyVector, 2, 2) @[scheduler.scala 58:101]
    node _dequeued_T_5 = bits(_dequeued_T_4, 0, 0) @[scheduler.scala 58:105]
    node _dequeued_T_6 = bits(readyVector, 3, 3) @[scheduler.scala 58:101]
    node _dequeued_T_7 = bits(_dequeued_T_6, 0, 0) @[scheduler.scala 58:105]
    node _dequeued_T_8 = bits(readyVector, 4, 4) @[scheduler.scala 58:101]
    node _dequeued_T_9 = bits(_dequeued_T_8, 0, 0) @[scheduler.scala 58:105]
    node _dequeued_T_10 = bits(readyVector, 5, 5) @[scheduler.scala 58:101]
    node _dequeued_T_11 = bits(_dequeued_T_10, 0, 0) @[scheduler.scala 58:105]
    node _dequeued_T_12 = bits(readyVector, 6, 6) @[scheduler.scala 58:101]
    node _dequeued_T_13 = bits(_dequeued_T_12, 0, 0) @[scheduler.scala 58:105]
    node _dequeued_T_14 = mux(_dequeued_T_13, queue[6], queue[7]) @[Mux.scala 101:16]
    node _dequeued_T_15 = mux(_dequeued_T_11, queue[5], _dequeued_T_14) @[Mux.scala 101:16]
    node _dequeued_T_16 = mux(_dequeued_T_9, queue[4], _dequeued_T_15) @[Mux.scala 101:16]
    node _dequeued_T_17 = mux(_dequeued_T_7, queue[3], _dequeued_T_16) @[Mux.scala 101:16]
    node _dequeued_T_18 = mux(_dequeued_T_5, queue[2], _dequeued_T_17) @[Mux.scala 101:16]
    node _dequeued_T_19 = mux(_dequeued_T_3, queue[1], _dequeued_T_18) @[Mux.scala 101:16]
    node dequeued = mux(_dequeued_T_1, queue[0], _dequeued_T_19) @[Mux.scala 101:16]
    wire _releasedBuffer_WIRE : { valid : UInt<1>, instruction : UInt<32>, branchMask : UInt<5>, rs1prfAddr : UInt<6>, rs2prfAddr : UInt<6>, prfDest : UInt<6>, robAddr : UInt<4>}
    _releasedBuffer_WIRE.robAddr is invalid
    _releasedBuffer_WIRE.prfDest is invalid
    _releasedBuffer_WIRE.rs2prfAddr is invalid
    _releasedBuffer_WIRE.rs1prfAddr is invalid
    _releasedBuffer_WIRE.branchMask is invalid
    _releasedBuffer_WIRE.instruction is invalid
    _releasedBuffer_WIRE.valid <= UInt<1>("h0")
    reg releasedBuffer : { valid : UInt<1>, instruction : UInt<32>, branchMask : UInt<5>, rs1prfAddr : UInt<6>, rs2prfAddr : UInt<6>, prfDest : UInt<6>, robAddr : UInt<4>}, clock with :
      reset => (reset, _releasedBuffer_WIRE) @[scheduler.scala 59:31]
    node _dequeue_T = eq(releasedBuffer.valid, UInt<1>("h0")) @[scheduler.scala 70:17]
    node dequeue = or(_dequeue_T, release.fired) @[scheduler.scala 70:39]
    wire tempQueue_0 : { opcodeMeta : { isBranch : UInt<1>, isMemAccess : UInt<1>, isM : UInt<1>}, valid : UInt<1>, instruction : UInt<32>, branchMask : UInt<5>, rs1 : { ready : UInt<1>, prfAddr : UInt<6>}, rs2 : { ready : UInt<1>, prfAddr : UInt<6>}, prfDest : UInt<6>, robAddr : UInt<4>} @[scheduler.scala 72:51]
    wire tempQueue_1 : { opcodeMeta : { isBranch : UInt<1>, isMemAccess : UInt<1>, isM : UInt<1>}, valid : UInt<1>, instruction : UInt<32>, branchMask : UInt<5>, rs1 : { ready : UInt<1>, prfAddr : UInt<6>}, rs2 : { ready : UInt<1>, prfAddr : UInt<6>}, prfDest : UInt<6>, robAddr : UInt<4>} @[scheduler.scala 72:51]
    wire tempQueue_2 : { opcodeMeta : { isBranch : UInt<1>, isMemAccess : UInt<1>, isM : UInt<1>}, valid : UInt<1>, instruction : UInt<32>, branchMask : UInt<5>, rs1 : { ready : UInt<1>, prfAddr : UInt<6>}, rs2 : { ready : UInt<1>, prfAddr : UInt<6>}, prfDest : UInt<6>, robAddr : UInt<4>} @[scheduler.scala 72:51]
    wire tempQueue_3 : { opcodeMeta : { isBranch : UInt<1>, isMemAccess : UInt<1>, isM : UInt<1>}, valid : UInt<1>, instruction : UInt<32>, branchMask : UInt<5>, rs1 : { ready : UInt<1>, prfAddr : UInt<6>}, rs2 : { ready : UInt<1>, prfAddr : UInt<6>}, prfDest : UInt<6>, robAddr : UInt<4>} @[scheduler.scala 72:51]
    wire tempQueue_4 : { opcodeMeta : { isBranch : UInt<1>, isMemAccess : UInt<1>, isM : UInt<1>}, valid : UInt<1>, instruction : UInt<32>, branchMask : UInt<5>, rs1 : { ready : UInt<1>, prfAddr : UInt<6>}, rs2 : { ready : UInt<1>, prfAddr : UInt<6>}, prfDest : UInt<6>, robAddr : UInt<4>} @[scheduler.scala 72:51]
    wire tempQueue_5 : { opcodeMeta : { isBranch : UInt<1>, isMemAccess : UInt<1>, isM : UInt<1>}, valid : UInt<1>, instruction : UInt<32>, branchMask : UInt<5>, rs1 : { ready : UInt<1>, prfAddr : UInt<6>}, rs2 : { ready : UInt<1>, prfAddr : UInt<6>}, prfDest : UInt<6>, robAddr : UInt<4>} @[scheduler.scala 72:51]
    wire tempQueue_6 : { opcodeMeta : { isBranch : UInt<1>, isMemAccess : UInt<1>, isM : UInt<1>}, valid : UInt<1>, instruction : UInt<32>, branchMask : UInt<5>, rs1 : { ready : UInt<1>, prfAddr : UInt<6>}, rs2 : { ready : UInt<1>, prfAddr : UInt<6>}, prfDest : UInt<6>, robAddr : UInt<4>} @[scheduler.scala 72:51]
    wire tempQueue_7 : { opcodeMeta : { isBranch : UInt<1>, isMemAccess : UInt<1>, isM : UInt<1>}, valid : UInt<1>, instruction : UInt<32>, branchMask : UInt<5>, rs1 : { ready : UInt<1>, prfAddr : UInt<6>}, rs2 : { ready : UInt<1>, prfAddr : UInt<6>}, prfDest : UInt<6>, robAddr : UInt<4>} @[scheduler.scala 72:51]
    wire tempQueue_8 : { opcodeMeta : { isBranch : UInt<1>, isMemAccess : UInt<1>, isM : UInt<1>}, valid : UInt<1>, instruction : UInt<32>, branchMask : UInt<5>, rs1 : { ready : UInt<1>, prfAddr : UInt<6>}, rs2 : { ready : UInt<1>, prfAddr : UInt<6>}, prfDest : UInt<6>, robAddr : UInt<4>} @[scheduler.scala 72:51]
    tempQueue_0 <= queue[0] @[scheduler.scala 73:76]
    tempQueue_1 <= queue[1] @[scheduler.scala 73:76]
    tempQueue_2 <= queue[2] @[scheduler.scala 73:76]
    tempQueue_3 <= queue[3] @[scheduler.scala 73:76]
    tempQueue_4 <= queue[4] @[scheduler.scala 73:76]
    tempQueue_5 <= queue[5] @[scheduler.scala 73:76]
    tempQueue_6 <= queue[6] @[scheduler.scala 73:76]
    tempQueue_7 <= queue[7] @[scheduler.scala 73:76]
    tempQueue_8.valid <= allocate.fired @[scheduler.scala 74:36]
    tempQueue_8.branchMask <= allocate.branchMask @[scheduler.scala 75:41]
    wire tempQueue_8_opcodeMeta_meta : { isBranch : UInt<1>, isMemAccess : UInt<1>, isM : UInt<1>} @[scheduler.scala 77:20]
    node _tempQueue_8_opcodeMeta_meta_isM_T = bits(allocate.instruction, 6, 2) @[scheduler.scala 78:38]
    node _tempQueue_8_opcodeMeta_meta_isM_T_1 = and(_tempQueue_8_opcodeMeta_meta_isM_T, UInt<5>("h1d")) @[scheduler.scala 78:44]
    node _tempQueue_8_opcodeMeta_meta_isM_T_2 = eq(UInt<4>("hc"), _tempQueue_8_opcodeMeta_meta_isM_T_1) @[scheduler.scala 78:44]
    node _tempQueue_8_opcodeMeta_meta_isM_T_3 = bits(allocate.instruction, 25, 25) @[scheduler.scala 78:89]
    node _tempQueue_8_opcodeMeta_meta_isM_T_4 = bits(_tempQueue_8_opcodeMeta_meta_isM_T_3, 0, 0) @[scheduler.scala 78:94]
    node _tempQueue_8_opcodeMeta_meta_isM_T_5 = and(_tempQueue_8_opcodeMeta_meta_isM_T_2, _tempQueue_8_opcodeMeta_meta_isM_T_4) @[scheduler.scala 78:66]
    tempQueue_8_opcodeMeta_meta.isM <= _tempQueue_8_opcodeMeta_meta_isM_T_5 @[scheduler.scala 78:14]
    node _tempQueue_8_opcodeMeta_meta_isMemAccess_T = bits(allocate.instruction, 6, 6) @[scheduler.scala 79:46]
    node _tempQueue_8_opcodeMeta_meta_isMemAccess_T_1 = bits(_tempQueue_8_opcodeMeta_meta_isMemAccess_T, 0, 0) @[scheduler.scala 79:50]
    node _tempQueue_8_opcodeMeta_meta_isMemAccess_T_2 = eq(_tempQueue_8_opcodeMeta_meta_isMemAccess_T_1, UInt<1>("h0")) @[scheduler.scala 79:25]
    node _tempQueue_8_opcodeMeta_meta_isMemAccess_T_3 = bits(allocate.instruction, 4, 4) @[scheduler.scala 79:81]
    node _tempQueue_8_opcodeMeta_meta_isMemAccess_T_4 = bits(_tempQueue_8_opcodeMeta_meta_isMemAccess_T_3, 0, 0) @[scheduler.scala 79:85]
    node _tempQueue_8_opcodeMeta_meta_isMemAccess_T_5 = eq(_tempQueue_8_opcodeMeta_meta_isMemAccess_T_4, UInt<1>("h0")) @[scheduler.scala 79:60]
    node _tempQueue_8_opcodeMeta_meta_isMemAccess_T_6 = and(_tempQueue_8_opcodeMeta_meta_isMemAccess_T_2, _tempQueue_8_opcodeMeta_meta_isMemAccess_T_5) @[scheduler.scala 79:57]
    node _tempQueue_8_opcodeMeta_meta_isMemAccess_T_7 = bits(allocate.instruction, 6, 2) @[scheduler.scala 79:116]
    node _tempQueue_8_opcodeMeta_meta_isMemAccess_T_8 = and(_tempQueue_8_opcodeMeta_meta_isMemAccess_T_7, UInt<5>("h1f")) @[scheduler.scala 79:122]
    node _tempQueue_8_opcodeMeta_meta_isMemAccess_T_9 = eq(UInt<2>("h3"), _tempQueue_8_opcodeMeta_meta_isMemAccess_T_8) @[scheduler.scala 79:122]
    node _tempQueue_8_opcodeMeta_meta_isMemAccess_T_10 = eq(_tempQueue_8_opcodeMeta_meta_isMemAccess_T_9, UInt<1>("h0")) @[scheduler.scala 79:122]
    node _tempQueue_8_opcodeMeta_meta_isMemAccess_T_11 = and(_tempQueue_8_opcodeMeta_meta_isMemAccess_T_6, _tempQueue_8_opcodeMeta_meta_isMemAccess_T_10) @[scheduler.scala 79:92]
    tempQueue_8_opcodeMeta_meta.isMemAccess <= _tempQueue_8_opcodeMeta_meta_isMemAccess_T_11 @[scheduler.scala 79:22]
    node _tempQueue_8_opcodeMeta_meta_isBranch_T = bits(allocate.instruction, 6, 5) @[scheduler.scala 80:42]
    node _tempQueue_8_opcodeMeta_meta_isBranch_T_1 = eq(_tempQueue_8_opcodeMeta_meta_isBranch_T, UInt<2>("h3")) @[scheduler.scala 80:48]
    tempQueue_8_opcodeMeta_meta.isBranch <= _tempQueue_8_opcodeMeta_meta_isBranch_T_1 @[scheduler.scala 80:19]
    tempQueue_8.opcodeMeta <= tempQueue_8_opcodeMeta_meta @[scheduler.scala 76:41]
    tempQueue_8.prfDest <= allocate.prfDest @[scheduler.scala 83:38]
    tempQueue_8.robAddr <= allocate.robAddr @[scheduler.scala 84:38]
    tempQueue_8.rs1 <= allocate.rs1 @[scheduler.scala 85:34]
    tempQueue_8.rs2 <= allocate.rs2 @[scheduler.scala 86:34]
    tempQueue_8.instruction <= allocate.instruction @[scheduler.scala 87:42]
    node _T = and(allocate.fired, tempQueue_8.opcodeMeta.isMemAccess) @[scheduler.scala 89:23]
    when _T : @[scheduler.scala 89:77]
      tempQueue_8.rs2.ready <= UInt<1>("h1") @[scheduler.scala 89:116]
    wire updatedEntries_0 : { opcodeMeta : { isBranch : UInt<1>, isMemAccess : UInt<1>, isM : UInt<1>}, valid : UInt<1>, instruction : UInt<32>, branchMask : UInt<5>, rs1 : { ready : UInt<1>, prfAddr : UInt<6>}, rs2 : { ready : UInt<1>, prfAddr : UInt<6>}, prfDest : UInt<6>, robAddr : UInt<4>} @[scheduler.scala 91:56]
    wire updatedEntries_1 : { opcodeMeta : { isBranch : UInt<1>, isMemAccess : UInt<1>, isM : UInt<1>}, valid : UInt<1>, instruction : UInt<32>, branchMask : UInt<5>, rs1 : { ready : UInt<1>, prfAddr : UInt<6>}, rs2 : { ready : UInt<1>, prfAddr : UInt<6>}, prfDest : UInt<6>, robAddr : UInt<4>} @[scheduler.scala 91:56]
    wire updatedEntries_2 : { opcodeMeta : { isBranch : UInt<1>, isMemAccess : UInt<1>, isM : UInt<1>}, valid : UInt<1>, instruction : UInt<32>, branchMask : UInt<5>, rs1 : { ready : UInt<1>, prfAddr : UInt<6>}, rs2 : { ready : UInt<1>, prfAddr : UInt<6>}, prfDest : UInt<6>, robAddr : UInt<4>} @[scheduler.scala 91:56]
    wire updatedEntries_3 : { opcodeMeta : { isBranch : UInt<1>, isMemAccess : UInt<1>, isM : UInt<1>}, valid : UInt<1>, instruction : UInt<32>, branchMask : UInt<5>, rs1 : { ready : UInt<1>, prfAddr : UInt<6>}, rs2 : { ready : UInt<1>, prfAddr : UInt<6>}, prfDest : UInt<6>, robAddr : UInt<4>} @[scheduler.scala 91:56]
    wire updatedEntries_4 : { opcodeMeta : { isBranch : UInt<1>, isMemAccess : UInt<1>, isM : UInt<1>}, valid : UInt<1>, instruction : UInt<32>, branchMask : UInt<5>, rs1 : { ready : UInt<1>, prfAddr : UInt<6>}, rs2 : { ready : UInt<1>, prfAddr : UInt<6>}, prfDest : UInt<6>, robAddr : UInt<4>} @[scheduler.scala 91:56]
    wire updatedEntries_5 : { opcodeMeta : { isBranch : UInt<1>, isMemAccess : UInt<1>, isM : UInt<1>}, valid : UInt<1>, instruction : UInt<32>, branchMask : UInt<5>, rs1 : { ready : UInt<1>, prfAddr : UInt<6>}, rs2 : { ready : UInt<1>, prfAddr : UInt<6>}, prfDest : UInt<6>, robAddr : UInt<4>} @[scheduler.scala 91:56]
    wire updatedEntries_6 : { opcodeMeta : { isBranch : UInt<1>, isMemAccess : UInt<1>, isM : UInt<1>}, valid : UInt<1>, instruction : UInt<32>, branchMask : UInt<5>, rs1 : { ready : UInt<1>, prfAddr : UInt<6>}, rs2 : { ready : UInt<1>, prfAddr : UInt<6>}, prfDest : UInt<6>, robAddr : UInt<4>} @[scheduler.scala 91:56]
    wire updatedEntries_7 : { opcodeMeta : { isBranch : UInt<1>, isMemAccess : UInt<1>, isM : UInt<1>}, valid : UInt<1>, instruction : UInt<32>, branchMask : UInt<5>, rs1 : { ready : UInt<1>, prfAddr : UInt<6>}, rs2 : { ready : UInt<1>, prfAddr : UInt<6>}, prfDest : UInt<6>, robAddr : UInt<4>} @[scheduler.scala 91:56]
    wire updatedEntries_8 : { opcodeMeta : { isBranch : UInt<1>, isMemAccess : UInt<1>, isM : UInt<1>}, valid : UInt<1>, instruction : UInt<32>, branchMask : UInt<5>, rs1 : { ready : UInt<1>, prfAddr : UInt<6>}, rs2 : { ready : UInt<1>, prfAddr : UInt<6>}, prfDest : UInt<6>, robAddr : UInt<4>} @[scheduler.scala 91:56]
    updatedEntries_0 <= tempQueue_0 @[scheduler.scala 92:81]
    updatedEntries_1 <= tempQueue_1 @[scheduler.scala 92:81]
    updatedEntries_2 <= tempQueue_2 @[scheduler.scala 92:81]
    updatedEntries_3 <= tempQueue_3 @[scheduler.scala 92:81]
    updatedEntries_4 <= tempQueue_4 @[scheduler.scala 92:81]
    updatedEntries_5 <= tempQueue_5 @[scheduler.scala 92:81]
    updatedEntries_6 <= tempQueue_6 @[scheduler.scala 92:81]
    updatedEntries_7 <= tempQueue_7 @[scheduler.scala 92:81]
    updatedEntries_8 <= tempQueue_8 @[scheduler.scala 92:81]
    wire wakeUpInt : { valid : UInt<1>, prfAddr : UInt<6>} @[scheduler.scala 94:23]
    node _wakeUpInt_valid_T = bits(dequeued.instruction, 6, 2) @[scheduler.scala 95:43]
    node _wakeUpInt_valid_T_1 = and(_wakeUpInt_valid_T, UInt<5>("h15")) @[scheduler.scala 95:49]
    node _wakeUpInt_valid_T_2 = eq(UInt<3>("h4"), _wakeUpInt_valid_T_1) @[scheduler.scala 95:49]
    node _wakeUpInt_valid_T_3 = eq(dequeued.opcodeMeta.isM, UInt<1>("h0")) @[scheduler.scala 95:74]
    node _wakeUpInt_valid_T_4 = and(_wakeUpInt_valid_T_2, _wakeUpInt_valid_T_3) @[scheduler.scala 95:71]
    node _wakeUpInt_valid_T_5 = and(_wakeUpInt_valid_T_4, dequeue) @[scheduler.scala 95:99]
    node _wakeUpInt_valid_T_6 = orr(readyVector) @[scheduler.scala 95:125]
    node _wakeUpInt_valid_T_7 = and(_wakeUpInt_valid_T_5, _wakeUpInt_valid_T_6) @[scheduler.scala 95:110]
    node _wakeUpInt_valid_T_8 = bits(dequeued.instruction, 11, 7) @[scheduler.scala 95:152]
    node _wakeUpInt_valid_T_9 = orr(_wakeUpInt_valid_T_8) @[scheduler.scala 95:160]
    node _wakeUpInt_valid_T_10 = and(_wakeUpInt_valid_T_7, _wakeUpInt_valid_T_9) @[scheduler.scala 95:129]
    wakeUpInt.valid <= _wakeUpInt_valid_T_10 @[scheduler.scala 95:19]
    wakeUpInt.prfAddr <= dequeued.prfDest @[scheduler.scala 96:21]
    node _updatedEntries_0_rs1_ready_T = eq(wakeUpExt[0].prfAddr, tempQueue_0.rs1.prfAddr) @[scheduler.scala 98:173]
    node _updatedEntries_0_rs1_ready_T_1 = and(wakeUpExt[0].valid, _updatedEntries_0_rs1_ready_T) @[scheduler.scala 98:159]
    node _updatedEntries_0_rs1_ready_T_2 = eq(wakeUpExt[1].prfAddr, tempQueue_0.rs1.prfAddr) @[scheduler.scala 98:173]
    node _updatedEntries_0_rs1_ready_T_3 = and(wakeUpExt[1].valid, _updatedEntries_0_rs1_ready_T_2) @[scheduler.scala 98:159]
    node _updatedEntries_0_rs1_ready_T_4 = eq(wakeUpInt.prfAddr, tempQueue_0.rs1.prfAddr) @[scheduler.scala 98:173]
    node _updatedEntries_0_rs1_ready_T_5 = and(wakeUpInt.valid, _updatedEntries_0_rs1_ready_T_4) @[scheduler.scala 98:159]
    node _updatedEntries_0_rs1_ready_T_6 = or(_updatedEntries_0_rs1_ready_T_1, _updatedEntries_0_rs1_ready_T_3) @[scheduler.scala 98:209]
    node _updatedEntries_0_rs1_ready_T_7 = or(_updatedEntries_0_rs1_ready_T_6, _updatedEntries_0_rs1_ready_T_5) @[scheduler.scala 98:209]
    node _updatedEntries_0_rs1_ready_T_8 = or(tempQueue_0.rs1.ready, _updatedEntries_0_rs1_ready_T_7) @[scheduler.scala 98:132]
    node _updatedEntries_0_rs1_ready_T_9 = and(tempQueue_0.valid, _updatedEntries_0_rs1_ready_T_8) @[scheduler.scala 98:109]
    updatedEntries_0.rs1.ready <= _updatedEntries_0_rs1_ready_T_9 @[scheduler.scala 98:91]
    node _updatedEntries_1_rs1_ready_T = eq(wakeUpExt[0].prfAddr, tempQueue_1.rs1.prfAddr) @[scheduler.scala 98:173]
    node _updatedEntries_1_rs1_ready_T_1 = and(wakeUpExt[0].valid, _updatedEntries_1_rs1_ready_T) @[scheduler.scala 98:159]
    node _updatedEntries_1_rs1_ready_T_2 = eq(wakeUpExt[1].prfAddr, tempQueue_1.rs1.prfAddr) @[scheduler.scala 98:173]
    node _updatedEntries_1_rs1_ready_T_3 = and(wakeUpExt[1].valid, _updatedEntries_1_rs1_ready_T_2) @[scheduler.scala 98:159]
    node _updatedEntries_1_rs1_ready_T_4 = eq(wakeUpInt.prfAddr, tempQueue_1.rs1.prfAddr) @[scheduler.scala 98:173]
    node _updatedEntries_1_rs1_ready_T_5 = and(wakeUpInt.valid, _updatedEntries_1_rs1_ready_T_4) @[scheduler.scala 98:159]
    node _updatedEntries_1_rs1_ready_T_6 = or(_updatedEntries_1_rs1_ready_T_1, _updatedEntries_1_rs1_ready_T_3) @[scheduler.scala 98:209]
    node _updatedEntries_1_rs1_ready_T_7 = or(_updatedEntries_1_rs1_ready_T_6, _updatedEntries_1_rs1_ready_T_5) @[scheduler.scala 98:209]
    node _updatedEntries_1_rs1_ready_T_8 = or(tempQueue_1.rs1.ready, _updatedEntries_1_rs1_ready_T_7) @[scheduler.scala 98:132]
    node _updatedEntries_1_rs1_ready_T_9 = and(tempQueue_1.valid, _updatedEntries_1_rs1_ready_T_8) @[scheduler.scala 98:109]
    updatedEntries_1.rs1.ready <= _updatedEntries_1_rs1_ready_T_9 @[scheduler.scala 98:91]
    node _updatedEntries_2_rs1_ready_T = eq(wakeUpExt[0].prfAddr, tempQueue_2.rs1.prfAddr) @[scheduler.scala 98:173]
    node _updatedEntries_2_rs1_ready_T_1 = and(wakeUpExt[0].valid, _updatedEntries_2_rs1_ready_T) @[scheduler.scala 98:159]
    node _updatedEntries_2_rs1_ready_T_2 = eq(wakeUpExt[1].prfAddr, tempQueue_2.rs1.prfAddr) @[scheduler.scala 98:173]
    node _updatedEntries_2_rs1_ready_T_3 = and(wakeUpExt[1].valid, _updatedEntries_2_rs1_ready_T_2) @[scheduler.scala 98:159]
    node _updatedEntries_2_rs1_ready_T_4 = eq(wakeUpInt.prfAddr, tempQueue_2.rs1.prfAddr) @[scheduler.scala 98:173]
    node _updatedEntries_2_rs1_ready_T_5 = and(wakeUpInt.valid, _updatedEntries_2_rs1_ready_T_4) @[scheduler.scala 98:159]
    node _updatedEntries_2_rs1_ready_T_6 = or(_updatedEntries_2_rs1_ready_T_1, _updatedEntries_2_rs1_ready_T_3) @[scheduler.scala 98:209]
    node _updatedEntries_2_rs1_ready_T_7 = or(_updatedEntries_2_rs1_ready_T_6, _updatedEntries_2_rs1_ready_T_5) @[scheduler.scala 98:209]
    node _updatedEntries_2_rs1_ready_T_8 = or(tempQueue_2.rs1.ready, _updatedEntries_2_rs1_ready_T_7) @[scheduler.scala 98:132]
    node _updatedEntries_2_rs1_ready_T_9 = and(tempQueue_2.valid, _updatedEntries_2_rs1_ready_T_8) @[scheduler.scala 98:109]
    updatedEntries_2.rs1.ready <= _updatedEntries_2_rs1_ready_T_9 @[scheduler.scala 98:91]
    node _updatedEntries_3_rs1_ready_T = eq(wakeUpExt[0].prfAddr, tempQueue_3.rs1.prfAddr) @[scheduler.scala 98:173]
    node _updatedEntries_3_rs1_ready_T_1 = and(wakeUpExt[0].valid, _updatedEntries_3_rs1_ready_T) @[scheduler.scala 98:159]
    node _updatedEntries_3_rs1_ready_T_2 = eq(wakeUpExt[1].prfAddr, tempQueue_3.rs1.prfAddr) @[scheduler.scala 98:173]
    node _updatedEntries_3_rs1_ready_T_3 = and(wakeUpExt[1].valid, _updatedEntries_3_rs1_ready_T_2) @[scheduler.scala 98:159]
    node _updatedEntries_3_rs1_ready_T_4 = eq(wakeUpInt.prfAddr, tempQueue_3.rs1.prfAddr) @[scheduler.scala 98:173]
    node _updatedEntries_3_rs1_ready_T_5 = and(wakeUpInt.valid, _updatedEntries_3_rs1_ready_T_4) @[scheduler.scala 98:159]
    node _updatedEntries_3_rs1_ready_T_6 = or(_updatedEntries_3_rs1_ready_T_1, _updatedEntries_3_rs1_ready_T_3) @[scheduler.scala 98:209]
    node _updatedEntries_3_rs1_ready_T_7 = or(_updatedEntries_3_rs1_ready_T_6, _updatedEntries_3_rs1_ready_T_5) @[scheduler.scala 98:209]
    node _updatedEntries_3_rs1_ready_T_8 = or(tempQueue_3.rs1.ready, _updatedEntries_3_rs1_ready_T_7) @[scheduler.scala 98:132]
    node _updatedEntries_3_rs1_ready_T_9 = and(tempQueue_3.valid, _updatedEntries_3_rs1_ready_T_8) @[scheduler.scala 98:109]
    updatedEntries_3.rs1.ready <= _updatedEntries_3_rs1_ready_T_9 @[scheduler.scala 98:91]
    node _updatedEntries_4_rs1_ready_T = eq(wakeUpExt[0].prfAddr, tempQueue_4.rs1.prfAddr) @[scheduler.scala 98:173]
    node _updatedEntries_4_rs1_ready_T_1 = and(wakeUpExt[0].valid, _updatedEntries_4_rs1_ready_T) @[scheduler.scala 98:159]
    node _updatedEntries_4_rs1_ready_T_2 = eq(wakeUpExt[1].prfAddr, tempQueue_4.rs1.prfAddr) @[scheduler.scala 98:173]
    node _updatedEntries_4_rs1_ready_T_3 = and(wakeUpExt[1].valid, _updatedEntries_4_rs1_ready_T_2) @[scheduler.scala 98:159]
    node _updatedEntries_4_rs1_ready_T_4 = eq(wakeUpInt.prfAddr, tempQueue_4.rs1.prfAddr) @[scheduler.scala 98:173]
    node _updatedEntries_4_rs1_ready_T_5 = and(wakeUpInt.valid, _updatedEntries_4_rs1_ready_T_4) @[scheduler.scala 98:159]
    node _updatedEntries_4_rs1_ready_T_6 = or(_updatedEntries_4_rs1_ready_T_1, _updatedEntries_4_rs1_ready_T_3) @[scheduler.scala 98:209]
    node _updatedEntries_4_rs1_ready_T_7 = or(_updatedEntries_4_rs1_ready_T_6, _updatedEntries_4_rs1_ready_T_5) @[scheduler.scala 98:209]
    node _updatedEntries_4_rs1_ready_T_8 = or(tempQueue_4.rs1.ready, _updatedEntries_4_rs1_ready_T_7) @[scheduler.scala 98:132]
    node _updatedEntries_4_rs1_ready_T_9 = and(tempQueue_4.valid, _updatedEntries_4_rs1_ready_T_8) @[scheduler.scala 98:109]
    updatedEntries_4.rs1.ready <= _updatedEntries_4_rs1_ready_T_9 @[scheduler.scala 98:91]
    node _updatedEntries_5_rs1_ready_T = eq(wakeUpExt[0].prfAddr, tempQueue_5.rs1.prfAddr) @[scheduler.scala 98:173]
    node _updatedEntries_5_rs1_ready_T_1 = and(wakeUpExt[0].valid, _updatedEntries_5_rs1_ready_T) @[scheduler.scala 98:159]
    node _updatedEntries_5_rs1_ready_T_2 = eq(wakeUpExt[1].prfAddr, tempQueue_5.rs1.prfAddr) @[scheduler.scala 98:173]
    node _updatedEntries_5_rs1_ready_T_3 = and(wakeUpExt[1].valid, _updatedEntries_5_rs1_ready_T_2) @[scheduler.scala 98:159]
    node _updatedEntries_5_rs1_ready_T_4 = eq(wakeUpInt.prfAddr, tempQueue_5.rs1.prfAddr) @[scheduler.scala 98:173]
    node _updatedEntries_5_rs1_ready_T_5 = and(wakeUpInt.valid, _updatedEntries_5_rs1_ready_T_4) @[scheduler.scala 98:159]
    node _updatedEntries_5_rs1_ready_T_6 = or(_updatedEntries_5_rs1_ready_T_1, _updatedEntries_5_rs1_ready_T_3) @[scheduler.scala 98:209]
    node _updatedEntries_5_rs1_ready_T_7 = or(_updatedEntries_5_rs1_ready_T_6, _updatedEntries_5_rs1_ready_T_5) @[scheduler.scala 98:209]
    node _updatedEntries_5_rs1_ready_T_8 = or(tempQueue_5.rs1.ready, _updatedEntries_5_rs1_ready_T_7) @[scheduler.scala 98:132]
    node _updatedEntries_5_rs1_ready_T_9 = and(tempQueue_5.valid, _updatedEntries_5_rs1_ready_T_8) @[scheduler.scala 98:109]
    updatedEntries_5.rs1.ready <= _updatedEntries_5_rs1_ready_T_9 @[scheduler.scala 98:91]
    node _updatedEntries_6_rs1_ready_T = eq(wakeUpExt[0].prfAddr, tempQueue_6.rs1.prfAddr) @[scheduler.scala 98:173]
    node _updatedEntries_6_rs1_ready_T_1 = and(wakeUpExt[0].valid, _updatedEntries_6_rs1_ready_T) @[scheduler.scala 98:159]
    node _updatedEntries_6_rs1_ready_T_2 = eq(wakeUpExt[1].prfAddr, tempQueue_6.rs1.prfAddr) @[scheduler.scala 98:173]
    node _updatedEntries_6_rs1_ready_T_3 = and(wakeUpExt[1].valid, _updatedEntries_6_rs1_ready_T_2) @[scheduler.scala 98:159]
    node _updatedEntries_6_rs1_ready_T_4 = eq(wakeUpInt.prfAddr, tempQueue_6.rs1.prfAddr) @[scheduler.scala 98:173]
    node _updatedEntries_6_rs1_ready_T_5 = and(wakeUpInt.valid, _updatedEntries_6_rs1_ready_T_4) @[scheduler.scala 98:159]
    node _updatedEntries_6_rs1_ready_T_6 = or(_updatedEntries_6_rs1_ready_T_1, _updatedEntries_6_rs1_ready_T_3) @[scheduler.scala 98:209]
    node _updatedEntries_6_rs1_ready_T_7 = or(_updatedEntries_6_rs1_ready_T_6, _updatedEntries_6_rs1_ready_T_5) @[scheduler.scala 98:209]
    node _updatedEntries_6_rs1_ready_T_8 = or(tempQueue_6.rs1.ready, _updatedEntries_6_rs1_ready_T_7) @[scheduler.scala 98:132]
    node _updatedEntries_6_rs1_ready_T_9 = and(tempQueue_6.valid, _updatedEntries_6_rs1_ready_T_8) @[scheduler.scala 98:109]
    updatedEntries_6.rs1.ready <= _updatedEntries_6_rs1_ready_T_9 @[scheduler.scala 98:91]
    node _updatedEntries_7_rs1_ready_T = eq(wakeUpExt[0].prfAddr, tempQueue_7.rs1.prfAddr) @[scheduler.scala 98:173]
    node _updatedEntries_7_rs1_ready_T_1 = and(wakeUpExt[0].valid, _updatedEntries_7_rs1_ready_T) @[scheduler.scala 98:159]
    node _updatedEntries_7_rs1_ready_T_2 = eq(wakeUpExt[1].prfAddr, tempQueue_7.rs1.prfAddr) @[scheduler.scala 98:173]
    node _updatedEntries_7_rs1_ready_T_3 = and(wakeUpExt[1].valid, _updatedEntries_7_rs1_ready_T_2) @[scheduler.scala 98:159]
    node _updatedEntries_7_rs1_ready_T_4 = eq(wakeUpInt.prfAddr, tempQueue_7.rs1.prfAddr) @[scheduler.scala 98:173]
    node _updatedEntries_7_rs1_ready_T_5 = and(wakeUpInt.valid, _updatedEntries_7_rs1_ready_T_4) @[scheduler.scala 98:159]
    node _updatedEntries_7_rs1_ready_T_6 = or(_updatedEntries_7_rs1_ready_T_1, _updatedEntries_7_rs1_ready_T_3) @[scheduler.scala 98:209]
    node _updatedEntries_7_rs1_ready_T_7 = or(_updatedEntries_7_rs1_ready_T_6, _updatedEntries_7_rs1_ready_T_5) @[scheduler.scala 98:209]
    node _updatedEntries_7_rs1_ready_T_8 = or(tempQueue_7.rs1.ready, _updatedEntries_7_rs1_ready_T_7) @[scheduler.scala 98:132]
    node _updatedEntries_7_rs1_ready_T_9 = and(tempQueue_7.valid, _updatedEntries_7_rs1_ready_T_8) @[scheduler.scala 98:109]
    updatedEntries_7.rs1.ready <= _updatedEntries_7_rs1_ready_T_9 @[scheduler.scala 98:91]
    node _updatedEntries_8_rs1_ready_T = eq(wakeUpExt[0].prfAddr, tempQueue_8.rs1.prfAddr) @[scheduler.scala 98:173]
    node _updatedEntries_8_rs1_ready_T_1 = and(wakeUpExt[0].valid, _updatedEntries_8_rs1_ready_T) @[scheduler.scala 98:159]
    node _updatedEntries_8_rs1_ready_T_2 = eq(wakeUpExt[1].prfAddr, tempQueue_8.rs1.prfAddr) @[scheduler.scala 98:173]
    node _updatedEntries_8_rs1_ready_T_3 = and(wakeUpExt[1].valid, _updatedEntries_8_rs1_ready_T_2) @[scheduler.scala 98:159]
    node _updatedEntries_8_rs1_ready_T_4 = eq(wakeUpInt.prfAddr, tempQueue_8.rs1.prfAddr) @[scheduler.scala 98:173]
    node _updatedEntries_8_rs1_ready_T_5 = and(wakeUpInt.valid, _updatedEntries_8_rs1_ready_T_4) @[scheduler.scala 98:159]
    node _updatedEntries_8_rs1_ready_T_6 = or(_updatedEntries_8_rs1_ready_T_1, _updatedEntries_8_rs1_ready_T_3) @[scheduler.scala 98:209]
    node _updatedEntries_8_rs1_ready_T_7 = or(_updatedEntries_8_rs1_ready_T_6, _updatedEntries_8_rs1_ready_T_5) @[scheduler.scala 98:209]
    node _updatedEntries_8_rs1_ready_T_8 = or(tempQueue_8.rs1.ready, _updatedEntries_8_rs1_ready_T_7) @[scheduler.scala 98:132]
    node _updatedEntries_8_rs1_ready_T_9 = and(tempQueue_8.valid, _updatedEntries_8_rs1_ready_T_8) @[scheduler.scala 98:109]
    updatedEntries_8.rs1.ready <= _updatedEntries_8_rs1_ready_T_9 @[scheduler.scala 98:91]
    reg instrRetired_REG : { valid : UInt<1>, prfAddr : UInt<6>}, clock with :
      reset => (UInt<1>("h0"), instrRetired_REG) @[scheduler.scala 101:26]
    instrRetired_REG <= wakeUpInt @[scheduler.scala 101:26]
    instrRetired <= instrRetired_REG @[scheduler.scala 101:16]
    node _updatedEntries_0_rs2_ready_T = eq(wakeUpExt[0].prfAddr, tempQueue_0.rs2.prfAddr) @[scheduler.scala 104:106]
    node _updatedEntries_0_rs2_ready_T_1 = and(wakeUpExt[0].valid, _updatedEntries_0_rs2_ready_T) @[scheduler.scala 104:92]
    node _updatedEntries_0_rs2_ready_T_2 = eq(wakeUpExt[1].prfAddr, tempQueue_0.rs2.prfAddr) @[scheduler.scala 104:106]
    node _updatedEntries_0_rs2_ready_T_3 = and(wakeUpExt[1].valid, _updatedEntries_0_rs2_ready_T_2) @[scheduler.scala 104:92]
    node _updatedEntries_0_rs2_ready_T_4 = eq(wakeUpInt.prfAddr, tempQueue_0.rs2.prfAddr) @[scheduler.scala 104:106]
    node _updatedEntries_0_rs2_ready_T_5 = and(wakeUpInt.valid, _updatedEntries_0_rs2_ready_T_4) @[scheduler.scala 104:92]
    node _updatedEntries_0_rs2_ready_T_6 = or(_updatedEntries_0_rs2_ready_T_1, _updatedEntries_0_rs2_ready_T_3) @[scheduler.scala 104:142]
    node _updatedEntries_0_rs2_ready_T_7 = or(_updatedEntries_0_rs2_ready_T_6, _updatedEntries_0_rs2_ready_T_5) @[scheduler.scala 104:142]
    node _updatedEntries_0_rs2_ready_T_8 = or(tempQueue_0.rs2.ready, _updatedEntries_0_rs2_ready_T_7) @[scheduler.scala 104:65]
    node _updatedEntries_0_rs2_ready_T_9 = and(tempQueue_0.valid, _updatedEntries_0_rs2_ready_T_8) @[scheduler.scala 104:42]
    updatedEntries_0.rs2.ready <= _updatedEntries_0_rs2_ready_T_9 @[scheduler.scala 104:24]
    node _updatedEntries_1_rs2_ready_T = eq(wakeUpExt[0].prfAddr, tempQueue_1.rs2.prfAddr) @[scheduler.scala 104:106]
    node _updatedEntries_1_rs2_ready_T_1 = and(wakeUpExt[0].valid, _updatedEntries_1_rs2_ready_T) @[scheduler.scala 104:92]
    node _updatedEntries_1_rs2_ready_T_2 = eq(wakeUpExt[1].prfAddr, tempQueue_1.rs2.prfAddr) @[scheduler.scala 104:106]
    node _updatedEntries_1_rs2_ready_T_3 = and(wakeUpExt[1].valid, _updatedEntries_1_rs2_ready_T_2) @[scheduler.scala 104:92]
    node _updatedEntries_1_rs2_ready_T_4 = eq(wakeUpInt.prfAddr, tempQueue_1.rs2.prfAddr) @[scheduler.scala 104:106]
    node _updatedEntries_1_rs2_ready_T_5 = and(wakeUpInt.valid, _updatedEntries_1_rs2_ready_T_4) @[scheduler.scala 104:92]
    node _updatedEntries_1_rs2_ready_T_6 = or(_updatedEntries_1_rs2_ready_T_1, _updatedEntries_1_rs2_ready_T_3) @[scheduler.scala 104:142]
    node _updatedEntries_1_rs2_ready_T_7 = or(_updatedEntries_1_rs2_ready_T_6, _updatedEntries_1_rs2_ready_T_5) @[scheduler.scala 104:142]
    node _updatedEntries_1_rs2_ready_T_8 = or(tempQueue_1.rs2.ready, _updatedEntries_1_rs2_ready_T_7) @[scheduler.scala 104:65]
    node _updatedEntries_1_rs2_ready_T_9 = and(tempQueue_1.valid, _updatedEntries_1_rs2_ready_T_8) @[scheduler.scala 104:42]
    updatedEntries_1.rs2.ready <= _updatedEntries_1_rs2_ready_T_9 @[scheduler.scala 104:24]
    node _updatedEntries_2_rs2_ready_T = eq(wakeUpExt[0].prfAddr, tempQueue_2.rs2.prfAddr) @[scheduler.scala 104:106]
    node _updatedEntries_2_rs2_ready_T_1 = and(wakeUpExt[0].valid, _updatedEntries_2_rs2_ready_T) @[scheduler.scala 104:92]
    node _updatedEntries_2_rs2_ready_T_2 = eq(wakeUpExt[1].prfAddr, tempQueue_2.rs2.prfAddr) @[scheduler.scala 104:106]
    node _updatedEntries_2_rs2_ready_T_3 = and(wakeUpExt[1].valid, _updatedEntries_2_rs2_ready_T_2) @[scheduler.scala 104:92]
    node _updatedEntries_2_rs2_ready_T_4 = eq(wakeUpInt.prfAddr, tempQueue_2.rs2.prfAddr) @[scheduler.scala 104:106]
    node _updatedEntries_2_rs2_ready_T_5 = and(wakeUpInt.valid, _updatedEntries_2_rs2_ready_T_4) @[scheduler.scala 104:92]
    node _updatedEntries_2_rs2_ready_T_6 = or(_updatedEntries_2_rs2_ready_T_1, _updatedEntries_2_rs2_ready_T_3) @[scheduler.scala 104:142]
    node _updatedEntries_2_rs2_ready_T_7 = or(_updatedEntries_2_rs2_ready_T_6, _updatedEntries_2_rs2_ready_T_5) @[scheduler.scala 104:142]
    node _updatedEntries_2_rs2_ready_T_8 = or(tempQueue_2.rs2.ready, _updatedEntries_2_rs2_ready_T_7) @[scheduler.scala 104:65]
    node _updatedEntries_2_rs2_ready_T_9 = and(tempQueue_2.valid, _updatedEntries_2_rs2_ready_T_8) @[scheduler.scala 104:42]
    updatedEntries_2.rs2.ready <= _updatedEntries_2_rs2_ready_T_9 @[scheduler.scala 104:24]
    node _updatedEntries_3_rs2_ready_T = eq(wakeUpExt[0].prfAddr, tempQueue_3.rs2.prfAddr) @[scheduler.scala 104:106]
    node _updatedEntries_3_rs2_ready_T_1 = and(wakeUpExt[0].valid, _updatedEntries_3_rs2_ready_T) @[scheduler.scala 104:92]
    node _updatedEntries_3_rs2_ready_T_2 = eq(wakeUpExt[1].prfAddr, tempQueue_3.rs2.prfAddr) @[scheduler.scala 104:106]
    node _updatedEntries_3_rs2_ready_T_3 = and(wakeUpExt[1].valid, _updatedEntries_3_rs2_ready_T_2) @[scheduler.scala 104:92]
    node _updatedEntries_3_rs2_ready_T_4 = eq(wakeUpInt.prfAddr, tempQueue_3.rs2.prfAddr) @[scheduler.scala 104:106]
    node _updatedEntries_3_rs2_ready_T_5 = and(wakeUpInt.valid, _updatedEntries_3_rs2_ready_T_4) @[scheduler.scala 104:92]
    node _updatedEntries_3_rs2_ready_T_6 = or(_updatedEntries_3_rs2_ready_T_1, _updatedEntries_3_rs2_ready_T_3) @[scheduler.scala 104:142]
    node _updatedEntries_3_rs2_ready_T_7 = or(_updatedEntries_3_rs2_ready_T_6, _updatedEntries_3_rs2_ready_T_5) @[scheduler.scala 104:142]
    node _updatedEntries_3_rs2_ready_T_8 = or(tempQueue_3.rs2.ready, _updatedEntries_3_rs2_ready_T_7) @[scheduler.scala 104:65]
    node _updatedEntries_3_rs2_ready_T_9 = and(tempQueue_3.valid, _updatedEntries_3_rs2_ready_T_8) @[scheduler.scala 104:42]
    updatedEntries_3.rs2.ready <= _updatedEntries_3_rs2_ready_T_9 @[scheduler.scala 104:24]
    node _updatedEntries_4_rs2_ready_T = eq(wakeUpExt[0].prfAddr, tempQueue_4.rs2.prfAddr) @[scheduler.scala 104:106]
    node _updatedEntries_4_rs2_ready_T_1 = and(wakeUpExt[0].valid, _updatedEntries_4_rs2_ready_T) @[scheduler.scala 104:92]
    node _updatedEntries_4_rs2_ready_T_2 = eq(wakeUpExt[1].prfAddr, tempQueue_4.rs2.prfAddr) @[scheduler.scala 104:106]
    node _updatedEntries_4_rs2_ready_T_3 = and(wakeUpExt[1].valid, _updatedEntries_4_rs2_ready_T_2) @[scheduler.scala 104:92]
    node _updatedEntries_4_rs2_ready_T_4 = eq(wakeUpInt.prfAddr, tempQueue_4.rs2.prfAddr) @[scheduler.scala 104:106]
    node _updatedEntries_4_rs2_ready_T_5 = and(wakeUpInt.valid, _updatedEntries_4_rs2_ready_T_4) @[scheduler.scala 104:92]
    node _updatedEntries_4_rs2_ready_T_6 = or(_updatedEntries_4_rs2_ready_T_1, _updatedEntries_4_rs2_ready_T_3) @[scheduler.scala 104:142]
    node _updatedEntries_4_rs2_ready_T_7 = or(_updatedEntries_4_rs2_ready_T_6, _updatedEntries_4_rs2_ready_T_5) @[scheduler.scala 104:142]
    node _updatedEntries_4_rs2_ready_T_8 = or(tempQueue_4.rs2.ready, _updatedEntries_4_rs2_ready_T_7) @[scheduler.scala 104:65]
    node _updatedEntries_4_rs2_ready_T_9 = and(tempQueue_4.valid, _updatedEntries_4_rs2_ready_T_8) @[scheduler.scala 104:42]
    updatedEntries_4.rs2.ready <= _updatedEntries_4_rs2_ready_T_9 @[scheduler.scala 104:24]
    node _updatedEntries_5_rs2_ready_T = eq(wakeUpExt[0].prfAddr, tempQueue_5.rs2.prfAddr) @[scheduler.scala 104:106]
    node _updatedEntries_5_rs2_ready_T_1 = and(wakeUpExt[0].valid, _updatedEntries_5_rs2_ready_T) @[scheduler.scala 104:92]
    node _updatedEntries_5_rs2_ready_T_2 = eq(wakeUpExt[1].prfAddr, tempQueue_5.rs2.prfAddr) @[scheduler.scala 104:106]
    node _updatedEntries_5_rs2_ready_T_3 = and(wakeUpExt[1].valid, _updatedEntries_5_rs2_ready_T_2) @[scheduler.scala 104:92]
    node _updatedEntries_5_rs2_ready_T_4 = eq(wakeUpInt.prfAddr, tempQueue_5.rs2.prfAddr) @[scheduler.scala 104:106]
    node _updatedEntries_5_rs2_ready_T_5 = and(wakeUpInt.valid, _updatedEntries_5_rs2_ready_T_4) @[scheduler.scala 104:92]
    node _updatedEntries_5_rs2_ready_T_6 = or(_updatedEntries_5_rs2_ready_T_1, _updatedEntries_5_rs2_ready_T_3) @[scheduler.scala 104:142]
    node _updatedEntries_5_rs2_ready_T_7 = or(_updatedEntries_5_rs2_ready_T_6, _updatedEntries_5_rs2_ready_T_5) @[scheduler.scala 104:142]
    node _updatedEntries_5_rs2_ready_T_8 = or(tempQueue_5.rs2.ready, _updatedEntries_5_rs2_ready_T_7) @[scheduler.scala 104:65]
    node _updatedEntries_5_rs2_ready_T_9 = and(tempQueue_5.valid, _updatedEntries_5_rs2_ready_T_8) @[scheduler.scala 104:42]
    updatedEntries_5.rs2.ready <= _updatedEntries_5_rs2_ready_T_9 @[scheduler.scala 104:24]
    node _updatedEntries_6_rs2_ready_T = eq(wakeUpExt[0].prfAddr, tempQueue_6.rs2.prfAddr) @[scheduler.scala 104:106]
    node _updatedEntries_6_rs2_ready_T_1 = and(wakeUpExt[0].valid, _updatedEntries_6_rs2_ready_T) @[scheduler.scala 104:92]
    node _updatedEntries_6_rs2_ready_T_2 = eq(wakeUpExt[1].prfAddr, tempQueue_6.rs2.prfAddr) @[scheduler.scala 104:106]
    node _updatedEntries_6_rs2_ready_T_3 = and(wakeUpExt[1].valid, _updatedEntries_6_rs2_ready_T_2) @[scheduler.scala 104:92]
    node _updatedEntries_6_rs2_ready_T_4 = eq(wakeUpInt.prfAddr, tempQueue_6.rs2.prfAddr) @[scheduler.scala 104:106]
    node _updatedEntries_6_rs2_ready_T_5 = and(wakeUpInt.valid, _updatedEntries_6_rs2_ready_T_4) @[scheduler.scala 104:92]
    node _updatedEntries_6_rs2_ready_T_6 = or(_updatedEntries_6_rs2_ready_T_1, _updatedEntries_6_rs2_ready_T_3) @[scheduler.scala 104:142]
    node _updatedEntries_6_rs2_ready_T_7 = or(_updatedEntries_6_rs2_ready_T_6, _updatedEntries_6_rs2_ready_T_5) @[scheduler.scala 104:142]
    node _updatedEntries_6_rs2_ready_T_8 = or(tempQueue_6.rs2.ready, _updatedEntries_6_rs2_ready_T_7) @[scheduler.scala 104:65]
    node _updatedEntries_6_rs2_ready_T_9 = and(tempQueue_6.valid, _updatedEntries_6_rs2_ready_T_8) @[scheduler.scala 104:42]
    updatedEntries_6.rs2.ready <= _updatedEntries_6_rs2_ready_T_9 @[scheduler.scala 104:24]
    node _updatedEntries_7_rs2_ready_T = eq(wakeUpExt[0].prfAddr, tempQueue_7.rs2.prfAddr) @[scheduler.scala 104:106]
    node _updatedEntries_7_rs2_ready_T_1 = and(wakeUpExt[0].valid, _updatedEntries_7_rs2_ready_T) @[scheduler.scala 104:92]
    node _updatedEntries_7_rs2_ready_T_2 = eq(wakeUpExt[1].prfAddr, tempQueue_7.rs2.prfAddr) @[scheduler.scala 104:106]
    node _updatedEntries_7_rs2_ready_T_3 = and(wakeUpExt[1].valid, _updatedEntries_7_rs2_ready_T_2) @[scheduler.scala 104:92]
    node _updatedEntries_7_rs2_ready_T_4 = eq(wakeUpInt.prfAddr, tempQueue_7.rs2.prfAddr) @[scheduler.scala 104:106]
    node _updatedEntries_7_rs2_ready_T_5 = and(wakeUpInt.valid, _updatedEntries_7_rs2_ready_T_4) @[scheduler.scala 104:92]
    node _updatedEntries_7_rs2_ready_T_6 = or(_updatedEntries_7_rs2_ready_T_1, _updatedEntries_7_rs2_ready_T_3) @[scheduler.scala 104:142]
    node _updatedEntries_7_rs2_ready_T_7 = or(_updatedEntries_7_rs2_ready_T_6, _updatedEntries_7_rs2_ready_T_5) @[scheduler.scala 104:142]
    node _updatedEntries_7_rs2_ready_T_8 = or(tempQueue_7.rs2.ready, _updatedEntries_7_rs2_ready_T_7) @[scheduler.scala 104:65]
    node _updatedEntries_7_rs2_ready_T_9 = and(tempQueue_7.valid, _updatedEntries_7_rs2_ready_T_8) @[scheduler.scala 104:42]
    updatedEntries_7.rs2.ready <= _updatedEntries_7_rs2_ready_T_9 @[scheduler.scala 104:24]
    node _updatedEntries_8_rs2_ready_T = eq(wakeUpExt[0].prfAddr, tempQueue_8.rs2.prfAddr) @[scheduler.scala 104:106]
    node _updatedEntries_8_rs2_ready_T_1 = and(wakeUpExt[0].valid, _updatedEntries_8_rs2_ready_T) @[scheduler.scala 104:92]
    node _updatedEntries_8_rs2_ready_T_2 = eq(wakeUpExt[1].prfAddr, tempQueue_8.rs2.prfAddr) @[scheduler.scala 104:106]
    node _updatedEntries_8_rs2_ready_T_3 = and(wakeUpExt[1].valid, _updatedEntries_8_rs2_ready_T_2) @[scheduler.scala 104:92]
    node _updatedEntries_8_rs2_ready_T_4 = eq(wakeUpInt.prfAddr, tempQueue_8.rs2.prfAddr) @[scheduler.scala 104:106]
    node _updatedEntries_8_rs2_ready_T_5 = and(wakeUpInt.valid, _updatedEntries_8_rs2_ready_T_4) @[scheduler.scala 104:92]
    node _updatedEntries_8_rs2_ready_T_6 = or(_updatedEntries_8_rs2_ready_T_1, _updatedEntries_8_rs2_ready_T_3) @[scheduler.scala 104:142]
    node _updatedEntries_8_rs2_ready_T_7 = or(_updatedEntries_8_rs2_ready_T_6, _updatedEntries_8_rs2_ready_T_5) @[scheduler.scala 104:142]
    node _updatedEntries_8_rs2_ready_T_8 = or(tempQueue_8.rs2.ready, _updatedEntries_8_rs2_ready_T_7) @[scheduler.scala 104:65]
    node _updatedEntries_8_rs2_ready_T_9 = and(tempQueue_8.valid, _updatedEntries_8_rs2_ready_T_8) @[scheduler.scala 104:42]
    updatedEntries_8.rs2.ready <= _updatedEntries_8_rs2_ready_T_9 @[scheduler.scala 104:24]
    when branchOps.valid : @[scheduler.scala 108:27]
      node _T_1 = and(tempQueue_0.branchMask, branchOps.branchMask) @[scheduler.scala 109:53]
      node _T_2 = orr(_T_1) @[scheduler.scala 109:77]
      node _T_3 = and(branchOps.passed, _T_2) @[scheduler.scala 109:29]
      when _T_3 : @[scheduler.scala 109:82]
        node _updatedEntries_0_branchMask_T = xor(tempQueue_0.branchMask, branchOps.branchMask) @[scheduler.scala 109:127]
        updatedEntries_0.branchMask <= _updatedEntries_0_branchMask_T @[scheduler.scala 109:104]
      else :
        node _updatedEntries_0_valid_T = and(tempQueue_0.branchMask, branchOps.branchMask) @[scheduler.scala 110:78]
        node _updatedEntries_0_valid_T_1 = orr(_updatedEntries_0_valid_T) @[scheduler.scala 110:102]
        node _updatedEntries_0_valid_T_2 = eq(_updatedEntries_0_valid_T_1, UInt<1>("h0")) @[scheduler.scala 110:56]
        node _updatedEntries_0_valid_T_3 = and(tempQueue_0.valid, _updatedEntries_0_valid_T_2) @[scheduler.scala 110:53]
        updatedEntries_0.valid <= _updatedEntries_0_valid_T_3 @[scheduler.scala 110:35]
    when branchOps.valid : @[scheduler.scala 108:27]
      node _T_4 = and(tempQueue_1.branchMask, branchOps.branchMask) @[scheduler.scala 109:53]
      node _T_5 = orr(_T_4) @[scheduler.scala 109:77]
      node _T_6 = and(branchOps.passed, _T_5) @[scheduler.scala 109:29]
      when _T_6 : @[scheduler.scala 109:82]
        node _updatedEntries_1_branchMask_T = xor(tempQueue_1.branchMask, branchOps.branchMask) @[scheduler.scala 109:127]
        updatedEntries_1.branchMask <= _updatedEntries_1_branchMask_T @[scheduler.scala 109:104]
      else :
        node _updatedEntries_1_valid_T = and(tempQueue_1.branchMask, branchOps.branchMask) @[scheduler.scala 110:78]
        node _updatedEntries_1_valid_T_1 = orr(_updatedEntries_1_valid_T) @[scheduler.scala 110:102]
        node _updatedEntries_1_valid_T_2 = eq(_updatedEntries_1_valid_T_1, UInt<1>("h0")) @[scheduler.scala 110:56]
        node _updatedEntries_1_valid_T_3 = and(tempQueue_1.valid, _updatedEntries_1_valid_T_2) @[scheduler.scala 110:53]
        updatedEntries_1.valid <= _updatedEntries_1_valid_T_3 @[scheduler.scala 110:35]
    when branchOps.valid : @[scheduler.scala 108:27]
      node _T_7 = and(tempQueue_2.branchMask, branchOps.branchMask) @[scheduler.scala 109:53]
      node _T_8 = orr(_T_7) @[scheduler.scala 109:77]
      node _T_9 = and(branchOps.passed, _T_8) @[scheduler.scala 109:29]
      when _T_9 : @[scheduler.scala 109:82]
        node _updatedEntries_2_branchMask_T = xor(tempQueue_2.branchMask, branchOps.branchMask) @[scheduler.scala 109:127]
        updatedEntries_2.branchMask <= _updatedEntries_2_branchMask_T @[scheduler.scala 109:104]
      else :
        node _updatedEntries_2_valid_T = and(tempQueue_2.branchMask, branchOps.branchMask) @[scheduler.scala 110:78]
        node _updatedEntries_2_valid_T_1 = orr(_updatedEntries_2_valid_T) @[scheduler.scala 110:102]
        node _updatedEntries_2_valid_T_2 = eq(_updatedEntries_2_valid_T_1, UInt<1>("h0")) @[scheduler.scala 110:56]
        node _updatedEntries_2_valid_T_3 = and(tempQueue_2.valid, _updatedEntries_2_valid_T_2) @[scheduler.scala 110:53]
        updatedEntries_2.valid <= _updatedEntries_2_valid_T_3 @[scheduler.scala 110:35]
    when branchOps.valid : @[scheduler.scala 108:27]
      node _T_10 = and(tempQueue_3.branchMask, branchOps.branchMask) @[scheduler.scala 109:53]
      node _T_11 = orr(_T_10) @[scheduler.scala 109:77]
      node _T_12 = and(branchOps.passed, _T_11) @[scheduler.scala 109:29]
      when _T_12 : @[scheduler.scala 109:82]
        node _updatedEntries_3_branchMask_T = xor(tempQueue_3.branchMask, branchOps.branchMask) @[scheduler.scala 109:127]
        updatedEntries_3.branchMask <= _updatedEntries_3_branchMask_T @[scheduler.scala 109:104]
      else :
        node _updatedEntries_3_valid_T = and(tempQueue_3.branchMask, branchOps.branchMask) @[scheduler.scala 110:78]
        node _updatedEntries_3_valid_T_1 = orr(_updatedEntries_3_valid_T) @[scheduler.scala 110:102]
        node _updatedEntries_3_valid_T_2 = eq(_updatedEntries_3_valid_T_1, UInt<1>("h0")) @[scheduler.scala 110:56]
        node _updatedEntries_3_valid_T_3 = and(tempQueue_3.valid, _updatedEntries_3_valid_T_2) @[scheduler.scala 110:53]
        updatedEntries_3.valid <= _updatedEntries_3_valid_T_3 @[scheduler.scala 110:35]
    when branchOps.valid : @[scheduler.scala 108:27]
      node _T_13 = and(tempQueue_4.branchMask, branchOps.branchMask) @[scheduler.scala 109:53]
      node _T_14 = orr(_T_13) @[scheduler.scala 109:77]
      node _T_15 = and(branchOps.passed, _T_14) @[scheduler.scala 109:29]
      when _T_15 : @[scheduler.scala 109:82]
        node _updatedEntries_4_branchMask_T = xor(tempQueue_4.branchMask, branchOps.branchMask) @[scheduler.scala 109:127]
        updatedEntries_4.branchMask <= _updatedEntries_4_branchMask_T @[scheduler.scala 109:104]
      else :
        node _updatedEntries_4_valid_T = and(tempQueue_4.branchMask, branchOps.branchMask) @[scheduler.scala 110:78]
        node _updatedEntries_4_valid_T_1 = orr(_updatedEntries_4_valid_T) @[scheduler.scala 110:102]
        node _updatedEntries_4_valid_T_2 = eq(_updatedEntries_4_valid_T_1, UInt<1>("h0")) @[scheduler.scala 110:56]
        node _updatedEntries_4_valid_T_3 = and(tempQueue_4.valid, _updatedEntries_4_valid_T_2) @[scheduler.scala 110:53]
        updatedEntries_4.valid <= _updatedEntries_4_valid_T_3 @[scheduler.scala 110:35]
    when branchOps.valid : @[scheduler.scala 108:27]
      node _T_16 = and(tempQueue_5.branchMask, branchOps.branchMask) @[scheduler.scala 109:53]
      node _T_17 = orr(_T_16) @[scheduler.scala 109:77]
      node _T_18 = and(branchOps.passed, _T_17) @[scheduler.scala 109:29]
      when _T_18 : @[scheduler.scala 109:82]
        node _updatedEntries_5_branchMask_T = xor(tempQueue_5.branchMask, branchOps.branchMask) @[scheduler.scala 109:127]
        updatedEntries_5.branchMask <= _updatedEntries_5_branchMask_T @[scheduler.scala 109:104]
      else :
        node _updatedEntries_5_valid_T = and(tempQueue_5.branchMask, branchOps.branchMask) @[scheduler.scala 110:78]
        node _updatedEntries_5_valid_T_1 = orr(_updatedEntries_5_valid_T) @[scheduler.scala 110:102]
        node _updatedEntries_5_valid_T_2 = eq(_updatedEntries_5_valid_T_1, UInt<1>("h0")) @[scheduler.scala 110:56]
        node _updatedEntries_5_valid_T_3 = and(tempQueue_5.valid, _updatedEntries_5_valid_T_2) @[scheduler.scala 110:53]
        updatedEntries_5.valid <= _updatedEntries_5_valid_T_3 @[scheduler.scala 110:35]
    when branchOps.valid : @[scheduler.scala 108:27]
      node _T_19 = and(tempQueue_6.branchMask, branchOps.branchMask) @[scheduler.scala 109:53]
      node _T_20 = orr(_T_19) @[scheduler.scala 109:77]
      node _T_21 = and(branchOps.passed, _T_20) @[scheduler.scala 109:29]
      when _T_21 : @[scheduler.scala 109:82]
        node _updatedEntries_6_branchMask_T = xor(tempQueue_6.branchMask, branchOps.branchMask) @[scheduler.scala 109:127]
        updatedEntries_6.branchMask <= _updatedEntries_6_branchMask_T @[scheduler.scala 109:104]
      else :
        node _updatedEntries_6_valid_T = and(tempQueue_6.branchMask, branchOps.branchMask) @[scheduler.scala 110:78]
        node _updatedEntries_6_valid_T_1 = orr(_updatedEntries_6_valid_T) @[scheduler.scala 110:102]
        node _updatedEntries_6_valid_T_2 = eq(_updatedEntries_6_valid_T_1, UInt<1>("h0")) @[scheduler.scala 110:56]
        node _updatedEntries_6_valid_T_3 = and(tempQueue_6.valid, _updatedEntries_6_valid_T_2) @[scheduler.scala 110:53]
        updatedEntries_6.valid <= _updatedEntries_6_valid_T_3 @[scheduler.scala 110:35]
    when branchOps.valid : @[scheduler.scala 108:27]
      node _T_22 = and(tempQueue_7.branchMask, branchOps.branchMask) @[scheduler.scala 109:53]
      node _T_23 = orr(_T_22) @[scheduler.scala 109:77]
      node _T_24 = and(branchOps.passed, _T_23) @[scheduler.scala 109:29]
      when _T_24 : @[scheduler.scala 109:82]
        node _updatedEntries_7_branchMask_T = xor(tempQueue_7.branchMask, branchOps.branchMask) @[scheduler.scala 109:127]
        updatedEntries_7.branchMask <= _updatedEntries_7_branchMask_T @[scheduler.scala 109:104]
      else :
        node _updatedEntries_7_valid_T = and(tempQueue_7.branchMask, branchOps.branchMask) @[scheduler.scala 110:78]
        node _updatedEntries_7_valid_T_1 = orr(_updatedEntries_7_valid_T) @[scheduler.scala 110:102]
        node _updatedEntries_7_valid_T_2 = eq(_updatedEntries_7_valid_T_1, UInt<1>("h0")) @[scheduler.scala 110:56]
        node _updatedEntries_7_valid_T_3 = and(tempQueue_7.valid, _updatedEntries_7_valid_T_2) @[scheduler.scala 110:53]
        updatedEntries_7.valid <= _updatedEntries_7_valid_T_3 @[scheduler.scala 110:35]
    when branchOps.valid : @[scheduler.scala 108:27]
      node _T_25 = and(tempQueue_8.branchMask, branchOps.branchMask) @[scheduler.scala 109:53]
      node _T_26 = orr(_T_25) @[scheduler.scala 109:77]
      node _T_27 = and(branchOps.passed, _T_26) @[scheduler.scala 109:29]
      when _T_27 : @[scheduler.scala 109:82]
        node _updatedEntries_8_branchMask_T = xor(tempQueue_8.branchMask, branchOps.branchMask) @[scheduler.scala 109:127]
        updatedEntries_8.branchMask <= _updatedEntries_8_branchMask_T @[scheduler.scala 109:104]
      else :
        node _updatedEntries_8_valid_T = and(tempQueue_8.branchMask, branchOps.branchMask) @[scheduler.scala 110:78]
        node _updatedEntries_8_valid_T_1 = orr(_updatedEntries_8_valid_T) @[scheduler.scala 110:102]
        node _updatedEntries_8_valid_T_2 = eq(_updatedEntries_8_valid_T_1, UInt<1>("h0")) @[scheduler.scala 110:56]
        node _updatedEntries_8_valid_T_3 = and(tempQueue_8.valid, _updatedEntries_8_valid_T_2) @[scheduler.scala 110:53]
        updatedEntries_8.valid <= _updatedEntries_8_valid_T_3 @[scheduler.scala 110:35]
    node _T_28 = orr(readyVector) @[scheduler.scala 114:31]
    node _T_29 = and(dequeue, _T_28) @[scheduler.scala 114:16]
    when _T_29 : @[scheduler.scala 114:36]
      node _T_30 = eq(UInt<1>("h0"), dequeuedIndex) @[scheduler.scala 114:87]
      when _T_30 : @[scheduler.scala 114:106]
        updatedEntries_0.valid <= UInt<1>("h0") @[scheduler.scala 114:132]
      node _T_31 = eq(UInt<1>("h1"), dequeuedIndex) @[scheduler.scala 114:87]
      when _T_31 : @[scheduler.scala 114:106]
        updatedEntries_1.valid <= UInt<1>("h0") @[scheduler.scala 114:132]
      node _T_32 = eq(UInt<2>("h2"), dequeuedIndex) @[scheduler.scala 114:87]
      when _T_32 : @[scheduler.scala 114:106]
        updatedEntries_2.valid <= UInt<1>("h0") @[scheduler.scala 114:132]
      node _T_33 = eq(UInt<2>("h3"), dequeuedIndex) @[scheduler.scala 114:87]
      when _T_33 : @[scheduler.scala 114:106]
        updatedEntries_3.valid <= UInt<1>("h0") @[scheduler.scala 114:132]
      node _T_34 = eq(UInt<3>("h4"), dequeuedIndex) @[scheduler.scala 114:87]
      when _T_34 : @[scheduler.scala 114:106]
        updatedEntries_4.valid <= UInt<1>("h0") @[scheduler.scala 114:132]
      node _T_35 = eq(UInt<3>("h5"), dequeuedIndex) @[scheduler.scala 114:87]
      when _T_35 : @[scheduler.scala 114:106]
        updatedEntries_5.valid <= UInt<1>("h0") @[scheduler.scala 114:132]
      node _T_36 = eq(UInt<3>("h6"), dequeuedIndex) @[scheduler.scala 114:87]
      when _T_36 : @[scheduler.scala 114:106]
        updatedEntries_6.valid <= UInt<1>("h0") @[scheduler.scala 114:132]
      node _T_37 = eq(UInt<3>("h7"), dequeuedIndex) @[scheduler.scala 114:87]
      when _T_37 : @[scheduler.scala 114:106]
        updatedEntries_7.valid <= UInt<1>("h0") @[scheduler.scala 114:132]
    node _newQueue_T = eq(queue[0].valid, UInt<1>("h0")) @[scheduler.scala 116:61]
    node _newQueue_T_1 = bits(readyVector, 0, 0) @[scheduler.scala 116:142]
    node _newQueue_T_2 = orr(_newQueue_T_1) @[scheduler.scala 116:148]
    node _newQueue_T_3 = and(dequeue, _newQueue_T_2) @[scheduler.scala 116:128]
    node _newQueue_T_4 = or(_newQueue_T, _newQueue_T_3) @[scheduler.scala 116:116]
    node _newQueue_T_5 = mux(_newQueue_T_4, updatedEntries_1, updatedEntries_0) @[scheduler.scala 116:60]
    node _newQueue_T_6 = and(queue[0].valid, queue[1].valid) @[scheduler.scala 116:110]
    node _newQueue_T_7 = eq(_newQueue_T_6, UInt<1>("h0")) @[scheduler.scala 116:61]
    node _newQueue_T_8 = bits(readyVector, 1, 0) @[scheduler.scala 116:142]
    node _newQueue_T_9 = orr(_newQueue_T_8) @[scheduler.scala 116:148]
    node _newQueue_T_10 = and(dequeue, _newQueue_T_9) @[scheduler.scala 116:128]
    node _newQueue_T_11 = or(_newQueue_T_7, _newQueue_T_10) @[scheduler.scala 116:116]
    node _newQueue_T_12 = mux(_newQueue_T_11, updatedEntries_2, updatedEntries_1) @[scheduler.scala 116:60]
    node _newQueue_T_13 = and(queue[0].valid, queue[1].valid) @[scheduler.scala 116:110]
    node _newQueue_T_14 = and(_newQueue_T_13, queue[2].valid) @[scheduler.scala 116:110]
    node _newQueue_T_15 = eq(_newQueue_T_14, UInt<1>("h0")) @[scheduler.scala 116:61]
    node _newQueue_T_16 = bits(readyVector, 2, 0) @[scheduler.scala 116:142]
    node _newQueue_T_17 = orr(_newQueue_T_16) @[scheduler.scala 116:148]
    node _newQueue_T_18 = and(dequeue, _newQueue_T_17) @[scheduler.scala 116:128]
    node _newQueue_T_19 = or(_newQueue_T_15, _newQueue_T_18) @[scheduler.scala 116:116]
    node _newQueue_T_20 = mux(_newQueue_T_19, updatedEntries_3, updatedEntries_2) @[scheduler.scala 116:60]
    node _newQueue_T_21 = and(queue[0].valid, queue[1].valid) @[scheduler.scala 116:110]
    node _newQueue_T_22 = and(_newQueue_T_21, queue[2].valid) @[scheduler.scala 116:110]
    node _newQueue_T_23 = and(_newQueue_T_22, queue[3].valid) @[scheduler.scala 116:110]
    node _newQueue_T_24 = eq(_newQueue_T_23, UInt<1>("h0")) @[scheduler.scala 116:61]
    node _newQueue_T_25 = bits(readyVector, 3, 0) @[scheduler.scala 116:142]
    node _newQueue_T_26 = orr(_newQueue_T_25) @[scheduler.scala 116:148]
    node _newQueue_T_27 = and(dequeue, _newQueue_T_26) @[scheduler.scala 116:128]
    node _newQueue_T_28 = or(_newQueue_T_24, _newQueue_T_27) @[scheduler.scala 116:116]
    node _newQueue_T_29 = mux(_newQueue_T_28, updatedEntries_4, updatedEntries_3) @[scheduler.scala 116:60]
    node _newQueue_T_30 = and(queue[0].valid, queue[1].valid) @[scheduler.scala 116:110]
    node _newQueue_T_31 = and(_newQueue_T_30, queue[2].valid) @[scheduler.scala 116:110]
    node _newQueue_T_32 = and(_newQueue_T_31, queue[3].valid) @[scheduler.scala 116:110]
    node _newQueue_T_33 = and(_newQueue_T_32, queue[4].valid) @[scheduler.scala 116:110]
    node _newQueue_T_34 = eq(_newQueue_T_33, UInt<1>("h0")) @[scheduler.scala 116:61]
    node _newQueue_T_35 = bits(readyVector, 4, 0) @[scheduler.scala 116:142]
    node _newQueue_T_36 = orr(_newQueue_T_35) @[scheduler.scala 116:148]
    node _newQueue_T_37 = and(dequeue, _newQueue_T_36) @[scheduler.scala 116:128]
    node _newQueue_T_38 = or(_newQueue_T_34, _newQueue_T_37) @[scheduler.scala 116:116]
    node _newQueue_T_39 = mux(_newQueue_T_38, updatedEntries_5, updatedEntries_4) @[scheduler.scala 116:60]
    node _newQueue_T_40 = and(queue[0].valid, queue[1].valid) @[scheduler.scala 116:110]
    node _newQueue_T_41 = and(_newQueue_T_40, queue[2].valid) @[scheduler.scala 116:110]
    node _newQueue_T_42 = and(_newQueue_T_41, queue[3].valid) @[scheduler.scala 116:110]
    node _newQueue_T_43 = and(_newQueue_T_42, queue[4].valid) @[scheduler.scala 116:110]
    node _newQueue_T_44 = and(_newQueue_T_43, queue[5].valid) @[scheduler.scala 116:110]
    node _newQueue_T_45 = eq(_newQueue_T_44, UInt<1>("h0")) @[scheduler.scala 116:61]
    node _newQueue_T_46 = bits(readyVector, 5, 0) @[scheduler.scala 116:142]
    node _newQueue_T_47 = orr(_newQueue_T_46) @[scheduler.scala 116:148]
    node _newQueue_T_48 = and(dequeue, _newQueue_T_47) @[scheduler.scala 116:128]
    node _newQueue_T_49 = or(_newQueue_T_45, _newQueue_T_48) @[scheduler.scala 116:116]
    node _newQueue_T_50 = mux(_newQueue_T_49, updatedEntries_6, updatedEntries_5) @[scheduler.scala 116:60]
    node _newQueue_T_51 = and(queue[0].valid, queue[1].valid) @[scheduler.scala 116:110]
    node _newQueue_T_52 = and(_newQueue_T_51, queue[2].valid) @[scheduler.scala 116:110]
    node _newQueue_T_53 = and(_newQueue_T_52, queue[3].valid) @[scheduler.scala 116:110]
    node _newQueue_T_54 = and(_newQueue_T_53, queue[4].valid) @[scheduler.scala 116:110]
    node _newQueue_T_55 = and(_newQueue_T_54, queue[5].valid) @[scheduler.scala 116:110]
    node _newQueue_T_56 = and(_newQueue_T_55, queue[6].valid) @[scheduler.scala 116:110]
    node _newQueue_T_57 = eq(_newQueue_T_56, UInt<1>("h0")) @[scheduler.scala 116:61]
    node _newQueue_T_58 = bits(readyVector, 6, 0) @[scheduler.scala 116:142]
    node _newQueue_T_59 = orr(_newQueue_T_58) @[scheduler.scala 116:148]
    node _newQueue_T_60 = and(dequeue, _newQueue_T_59) @[scheduler.scala 116:128]
    node _newQueue_T_61 = or(_newQueue_T_57, _newQueue_T_60) @[scheduler.scala 116:116]
    node _newQueue_T_62 = mux(_newQueue_T_61, updatedEntries_7, updatedEntries_6) @[scheduler.scala 116:60]
    node _newQueue_T_63 = and(queue[0].valid, queue[1].valid) @[scheduler.scala 116:110]
    node _newQueue_T_64 = and(_newQueue_T_63, queue[2].valid) @[scheduler.scala 116:110]
    node _newQueue_T_65 = and(_newQueue_T_64, queue[3].valid) @[scheduler.scala 116:110]
    node _newQueue_T_66 = and(_newQueue_T_65, queue[4].valid) @[scheduler.scala 116:110]
    node _newQueue_T_67 = and(_newQueue_T_66, queue[5].valid) @[scheduler.scala 116:110]
    node _newQueue_T_68 = and(_newQueue_T_67, queue[6].valid) @[scheduler.scala 116:110]
    node _newQueue_T_69 = and(_newQueue_T_68, queue[7].valid) @[scheduler.scala 116:110]
    node _newQueue_T_70 = eq(_newQueue_T_69, UInt<1>("h0")) @[scheduler.scala 116:61]
    node _newQueue_T_71 = bits(readyVector, 7, 0) @[scheduler.scala 116:142]
    node _newQueue_T_72 = orr(_newQueue_T_71) @[scheduler.scala 116:148]
    node _newQueue_T_73 = and(dequeue, _newQueue_T_72) @[scheduler.scala 116:128]
    node _newQueue_T_74 = or(_newQueue_T_70, _newQueue_T_73) @[scheduler.scala 116:116]
    node _newQueue_T_75 = mux(_newQueue_T_74, updatedEntries_8, updatedEntries_7) @[scheduler.scala 116:60]
    wire newQueue : { opcodeMeta : { isBranch : UInt<1>, isMemAccess : UInt<1>, isM : UInt<1>}, valid : UInt<1>, instruction : UInt<32>, branchMask : UInt<5>, rs1 : { ready : UInt<1>, prfAddr : UInt<6>}, rs2 : { ready : UInt<1>, prfAddr : UInt<6>}, prfDest : UInt<6>, robAddr : UInt<4>}[8] @[scheduler.scala 116:51]
    newQueue[0] <= _newQueue_T_5 @[scheduler.scala 116:51]
    newQueue[1] <= _newQueue_T_12 @[scheduler.scala 116:51]
    newQueue[2] <= _newQueue_T_20 @[scheduler.scala 116:51]
    newQueue[3] <= _newQueue_T_29 @[scheduler.scala 116:51]
    newQueue[4] <= _newQueue_T_39 @[scheduler.scala 116:51]
    newQueue[5] <= _newQueue_T_50 @[scheduler.scala 116:51]
    newQueue[6] <= _newQueue_T_62 @[scheduler.scala 116:51]
    newQueue[7] <= _newQueue_T_75 @[scheduler.scala 116:51]
    node _oldestMemMask_T = and(newQueue[0].valid, newQueue[0].opcodeMeta.isMemAccess) @[scheduler.scala 117:66]
    node _oldestMemMask_T_1 = mux(_oldestMemMask_T, newQueue[0].rs2.prfAddr, UInt<1>("h0")) @[scheduler.scala 117:57]
    node _oldestMemMask_T_2 = and(newQueue[1].valid, newQueue[1].opcodeMeta.isMemAccess) @[scheduler.scala 117:66]
    node _oldestMemMask_T_3 = mux(_oldestMemMask_T_2, newQueue[1].rs2.prfAddr, UInt<1>("h0")) @[scheduler.scala 117:57]
    node _oldestMemMask_T_4 = and(newQueue[2].valid, newQueue[2].opcodeMeta.isMemAccess) @[scheduler.scala 117:66]
    node _oldestMemMask_T_5 = mux(_oldestMemMask_T_4, newQueue[2].rs2.prfAddr, UInt<1>("h0")) @[scheduler.scala 117:57]
    node _oldestMemMask_T_6 = and(newQueue[3].valid, newQueue[3].opcodeMeta.isMemAccess) @[scheduler.scala 117:66]
    node _oldestMemMask_T_7 = mux(_oldestMemMask_T_6, newQueue[3].rs2.prfAddr, UInt<1>("h0")) @[scheduler.scala 117:57]
    node _oldestMemMask_T_8 = and(newQueue[4].valid, newQueue[4].opcodeMeta.isMemAccess) @[scheduler.scala 117:66]
    node _oldestMemMask_T_9 = mux(_oldestMemMask_T_8, newQueue[4].rs2.prfAddr, UInt<1>("h0")) @[scheduler.scala 117:57]
    node _oldestMemMask_T_10 = and(newQueue[5].valid, newQueue[5].opcodeMeta.isMemAccess) @[scheduler.scala 117:66]
    node _oldestMemMask_T_11 = mux(_oldestMemMask_T_10, newQueue[5].rs2.prfAddr, UInt<1>("h0")) @[scheduler.scala 117:57]
    node _oldestMemMask_T_12 = and(newQueue[6].valid, newQueue[6].opcodeMeta.isMemAccess) @[scheduler.scala 117:66]
    node _oldestMemMask_T_13 = mux(_oldestMemMask_T_12, newQueue[6].rs2.prfAddr, UInt<1>("h0")) @[scheduler.scala 117:57]
    node _oldestMemMask_T_14 = or(_oldestMemMask_T_1, _oldestMemMask_T_3) @[scheduler.scala 117:125]
    node _oldestMemMask_T_15 = or(_oldestMemMask_T_14, _oldestMemMask_T_5) @[scheduler.scala 117:125]
    node _oldestMemMask_T_16 = or(_oldestMemMask_T_15, _oldestMemMask_T_7) @[scheduler.scala 117:125]
    node _oldestMemMask_T_17 = or(_oldestMemMask_T_16, _oldestMemMask_T_9) @[scheduler.scala 117:125]
    node _oldestMemMask_T_18 = or(_oldestMemMask_T_17, _oldestMemMask_T_11) @[scheduler.scala 117:125]
    node oldestMemMask = or(_oldestMemMask_T_18, _oldestMemMask_T_13) @[scheduler.scala 117:125]
    node _newMask_T = bits(oldestMemMask, 0, 0) @[scheduler.scala 118:93]
    node _newMask_T_1 = bits(_newMask_T, 0, 0) @[scheduler.scala 118:97]
    node _newMask_T_2 = eq(_newMask_T_1, UInt<1>("h0")) @[scheduler.scala 118:79]
    node _newMask_T_3 = bits(oldestMemMask, 1, 1) @[scheduler.scala 118:93]
    node _newMask_T_4 = bits(_newMask_T_3, 0, 0) @[scheduler.scala 118:97]
    node _newMask_T_5 = eq(_newMask_T_4, UInt<1>("h0")) @[scheduler.scala 118:79]
    node _newMask_T_6 = bits(oldestMemMask, 2, 2) @[scheduler.scala 118:93]
    node _newMask_T_7 = bits(_newMask_T_6, 0, 0) @[scheduler.scala 118:97]
    node _newMask_T_8 = eq(_newMask_T_7, UInt<1>("h0")) @[scheduler.scala 118:79]
    node _newMask_T_9 = bits(oldestMemMask, 3, 3) @[scheduler.scala 118:93]
    node _newMask_T_10 = bits(_newMask_T_9, 0, 0) @[scheduler.scala 118:97]
    node _newMask_T_11 = eq(_newMask_T_10, UInt<1>("h0")) @[scheduler.scala 118:79]
    node _newMask_T_12 = bits(oldestMemMask, 4, 4) @[scheduler.scala 118:93]
    node _newMask_T_13 = bits(_newMask_T_12, 0, 0) @[scheduler.scala 118:97]
    node _newMask_T_14 = eq(_newMask_T_13, UInt<1>("h0")) @[scheduler.scala 118:79]
    node _newMask_T_15 = bits(oldestMemMask, 5, 5) @[scheduler.scala 118:93]
    node _newMask_T_16 = bits(_newMask_T_15, 0, 0) @[scheduler.scala 118:97]
    node _newMask_T_17 = eq(_newMask_T_16, UInt<1>("h0")) @[scheduler.scala 118:79]
    node _newMask_T_18 = mux(_newMask_T_17, UInt<6>("h20"), UInt<1>("h0")) @[Mux.scala 101:16]
    node _newMask_T_19 = mux(_newMask_T_14, UInt<5>("h10"), _newMask_T_18) @[Mux.scala 101:16]
    node _newMask_T_20 = mux(_newMask_T_11, UInt<4>("h8"), _newMask_T_19) @[Mux.scala 101:16]
    node _newMask_T_21 = mux(_newMask_T_8, UInt<3>("h4"), _newMask_T_20) @[Mux.scala 101:16]
    node _newMask_T_22 = mux(_newMask_T_5, UInt<2>("h2"), _newMask_T_21) @[Mux.scala 101:16]
    node _newMask_T_23 = mux(_newMask_T_2, UInt<1>("h1"), _newMask_T_22) @[Mux.scala 101:16]
    node newMask = or(oldestMemMask, _newMask_T_23) @[scheduler.scala 118:31]
    reg haveMemMasks : UInt<1>, clock with :
      reset => (reset, UInt<1>("h1")) @[scheduler.scala 119:29]
    when haveMemMasks : @[scheduler.scala 120:22]
      node _haveMemMasks_T = andr(newMask) @[scheduler.scala 120:49]
      node _haveMemMasks_T_1 = eq(_haveMemMasks_T, UInt<1>("h0")) @[scheduler.scala 120:40]
      node _haveMemMasks_T_2 = eq(newQueue[7].valid, UInt<1>("h0")) @[scheduler.scala 120:57]
      node _haveMemMasks_T_3 = or(_haveMemMasks_T_1, _haveMemMasks_T_2) @[scheduler.scala 120:54]
      node _haveMemMasks_T_4 = eq(newQueue[7].opcodeMeta.isMemAccess, UInt<1>("h0")) @[scheduler.scala 120:95]
      node _haveMemMasks_T_5 = or(_haveMemMasks_T_3, _haveMemMasks_T_4) @[scheduler.scala 120:92]
      haveMemMasks <= _haveMemMasks_T_5 @[scheduler.scala 120:37]
    else :
      node _haveMemMasks_T_6 = andr(newMask) @[scheduler.scala 121:41]
      node _haveMemMasks_T_7 = eq(_haveMemMasks_T_6, UInt<1>("h0")) @[scheduler.scala 121:32]
      haveMemMasks <= _haveMemMasks_T_7 @[scheduler.scala 121:29]
    queue[0] <= newQueue[0] @[scheduler.scala 123:64]
    queue[1] <= newQueue[1] @[scheduler.scala 123:64]
    queue[2] <= newQueue[2] @[scheduler.scala 123:64]
    queue[3] <= newQueue[3] @[scheduler.scala 123:64]
    queue[4] <= newQueue[4] @[scheduler.scala 123:64]
    queue[5] <= newQueue[5] @[scheduler.scala 123:64]
    queue[6] <= newQueue[6] @[scheduler.scala 123:64]
    queue[7] <= newQueue[7] @[scheduler.scala 123:64]
    release.branchMask <= releasedBuffer.branchMask @[scheduler.scala 127:22]
    release.instruction <= releasedBuffer.instruction @[scheduler.scala 128:23]
    release.prfDest <= releasedBuffer.prfDest @[scheduler.scala 129:19]
    release.robAddr <= releasedBuffer.robAddr @[scheduler.scala 130:19]
    release.rs1prfAddr <= releasedBuffer.rs1prfAddr @[scheduler.scala 131:22]
    release.rs2prfAddr <= releasedBuffer.rs2prfAddr @[scheduler.scala 132:22]
    release.ready <= releasedBuffer.valid @[scheduler.scala 133:17]
    node _allocate_ready_T = and(queue[0].valid, queue[1].valid) @[scheduler.scala 134:50]
    node _allocate_ready_T_1 = and(_allocate_ready_T, queue[2].valid) @[scheduler.scala 134:50]
    node _allocate_ready_T_2 = and(_allocate_ready_T_1, queue[3].valid) @[scheduler.scala 134:50]
    node _allocate_ready_T_3 = and(_allocate_ready_T_2, queue[4].valid) @[scheduler.scala 134:50]
    node _allocate_ready_T_4 = and(_allocate_ready_T_3, queue[5].valid) @[scheduler.scala 134:50]
    node _allocate_ready_T_5 = and(_allocate_ready_T_4, queue[6].valid) @[scheduler.scala 134:50]
    node _allocate_ready_T_6 = and(_allocate_ready_T_5, queue[7].valid) @[scheduler.scala 134:50]
    node _allocate_ready_T_7 = eq(_allocate_ready_T_6, UInt<1>("h0")) @[scheduler.scala 134:21]
    allocate.ready <= _allocate_ready_T_7 @[scheduler.scala 134:18]
    when dequeue : @[scheduler.scala 136:17]
      node _releasedBuffer_branchMask_T = and(branchOps.branchMask, dequeued.branchMask) @[scheduler.scala 137:79]
      node _releasedBuffer_branchMask_T_1 = orr(_releasedBuffer_branchMask_T) @[scheduler.scala 137:102]
      node _releasedBuffer_branchMask_T_2 = and(branchOps.valid, _releasedBuffer_branchMask_T_1) @[scheduler.scala 137:54]
      node _releasedBuffer_branchMask_T_3 = and(_releasedBuffer_branchMask_T_2, branchOps.passed) @[scheduler.scala 137:106]
      node _releasedBuffer_branchMask_T_4 = xor(dequeued.branchMask, branchOps.branchMask) @[scheduler.scala 137:147]
      node _releasedBuffer_branchMask_T_5 = mux(_releasedBuffer_branchMask_T_3, _releasedBuffer_branchMask_T_4, dequeued.branchMask) @[scheduler.scala 137:37]
      releasedBuffer.branchMask <= _releasedBuffer_branchMask_T_5 @[scheduler.scala 137:31]
      releasedBuffer.instruction <= dequeued.instruction @[scheduler.scala 138:32]
      releasedBuffer.prfDest <= dequeued.prfDest @[scheduler.scala 139:28]
      releasedBuffer.robAddr <= dequeued.robAddr @[scheduler.scala 140:28]
      releasedBuffer.rs1prfAddr <= dequeued.rs1.prfAddr @[scheduler.scala 141:31]
      releasedBuffer.rs2prfAddr <= dequeued.rs2.prfAddr @[scheduler.scala 142:31]
      node _releasedBuffer_valid_T = eq(branchOps.valid, UInt<1>("h0")) @[scheduler.scala 143:48]
      node _releasedBuffer_valid_T_1 = and(dequeued.branchMask, branchOps.branchMask) @[scheduler.scala 143:90]
      node _releasedBuffer_valid_T_2 = orr(_releasedBuffer_valid_T_1) @[scheduler.scala 143:114]
      node _releasedBuffer_valid_T_3 = eq(_releasedBuffer_valid_T_2, UInt<1>("h0")) @[scheduler.scala 143:68]
      node _releasedBuffer_valid_T_4 = or(_releasedBuffer_valid_T, _releasedBuffer_valid_T_3) @[scheduler.scala 143:65]
      node _releasedBuffer_valid_T_5 = or(_releasedBuffer_valid_T_4, branchOps.passed) @[scheduler.scala 143:118]
      node _releasedBuffer_valid_T_6 = and(dequeued.valid, _releasedBuffer_valid_T_5) @[scheduler.scala 143:44]
      node _releasedBuffer_valid_T_7 = orr(readyVector) @[scheduler.scala 143:154]
      node _releasedBuffer_valid_T_8 = and(_releasedBuffer_valid_T_6, _releasedBuffer_valid_T_7) @[scheduler.scala 143:139]
      releasedBuffer.valid <= _releasedBuffer_valid_T_8 @[scheduler.scala 143:26]
    else :
      when branchOps.valid : @[scheduler.scala 144:31]
        node _releasedBuffer_branchMask_T_6 = xor(releasedBuffer.branchMask, branchOps.branchMask) @[scheduler.scala 145:60]
        releasedBuffer.branchMask <= _releasedBuffer_branchMask_T_6 @[scheduler.scala 145:31]
        node _releasedBuffer_valid_T_9 = eq(branchOps.valid, UInt<1>("h0")) @[scheduler.scala 146:54]
        node _releasedBuffer_valid_T_10 = and(releasedBuffer.branchMask, branchOps.branchMask) @[scheduler.scala 146:102]
        node _releasedBuffer_valid_T_11 = orr(_releasedBuffer_valid_T_10) @[scheduler.scala 146:126]
        node _releasedBuffer_valid_T_12 = eq(_releasedBuffer_valid_T_11, UInt<1>("h0")) @[scheduler.scala 146:74]
        node _releasedBuffer_valid_T_13 = or(_releasedBuffer_valid_T_9, _releasedBuffer_valid_T_12) @[scheduler.scala 146:71]
        node _releasedBuffer_valid_T_14 = or(_releasedBuffer_valid_T_13, branchOps.passed) @[scheduler.scala 146:130]
        node _releasedBuffer_valid_T_15 = and(releasedBuffer.valid, _releasedBuffer_valid_T_14) @[scheduler.scala 146:50]
        releasedBuffer.valid <= _releasedBuffer_valid_T_15 @[scheduler.scala 146:26]

  module Scheduler :
    input clock : Clock
    input reset : Reset
    output requestIn : { flip valid : UInt<1>, flip address : UInt<32>, flip instruction : UInt<32>, flip branchMask : UInt<5>, flip robAddr : UInt<4>, flip prfDest : UInt<6>}
    output canAllocate : UInt<1>
    input requestOut : { flip valid : UInt<1>, flip address : UInt<32>, flip instruction : UInt<32>, flip branchMask : UInt<5>, flip robAddr : UInt<4>, flip prfDest : UInt<6>}
    input canAccept : UInt<1>
    output isEmpty : UInt<1>
    output branchOps : { flip valid : UInt<1>, flip branchMask : UInt<5>, flip passed : UInt<1>}

    requestOut.valid <= UInt<1>("h0") @[scheduler.scala 16:20]
    canAllocate <= UInt<1>("h0") @[scheduler.scala 17:15]
    requestOut.valid <= UInt<1>("h0") @[scheduler.scala 18:20]
    requestOut.address <= UInt<1>("h0") @[scheduler.scala 19:22]
    requestOut.instruction <= UInt<1>("h0") @[scheduler.scala 20:26]
    requestOut.branchMask <= UInt<1>("h0") @[scheduler.scala 21:25]
    requestOut.robAddr <= UInt<1>("h0") @[scheduler.scala 22:22]
    requestOut.prfDest <= UInt<1>("h0") @[scheduler.scala 23:22]
    isEmpty <= UInt<1>("h0") @[scheduler.scala 24:11]
    reg memReg : { valid : UInt<1>, address : UInt<32>, instruction : UInt<32>, branchMask : UInt<5>, robAddr : UInt<4>, prfDest : UInt<6>, branchValid : UInt<1>}[8], clock with :
      reset => (UInt<1>("h0"), memReg) @[scheduler.scala 45:19]
    wire incrRead : UInt<1>
    incrRead <= UInt<1>("h0")
    wire incrWrite : UInt<1>
    incrWrite <= UInt<1>("h0")
    reg readPtr : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[scheduler.scala 28:25]
    node _nextVal_T = eq(readPtr, UInt<3>("h7")) @[scheduler.scala 29:30]
    node _nextVal_T_1 = add(readPtr, UInt<1>("h1")) @[scheduler.scala 29:59]
    node _nextVal_T_2 = tail(_nextVal_T_1, 1) @[scheduler.scala 29:59]
    node nextRead = mux(_nextVal_T, UInt<1>("h0"), _nextVal_T_2) @[scheduler.scala 29:22]
    when incrRead : @[scheduler.scala 30:17]
      readPtr <= nextRead @[scheduler.scala 31:14]
    reg writePtr : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[scheduler.scala 28:25]
    node _nextVal_T_3 = eq(writePtr, UInt<3>("h7")) @[scheduler.scala 29:30]
    node _nextVal_T_4 = add(writePtr, UInt<1>("h1")) @[scheduler.scala 29:59]
    node _nextVal_T_5 = tail(_nextVal_T_4, 1) @[scheduler.scala 29:59]
    node nextWrite = mux(_nextVal_T_3, UInt<1>("h0"), _nextVal_T_5) @[scheduler.scala 29:22]
    when incrWrite : @[scheduler.scala 30:17]
      writePtr <= nextWrite @[scheduler.scala 31:14]
    reg emptyReg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h1")) @[scheduler.scala 52:25]
    reg fullReg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[scheduler.scala 53:24]
    node op = cat(requestIn.valid, canAccept) @[scheduler.scala 55:28]
    wire doWrite : UInt<1>
    doWrite <= UInt<1>("h0")
    node _T = eq(UInt<1>("h0"), op) @[scheduler.scala 57:15]
    when _T : @[scheduler.scala 57:15]
      skip
    else :
      node _T_1 = eq(UInt<1>("h1"), op) @[scheduler.scala 57:15]
      when _T_1 : @[scheduler.scala 57:15]
        node _T_2 = eq(emptyReg, UInt<1>("h0")) @[scheduler.scala 60:13]
        when _T_2 : @[scheduler.scala 60:26]
          fullReg <= UInt<1>("h0") @[scheduler.scala 61:17]
          node _emptyReg_T = eq(nextRead, writePtr) @[scheduler.scala 62:30]
          emptyReg <= _emptyReg_T @[scheduler.scala 62:18]
          incrRead <= UInt<1>("h1") @[scheduler.scala 63:18]
      else :
        node _T_3 = eq(UInt<2>("h2"), op) @[scheduler.scala 57:15]
        when _T_3 : @[scheduler.scala 57:15]
          node _T_4 = eq(fullReg, UInt<1>("h0")) @[scheduler.scala 67:13]
          when _T_4 : @[scheduler.scala 67:25]
            doWrite <= UInt<1>("h1") @[scheduler.scala 68:17]
            emptyReg <= UInt<1>("h0") @[scheduler.scala 69:18]
            node _fullReg_T = eq(nextWrite, readPtr) @[scheduler.scala 70:30]
            fullReg <= _fullReg_T @[scheduler.scala 70:17]
            incrWrite <= UInt<1>("h1") @[scheduler.scala 71:19]
        else :
          node _T_5 = eq(UInt<2>("h3"), op) @[scheduler.scala 57:15]
          when _T_5 : @[scheduler.scala 57:15]
            node _T_6 = eq(fullReg, UInt<1>("h0")) @[scheduler.scala 75:13]
            when _T_6 : @[scheduler.scala 75:25]
              doWrite <= UInt<1>("h1") @[scheduler.scala 76:17]
              emptyReg <= UInt<1>("h0") @[scheduler.scala 77:18]
              when emptyReg : @[scheduler.scala 78:26]
                fullReg <= UInt<1>("h0") @[scheduler.scala 79:19]
              else :
                node _fullReg_T_1 = eq(nextWrite, nextRead) @[scheduler.scala 81:32]
                fullReg <= _fullReg_T_1 @[scheduler.scala 81:19]
              incrWrite <= UInt<1>("h1") @[scheduler.scala 83:19]
            node _T_7 = eq(emptyReg, UInt<1>("h0")) @[scheduler.scala 85:13]
            when _T_7 : @[scheduler.scala 85:26]
              fullReg <= UInt<1>("h0") @[scheduler.scala 86:17]
              when fullReg : @[scheduler.scala 87:23]
                emptyReg <= UInt<1>("h0") @[scheduler.scala 88:18]
              else :
                node _emptyReg_T_1 = eq(nextRead, nextWrite) @[scheduler.scala 90:30]
                emptyReg <= _emptyReg_T_1 @[scheduler.scala 90:18]
              incrRead <= UInt<1>("h1") @[scheduler.scala 92:18]
    when doWrite : @[scheduler.scala 96:19]
      memReg[writePtr].valid <= requestIn.valid @[scheduler.scala 97:28]
      memReg[writePtr].address <= requestIn.address @[scheduler.scala 98:30]
      memReg[writePtr].instruction <= requestIn.instruction @[scheduler.scala 99:34]
      memReg[writePtr].robAddr <= requestIn.robAddr @[scheduler.scala 100:30]
      memReg[writePtr].prfDest <= requestIn.prfDest @[scheduler.scala 101:30]
      when branchOps.valid : @[scheduler.scala 102:26]
        when branchOps.passed : @[scheduler.scala 103:29]
          node _T_8 = and(requestIn.branchMask, branchOps.branchMask) @[scheduler.scala 104:36]
          node _T_9 = orr(_T_8) @[scheduler.scala 104:60]
          when _T_9 : @[scheduler.scala 104:64]
            node _memReg_branchMask_T = xor(requestIn.branchMask, branchOps.branchMask) @[scheduler.scala 105:63]
            memReg[writePtr].branchMask <= _memReg_branchMask_T @[scheduler.scala 105:39]
          else :
            memReg[writePtr].branchMask <= requestIn.branchMask @[scheduler.scala 107:39]
          memReg[writePtr].branchValid <= UInt<1>("h1") @[scheduler.scala 109:38]
        else :
          memReg[writePtr].branchMask <= requestIn.branchMask @[scheduler.scala 111:37]
          memReg[writePtr].branchValid <= UInt<1>("h0") @[scheduler.scala 112:38]
      else :
        memReg[writePtr].branchMask <= requestIn.branchMask @[scheduler.scala 115:35]
        memReg[writePtr].branchValid <= UInt<1>("h1") @[scheduler.scala 116:36]
    requestOut.valid <= memReg[readPtr].valid @[scheduler.scala 119:20]
    requestOut.address <= memReg[readPtr].address @[scheduler.scala 120:22]
    requestOut.instruction <= memReg[readPtr].instruction @[scheduler.scala 121:26]
    requestOut.branchMask <= memReg[readPtr].branchMask @[scheduler.scala 122:25]
    requestOut.robAddr <= memReg[readPtr].robAddr @[scheduler.scala 123:22]
    requestOut.prfDest <= memReg[readPtr].prfDest @[scheduler.scala 124:22]
    node _startPointer_T = add(readPtr, UInt<1>("h1")) @[scheduler.scala 126:45]
    node _startPointer_T_1 = tail(_startPointer_T, 1) @[scheduler.scala 126:45]
    node startPointer = mux(canAccept, _startPointer_T_1, readPtr) @[scheduler.scala 126:25]
    node _endPointer_T = sub(writePtr, UInt<1>("h1")) @[scheduler.scala 127:29]
    node endPointer = tail(_endPointer_T, 1) @[scheduler.scala 127:29]
    when branchOps.valid : @[scheduler.scala 128:25]
      node _T_10 = leq(startPointer, UInt<1>("h0")) @[scheduler.scala 130:25]
      node _T_11 = leq(UInt<1>("h0"), endPointer) @[scheduler.scala 130:39]
      node _T_12 = or(_T_10, _T_11) @[scheduler.scala 130:32]
      when _T_12 : @[scheduler.scala 130:53]
        when branchOps.passed : @[scheduler.scala 131:31]
          node _T_13 = and(memReg[0].branchMask, branchOps.branchMask) @[scheduler.scala 132:38]
          node _T_14 = orr(_T_13) @[scheduler.scala 132:62]
          when _T_14 : @[scheduler.scala 132:66]
            node _memReg_0_branchMask_T = xor(memReg[0].branchMask, branchOps.branchMask) @[scheduler.scala 133:58]
            memReg[0].branchMask <= _memReg_0_branchMask_T @[scheduler.scala 133:34]
        else :
          node _T_15 = and(memReg[0].branchMask, branchOps.branchMask) @[scheduler.scala 136:38]
          node _T_16 = orr(_T_15) @[scheduler.scala 136:62]
          when _T_16 : @[scheduler.scala 136:66]
            memReg[0].branchValid <= UInt<1>("h0") @[scheduler.scala 137:35]
      node _T_17 = leq(startPointer, UInt<1>("h1")) @[scheduler.scala 130:25]
      node _T_18 = leq(UInt<1>("h1"), endPointer) @[scheduler.scala 130:39]
      node _T_19 = or(_T_17, _T_18) @[scheduler.scala 130:32]
      when _T_19 : @[scheduler.scala 130:53]
        when branchOps.passed : @[scheduler.scala 131:31]
          node _T_20 = and(memReg[1].branchMask, branchOps.branchMask) @[scheduler.scala 132:38]
          node _T_21 = orr(_T_20) @[scheduler.scala 132:62]
          when _T_21 : @[scheduler.scala 132:66]
            node _memReg_1_branchMask_T = xor(memReg[1].branchMask, branchOps.branchMask) @[scheduler.scala 133:58]
            memReg[1].branchMask <= _memReg_1_branchMask_T @[scheduler.scala 133:34]
        else :
          node _T_22 = and(memReg[1].branchMask, branchOps.branchMask) @[scheduler.scala 136:38]
          node _T_23 = orr(_T_22) @[scheduler.scala 136:62]
          when _T_23 : @[scheduler.scala 136:66]
            memReg[1].branchValid <= UInt<1>("h0") @[scheduler.scala 137:35]
      node _T_24 = leq(startPointer, UInt<2>("h2")) @[scheduler.scala 130:25]
      node _T_25 = leq(UInt<2>("h2"), endPointer) @[scheduler.scala 130:39]
      node _T_26 = or(_T_24, _T_25) @[scheduler.scala 130:32]
      when _T_26 : @[scheduler.scala 130:53]
        when branchOps.passed : @[scheduler.scala 131:31]
          node _T_27 = and(memReg[2].branchMask, branchOps.branchMask) @[scheduler.scala 132:38]
          node _T_28 = orr(_T_27) @[scheduler.scala 132:62]
          when _T_28 : @[scheduler.scala 132:66]
            node _memReg_2_branchMask_T = xor(memReg[2].branchMask, branchOps.branchMask) @[scheduler.scala 133:58]
            memReg[2].branchMask <= _memReg_2_branchMask_T @[scheduler.scala 133:34]
        else :
          node _T_29 = and(memReg[2].branchMask, branchOps.branchMask) @[scheduler.scala 136:38]
          node _T_30 = orr(_T_29) @[scheduler.scala 136:62]
          when _T_30 : @[scheduler.scala 136:66]
            memReg[2].branchValid <= UInt<1>("h0") @[scheduler.scala 137:35]
      node _T_31 = leq(startPointer, UInt<2>("h3")) @[scheduler.scala 130:25]
      node _T_32 = leq(UInt<2>("h3"), endPointer) @[scheduler.scala 130:39]
      node _T_33 = or(_T_31, _T_32) @[scheduler.scala 130:32]
      when _T_33 : @[scheduler.scala 130:53]
        when branchOps.passed : @[scheduler.scala 131:31]
          node _T_34 = and(memReg[3].branchMask, branchOps.branchMask) @[scheduler.scala 132:38]
          node _T_35 = orr(_T_34) @[scheduler.scala 132:62]
          when _T_35 : @[scheduler.scala 132:66]
            node _memReg_3_branchMask_T = xor(memReg[3].branchMask, branchOps.branchMask) @[scheduler.scala 133:58]
            memReg[3].branchMask <= _memReg_3_branchMask_T @[scheduler.scala 133:34]
        else :
          node _T_36 = and(memReg[3].branchMask, branchOps.branchMask) @[scheduler.scala 136:38]
          node _T_37 = orr(_T_36) @[scheduler.scala 136:62]
          when _T_37 : @[scheduler.scala 136:66]
            memReg[3].branchValid <= UInt<1>("h0") @[scheduler.scala 137:35]
      node _T_38 = leq(startPointer, UInt<3>("h4")) @[scheduler.scala 130:25]
      node _T_39 = leq(UInt<3>("h4"), endPointer) @[scheduler.scala 130:39]
      node _T_40 = or(_T_38, _T_39) @[scheduler.scala 130:32]
      when _T_40 : @[scheduler.scala 130:53]
        when branchOps.passed : @[scheduler.scala 131:31]
          node _T_41 = and(memReg[4].branchMask, branchOps.branchMask) @[scheduler.scala 132:38]
          node _T_42 = orr(_T_41) @[scheduler.scala 132:62]
          when _T_42 : @[scheduler.scala 132:66]
            node _memReg_4_branchMask_T = xor(memReg[4].branchMask, branchOps.branchMask) @[scheduler.scala 133:58]
            memReg[4].branchMask <= _memReg_4_branchMask_T @[scheduler.scala 133:34]
        else :
          node _T_43 = and(memReg[4].branchMask, branchOps.branchMask) @[scheduler.scala 136:38]
          node _T_44 = orr(_T_43) @[scheduler.scala 136:62]
          when _T_44 : @[scheduler.scala 136:66]
            memReg[4].branchValid <= UInt<1>("h0") @[scheduler.scala 137:35]
      node _T_45 = leq(startPointer, UInt<3>("h5")) @[scheduler.scala 130:25]
      node _T_46 = leq(UInt<3>("h5"), endPointer) @[scheduler.scala 130:39]
      node _T_47 = or(_T_45, _T_46) @[scheduler.scala 130:32]
      when _T_47 : @[scheduler.scala 130:53]
        when branchOps.passed : @[scheduler.scala 131:31]
          node _T_48 = and(memReg[5].branchMask, branchOps.branchMask) @[scheduler.scala 132:38]
          node _T_49 = orr(_T_48) @[scheduler.scala 132:62]
          when _T_49 : @[scheduler.scala 132:66]
            node _memReg_5_branchMask_T = xor(memReg[5].branchMask, branchOps.branchMask) @[scheduler.scala 133:58]
            memReg[5].branchMask <= _memReg_5_branchMask_T @[scheduler.scala 133:34]
        else :
          node _T_50 = and(memReg[5].branchMask, branchOps.branchMask) @[scheduler.scala 136:38]
          node _T_51 = orr(_T_50) @[scheduler.scala 136:62]
          when _T_51 : @[scheduler.scala 136:66]
            memReg[5].branchValid <= UInt<1>("h0") @[scheduler.scala 137:35]
      node _T_52 = leq(startPointer, UInt<3>("h6")) @[scheduler.scala 130:25]
      node _T_53 = leq(UInt<3>("h6"), endPointer) @[scheduler.scala 130:39]
      node _T_54 = or(_T_52, _T_53) @[scheduler.scala 130:32]
      when _T_54 : @[scheduler.scala 130:53]
        when branchOps.passed : @[scheduler.scala 131:31]
          node _T_55 = and(memReg[6].branchMask, branchOps.branchMask) @[scheduler.scala 132:38]
          node _T_56 = orr(_T_55) @[scheduler.scala 132:62]
          when _T_56 : @[scheduler.scala 132:66]
            node _memReg_6_branchMask_T = xor(memReg[6].branchMask, branchOps.branchMask) @[scheduler.scala 133:58]
            memReg[6].branchMask <= _memReg_6_branchMask_T @[scheduler.scala 133:34]
        else :
          node _T_57 = and(memReg[6].branchMask, branchOps.branchMask) @[scheduler.scala 136:38]
          node _T_58 = orr(_T_57) @[scheduler.scala 136:62]
          when _T_58 : @[scheduler.scala 136:66]
            memReg[6].branchValid <= UInt<1>("h0") @[scheduler.scala 137:35]
      node _T_59 = leq(startPointer, UInt<3>("h7")) @[scheduler.scala 130:25]
      node _T_60 = leq(UInt<3>("h7"), endPointer) @[scheduler.scala 130:39]
      node _T_61 = or(_T_59, _T_60) @[scheduler.scala 130:32]
      when _T_61 : @[scheduler.scala 130:53]
        when branchOps.passed : @[scheduler.scala 131:31]
          node _T_62 = and(memReg[7].branchMask, branchOps.branchMask) @[scheduler.scala 132:38]
          node _T_63 = orr(_T_62) @[scheduler.scala 132:62]
          when _T_63 : @[scheduler.scala 132:66]
            node _memReg_7_branchMask_T = xor(memReg[7].branchMask, branchOps.branchMask) @[scheduler.scala 133:58]
            memReg[7].branchMask <= _memReg_7_branchMask_T @[scheduler.scala 133:34]
        else :
          node _T_64 = and(memReg[7].branchMask, branchOps.branchMask) @[scheduler.scala 136:38]
          node _T_65 = orr(_T_64) @[scheduler.scala 136:62]
          when _T_65 : @[scheduler.scala 136:66]
            memReg[7].branchValid <= UInt<1>("h0") @[scheduler.scala 137:35]
    node _canAllocate_T = sub(writePtr, readPtr) @[scheduler.scala 144:29]
    node _canAllocate_T_1 = tail(_canAllocate_T, 1) @[scheduler.scala 144:29]
    node _canAllocate_T_2 = gt(_canAllocate_T_1, UInt<2>("h3")) @[scheduler.scala 144:39]
    node _canAllocate_T_3 = eq(_canAllocate_T_2, UInt<1>("h0")) @[scheduler.scala 144:18]
    canAllocate <= _canAllocate_T_3 @[scheduler.scala 144:15]
    node _requestOut_valid_T = eq(emptyReg, UInt<1>("h0")) @[scheduler.scala 145:23]
    node _requestOut_valid_T_1 = and(_requestOut_valid_T, memReg[readPtr].branchValid) @[scheduler.scala 145:33]
    requestOut.valid <= _requestOut_valid_T_1 @[scheduler.scala 145:20]
    isEmpty <= emptyReg @[scheduler.scala 146:11]

  module CacheGenModule :
    input clock : Clock
    input reset : Reset
    input requestAddr : UInt<7>
    output readData : UInt<512>
    input writeData : UInt<512>
    input writeEn : UInt<1>

    smem mem : UInt<512> [128] @[utils.scala 28:24]
    wire _readData_WIRE : UInt @[utils.scala 30:23]
    _readData_WIRE is invalid @[utils.scala 30:23]
    when UInt<1>("h1") : @[utils.scala 30:23]
      _readData_WIRE <= requestAddr @[utils.scala 30:23]
      node _readData_T = or(_readData_WIRE, UInt<7>("h0")) @[utils.scala 30:23]
      node _readData_T_1 = bits(_readData_T, 6, 0) @[utils.scala 30:23]
      read mport readData_MPORT = mem[_readData_T_1], clock @[utils.scala 30:23]
    readData <= readData_MPORT @[utils.scala 30:12]
    when writeEn : @[utils.scala 31:16]
      write mport MPORT = mem[requestAddr], clock
      MPORT <= writeData

  module CacheGenModule_1 :
    input clock : Clock
    input reset : Reset
    input requestAddr : UInt<7>
    output readData : UInt<512>
    input writeData : UInt<512>
    input writeEn : UInt<1>

    smem mem : UInt<512> [128] @[utils.scala 28:24]
    wire _readData_WIRE : UInt @[utils.scala 30:23]
    _readData_WIRE is invalid @[utils.scala 30:23]
    when UInt<1>("h1") : @[utils.scala 30:23]
      _readData_WIRE <= requestAddr @[utils.scala 30:23]
      node _readData_T = or(_readData_WIRE, UInt<7>("h0")) @[utils.scala 30:23]
      node _readData_T_1 = bits(_readData_T, 6, 0) @[utils.scala 30:23]
      read mport readData_MPORT = mem[_readData_T_1], clock @[utils.scala 30:23]
    readData <= readData_MPORT @[utils.scala 30:12]
    when writeEn : @[utils.scala 31:16]
      write mport MPORT = mem[requestAddr], clock
      MPORT <= writeData

  module CacheGenModule_2 :
    input clock : Clock
    input reset : Reset
    input requestAddr : UInt<7>
    output readData : UInt<512>
    input writeData : UInt<512>
    input writeEn : UInt<1>

    smem mem : UInt<512> [128] @[utils.scala 28:24]
    wire _readData_WIRE : UInt @[utils.scala 30:23]
    _readData_WIRE is invalid @[utils.scala 30:23]
    when UInt<1>("h1") : @[utils.scala 30:23]
      _readData_WIRE <= requestAddr @[utils.scala 30:23]
      node _readData_T = or(_readData_WIRE, UInt<7>("h0")) @[utils.scala 30:23]
      node _readData_T_1 = bits(_readData_T, 6, 0) @[utils.scala 30:23]
      read mport readData_MPORT = mem[_readData_T_1], clock @[utils.scala 30:23]
    readData <= readData_MPORT @[utils.scala 30:12]
    when writeEn : @[utils.scala 31:16]
      write mport MPORT = mem[requestAddr], clock
      MPORT <= writeData

  module CacheGenModule_3 :
    input clock : Clock
    input reset : Reset
    input requestAddr : UInt<7>
    output readData : UInt<512>
    input writeData : UInt<512>
    input writeEn : UInt<1>

    smem mem : UInt<512> [128] @[utils.scala 28:24]
    wire _readData_WIRE : UInt @[utils.scala 30:23]
    _readData_WIRE is invalid @[utils.scala 30:23]
    when UInt<1>("h1") : @[utils.scala 30:23]
      _readData_WIRE <= requestAddr @[utils.scala 30:23]
      node _readData_T = or(_readData_WIRE, UInt<7>("h0")) @[utils.scala 30:23]
      node _readData_T_1 = bits(_readData_T, 6, 0) @[utils.scala 30:23]
      read mport readData_MPORT = mem[_readData_T_1], clock @[utils.scala 30:23]
    readData <= readData_MPORT @[utils.scala 30:12]
    when writeEn : @[utils.scala 31:16]
      write mport MPORT = mem[requestAddr], clock
      MPORT <= writeData

  module CacheGenModule_4 :
    input clock : Clock
    input reset : Reset
    input requestAddr : UInt<7>
    output readData : UInt<96>
    input writeData : UInt<96>
    input writeEn : UInt<1>

    smem mem : UInt<96> [128] @[utils.scala 28:24]
    wire _readData_WIRE : UInt @[utils.scala 30:23]
    _readData_WIRE is invalid @[utils.scala 30:23]
    when UInt<1>("h1") : @[utils.scala 30:23]
      _readData_WIRE <= requestAddr @[utils.scala 30:23]
      node _readData_T = or(_readData_WIRE, UInt<7>("h0")) @[utils.scala 30:23]
      node _readData_T_1 = bits(_readData_T, 6, 0) @[utils.scala 30:23]
      read mport readData_MPORT = mem[_readData_T_1], clock @[utils.scala 30:23]
    readData <= readData_MPORT @[utils.scala 30:12]
    when writeEn : @[utils.scala 31:16]
      write mport MPORT = mem[requestAddr], clock
      MPORT <= writeData

  module CounterModule :
    input clock : Clock
    input reset : Reset
    output count : UInt<2>
    input incrm : UInt<1>

    reg cntReg : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[utils.scala 15:23]
    node _cntReg_T = eq(cntReg, UInt<2>("h2")) @[utils.scala 16:33]
    node _cntReg_T_1 = and(incrm, _cntReg_T) @[utils.scala 16:23]
    node _cntReg_T_2 = add(cntReg, UInt<1>("h1")) @[utils.scala 17:35]
    node _cntReg_T_3 = tail(_cntReg_T_2, 1) @[utils.scala 17:35]
    node _cntReg_T_4 = mux(incrm, _cntReg_T_3, cntReg) @[utils.scala 17:20]
    node _cntReg_T_5 = mux(_cntReg_T_1, UInt<1>("h0"), _cntReg_T_4) @[utils.scala 16:16]
    cntReg <= _cntReg_T_5 @[utils.scala 16:10]
    count <= cntReg @[utils.scala 19:9]

  module MaxPeriodFibonacciLFSR :
    input clock : Clock
    input reset : Reset
    output io : { flip seed : { valid : UInt<1>, bits : UInt<1>[2]}, flip increment : UInt<1>, out : UInt<1>[2]}

    wire _state_WIRE : UInt<1>[2] @[PRNG.scala 46:28]
    _state_WIRE[0] <= UInt<1>("h1") @[PRNG.scala 46:28]
    _state_WIRE[1] <= UInt<1>("h0") @[PRNG.scala 46:28]
    reg state : UInt<1>[2], clock with :
      reset => (reset, _state_WIRE) @[PRNG.scala 55:49]
    when io.increment : @[PRNG.scala 69:22]
      node _T = xor(state[1], state[0]) @[LFSR.scala 15:41]
      state[0] <= _T @[PRNG.scala 70:11]
      state[1] <= state[0] @[PRNG.scala 70:11]
    when io.seed.valid : @[PRNG.scala 73:22]
      state[0] <= io.seed.bits[0] @[PRNG.scala 74:11]
      state[1] <= io.seed.bits[1] @[PRNG.scala 74:11]
    io.out <= state @[PRNG.scala 78:10]

  module commitFifo :
    input clock : Clock
    input reset : Reset
    output dataIn : { flip valid : UInt<1>, flip addr : UInt<32>}
    input dataOut : { flip valid : UInt<1>, flip addr : UInt<32>}
    input canAccept : UInt<1>
    output isEmpty : UInt<1>
    output isFull : UInt<1>
    input invalidateAddr : UInt<32>
    input invalidateEnable : UInt<1>

    dataOut.valid <= UInt<1>("h0") @[commitFifo.scala 26:17]
    dataOut.addr <= UInt<1>("h0") @[commitFifo.scala 27:16]
    isEmpty <= UInt<1>("h0") @[commitFifo.scala 29:11]
    reg memReg : { valid : UInt<1>, addr : UInt<32>}[8], clock with :
      reset => (UInt<1>("h0"), memReg) @[commitFifo.scala 45:19]
    wire incrRead : UInt<1>
    incrRead <= UInt<1>("h0")
    wire incrWrite : UInt<1>
    incrWrite <= UInt<1>("h0")
    reg readPtr : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[commitFifo.scala 32:25]
    node _nextVal_T = eq(readPtr, UInt<3>("h7")) @[commitFifo.scala 33:30]
    node _nextVal_T_1 = add(readPtr, UInt<1>("h1")) @[commitFifo.scala 33:59]
    node _nextVal_T_2 = tail(_nextVal_T_1, 1) @[commitFifo.scala 33:59]
    node nextRead = mux(_nextVal_T, UInt<1>("h0"), _nextVal_T_2) @[commitFifo.scala 33:22]
    when incrRead : @[commitFifo.scala 34:17]
      readPtr <= nextRead @[commitFifo.scala 35:14]
    reg writePtr : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[commitFifo.scala 32:25]
    node _nextVal_T_3 = eq(writePtr, UInt<3>("h7")) @[commitFifo.scala 33:30]
    node _nextVal_T_4 = add(writePtr, UInt<1>("h1")) @[commitFifo.scala 33:59]
    node _nextVal_T_5 = tail(_nextVal_T_4, 1) @[commitFifo.scala 33:59]
    node nextWrite = mux(_nextVal_T_3, UInt<1>("h0"), _nextVal_T_5) @[commitFifo.scala 33:22]
    when incrWrite : @[commitFifo.scala 34:17]
      writePtr <= nextWrite @[commitFifo.scala 35:14]
    reg emptyReg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h1")) @[commitFifo.scala 52:25]
    reg fullReg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[commitFifo.scala 53:24]
    node op = cat(dataIn.valid, canAccept) @[commitFifo.scala 55:25]
    wire doWrite : UInt<1>
    doWrite <= UInt<1>("h0")
    node _T = eq(UInt<1>("h0"), op) @[commitFifo.scala 57:15]
    when _T : @[commitFifo.scala 57:15]
      skip
    else :
      node _T_1 = eq(UInt<1>("h1"), op) @[commitFifo.scala 57:15]
      when _T_1 : @[commitFifo.scala 57:15]
        node _T_2 = eq(emptyReg, UInt<1>("h0")) @[commitFifo.scala 60:13]
        when _T_2 : @[commitFifo.scala 60:26]
          fullReg <= UInt<1>("h0") @[commitFifo.scala 61:17]
          node _emptyReg_T = eq(nextRead, writePtr) @[commitFifo.scala 62:30]
          emptyReg <= _emptyReg_T @[commitFifo.scala 62:18]
          incrRead <= UInt<1>("h1") @[commitFifo.scala 63:18]
      else :
        node _T_3 = eq(UInt<2>("h2"), op) @[commitFifo.scala 57:15]
        when _T_3 : @[commitFifo.scala 57:15]
          node _T_4 = eq(fullReg, UInt<1>("h0")) @[commitFifo.scala 67:13]
          when _T_4 : @[commitFifo.scala 67:25]
            doWrite <= UInt<1>("h1") @[commitFifo.scala 68:17]
            emptyReg <= UInt<1>("h0") @[commitFifo.scala 69:18]
            node _fullReg_T = eq(nextWrite, readPtr) @[commitFifo.scala 70:30]
            fullReg <= _fullReg_T @[commitFifo.scala 70:17]
            incrWrite <= UInt<1>("h1") @[commitFifo.scala 71:19]
        else :
          node _T_5 = eq(UInt<2>("h3"), op) @[commitFifo.scala 57:15]
          when _T_5 : @[commitFifo.scala 57:15]
            node _T_6 = eq(fullReg, UInt<1>("h0")) @[commitFifo.scala 75:13]
            when _T_6 : @[commitFifo.scala 75:25]
              doWrite <= UInt<1>("h1") @[commitFifo.scala 76:17]
              emptyReg <= UInt<1>("h0") @[commitFifo.scala 77:18]
              when emptyReg : @[commitFifo.scala 78:26]
                fullReg <= UInt<1>("h0") @[commitFifo.scala 79:19]
              else :
                node _fullReg_T_1 = eq(nextWrite, nextRead) @[commitFifo.scala 81:32]
                fullReg <= _fullReg_T_1 @[commitFifo.scala 81:19]
              incrWrite <= UInt<1>("h1") @[commitFifo.scala 83:19]
            node _T_7 = eq(emptyReg, UInt<1>("h0")) @[commitFifo.scala 85:13]
            when _T_7 : @[commitFifo.scala 85:26]
              fullReg <= UInt<1>("h0") @[commitFifo.scala 86:17]
              when fullReg : @[commitFifo.scala 87:23]
                emptyReg <= UInt<1>("h0") @[commitFifo.scala 88:18]
              else :
                node _emptyReg_T_1 = eq(nextRead, nextWrite) @[commitFifo.scala 90:30]
                emptyReg <= _emptyReg_T_1 @[commitFifo.scala 90:18]
              incrRead <= UInt<1>("h1") @[commitFifo.scala 92:18]
    when doWrite : @[commitFifo.scala 97:19]
      memReg[writePtr].addr <= dataIn.addr @[commitFifo.scala 98:22]
      memReg[writePtr].valid <= dataIn.valid @[commitFifo.scala 98:22]
    dataOut.addr <= memReg[readPtr].addr @[commitFifo.scala 100:11]
    dataOut.valid <= memReg[readPtr].valid @[commitFifo.scala 100:11]
    when invalidateEnable : @[commitFifo.scala 104:26]
      node _T_8 = eq(memReg[0].addr, invalidateAddr) @[commitFifo.scala 106:27]
      when _T_8 : @[commitFifo.scala 106:47]
        memReg[0].valid <= UInt<1>("h0") @[commitFifo.scala 107:25]
      node _T_9 = eq(memReg[1].addr, invalidateAddr) @[commitFifo.scala 106:27]
      when _T_9 : @[commitFifo.scala 106:47]
        memReg[1].valid <= UInt<1>("h0") @[commitFifo.scala 107:25]
      node _T_10 = eq(memReg[2].addr, invalidateAddr) @[commitFifo.scala 106:27]
      when _T_10 : @[commitFifo.scala 106:47]
        memReg[2].valid <= UInt<1>("h0") @[commitFifo.scala 107:25]
      node _T_11 = eq(memReg[3].addr, invalidateAddr) @[commitFifo.scala 106:27]
      when _T_11 : @[commitFifo.scala 106:47]
        memReg[3].valid <= UInt<1>("h0") @[commitFifo.scala 107:25]
      node _T_12 = eq(memReg[4].addr, invalidateAddr) @[commitFifo.scala 106:27]
      when _T_12 : @[commitFifo.scala 106:47]
        memReg[4].valid <= UInt<1>("h0") @[commitFifo.scala 107:25]
      node _T_13 = eq(memReg[5].addr, invalidateAddr) @[commitFifo.scala 106:27]
      when _T_13 : @[commitFifo.scala 106:47]
        memReg[5].valid <= UInt<1>("h0") @[commitFifo.scala 107:25]
      node _T_14 = eq(memReg[6].addr, invalidateAddr) @[commitFifo.scala 106:27]
      when _T_14 : @[commitFifo.scala 106:47]
        memReg[6].valid <= UInt<1>("h0") @[commitFifo.scala 107:25]
      node _T_15 = eq(memReg[7].addr, invalidateAddr) @[commitFifo.scala 106:27]
      when _T_15 : @[commitFifo.scala 106:47]
        memReg[7].valid <= UInt<1>("h0") @[commitFifo.scala 107:25]
    isEmpty <= emptyReg @[commitFifo.scala 112:11]
    isFull <= fullReg @[commitFifo.scala 113:10]

  module cacheLookup :
    input clock : Clock
    input reset : Reset
    output cacheRequest : { flip instruction : UInt<32>, ready : UInt<1>, flip valid : UInt<1>, accepted : UInt<1>, flip writeEn : UInt<1>, flip address : UInt<32>}
    input coherencyRequest : { flip ready : UInt<1>, valid : UInt<1>, flip accepted : UInt<1>, address : UInt<32>, dataReq : UInt<1>, invalidateReq : UInt<1>}
    input loadData : { flip ready : UInt<1>, valid : UInt<1>, data : UInt<512>, response : UInt<2>}
    input memoryRequest : { ready : UInt<1>, flip valid : UInt<1>, flip writeEn : UInt<1>, flip address : UInt<32>, flip data : UInt<512>, flip instruction : UInt<32>, flip isUnique : UInt<1>, flip isClean : UInt<1>}
    output responseOut : { flip ready : UInt<1>, valid : UInt<1>, data : UInt<64>, response : UInt<2>}
    output storeDataIn : { flip valid : UInt<1>, flip data : UInt<64>, ready : UInt<1>}
    input branchFail : UInt<1>
    output loadCommit : { flip ready : UInt<1>, valid : UInt<1>, state : UInt<1>}
    input coherencyReceived : UInt<1>
    output isAtomicsInOperation : UInt<1>

    cacheRequest.ready <= UInt<1>("h0") @[cacheLookup.scala 22:22]
    cacheRequest.accepted <= UInt<1>("h0") @[cacheLookup.scala 23:25]
    loadData.ready <= UInt<1>("h0") @[cacheLookup.scala 25:18]
    memoryRequest.valid <= UInt<1>("h0") @[cacheLookup.scala 27:23]
    memoryRequest.writeEn <= UInt<1>("h0") @[cacheLookup.scala 28:25]
    memoryRequest.address <= UInt<1>("h0") @[cacheLookup.scala 29:25]
    memoryRequest.data <= UInt<1>("h0") @[cacheLookup.scala 30:22]
    memoryRequest.isUnique <= UInt<1>("h0") @[cacheLookup.scala 31:26]
    memoryRequest.isClean <= UInt<1>("h0") @[cacheLookup.scala 32:25]
    memoryRequest.instruction <= UInt<1>("h0") @[cacheLookup.scala 33:29]
    responseOut.valid <= UInt<1>("h0") @[cacheLookup.scala 35:21]
    responseOut.data <= UInt<1>("h0") @[cacheLookup.scala 36:20]
    responseOut.response <= UInt<1>("h0") @[cacheLookup.scala 37:24]
    storeDataIn.ready <= UInt<1>("h0") @[cacheLookup.scala 39:21]
    coherencyRequest.ready <= UInt<1>("h0") @[cacheLookup.scala 41:26]
    coherencyRequest.accepted <= UInt<1>("h0") @[cacheLookup.scala 42:29]
    loadCommit.valid <= UInt<1>("h0") @[cacheLookup.scala 44:20]
    loadCommit.state <= UInt<1>("h0") @[cacheLookup.scala 45:20]
    wire isLoadWire : UInt<1>
    isLoadWire <= UInt<1>("h0")
    wire isStoreWire : UInt<1>
    isStoreWire <= UInt<1>("h0")
    wire isCoherentWire : UInt<1>
    isCoherentWire <= UInt<1>("h0")
    wire isAtomicsWire : UInt<1>
    isAtomicsWire <= UInt<1>("h0")
    wire isLRWire : UInt<1>
    isLRWire <= UInt<1>("h0")
    wire isSCWire : UInt<1>
    isSCWire <= UInt<1>("h0")
    wire freeInputBuffer : UInt<1>
    freeInputBuffer <= UInt<1>("h0")
    wire commitFIFOFull : UInt<1>
    commitFIFOFull <= UInt<1>("h0")
    wire atomicsInOperationWire : UInt<1>
    atomicsInOperationWire <= UInt<1>("h0")
    wire _inputBuffer_WIRE : { address : UInt<32>, writeEn : UInt<1>, instruction : UInt<32>, dataReq : UInt<1>, invalidateReq : UInt<1>}
    _inputBuffer_WIRE.invalidateReq <= UInt<1>("h0")
    _inputBuffer_WIRE.dataReq <= UInt<1>("h0")
    _inputBuffer_WIRE.instruction <= UInt<1>("h0")
    _inputBuffer_WIRE.writeEn <= UInt<1>("h0")
    _inputBuffer_WIRE.address <= UInt<1>("h0")
    reg inputBuffer : { address : UInt<32>, writeEn : UInt<1>, instruction : UInt<32>, dataReq : UInt<1>, invalidateReq : UInt<1>}, clock with :
      reset => (reset, _inputBuffer_WIRE) @[cacheLookup.scala 62:28]
    reg inputBufferState : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[cacheLookup.scala 77:33]
    node _T = eq(UInt<2>("h0"), inputBufferState) @[cacheLookup.scala 79:27]
    when _T : @[cacheLookup.scala 79:27]
      node _cacheRequest_ready_T = eq(commitFIFOFull, UInt<1>("h0")) @[cacheLookup.scala 81:29]
      cacheRequest.ready <= _cacheRequest_ready_T @[cacheLookup.scala 81:26]
      node _coherencyRequest_ready_T = eq(atomicsInOperationWire, UInt<1>("h0")) @[cacheLookup.scala 82:43]
      node _coherencyRequest_ready_T_1 = and(UInt<1>("h1"), _coherencyRequest_ready_T) @[cacheLookup.scala 82:40]
      coherencyRequest.ready <= _coherencyRequest_ready_T_1 @[cacheLookup.scala 82:30]
      node _T_1 = and(cacheRequest.valid, atomicsInOperationWire) @[cacheLookup.scala 83:31]
      when _T_1 : @[cacheLookup.scala 83:57]
        inputBuffer.address <= cacheRequest.address @[cacheLookup.scala 84:29]
        inputBuffer.writeEn <= cacheRequest.writeEn @[cacheLookup.scala 85:29]
        inputBuffer.instruction <= cacheRequest.instruction @[cacheLookup.scala 86:33]
      else :
        when coherencyRequest.valid : @[cacheLookup.scala 87:42]
          inputBuffer.address <= coherencyRequest.address @[cacheLookup.scala 88:29]
          inputBuffer.dataReq <= coherencyRequest.dataReq @[cacheLookup.scala 89:29]
          inputBuffer.invalidateReq <= coherencyRequest.invalidateReq @[cacheLookup.scala 90:35]
        else :
          node _T_2 = eq(commitFIFOFull, UInt<1>("h0")) @[cacheLookup.scala 91:41]
          node _T_3 = and(cacheRequest.valid, _T_2) @[cacheLookup.scala 91:38]
          node _T_4 = eq(coherencyReceived, UInt<1>("h0")) @[cacheLookup.scala 91:60]
          node _T_5 = and(_T_3, _T_4) @[cacheLookup.scala 91:57]
          when _T_5 : @[cacheLookup.scala 91:79]
            inputBuffer.address <= cacheRequest.address @[cacheLookup.scala 92:29]
            inputBuffer.writeEn <= cacheRequest.writeEn @[cacheLookup.scala 93:29]
            inputBuffer.instruction <= cacheRequest.instruction @[cacheLookup.scala 94:33]
      node _T_6 = and(cacheRequest.valid, atomicsInOperationWire) @[cacheLookup.scala 96:31]
      when _T_6 : @[cacheLookup.scala 96:57]
        inputBufferState <= UInt<2>("h1") @[cacheLookup.scala 97:26]
      else :
        when coherencyRequest.valid : @[cacheLookup.scala 98:42]
          inputBufferState <= UInt<2>("h2") @[cacheLookup.scala 99:26]
        else :
          node _T_7 = eq(coherencyRequest.valid, UInt<1>("h0")) @[cacheLookup.scala 100:42]
          node _T_8 = and(cacheRequest.valid, _T_7) @[cacheLookup.scala 100:39]
          node _T_9 = eq(coherencyReceived, UInt<1>("h0")) @[cacheLookup.scala 100:69]
          node _T_10 = and(_T_8, _T_9) @[cacheLookup.scala 100:66]
          when _T_10 : @[cacheLookup.scala 100:88]
            node _inputBufferState_T = eq(commitFIFOFull, UInt<1>("h0")) @[cacheLookup.scala 101:33]
            node _inputBufferState_T_1 = mux(_inputBufferState_T, UInt<2>("h1"), UInt<2>("h0")) @[cacheLookup.scala 101:32]
            inputBufferState <= _inputBufferState_T_1 @[cacheLookup.scala 101:26]
          else :
            inputBufferState <= UInt<2>("h0") @[cacheLookup.scala 103:26]
    else :
      node _T_11 = eq(UInt<2>("h1"), inputBufferState) @[cacheLookup.scala 79:27]
      when _T_11 : @[cacheLookup.scala 79:27]
        node _cacheRequest_accepted_T = eq(freeInputBuffer, UInt<1>("h0")) @[cacheLookup.scala 107:32]
        cacheRequest.accepted <= _cacheRequest_accepted_T @[cacheLookup.scala 107:29]
        node _inputBufferState_T_2 = mux(freeInputBuffer, UInt<2>("h0"), UInt<2>("h1")) @[cacheLookup.scala 108:30]
        inputBufferState <= _inputBufferState_T_2 @[cacheLookup.scala 108:24]
      else :
        node _T_12 = eq(UInt<2>("h2"), inputBufferState) @[cacheLookup.scala 79:27]
        when _T_12 : @[cacheLookup.scala 79:27]
          node _coherencyRequest_accepted_T = eq(freeInputBuffer, UInt<1>("h0")) @[cacheLookup.scala 111:36]
          coherencyRequest.accepted <= _coherencyRequest_accepted_T @[cacheLookup.scala 111:33]
          node _inputBufferState_T_3 = mux(freeInputBuffer, UInt<2>("h0"), UInt<2>("h2")) @[cacheLookup.scala 112:30]
          inputBufferState <= _inputBufferState_T_3 @[cacheLookup.scala 112:24]
    node _T_13 = neq(inputBufferState, UInt<2>("h0")) @[cacheLookup.scala 116:25]
    when _T_13 : @[cacheLookup.scala 116:35]
      node _isLoadWire_T = eq(inputBuffer.writeEn, UInt<1>("h0")) @[cacheLookup.scala 118:20]
      node _isLoadWire_T_1 = bits(inputBuffer.instruction, 1, 0) @[cacheLookup.scala 118:67]
      node _isLoadWire_T_2 = eq(_isLoadWire_T_1, UInt<2>("h3")) @[cacheLookup.scala 118:73]
      node _isLoadWire_T_3 = and(_isLoadWire_T, _isLoadWire_T_2) @[cacheLookup.scala 118:41]
      isLoadWire <= _isLoadWire_T_3 @[cacheLookup.scala 118:16]
      node _isStoreWire_T = bits(inputBuffer.instruction, 1, 0) @[cacheLookup.scala 119:67]
      node _isStoreWire_T_1 = eq(_isStoreWire_T, UInt<2>("h3")) @[cacheLookup.scala 119:73]
      node _isStoreWire_T_2 = and(inputBuffer.writeEn, _isStoreWire_T_1) @[cacheLookup.scala 119:41]
      isStoreWire <= _isStoreWire_T_2 @[cacheLookup.scala 119:17]
      node _isAtomicsWire_T = bits(inputBuffer.instruction, 6, 0) @[cacheLookup.scala 120:46]
      node _isAtomicsWire_T_1 = eq(_isAtomicsWire_T, UInt<6>("h2f")) @[cacheLookup.scala 120:52]
      isAtomicsWire <= _isAtomicsWire_T_1 @[cacheLookup.scala 120:19]
      node _isLRWire_T = bits(inputBuffer.instruction, 31, 27) @[cacheLookup.scala 121:40]
      node _isLRWire_T_1 = eq(_isLRWire_T, UInt<2>("h2")) @[cacheLookup.scala 121:48]
      node _isLRWire_T_2 = and(_isLRWire_T_1, isAtomicsWire) @[cacheLookup.scala 121:63]
      isLRWire <= _isLRWire_T_2 @[cacheLookup.scala 121:14]
      node _isSCWire_T = bits(inputBuffer.instruction, 31, 27) @[cacheLookup.scala 122:40]
      node _isSCWire_T_1 = eq(_isSCWire_T, UInt<2>("h3")) @[cacheLookup.scala 122:48]
      node _isSCWire_T_2 = and(_isSCWire_T_1, isAtomicsWire) @[cacheLookup.scala 122:63]
      isSCWire <= _isSCWire_T_2 @[cacheLookup.scala 122:14]
    node _isCoherentWire_T = eq(inputBufferState, UInt<2>("h2")) @[cacheLookup.scala 125:39]
    isCoherentWire <= _isCoherentWire_T @[cacheLookup.scala 125:18]
    reg branchFailReg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[cacheLookup.scala 128:30]
    when branchFail : @[cacheLookup.scala 129:19]
      branchFailReg <= branchFail @[cacheLookup.scala 130:19]
    node _T_14 = eq(inputBufferState, UInt<2>("h0")) @[cacheLookup.scala 132:25]
    node _T_15 = and(_T_14, branchFailReg) @[cacheLookup.scala 132:35]
    when _T_15 : @[cacheLookup.scala 132:52]
      branchFailReg <= UInt<1>("h0") @[cacheLookup.scala 133:19]
    node isBranchFailWire = or(branchFail, branchFailReg) @[cacheLookup.scala 135:37]
    wire _storeDataBuffer_WIRE : { valid : UInt<1>, data : UInt<64>}
    _storeDataBuffer_WIRE.data <= UInt<1>("h0")
    _storeDataBuffer_WIRE.valid <= UInt<1>("h0")
    reg storeDataBuffer : { valid : UInt<1>, data : UInt<64>}, clock with :
      reset => (reset, _storeDataBuffer_WIRE) @[cacheLookup.scala 138:32]
    reg storeDataBufferState : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[cacheLookup.scala 145:37]
    node _T_16 = eq(UInt<2>("h0"), storeDataBufferState) @[cacheLookup.scala 146:31]
    when _T_16 : @[cacheLookup.scala 146:31]
      when storeDataIn.valid : @[cacheLookup.scala 148:30]
        storeDataBuffer.data <= storeDataIn.data @[cacheLookup.scala 149:30]
      node _storeDataBufferState_T = mux(storeDataIn.valid, UInt<2>("h1"), UInt<2>("h0")) @[cacheLookup.scala 151:34]
      storeDataBufferState <= _storeDataBufferState_T @[cacheLookup.scala 151:28]
    else :
      node _T_17 = eq(UInt<2>("h1"), storeDataBufferState) @[cacheLookup.scala 146:31]
      when _T_17 : @[cacheLookup.scala 146:31]
        node _storeDataBufferState_T_1 = mux(freeInputBuffer, UInt<2>("h0"), UInt<2>("h1")) @[cacheLookup.scala 154:34]
        storeDataBufferState <= _storeDataBufferState_T_1 @[cacheLookup.scala 154:28]
    wire _reservationRegister_WIRE : { address : UInt<32>, reserved : UInt<1>, size : UInt<1>}
    _reservationRegister_WIRE.size <= UInt<1>("h0")
    _reservationRegister_WIRE.reserved <= UInt<1>("h0")
    _reservationRegister_WIRE.address <= UInt<1>("h0")
    reg reservationRegister : { address : UInt<32>, reserved : UInt<1>, size : UInt<1>}, clock with :
      reset => (reset, _reservationRegister_WIRE) @[cacheLookup.scala 159:36]
    reg atomicsInOperationReg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[cacheLookup.scala 171:38]
    node _T_18 = eq(atomicsInOperationReg, UInt<1>("h0")) @[cacheLookup.scala 172:8]
    when _T_18 : @[cacheLookup.scala 172:31]
      node _atomicsInOperationReg_T = and(isAtomicsWire, isLoadWire) @[cacheLookup.scala 173:44]
      node _atomicsInOperationReg_T_1 = eq(isLRWire, UInt<1>("h0")) @[cacheLookup.scala 173:61]
      node _atomicsInOperationReg_T_2 = and(_atomicsInOperationReg_T, _atomicsInOperationReg_T_1) @[cacheLookup.scala 173:58]
      atomicsInOperationReg <= _atomicsInOperationReg_T_2 @[cacheLookup.scala 173:27]
    else :
      node _atomicsInOperationReg_T_3 = and(isAtomicsWire, isStoreWire) @[cacheLookup.scala 175:68]
      node _atomicsInOperationReg_T_4 = eq(isSCWire, UInt<1>("h0")) @[cacheLookup.scala 175:86]
      node _atomicsInOperationReg_T_5 = and(_atomicsInOperationReg_T_3, _atomicsInOperationReg_T_4) @[cacheLookup.scala 175:83]
      node _atomicsInOperationReg_T_6 = and(freeInputBuffer, _atomicsInOperationReg_T_5) @[cacheLookup.scala 175:50]
      node _atomicsInOperationReg_T_7 = mux(_atomicsInOperationReg_T_6, UInt<1>("h0"), atomicsInOperationReg) @[cacheLookup.scala 175:33]
      atomicsInOperationReg <= _atomicsInOperationReg_T_7 @[cacheLookup.scala 175:27]
    atomicsInOperationWire <= atomicsInOperationReg @[cacheLookup.scala 177:26]
    isAtomicsInOperation <= atomicsInOperationWire @[cacheLookup.scala 178:24]
    inst dataBRAM_0 of CacheGenModule @[cacheLookup.scala 186:39]
    dataBRAM_0.clock <= clock
    dataBRAM_0.reset <= reset
    inst dataBRAM_1 of CacheGenModule_1 @[cacheLookup.scala 186:39]
    dataBRAM_1.clock <= clock
    dataBRAM_1.reset <= reset
    inst dataBRAM_2 of CacheGenModule_2 @[cacheLookup.scala 186:39]
    dataBRAM_2.clock <= clock
    dataBRAM_2.reset <= reset
    inst dataBRAM_3 of CacheGenModule_3 @[cacheLookup.scala 186:39]
    dataBRAM_3.clock <= clock
    dataBRAM_3.reset <= reset
    dataBRAM_0.requestAddr <= UInt<1>("h0") @[cacheLookup.scala 192:22]
    dataBRAM_0.writeData <= UInt<1>("h0") @[cacheLookup.scala 193:20]
    dataBRAM_0.writeEn <= UInt<1>("h0") @[cacheLookup.scala 194:19]
    dataBRAM_1.requestAddr <= UInt<1>("h0") @[cacheLookup.scala 192:22]
    dataBRAM_1.writeData <= UInt<1>("h0") @[cacheLookup.scala 193:20]
    dataBRAM_1.writeEn <= UInt<1>("h0") @[cacheLookup.scala 194:19]
    dataBRAM_2.requestAddr <= UInt<1>("h0") @[cacheLookup.scala 192:22]
    dataBRAM_2.writeData <= UInt<1>("h0") @[cacheLookup.scala 193:20]
    dataBRAM_2.writeEn <= UInt<1>("h0") @[cacheLookup.scala 194:19]
    dataBRAM_3.requestAddr <= UInt<1>("h0") @[cacheLookup.scala 192:22]
    dataBRAM_3.writeData <= UInt<1>("h0") @[cacheLookup.scala 193:20]
    dataBRAM_3.writeEn <= UInt<1>("h0") @[cacheLookup.scala 194:19]
    wire dataBRAMVec_bundle : { readData : UInt<512>, writeEn : UInt<1>, writeData : UInt<512>, requestAddr : UInt<7>} @[cacheLookup.scala 198:22]
    dataBRAMVec_bundle.readData <= UInt<1>("h0") @[cacheLookup.scala 204:21]
    dataBRAMVec_bundle.writeEn <= UInt<1>("h0") @[cacheLookup.scala 205:20]
    dataBRAMVec_bundle.writeData <= UInt<1>("h0") @[cacheLookup.scala 206:22]
    dataBRAMVec_bundle.requestAddr <= UInt<1>("h0") @[cacheLookup.scala 207:24]
    wire dataBRAMVec_bundle_1 : { readData : UInt<512>, writeEn : UInt<1>, writeData : UInt<512>, requestAddr : UInt<7>} @[cacheLookup.scala 198:22]
    dataBRAMVec_bundle_1.readData <= UInt<1>("h0") @[cacheLookup.scala 204:21]
    dataBRAMVec_bundle_1.writeEn <= UInt<1>("h0") @[cacheLookup.scala 205:20]
    dataBRAMVec_bundle_1.writeData <= UInt<1>("h0") @[cacheLookup.scala 206:22]
    dataBRAMVec_bundle_1.requestAddr <= UInt<1>("h0") @[cacheLookup.scala 207:24]
    wire dataBRAMVec_bundle_2 : { readData : UInt<512>, writeEn : UInt<1>, writeData : UInt<512>, requestAddr : UInt<7>} @[cacheLookup.scala 198:22]
    dataBRAMVec_bundle_2.readData <= UInt<1>("h0") @[cacheLookup.scala 204:21]
    dataBRAMVec_bundle_2.writeEn <= UInt<1>("h0") @[cacheLookup.scala 205:20]
    dataBRAMVec_bundle_2.writeData <= UInt<1>("h0") @[cacheLookup.scala 206:22]
    dataBRAMVec_bundle_2.requestAddr <= UInt<1>("h0") @[cacheLookup.scala 207:24]
    wire dataBRAMVec_bundle_3 : { readData : UInt<512>, writeEn : UInt<1>, writeData : UInt<512>, requestAddr : UInt<7>} @[cacheLookup.scala 198:22]
    dataBRAMVec_bundle_3.readData <= UInt<1>("h0") @[cacheLookup.scala 204:21]
    dataBRAMVec_bundle_3.writeEn <= UInt<1>("h0") @[cacheLookup.scala 205:20]
    dataBRAMVec_bundle_3.writeData <= UInt<1>("h0") @[cacheLookup.scala 206:22]
    dataBRAMVec_bundle_3.requestAddr <= UInt<1>("h0") @[cacheLookup.scala 207:24]
    wire dataBRAMVec : { readData : UInt<512>, writeEn : UInt<1>, writeData : UInt<512>, requestAddr : UInt<7>}[4] @[cacheLookup.scala 197:28]
    dataBRAMVec[0] <= dataBRAMVec_bundle @[cacheLookup.scala 197:28]
    dataBRAMVec[1] <= dataBRAMVec_bundle_1 @[cacheLookup.scala 197:28]
    dataBRAMVec[2] <= dataBRAMVec_bundle_2 @[cacheLookup.scala 197:28]
    dataBRAMVec[3] <= dataBRAMVec_bundle_3 @[cacheLookup.scala 197:28]
    dataBRAMVec[0].readData <= dataBRAM_0.readData @[cacheLookup.scala 213:18]
    dataBRAM_0.writeEn <= dataBRAMVec[0].writeEn @[cacheLookup.scala 214:18]
    dataBRAM_0.writeData <= dataBRAMVec[0].writeData @[cacheLookup.scala 215:20]
    dataBRAM_0.requestAddr <= dataBRAMVec[0].requestAddr @[cacheLookup.scala 216:22]
    dataBRAMVec[1].readData <= dataBRAM_1.readData @[cacheLookup.scala 213:18]
    dataBRAM_1.writeEn <= dataBRAMVec[1].writeEn @[cacheLookup.scala 214:18]
    dataBRAM_1.writeData <= dataBRAMVec[1].writeData @[cacheLookup.scala 215:20]
    dataBRAM_1.requestAddr <= dataBRAMVec[1].requestAddr @[cacheLookup.scala 216:22]
    dataBRAMVec[2].readData <= dataBRAM_2.readData @[cacheLookup.scala 213:18]
    dataBRAM_2.writeEn <= dataBRAMVec[2].writeEn @[cacheLookup.scala 214:18]
    dataBRAM_2.writeData <= dataBRAMVec[2].writeData @[cacheLookup.scala 215:20]
    dataBRAM_2.requestAddr <= dataBRAMVec[2].requestAddr @[cacheLookup.scala 216:22]
    dataBRAMVec[3].readData <= dataBRAM_3.readData @[cacheLookup.scala 213:18]
    dataBRAM_3.writeEn <= dataBRAMVec[3].writeEn @[cacheLookup.scala 214:18]
    dataBRAM_3.writeData <= dataBRAMVec[3].writeData @[cacheLookup.scala 215:20]
    dataBRAM_3.requestAddr <= dataBRAMVec[3].requestAddr @[cacheLookup.scala 216:22]
    inst tagBRAM of CacheGenModule_4 @[cacheLookup.scala 229:23]
    tagBRAM.clock <= clock
    tagBRAM.reset <= reset
    tagBRAM.requestAddr <= UInt<1>("h0") @[cacheLookup.scala 234:23]
    tagBRAM.writeData <= UInt<1>("h0") @[cacheLookup.scala 235:21]
    tagBRAM.writeEn <= UInt<1>("h0") @[cacheLookup.scala 236:20]
    reg cacheState : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[cacheLookup.scala 240:27]
    node _requestValidWire_T = neq(inputBufferState, UInt<2>("h0")) @[cacheLookup.scala 242:44]
    node _requestValidWire_T_1 = eq(freeInputBuffer, UInt<1>("h0")) @[cacheLookup.scala 242:58]
    node requestValidWire = and(_requestValidWire_T, _requestValidWire_T_1) @[cacheLookup.scala 242:55]
    inst delayCounter of CounterModule @[cacheLookup.scala 244:28]
    delayCounter.clock <= clock
    delayCounter.reset <= reset
    delayCounter.incrm <= UInt<1>("h0") @[cacheLookup.scala 245:22]
    delayCounter.reset <= UInt<1>("h0") @[cacheLookup.scala 246:22]
    node _dataBRAMVec_0_requestAddr_T = bits(inputBuffer.address, 12, 6) @[cacheLookup.scala 252:44]
    dataBRAMVec[0].requestAddr <= _dataBRAMVec_0_requestAddr_T @[cacheLookup.scala 252:22]
    node _dataBRAMVec_1_requestAddr_T = bits(inputBuffer.address, 12, 6) @[cacheLookup.scala 252:44]
    dataBRAMVec[1].requestAddr <= _dataBRAMVec_1_requestAddr_T @[cacheLookup.scala 252:22]
    node _dataBRAMVec_2_requestAddr_T = bits(inputBuffer.address, 12, 6) @[cacheLookup.scala 252:44]
    dataBRAMVec[2].requestAddr <= _dataBRAMVec_2_requestAddr_T @[cacheLookup.scala 252:22]
    node _dataBRAMVec_3_requestAddr_T = bits(inputBuffer.address, 12, 6) @[cacheLookup.scala 252:44]
    dataBRAMVec[3].requestAddr <= _dataBRAMVec_3_requestAddr_T @[cacheLookup.scala 252:22]
    node _tagBRAM_requestAddr_T = bits(inputBuffer.address, 12, 6) @[cacheLookup.scala 254:45]
    tagBRAM.requestAddr <= _tagBRAM_requestAddr_T @[cacheLookup.scala 254:23]
    wire _matchFoundReg_WIRE : UInt<1>[4] @[cacheLookup.scala 256:38]
    _matchFoundReg_WIRE[0] <= UInt<1>("h0") @[cacheLookup.scala 256:38]
    _matchFoundReg_WIRE[1] <= UInt<1>("h0") @[cacheLookup.scala 256:38]
    _matchFoundReg_WIRE[2] <= UInt<1>("h0") @[cacheLookup.scala 256:38]
    _matchFoundReg_WIRE[3] <= UInt<1>("h0") @[cacheLookup.scala 256:38]
    reg matchFoundReg : UInt<1>[4], clock with :
      reset => (reset, _matchFoundReg_WIRE) @[cacheLookup.scala 256:30]
    wire resultWire : UInt<64>
    resultWire <= UInt<64>("h0")
    reg receivedCacheLine : UInt<512>, clock with :
      reset => (reset, UInt<512>("h0")) @[cacheLookup.scala 260:34]
    reg receivedResponse : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[cacheLookup.scala 261:33]
    reg writeBackCacheLine : UInt<512>, clock with :
      reset => (reset, UInt<512>("h0")) @[cacheLookup.scala 263:35]
    inst lfsr_prng of MaxPeriodFibonacciLFSR @[PRNG.scala 91:22]
    lfsr_prng.clock <= clock
    lfsr_prng.reset <= reset
    lfsr_prng.io.seed.valid <= UInt<1>("h0") @[PRNG.scala 92:24]
    lfsr_prng.io.seed.bits[0] is invalid @[PRNG.scala 93:23]
    lfsr_prng.io.seed.bits[1] is invalid @[PRNG.scala 93:23]
    lfsr_prng.io.increment <= UInt<1>("h1") @[PRNG.scala 94:23]
    node lfsr = cat(lfsr_prng.io.out[1], lfsr_prng.io.out[0]) @[PRNG.scala 95:17]
    node randomValue = rem(lfsr, UInt<3>("h4")) @[cacheLookup.scala 267:26]
    node _T_19 = eq(UInt<3>("h0"), cacheState) @[cacheLookup.scala 269:21]
    when _T_19 : @[cacheLookup.scala 269:21]
      delayCounter.reset <= UInt<1>("h1") @[cacheLookup.scala 271:26]
      node _cacheState_T = eq(isBranchFailWire, UInt<1>("h0")) @[cacheLookup.scala 272:45]
      node _cacheState_T_1 = and(requestValidWire, _cacheState_T) @[cacheLookup.scala 272:42]
      node _cacheState_T_2 = eq(commitFIFOFull, UInt<1>("h0")) @[cacheLookup.scala 272:68]
      node _cacheState_T_3 = and(_cacheState_T_1, _cacheState_T_2) @[cacheLookup.scala 272:65]
      node _cacheState_T_4 = mux(_cacheState_T_3, UInt<3>("h1"), UInt<3>("h0")) @[cacheLookup.scala 272:24]
      cacheState <= _cacheState_T_4 @[cacheLookup.scala 272:18]
    else :
      node _T_20 = eq(UInt<3>("h1"), cacheState) @[cacheLookup.scala 269:21]
      when _T_20 : @[cacheLookup.scala 269:21]
        node _countCompleteWire_T = sub(UInt<2>("h2"), UInt<1>("h1")) @[cacheLookup.scala 275:62]
        node _countCompleteWire_T_1 = tail(_countCompleteWire_T, 1) @[cacheLookup.scala 275:62]
        node countCompleteWire = eq(delayCounter.count, _countCompleteWire_T_1) @[cacheLookup.scala 275:50]
        node _delayCounter_incrm_T = eq(countCompleteWire, UInt<1>("h0")) @[cacheLookup.scala 276:29]
        delayCounter.incrm <= _delayCounter_incrm_T @[cacheLookup.scala 276:26]
        when countCompleteWire : @[cacheLookup.scala 278:31]
          node _tagChunks_T = bits(tagBRAM.readData, 23, 0) @[cacheLookup.scala 281:27]
          node _tagChunks_T_1 = bits(tagBRAM.readData, 47, 24) @[cacheLookup.scala 281:27]
          node _tagChunks_T_2 = bits(tagBRAM.readData, 71, 48) @[cacheLookup.scala 281:27]
          node _tagChunks_T_3 = bits(tagBRAM.readData, 95, 72) @[cacheLookup.scala 281:27]
          wire tagChunks : UInt<24>[4] @[cacheLookup.scala 280:32]
          tagChunks[0] <= _tagChunks_T @[cacheLookup.scala 280:32]
          tagChunks[1] <= _tagChunks_T_1 @[cacheLookup.scala 280:32]
          tagChunks[2] <= _tagChunks_T_2 @[cacheLookup.scala 280:32]
          tagChunks[3] <= _tagChunks_T_3 @[cacheLookup.scala 280:32]
          wire _matchFoundVec_WIRE : UInt<1>[4] @[cacheLookup.scala 284:48]
          _matchFoundVec_WIRE[0] <= UInt<1>("h0") @[cacheLookup.scala 284:48]
          _matchFoundVec_WIRE[1] <= UInt<1>("h0") @[cacheLookup.scala 284:48]
          _matchFoundVec_WIRE[2] <= UInt<1>("h0") @[cacheLookup.scala 284:48]
          _matchFoundVec_WIRE[3] <= UInt<1>("h0") @[cacheLookup.scala 284:48]
          wire matchFoundVec : UInt<1>[4]
          matchFoundVec <= _matchFoundVec_WIRE
          node _matchFoundVec_0_T = bits(tagChunks[0], 18, 0) @[cacheLookup.scala 286:44]
          node _matchFoundVec_0_T_1 = bits(inputBuffer.address, 31, 13) @[cacheLookup.scala 287:52]
          node _matchFoundVec_0_T_2 = eq(_matchFoundVec_0_T, _matchFoundVec_0_T_1) @[cacheLookup.scala 287:29]
          matchFoundVec[0] <= _matchFoundVec_0_T_2 @[cacheLookup.scala 286:28]
          node _matchFoundVec_1_T = bits(tagChunks[1], 18, 0) @[cacheLookup.scala 286:44]
          node _matchFoundVec_1_T_1 = bits(inputBuffer.address, 31, 13) @[cacheLookup.scala 287:52]
          node _matchFoundVec_1_T_2 = eq(_matchFoundVec_1_T, _matchFoundVec_1_T_1) @[cacheLookup.scala 287:29]
          matchFoundVec[1] <= _matchFoundVec_1_T_2 @[cacheLookup.scala 286:28]
          node _matchFoundVec_2_T = bits(tagChunks[2], 18, 0) @[cacheLookup.scala 286:44]
          node _matchFoundVec_2_T_1 = bits(inputBuffer.address, 31, 13) @[cacheLookup.scala 287:52]
          node _matchFoundVec_2_T_2 = eq(_matchFoundVec_2_T, _matchFoundVec_2_T_1) @[cacheLookup.scala 287:29]
          matchFoundVec[2] <= _matchFoundVec_2_T_2 @[cacheLookup.scala 286:28]
          node _matchFoundVec_3_T = bits(tagChunks[3], 18, 0) @[cacheLookup.scala 286:44]
          node _matchFoundVec_3_T_1 = bits(inputBuffer.address, 31, 13) @[cacheLookup.scala 287:52]
          node _matchFoundVec_3_T_2 = eq(_matchFoundVec_3_T, _matchFoundVec_3_T_1) @[cacheLookup.scala 287:29]
          matchFoundVec[3] <= _matchFoundVec_3_T_2 @[cacheLookup.scala 286:28]
          node _hitTagWire_T = mux(matchFoundVec[2], UInt<2>("h2"), UInt<2>("h3")) @[Mux.scala 47:70]
          node _hitTagWire_T_1 = mux(matchFoundVec[1], UInt<1>("h1"), _hitTagWire_T) @[Mux.scala 47:70]
          node _hitTagWire_T_2 = mux(matchFoundVec[0], UInt<1>("h0"), _hitTagWire_T_1) @[Mux.scala 47:70]
          wire hitTagWire : UInt
          hitTagWire <= _hitTagWire_T_2
          node _validBitWire_T = or(hitTagWire, UInt<2>("h0"))
          node _validBitWire_T_1 = bits(_validBitWire_T, 1, 0)
          node _validBitWire_T_2 = bits(tagChunks[_validBitWire_T_1], 19, 19) @[cacheLookup.scala 290:58]
          wire validBitWire : UInt<1>
          validBitWire <= _validBitWire_T_2
          node _shareBitWire_T = or(hitTagWire, UInt<2>("h0"))
          node _shareBitWire_T_1 = bits(_shareBitWire_T, 1, 0)
          node _shareBitWire_T_2 = bits(tagChunks[_shareBitWire_T_1], 21, 21) @[cacheLookup.scala 291:58]
          wire shareBitWire : UInt<1>
          shareBitWire <= _shareBitWire_T_2
          node _isMissWire_T = or(matchFoundVec[0], matchFoundVec[1]) @[cacheLookup.scala 292:51]
          node _isMissWire_T_1 = or(_isMissWire_T, matchFoundVec[2]) @[cacheLookup.scala 292:51]
          node _isMissWire_T_2 = or(_isMissWire_T_1, matchFoundVec[3]) @[cacheLookup.scala 292:51]
          node _isMissWire_T_3 = and(_isMissWire_T_2, validBitWire) @[cacheLookup.scala 292:56]
          node isMissWire = eq(_isMissWire_T_3, UInt<1>("h0")) @[cacheLookup.scala 292:26]
          matchFoundReg <= matchFoundVec @[cacheLookup.scala 294:23]
          when isCoherentWire : @[cacheLookup.scala 296:29]
            cacheState <= UInt<3>("h6") @[cacheLookup.scala 297:22]
          else :
            when isMissWire : @[cacheLookup.scala 299:27]
              cacheState <= UInt<3>("h4") @[cacheLookup.scala 300:24]
            else :
              when isLoadWire : @[cacheLookup.scala 302:29]
                cacheState <= UInt<3>("h2") @[cacheLookup.scala 303:26]
              else :
                when shareBitWire : @[cacheLookup.scala 305:33]
                  cacheState <= UInt<3>("h4") @[cacheLookup.scala 306:28]
                else :
                  node _cacheState_T_5 = mux(isSCWire, UInt<3>("h2"), UInt<3>("h3")) @[cacheLookup.scala 308:34]
                  cacheState <= _cacheState_T_5 @[cacheLookup.scala 308:28]
      else :
        node _T_21 = eq(UInt<3>("h2"), cacheState) @[cacheLookup.scala 269:21]
        when _T_21 : @[cacheLookup.scala 269:21]
          node _tagChunks_T_4 = bits(tagBRAM.readData, 23, 0) @[cacheLookup.scala 318:25]
          node _tagChunks_T_5 = bits(tagBRAM.readData, 47, 24) @[cacheLookup.scala 318:25]
          node _tagChunks_T_6 = bits(tagBRAM.readData, 71, 48) @[cacheLookup.scala 318:25]
          node _tagChunks_T_7 = bits(tagBRAM.readData, 95, 72) @[cacheLookup.scala 318:25]
          wire tagChunks_1 : UInt<24>[4] @[cacheLookup.scala 317:30]
          tagChunks_1[0] <= _tagChunks_T_4 @[cacheLookup.scala 317:30]
          tagChunks_1[1] <= _tagChunks_T_5 @[cacheLookup.scala 317:30]
          tagChunks_1[2] <= _tagChunks_T_6 @[cacheLookup.scala 317:30]
          tagChunks_1[3] <= _tagChunks_T_7 @[cacheLookup.scala 317:30]
          node _hitTagWire_T_3 = mux(matchFoundReg[2], UInt<2>("h2"), UInt<2>("h3")) @[Mux.scala 47:70]
          node _hitTagWire_T_4 = mux(matchFoundReg[1], UInt<1>("h1"), _hitTagWire_T_3) @[Mux.scala 47:70]
          node _hitTagWire_T_5 = mux(matchFoundReg[0], UInt<1>("h0"), _hitTagWire_T_4) @[Mux.scala 47:70]
          wire hitTagWire_1 : UInt
          hitTagWire_1 <= _hitTagWire_T_5
          node _validBitWire_T_3 = or(hitTagWire_1, UInt<2>("h0"))
          node _validBitWire_T_4 = bits(_validBitWire_T_3, 1, 0)
          node _validBitWire_T_5 = bits(tagChunks_1[_validBitWire_T_4], 19, 19) @[cacheLookup.scala 321:56]
          wire validBitWire_1 : UInt<1>
          validBitWire_1 <= _validBitWire_T_5
          node _isMissWire_T_4 = or(matchFoundReg[0], matchFoundReg[1]) @[cacheLookup.scala 322:49]
          node _isMissWire_T_5 = or(_isMissWire_T_4, matchFoundReg[2]) @[cacheLookup.scala 322:49]
          node _isMissWire_T_6 = or(_isMissWire_T_5, matchFoundReg[3]) @[cacheLookup.scala 322:49]
          node _isMissWire_T_7 = and(_isMissWire_T_6, validBitWire_1) @[cacheLookup.scala 322:54]
          node isMissWire_1 = eq(_isMissWire_T_7, UInt<1>("h0")) @[cacheLookup.scala 322:24]
          when isLRWire : @[cacheLookup.scala 324:21]
            reservationRegister.address <= inputBuffer.address @[cacheLookup.scala 325:37]
            reservationRegister.reserved <= UInt<1>("h1") @[cacheLookup.scala 326:38]
            node _reservationRegister_size_T = bits(inputBuffer.instruction, 12, 12) @[cacheLookup.scala 327:60]
            reservationRegister.size <= _reservationRegister_size_T @[cacheLookup.scala 327:34]
          node _cacheLineChoosen_T = mux(matchFoundReg[2], UInt<2>("h2"), UInt<2>("h3")) @[Mux.scala 47:70]
          node _cacheLineChoosen_T_1 = mux(matchFoundReg[1], UInt<1>("h1"), _cacheLineChoosen_T) @[Mux.scala 47:70]
          node _cacheLineChoosen_T_2 = mux(matchFoundReg[0], UInt<1>("h0"), _cacheLineChoosen_T_1) @[Mux.scala 47:70]
          node cacheLineChoosen = mux(isMissWire_1, receivedCacheLine, dataBRAMVec[_cacheLineChoosen_T_2].readData) @[cacheLookup.scala 331:33]
          node _doubleWordChunks_T = bits(cacheLineChoosen, 63, 0) @[cacheLookup.scala 335:25]
          node _doubleWordChunks_T_1 = bits(cacheLineChoosen, 127, 64) @[cacheLookup.scala 335:25]
          node _doubleWordChunks_T_2 = bits(cacheLineChoosen, 191, 128) @[cacheLookup.scala 335:25]
          node _doubleWordChunks_T_3 = bits(cacheLineChoosen, 255, 192) @[cacheLookup.scala 335:25]
          node _doubleWordChunks_T_4 = bits(cacheLineChoosen, 319, 256) @[cacheLookup.scala 335:25]
          node _doubleWordChunks_T_5 = bits(cacheLineChoosen, 383, 320) @[cacheLookup.scala 335:25]
          node _doubleWordChunks_T_6 = bits(cacheLineChoosen, 447, 384) @[cacheLookup.scala 335:25]
          node _doubleWordChunks_T_7 = bits(cacheLineChoosen, 511, 448) @[cacheLookup.scala 335:25]
          wire doubleWordChunks : UInt<64>[8] @[cacheLookup.scala 334:37]
          doubleWordChunks[0] <= _doubleWordChunks_T @[cacheLookup.scala 334:37]
          doubleWordChunks[1] <= _doubleWordChunks_T_1 @[cacheLookup.scala 334:37]
          doubleWordChunks[2] <= _doubleWordChunks_T_2 @[cacheLookup.scala 334:37]
          doubleWordChunks[3] <= _doubleWordChunks_T_3 @[cacheLookup.scala 334:37]
          doubleWordChunks[4] <= _doubleWordChunks_T_4 @[cacheLookup.scala 334:37]
          doubleWordChunks[5] <= _doubleWordChunks_T_5 @[cacheLookup.scala 334:37]
          doubleWordChunks[6] <= _doubleWordChunks_T_6 @[cacheLookup.scala 334:37]
          doubleWordChunks[7] <= _doubleWordChunks_T_7 @[cacheLookup.scala 334:37]
          node _doubleWordChoosen_T = bits(inputBuffer.address, 5, 3) @[cacheLookup.scala 337:67]
          node _shiftAmount_T = bits(inputBuffer.instruction, 13, 12) @[cacheLookup.scala 338:56]
          node shiftAmount = dshl(UInt<1>("h1"), _shiftAmount_T) @[cacheLookup.scala 338:30]
          node _section_T = mul(UInt<4>("h8"), shiftAmount) @[cacheLookup.scala 339:33]
          node _section_T_1 = dshl(UInt<1>("h1"), _section_T) @[cacheLookup.scala 339:26]
          node _section_T_2 = sub(_section_T_1, UInt<1>("h1")) @[cacheLookup.scala 339:48]
          node section = tail(_section_T_2, 1) @[cacheLookup.scala 339:48]
          node _byteChunks_T = bits(doubleWordChunks[_doubleWordChoosen_T], 7, 0) @[cacheLookup.scala 341:26]
          node _byteChunks_T_1 = bits(doubleWordChunks[_doubleWordChoosen_T], 15, 8) @[cacheLookup.scala 341:26]
          node _byteChunks_T_2 = bits(doubleWordChunks[_doubleWordChoosen_T], 23, 16) @[cacheLookup.scala 341:26]
          node _byteChunks_T_3 = bits(doubleWordChunks[_doubleWordChoosen_T], 31, 24) @[cacheLookup.scala 341:26]
          node _byteChunks_T_4 = bits(doubleWordChunks[_doubleWordChoosen_T], 39, 32) @[cacheLookup.scala 341:26]
          node _byteChunks_T_5 = bits(doubleWordChunks[_doubleWordChoosen_T], 47, 40) @[cacheLookup.scala 341:26]
          node _byteChunks_T_6 = bits(doubleWordChunks[_doubleWordChoosen_T], 55, 48) @[cacheLookup.scala 341:26]
          node _byteChunks_T_7 = bits(doubleWordChunks[_doubleWordChoosen_T], 63, 56) @[cacheLookup.scala 341:26]
          wire byteChunks : UInt<8>[8] @[cacheLookup.scala 340:31]
          byteChunks[0] <= _byteChunks_T @[cacheLookup.scala 340:31]
          byteChunks[1] <= _byteChunks_T_1 @[cacheLookup.scala 340:31]
          byteChunks[2] <= _byteChunks_T_2 @[cacheLookup.scala 340:31]
          byteChunks[3] <= _byteChunks_T_3 @[cacheLookup.scala 340:31]
          byteChunks[4] <= _byteChunks_T_4 @[cacheLookup.scala 340:31]
          byteChunks[5] <= _byteChunks_T_5 @[cacheLookup.scala 340:31]
          byteChunks[6] <= _byteChunks_T_6 @[cacheLookup.scala 340:31]
          byteChunks[7] <= _byteChunks_T_7 @[cacheLookup.scala 340:31]
          node _byteChoosed_T = bits(inputBuffer.address, 2, 0) @[cacheLookup.scala 343:59]
          node _halfwordChoosed_T = bits(inputBuffer.address, 2, 1) @[cacheLookup.scala 344:69]
          node _halfwordChoosed_T_1 = mul(UInt<2>("h2"), _halfwordChoosed_T) @[cacheLookup.scala 344:48]
          node _halfwordChoosed_T_2 = add(_halfwordChoosed_T_1, UInt<1>("h1")) @[cacheLookup.scala 344:75]
          node _halfwordChoosed_T_3 = tail(_halfwordChoosed_T_2, 1) @[cacheLookup.scala 344:75]
          node _halfwordChoosed_T_4 = bits(_halfwordChoosed_T_3, 2, 0)
          node _halfwordChoosed_T_5 = bits(inputBuffer.address, 2, 1) @[cacheLookup.scala 344:118]
          node _halfwordChoosed_T_6 = mul(UInt<2>("h2"), _halfwordChoosed_T_5) @[cacheLookup.scala 344:97]
          node _halfwordChoosed_T_7 = bits(_halfwordChoosed_T_6, 2, 0)
          node halfwordChoosed = cat(byteChunks[_halfwordChoosed_T_4], byteChunks[_halfwordChoosed_T_7]) @[Cat.scala 33:92]
          node _wordChoosed_T = bits(inputBuffer.address, 2, 2) @[cacheLookup.scala 345:69]
          node _wordChoosed_T_1 = mul(UInt<3>("h4"), _wordChoosed_T) @[cacheLookup.scala 345:48]
          node _wordChoosed_T_2 = add(_wordChoosed_T_1, UInt<2>("h3")) @[cacheLookup.scala 345:73]
          node _wordChoosed_T_3 = tail(_wordChoosed_T_2, 1) @[cacheLookup.scala 345:73]
          node _wordChoosed_T_4 = bits(_wordChoosed_T_3, 2, 0)
          node _wordChoosed_T_5 = bits(inputBuffer.address, 2, 2) @[cacheLookup.scala 345:116]
          node _wordChoosed_T_6 = mul(UInt<3>("h4"), _wordChoosed_T_5) @[cacheLookup.scala 345:95]
          node _wordChoosed_T_7 = add(_wordChoosed_T_6, UInt<2>("h2")) @[cacheLookup.scala 345:120]
          node _wordChoosed_T_8 = tail(_wordChoosed_T_7, 1) @[cacheLookup.scala 345:120]
          node _wordChoosed_T_9 = bits(_wordChoosed_T_8, 2, 0)
          node _wordChoosed_T_10 = bits(inputBuffer.address, 2, 2) @[cacheLookup.scala 346:69]
          node _wordChoosed_T_11 = mul(UInt<3>("h4"), _wordChoosed_T_10) @[cacheLookup.scala 346:48]
          node _wordChoosed_T_12 = add(_wordChoosed_T_11, UInt<1>("h1")) @[cacheLookup.scala 346:73]
          node _wordChoosed_T_13 = tail(_wordChoosed_T_12, 1) @[cacheLookup.scala 346:73]
          node _wordChoosed_T_14 = bits(_wordChoosed_T_13, 2, 0)
          node _wordChoosed_T_15 = bits(inputBuffer.address, 2, 2) @[cacheLookup.scala 346:116]
          node _wordChoosed_T_16 = mul(UInt<3>("h4"), _wordChoosed_T_15) @[cacheLookup.scala 346:95]
          node _wordChoosed_T_17 = bits(_wordChoosed_T_16, 2, 0)
          node wordChoosed_lo = cat(byteChunks[_wordChoosed_T_14], byteChunks[_wordChoosed_T_17]) @[Cat.scala 33:92]
          node wordChoosed_hi = cat(byteChunks[_wordChoosed_T_4], byteChunks[_wordChoosed_T_9]) @[Cat.scala 33:92]
          node wordChoosed = cat(wordChoosed_hi, wordChoosed_lo) @[Cat.scala 33:92]
          node _T_22 = bits(inputBuffer.instruction, 13, 12) @[cacheLookup.scala 348:37]
          node _T_23 = eq(UInt<1>("h0"), _T_22) @[cacheLookup.scala 348:46]
          when _T_23 : @[cacheLookup.scala 348:46]
            node _resultWire_T = bits(inputBuffer.instruction, 14, 14) @[cacheLookup.scala 349:62]
            node _resultWire_T_1 = bits(byteChunks[_byteChoosed_T], 7, 7) @[cacheLookup.scala 350:75]
            node _resultWire_T_2 = bits(_resultWire_T_1, 0, 0) @[Bitwise.scala 77:15]
            node _resultWire_T_3 = mux(_resultWire_T_2, UInt<56>("hffffffffffffff"), UInt<56>("h0")) @[Bitwise.scala 77:12]
            node _resultWire_T_4 = cat(_resultWire_T_3, byteChunks[_byteChoosed_T]) @[Cat.scala 33:92]
            node _resultWire_T_5 = mux(_resultWire_T, byteChunks[_byteChoosed_T], _resultWire_T_4) @[cacheLookup.scala 349:38]
            resultWire <= _resultWire_T_5 @[cacheLookup.scala 349:32]
          else :
            node _T_24 = eq(UInt<1>("h1"), _T_22) @[cacheLookup.scala 348:46]
            when _T_24 : @[cacheLookup.scala 348:46]
              node _resultWire_T_6 = bits(inputBuffer.instruction, 14, 14) @[cacheLookup.scala 351:62]
              node _resultWire_T_7 = bits(halfwordChoosed, 15, 15) @[cacheLookup.scala 352:79]
              node _resultWire_T_8 = bits(_resultWire_T_7, 0, 0) @[Bitwise.scala 77:15]
              node _resultWire_T_9 = mux(_resultWire_T_8, UInt<48>("hffffffffffff"), UInt<48>("h0")) @[Bitwise.scala 77:12]
              node _resultWire_T_10 = cat(_resultWire_T_9, halfwordChoosed) @[Cat.scala 33:92]
              node _resultWire_T_11 = mux(_resultWire_T_6, halfwordChoosed, _resultWire_T_10) @[cacheLookup.scala 351:38]
              resultWire <= _resultWire_T_11 @[cacheLookup.scala 351:32]
            else :
              node _T_25 = eq(UInt<2>("h2"), _T_22) @[cacheLookup.scala 348:46]
              when _T_25 : @[cacheLookup.scala 348:46]
                node _resultWire_T_12 = bits(inputBuffer.instruction, 14, 14) @[cacheLookup.scala 353:62]
                node _resultWire_T_13 = bits(wordChoosed, 31, 31) @[cacheLookup.scala 354:75]
                node _resultWire_T_14 = bits(_resultWire_T_13, 0, 0) @[Bitwise.scala 77:15]
                node _resultWire_T_15 = mux(_resultWire_T_14, UInt<32>("hffffffff"), UInt<32>("h0")) @[Bitwise.scala 77:12]
                node _resultWire_T_16 = cat(_resultWire_T_15, wordChoosed) @[Cat.scala 33:92]
                node _resultWire_T_17 = mux(_resultWire_T_12, wordChoosed, _resultWire_T_16) @[cacheLookup.scala 353:38]
                resultWire <= _resultWire_T_17 @[cacheLookup.scala 353:32]
              else :
                node _T_26 = eq(UInt<2>("h3"), _T_22) @[cacheLookup.scala 348:46]
                when _T_26 : @[cacheLookup.scala 348:46]
                  node _resultWire_T_18 = bits(inputBuffer.instruction, 14, 14) @[cacheLookup.scala 355:62]
                  node _resultWire_T_19 = mux(_resultWire_T_18, UInt<1>("h0"), doubleWordChunks[_doubleWordChoosen_T]) @[cacheLookup.scala 355:38]
                  resultWire <= _resultWire_T_19 @[cacheLookup.scala 355:32]
          when isSCWire : @[cacheLookup.scala 358:21]
            node _resultWire_T_20 = mux(reservationRegister.reserved, UInt<1>("h0"), UInt<1>("h1")) @[cacheLookup.scala 359:26]
            resultWire <= _resultWire_T_20 @[cacheLookup.scala 359:20]
          when responseOut.ready : @[cacheLookup.scala 362:30]
            node _cacheState_T_6 = eq(reservationRegister.reserved, UInt<1>("h0")) @[cacheLookup.scala 363:39]
            node _cacheState_T_7 = and(isSCWire, _cacheState_T_6) @[cacheLookup.scala 363:36]
            node _cacheState_T_8 = mux(_cacheState_T_7, UInt<3>("h0"), UInt<3>("h3")) @[cacheLookup.scala 363:26]
            cacheState <= _cacheState_T_8 @[cacheLookup.scala 363:20]
          else :
            cacheState <= UInt<3>("h2") @[cacheLookup.scala 365:20]
        else :
          node _T_27 = eq(UInt<3>("h3"), cacheState) @[cacheLookup.scala 269:21]
          when _T_27 : @[cacheLookup.scala 269:21]
            node _tagChunks_T_8 = bits(tagBRAM.readData, 23, 0) @[cacheLookup.scala 371:25]
            node _tagChunks_T_9 = bits(tagBRAM.readData, 47, 24) @[cacheLookup.scala 371:25]
            node _tagChunks_T_10 = bits(tagBRAM.readData, 71, 48) @[cacheLookup.scala 371:25]
            node _tagChunks_T_11 = bits(tagBRAM.readData, 95, 72) @[cacheLookup.scala 371:25]
            wire tagChunks_2 : UInt<24>[4] @[cacheLookup.scala 370:30]
            tagChunks_2[0] <= _tagChunks_T_8 @[cacheLookup.scala 370:30]
            tagChunks_2[1] <= _tagChunks_T_9 @[cacheLookup.scala 370:30]
            tagChunks_2[2] <= _tagChunks_T_10 @[cacheLookup.scala 370:30]
            tagChunks_2[3] <= _tagChunks_T_11 @[cacheLookup.scala 370:30]
            node _newtagChunks_T = bits(tagBRAM.readData, 23, 0) @[cacheLookup.scala 374:25]
            node _newtagChunks_T_1 = bits(tagBRAM.readData, 47, 24) @[cacheLookup.scala 374:25]
            node _newtagChunks_T_2 = bits(tagBRAM.readData, 71, 48) @[cacheLookup.scala 374:25]
            node _newtagChunks_T_3 = bits(tagBRAM.readData, 95, 72) @[cacheLookup.scala 374:25]
            wire newtagChunks : UInt<24>[4] @[cacheLookup.scala 373:33]
            newtagChunks[0] <= _newtagChunks_T @[cacheLookup.scala 373:33]
            newtagChunks[1] <= _newtagChunks_T_1 @[cacheLookup.scala 373:33]
            newtagChunks[2] <= _newtagChunks_T_2 @[cacheLookup.scala 373:33]
            newtagChunks[3] <= _newtagChunks_T_3 @[cacheLookup.scala 373:33]
            node _hitTagWire_T_6 = mux(matchFoundReg[2], UInt<2>("h2"), UInt<2>("h3")) @[Mux.scala 47:70]
            node _hitTagWire_T_7 = mux(matchFoundReg[1], UInt<1>("h1"), _hitTagWire_T_6) @[Mux.scala 47:70]
            node _hitTagWire_T_8 = mux(matchFoundReg[0], UInt<1>("h0"), _hitTagWire_T_7) @[Mux.scala 47:70]
            wire hitTagWire_2 : UInt
            hitTagWire_2 <= _hitTagWire_T_8
            node _addrWire_T = or(hitTagWire_2, UInt<2>("h0"))
            node _addrWire_T_1 = bits(_addrWire_T, 1, 0)
            node _addrWire_T_2 = bits(tagChunks_2[_addrWire_T_1], 18, 0) @[cacheLookup.scala 378:52]
            wire addrWire : UInt
            addrWire <= _addrWire_T_2
            node _validBitWire_T_6 = or(hitTagWire_2, UInt<2>("h0"))
            node _validBitWire_T_7 = bits(_validBitWire_T_6, 1, 0)
            node _validBitWire_T_8 = bits(tagChunks_2[_validBitWire_T_7], 19, 19) @[cacheLookup.scala 379:56]
            wire validBitWire_2 : UInt<1>
            validBitWire_2 <= _validBitWire_T_8
            node _dirtyBitWire_T = or(hitTagWire_2, UInt<2>("h0"))
            node _dirtyBitWire_T_1 = bits(_dirtyBitWire_T, 1, 0)
            node _dirtyBitWire_T_2 = bits(tagChunks_2[_dirtyBitWire_T_1], 20, 20) @[cacheLookup.scala 380:56]
            wire dirtyBitWire : UInt<1>
            dirtyBitWire <= _dirtyBitWire_T_2
            node _shareBitWire_T_3 = or(hitTagWire_2, UInt<2>("h0"))
            node _shareBitWire_T_4 = bits(_shareBitWire_T_3, 1, 0)
            node _shareBitWire_T_5 = bits(tagChunks_2[_shareBitWire_T_4], 21, 21) @[cacheLookup.scala 381:56]
            wire shareBitWire_1 : UInt<1>
            shareBitWire_1 <= _shareBitWire_T_5
            node _PLRUBitWire_T = or(hitTagWire_2, UInt<2>("h0"))
            node _PLRUBitWire_T_1 = bits(_PLRUBitWire_T, 1, 0)
            node _PLRUBitWire_T_2 = bits(tagChunks_2[_PLRUBitWire_T_1], 22, 22) @[cacheLookup.scala 382:55]
            wire PLRUBitWire : UInt<1>
            PLRUBitWire <= _PLRUBitWire_T_2
            node _isMissWire_T_8 = or(matchFoundReg[0], matchFoundReg[1]) @[cacheLookup.scala 384:49]
            node _isMissWire_T_9 = or(_isMissWire_T_8, matchFoundReg[2]) @[cacheLookup.scala 384:49]
            node _isMissWire_T_10 = or(_isMissWire_T_9, matchFoundReg[3]) @[cacheLookup.scala 384:49]
            node _isMissWire_T_11 = and(_isMissWire_T_10, validBitWire_2) @[cacheLookup.scala 384:54]
            node isMissWire_2 = eq(_isMissWire_T_11, UInt<1>("h0")) @[cacheLookup.scala 384:24]
            node _permissionMiss_T = eq(isMissWire_2, UInt<1>("h0")) @[cacheLookup.scala 385:28]
            node permissionMiss = and(_permissionMiss_T, shareBitWire_1) @[cacheLookup.scala 385:40]
            node _newAddrWire_T = or(hitTagWire_2, UInt<2>("h0"))
            node _newAddrWire_T_1 = bits(_newAddrWire_T, 1, 0)
            node _newAddrWire_T_2 = bits(tagChunks_2[_newAddrWire_T_1], 18, 0) @[cacheLookup.scala 388:56]
            wire newAddrWire : UInt
            newAddrWire <= _newAddrWire_T_2
            node _newValidBitWire_T = or(hitTagWire_2, UInt<2>("h0"))
            node _newValidBitWire_T_1 = bits(_newValidBitWire_T, 1, 0)
            node _newValidBitWire_T_2 = bits(tagChunks_2[_newValidBitWire_T_1], 19, 19) @[cacheLookup.scala 389:60]
            wire newValidBitWire : UInt<1>
            newValidBitWire <= _newValidBitWire_T_2
            node _newDirtyBitWire_T = or(hitTagWire_2, UInt<2>("h0"))
            node _newDirtyBitWire_T_1 = bits(_newDirtyBitWire_T, 1, 0)
            node _newDirtyBitWire_T_2 = bits(tagChunks_2[_newDirtyBitWire_T_1], 20, 20) @[cacheLookup.scala 390:60]
            wire newDirtyBitWire : UInt<1>
            newDirtyBitWire <= _newDirtyBitWire_T_2
            node _newShareBitWire_T = or(hitTagWire_2, UInt<2>("h0"))
            node _newShareBitWire_T_1 = bits(_newShareBitWire_T, 1, 0)
            node _newShareBitWire_T_2 = bits(tagChunks_2[_newShareBitWire_T_1], 21, 21) @[cacheLookup.scala 391:60]
            wire newShareBitWire : UInt<1>
            newShareBitWire <= _newShareBitWire_T_2
            node _newPLRUBitWire_T = or(hitTagWire_2, UInt<2>("h0"))
            node _newPLRUBitWire_T_1 = bits(_newPLRUBitWire_T, 1, 0)
            node _newPLRUBitWire_T_2 = bits(tagChunks_2[_newPLRUBitWire_T_1], 22, 22) @[cacheLookup.scala 392:59]
            wire newPLRUBitWire : UInt<1>
            newPLRUBitWire <= _newPLRUBitWire_T_2
            node _cacheLineChoosen_T_3 = mux(matchFoundReg[2], UInt<2>("h2"), UInt<2>("h3")) @[Mux.scala 47:70]
            node _cacheLineChoosen_T_4 = mux(matchFoundReg[1], UInt<1>("h1"), _cacheLineChoosen_T_3) @[Mux.scala 47:70]
            node _cacheLineChoosen_T_5 = mux(matchFoundReg[0], UInt<1>("h0"), _cacheLineChoosen_T_4) @[Mux.scala 47:70]
            node cacheLineChoosen_1 = mux(isMissWire_2, receivedCacheLine, dataBRAMVec[_cacheLineChoosen_T_5].readData) @[cacheLookup.scala 395:33]
            node _storeChunks_T = bits(cacheLineChoosen_1, 31, 0) @[cacheLookup.scala 397:25]
            node _storeChunks_T_1 = bits(cacheLineChoosen_1, 63, 32) @[cacheLookup.scala 397:25]
            node _storeChunks_T_2 = bits(cacheLineChoosen_1, 95, 64) @[cacheLookup.scala 397:25]
            node _storeChunks_T_3 = bits(cacheLineChoosen_1, 127, 96) @[cacheLookup.scala 397:25]
            node _storeChunks_T_4 = bits(cacheLineChoosen_1, 159, 128) @[cacheLookup.scala 397:25]
            node _storeChunks_T_5 = bits(cacheLineChoosen_1, 191, 160) @[cacheLookup.scala 397:25]
            node _storeChunks_T_6 = bits(cacheLineChoosen_1, 223, 192) @[cacheLookup.scala 397:25]
            node _storeChunks_T_7 = bits(cacheLineChoosen_1, 255, 224) @[cacheLookup.scala 397:25]
            node _storeChunks_T_8 = bits(cacheLineChoosen_1, 287, 256) @[cacheLookup.scala 397:25]
            node _storeChunks_T_9 = bits(cacheLineChoosen_1, 319, 288) @[cacheLookup.scala 397:25]
            node _storeChunks_T_10 = bits(cacheLineChoosen_1, 351, 320) @[cacheLookup.scala 397:25]
            node _storeChunks_T_11 = bits(cacheLineChoosen_1, 383, 352) @[cacheLookup.scala 397:25]
            node _storeChunks_T_12 = bits(cacheLineChoosen_1, 415, 384) @[cacheLookup.scala 397:25]
            node _storeChunks_T_13 = bits(cacheLineChoosen_1, 447, 416) @[cacheLookup.scala 397:25]
            node _storeChunks_T_14 = bits(cacheLineChoosen_1, 479, 448) @[cacheLookup.scala 397:25]
            node _storeChunks_T_15 = bits(cacheLineChoosen_1, 511, 480) @[cacheLookup.scala 397:25]
            wire storeChunks : UInt<32>[16] @[cacheLookup.scala 396:32]
            storeChunks[0] <= _storeChunks_T @[cacheLookup.scala 396:32]
            storeChunks[1] <= _storeChunks_T_1 @[cacheLookup.scala 396:32]
            storeChunks[2] <= _storeChunks_T_2 @[cacheLookup.scala 396:32]
            storeChunks[3] <= _storeChunks_T_3 @[cacheLookup.scala 396:32]
            storeChunks[4] <= _storeChunks_T_4 @[cacheLookup.scala 396:32]
            storeChunks[5] <= _storeChunks_T_5 @[cacheLookup.scala 396:32]
            storeChunks[6] <= _storeChunks_T_6 @[cacheLookup.scala 396:32]
            storeChunks[7] <= _storeChunks_T_7 @[cacheLookup.scala 396:32]
            storeChunks[8] <= _storeChunks_T_8 @[cacheLookup.scala 396:32]
            storeChunks[9] <= _storeChunks_T_9 @[cacheLookup.scala 396:32]
            storeChunks[10] <= _storeChunks_T_10 @[cacheLookup.scala 396:32]
            storeChunks[11] <= _storeChunks_T_11 @[cacheLookup.scala 396:32]
            storeChunks[12] <= _storeChunks_T_12 @[cacheLookup.scala 396:32]
            storeChunks[13] <= _storeChunks_T_13 @[cacheLookup.scala 396:32]
            storeChunks[14] <= _storeChunks_T_14 @[cacheLookup.scala 396:32]
            storeChunks[15] <= _storeChunks_T_15 @[cacheLookup.scala 396:32]
            node _newstoreChunks_T = bits(cacheLineChoosen_1, 31, 0) @[cacheLookup.scala 400:25]
            node _newstoreChunks_T_1 = bits(cacheLineChoosen_1, 63, 32) @[cacheLookup.scala 400:25]
            node _newstoreChunks_T_2 = bits(cacheLineChoosen_1, 95, 64) @[cacheLookup.scala 400:25]
            node _newstoreChunks_T_3 = bits(cacheLineChoosen_1, 127, 96) @[cacheLookup.scala 400:25]
            node _newstoreChunks_T_4 = bits(cacheLineChoosen_1, 159, 128) @[cacheLookup.scala 400:25]
            node _newstoreChunks_T_5 = bits(cacheLineChoosen_1, 191, 160) @[cacheLookup.scala 400:25]
            node _newstoreChunks_T_6 = bits(cacheLineChoosen_1, 223, 192) @[cacheLookup.scala 400:25]
            node _newstoreChunks_T_7 = bits(cacheLineChoosen_1, 255, 224) @[cacheLookup.scala 400:25]
            node _newstoreChunks_T_8 = bits(cacheLineChoosen_1, 287, 256) @[cacheLookup.scala 400:25]
            node _newstoreChunks_T_9 = bits(cacheLineChoosen_1, 319, 288) @[cacheLookup.scala 400:25]
            node _newstoreChunks_T_10 = bits(cacheLineChoosen_1, 351, 320) @[cacheLookup.scala 400:25]
            node _newstoreChunks_T_11 = bits(cacheLineChoosen_1, 383, 352) @[cacheLookup.scala 400:25]
            node _newstoreChunks_T_12 = bits(cacheLineChoosen_1, 415, 384) @[cacheLookup.scala 400:25]
            node _newstoreChunks_T_13 = bits(cacheLineChoosen_1, 447, 416) @[cacheLookup.scala 400:25]
            node _newstoreChunks_T_14 = bits(cacheLineChoosen_1, 479, 448) @[cacheLookup.scala 400:25]
            node _newstoreChunks_T_15 = bits(cacheLineChoosen_1, 511, 480) @[cacheLookup.scala 400:25]
            wire newstoreChunks : UInt<32>[16] @[cacheLookup.scala 399:35]
            newstoreChunks[0] <= _newstoreChunks_T @[cacheLookup.scala 399:35]
            newstoreChunks[1] <= _newstoreChunks_T_1 @[cacheLookup.scala 399:35]
            newstoreChunks[2] <= _newstoreChunks_T_2 @[cacheLookup.scala 399:35]
            newstoreChunks[3] <= _newstoreChunks_T_3 @[cacheLookup.scala 399:35]
            newstoreChunks[4] <= _newstoreChunks_T_4 @[cacheLookup.scala 399:35]
            newstoreChunks[5] <= _newstoreChunks_T_5 @[cacheLookup.scala 399:35]
            newstoreChunks[6] <= _newstoreChunks_T_6 @[cacheLookup.scala 399:35]
            newstoreChunks[7] <= _newstoreChunks_T_7 @[cacheLookup.scala 399:35]
            newstoreChunks[8] <= _newstoreChunks_T_8 @[cacheLookup.scala 399:35]
            newstoreChunks[9] <= _newstoreChunks_T_9 @[cacheLookup.scala 399:35]
            newstoreChunks[10] <= _newstoreChunks_T_10 @[cacheLookup.scala 399:35]
            newstoreChunks[11] <= _newstoreChunks_T_11 @[cacheLookup.scala 399:35]
            newstoreChunks[12] <= _newstoreChunks_T_12 @[cacheLookup.scala 399:35]
            newstoreChunks[13] <= _newstoreChunks_T_13 @[cacheLookup.scala 399:35]
            newstoreChunks[14] <= _newstoreChunks_T_14 @[cacheLookup.scala 399:35]
            newstoreChunks[15] <= _newstoreChunks_T_15 @[cacheLookup.scala 399:35]
            node _wordStore_T = bits(inputBuffer.address, 5, 2) @[cacheLookup.scala 402:54]
            node _doubleWordStore_T = bits(inputBuffer.address, 5, 2) @[cacheLookup.scala 403:64]
            node _doubleWordStore_T_1 = add(_doubleWordStore_T, UInt<1>("h1")) @[cacheLookup.scala 403:69]
            node _doubleWordStore_T_2 = tail(_doubleWordStore_T_1, 1) @[cacheLookup.scala 403:69]
            node _doubleWordStore_T_3 = bits(inputBuffer.address, 5, 2) @[cacheLookup.scala 403:107]
            node doubleWordStore = cat(storeChunks[_doubleWordStore_T_2], storeChunks[_doubleWordStore_T_3]) @[Cat.scala 33:92]
            node _storeByteChunks_T = bits(doubleWordStore, 7, 0) @[cacheLookup.scala 404:69]
            node _storeByteChunks_T_1 = bits(doubleWordStore, 15, 8) @[cacheLookup.scala 404:69]
            node _storeByteChunks_T_2 = bits(doubleWordStore, 23, 16) @[cacheLookup.scala 404:69]
            node _storeByteChunks_T_3 = bits(doubleWordStore, 31, 24) @[cacheLookup.scala 404:69]
            node _storeByteChunks_T_4 = bits(doubleWordStore, 39, 32) @[cacheLookup.scala 404:69]
            node _storeByteChunks_T_5 = bits(doubleWordStore, 47, 40) @[cacheLookup.scala 404:69]
            node _storeByteChunks_T_6 = bits(doubleWordStore, 55, 48) @[cacheLookup.scala 404:69]
            node _storeByteChunks_T_7 = bits(doubleWordStore, 63, 56) @[cacheLookup.scala 404:69]
            wire storeByteChunks : UInt<8>[8] @[cacheLookup.scala 404:48]
            storeByteChunks[0] <= _storeByteChunks_T @[cacheLookup.scala 404:48]
            storeByteChunks[1] <= _storeByteChunks_T_1 @[cacheLookup.scala 404:48]
            storeByteChunks[2] <= _storeByteChunks_T_2 @[cacheLookup.scala 404:48]
            storeByteChunks[3] <= _storeByteChunks_T_3 @[cacheLookup.scala 404:48]
            storeByteChunks[4] <= _storeByteChunks_T_4 @[cacheLookup.scala 404:48]
            storeByteChunks[5] <= _storeByteChunks_T_5 @[cacheLookup.scala 404:48]
            storeByteChunks[6] <= _storeByteChunks_T_6 @[cacheLookup.scala 404:48]
            storeByteChunks[7] <= _storeByteChunks_T_7 @[cacheLookup.scala 404:48]
            wire result32 : UInt<32>
            result32 <= UInt<32>("h0")
            wire result64 : UInt<64>
            result64 <= UInt<64>("h0")
            node _PLRUSetWire_T = bits(tagChunks_2[0], 22, 22) @[cacheLookup.scala 410:70]
            node _PLRUSetWire_T_1 = bits(tagChunks_2[1], 22, 22) @[cacheLookup.scala 410:70]
            node _PLRUSetWire_T_2 = bits(tagChunks_2[2], 22, 22) @[cacheLookup.scala 410:70]
            node _PLRUSetWire_T_3 = bits(tagChunks_2[3], 22, 22) @[cacheLookup.scala 410:70]
            wire _PLRUSetWire_WIRE : UInt<1>[4] @[cacheLookup.scala 410:41]
            _PLRUSetWire_WIRE[0] <= _PLRUSetWire_T @[cacheLookup.scala 410:41]
            _PLRUSetWire_WIRE[1] <= _PLRUSetWire_T_1 @[cacheLookup.scala 410:41]
            _PLRUSetWire_WIRE[2] <= _PLRUSetWire_T_2 @[cacheLookup.scala 410:41]
            _PLRUSetWire_WIRE[3] <= _PLRUSetWire_T_3 @[cacheLookup.scala 410:41]
            wire PLRUSetWire : UInt<1>[4]
            PLRUSetWire <= _PLRUSetWire_WIRE
            node flippedPLRUSetWire_lo = cat(PLRUSetWire[1], PLRUSetWire[0]) @[cacheLookup.scala 411:45]
            node flippedPLRUSetWire_hi = cat(PLRUSetWire[3], PLRUSetWire[2]) @[cacheLookup.scala 411:45]
            node _flippedPLRUSetWire_T = cat(flippedPLRUSetWire_hi, flippedPLRUSetWire_lo) @[cacheLookup.scala 411:45]
            node flippedPLRUSetWire = not(_flippedPLRUSetWire_T) @[cacheLookup.scala 411:32]
            node _replacingset_T = bits(flippedPLRUSetWire, 0, 0) @[OneHot.scala 47:45]
            node _replacingset_T_1 = bits(flippedPLRUSetWire, 1, 1) @[OneHot.scala 47:45]
            node _replacingset_T_2 = bits(flippedPLRUSetWire, 2, 2) @[OneHot.scala 47:45]
            node _replacingset_T_3 = bits(flippedPLRUSetWire, 3, 3) @[OneHot.scala 47:45]
            node _replacingset_T_4 = mux(_replacingset_T_2, UInt<2>("h2"), UInt<2>("h3")) @[Mux.scala 47:70]
            node _replacingset_T_5 = mux(_replacingset_T_1, UInt<1>("h1"), _replacingset_T_4) @[Mux.scala 47:70]
            node replacingset = mux(_replacingset_T, UInt<1>("h0"), _replacingset_T_5) @[Mux.scala 47:70]
            when isLoadWire : @[cacheLookup.scala 414:23]
              node _newPLRUBitWire_T_3 = and(PLRUSetWire[0], PLRUSetWire[1]) @[cacheLookup.scala 415:52]
              node _newPLRUBitWire_T_4 = and(_newPLRUBitWire_T_3, PLRUSetWire[2]) @[cacheLookup.scala 415:52]
              node _newPLRUBitWire_T_5 = and(_newPLRUBitWire_T_4, PLRUSetWire[3]) @[cacheLookup.scala 415:52]
              node _newPLRUBitWire_T_6 = mux(_newPLRUBitWire_T_5, UInt<1>("h0"), UInt<1>("h1")) @[cacheLookup.scala 415:30]
              newPLRUBitWire <= _newPLRUBitWire_T_6 @[cacheLookup.scala 415:24]
              when isMissWire_2 : @[cacheLookup.scala 416:25]
                newValidBitWire <= UInt<1>("h1") @[cacheLookup.scala 417:27]
                node _newShareBitWire_T_3 = bits(receivedResponse, 1, 1) @[cacheLookup.scala 418:46]
                newShareBitWire <= _newShareBitWire_T_3 @[cacheLookup.scala 418:27]
                node _newDirtyBitWire_T_3 = bits(receivedResponse, 0, 0) @[cacheLookup.scala 419:46]
                newDirtyBitWire <= _newDirtyBitWire_T_3 @[cacheLookup.scala 419:27]
                node _newAddrWire_T_3 = bits(inputBuffer.address, 31, 13) @[cacheLookup.scala 420:45]
                newAddrWire <= _newAddrWire_T_3 @[cacheLookup.scala 420:23]
                node _storeChunks_0_T = bits(receivedCacheLine, 31, 0) @[cacheLookup.scala 422:48]
                storeChunks[0] <= _storeChunks_0_T @[cacheLookup.scala 422:28]
                node _storeChunks_1_T = bits(receivedCacheLine, 63, 32) @[cacheLookup.scala 422:48]
                storeChunks[1] <= _storeChunks_1_T @[cacheLookup.scala 422:28]
                node _storeChunks_2_T = bits(receivedCacheLine, 95, 64) @[cacheLookup.scala 422:48]
                storeChunks[2] <= _storeChunks_2_T @[cacheLookup.scala 422:28]
                node _storeChunks_3_T = bits(receivedCacheLine, 127, 96) @[cacheLookup.scala 422:48]
                storeChunks[3] <= _storeChunks_3_T @[cacheLookup.scala 422:28]
                node _storeChunks_4_T = bits(receivedCacheLine, 159, 128) @[cacheLookup.scala 422:48]
                storeChunks[4] <= _storeChunks_4_T @[cacheLookup.scala 422:28]
                node _storeChunks_5_T = bits(receivedCacheLine, 191, 160) @[cacheLookup.scala 422:48]
                storeChunks[5] <= _storeChunks_5_T @[cacheLookup.scala 422:28]
                node _storeChunks_6_T = bits(receivedCacheLine, 223, 192) @[cacheLookup.scala 422:48]
                storeChunks[6] <= _storeChunks_6_T @[cacheLookup.scala 422:28]
                node _storeChunks_7_T = bits(receivedCacheLine, 255, 224) @[cacheLookup.scala 422:48]
                storeChunks[7] <= _storeChunks_7_T @[cacheLookup.scala 422:28]
                node _storeChunks_8_T = bits(receivedCacheLine, 287, 256) @[cacheLookup.scala 422:48]
                storeChunks[8] <= _storeChunks_8_T @[cacheLookup.scala 422:28]
                node _storeChunks_9_T = bits(receivedCacheLine, 319, 288) @[cacheLookup.scala 422:48]
                storeChunks[9] <= _storeChunks_9_T @[cacheLookup.scala 422:28]
                node _storeChunks_10_T = bits(receivedCacheLine, 351, 320) @[cacheLookup.scala 422:48]
                storeChunks[10] <= _storeChunks_10_T @[cacheLookup.scala 422:28]
                node _storeChunks_11_T = bits(receivedCacheLine, 383, 352) @[cacheLookup.scala 422:48]
                storeChunks[11] <= _storeChunks_11_T @[cacheLookup.scala 422:28]
                node _storeChunks_12_T = bits(receivedCacheLine, 415, 384) @[cacheLookup.scala 422:48]
                storeChunks[12] <= _storeChunks_12_T @[cacheLookup.scala 422:28]
                node _storeChunks_13_T = bits(receivedCacheLine, 447, 416) @[cacheLookup.scala 422:48]
                storeChunks[13] <= _storeChunks_13_T @[cacheLookup.scala 422:28]
                node _storeChunks_14_T = bits(receivedCacheLine, 479, 448) @[cacheLookup.scala 422:48]
                storeChunks[14] <= _storeChunks_14_T @[cacheLookup.scala 422:28]
                node _storeChunks_15_T = bits(receivedCacheLine, 511, 480) @[cacheLookup.scala 422:48]
                storeChunks[15] <= _storeChunks_15_T @[cacheLookup.scala 422:28]
            when isStoreWire : @[cacheLookup.scala 426:24]
              newDirtyBitWire <= UInt<1>("h1") @[cacheLookup.scala 427:25]
              node _newPLRUBitWire_T_7 = and(PLRUSetWire[0], PLRUSetWire[1]) @[cacheLookup.scala 428:52]
              node _newPLRUBitWire_T_8 = and(_newPLRUBitWire_T_7, PLRUSetWire[2]) @[cacheLookup.scala 428:52]
              node _newPLRUBitWire_T_9 = and(_newPLRUBitWire_T_8, PLRUSetWire[3]) @[cacheLookup.scala 428:52]
              node _newPLRUBitWire_T_10 = mux(_newPLRUBitWire_T_9, UInt<1>("h0"), UInt<1>("h1")) @[cacheLookup.scala 428:30]
              newPLRUBitWire <= _newPLRUBitWire_T_10 @[cacheLookup.scala 428:24]
              when isMissWire_2 : @[cacheLookup.scala 429:25]
                newValidBitWire <= UInt<1>("h1") @[cacheLookup.scala 430:27]
                node _newShareBitWire_T_4 = bits(receivedResponse, 1, 1) @[cacheLookup.scala 431:46]
                newShareBitWire <= _newShareBitWire_T_4 @[cacheLookup.scala 431:27]
                node _newAddrWire_T_4 = bits(inputBuffer.address, 31, 13) @[cacheLookup.scala 432:45]
                newAddrWire <= _newAddrWire_T_4 @[cacheLookup.scala 432:23]
                node _storeChunks_0_T_1 = bits(receivedCacheLine, 31, 0) @[cacheLookup.scala 434:48]
                storeChunks[0] <= _storeChunks_0_T_1 @[cacheLookup.scala 434:28]
                node _storeChunks_1_T_1 = bits(receivedCacheLine, 63, 32) @[cacheLookup.scala 434:48]
                storeChunks[1] <= _storeChunks_1_T_1 @[cacheLookup.scala 434:28]
                node _storeChunks_2_T_1 = bits(receivedCacheLine, 95, 64) @[cacheLookup.scala 434:48]
                storeChunks[2] <= _storeChunks_2_T_1 @[cacheLookup.scala 434:28]
                node _storeChunks_3_T_1 = bits(receivedCacheLine, 127, 96) @[cacheLookup.scala 434:48]
                storeChunks[3] <= _storeChunks_3_T_1 @[cacheLookup.scala 434:28]
                node _storeChunks_4_T_1 = bits(receivedCacheLine, 159, 128) @[cacheLookup.scala 434:48]
                storeChunks[4] <= _storeChunks_4_T_1 @[cacheLookup.scala 434:28]
                node _storeChunks_5_T_1 = bits(receivedCacheLine, 191, 160) @[cacheLookup.scala 434:48]
                storeChunks[5] <= _storeChunks_5_T_1 @[cacheLookup.scala 434:28]
                node _storeChunks_6_T_1 = bits(receivedCacheLine, 223, 192) @[cacheLookup.scala 434:48]
                storeChunks[6] <= _storeChunks_6_T_1 @[cacheLookup.scala 434:28]
                node _storeChunks_7_T_1 = bits(receivedCacheLine, 255, 224) @[cacheLookup.scala 434:48]
                storeChunks[7] <= _storeChunks_7_T_1 @[cacheLookup.scala 434:28]
                node _storeChunks_8_T_1 = bits(receivedCacheLine, 287, 256) @[cacheLookup.scala 434:48]
                storeChunks[8] <= _storeChunks_8_T_1 @[cacheLookup.scala 434:28]
                node _storeChunks_9_T_1 = bits(receivedCacheLine, 319, 288) @[cacheLookup.scala 434:48]
                storeChunks[9] <= _storeChunks_9_T_1 @[cacheLookup.scala 434:28]
                node _storeChunks_10_T_1 = bits(receivedCacheLine, 351, 320) @[cacheLookup.scala 434:48]
                storeChunks[10] <= _storeChunks_10_T_1 @[cacheLookup.scala 434:28]
                node _storeChunks_11_T_1 = bits(receivedCacheLine, 383, 352) @[cacheLookup.scala 434:48]
                storeChunks[11] <= _storeChunks_11_T_1 @[cacheLookup.scala 434:28]
                node _storeChunks_12_T_1 = bits(receivedCacheLine, 415, 384) @[cacheLookup.scala 434:48]
                storeChunks[12] <= _storeChunks_12_T_1 @[cacheLookup.scala 434:28]
                node _storeChunks_13_T_1 = bits(receivedCacheLine, 447, 416) @[cacheLookup.scala 434:48]
                storeChunks[13] <= _storeChunks_13_T_1 @[cacheLookup.scala 434:28]
                node _storeChunks_14_T_1 = bits(receivedCacheLine, 479, 448) @[cacheLookup.scala 434:48]
                storeChunks[14] <= _storeChunks_14_T_1 @[cacheLookup.scala 434:28]
                node _storeChunks_15_T_1 = bits(receivedCacheLine, 511, 480) @[cacheLookup.scala 434:48]
                storeChunks[15] <= _storeChunks_15_T_1 @[cacheLookup.scala 434:28]
              else :
                newValidBitWire <= UInt<1>("h1") @[cacheLookup.scala 437:27]
                node _newShareBitWire_T_5 = bits(receivedResponse, 1, 1) @[cacheLookup.scala 438:46]
                newShareBitWire <= _newShareBitWire_T_5 @[cacheLookup.scala 438:27]
                node _newAddrWire_T_5 = bits(inputBuffer.address, 31, 13) @[cacheLookup.scala 439:45]
                newAddrWire <= _newAddrWire_T_5 @[cacheLookup.scala 439:23]
              when isAtomicsWire : @[cacheLookup.scala 441:28]
                node _T_28 = bits(inputBuffer.address, 14, 12) @[cacheLookup.scala 442:35]
                node _T_29 = eq(_T_28, UInt<2>("h2")) @[cacheLookup.scala 442:43]
                when _T_29 : @[cacheLookup.scala 442:56]
                  node _T_30 = bits(inputBuffer.instruction, 31, 27) @[cacheLookup.scala 443:43]
                  node _T_31 = eq(UInt<1>("h1"), _T_30) @[cacheLookup.scala 443:51]
                  when _T_31 : @[cacheLookup.scala 443:51]
                    node _result32_T = bits(storeDataBuffer.data, 31, 0) @[cacheLookup.scala 444:62]
                    result32 <= _result32_T @[cacheLookup.scala 444:39]
                  else :
                    node _T_32 = eq(UInt<1>("h0"), _T_30) @[cacheLookup.scala 443:51]
                    when _T_32 : @[cacheLookup.scala 443:51]
                      node _result32_T_1 = bits(storeDataBuffer.data, 31, 0) @[cacheLookup.scala 445:74]
                      node _result32_T_2 = add(storeChunks[_wordStore_T], _result32_T_1) @[cacheLookup.scala 445:52]
                      node _result32_T_3 = tail(_result32_T_2, 1) @[cacheLookup.scala 445:52]
                      result32 <= _result32_T_3 @[cacheLookup.scala 445:39]
                    else :
                      node _T_33 = eq(UInt<3>("h4"), _T_30) @[cacheLookup.scala 443:51]
                      when _T_33 : @[cacheLookup.scala 443:51]
                        node _result32_T_4 = bits(storeDataBuffer.data, 31, 0) @[cacheLookup.scala 446:74]
                        node _result32_T_5 = xor(storeChunks[_wordStore_T], _result32_T_4) @[cacheLookup.scala 446:52]
                        result32 <= _result32_T_5 @[cacheLookup.scala 446:39]
                      else :
                        node _T_34 = eq(UInt<4>("hc"), _T_30) @[cacheLookup.scala 443:51]
                        when _T_34 : @[cacheLookup.scala 443:51]
                          node _result32_T_6 = bits(storeDataBuffer.data, 31, 0) @[cacheLookup.scala 447:74]
                          node _result32_T_7 = and(storeChunks[_wordStore_T], _result32_T_6) @[cacheLookup.scala 447:52]
                          result32 <= _result32_T_7 @[cacheLookup.scala 447:39]
                        else :
                          node _T_35 = eq(UInt<4>("h8"), _T_30) @[cacheLookup.scala 443:51]
                          when _T_35 : @[cacheLookup.scala 443:51]
                            node _result32_T_8 = bits(storeDataBuffer.data, 31, 0) @[cacheLookup.scala 448:74]
                            node _result32_T_9 = or(storeChunks[_wordStore_T], _result32_T_8) @[cacheLookup.scala 448:52]
                            result32 <= _result32_T_9 @[cacheLookup.scala 448:39]
                          else :
                            node _T_36 = eq(UInt<5>("h10"), _T_30) @[cacheLookup.scala 443:51]
                            when _T_36 : @[cacheLookup.scala 443:51]
                              node _result32_T_10 = asSInt(storeChunks[_wordStore_T]) @[cacheLookup.scala 449:56]
                              node _result32_T_11 = bits(storeDataBuffer.data, 31, 0) @[cacheLookup.scala 449:85]
                              node _result32_T_12 = asSInt(_result32_T_11) @[cacheLookup.scala 449:92]
                              node _result32_T_13 = lt(_result32_T_10, _result32_T_12) @[cacheLookup.scala 449:63]
                              node _result32_T_14 = bits(storeDataBuffer.data, 31, 0) @[cacheLookup.scala 449:131]
                              node _result32_T_15 = mux(_result32_T_13, storeChunks[_wordStore_T], _result32_T_14) @[cacheLookup.scala 449:45]
                              result32 <= _result32_T_15 @[cacheLookup.scala 449:39]
                            else :
                              node _T_37 = eq(UInt<5>("h14"), _T_30) @[cacheLookup.scala 443:51]
                              when _T_37 : @[cacheLookup.scala 443:51]
                                node _result32_T_16 = asSInt(storeChunks[_wordStore_T]) @[cacheLookup.scala 450:56]
                                node _result32_T_17 = bits(storeDataBuffer.data, 31, 0) @[cacheLookup.scala 450:85]
                                node _result32_T_18 = asSInt(_result32_T_17) @[cacheLookup.scala 450:92]
                                node _result32_T_19 = gt(_result32_T_16, _result32_T_18) @[cacheLookup.scala 450:63]
                                node _result32_T_20 = bits(storeDataBuffer.data, 31, 0) @[cacheLookup.scala 450:131]
                                node _result32_T_21 = mux(_result32_T_19, storeChunks[_wordStore_T], _result32_T_20) @[cacheLookup.scala 450:45]
                                result32 <= _result32_T_21 @[cacheLookup.scala 450:39]
                              else :
                                node _T_38 = eq(UInt<5>("h18"), _T_30) @[cacheLookup.scala 443:51]
                                when _T_38 : @[cacheLookup.scala 443:51]
                                  node _result32_T_22 = bits(storeDataBuffer.data, 31, 0) @[cacheLookup.scala 451:78]
                                  node _result32_T_23 = lt(storeChunks[_wordStore_T], _result32_T_22) @[cacheLookup.scala 451:56]
                                  node _result32_T_24 = bits(storeDataBuffer.data, 31, 0) @[cacheLookup.scala 451:117]
                                  node _result32_T_25 = mux(_result32_T_23, storeChunks[_wordStore_T], _result32_T_24) @[cacheLookup.scala 451:45]
                                  result32 <= _result32_T_25 @[cacheLookup.scala 451:39]
                                else :
                                  node _T_39 = eq(UInt<5>("h1c"), _T_30) @[cacheLookup.scala 443:51]
                                  when _T_39 : @[cacheLookup.scala 443:51]
                                    node _result32_T_26 = bits(storeDataBuffer.data, 31, 0) @[cacheLookup.scala 452:78]
                                    node _result32_T_27 = lt(storeChunks[_wordStore_T], _result32_T_26) @[cacheLookup.scala 452:56]
                                    node _result32_T_28 = bits(storeDataBuffer.data, 31, 0) @[cacheLookup.scala 452:117]
                                    node _result32_T_29 = mux(_result32_T_27, storeChunks[_wordStore_T], _result32_T_28) @[cacheLookup.scala 452:45]
                                    result32 <= _result32_T_29 @[cacheLookup.scala 452:39]
                  node _T_40 = bits(inputBuffer.address, 5, 2) @[cacheLookup.scala 454:47]
                  newstoreChunks[_T_40] <= result32 @[cacheLookup.scala 454:54]
                node _T_41 = bits(inputBuffer.address, 14, 12) @[cacheLookup.scala 456:35]
                node _T_42 = eq(_T_41, UInt<2>("h3")) @[cacheLookup.scala 456:43]
                when _T_42 : @[cacheLookup.scala 456:56]
                  node _T_43 = bits(inputBuffer.instruction, 31, 27) @[cacheLookup.scala 457:43]
                  node _T_44 = eq(UInt<1>("h1"), _T_43) @[cacheLookup.scala 457:51]
                  when _T_44 : @[cacheLookup.scala 457:51]
                    result64 <= storeDataBuffer.data @[cacheLookup.scala 458:39]
                  else :
                    node _T_45 = eq(UInt<1>("h0"), _T_43) @[cacheLookup.scala 457:51]
                    when _T_45 : @[cacheLookup.scala 457:51]
                      node _result64_T = add(doubleWordStore, storeDataBuffer.data) @[cacheLookup.scala 459:58]
                      node _result64_T_1 = tail(_result64_T, 1) @[cacheLookup.scala 459:58]
                      result64 <= _result64_T_1 @[cacheLookup.scala 459:39]
                    else :
                      node _T_46 = eq(UInt<3>("h4"), _T_43) @[cacheLookup.scala 457:51]
                      when _T_46 : @[cacheLookup.scala 457:51]
                        node _result64_T_2 = xor(doubleWordStore, storeDataBuffer.data) @[cacheLookup.scala 460:58]
                        result64 <= _result64_T_2 @[cacheLookup.scala 460:39]
                      else :
                        node _T_47 = eq(UInt<4>("hc"), _T_43) @[cacheLookup.scala 457:51]
                        when _T_47 : @[cacheLookup.scala 457:51]
                          node _result64_T_3 = and(doubleWordStore, storeDataBuffer.data) @[cacheLookup.scala 461:58]
                          result64 <= _result64_T_3 @[cacheLookup.scala 461:39]
                        else :
                          node _T_48 = eq(UInt<4>("h8"), _T_43) @[cacheLookup.scala 457:51]
                          when _T_48 : @[cacheLookup.scala 457:51]
                            node _result64_T_4 = or(doubleWordStore, storeDataBuffer.data) @[cacheLookup.scala 462:58]
                            result64 <= _result64_T_4 @[cacheLookup.scala 462:39]
                          else :
                            node _T_49 = eq(UInt<5>("h10"), _T_43) @[cacheLookup.scala 457:51]
                            when _T_49 : @[cacheLookup.scala 457:51]
                              node _result64_T_5 = asSInt(doubleWordStore) @[cacheLookup.scala 463:62]
                              node _result64_T_6 = asSInt(storeDataBuffer.data) @[cacheLookup.scala 463:92]
                              node _result64_T_7 = lt(_result64_T_5, _result64_T_6) @[cacheLookup.scala 463:69]
                              node _result64_T_8 = mux(_result64_T_7, doubleWordStore, storeDataBuffer.data) @[cacheLookup.scala 463:45]
                              result64 <= _result64_T_8 @[cacheLookup.scala 463:39]
                            else :
                              node _T_50 = eq(UInt<5>("h14"), _T_43) @[cacheLookup.scala 457:51]
                              when _T_50 : @[cacheLookup.scala 457:51]
                                node _result64_T_9 = asSInt(doubleWordStore) @[cacheLookup.scala 464:62]
                                node _result64_T_10 = asSInt(storeDataBuffer.data) @[cacheLookup.scala 464:92]
                                node _result64_T_11 = gt(_result64_T_9, _result64_T_10) @[cacheLookup.scala 464:69]
                                node _result64_T_12 = mux(_result64_T_11, doubleWordStore, storeDataBuffer.data) @[cacheLookup.scala 464:45]
                                result64 <= _result64_T_12 @[cacheLookup.scala 464:39]
                              else :
                                node _T_51 = eq(UInt<5>("h18"), _T_43) @[cacheLookup.scala 457:51]
                                when _T_51 : @[cacheLookup.scala 457:51]
                                  node _result64_T_13 = lt(doubleWordStore, storeDataBuffer.data) @[cacheLookup.scala 465:62]
                                  node _result64_T_14 = mux(_result64_T_13, doubleWordStore, storeDataBuffer.data) @[cacheLookup.scala 465:45]
                                  result64 <= _result64_T_14 @[cacheLookup.scala 465:39]
                                else :
                                  node _T_52 = eq(UInt<5>("h1c"), _T_43) @[cacheLookup.scala 457:51]
                                  when _T_52 : @[cacheLookup.scala 457:51]
                                    node _result64_T_15 = lt(doubleWordStore, storeDataBuffer.data) @[cacheLookup.scala 466:62]
                                    node _result64_T_16 = mux(_result64_T_15, doubleWordStore, storeDataBuffer.data) @[cacheLookup.scala 466:45]
                                    result64 <= _result64_T_16 @[cacheLookup.scala 466:39]
                  node _T_53 = bits(inputBuffer.address, 5, 2) @[cacheLookup.scala 468:47]
                  node _newstoreChunks_T_16 = bits(result64, 31, 0) @[cacheLookup.scala 468:65]
                  newstoreChunks[_T_53] <= _newstoreChunks_T_16 @[cacheLookup.scala 468:54]
                  node _T_54 = bits(inputBuffer.address, 5, 2) @[cacheLookup.scala 469:47]
                  node _T_55 = add(_T_54, UInt<1>("h1")) @[cacheLookup.scala 469:53]
                  node _T_56 = tail(_T_55, 1) @[cacheLookup.scala 469:53]
                  node _newstoreChunks_T_17 = bits(result64, 63, 32) @[cacheLookup.scala 469:71]
                  newstoreChunks[_T_56] <= _newstoreChunks_T_17 @[cacheLookup.scala 469:60]
              else :
                node _T_57 = eq(permissionMiss, UInt<1>("h0")) @[cacheLookup.scala 472:16]
                when _T_57 : @[cacheLookup.scala 472:32]
                  node _T_58 = bits(inputBuffer.instruction, 13, 12) @[cacheLookup.scala 473:43]
                  node _T_59 = eq(UInt<1>("h0"), _T_58) @[cacheLookup.scala 473:51]
                  when _T_59 : @[cacheLookup.scala 473:51]
                    node _storeByteChunks_0_T = bits(storeDataBuffer.data, 7, 0) @[cacheLookup.scala 474:93]
                    storeByteChunks[UInt<1>("h0")] <= _storeByteChunks_0_T @[cacheLookup.scala 474:70]
                  else :
                    node _T_60 = eq(UInt<1>("h1"), _T_58) @[cacheLookup.scala 473:51]
                    when _T_60 : @[cacheLookup.scala 473:51]
                      node _storeByteChunks_0_T_1 = bits(storeDataBuffer.data, 7, 0) @[cacheLookup.scala 475:93]
                      storeByteChunks[UInt<1>("h0")] <= _storeByteChunks_0_T_1 @[cacheLookup.scala 475:70]
                      node _storeByteChunks_1_T = bits(storeDataBuffer.data, 15, 8) @[cacheLookup.scala 475:93]
                      storeByteChunks[UInt<1>("h1")] <= _storeByteChunks_1_T @[cacheLookup.scala 475:70]
                    else :
                      node _T_61 = eq(UInt<2>("h2"), _T_58) @[cacheLookup.scala 473:51]
                      when _T_61 : @[cacheLookup.scala 473:51]
                        node _storeByteChunks_0_T_2 = bits(storeDataBuffer.data, 7, 0) @[cacheLookup.scala 476:93]
                        storeByteChunks[UInt<1>("h0")] <= _storeByteChunks_0_T_2 @[cacheLookup.scala 476:70]
                        node _storeByteChunks_1_T_1 = bits(storeDataBuffer.data, 15, 8) @[cacheLookup.scala 476:93]
                        storeByteChunks[UInt<1>("h1")] <= _storeByteChunks_1_T_1 @[cacheLookup.scala 476:70]
                        node _storeByteChunks_2_T = bits(storeDataBuffer.data, 23, 16) @[cacheLookup.scala 476:93]
                        storeByteChunks[UInt<2>("h2")] <= _storeByteChunks_2_T @[cacheLookup.scala 476:70]
                        node _storeByteChunks_3_T = bits(storeDataBuffer.data, 31, 24) @[cacheLookup.scala 476:93]
                        storeByteChunks[UInt<2>("h3")] <= _storeByteChunks_3_T @[cacheLookup.scala 476:70]
                      else :
                        node _T_62 = eq(UInt<2>("h3"), _T_58) @[cacheLookup.scala 473:51]
                        when _T_62 : @[cacheLookup.scala 473:51]
                          node _storeByteChunks_0_T_3 = bits(storeDataBuffer.data, 7, 0) @[cacheLookup.scala 477:93]
                          storeByteChunks[UInt<1>("h0")] <= _storeByteChunks_0_T_3 @[cacheLookup.scala 477:70]
                          node _storeByteChunks_1_T_2 = bits(storeDataBuffer.data, 15, 8) @[cacheLookup.scala 477:93]
                          storeByteChunks[UInt<1>("h1")] <= _storeByteChunks_1_T_2 @[cacheLookup.scala 477:70]
                          node _storeByteChunks_2_T_1 = bits(storeDataBuffer.data, 23, 16) @[cacheLookup.scala 477:93]
                          storeByteChunks[UInt<2>("h2")] <= _storeByteChunks_2_T_1 @[cacheLookup.scala 477:70]
                          node _storeByteChunks_3_T_1 = bits(storeDataBuffer.data, 31, 24) @[cacheLookup.scala 477:93]
                          storeByteChunks[UInt<2>("h3")] <= _storeByteChunks_3_T_1 @[cacheLookup.scala 477:70]
                          node _storeByteChunks_4_T = bits(storeDataBuffer.data, 39, 32) @[cacheLookup.scala 477:93]
                          storeByteChunks[UInt<3>("h4")] <= _storeByteChunks_4_T @[cacheLookup.scala 477:70]
                          node _storeByteChunks_5_T = bits(storeDataBuffer.data, 47, 40) @[cacheLookup.scala 477:93]
                          storeByteChunks[UInt<3>("h5")] <= _storeByteChunks_5_T @[cacheLookup.scala 477:70]
                          node _storeByteChunks_6_T = bits(storeDataBuffer.data, 55, 48) @[cacheLookup.scala 477:93]
                          storeByteChunks[UInt<3>("h6")] <= _storeByteChunks_6_T @[cacheLookup.scala 477:70]
                          node _storeByteChunks_7_T = bits(storeDataBuffer.data, 63, 56) @[cacheLookup.scala 477:93]
                          storeByteChunks[UInt<3>("h7")] <= _storeByteChunks_7_T @[cacheLookup.scala 477:70]
                  node _T_63 = bits(inputBuffer.address, 5, 2) @[cacheLookup.scala 479:47]
                  node newstoreChunks_lo = cat(storeByteChunks[1], storeByteChunks[0]) @[Cat.scala 33:92]
                  node newstoreChunks_hi = cat(storeByteChunks[3], storeByteChunks[2]) @[Cat.scala 33:92]
                  node _newstoreChunks_T_18 = cat(newstoreChunks_hi, newstoreChunks_lo) @[Cat.scala 33:92]
                  newstoreChunks[_T_63] <= _newstoreChunks_T_18 @[cacheLookup.scala 479:55]
                  node _T_64 = bits(inputBuffer.address, 5, 2) @[cacheLookup.scala 480:47]
                  node _T_65 = add(_T_64, UInt<1>("h1")) @[cacheLookup.scala 480:54]
                  node _T_66 = tail(_T_65, 1) @[cacheLookup.scala 480:54]
                  node newstoreChunks_lo_1 = cat(storeByteChunks[5], storeByteChunks[4]) @[Cat.scala 33:92]
                  node newstoreChunks_hi_1 = cat(storeByteChunks[7], storeByteChunks[6]) @[Cat.scala 33:92]
                  node _newstoreChunks_T_19 = cat(newstoreChunks_hi_1, newstoreChunks_lo_1) @[Cat.scala 33:92]
                  newstoreChunks[_T_66] <= _newstoreChunks_T_19 @[cacheLookup.scala 480:61]
              when reservationRegister.reserved : @[cacheLookup.scala 485:43]
                node _T_67 = eq(UInt<1>("h0"), reservationRegister.size) @[cacheLookup.scala 486:43]
                when _T_67 : @[cacheLookup.scala 486:43]
                  node _reservationRegister_reserved_T = bits(reservationRegister.address, 31, 2) @[cacheLookup.scala 487:83]
                  node _reservationRegister_reserved_T_1 = bits(inputBuffer.address, 31, 2) @[cacheLookup.scala 487:126]
                  node _reservationRegister_reserved_T_2 = eq(_reservationRegister_reserved_T, _reservationRegister_reserved_T_1) @[cacheLookup.scala 487:102]
                  node _reservationRegister_reserved_T_3 = eq(_reservationRegister_reserved_T_2, UInt<1>("h0")) @[cacheLookup.scala 487:53]
                  reservationRegister.reserved <= _reservationRegister_reserved_T_3 @[cacheLookup.scala 487:50]
                else :
                  node _T_68 = eq(UInt<1>("h1"), reservationRegister.size) @[cacheLookup.scala 486:43]
                  when _T_68 : @[cacheLookup.scala 486:43]
                    node _reservationRegister_reserved_T_4 = bits(reservationRegister.address, 31, 3) @[cacheLookup.scala 488:83]
                    node _reservationRegister_reserved_T_5 = bits(inputBuffer.address, 31, 3) @[cacheLookup.scala 488:126]
                    node _reservationRegister_reserved_T_6 = eq(_reservationRegister_reserved_T_4, _reservationRegister_reserved_T_5) @[cacheLookup.scala 488:102]
                    node _reservationRegister_reserved_T_7 = eq(_reservationRegister_reserved_T_6, UInt<1>("h0")) @[cacheLookup.scala 488:53]
                    reservationRegister.reserved <= _reservationRegister_reserved_T_7 @[cacheLookup.scala 488:50]
              when isSCWire : @[cacheLookup.scala 491:23]
                reservationRegister.reserved <= UInt<1>("h0") @[cacheLookup.scala 492:40]
            when isCoherentWire : @[cacheLookup.scala 495:27]
              when inputBuffer.invalidateReq : @[cacheLookup.scala 496:40]
                newValidBitWire <= UInt<1>("h0") @[cacheLookup.scala 497:27]
                newPLRUBitWire <= UInt<1>("h0") @[cacheLookup.scala 498:26]
                newShareBitWire <= UInt<1>("h0") @[cacheLookup.scala 499:27]
                newDirtyBitWire <= UInt<1>("h0") @[cacheLookup.scala 500:27]
              else :
                node _newShareBitWire_T_6 = or(hitTagWire_2, UInt<2>("h0"))
                node _newShareBitWire_T_7 = bits(_newShareBitWire_T_6, 1, 0)
                node _newShareBitWire_T_8 = bits(tagChunks_2[_newShareBitWire_T_7], 21, 21) @[cacheLookup.scala 502:81]
                node _newShareBitWire_T_9 = mux(inputBuffer.dataReq, UInt<1>("h1"), _newShareBitWire_T_8) @[cacheLookup.scala 502:33]
                newShareBitWire <= _newShareBitWire_T_9 @[cacheLookup.scala 502:27]
              when reservationRegister.reserved : @[cacheLookup.scala 504:43]
                node _T_69 = eq(UInt<1>("h0"), reservationRegister.size) @[cacheLookup.scala 505:43]
                when _T_69 : @[cacheLookup.scala 505:43]
                  node _reservationRegister_reserved_T_8 = bits(reservationRegister.address, 31, 2) @[cacheLookup.scala 506:83]
                  node _reservationRegister_reserved_T_9 = bits(inputBuffer.address, 31, 2) @[cacheLookup.scala 506:126]
                  node _reservationRegister_reserved_T_10 = eq(_reservationRegister_reserved_T_8, _reservationRegister_reserved_T_9) @[cacheLookup.scala 506:102]
                  node _reservationRegister_reserved_T_11 = eq(_reservationRegister_reserved_T_10, UInt<1>("h0")) @[cacheLookup.scala 506:53]
                  reservationRegister.reserved <= _reservationRegister_reserved_T_11 @[cacheLookup.scala 506:50]
                else :
                  node _T_70 = eq(UInt<1>("h1"), reservationRegister.size) @[cacheLookup.scala 505:43]
                  when _T_70 : @[cacheLookup.scala 505:43]
                    node _reservationRegister_reserved_T_12 = bits(reservationRegister.address, 31, 3) @[cacheLookup.scala 507:83]
                    node _reservationRegister_reserved_T_13 = bits(inputBuffer.address, 31, 3) @[cacheLookup.scala 507:126]
                    node _reservationRegister_reserved_T_14 = eq(_reservationRegister_reserved_T_12, _reservationRegister_reserved_T_13) @[cacheLookup.scala 507:102]
                    node _reservationRegister_reserved_T_15 = eq(_reservationRegister_reserved_T_14, UInt<1>("h0")) @[cacheLookup.scala 507:53]
                    reservationRegister.reserved <= _reservationRegister_reserved_T_15 @[cacheLookup.scala 507:50]
            node updatingSet = mux(isMissWire_2, replacingset, hitTagWire_2) @[cacheLookup.scala 512:28]
            reg tagBRAM_writeEn_REG : UInt<1>, clock with :
              reset => (UInt<1>("h0"), tagBRAM_writeEn_REG) @[cacheLookup.scala 514:33]
            tagBRAM_writeEn_REG <= UInt<1>("h1") @[cacheLookup.scala 514:33]
            tagBRAM.writeEn <= tagBRAM_writeEn_REG @[cacheLookup.scala 514:23]
            node _T_71 = and(PLRUSetWire[0], PLRUSetWire[1]) @[cacheLookup.scala 515:33]
            node _T_72 = and(_T_71, PLRUSetWire[2]) @[cacheLookup.scala 515:33]
            node _T_73 = and(_T_72, PLRUSetWire[3]) @[cacheLookup.scala 515:33]
            when _T_73 : @[cacheLookup.scala 515:38]
              node _newtagChunks_0_T = shl(UInt<1>("h1"), 22) @[cacheLookup.scala 517:51]
              node _newtagChunks_0_T_1 = not(_newtagChunks_0_T) @[cacheLookup.scala 517:45]
              node _newtagChunks_0_T_2 = and(tagChunks_2[0], _newtagChunks_0_T_1) @[cacheLookup.scala 517:43]
              newtagChunks[0] <= _newtagChunks_0_T_2 @[cacheLookup.scala 517:27]
              node _newtagChunks_1_T = shl(UInt<1>("h1"), 22) @[cacheLookup.scala 517:51]
              node _newtagChunks_1_T_1 = not(_newtagChunks_1_T) @[cacheLookup.scala 517:45]
              node _newtagChunks_1_T_2 = and(tagChunks_2[1], _newtagChunks_1_T_1) @[cacheLookup.scala 517:43]
              newtagChunks[1] <= _newtagChunks_1_T_2 @[cacheLookup.scala 517:27]
              node _newtagChunks_2_T = shl(UInt<1>("h1"), 22) @[cacheLookup.scala 517:51]
              node _newtagChunks_2_T_1 = not(_newtagChunks_2_T) @[cacheLookup.scala 517:45]
              node _newtagChunks_2_T_2 = and(tagChunks_2[2], _newtagChunks_2_T_1) @[cacheLookup.scala 517:43]
              newtagChunks[2] <= _newtagChunks_2_T_2 @[cacheLookup.scala 517:27]
              node _newtagChunks_3_T = shl(UInt<1>("h1"), 22) @[cacheLookup.scala 517:51]
              node _newtagChunks_3_T_1 = not(_newtagChunks_3_T) @[cacheLookup.scala 517:45]
              node _newtagChunks_3_T_2 = and(tagChunks_2[3], _newtagChunks_3_T_1) @[cacheLookup.scala 517:43]
              newtagChunks[3] <= _newtagChunks_3_T_2 @[cacheLookup.scala 517:27]
            node _T_74 = or(updatingSet, UInt<2>("h0"))
            node _T_75 = bits(_T_74, 1, 0)
            node _newtagChunks_T_4 = or(updatingSet, UInt<2>("h0"))
            node _newtagChunks_T_5 = bits(_newtagChunks_T_4, 1, 0)
            node _newtagChunks_T_6 = bits(tagChunks_2[_newtagChunks_T_5], 23, 23) @[cacheLookup.scala 520:62]
            node newtagChunks_lo_hi = cat(newDirtyBitWire, newValidBitWire) @[Cat.scala 33:92]
            node newtagChunks_lo = cat(newtagChunks_lo_hi, newAddrWire) @[Cat.scala 33:92]
            node newtagChunks_hi_hi = cat(_newtagChunks_T_6, newPLRUBitWire) @[Cat.scala 33:92]
            node newtagChunks_hi = cat(newtagChunks_hi_hi, newShareBitWire) @[Cat.scala 33:92]
            node _newtagChunks_T_7 = cat(newtagChunks_hi, newtagChunks_lo) @[Cat.scala 33:92]
            newtagChunks[_T_75] <= _newtagChunks_T_7 @[cacheLookup.scala 520:33]
            node _tagBRAM_writeData_T = cat(newtagChunks[3], newtagChunks[2]) @[Cat.scala 33:92]
            node _tagBRAM_writeData_T_1 = cat(_tagBRAM_writeData_T, newtagChunks[1]) @[Cat.scala 33:92]
            node _tagBRAM_writeData_T_2 = cat(_tagBRAM_writeData_T_1, newtagChunks[0]) @[Cat.scala 33:92]
            tagBRAM.writeData <= _tagBRAM_writeData_T_2 @[cacheLookup.scala 522:25]
            node _T_76 = or(updatingSet, UInt<2>("h0"))
            node _T_77 = bits(_T_76, 1, 0)
            node _dataBRAMVec_writeEn_T = or(isMissWire_2, isStoreWire) @[cacheLookup.scala 524:54]
            dataBRAMVec[_T_77].writeEn <= _dataBRAMVec_writeEn_T @[cacheLookup.scala 524:40]
            node _T_78 = or(updatingSet, UInt<2>("h0"))
            node _T_79 = bits(_T_78, 1, 0)
            node _dataBRAMVec_writeData_T = cat(newstoreChunks[15], newstoreChunks[14]) @[Cat.scala 33:92]
            node _dataBRAMVec_writeData_T_1 = cat(_dataBRAMVec_writeData_T, newstoreChunks[13]) @[Cat.scala 33:92]
            node _dataBRAMVec_writeData_T_2 = cat(_dataBRAMVec_writeData_T_1, newstoreChunks[12]) @[Cat.scala 33:92]
            node _dataBRAMVec_writeData_T_3 = cat(_dataBRAMVec_writeData_T_2, newstoreChunks[11]) @[Cat.scala 33:92]
            node _dataBRAMVec_writeData_T_4 = cat(_dataBRAMVec_writeData_T_3, newstoreChunks[10]) @[Cat.scala 33:92]
            node _dataBRAMVec_writeData_T_5 = cat(_dataBRAMVec_writeData_T_4, newstoreChunks[9]) @[Cat.scala 33:92]
            node _dataBRAMVec_writeData_T_6 = cat(_dataBRAMVec_writeData_T_5, newstoreChunks[8]) @[Cat.scala 33:92]
            node _dataBRAMVec_writeData_T_7 = cat(_dataBRAMVec_writeData_T_6, newstoreChunks[7]) @[Cat.scala 33:92]
            node _dataBRAMVec_writeData_T_8 = cat(_dataBRAMVec_writeData_T_7, newstoreChunks[6]) @[Cat.scala 33:92]
            node _dataBRAMVec_writeData_T_9 = cat(_dataBRAMVec_writeData_T_8, newstoreChunks[5]) @[Cat.scala 33:92]
            node _dataBRAMVec_writeData_T_10 = cat(_dataBRAMVec_writeData_T_9, newstoreChunks[4]) @[Cat.scala 33:92]
            node _dataBRAMVec_writeData_T_11 = cat(_dataBRAMVec_writeData_T_10, newstoreChunks[3]) @[Cat.scala 33:92]
            node _dataBRAMVec_writeData_T_12 = cat(_dataBRAMVec_writeData_T_11, newstoreChunks[2]) @[Cat.scala 33:92]
            node _dataBRAMVec_writeData_T_13 = cat(_dataBRAMVec_writeData_T_12, newstoreChunks[1]) @[Cat.scala 33:92]
            node _dataBRAMVec_writeData_T_14 = cat(_dataBRAMVec_writeData_T_13, newstoreChunks[0]) @[Cat.scala 33:92]
            dataBRAMVec[_T_79].writeData <= _dataBRAMVec_writeData_T_14 @[cacheLookup.scala 525:42]
            node _writeBackCacheLine_T = or(hitTagWire_2, UInt<2>("h0"))
            node _writeBackCacheLine_T_1 = bits(_writeBackCacheLine_T, 1, 0)
            writeBackCacheLine <= dataBRAMVec[_writeBackCacheLine_T_1].readData @[cacheLookup.scala 527:26]
            node _T_80 = eq(isBranchFailWire, UInt<1>("h0")) @[cacheLookup.scala 529:12]
            when _T_80 : @[cacheLookup.scala 529:30]
              node _T_81 = eq(isCoherentWire, UInt<1>("h0")) @[cacheLookup.scala 531:14]
              when _T_81 : @[cacheLookup.scala 531:30]
                node _cacheState_T_9 = and(isMissWire_2, dirtyBitWire) @[cacheLookup.scala 533:40]
                node _cacheState_T_10 = mux(_cacheState_T_9, UInt<3>("h7"), UInt<3>("h0")) @[cacheLookup.scala 533:28]
                cacheState <= _cacheState_T_10 @[cacheLookup.scala 533:22]
              else :
                cacheState <= UInt<3>("h0") @[cacheLookup.scala 535:22]
            else :
              cacheState <= UInt<3>("h0") @[cacheLookup.scala 538:20]
          else :
            node _T_82 = eq(UInt<3>("h4"), cacheState) @[cacheLookup.scala 269:21]
            when _T_82 : @[cacheLookup.scala 269:21]
              node _tagChunks_T_12 = bits(tagBRAM.readData, 23, 0) @[cacheLookup.scala 543:25]
              node _tagChunks_T_13 = bits(tagBRAM.readData, 47, 24) @[cacheLookup.scala 543:25]
              node _tagChunks_T_14 = bits(tagBRAM.readData, 71, 48) @[cacheLookup.scala 543:25]
              node _tagChunks_T_15 = bits(tagBRAM.readData, 95, 72) @[cacheLookup.scala 543:25]
              wire tagChunks_3 : UInt<24>[4] @[cacheLookup.scala 542:30]
              tagChunks_3[0] <= _tagChunks_T_12 @[cacheLookup.scala 542:30]
              tagChunks_3[1] <= _tagChunks_T_13 @[cacheLookup.scala 542:30]
              tagChunks_3[2] <= _tagChunks_T_14 @[cacheLookup.scala 542:30]
              tagChunks_3[3] <= _tagChunks_T_15 @[cacheLookup.scala 542:30]
              node _hitTagWire_T_9 = mux(matchFoundReg[2], UInt<2>("h2"), UInt<2>("h3")) @[Mux.scala 47:70]
              node _hitTagWire_T_10 = mux(matchFoundReg[1], UInt<1>("h1"), _hitTagWire_T_9) @[Mux.scala 47:70]
              node _hitTagWire_T_11 = mux(matchFoundReg[0], UInt<1>("h0"), _hitTagWire_T_10) @[Mux.scala 47:70]
              wire hitTagWire_3 : UInt
              hitTagWire_3 <= _hitTagWire_T_11
              node _validBitWire_T_9 = or(hitTagWire_3, UInt<2>("h0"))
              node _validBitWire_T_10 = bits(_validBitWire_T_9, 1, 0)
              node _validBitWire_T_11 = bits(tagChunks_3[_validBitWire_T_10], 19, 19) @[cacheLookup.scala 547:56]
              wire validBitWire_3 : UInt<1>
              validBitWire_3 <= _validBitWire_T_11
              node _isMissWire_T_12 = or(matchFoundReg[0], matchFoundReg[1]) @[cacheLookup.scala 548:49]
              node _isMissWire_T_13 = or(_isMissWire_T_12, matchFoundReg[2]) @[cacheLookup.scala 548:49]
              node _isMissWire_T_14 = or(_isMissWire_T_13, matchFoundReg[3]) @[cacheLookup.scala 548:49]
              node _isMissWire_T_15 = and(_isMissWire_T_14, validBitWire_3) @[cacheLookup.scala 548:54]
              node isMissWire_3 = eq(_isMissWire_T_15, UInt<1>("h0")) @[cacheLookup.scala 548:24]
              memoryRequest.valid <= UInt<1>("h1") @[cacheLookup.scala 550:27]
              memoryRequest.address <= inputBuffer.address @[cacheLookup.scala 551:29]
              memoryRequest.data <= UInt<1>("h0") @[cacheLookup.scala 552:26]
              memoryRequest.writeEn <= UInt<1>("h0") @[cacheLookup.scala 553:29]
              when isLoadWire : @[cacheLookup.scala 554:23]
                memoryRequest.isUnique <= UInt<1>("h0") @[cacheLookup.scala 556:32]
                memoryRequest.isClean <= UInt<1>("h0") @[cacheLookup.scala 557:31]
              when isStoreWire : @[cacheLookup.scala 559:24]
                when isMissWire_3 : @[cacheLookup.scala 560:25]
                  memoryRequest.isUnique <= UInt<1>("h1") @[cacheLookup.scala 562:34]
                  memoryRequest.isClean <= UInt<1>("h0") @[cacheLookup.scala 563:33]
                else :
                  memoryRequest.isUnique <= UInt<1>("h1") @[cacheLookup.scala 566:34]
                  memoryRequest.isClean <= UInt<1>("h1") @[cacheLookup.scala 567:33]
              node _T_83 = eq(isBranchFailWire, UInt<1>("h0")) @[cacheLookup.scala 571:12]
              when _T_83 : @[cacheLookup.scala 571:30]
                node _cacheState_T_11 = mux(memoryRequest.ready, UInt<3>("h5"), UInt<3>("h4")) @[cacheLookup.scala 572:26]
                cacheState <= _cacheState_T_11 @[cacheLookup.scala 572:20]
              else :
                cacheState <= UInt<3>("h0") @[cacheLookup.scala 574:20]
            else :
              node _T_84 = eq(UInt<3>("h5"), cacheState) @[cacheLookup.scala 269:21]
              when _T_84 : @[cacheLookup.scala 269:21]
                loadData.ready <= UInt<1>("h1") @[cacheLookup.scala 578:22]
                when loadData.valid : @[cacheLookup.scala 579:27]
                  receivedCacheLine <= loadData.data @[cacheLookup.scala 580:27]
                  receivedResponse <= loadData.response @[cacheLookup.scala 581:26]
                node _T_85 = eq(atomicsInOperationWire, UInt<1>("h0")) @[cacheLookup.scala 584:33]
                node _T_86 = and(coherencyReceived, _T_85) @[cacheLookup.scala 584:30]
                when _T_86 : @[cacheLookup.scala 584:57]
                  cacheState <= UInt<3>("h0") @[cacheLookup.scala 585:20]
                else :
                  when loadData.valid : @[cacheLookup.scala 587:29]
                    when isStoreWire : @[cacheLookup.scala 588:28]
                      node _cacheState_T_12 = mux(isBranchFailWire, UInt<3>("h0"), UInt<3>("h3")) @[cacheLookup.scala 589:30]
                      cacheState <= _cacheState_T_12 @[cacheLookup.scala 589:24]
                    else :
                      node _cacheState_T_13 = mux(isBranchFailWire, UInt<3>("h0"), UInt<3>("h2")) @[cacheLookup.scala 591:30]
                      cacheState <= _cacheState_T_13 @[cacheLookup.scala 591:24]
                  else :
                    cacheState <= UInt<3>("h5") @[cacheLookup.scala 594:22]
              else :
                node _T_87 = eq(UInt<3>("h6"), cacheState) @[cacheLookup.scala 269:21]
                when _T_87 : @[cacheLookup.scala 269:21]
                  node _tagChunks_T_16 = bits(tagBRAM.readData, 23, 0) @[cacheLookup.scala 600:25]
                  node _tagChunks_T_17 = bits(tagBRAM.readData, 47, 24) @[cacheLookup.scala 600:25]
                  node _tagChunks_T_18 = bits(tagBRAM.readData, 71, 48) @[cacheLookup.scala 600:25]
                  node _tagChunks_T_19 = bits(tagBRAM.readData, 95, 72) @[cacheLookup.scala 600:25]
                  wire tagChunks_4 : UInt<24>[4] @[cacheLookup.scala 599:30]
                  tagChunks_4[0] <= _tagChunks_T_16 @[cacheLookup.scala 599:30]
                  tagChunks_4[1] <= _tagChunks_T_17 @[cacheLookup.scala 599:30]
                  tagChunks_4[2] <= _tagChunks_T_18 @[cacheLookup.scala 599:30]
                  tagChunks_4[3] <= _tagChunks_T_19 @[cacheLookup.scala 599:30]
                  node _hitTagWire_T_12 = mux(matchFoundReg[2], UInt<2>("h2"), UInt<2>("h3")) @[Mux.scala 47:70]
                  node _hitTagWire_T_13 = mux(matchFoundReg[1], UInt<1>("h1"), _hitTagWire_T_12) @[Mux.scala 47:70]
                  node _hitTagWire_T_14 = mux(matchFoundReg[0], UInt<1>("h0"), _hitTagWire_T_13) @[Mux.scala 47:70]
                  wire hitTagWire_4 : UInt
                  hitTagWire_4 <= _hitTagWire_T_14
                  node _newAddrWire_T_6 = or(hitTagWire_4, UInt<2>("h0"))
                  node _newAddrWire_T_7 = bits(_newAddrWire_T_6, 1, 0)
                  node _newAddrWire_T_8 = bits(tagChunks_4[_newAddrWire_T_7], 18, 0) @[cacheLookup.scala 604:55]
                  wire newAddrWire_1 : UInt
                  newAddrWire_1 <= _newAddrWire_T_8
                  node _validBitWire_T_12 = or(hitTagWire_4, UInt<2>("h0"))
                  node _validBitWire_T_13 = bits(_validBitWire_T_12, 1, 0)
                  node _validBitWire_T_14 = bits(tagChunks_4[_validBitWire_T_13], 19, 19) @[cacheLookup.scala 605:56]
                  wire validBitWire_4 : UInt<1>
                  validBitWire_4 <= _validBitWire_T_14
                  node _dirtyBitWire_T_3 = or(hitTagWire_4, UInt<2>("h0"))
                  node _dirtyBitWire_T_4 = bits(_dirtyBitWire_T_3, 1, 0)
                  node _dirtyBitWire_T_5 = bits(tagChunks_4[_dirtyBitWire_T_4], 20, 20) @[cacheLookup.scala 606:56]
                  wire dirtyBitWire_1 : UInt<1>
                  dirtyBitWire_1 <= _dirtyBitWire_T_5
                  node _shareBitWire_T_6 = or(hitTagWire_4, UInt<2>("h0"))
                  node _shareBitWire_T_7 = bits(_shareBitWire_T_6, 1, 0)
                  node _shareBitWire_T_8 = bits(tagChunks_4[_shareBitWire_T_7], 21, 21) @[cacheLookup.scala 607:56]
                  wire shareBitWire_2 : UInt<1>
                  shareBitWire_2 <= _shareBitWire_T_8
                  node _isMissWire_T_16 = or(matchFoundReg[0], matchFoundReg[1]) @[cacheLookup.scala 609:49]
                  node _isMissWire_T_17 = or(_isMissWire_T_16, matchFoundReg[2]) @[cacheLookup.scala 609:49]
                  node _isMissWire_T_18 = or(_isMissWire_T_17, matchFoundReg[3]) @[cacheLookup.scala 609:49]
                  node _isMissWire_T_19 = and(_isMissWire_T_18, validBitWire_4) @[cacheLookup.scala 609:54]
                  node isMissWire_4 = eq(_isMissWire_T_19, UInt<1>("h0")) @[cacheLookup.scala 609:24]
                  memoryRequest.valid <= UInt<1>("h1") @[cacheLookup.scala 611:27]
                  memoryRequest.address <= UInt<1>("h0") @[cacheLookup.scala 612:29]
                  when isMissWire_4 : @[cacheLookup.scala 614:23]
                    memoryRequest.writeEn <= UInt<1>("h0") @[cacheLookup.scala 615:31]
                    memoryRequest.data <= UInt<1>("h0") @[cacheLookup.scala 616:28]
                  else :
                    when inputBuffer.dataReq : @[cacheLookup.scala 618:34]
                      memoryRequest.writeEn <= UInt<1>("h1") @[cacheLookup.scala 619:33]
                      node _memoryRequest_data_T = or(hitTagWire_4, UInt<2>("h0"))
                      node _memoryRequest_data_T_1 = bits(_memoryRequest_data_T, 1, 0)
                      memoryRequest.data <= dataBRAMVec[_memoryRequest_data_T_1].readData @[cacheLookup.scala 620:30]
                      node _memoryRequest_isClean_T = eq(dirtyBitWire_1, UInt<1>("h0")) @[cacheLookup.scala 621:67]
                      node _memoryRequest_isClean_T_1 = mux(inputBuffer.invalidateReq, _memoryRequest_isClean_T, UInt<1>("h1")) @[cacheLookup.scala 621:39]
                      memoryRequest.isClean <= _memoryRequest_isClean_T_1 @[cacheLookup.scala 621:33]
                      node _memoryRequest_isUnique_T = eq(shareBitWire_2, UInt<1>("h0")) @[cacheLookup.scala 622:37]
                      memoryRequest.isUnique <= _memoryRequest_isUnique_T @[cacheLookup.scala 622:34]
                    else :
                      memoryRequest.data <= UInt<1>("h0") @[cacheLookup.scala 624:30]
                  when memoryRequest.ready : @[cacheLookup.scala 628:32]
                    when isMissWire_4 : @[cacheLookup.scala 629:25]
                      cacheState <= UInt<3>("h0") @[cacheLookup.scala 630:21]
                    else :
                      cacheState <= UInt<3>("h3") @[cacheLookup.scala 632:22]
                  else :
                    cacheState <= UInt<3>("h7") @[cacheLookup.scala 635:20]
                else :
                  node _T_88 = eq(UInt<3>("h7"), cacheState) @[cacheLookup.scala 269:21]
                  when _T_88 : @[cacheLookup.scala 269:21]
                    memoryRequest.valid <= UInt<1>("h1") @[cacheLookup.scala 639:27]
                    memoryRequest.address <= inputBuffer.address @[cacheLookup.scala 640:29]
                    memoryRequest.writeEn <= UInt<1>("h1") @[cacheLookup.scala 641:29]
                    node _hitTagWire_T_15 = mux(matchFoundReg[2], UInt<2>("h2"), UInt<2>("h3")) @[Mux.scala 47:70]
                    node _hitTagWire_T_16 = mux(matchFoundReg[1], UInt<1>("h1"), _hitTagWire_T_15) @[Mux.scala 47:70]
                    node _hitTagWire_T_17 = mux(matchFoundReg[0], UInt<1>("h0"), _hitTagWire_T_16) @[Mux.scala 47:70]
                    wire hitTagWire_5 : UInt
                    hitTagWire_5 <= _hitTagWire_T_17
                    memoryRequest.isUnique <= UInt<1>("h0") @[cacheLookup.scala 643:30]
                    memoryRequest.data <= writeBackCacheLine @[cacheLookup.scala 645:26]
                    memoryRequest.isClean <= UInt<1>("h0") @[cacheLookup.scala 646:29]
                    node _cacheState_T_14 = mux(memoryRequest.ready, UInt<3>("h0"), UInt<3>("h7")) @[cacheLookup.scala 648:24]
                    cacheState <= _cacheState_T_14 @[cacheLookup.scala 648:18]
    reg priorCacheState : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[cacheLookup.scala 653:32]
    node _T_89 = neq(priorCacheState, cacheState) @[cacheLookup.scala 654:24]
    when _T_89 : @[cacheLookup.scala 654:39]
      node _T_90 = eq(cacheState, UInt<3>("h0")) @[cacheLookup.scala 655:21]
      when _T_90 : @[cacheLookup.scala 655:30]
        priorCacheState <= UInt<3>("h0") @[cacheLookup.scala 656:23]
        freeInputBuffer <= UInt<1>("h1") @[cacheLookup.scala 657:23]
      else :
        priorCacheState <= cacheState @[cacheLookup.scala 659:23]
    else :
      node _T_91 = eq(cacheState, UInt<3>("h0")) @[cacheLookup.scala 662:21]
      when _T_91 : @[cacheLookup.scala 662:30]
        freeInputBuffer <= isBranchFailWire @[cacheLookup.scala 663:23]
    responseOut.data <= resultWire @[cacheLookup.scala 668:20]
    node _T_92 = eq(cacheState, UInt<3>("h2")) @[cacheLookup.scala 669:19]
    when _T_92 : @[cacheLookup.scala 669:31]
      node _responseOut_valid_T = eq(isBranchFailWire, UInt<1>("h0")) @[cacheLookup.scala 670:47]
      node _responseOut_valid_T_1 = and(responseOut.ready, _responseOut_valid_T) @[cacheLookup.scala 670:44]
      responseOut.valid <= _responseOut_valid_T_1 @[cacheLookup.scala 670:23]
    inst commitFifo of commitFifo @[cacheLookup.scala 674:26]
    commitFifo.clock <= clock
    commitFifo.reset <= reset
    commitFifo.dataIn.addr <= UInt<1>("h0") @[cacheLookup.scala 676:26]
    commitFifo.dataIn.valid <= UInt<1>("h0") @[cacheLookup.scala 677:27]
    commitFifo.canAccept <= UInt<1>("h0") @[cacheLookup.scala 678:24]
    commitFifo.invalidateAddr <= UInt<1>("h0") @[cacheLookup.scala 679:29]
    commitFifo.invalidateEnable <= UInt<1>("h0") @[cacheLookup.scala 680:31]
    commitFIFOFull <= commitFifo.isFull @[cacheLookup.scala 681:18]
    node _T_93 = eq(isAtomicsWire, UInt<1>("h0")) @[cacheLookup.scala 683:22]
    node _T_94 = and(isLoadWire, _T_93) @[cacheLookup.scala 683:19]
    node _T_95 = eq(cacheState, UInt<3>("h3")) @[cacheLookup.scala 683:51]
    node _T_96 = and(_T_94, _T_95) @[cacheLookup.scala 683:37]
    when _T_96 : @[cacheLookup.scala 683:62]
      commitFifo.dataIn.addr <= inputBuffer.address @[cacheLookup.scala 684:28]
      commitFifo.dataIn.valid <= UInt<1>("h1") @[cacheLookup.scala 685:29]
    node _T_97 = eq(cacheState, UInt<3>("h0")) @[cacheLookup.scala 687:37]
    node _T_98 = and(isCoherentWire, _T_97) @[cacheLookup.scala 687:23]
    when _T_98 : @[cacheLookup.scala 687:46]
      commitFifo.invalidateAddr <= inputBuffer.address @[cacheLookup.scala 688:31]
      commitFifo.invalidateEnable <= UInt<1>("h1") @[cacheLookup.scala 689:33]
    when loadCommit.ready : @[cacheLookup.scala 691:25]
      commitFifo.canAccept <= UInt<1>("h1") @[cacheLookup.scala 692:26]
      loadCommit.state <= commitFifo.dataOut.valid @[cacheLookup.scala 693:22]
      node _loadCommit_valid_T = eq(commitFifo.isEmpty, UInt<1>("h0")) @[cacheLookup.scala 694:25]
      loadCommit.valid <= _loadCommit_valid_T @[cacheLookup.scala 694:22]

  module CounterModule_1 :
    input clock : Clock
    input reset : Reset
    output count : UInt<1>
    input incrm : UInt<1>

    reg cntReg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[utils.scala 15:23]
    node _cntReg_T = eq(cntReg, UInt<1>("h1")) @[utils.scala 16:33]
    node _cntReg_T_1 = and(incrm, _cntReg_T) @[utils.scala 16:23]
    node _cntReg_T_2 = add(cntReg, UInt<1>("h1")) @[utils.scala 17:35]
    node _cntReg_T_3 = tail(_cntReg_T_2, 1) @[utils.scala 17:35]
    node _cntReg_T_4 = mux(incrm, _cntReg_T_3, cntReg) @[utils.scala 17:20]
    node _cntReg_T_5 = mux(_cntReg_T_1, UInt<1>("h0"), _cntReg_T_4) @[utils.scala 16:16]
    cntReg <= _cntReg_T_5 @[utils.scala 16:10]
    count <= cntReg @[utils.scala 19:9]

  module CounterModule_2 :
    input clock : Clock
    input reset : Reset
    output count : UInt<1>
    input incrm : UInt<1>

    reg cntReg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[utils.scala 15:23]
    node _cntReg_T = eq(cntReg, UInt<1>("h1")) @[utils.scala 16:33]
    node _cntReg_T_1 = and(incrm, _cntReg_T) @[utils.scala 16:23]
    node _cntReg_T_2 = add(cntReg, UInt<1>("h1")) @[utils.scala 17:35]
    node _cntReg_T_3 = tail(_cntReg_T_2, 1) @[utils.scala 17:35]
    node _cntReg_T_4 = mux(incrm, _cntReg_T_3, cntReg) @[utils.scala 17:20]
    node _cntReg_T_5 = mux(_cntReg_T_1, UInt<1>("h0"), _cntReg_T_4) @[utils.scala 16:16]
    cntReg <= _cntReg_T_5 @[utils.scala 16:10]
    count <= cntReg @[utils.scala 19:9]

  module AXIUnit :
    input clock : Clock
    input reset : Reset
    output request : { ready : UInt<1>, flip valid : UInt<1>, flip writeEn : UInt<1>, flip address : UInt<32>, flip data : UInt<64>, flip instruction : UInt<32>}
    output loadData : { flip ready : UInt<1>, valid : UInt<1>, data : UInt<64>, response : UInt<2>}
    output bus : { AWID : UInt<2>, AWADDR : UInt<32>, AWLEN : UInt<8>, AWSIZE : UInt<3>, AWBURST : UInt<2>, AWLOCK : UInt<1>, AWCACHE : UInt<4>, AWPROT : UInt<3>, AWQOS : UInt<4>, AWVALID : UInt<1>, flip AWREADY : UInt<1>, WDATA : UInt<32>, WSTRB : UInt<4>, WLAST : UInt<1>, WVALID : UInt<1>, flip WREADY : UInt<1>, flip BID : UInt<2>, flip BRESP : UInt<2>, flip BVALID : UInt<1>, BREADY : UInt<1>, ARID : UInt<2>, ARADDR : UInt<32>, ARLEN : UInt<8>, ARSIZE : UInt<3>, ARBURST : UInt<2>, ARLOCK : UInt<1>, ARCACHE : UInt<4>, ARPROT : UInt<3>, ARQOS : UInt<4>, ARVALID : UInt<1>, flip ARREADY : UInt<1>, flip RID : UInt<2>, flip RDATA : UInt<32>, flip RRESP : UInt<2>, flip RLAST : UInt<1>, flip RVALID : UInt<1>, RREADY : UInt<1>}

    request.ready <= UInt<1>("h0") @[AXIUnit.scala 34:17]
    loadData.data <= UInt<1>("h0") @[AXIUnit.scala 35:17]
    loadData.valid <= UInt<1>("h0") @[AXIUnit.scala 36:18]
    loadData.response <= UInt<1>("h0") @[AXIUnit.scala 37:21]
    bus.AWID <= UInt<1>("h0") @[AXIUnit.scala 40:12]
    bus.AWADDR <= UInt<1>("h0") @[AXIUnit.scala 41:14]
    bus.AWLEN <= UInt<1>("h0") @[AXIUnit.scala 42:13]
    bus.AWSIZE <= UInt<1>("h0") @[AXIUnit.scala 43:14]
    bus.AWBURST <= UInt<1>("h0") @[AXIUnit.scala 44:15]
    bus.AWLOCK <= UInt<1>("h0") @[AXIUnit.scala 45:14]
    bus.AWCACHE <= UInt<1>("h0") @[AXIUnit.scala 46:15]
    bus.AWPROT <= UInt<1>("h0") @[AXIUnit.scala 47:14]
    bus.AWQOS <= UInt<1>("h0") @[AXIUnit.scala 48:13]
    bus.AWVALID <= UInt<1>("h0") @[AXIUnit.scala 49:15]
    bus.WDATA <= UInt<1>("h0") @[AXIUnit.scala 51:13]
    bus.WSTRB <= UInt<1>("h0") @[AXIUnit.scala 52:13]
    bus.WLAST <= UInt<1>("h0") @[AXIUnit.scala 53:13]
    bus.WVALID <= UInt<1>("h0") @[AXIUnit.scala 54:14]
    bus.BREADY <= UInt<1>("h0") @[AXIUnit.scala 56:14]
    bus.ARID <= UInt<1>("h0") @[AXIUnit.scala 58:12]
    bus.ARADDR <= UInt<1>("h0") @[AXIUnit.scala 59:14]
    bus.ARLEN <= UInt<1>("h0") @[AXIUnit.scala 60:13]
    bus.ARSIZE <= UInt<1>("h0") @[AXIUnit.scala 61:14]
    bus.ARBURST <= UInt<1>("h0") @[AXIUnit.scala 62:15]
    bus.ARLOCK <= UInt<1>("h0") @[AXIUnit.scala 63:14]
    bus.ARCACHE <= UInt<1>("h0") @[AXIUnit.scala 64:15]
    bus.ARPROT <= UInt<1>("h0") @[AXIUnit.scala 65:14]
    bus.ARQOS <= UInt<1>("h0") @[AXIUnit.scala 66:13]
    bus.ARVALID <= UInt<1>("h0") @[AXIUnit.scala 67:15]
    bus.RREADY <= UInt<1>("h0") @[AXIUnit.scala 69:14]
    wire readComplete : UInt<1>
    readComplete <= UInt<1>("h0")
    wire writeComplete : UInt<1>
    writeComplete <= UInt<1>("h0")
    wire _inputBuffer_WIRE : { writeEn : UInt<1>, address : UInt<32>, instruction : UInt<32>}
    _inputBuffer_WIRE.instruction <= UInt<1>("h0")
    _inputBuffer_WIRE.address <= UInt<1>("h0")
    _inputBuffer_WIRE.writeEn <= UInt<1>("h0")
    reg inputBuffer : { writeEn : UInt<1>, address : UInt<32>, instruction : UInt<32>}, clock with :
      reset => (reset, _inputBuffer_WIRE) @[AXIUnit.scala 75:28]
    reg inputBufferState : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[AXIUnit.scala 86:33]
    node _T = eq(UInt<2>("h0"), inputBufferState) @[AXIUnit.scala 87:27]
    when _T : @[AXIUnit.scala 87:27]
      request.ready <= UInt<1>("h1") @[AXIUnit.scala 89:21]
      when request.valid : @[AXIUnit.scala 90:26]
        inputBuffer.writeEn <= request.writeEn @[AXIUnit.scala 91:29]
        inputBuffer.address <= request.address @[AXIUnit.scala 92:29]
        inputBuffer.instruction <= request.instruction @[AXIUnit.scala 93:33]
      node _inputBufferState_T = mux(request.writeEn, UInt<2>("h2"), UInt<2>("h1")) @[AXIUnit.scala 97:32]
      node _inputBufferState_T_1 = mux(request.valid, _inputBufferState_T, UInt<2>("h0")) @[AXIUnit.scala 96:30]
      inputBufferState <= _inputBufferState_T_1 @[AXIUnit.scala 96:24]
    else :
      node _T_1 = eq(UInt<2>("h1"), inputBufferState) @[AXIUnit.scala 87:27]
      when _T_1 : @[AXIUnit.scala 87:27]
        node _inputBufferState_T_2 = mux(readComplete, UInt<2>("h0"), UInt<2>("h1")) @[AXIUnit.scala 101:30]
        inputBufferState <= _inputBufferState_T_2 @[AXIUnit.scala 101:24]
      else :
        node _T_2 = eq(UInt<2>("h2"), inputBufferState) @[AXIUnit.scala 87:27]
        when _T_2 : @[AXIUnit.scala 87:27]
          node _inputBufferState_T_3 = mux(writeComplete, UInt<2>("h0"), UInt<2>("h2")) @[AXIUnit.scala 104:30]
          inputBufferState <= _inputBufferState_T_3 @[AXIUnit.scala 104:24]
    reg dataReg : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[AXIUnit.scala 109:26]
    node _dataReg_T = mux(request.valid, request.data, dataReg) @[AXIUnit.scala 110:19]
    dataReg <= _dataReg_T @[AXIUnit.scala 110:13]
    reg readAXIState : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[AXIUnit.scala 116:31]
    wire _readDataVec_WIRE : UInt<32>[2] @[AXIUnit.scala 117:38]
    _readDataVec_WIRE[0] <= UInt<32>("h0") @[AXIUnit.scala 117:38]
    _readDataVec_WIRE[1] <= UInt<32>("h0") @[AXIUnit.scala 117:38]
    reg readDataVec : UInt<32>[2], clock with :
      reset => (reset, _readDataVec_WIRE) @[AXIUnit.scala 117:30]
    reg responseValid : UInt<1>, clock with :
      reset => (reset, UInt<1>("h1")) @[AXIUnit.scala 118:32]
    inst readCounter of CounterModule_1 @[AXIUnit.scala 119:29]
    readCounter.clock <= clock
    readCounter.reset <= reset
    readCounter.incrm <= UInt<1>("h0") @[AXIUnit.scala 120:23]
    node _T_3 = eq(UInt<2>("h0"), readAXIState) @[AXIUnit.scala 121:26]
    when _T_3 : @[AXIUnit.scala 121:26]
      node _readAXIState_T = eq(inputBufferState, UInt<2>("h1")) @[AXIUnit.scala 123:46]
      node _readAXIState_T_1 = mux(_readAXIState_T, UInt<2>("h1"), UInt<2>("h0")) @[AXIUnit.scala 123:28]
      readAXIState <= _readAXIState_T_1 @[AXIUnit.scala 123:22]
    else :
      node _T_4 = eq(UInt<2>("h1"), readAXIState) @[AXIUnit.scala 121:26]
      when _T_4 : @[AXIUnit.scala 121:26]
        node sizeByIns = bits(inputBuffer.instruction, 13, 12) @[AXIUnit.scala 126:48]
        node _sizePerBeat_T = dshl(UInt<1>("h1"), sizeByIns) @[AXIUnit.scala 127:32]
        node sizePerBeat = mul(_sizePerBeat_T, UInt<4>("h8")) @[AXIUnit.scala 127:46]
        bus.ARVALID <= UInt<1>("h1") @[AXIUnit.scala 129:21]
        bus.ARID <= UInt<1>("h0") @[AXIUnit.scala 130:18]
        bus.ARADDR <= inputBuffer.address @[AXIUnit.scala 131:20]
        node _bus_ARLEN_T = add(sizePerBeat, UInt<6>("h20")) @[AXIUnit.scala 132:36]
        node _bus_ARLEN_T_1 = tail(_bus_ARLEN_T, 1) @[AXIUnit.scala 132:36]
        node _bus_ARLEN_T_2 = sub(_bus_ARLEN_T_1, UInt<1>("h1")) @[AXIUnit.scala 132:49]
        node _bus_ARLEN_T_3 = tail(_bus_ARLEN_T_2, 1) @[AXIUnit.scala 132:49]
        node _bus_ARLEN_T_4 = div(_bus_ARLEN_T_3, UInt<6>("h20")) @[AXIUnit.scala 132:56]
        node _bus_ARLEN_T_5 = sub(_bus_ARLEN_T_4, UInt<1>("h1")) @[AXIUnit.scala 132:70]
        node _bus_ARLEN_T_6 = tail(_bus_ARLEN_T_5, 1) @[AXIUnit.scala 132:70]
        bus.ARLEN <= _bus_ARLEN_T_6 @[AXIUnit.scala 132:19]
        node _bus_ARSIZE_T = leq(sizePerBeat, UInt<6>("h20")) @[AXIUnit.scala 133:39]
        node _bus_ARSIZE_T_1 = div(UInt<6>("h20"), UInt<4>("h8")) @[AXIUnit.scala 133:81]
        node bus_ARSIZE_hi = bits(_bus_ARSIZE_T_1, 5, 4) @[CircuitMath.scala 33:17]
        node bus_ARSIZE_lo = bits(_bus_ARSIZE_T_1, 3, 0) @[CircuitMath.scala 34:17]
        node bus_ARSIZE_useHi = orr(bus_ARSIZE_hi) @[CircuitMath.scala 35:22]
        node _bus_ARSIZE_T_2 = bits(bus_ARSIZE_hi, 1, 1) @[CircuitMath.scala 28:8]
        node _bus_ARSIZE_T_3 = bits(bus_ARSIZE_lo, 3, 3) @[CircuitMath.scala 30:12]
        node _bus_ARSIZE_T_4 = bits(bus_ARSIZE_lo, 2, 2) @[CircuitMath.scala 30:12]
        node _bus_ARSIZE_T_5 = bits(bus_ARSIZE_lo, 1, 1) @[CircuitMath.scala 28:8]
        node _bus_ARSIZE_T_6 = mux(_bus_ARSIZE_T_4, UInt<2>("h2"), _bus_ARSIZE_T_5) @[CircuitMath.scala 30:10]
        node _bus_ARSIZE_T_7 = mux(_bus_ARSIZE_T_3, UInt<2>("h3"), _bus_ARSIZE_T_6) @[CircuitMath.scala 30:10]
        node _bus_ARSIZE_T_8 = mux(bus_ARSIZE_useHi, _bus_ARSIZE_T_2, _bus_ARSIZE_T_7) @[CircuitMath.scala 36:21]
        node _bus_ARSIZE_T_9 = cat(bus_ARSIZE_useHi, _bus_ARSIZE_T_8) @[Cat.scala 33:92]
        node _bus_ARSIZE_T_10 = mux(_bus_ARSIZE_T, sizeByIns, _bus_ARSIZE_T_9) @[AXIUnit.scala 133:26]
        bus.ARSIZE <= _bus_ARSIZE_T_10 @[AXIUnit.scala 133:20]
        bus.ARBURST <= UInt<1>("h1") @[AXIUnit.scala 134:21]
        bus.ARLOCK <= UInt<1>("h0") @[AXIUnit.scala 135:20]
        bus.ARCACHE <= UInt<1>("h0") @[AXIUnit.scala 136:21]
        bus.ARPROT <= UInt<2>("h2") @[AXIUnit.scala 137:20]
        bus.ARQOS <= UInt<1>("h0") @[AXIUnit.scala 138:19]
        readCounter.reset <= UInt<1>("h1") @[AXIUnit.scala 140:27]
        node _readAXIState_T_2 = mux(bus.ARREADY, UInt<2>("h2"), UInt<2>("h1")) @[AXIUnit.scala 142:28]
        readAXIState <= _readAXIState_T_2 @[AXIUnit.scala 142:22]
      else :
        node _T_5 = eq(UInt<2>("h2"), readAXIState) @[AXIUnit.scala 121:26]
        when _T_5 : @[AXIUnit.scala 121:26]
          bus.RREADY <= UInt<1>("h1") @[AXIUnit.scala 145:20]
          node _T_6 = eq(bus.RID, UInt<1>("h0")) @[AXIUnit.scala 146:35]
          node _T_7 = and(bus.RVALID, _T_6) @[AXIUnit.scala 146:25]
          when _T_7 : @[AXIUnit.scala 146:44]
            readCounter.incrm <= UInt<1>("h1") @[AXIUnit.scala 147:29]
            readDataVec[readCounter.count] <= bus.RDATA @[AXIUnit.scala 148:42]
            node _responseValid_T = eq(bus.RRESP, UInt<1>("h0")) @[AXIUnit.scala 149:42]
            node _responseValid_T_1 = mux(_responseValid_T, responseValid, UInt<1>("h0")) @[AXIUnit.scala 149:31]
            responseValid <= _responseValid_T_1 @[AXIUnit.scala 149:25]
          node _readAXIState_T_3 = and(bus.RLAST, bus.RVALID) @[AXIUnit.scala 152:39]
          node _readAXIState_T_4 = mux(responseValid, UInt<2>("h3"), UInt<2>("h1")) @[AXIUnit.scala 153:26]
          node _readAXIState_T_5 = mux(_readAXIState_T_3, _readAXIState_T_4, UInt<2>("h2")) @[AXIUnit.scala 152:28]
          readAXIState <= _readAXIState_T_5 @[AXIUnit.scala 152:22]
        else :
          node _T_8 = eq(UInt<2>("h3"), readAXIState) @[AXIUnit.scala 121:26]
          when _T_8 : @[AXIUnit.scala 121:26]
            readComplete <= loadData.ready @[AXIUnit.scala 157:22]
            node doubleWordChoosen = cat(readDataVec[1], readDataVec[0]) @[Cat.scala 33:92]
            node _shiftAmount_T = bits(inputBuffer.instruction, 13, 12) @[AXIUnit.scala 160:58]
            node shiftAmount = dshl(UInt<1>("h1"), _shiftAmount_T) @[AXIUnit.scala 160:32]
            node _section_T = mul(UInt<4>("h8"), shiftAmount) @[AXIUnit.scala 161:35]
            node _section_T_1 = dshl(UInt<1>("h1"), _section_T) @[AXIUnit.scala 161:28]
            node _section_T_2 = sub(_section_T_1, UInt<1>("h1")) @[AXIUnit.scala 161:50]
            node section = tail(_section_T_2, 1) @[AXIUnit.scala 161:50]
            node _byteChunks_T = bits(doubleWordChoosen, 7, 0) @[AXIUnit.scala 163:28]
            node _byteChunks_T_1 = bits(doubleWordChoosen, 15, 8) @[AXIUnit.scala 163:28]
            node _byteChunks_T_2 = bits(doubleWordChoosen, 23, 16) @[AXIUnit.scala 163:28]
            node _byteChunks_T_3 = bits(doubleWordChoosen, 31, 24) @[AXIUnit.scala 163:28]
            node _byteChunks_T_4 = bits(doubleWordChoosen, 39, 32) @[AXIUnit.scala 163:28]
            node _byteChunks_T_5 = bits(doubleWordChoosen, 47, 40) @[AXIUnit.scala 163:28]
            node _byteChunks_T_6 = bits(doubleWordChoosen, 55, 48) @[AXIUnit.scala 163:28]
            node _byteChunks_T_7 = bits(doubleWordChoosen, 63, 56) @[AXIUnit.scala 163:28]
            wire byteChunks : UInt<8>[8] @[AXIUnit.scala 162:33]
            byteChunks[0] <= _byteChunks_T @[AXIUnit.scala 162:33]
            byteChunks[1] <= _byteChunks_T_1 @[AXIUnit.scala 162:33]
            byteChunks[2] <= _byteChunks_T_2 @[AXIUnit.scala 162:33]
            byteChunks[3] <= _byteChunks_T_3 @[AXIUnit.scala 162:33]
            byteChunks[4] <= _byteChunks_T_4 @[AXIUnit.scala 162:33]
            byteChunks[5] <= _byteChunks_T_5 @[AXIUnit.scala 162:33]
            byteChunks[6] <= _byteChunks_T_6 @[AXIUnit.scala 162:33]
            byteChunks[7] <= _byteChunks_T_7 @[AXIUnit.scala 162:33]
            node _byteChoosed_T = bits(inputBuffer.address, 2, 0) @[AXIUnit.scala 165:61]
            node _halfwordChoosed_T = bits(inputBuffer.address, 2, 1) @[AXIUnit.scala 166:71]
            node _halfwordChoosed_T_1 = mul(UInt<2>("h2"), _halfwordChoosed_T) @[AXIUnit.scala 166:50]
            node _halfwordChoosed_T_2 = add(_halfwordChoosed_T_1, UInt<1>("h1")) @[AXIUnit.scala 166:77]
            node _halfwordChoosed_T_3 = tail(_halfwordChoosed_T_2, 1) @[AXIUnit.scala 166:77]
            node _halfwordChoosed_T_4 = bits(_halfwordChoosed_T_3, 2, 0)
            node _halfwordChoosed_T_5 = bits(inputBuffer.address, 2, 1) @[AXIUnit.scala 166:120]
            node _halfwordChoosed_T_6 = mul(UInt<2>("h2"), _halfwordChoosed_T_5) @[AXIUnit.scala 166:99]
            node _halfwordChoosed_T_7 = bits(_halfwordChoosed_T_6, 2, 0)
            node halfwordChoosed = cat(byteChunks[_halfwordChoosed_T_4], byteChunks[_halfwordChoosed_T_7]) @[Cat.scala 33:92]
            node _wordChoosed_T = bits(inputBuffer.address, 2, 2) @[AXIUnit.scala 167:71]
            node _wordChoosed_T_1 = mul(UInt<2>("h2"), _wordChoosed_T) @[AXIUnit.scala 167:50]
            node _wordChoosed_T_2 = add(_wordChoosed_T_1, UInt<2>("h3")) @[AXIUnit.scala 167:75]
            node _wordChoosed_T_3 = tail(_wordChoosed_T_2, 1) @[AXIUnit.scala 167:75]
            node _wordChoosed_T_4 = bits(inputBuffer.address, 2, 2) @[AXIUnit.scala 167:118]
            node _wordChoosed_T_5 = mul(UInt<2>("h2"), _wordChoosed_T_4) @[AXIUnit.scala 167:97]
            node _wordChoosed_T_6 = add(_wordChoosed_T_5, UInt<2>("h2")) @[AXIUnit.scala 167:122]
            node _wordChoosed_T_7 = tail(_wordChoosed_T_6, 1) @[AXIUnit.scala 167:122]
            node _wordChoosed_T_8 = bits(inputBuffer.address, 2, 2) @[AXIUnit.scala 168:71]
            node _wordChoosed_T_9 = mul(UInt<2>("h2"), _wordChoosed_T_8) @[AXIUnit.scala 168:50]
            node _wordChoosed_T_10 = add(_wordChoosed_T_9, UInt<1>("h1")) @[AXIUnit.scala 168:75]
            node _wordChoosed_T_11 = tail(_wordChoosed_T_10, 1) @[AXIUnit.scala 168:75]
            node _wordChoosed_T_12 = bits(inputBuffer.address, 2, 2) @[AXIUnit.scala 168:118]
            node _wordChoosed_T_13 = mul(UInt<2>("h2"), _wordChoosed_T_12) @[AXIUnit.scala 168:97]
            node wordChoosed_lo = cat(byteChunks[_wordChoosed_T_11], byteChunks[_wordChoosed_T_13]) @[Cat.scala 33:92]
            node wordChoosed_hi = cat(byteChunks[_wordChoosed_T_3], byteChunks[_wordChoosed_T_7]) @[Cat.scala 33:92]
            node wordChoosed = cat(wordChoosed_hi, wordChoosed_lo) @[Cat.scala 33:92]
            node _T_9 = bits(inputBuffer.instruction, 13, 12) @[AXIUnit.scala 169:39]
            node _T_10 = eq(UInt<1>("h0"), _T_9) @[AXIUnit.scala 169:48]
            when _T_10 : @[AXIUnit.scala 169:48]
              node _loadData_data_T = bits(inputBuffer.instruction, 14, 14) @[AXIUnit.scala 170:67]
              node _loadData_data_T_1 = bits(byteChunks[_byteChoosed_T], 7, 7) @[AXIUnit.scala 171:77]
              node _loadData_data_T_2 = bits(_loadData_data_T_1, 0, 0) @[Bitwise.scala 77:15]
              node _loadData_data_T_3 = mux(_loadData_data_T_2, UInt<56>("hffffffffffffff"), UInt<56>("h0")) @[Bitwise.scala 77:12]
              node _loadData_data_T_4 = cat(_loadData_data_T_3, byteChunks[_byteChoosed_T]) @[Cat.scala 33:92]
              node _loadData_data_T_5 = mux(_loadData_data_T, byteChunks[_byteChoosed_T], _loadData_data_T_4) @[AXIUnit.scala 170:43]
              loadData.data <= _loadData_data_T_5 @[AXIUnit.scala 170:37]
            else :
              node _T_11 = eq(UInt<1>("h1"), _T_9) @[AXIUnit.scala 169:48]
              when _T_11 : @[AXIUnit.scala 169:48]
                node _loadData_data_T_6 = bits(inputBuffer.instruction, 14, 14) @[AXIUnit.scala 172:67]
                node _loadData_data_T_7 = bits(halfwordChoosed, 15, 15) @[AXIUnit.scala 173:81]
                node _loadData_data_T_8 = bits(_loadData_data_T_7, 0, 0) @[Bitwise.scala 77:15]
                node _loadData_data_T_9 = mux(_loadData_data_T_8, UInt<48>("hffffffffffff"), UInt<48>("h0")) @[Bitwise.scala 77:12]
                node _loadData_data_T_10 = cat(_loadData_data_T_9, halfwordChoosed) @[Cat.scala 33:92]
                node _loadData_data_T_11 = mux(_loadData_data_T_6, halfwordChoosed, _loadData_data_T_10) @[AXIUnit.scala 172:43]
                loadData.data <= _loadData_data_T_11 @[AXIUnit.scala 172:37]
              else :
                node _T_12 = eq(UInt<2>("h2"), _T_9) @[AXIUnit.scala 169:48]
                when _T_12 : @[AXIUnit.scala 169:48]
                  node _loadData_data_T_12 = bits(inputBuffer.instruction, 14, 14) @[AXIUnit.scala 174:67]
                  node _loadData_data_T_13 = bits(wordChoosed, 31, 31) @[AXIUnit.scala 175:77]
                  node _loadData_data_T_14 = bits(_loadData_data_T_13, 0, 0) @[Bitwise.scala 77:15]
                  node _loadData_data_T_15 = mux(_loadData_data_T_14, UInt<32>("hffffffff"), UInt<32>("h0")) @[Bitwise.scala 77:12]
                  node _loadData_data_T_16 = cat(_loadData_data_T_15, wordChoosed) @[Cat.scala 33:92]
                  node _loadData_data_T_17 = mux(_loadData_data_T_12, wordChoosed, _loadData_data_T_16) @[AXIUnit.scala 174:43]
                  loadData.data <= _loadData_data_T_17 @[AXIUnit.scala 174:37]
                else :
                  node _T_13 = eq(UInt<2>("h3"), _T_9) @[AXIUnit.scala 169:48]
                  when _T_13 : @[AXIUnit.scala 169:48]
                    node _loadData_data_T_18 = bits(inputBuffer.instruction, 14, 14) @[AXIUnit.scala 176:67]
                    node _loadData_data_T_19 = mux(_loadData_data_T_18, UInt<1>("h0"), doubleWordChoosen) @[AXIUnit.scala 176:43]
                    loadData.data <= _loadData_data_T_19 @[AXIUnit.scala 176:37]
            loadData.valid <= UInt<1>("h1") @[AXIUnit.scala 180:24]
            node _readAXIState_T_6 = mux(loadData.ready, UInt<2>("h0"), UInt<2>("h3")) @[AXIUnit.scala 181:28]
            readAXIState <= _readAXIState_T_6 @[AXIUnit.scala 181:22]
    reg writeAXIState : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[AXIUnit.scala 185:32]
    inst writeCounter of CounterModule_2 @[AXIUnit.scala 186:30]
    writeCounter.clock <= clock
    writeCounter.reset <= reset
    writeCounter.incrm <= UInt<1>("h0") @[AXIUnit.scala 187:24]
    node _T_14 = eq(UInt<2>("h0"), writeAXIState) @[AXIUnit.scala 188:27]
    when _T_14 : @[AXIUnit.scala 188:27]
      node _writeAXIState_T = eq(inputBufferState, UInt<2>("h2")) @[AXIUnit.scala 190:49]
      node _writeAXIState_T_1 = mux(_writeAXIState_T, UInt<2>("h1"), UInt<2>("h0")) @[AXIUnit.scala 190:31]
      writeAXIState <= _writeAXIState_T_1 @[AXIUnit.scala 190:25]
    else :
      node _T_15 = eq(UInt<2>("h1"), writeAXIState) @[AXIUnit.scala 188:27]
      when _T_15 : @[AXIUnit.scala 188:27]
        node sizeByIns_1 = bits(inputBuffer.instruction, 13, 12) @[AXIUnit.scala 193:48]
        node _sizePerBeat_T_1 = dshl(UInt<1>("h1"), sizeByIns_1) @[AXIUnit.scala 194:32]
        node sizePerBeat_1 = mul(_sizePerBeat_T_1, UInt<4>("h8")) @[AXIUnit.scala 194:46]
        bus.AWVALID <= UInt<1>("h1") @[AXIUnit.scala 196:21]
        bus.AWID <= UInt<1>("h0") @[AXIUnit.scala 197:18]
        bus.AWADDR <= inputBuffer.address @[AXIUnit.scala 198:20]
        node _bus_ARLEN_T_7 = add(sizePerBeat_1, UInt<6>("h20")) @[AXIUnit.scala 199:36]
        node _bus_ARLEN_T_8 = tail(_bus_ARLEN_T_7, 1) @[AXIUnit.scala 199:36]
        node _bus_ARLEN_T_9 = sub(_bus_ARLEN_T_8, UInt<1>("h1")) @[AXIUnit.scala 199:49]
        node _bus_ARLEN_T_10 = tail(_bus_ARLEN_T_9, 1) @[AXIUnit.scala 199:49]
        node _bus_ARLEN_T_11 = div(_bus_ARLEN_T_10, UInt<6>("h20")) @[AXIUnit.scala 199:56]
        node _bus_ARLEN_T_12 = sub(_bus_ARLEN_T_11, UInt<1>("h1")) @[AXIUnit.scala 199:70]
        node _bus_ARLEN_T_13 = tail(_bus_ARLEN_T_12, 1) @[AXIUnit.scala 199:70]
        bus.ARLEN <= _bus_ARLEN_T_13 @[AXIUnit.scala 199:19]
        node _bus_ARSIZE_T_11 = leq(sizePerBeat_1, UInt<6>("h20")) @[AXIUnit.scala 200:39]
        node _bus_ARSIZE_T_12 = div(UInt<6>("h20"), UInt<4>("h8")) @[AXIUnit.scala 200:81]
        node bus_ARSIZE_hi_1 = bits(_bus_ARSIZE_T_12, 5, 4) @[CircuitMath.scala 33:17]
        node bus_ARSIZE_lo_1 = bits(_bus_ARSIZE_T_12, 3, 0) @[CircuitMath.scala 34:17]
        node bus_ARSIZE_useHi_1 = orr(bus_ARSIZE_hi_1) @[CircuitMath.scala 35:22]
        node _bus_ARSIZE_T_13 = bits(bus_ARSIZE_hi_1, 1, 1) @[CircuitMath.scala 28:8]
        node _bus_ARSIZE_T_14 = bits(bus_ARSIZE_lo_1, 3, 3) @[CircuitMath.scala 30:12]
        node _bus_ARSIZE_T_15 = bits(bus_ARSIZE_lo_1, 2, 2) @[CircuitMath.scala 30:12]
        node _bus_ARSIZE_T_16 = bits(bus_ARSIZE_lo_1, 1, 1) @[CircuitMath.scala 28:8]
        node _bus_ARSIZE_T_17 = mux(_bus_ARSIZE_T_15, UInt<2>("h2"), _bus_ARSIZE_T_16) @[CircuitMath.scala 30:10]
        node _bus_ARSIZE_T_18 = mux(_bus_ARSIZE_T_14, UInt<2>("h3"), _bus_ARSIZE_T_17) @[CircuitMath.scala 30:10]
        node _bus_ARSIZE_T_19 = mux(bus_ARSIZE_useHi_1, _bus_ARSIZE_T_13, _bus_ARSIZE_T_18) @[CircuitMath.scala 36:21]
        node _bus_ARSIZE_T_20 = cat(bus_ARSIZE_useHi_1, _bus_ARSIZE_T_19) @[Cat.scala 33:92]
        node _bus_ARSIZE_T_21 = mux(_bus_ARSIZE_T_11, sizeByIns_1, _bus_ARSIZE_T_20) @[AXIUnit.scala 200:26]
        bus.ARSIZE <= _bus_ARSIZE_T_21 @[AXIUnit.scala 200:20]
        bus.AWBURST <= UInt<1>("h1") @[AXIUnit.scala 201:21]
        bus.AWLOCK <= UInt<1>("h0") @[AXIUnit.scala 202:20]
        bus.AWCACHE <= UInt<1>("h0") @[AXIUnit.scala 203:21]
        bus.AWPROT <= UInt<2>("h2") @[AXIUnit.scala 204:20]
        bus.AWQOS <= UInt<1>("h0") @[AXIUnit.scala 205:19]
        bus.WVALID <= UInt<1>("h1") @[AXIUnit.scala 207:20]
        node _bus_WSTRB_T = dshl(UInt<1>("h1"), bus.ARSIZE) @[AXIUnit.scala 208:36]
        node _bus_WSTRB_T_1 = dshl(UInt<1>("h1"), _bus_WSTRB_T) @[AXIUnit.scala 208:28]
        node _bus_WSTRB_T_2 = sub(_bus_WSTRB_T_1, UInt<1>("h1")) @[AXIUnit.scala 208:52]
        node _bus_WSTRB_T_3 = tail(_bus_WSTRB_T_2, 1) @[AXIUnit.scala 208:52]
        bus.WSTRB <= _bus_WSTRB_T_3 @[AXIUnit.scala 208:19]
        node _bus_WLAST_T = eq(writeCounter.count, bus.ARLEN) @[AXIUnit.scala 209:41]
        bus.WLAST <= _bus_WLAST_T @[AXIUnit.scala 209:19]
        node _writeChunks_T = bits(dataReg, 31, 0) @[AXIUnit.scala 213:18]
        node _writeChunks_T_1 = bits(dataReg, 63, 32) @[AXIUnit.scala 213:18]
        wire writeChunks : UInt<32>[2] @[AXIUnit.scala 212:34]
        writeChunks[0] <= _writeChunks_T @[AXIUnit.scala 212:34]
        writeChunks[1] <= _writeChunks_T_1 @[AXIUnit.scala 212:34]
        when bus.WREADY : @[AXIUnit.scala 215:25]
          bus.WDATA <= writeChunks[writeCounter.count] @[AXIUnit.scala 216:21]
          writeCounter.incrm <= UInt<1>("h1") @[AXIUnit.scala 217:30]
        node _writeAXIState_T_2 = mux(bus.WLAST, UInt<2>("h2"), UInt<2>("h1")) @[AXIUnit.scala 220:29]
        writeAXIState <= _writeAXIState_T_2 @[AXIUnit.scala 220:23]
      else :
        node _T_16 = eq(UInt<2>("h2"), writeAXIState) @[AXIUnit.scala 188:27]
        when _T_16 : @[AXIUnit.scala 188:27]
          bus.BREADY <= UInt<1>("h1") @[AXIUnit.scala 223:20]
          node _writeComplete_T = eq(bus.BID, UInt<1>("h0")) @[AXIUnit.scala 224:48]
          node _writeComplete_T_1 = and(bus.BVALID, _writeComplete_T) @[AXIUnit.scala 224:37]
          node _writeComplete_T_2 = eq(bus.BRESP, UInt<1>("h0")) @[AXIUnit.scala 224:70]
          node _writeComplete_T_3 = and(_writeComplete_T_1, _writeComplete_T_2) @[AXIUnit.scala 224:57]
          writeComplete <= _writeComplete_T_3 @[AXIUnit.scala 224:23]
          node _writeAXIState_T_3 = eq(bus.BID, UInt<1>("h0")) @[AXIUnit.scala 226:53]
          node _writeAXIState_T_4 = and(bus.BVALID, _writeAXIState_T_3) @[AXIUnit.scala 226:41]
          node _writeAXIState_T_5 = eq(bus.BRESP, UInt<1>("h0")) @[AXIUnit.scala 227:41]
          node _writeAXIState_T_6 = mux(_writeAXIState_T_5, UInt<2>("h0"), UInt<2>("h1")) @[AXIUnit.scala 227:30]
          node _writeAXIState_T_7 = mux(_writeAXIState_T_4, _writeAXIState_T_6, UInt<2>("h2")) @[AXIUnit.scala 226:29]
          writeAXIState <= _writeAXIState_T_7 @[AXIUnit.scala 226:23]
        else :
          node _T_17 = eq(UInt<2>("h3"), writeAXIState) @[AXIUnit.scala 188:27]
          when _T_17 : @[AXIUnit.scala 188:27]
            writeAXIState <= UInt<2>("h0") @[AXIUnit.scala 231:23]

  module writeDataInFifo :
    input clock : Clock
    input reset : Reset
    output dataIn : { flip valid : UInt<1>, flip data : UInt<64>}
    input dataOut : { flip valid : UInt<1>, flip data : UInt<64>}
    input canAccept : UInt<1>
    output isEmpty : UInt<1>

    dataOut.valid <= UInt<1>("h0") @[writeDataInFifo.scala 17:17]
    dataOut.data <= UInt<1>("h0") @[writeDataInFifo.scala 18:16]
    isEmpty <= UInt<1>("h0") @[writeDataInFifo.scala 20:11]
    reg memReg : { valid : UInt<1>, data : UInt<64>}[8], clock with :
      reset => (UInt<1>("h0"), memReg) @[writeDataInFifo.scala 36:19]
    wire incrRead : UInt<1>
    incrRead <= UInt<1>("h0")
    wire incrWrite : UInt<1>
    incrWrite <= UInt<1>("h0")
    reg readPtr : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[writeDataInFifo.scala 23:25]
    node _nextVal_T = eq(readPtr, UInt<3>("h7")) @[writeDataInFifo.scala 24:30]
    node _nextVal_T_1 = add(readPtr, UInt<1>("h1")) @[writeDataInFifo.scala 24:59]
    node _nextVal_T_2 = tail(_nextVal_T_1, 1) @[writeDataInFifo.scala 24:59]
    node nextRead = mux(_nextVal_T, UInt<1>("h0"), _nextVal_T_2) @[writeDataInFifo.scala 24:22]
    when incrRead : @[writeDataInFifo.scala 25:17]
      readPtr <= nextRead @[writeDataInFifo.scala 26:14]
    reg writePtr : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[writeDataInFifo.scala 23:25]
    node _nextVal_T_3 = eq(writePtr, UInt<3>("h7")) @[writeDataInFifo.scala 24:30]
    node _nextVal_T_4 = add(writePtr, UInt<1>("h1")) @[writeDataInFifo.scala 24:59]
    node _nextVal_T_5 = tail(_nextVal_T_4, 1) @[writeDataInFifo.scala 24:59]
    node nextWrite = mux(_nextVal_T_3, UInt<1>("h0"), _nextVal_T_5) @[writeDataInFifo.scala 24:22]
    when incrWrite : @[writeDataInFifo.scala 25:17]
      writePtr <= nextWrite @[writeDataInFifo.scala 26:14]
    reg emptyReg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h1")) @[writeDataInFifo.scala 43:25]
    reg fullReg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[writeDataInFifo.scala 44:24]
    node op = cat(dataIn.valid, canAccept) @[writeDataInFifo.scala 46:25]
    wire doWrite : UInt<1>
    doWrite <= UInt<1>("h0")
    node _T = eq(UInt<1>("h0"), op) @[writeDataInFifo.scala 48:15]
    when _T : @[writeDataInFifo.scala 48:15]
      skip
    else :
      node _T_1 = eq(UInt<1>("h1"), op) @[writeDataInFifo.scala 48:15]
      when _T_1 : @[writeDataInFifo.scala 48:15]
        node _T_2 = eq(emptyReg, UInt<1>("h0")) @[writeDataInFifo.scala 51:13]
        when _T_2 : @[writeDataInFifo.scala 51:26]
          fullReg <= UInt<1>("h0") @[writeDataInFifo.scala 52:17]
          node _emptyReg_T = eq(nextRead, writePtr) @[writeDataInFifo.scala 53:30]
          emptyReg <= _emptyReg_T @[writeDataInFifo.scala 53:18]
          incrRead <= UInt<1>("h1") @[writeDataInFifo.scala 54:18]
      else :
        node _T_3 = eq(UInt<2>("h2"), op) @[writeDataInFifo.scala 48:15]
        when _T_3 : @[writeDataInFifo.scala 48:15]
          node _T_4 = eq(fullReg, UInt<1>("h0")) @[writeDataInFifo.scala 58:13]
          when _T_4 : @[writeDataInFifo.scala 58:25]
            doWrite <= UInt<1>("h1") @[writeDataInFifo.scala 59:17]
            emptyReg <= UInt<1>("h0") @[writeDataInFifo.scala 60:18]
            node _fullReg_T = eq(nextWrite, readPtr) @[writeDataInFifo.scala 61:30]
            fullReg <= _fullReg_T @[writeDataInFifo.scala 61:17]
            incrWrite <= UInt<1>("h1") @[writeDataInFifo.scala 62:19]
        else :
          node _T_5 = eq(UInt<2>("h3"), op) @[writeDataInFifo.scala 48:15]
          when _T_5 : @[writeDataInFifo.scala 48:15]
            node _T_6 = eq(fullReg, UInt<1>("h0")) @[writeDataInFifo.scala 66:13]
            when _T_6 : @[writeDataInFifo.scala 66:25]
              doWrite <= UInt<1>("h1") @[writeDataInFifo.scala 67:17]
              emptyReg <= UInt<1>("h0") @[writeDataInFifo.scala 68:18]
              when emptyReg : @[writeDataInFifo.scala 69:26]
                fullReg <= UInt<1>("h0") @[writeDataInFifo.scala 70:19]
              else :
                node _fullReg_T_1 = eq(nextWrite, nextRead) @[writeDataInFifo.scala 72:32]
                fullReg <= _fullReg_T_1 @[writeDataInFifo.scala 72:19]
              incrWrite <= UInt<1>("h1") @[writeDataInFifo.scala 74:19]
            node _T_7 = eq(emptyReg, UInt<1>("h0")) @[writeDataInFifo.scala 76:13]
            when _T_7 : @[writeDataInFifo.scala 76:26]
              fullReg <= UInt<1>("h0") @[writeDataInFifo.scala 77:17]
              when fullReg : @[writeDataInFifo.scala 78:23]
                emptyReg <= UInt<1>("h0") @[writeDataInFifo.scala 79:18]
              else :
                node _emptyReg_T_1 = eq(nextRead, nextWrite) @[writeDataInFifo.scala 81:30]
                emptyReg <= _emptyReg_T_1 @[writeDataInFifo.scala 81:18]
              incrRead <= UInt<1>("h1") @[writeDataInFifo.scala 83:18]
    when doWrite : @[writeDataInFifo.scala 87:19]
      memReg[writePtr].data <= dataIn.data @[writeDataInFifo.scala 88:22]
      memReg[writePtr].valid <= dataIn.valid @[writeDataInFifo.scala 88:22]
    dataOut.data <= memReg[readPtr].data @[writeDataInFifo.scala 90:11]
    dataOut.valid <= memReg[readPtr].valid @[writeDataInFifo.scala 90:11]
    node _dataOut_valid_T = eq(emptyReg, UInt<1>("h0")) @[writeDataInFifo.scala 92:20]
    dataOut.valid <= _dataOut_valid_T @[writeDataInFifo.scala 92:17]
    isEmpty <= emptyReg @[writeDataInFifo.scala 93:11]

  module CounterModule_3 :
    input clock : Clock
    input reset : Reset
    output count : UInt<3>
    input incrm : UInt<1>

    reg cntReg : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[utils.scala 15:23]
    node _cntReg_T = eq(cntReg, UInt<3>("h7")) @[utils.scala 16:33]
    node _cntReg_T_1 = and(incrm, _cntReg_T) @[utils.scala 16:23]
    node _cntReg_T_2 = add(cntReg, UInt<1>("h1")) @[utils.scala 17:35]
    node _cntReg_T_3 = tail(_cntReg_T_2, 1) @[utils.scala 17:35]
    node _cntReg_T_4 = mux(incrm, _cntReg_T_3, cntReg) @[utils.scala 17:20]
    node _cntReg_T_5 = mux(_cntReg_T_1, UInt<1>("h0"), _cntReg_T_4) @[utils.scala 16:16]
    cntReg <= _cntReg_T_5 @[utils.scala 16:10]
    count <= cntReg @[utils.scala 19:9]

  module CounterModule_4 :
    input clock : Clock
    input reset : Reset
    output count : UInt<3>
    input incrm : UInt<1>

    reg cntReg : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[utils.scala 15:23]
    node _cntReg_T = eq(cntReg, UInt<3>("h7")) @[utils.scala 16:33]
    node _cntReg_T_1 = and(incrm, _cntReg_T) @[utils.scala 16:23]
    node _cntReg_T_2 = add(cntReg, UInt<1>("h1")) @[utils.scala 17:35]
    node _cntReg_T_3 = tail(_cntReg_T_2, 1) @[utils.scala 17:35]
    node _cntReg_T_4 = mux(incrm, _cntReg_T_3, cntReg) @[utils.scala 17:20]
    node _cntReg_T_5 = mux(_cntReg_T_1, UInt<1>("h0"), _cntReg_T_4) @[utils.scala 16:16]
    cntReg <= _cntReg_T_5 @[utils.scala 16:10]
    count <= cntReg @[utils.scala 19:9]

  module CounterModule_5 :
    input clock : Clock
    input reset : Reset
    output count : UInt<3>
    input incrm : UInt<1>

    reg cntReg : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[utils.scala 15:23]
    node _cntReg_T = eq(cntReg, UInt<3>("h7")) @[utils.scala 16:33]
    node _cntReg_T_1 = and(incrm, _cntReg_T) @[utils.scala 16:23]
    node _cntReg_T_2 = add(cntReg, UInt<1>("h1")) @[utils.scala 17:35]
    node _cntReg_T_3 = tail(_cntReg_T_2, 1) @[utils.scala 17:35]
    node _cntReg_T_4 = mux(incrm, _cntReg_T_3, cntReg) @[utils.scala 17:20]
    node _cntReg_T_5 = mux(_cntReg_T_1, UInt<1>("h0"), _cntReg_T_4) @[utils.scala 16:16]
    cntReg <= _cntReg_T_5 @[utils.scala 16:10]
    count <= cntReg @[utils.scala 19:9]

  module ACEUnit :
    input clock : Clock
    input reset : Reset
    output request : { ready : UInt<1>, flip valid : UInt<1>, flip writeEn : UInt<1>, flip address : UInt<32>, flip data : UInt<512>, flip instruction : UInt<32>, flip isUnique : UInt<1>, flip isClean : UInt<1>}
    output loadData : { flip ready : UInt<1>, valid : UInt<1>, data : UInt<512>, response : UInt<2>}
    output coherencyRequest : { flip ready : UInt<1>, valid : UInt<1>, flip accepted : UInt<1>, address : UInt<32>, dataReq : UInt<1>, invalidateReq : UInt<1>}
    output bus : { AWID : UInt<2>, AWADDR : UInt<32>, AWLEN : UInt<8>, AWSIZE : UInt<3>, AWBURST : UInt<2>, AWLOCK : UInt<1>, AWCACHE : UInt<4>, AWPROT : UInt<3>, AWQOS : UInt<4>, AWVALID : UInt<1>, flip AWREADY : UInt<1>, WDATA : UInt<64>, WSTRB : UInt<8>, WLAST : UInt<1>, WVALID : UInt<1>, flip WREADY : UInt<1>, flip BID : UInt<2>, flip BRESP : UInt<2>, flip BVALID : UInt<1>, BREADY : UInt<1>, ARID : UInt<2>, ARADDR : UInt<32>, ARLEN : UInt<8>, ARSIZE : UInt<3>, ARBURST : UInt<2>, ARLOCK : UInt<1>, ARCACHE : UInt<4>, ARPROT : UInt<3>, ARQOS : UInt<4>, ARVALID : UInt<1>, flip ARREADY : UInt<1>, flip RID : UInt<2>, flip RDATA : UInt<64>, flip RLAST : UInt<1>, flip RVALID : UInt<1>, RREADY : UInt<1>, AWDOMAIN : UInt<2>, AWSNOOP : UInt<3>, AWBAR : UInt<2>, ARDOMAIN : UInt<2>, ARSNOOP : UInt<4>, ARBAR : UInt<2>, flip RRESP : UInt<4>, flip ACVALID : UInt<1>, ACREADY : UInt<1>, flip ACADDR : UInt<32>, flip ACSNOOP : UInt<4>, flip ACPROT : UInt<3>, CRVALID : UInt<1>, flip CRREADY : UInt<1>, CRRESP : UInt<5>, CDVALID : UInt<1>, flip CDREADY : UInt<1>, CDDATA : UInt<64>, CDLAST : UInt<1>}
    input setFence : UInt<1>
    output coherencyReceived : UInt<1>
    input isAtomicsInOperation : UInt<1>

    request.ready <= UInt<1>("h0") @[ACEUnit.scala 38:17]
    loadData.data <= UInt<1>("h0") @[ACEUnit.scala 39:17]
    loadData.valid <= UInt<1>("h0") @[ACEUnit.scala 40:18]
    loadData.response <= UInt<1>("h0") @[ACEUnit.scala 41:21]
    coherencyRequest.valid <= UInt<1>("h0") @[ACEUnit.scala 43:26]
    coherencyRequest.address <= UInt<1>("h0") @[ACEUnit.scala 44:28]
    coherencyRequest.dataReq <= UInt<1>("h0") @[ACEUnit.scala 45:28]
    coherencyRequest.invalidateReq <= UInt<1>("h0") @[ACEUnit.scala 46:34]
    bus.AWID <= UInt<1>("h0") @[ACEUnit.scala 49:12]
    bus.AWADDR <= UInt<1>("h0") @[ACEUnit.scala 50:14]
    bus.AWLEN <= UInt<1>("h0") @[ACEUnit.scala 51:13]
    bus.AWSIZE <= UInt<1>("h0") @[ACEUnit.scala 52:14]
    bus.AWBURST <= UInt<1>("h0") @[ACEUnit.scala 53:15]
    bus.AWLOCK <= UInt<1>("h0") @[ACEUnit.scala 54:14]
    bus.AWCACHE <= UInt<1>("h0") @[ACEUnit.scala 55:15]
    bus.AWPROT <= UInt<1>("h0") @[ACEUnit.scala 56:14]
    bus.AWQOS <= UInt<1>("h0") @[ACEUnit.scala 57:13]
    bus.AWVALID <= UInt<1>("h0") @[ACEUnit.scala 58:15]
    bus.WDATA <= UInt<1>("h0") @[ACEUnit.scala 60:13]
    bus.WSTRB <= UInt<1>("h0") @[ACEUnit.scala 61:13]
    bus.WLAST <= UInt<1>("h0") @[ACEUnit.scala 62:13]
    bus.WVALID <= UInt<1>("h0") @[ACEUnit.scala 63:14]
    bus.BREADY <= UInt<1>("h0") @[ACEUnit.scala 65:14]
    bus.ARID <= UInt<1>("h0") @[ACEUnit.scala 67:12]
    bus.ARADDR <= UInt<1>("h0") @[ACEUnit.scala 68:14]
    bus.ARLEN <= UInt<1>("h0") @[ACEUnit.scala 69:13]
    bus.ARSIZE <= UInt<1>("h0") @[ACEUnit.scala 70:14]
    bus.ARBURST <= UInt<1>("h0") @[ACEUnit.scala 71:15]
    bus.ARLOCK <= UInt<1>("h0") @[ACEUnit.scala 72:14]
    bus.ARCACHE <= UInt<1>("h0") @[ACEUnit.scala 73:15]
    bus.ARPROT <= UInt<1>("h0") @[ACEUnit.scala 74:14]
    bus.ARQOS <= UInt<1>("h0") @[ACEUnit.scala 75:13]
    bus.ARVALID <= UInt<1>("h0") @[ACEUnit.scala 76:15]
    bus.RREADY <= UInt<1>("h0") @[ACEUnit.scala 78:14]
    bus.AWDOMAIN <= UInt<1>("h0") @[ACEUnit.scala 81:16]
    bus.AWSNOOP <= UInt<1>("h0") @[ACEUnit.scala 82:15]
    bus.AWBAR <= UInt<1>("h0") @[ACEUnit.scala 83:13]
    bus.ARDOMAIN <= UInt<1>("h0") @[ACEUnit.scala 85:16]
    bus.ARSNOOP <= UInt<1>("h0") @[ACEUnit.scala 86:15]
    bus.ARBAR <= UInt<1>("h0") @[ACEUnit.scala 87:13]
    bus.ACREADY <= UInt<1>("h0") @[ACEUnit.scala 89:15]
    bus.CRVALID <= UInt<1>("h0") @[ACEUnit.scala 91:15]
    bus.CRRESP <= UInt<1>("h0") @[ACEUnit.scala 92:14]
    bus.CDVALID <= UInt<1>("h0") @[ACEUnit.scala 94:15]
    bus.CDDATA <= UInt<1>("h0") @[ACEUnit.scala 95:14]
    bus.CDLAST <= UInt<1>("h0") @[ACEUnit.scala 96:14]
    wire readComplete : UInt<1>
    readComplete <= UInt<1>("h0")
    wire writeComplete : UInt<1>
    writeComplete <= UInt<1>("h0")
    wire coherentComplete : UInt<1>
    coherentComplete <= UInt<1>("h0")
    wire coherencyReceivedWire : UInt<1>
    coherencyReceivedWire <= UInt<1>("h0")
    coherencyReceived <= coherencyReceivedWire @[ACEUnit.scala 105:21]
    wire _inputBuffer_WIRE : { writeEn : UInt<1>, address : UInt<32>, isUnique : UInt<1>, isClean : UInt<1>, snoop : UInt<4>}
    _inputBuffer_WIRE.snoop <= UInt<1>("h0")
    _inputBuffer_WIRE.isClean <= UInt<1>("h0")
    _inputBuffer_WIRE.isUnique <= UInt<1>("h0")
    _inputBuffer_WIRE.address <= UInt<1>("h0")
    _inputBuffer_WIRE.writeEn <= UInt<1>("h0")
    reg inputBuffer : { writeEn : UInt<1>, address : UInt<32>, isUnique : UInt<1>, isClean : UInt<1>, snoop : UInt<4>}, clock with :
      reset => (reset, _inputBuffer_WIRE) @[ACEUnit.scala 108:28]
    reg fenceReadBarrierSend : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[ACEUnit.scala 122:37]
    reg fenceWriteBarrierSend : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[ACEUnit.scala 123:38]
    reg inputBufferState : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[ACEUnit.scala 126:33]
    node _T = eq(UInt<3>("h0"), inputBufferState) @[ACEUnit.scala 127:27]
    when _T : @[ACEUnit.scala 127:27]
      node _coherencyReceivedWire_T = eq(bus.ACPROT, UInt<2>("h2")) @[ACEUnit.scala 129:58]
      node _coherencyReceivedWire_T_1 = and(bus.ACVALID, _coherencyReceivedWire_T) @[ACEUnit.scala 129:44]
      coherencyReceivedWire <= _coherencyReceivedWire_T_1 @[ACEUnit.scala 129:29]
      request.ready <= UInt<1>("h1") @[ACEUnit.scala 130:21]
      node _bus_ACREADY_T = eq(setFence, UInt<1>("h0")) @[ACEUnit.scala 131:48]
      node _bus_ACREADY_T_1 = and(coherencyRequest.ready, _bus_ACREADY_T) @[ACEUnit.scala 131:45]
      bus.ACREADY <= _bus_ACREADY_T_1 @[ACEUnit.scala 131:19]
      node _T_1 = eq(bus.ACPROT, UInt<2>("h2")) @[ACEUnit.scala 132:38]
      node _T_2 = and(bus.ACVALID, _T_1) @[ACEUnit.scala 132:24]
      when _T_2 : @[ACEUnit.scala 132:55]
        inputBuffer.address <= bus.ACADDR @[ACEUnit.scala 133:29]
        inputBuffer.snoop <= bus.ACSNOOP @[ACEUnit.scala 134:27]
        coherencyRequest.valid <= bus.ACVALID @[ACEUnit.scala 135:32]
        coherencyRequest.address <= bus.ACADDR @[ACEUnit.scala 136:34]
        node _coherencyRequest_invalidateReq_T = eq(bus.ACSNOOP, UInt<4>("h9")) @[ACEUnit.scala 137:56]
        node _coherencyRequest_invalidateReq_T_1 = eq(bus.ACSNOOP, UInt<3>("h7")) @[ACEUnit.scala 137:87]
        node _coherencyRequest_invalidateReq_T_2 = or(_coherencyRequest_invalidateReq_T, _coherencyRequest_invalidateReq_T_1) @[ACEUnit.scala 137:71]
        coherencyRequest.invalidateReq <= _coherencyRequest_invalidateReq_T_2 @[ACEUnit.scala 137:40]
        node _coherencyRequest_dataReq_T = eq(bus.ACSNOOP, UInt<1>("h1")) @[ACEUnit.scala 138:50]
        node _coherencyRequest_dataReq_T_1 = eq(bus.ACSNOOP, UInt<3>("h7")) @[ACEUnit.scala 138:81]
        node _coherencyRequest_dataReq_T_2 = or(_coherencyRequest_dataReq_T, _coherencyRequest_dataReq_T_1) @[ACEUnit.scala 138:65]
        coherencyRequest.dataReq <= _coherencyRequest_dataReq_T_2 @[ACEUnit.scala 138:34]
      else :
        when request.valid : @[ACEUnit.scala 139:34]
          inputBuffer.writeEn <= request.writeEn @[ACEUnit.scala 140:29]
          inputBuffer.address <= request.address @[ACEUnit.scala 141:29]
          inputBuffer.isClean <= request.isClean @[ACEUnit.scala 142:29]
          inputBuffer.isUnique <= request.isUnique @[ACEUnit.scala 143:30]
      when setFence : @[ACEUnit.scala 145:21]
        inputBufferState <= UInt<3>("h4") @[ACEUnit.scala 146:26]
      else :
        when bus.ACVALID : @[ACEUnit.scala 147:31]
          when isAtomicsInOperation : @[ACEUnit.scala 148:35]
            node _inputBufferState_T = mux(request.writeEn, UInt<3>("h2"), UInt<3>("h1")) @[ACEUnit.scala 150:34]
            node _inputBufferState_T_1 = mux(request.valid, _inputBufferState_T, UInt<3>("h0")) @[ACEUnit.scala 149:34]
            inputBufferState <= _inputBufferState_T_1 @[ACEUnit.scala 149:28]
          else :
            node _inputBufferState_T_2 = mux(coherencyRequest.ready, UInt<3>("h3"), UInt<3>("h0")) @[ACEUnit.scala 153:34]
            inputBufferState <= _inputBufferState_T_2 @[ACEUnit.scala 153:28]
        else :
          node _inputBufferState_T_3 = mux(request.writeEn, UInt<3>("h2"), UInt<3>("h1")) @[ACEUnit.scala 157:34]
          node _inputBufferState_T_4 = mux(request.valid, _inputBufferState_T_3, UInt<3>("h0")) @[ACEUnit.scala 156:32]
          inputBufferState <= _inputBufferState_T_4 @[ACEUnit.scala 156:26]
    else :
      node _T_3 = eq(UInt<3>("h1"), inputBufferState) @[ACEUnit.scala 127:27]
      when _T_3 : @[ACEUnit.scala 127:27]
        node _coherencyReceivedWire_T_2 = eq(bus.ACPROT, UInt<2>("h2")) @[ACEUnit.scala 162:58]
        node _coherencyReceivedWire_T_3 = and(bus.ACVALID, _coherencyReceivedWire_T_2) @[ACEUnit.scala 162:44]
        coherencyReceivedWire <= _coherencyReceivedWire_T_3 @[ACEUnit.scala 162:29]
        node _inputBufferState_T_5 = mux(readComplete, UInt<3>("h0"), UInt<3>("h1")) @[ACEUnit.scala 163:30]
        inputBufferState <= _inputBufferState_T_5 @[ACEUnit.scala 163:24]
      else :
        node _T_4 = eq(UInt<3>("h2"), inputBufferState) @[ACEUnit.scala 127:27]
        when _T_4 : @[ACEUnit.scala 127:27]
          node _inputBufferState_T_6 = mux(writeComplete, UInt<3>("h0"), UInt<3>("h2")) @[ACEUnit.scala 166:30]
          inputBufferState <= _inputBufferState_T_6 @[ACEUnit.scala 166:24]
        else :
          node _T_5 = eq(UInt<3>("h3"), inputBufferState) @[ACEUnit.scala 127:27]
          when _T_5 : @[ACEUnit.scala 127:27]
            node _inputBufferState_T_7 = mux(coherentComplete, UInt<3>("h0"), UInt<3>("h3")) @[ACEUnit.scala 169:30]
            inputBufferState <= _inputBufferState_T_7 @[ACEUnit.scala 169:24]
          else :
            node _T_6 = eq(UInt<3>("h4"), inputBufferState) @[ACEUnit.scala 127:27]
            when _T_6 : @[ACEUnit.scala 127:27]
              bus.AWID <= UInt<1>("h0") @[ACEUnit.scala 172:16]
              bus.AWADDR <= UInt<1>("h0") @[ACEUnit.scala 173:18]
              bus.AWLEN <= UInt<1>("h0") @[ACEUnit.scala 174:17]
              bus.AWSIZE <= UInt<2>("h3") @[ACEUnit.scala 175:18]
              bus.AWBURST <= UInt<1>("h1") @[ACEUnit.scala 176:19]
              bus.AWLOCK <= UInt<1>("h0") @[ACEUnit.scala 177:18]
              bus.AWCACHE <= UInt<2>("h3") @[ACEUnit.scala 178:19]
              bus.AWPROT <= UInt<2>("h2") @[ACEUnit.scala 179:18]
              bus.AWQOS <= UInt<1>("h0") @[ACEUnit.scala 180:17]
              node _bus_AWVALID_T = eq(fenceWriteBarrierSend, UInt<1>("h0")) @[ACEUnit.scala 181:22]
              bus.AWVALID <= _bus_AWVALID_T @[ACEUnit.scala 181:19]
              bus.AWSNOOP <= UInt<1>("h0") @[ACEUnit.scala 182:19]
              bus.AWDOMAIN <= UInt<2>("h2") @[ACEUnit.scala 183:20]
              bus.AWBAR <= UInt<1>("h1") @[ACEUnit.scala 184:17]
              bus.ARID <= UInt<1>("h0") @[ACEUnit.scala 186:16]
              bus.ARADDR <= UInt<1>("h0") @[ACEUnit.scala 187:18]
              bus.ARLEN <= UInt<1>("h0") @[ACEUnit.scala 188:17]
              bus.ARSIZE <= UInt<2>("h3") @[ACEUnit.scala 189:18]
              bus.ARBURST <= UInt<1>("h1") @[ACEUnit.scala 190:19]
              bus.ARLOCK <= UInt<1>("h0") @[ACEUnit.scala 191:18]
              bus.ARCACHE <= UInt<2>("h3") @[ACEUnit.scala 192:19]
              bus.ARPROT <= UInt<2>("h2") @[ACEUnit.scala 193:18]
              bus.ARQOS <= UInt<1>("h0") @[ACEUnit.scala 194:17]
              node _bus_ARVALID_T = eq(fenceReadBarrierSend, UInt<1>("h0")) @[ACEUnit.scala 195:22]
              bus.ARVALID <= _bus_ARVALID_T @[ACEUnit.scala 195:19]
              bus.ARSNOOP <= UInt<1>("h0") @[ACEUnit.scala 196:19]
              bus.ARDOMAIN <= UInt<2>("h2") @[ACEUnit.scala 197:20]
              bus.ARBAR <= UInt<1>("h1") @[ACEUnit.scala 198:17]
              when bus.ARREADY : @[ACEUnit.scala 200:24]
                fenceReadBarrierSend <= UInt<1>("h1") @[ACEUnit.scala 201:30]
              when bus.AWREADY : @[ACEUnit.scala 203:24]
                fenceWriteBarrierSend <= UInt<1>("h1") @[ACEUnit.scala 204:31]
              node _inputBufferState_T_8 = and(fenceReadBarrierSend, fenceWriteBarrierSend) @[ACEUnit.scala 207:52]
              node _inputBufferState_T_9 = mux(_inputBufferState_T_8, UInt<3>("h0"), UInt<3>("h4")) @[ACEUnit.scala 207:30]
              inputBufferState <= _inputBufferState_T_9 @[ACEUnit.scala 207:24]
    reg dataReg : UInt<512>, clock with :
      reset => (reset, UInt<512>("h0")) @[ACEUnit.scala 212:24]
    node _dataReg_T = mux(request.valid, request.data, dataReg) @[ACEUnit.scala 213:17]
    dataReg <= _dataReg_T @[ACEUnit.scala 213:11]
    reg responseReg : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[ACEUnit.scala 215:28]
    reg readAXIState : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[ACEUnit.scala 222:29]
    wire _readDataVec_WIRE : UInt<64>[8] @[ACEUnit.scala 223:36]
    _readDataVec_WIRE[0] <= UInt<64>("h0") @[ACEUnit.scala 223:36]
    _readDataVec_WIRE[1] <= UInt<64>("h0") @[ACEUnit.scala 223:36]
    _readDataVec_WIRE[2] <= UInt<64>("h0") @[ACEUnit.scala 223:36]
    _readDataVec_WIRE[3] <= UInt<64>("h0") @[ACEUnit.scala 223:36]
    _readDataVec_WIRE[4] <= UInt<64>("h0") @[ACEUnit.scala 223:36]
    _readDataVec_WIRE[5] <= UInt<64>("h0") @[ACEUnit.scala 223:36]
    _readDataVec_WIRE[6] <= UInt<64>("h0") @[ACEUnit.scala 223:36]
    _readDataVec_WIRE[7] <= UInt<64>("h0") @[ACEUnit.scala 223:36]
    reg readDataVec : UInt<64>[8], clock with :
      reset => (reset, _readDataVec_WIRE) @[ACEUnit.scala 223:28]
    reg responseValid : UInt<1>, clock with :
      reset => (reset, UInt<1>("h1")) @[ACEUnit.scala 224:30]
    inst readCounter of CounterModule_3 @[ACEUnit.scala 225:27]
    readCounter.clock <= clock
    readCounter.reset <= reset
    readCounter.incrm <= UInt<1>("h0") @[ACEUnit.scala 226:21]
    node _T_7 = eq(UInt<2>("h0"), readAXIState) @[ACEUnit.scala 227:24]
    when _T_7 : @[ACEUnit.scala 227:24]
      node _T_8 = eq(isAtomicsInOperation, UInt<1>("h0")) @[ACEUnit.scala 229:37]
      node _T_9 = and(coherencyReceivedWire, _T_8) @[ACEUnit.scala 229:34]
      when _T_9 : @[ACEUnit.scala 229:59]
        readComplete <= UInt<1>("h1") @[ACEUnit.scala 230:22]
        readAXIState <= UInt<2>("h0") @[ACEUnit.scala 231:22]
      node _readAXIState_T = eq(inputBufferState, UInt<3>("h1")) @[ACEUnit.scala 233:44]
      node _readAXIState_T_1 = mux(_readAXIState_T, UInt<2>("h1"), UInt<2>("h0")) @[ACEUnit.scala 233:26]
      readAXIState <= _readAXIState_T_1 @[ACEUnit.scala 233:20]
    else :
      node _T_10 = eq(UInt<2>("h1"), readAXIState) @[ACEUnit.scala 227:24]
      when _T_10 : @[ACEUnit.scala 227:24]
        bus.ARVALID <= UInt<1>("h1") @[ACEUnit.scala 236:19]
        bus.ARID <= UInt<1>("h0") @[ACEUnit.scala 237:16]
        bus.ARADDR <= inputBuffer.address @[ACEUnit.scala 238:18]
        bus.ARLEN <= UInt<3>("h7") @[ACEUnit.scala 239:17]
        bus.ARSIZE <= UInt<2>("h3") @[ACEUnit.scala 240:18]
        bus.ARBURST <= UInt<1>("h1") @[ACEUnit.scala 241:19]
        bus.ARLOCK <= UInt<1>("h0") @[ACEUnit.scala 242:18]
        bus.ARCACHE <= UInt<4>("hf") @[ACEUnit.scala 243:19]
        bus.ARPROT <= UInt<2>("h2") @[ACEUnit.scala 244:18]
        bus.ARQOS <= UInt<1>("h0") @[ACEUnit.scala 245:17]
        bus.ARDOMAIN <= UInt<2>("h2") @[ACEUnit.scala 247:20]
        bus.ARSNOOP <= UInt<1>("h1") @[ACEUnit.scala 248:19]
        node _T_11 = cat(inputBuffer.isClean, inputBuffer.isUnique) @[Cat.scala 33:92]
        node _T_12 = eq(UInt<1>("h0"), _T_11) @[ACEUnit.scala 249:61]
        when _T_12 : @[ACEUnit.scala 249:61]
          bus.ARSNOOP <= UInt<1>("h1") @[ACEUnit.scala 250:34]
        else :
          node _T_13 = eq(UInt<1>("h1"), _T_11) @[ACEUnit.scala 249:61]
          when _T_13 : @[ACEUnit.scala 249:61]
            bus.ARSNOOP <= UInt<3>("h7") @[ACEUnit.scala 251:34]
          else :
            node _T_14 = eq(UInt<2>("h3"), _T_11) @[ACEUnit.scala 249:61]
            when _T_14 : @[ACEUnit.scala 249:61]
              bus.ARSNOOP <= UInt<4>("hb") @[ACEUnit.scala 252:34]
        bus.ARBAR <= UInt<1>("h0") @[ACEUnit.scala 254:17]
        readCounter.reset <= UInt<1>("h1") @[ACEUnit.scala 256:25]
        when coherencyReceivedWire : @[ACEUnit.scala 257:34]
          readAXIState <= UInt<2>("h0") @[ACEUnit.scala 258:22]
        else :
          node _readAXIState_T_2 = mux(bus.ARREADY, UInt<2>("h2"), UInt<2>("h1")) @[ACEUnit.scala 260:28]
          readAXIState <= _readAXIState_T_2 @[ACEUnit.scala 260:22]
      else :
        node _T_15 = eq(UInt<2>("h2"), readAXIState) @[ACEUnit.scala 227:24]
        when _T_15 : @[ACEUnit.scala 227:24]
          bus.RREADY <= UInt<1>("h1") @[ACEUnit.scala 264:18]
          node _isCleanUniqueWire_T = cat(inputBuffer.isClean, inputBuffer.isUnique) @[Cat.scala 33:92]
          node isCleanUniqueWire = eq(_isCleanUniqueWire_T, UInt<2>("h3")) @[ACEUnit.scala 265:78]
          when isCleanUniqueWire : @[ACEUnit.scala 266:30]
            node _responseReg_T = bits(bus.RRESP, 3, 2) @[ACEUnit.scala 267:33]
            responseReg <= _responseReg_T @[ACEUnit.scala 267:21]
            node _responseValid_T = bits(bus.RRESP, 1, 0) @[ACEUnit.scala 268:39]
            node _responseValid_T_1 = eq(_responseValid_T, UInt<1>("h0")) @[ACEUnit.scala 268:45]
            node _responseValid_T_2 = mux(_responseValid_T_1, responseValid, UInt<1>("h0")) @[ACEUnit.scala 268:29]
            responseValid <= _responseValid_T_2 @[ACEUnit.scala 268:23]
          else :
            node _T_16 = eq(bus.RID, UInt<1>("h0")) @[ACEUnit.scala 270:35]
            node _T_17 = and(bus.RVALID, _T_16) @[ACEUnit.scala 270:25]
            when _T_17 : @[ACEUnit.scala 270:44]
              readCounter.incrm <= UInt<1>("h1") @[ACEUnit.scala 271:29]
              readDataVec[readCounter.count] <= bus.RDATA @[ACEUnit.scala 272:42]
              node _responseValid_T_3 = bits(bus.RRESP, 1, 0) @[ACEUnit.scala 273:41]
              node _responseValid_T_4 = eq(_responseValid_T_3, UInt<1>("h0")) @[ACEUnit.scala 273:47]
              node _responseValid_T_5 = mux(_responseValid_T_4, responseValid, UInt<1>("h0")) @[ACEUnit.scala 273:31]
              responseValid <= _responseValid_T_5 @[ACEUnit.scala 273:25]
              node _responseReg_T_1 = bits(bus.RRESP, 3, 2) @[ACEUnit.scala 274:35]
              responseReg <= _responseReg_T_1 @[ACEUnit.scala 274:23]
          when isCleanUniqueWire : @[ACEUnit.scala 277:30]
            when coherencyReceivedWire : @[ACEUnit.scala 278:36]
              readAXIState <= UInt<2>("h0") @[ACEUnit.scala 279:24]
            else :
              node _readAXIState_T_3 = eq(bus.RID, UInt<1>("h0")) @[ACEUnit.scala 281:52]
              node _readAXIState_T_4 = and(bus.RVALID, _readAXIState_T_3) @[ACEUnit.scala 281:42]
              node _readAXIState_T_5 = mux(responseValid, UInt<2>("h3"), UInt<2>("h1")) @[ACEUnit.scala 282:30]
              node _readAXIState_T_6 = mux(_readAXIState_T_4, _readAXIState_T_5, UInt<2>("h2")) @[ACEUnit.scala 281:30]
              readAXIState <= _readAXIState_T_6 @[ACEUnit.scala 281:24]
          else :
            when coherencyReceivedWire : @[ACEUnit.scala 287:36]
              readAXIState <= UInt<2>("h0") @[ACEUnit.scala 288:24]
            else :
              node _readAXIState_T_7 = and(bus.RLAST, bus.RVALID) @[ACEUnit.scala 290:41]
              node _readAXIState_T_8 = mux(responseValid, UInt<2>("h3"), UInt<2>("h1")) @[ACEUnit.scala 291:30]
              node _readAXIState_T_9 = mux(_readAXIState_T_7, _readAXIState_T_8, UInt<2>("h2")) @[ACEUnit.scala 290:30]
              readAXIState <= _readAXIState_T_9 @[ACEUnit.scala 290:24]
        else :
          node _T_18 = eq(UInt<2>("h3"), readAXIState) @[ACEUnit.scala 227:24]
          when _T_18 : @[ACEUnit.scala 227:24]
            node _T_19 = eq(isAtomicsInOperation, UInt<1>("h0")) @[ACEUnit.scala 299:37]
            node _T_20 = and(coherencyReceivedWire, _T_19) @[ACEUnit.scala 299:34]
            when _T_20 : @[ACEUnit.scala 299:59]
              readComplete <= UInt<1>("h1") @[ACEUnit.scala 300:22]
              readAXIState <= UInt<2>("h0") @[ACEUnit.scala 301:22]
            else :
              node _isCleanUniqueWire_T_1 = cat(inputBuffer.isClean, inputBuffer.isUnique) @[Cat.scala 33:92]
              node isCleanUniqueWire_1 = eq(_isCleanUniqueWire_T_1, UInt<2>("h3")) @[ACEUnit.scala 303:80]
              readComplete <= loadData.ready @[ACEUnit.scala 304:22]
              loadData.valid <= UInt<1>("h1") @[ACEUnit.scala 305:24]
              node loadData_data_lo_lo = cat(readDataVec[1], readDataVec[0]) @[Cat.scala 33:92]
              node loadData_data_lo_hi = cat(readDataVec[3], readDataVec[2]) @[Cat.scala 33:92]
              node loadData_data_lo = cat(loadData_data_lo_hi, loadData_data_lo_lo) @[Cat.scala 33:92]
              node loadData_data_hi_lo = cat(readDataVec[5], readDataVec[4]) @[Cat.scala 33:92]
              node loadData_data_hi_hi = cat(readDataVec[7], readDataVec[6]) @[Cat.scala 33:92]
              node loadData_data_hi = cat(loadData_data_hi_hi, loadData_data_hi_lo) @[Cat.scala 33:92]
              node _loadData_data_T = cat(loadData_data_hi, loadData_data_lo) @[Cat.scala 33:92]
              node _loadData_data_T_1 = mux(isCleanUniqueWire_1, UInt<1>("h0"), _loadData_data_T) @[ACEUnit.scala 306:29]
              loadData.data <= _loadData_data_T_1 @[ACEUnit.scala 306:23]
              loadData.response <= responseReg @[ACEUnit.scala 307:27]
              node _readAXIState_T_10 = mux(loadData.ready, UInt<2>("h0"), UInt<2>("h3")) @[ACEUnit.scala 308:28]
              readAXIState <= _readAXIState_T_10 @[ACEUnit.scala 308:22]
    reg writeAXIState : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[ACEUnit.scala 314:30]
    inst writeCounter of CounterModule_4 @[ACEUnit.scala 315:28]
    writeCounter.clock <= clock
    writeCounter.reset <= reset
    writeCounter.incrm <= UInt<1>("h0") @[ACEUnit.scala 316:22]
    node _T_21 = eq(UInt<2>("h0"), writeAXIState) @[ACEUnit.scala 317:25]
    when _T_21 : @[ACEUnit.scala 317:25]
      node _writeAXIState_T = eq(inputBufferState, UInt<3>("h2")) @[ACEUnit.scala 319:47]
      node _writeAXIState_T_1 = mux(_writeAXIState_T, UInt<2>("h1"), UInt<2>("h0")) @[ACEUnit.scala 319:29]
      writeAXIState <= _writeAXIState_T_1 @[ACEUnit.scala 319:23]
    else :
      node _T_22 = eq(UInt<2>("h1"), writeAXIState) @[ACEUnit.scala 317:25]
      when _T_22 : @[ACEUnit.scala 317:25]
        bus.AWVALID <= UInt<1>("h1") @[ACEUnit.scala 322:19]
        bus.AWID <= UInt<1>("h0") @[ACEUnit.scala 323:16]
        bus.AWADDR <= inputBuffer.address @[ACEUnit.scala 324:18]
        bus.AWLEN <= UInt<3>("h7") @[ACEUnit.scala 325:17]
        bus.AWSIZE <= UInt<2>("h3") @[ACEUnit.scala 326:18]
        bus.AWBURST <= UInt<1>("h1") @[ACEUnit.scala 327:19]
        bus.AWLOCK <= UInt<1>("h0") @[ACEUnit.scala 328:18]
        bus.AWCACHE <= UInt<4>("hf") @[ACEUnit.scala 329:19]
        bus.AWPROT <= UInt<2>("h2") @[ACEUnit.scala 330:18]
        bus.AWQOS <= UInt<1>("h0") @[ACEUnit.scala 331:17]
        bus.AWDOMAIN <= UInt<2>("h2") @[ACEUnit.scala 333:20]
        bus.AWSNOOP <= UInt<2>("h3") @[ACEUnit.scala 334:19]
        bus.WVALID <= UInt<1>("h1") @[ACEUnit.scala 336:18]
        node _bus_WSTRB_T = mux(UInt<1>("h1"), UInt<8>("hff"), UInt<8>("h0")) @[Bitwise.scala 77:12]
        bus.WSTRB <= _bus_WSTRB_T @[ACEUnit.scala 337:17]
        node _bus_WLAST_T = eq(writeCounter.count, UInt<3>("h7")) @[ACEUnit.scala 338:39]
        bus.WLAST <= _bus_WLAST_T @[ACEUnit.scala 338:17]
        node _writeChunks_T = bits(dataReg, 63, 0) @[ACEUnit.scala 342:16]
        node _writeChunks_T_1 = bits(dataReg, 127, 64) @[ACEUnit.scala 342:16]
        node _writeChunks_T_2 = bits(dataReg, 191, 128) @[ACEUnit.scala 342:16]
        node _writeChunks_T_3 = bits(dataReg, 255, 192) @[ACEUnit.scala 342:16]
        node _writeChunks_T_4 = bits(dataReg, 319, 256) @[ACEUnit.scala 342:16]
        node _writeChunks_T_5 = bits(dataReg, 383, 320) @[ACEUnit.scala 342:16]
        node _writeChunks_T_6 = bits(dataReg, 447, 384) @[ACEUnit.scala 342:16]
        node _writeChunks_T_7 = bits(dataReg, 511, 448) @[ACEUnit.scala 342:16]
        wire writeChunks : UInt<64>[8] @[ACEUnit.scala 341:32]
        writeChunks[0] <= _writeChunks_T @[ACEUnit.scala 341:32]
        writeChunks[1] <= _writeChunks_T_1 @[ACEUnit.scala 341:32]
        writeChunks[2] <= _writeChunks_T_2 @[ACEUnit.scala 341:32]
        writeChunks[3] <= _writeChunks_T_3 @[ACEUnit.scala 341:32]
        writeChunks[4] <= _writeChunks_T_4 @[ACEUnit.scala 341:32]
        writeChunks[5] <= _writeChunks_T_5 @[ACEUnit.scala 341:32]
        writeChunks[6] <= _writeChunks_T_6 @[ACEUnit.scala 341:32]
        writeChunks[7] <= _writeChunks_T_7 @[ACEUnit.scala 341:32]
        when bus.WREADY : @[ACEUnit.scala 344:23]
          bus.WDATA <= writeChunks[writeCounter.count] @[ACEUnit.scala 345:19]
          writeCounter.incrm <= UInt<1>("h1") @[ACEUnit.scala 346:28]
        node _writeAXIState_T_2 = mux(bus.WLAST, UInt<2>("h2"), UInt<2>("h1")) @[ACEUnit.scala 349:27]
        writeAXIState <= _writeAXIState_T_2 @[ACEUnit.scala 349:21]
      else :
        node _T_23 = eq(UInt<2>("h2"), writeAXIState) @[ACEUnit.scala 317:25]
        when _T_23 : @[ACEUnit.scala 317:25]
          bus.BREADY <= UInt<1>("h1") @[ACEUnit.scala 352:18]
          node _writeComplete_T = eq(bus.BID, UInt<1>("h0")) @[ACEUnit.scala 353:46]
          node _writeComplete_T_1 = and(bus.BVALID, _writeComplete_T) @[ACEUnit.scala 353:35]
          node _writeComplete_T_2 = eq(bus.BRESP, UInt<1>("h0")) @[ACEUnit.scala 353:68]
          node _writeComplete_T_3 = and(_writeComplete_T_1, _writeComplete_T_2) @[ACEUnit.scala 353:55]
          writeComplete <= _writeComplete_T_3 @[ACEUnit.scala 353:21]
          node _writeAXIState_T_3 = eq(bus.BID, UInt<1>("h0")) @[ACEUnit.scala 355:51]
          node _writeAXIState_T_4 = and(bus.BVALID, _writeAXIState_T_3) @[ACEUnit.scala 355:39]
          node _writeAXIState_T_5 = eq(bus.BRESP, UInt<1>("h0")) @[ACEUnit.scala 356:39]
          node _writeAXIState_T_6 = mux(_writeAXIState_T_5, UInt<2>("h0"), UInt<2>("h1")) @[ACEUnit.scala 356:28]
          node _writeAXIState_T_7 = mux(_writeAXIState_T_4, _writeAXIState_T_6, UInt<2>("h2")) @[ACEUnit.scala 355:27]
          writeAXIState <= _writeAXIState_T_7 @[ACEUnit.scala 355:21]
        else :
          node _T_24 = eq(UInt<2>("h3"), writeAXIState) @[ACEUnit.scala 317:25]
          when _T_24 : @[ACEUnit.scala 317:25]
            writeAXIState <= UInt<2>("h0") @[ACEUnit.scala 360:21]
    reg responseValidReg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[ACEUnit.scala 365:33]
    reg coherentAXIState : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[ACEUnit.scala 366:33]
    inst coherentCounter of CounterModule_5 @[ACEUnit.scala 367:31]
    coherentCounter.clock <= clock
    coherentCounter.reset <= reset
    coherentCounter.incrm <= UInt<1>("h0") @[ACEUnit.scala 368:25]
    node _T_25 = eq(UInt<2>("h0"), coherentAXIState) @[ACEUnit.scala 369:27]
    when _T_25 : @[ACEUnit.scala 369:27]
      node _coherencyRequest_valid_T = eq(inputBufferState, UInt<3>("h3")) @[ACEUnit.scala 371:50]
      coherencyRequest.valid <= _coherencyRequest_valid_T @[ACEUnit.scala 371:30]
      coherencyRequest.address <= inputBuffer.address @[ACEUnit.scala 372:32]
      node _coherencyRequest_invalidateReq_T_3 = eq(inputBuffer.snoop, UInt<4>("h9")) @[ACEUnit.scala 373:60]
      node _coherencyRequest_invalidateReq_T_4 = eq(inputBuffer.snoop, UInt<3>("h7")) @[ACEUnit.scala 373:97]
      node _coherencyRequest_invalidateReq_T_5 = or(_coherencyRequest_invalidateReq_T_3, _coherencyRequest_invalidateReq_T_4) @[ACEUnit.scala 373:75]
      coherencyRequest.invalidateReq <= _coherencyRequest_invalidateReq_T_5 @[ACEUnit.scala 373:38]
      node _coherencyRequest_dataReq_T_3 = eq(inputBuffer.snoop, UInt<1>("h1")) @[ACEUnit.scala 374:54]
      node _coherencyRequest_dataReq_T_4 = eq(inputBuffer.snoop, UInt<3>("h7")) @[ACEUnit.scala 374:91]
      node _coherencyRequest_dataReq_T_5 = or(_coherencyRequest_dataReq_T_3, _coherencyRequest_dataReq_T_4) @[ACEUnit.scala 374:69]
      coherencyRequest.dataReq <= _coherencyRequest_dataReq_T_5 @[ACEUnit.scala 374:32]
      node _coherentAXIState_T = mux(coherencyRequest.accepted, UInt<2>("h1"), UInt<2>("h0")) @[ACEUnit.scala 376:30]
      coherentAXIState <= _coherentAXIState_T @[ACEUnit.scala 376:24]
    else :
      node _T_26 = eq(UInt<2>("h1"), coherentAXIState) @[ACEUnit.scala 369:27]
      when _T_26 : @[ACEUnit.scala 369:27]
        request.ready <= UInt<1>("h1") @[ACEUnit.scala 379:21]
        when request.valid : @[ACEUnit.scala 380:27]
          responseValidReg <= request.writeEn @[ACEUnit.scala 381:26]
          dataReg <= request.data @[ACEUnit.scala 382:17]
          node _responseReg_T_2 = cat(request.isUnique, request.isClean) @[Cat.scala 33:92]
          responseReg <= _responseReg_T_2 @[ACEUnit.scala 383:21]
        node _coherentAXIState_T_1 = mux(request.valid, UInt<2>("h2"), UInt<2>("h1")) @[ACEUnit.scala 386:30]
        coherentAXIState <= _coherentAXIState_T_1 @[ACEUnit.scala 386:24]
      else :
        node _T_27 = eq(UInt<2>("h2"), coherentAXIState) @[ACEUnit.scala 369:27]
        when _T_27 : @[ACEUnit.scala 369:27]
          bus.CRVALID <= UInt<1>("h1") @[ACEUnit.scala 389:19]
          node _bus_CRRESP_T = bits(responseReg, 1, 1) @[ACEUnit.scala 390:69]
          node _bus_CRRESP_T_1 = eq(_bus_CRRESP_T, UInt<1>("h0")) @[ACEUnit.scala 390:57]
          node _bus_CRRESP_T_2 = bits(responseReg, 0, 0) @[ACEUnit.scala 390:86]
          node _bus_CRRESP_T_3 = eq(_bus_CRRESP_T_2, UInt<1>("h0")) @[ACEUnit.scala 390:74]
          node bus_CRRESP_lo = cat(UInt<1>("h0"), responseValidReg) @[Cat.scala 33:92]
          node bus_CRRESP_hi_hi = cat(UInt<1>("h0"), _bus_CRRESP_T_1) @[Cat.scala 33:92]
          node bus_CRRESP_hi = cat(bus_CRRESP_hi_hi, _bus_CRRESP_T_3) @[Cat.scala 33:92]
          node _bus_CRRESP_T_4 = cat(bus_CRRESP_hi, bus_CRRESP_lo) @[Cat.scala 33:92]
          node _bus_CRRESP_T_5 = mux(responseValidReg, _bus_CRRESP_T_4, UInt<1>("h0")) @[ACEUnit.scala 390:24]
          bus.CRRESP <= _bus_CRRESP_T_5 @[ACEUnit.scala 390:18]
          when bus.CRREADY : @[ACEUnit.scala 392:24]
            node _coherentComplete_T = eq(responseValidReg, UInt<1>("h0")) @[ACEUnit.scala 393:29]
            coherentComplete <= _coherentComplete_T @[ACEUnit.scala 393:26]
            node _coherentAXIState_T_2 = mux(responseValidReg, UInt<2>("h3"), UInt<2>("h0")) @[ACEUnit.scala 394:32]
            coherentAXIState <= _coherentAXIState_T_2 @[ACEUnit.scala 394:26]
          else :
            coherentAXIState <= UInt<2>("h2") @[ACEUnit.scala 396:26]
        else :
          node _T_28 = eq(UInt<2>("h3"), coherentAXIState) @[ACEUnit.scala 369:27]
          when _T_28 : @[ACEUnit.scala 369:27]
            bus.CDVALID <= UInt<1>("h1") @[ACEUnit.scala 400:19]
            node _writeChunks_T_8 = bits(dataReg, 63, 0) @[ACEUnit.scala 404:16]
            node _writeChunks_T_9 = bits(dataReg, 127, 64) @[ACEUnit.scala 404:16]
            node _writeChunks_T_10 = bits(dataReg, 191, 128) @[ACEUnit.scala 404:16]
            node _writeChunks_T_11 = bits(dataReg, 255, 192) @[ACEUnit.scala 404:16]
            node _writeChunks_T_12 = bits(dataReg, 319, 256) @[ACEUnit.scala 404:16]
            node _writeChunks_T_13 = bits(dataReg, 383, 320) @[ACEUnit.scala 404:16]
            node _writeChunks_T_14 = bits(dataReg, 447, 384) @[ACEUnit.scala 404:16]
            node _writeChunks_T_15 = bits(dataReg, 511, 448) @[ACEUnit.scala 404:16]
            wire writeChunks_1 : UInt<64>[8] @[ACEUnit.scala 403:32]
            writeChunks_1[0] <= _writeChunks_T_8 @[ACEUnit.scala 403:32]
            writeChunks_1[1] <= _writeChunks_T_9 @[ACEUnit.scala 403:32]
            writeChunks_1[2] <= _writeChunks_T_10 @[ACEUnit.scala 403:32]
            writeChunks_1[3] <= _writeChunks_T_11 @[ACEUnit.scala 403:32]
            writeChunks_1[4] <= _writeChunks_T_12 @[ACEUnit.scala 403:32]
            writeChunks_1[5] <= _writeChunks_T_13 @[ACEUnit.scala 403:32]
            writeChunks_1[6] <= _writeChunks_T_14 @[ACEUnit.scala 403:32]
            writeChunks_1[7] <= _writeChunks_T_15 @[ACEUnit.scala 403:32]
            when bus.CDREADY : @[ACEUnit.scala 407:24]
              bus.CDDATA <= writeChunks_1[coherentCounter.count] @[ACEUnit.scala 408:20]
              coherentCounter.incrm <= UInt<1>("h1") @[ACEUnit.scala 409:31]
            node _bus_CDLAST_T = eq(coherentCounter.count, UInt<3>("h7")) @[ACEUnit.scala 411:43]
            bus.CDLAST <= _bus_CDLAST_T @[ACEUnit.scala 411:18]
            node _coherentComplete_T_1 = and(bus.CDLAST, bus.CDREADY) @[ACEUnit.scala 413:38]
            coherentComplete <= _coherentComplete_T_1 @[ACEUnit.scala 413:24]
            node _coherentAXIState_T_3 = and(bus.CDLAST, bus.CDREADY) @[ACEUnit.scala 415:42]
            node _coherentAXIState_T_4 = mux(_coherentAXIState_T_3, UInt<2>("h0"), UInt<2>("h3")) @[ACEUnit.scala 415:30]
            coherentAXIState <= _coherentAXIState_T_4 @[ACEUnit.scala 415:24]

  module core_Anon_1 :
    input clock : Clock
    input reset : Reset
    output request : { flip valid : UInt<1>, flip address : UInt<32>, flip instruction : UInt<32>, flip branchMask : UInt<5>, flip robAddr : UInt<4>, flip prfDest : UInt<6>}
    output dPort : { AWID : UInt<2>, AWADDR : UInt<32>, AWLEN : UInt<8>, AWSIZE : UInt<3>, AWBURST : UInt<2>, AWLOCK : UInt<1>, AWCACHE : UInt<4>, AWPROT : UInt<3>, AWQOS : UInt<4>, AWVALID : UInt<1>, flip AWREADY : UInt<1>, WDATA : UInt<64>, WSTRB : UInt<8>, WLAST : UInt<1>, WVALID : UInt<1>, flip WREADY : UInt<1>, flip BID : UInt<2>, flip BRESP : UInt<2>, flip BVALID : UInt<1>, BREADY : UInt<1>, ARID : UInt<2>, ARADDR : UInt<32>, ARLEN : UInt<8>, ARSIZE : UInt<3>, ARBURST : UInt<2>, ARLOCK : UInt<1>, ARCACHE : UInt<4>, ARPROT : UInt<3>, ARQOS : UInt<4>, ARVALID : UInt<1>, flip ARREADY : UInt<1>, flip RID : UInt<2>, flip RDATA : UInt<64>, flip RLAST : UInt<1>, flip RVALID : UInt<1>, RREADY : UInt<1>, AWDOMAIN : UInt<2>, AWSNOOP : UInt<3>, AWBAR : UInt<2>, ARDOMAIN : UInt<2>, ARSNOOP : UInt<4>, ARBAR : UInt<2>, flip RRESP : UInt<4>, flip ACVALID : UInt<1>, ACREADY : UInt<1>, flip ACADDR : UInt<32>, flip ACSNOOP : UInt<4>, flip ACPROT : UInt<3>, CRVALID : UInt<1>, flip CRREADY : UInt<1>, CRRESP : UInt<5>, CDVALID : UInt<1>, flip CDREADY : UInt<1>, CDDATA : UInt<64>, CDLAST : UInt<1>}
    output peripheral : { AWID : UInt<2>, AWADDR : UInt<32>, AWLEN : UInt<8>, AWSIZE : UInt<3>, AWBURST : UInt<2>, AWLOCK : UInt<1>, AWCACHE : UInt<4>, AWPROT : UInt<3>, AWQOS : UInt<4>, AWVALID : UInt<1>, flip AWREADY : UInt<1>, WDATA : UInt<32>, WSTRB : UInt<4>, WLAST : UInt<1>, WVALID : UInt<1>, flip WREADY : UInt<1>, flip BID : UInt<2>, flip BRESP : UInt<2>, flip BVALID : UInt<1>, BREADY : UInt<1>, ARID : UInt<2>, ARADDR : UInt<32>, ARLEN : UInt<8>, ARSIZE : UInt<3>, ARBURST : UInt<2>, ARLOCK : UInt<1>, ARCACHE : UInt<4>, ARPROT : UInt<3>, ARQOS : UInt<4>, ARVALID : UInt<1>, flip ARREADY : UInt<1>, flip RID : UInt<2>, flip RDATA : UInt<32>, flip RRESP : UInt<2>, flip RLAST : UInt<1>, flip RVALID : UInt<1>, RREADY : UInt<1>}
    output responseOut : { valid : UInt<1>, prfDest : UInt<6>, robAddr : UInt<4>, result : UInt<64>, instruction : UInt<32>}
    output canAllocate : UInt<1>
    output writeDataIn : { flip valid : UInt<1>, flip data : UInt<64>}
    input initiateFence : UInt<1>
    output fenceInstructions : { ready : UInt<1>, flip fired : UInt<1>}
    output writeCommit : { ready : UInt<1>, flip fired : UInt<1>}
    output branchOps : { flip valid : UInt<1>, flip branchMask : UInt<5>, flip passed : UInt<1>}
    output loadCommit : { flip ready : UInt<1>, valid : UInt<1>, state : UInt<1>}
    output decrCounter : UInt<1>
    output writeToMemoryPendingOut : UInt<32>

    canAllocate <= UInt<1>("h0") @[CacheModule.scala 33:15]
    responseOut.valid <= UInt<1>("h0") @[CacheModule.scala 35:21]
    responseOut.prfDest <= UInt<1>("h0") @[CacheModule.scala 36:23]
    responseOut.robAddr <= UInt<1>("h0") @[CacheModule.scala 37:23]
    responseOut.result <= UInt<1>("h0") @[CacheModule.scala 38:22]
    responseOut.instruction <= UInt<1>("h0") @[CacheModule.scala 39:27]
    fenceInstructions.ready <= UInt<1>("h0") @[CacheModule.scala 41:27]
    writeCommit.ready <= UInt<1>("h0") @[CacheModule.scala 42:21]
    inst requestScheduler of Scheduler @[CacheModule.scala 44:32]
    requestScheduler.clock <= clock
    requestScheduler.reset <= reset
    inst cacheLookup of cacheLookup @[CacheModule.scala 45:27]
    cacheLookup.clock <= clock
    cacheLookup.reset <= reset
    inst peripheralAXIUnit of AXIUnit @[CacheModule.scala 46:33]
    peripheralAXIUnit.clock <= clock
    peripheralAXIUnit.reset <= reset
    inst writeDataInFifo of writeDataInFifo @[CacheModule.scala 54:31]
    writeDataInFifo.clock <= clock
    writeDataInFifo.reset <= reset
    inst memoryAXIUnit of ACEUnit @[CacheModule.scala 55:29]
    memoryAXIUnit.clock <= clock
    memoryAXIUnit.reset <= reset
    requestScheduler.canAccept <= UInt<1>("h0") @[CacheModule.scala 64:30]
    writeDataInFifo.canAccept <= UInt<1>("h0") @[CacheModule.scala 65:29]
    cacheLookup.storeDataIn.data <= UInt<1>("h0") @[CacheModule.scala 67:32]
    cacheLookup.storeDataIn.valid <= UInt<1>("h0") @[CacheModule.scala 68:33]
    cacheLookup.responseOut.ready <= UInt<1>("h0") @[CacheModule.scala 70:33]
    cacheLookup.cacheRequest.writeEn <= UInt<1>("h0") @[CacheModule.scala 71:36]
    cacheLookup.cacheRequest.instruction <= UInt<1>("h0") @[CacheModule.scala 72:40]
    cacheLookup.cacheRequest.valid <= UInt<1>("h0") @[CacheModule.scala 73:34]
    cacheLookup.cacheRequest.address <= UInt<1>("h0") @[CacheModule.scala 74:36]
    cacheLookup.branchFail <= UInt<1>("h0") @[CacheModule.scala 75:26]
    peripheralAXIUnit.request.valid <= UInt<1>("h0") @[CacheModule.scala 78:35]
    peripheralAXIUnit.request.writeEn <= UInt<1>("h0") @[CacheModule.scala 79:37]
    peripheralAXIUnit.request.address <= UInt<1>("h0") @[CacheModule.scala 80:37]
    peripheralAXIUnit.request.data <= UInt<1>("h0") @[CacheModule.scala 81:34]
    peripheralAXIUnit.request.instruction <= UInt<1>("h0") @[CacheModule.scala 82:41]
    peripheralAXIUnit.loadData.ready <= UInt<1>("h0") @[CacheModule.scala 83:36]
    requestScheduler.requestIn.prfDest <= request.prfDest @[CacheModule.scala 85:30]
    requestScheduler.requestIn.robAddr <= request.robAddr @[CacheModule.scala 85:30]
    requestScheduler.requestIn.branchMask <= request.branchMask @[CacheModule.scala 85:30]
    requestScheduler.requestIn.instruction <= request.instruction @[CacheModule.scala 85:30]
    requestScheduler.requestIn.address <= request.address @[CacheModule.scala 85:30]
    requestScheduler.requestIn.valid <= request.valid @[CacheModule.scala 85:30]
    requestScheduler.branchOps.passed <= branchOps.passed @[CacheModule.scala 86:30]
    requestScheduler.branchOps.branchMask <= branchOps.branchMask @[CacheModule.scala 86:30]
    requestScheduler.branchOps.valid <= branchOps.valid @[CacheModule.scala 86:30]
    canAllocate <= requestScheduler.canAllocate @[CacheModule.scala 87:15]
    reg inputBufferState : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[CacheModule.scala 91:33]
    wire _inputBuffer_WIRE : { address : UInt<32>, prfDest : UInt<6>, robAddr : UInt<4>, branchMask : UInt<5>, result : UInt<64>, instruction : UInt<32>}
    _inputBuffer_WIRE.instruction <= UInt<1>("h0")
    _inputBuffer_WIRE.result <= UInt<1>("h0")
    _inputBuffer_WIRE.branchMask <= UInt<1>("h0")
    _inputBuffer_WIRE.robAddr <= UInt<1>("h0")
    _inputBuffer_WIRE.prfDest <= UInt<1>("h0")
    _inputBuffer_WIRE.address <= UInt<1>("h0")
    reg inputBuffer : { address : UInt<32>, prfDest : UInt<6>, robAddr : UInt<4>, branchMask : UInt<5>, result : UInt<64>, instruction : UInt<32>}, clock with :
      reset => (reset, _inputBuffer_WIRE) @[CacheModule.scala 92:28]
    wire branchMaskWire : UInt<5>
    branchMaskWire <= UInt<5>("h0")
    wire branchPassWire : UInt<1>
    branchPassWire <= UInt<1>("h0")
    wire branchValidWire : UInt<1>
    branchValidWire <= UInt<1>("h0")
    reg isFlushed : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[CacheModule.scala 113:26]
    wire isFlushedWire : UInt<1>
    isFlushedWire <= UInt<1>("h0")
    isFlushedWire <= isFlushed @[CacheModule.scala 116:17]
    when branchOps.valid : @[CacheModule.scala 118:24]
      branchValidWire <= UInt<1>("h1") @[CacheModule.scala 119:21]
      branchMaskWire <= branchOps.branchMask @[CacheModule.scala 120:20]
      branchPassWire <= branchOps.passed @[CacheModule.scala 121:20]
    when isFlushed : @[CacheModule.scala 124:18]
      node _isFlushed_T = eq(inputBufferState, UInt<2>("h0")) @[CacheModule.scala 125:39]
      node _isFlushed_T_1 = mux(_isFlushed_T, UInt<1>("h0"), isFlushed) @[CacheModule.scala 125:21]
      isFlushed <= _isFlushed_T_1 @[CacheModule.scala 125:15]
    else :
      node _T = neq(inputBufferState, UInt<2>("h0")) @[CacheModule.scala 127:47]
      node _T_1 = and(branchValidWire, _T) @[CacheModule.scala 127:26]
      when _T_1 : @[CacheModule.scala 127:58]
        node _T_2 = and(inputBuffer.branchMask, branchMaskWire) @[CacheModule.scala 128:54]
        node _T_3 = orr(_T_2) @[CacheModule.scala 128:72]
        node _T_4 = and(branchPassWire, _T_3) @[CacheModule.scala 128:27]
        when _T_4 : @[CacheModule.scala 128:76]
          node _inputBuffer_branchMask_T = xor(inputBuffer.branchMask, branchMaskWire) @[CacheModule.scala 129:58]
          inputBuffer.branchMask <= _inputBuffer_branchMask_T @[CacheModule.scala 129:32]
          isFlushed <= UInt<1>("h0") @[CacheModule.scala 130:19]
          isFlushedWire <= UInt<1>("h0") @[CacheModule.scala 131:23]
        else :
          node _isFlushed_T_2 = and(inputBuffer.branchMask, branchMaskWire) @[CacheModule.scala 133:46]
          node _isFlushed_T_3 = orr(_isFlushed_T_2) @[CacheModule.scala 133:64]
          isFlushed <= _isFlushed_T_3 @[CacheModule.scala 133:19]
          node _isFlushedWire_T = and(inputBuffer.branchMask, branchMaskWire) @[CacheModule.scala 134:50]
          node _isFlushedWire_T_1 = orr(_isFlushedWire_T) @[CacheModule.scala 134:68]
          isFlushedWire <= _isFlushedWire_T_1 @[CacheModule.scala 134:23]
    wire isLoadWire : UInt<1>
    isLoadWire <= UInt<1>("h0")
    wire isAtomicsWire : UInt<1>
    isAtomicsWire <= UInt<1>("h0")
    wire isLoadReservedWire : UInt<1>
    isLoadReservedWire <= UInt<1>("h0")
    wire isStoreConditionalWire : UInt<1>
    isStoreConditionalWire <= UInt<1>("h0")
    wire isInsValid : UInt<1>
    isInsValid <= UInt<1>("h0")
    reg requestAccepted : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[CacheModule.scala 146:32]
    node _T_5 = neq(inputBufferState, UInt<2>("h2")) @[CacheModule.scala 147:25]
    when _T_5 : @[CacheModule.scala 147:40]
      requestAccepted <= UInt<1>("h0") @[CacheModule.scala 148:21]
    reg coherencyInterrupted : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[CacheModule.scala 150:37]
    node _T_6 = neq(inputBufferState, UInt<2>("h2")) @[CacheModule.scala 151:25]
    when _T_6 : @[CacheModule.scala 151:40]
      coherencyInterrupted <= UInt<1>("h0") @[CacheModule.scala 152:26]
    reg gotFired : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[CacheModule.scala 154:25]
    node _T_7 = neq(inputBufferState, UInt<2>("h2")) @[CacheModule.scala 155:25]
    when _T_7 : @[CacheModule.scala 155:40]
      gotFired <= UInt<1>("h0") @[CacheModule.scala 156:12]
    reg storeDataReg : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[CacheModule.scala 158:29]
    node _T_8 = neq(inputBufferState, UInt<2>("h0")) @[CacheModule.scala 160:25]
    when _T_8 : @[CacheModule.scala 160:35]
      node _isLoadWire_T = bits(inputBuffer.instruction, 6, 3) @[CacheModule.scala 161:42]
      node _isLoadWire_T_1 = eq(_isLoadWire_T, UInt<1>("h0")) @[CacheModule.scala 161:48]
      isLoadWire <= _isLoadWire_T_1 @[CacheModule.scala 161:16]
      node _isAtomicsWire_T = bits(inputBuffer.instruction, 6, 2) @[CacheModule.scala 162:45]
      node _isAtomicsWire_T_1 = eq(_isAtomicsWire_T, UInt<4>("hb")) @[CacheModule.scala 162:51]
      isAtomicsWire <= _isAtomicsWire_T_1 @[CacheModule.scala 162:19]
      node _isLoadReservedWire_T = bits(inputBuffer.instruction, 31, 27) @[CacheModule.scala 163:68]
      node _isLoadReservedWire_T_1 = eq(_isLoadReservedWire_T, UInt<2>("h2")) @[CacheModule.scala 163:76]
      node _isLoadReservedWire_T_2 = and(isAtomicsWire, _isLoadReservedWire_T_1) @[CacheModule.scala 163:42]
      isLoadReservedWire <= _isLoadReservedWire_T_2 @[CacheModule.scala 163:24]
      node _isStoreConditionalWire_T = bits(inputBuffer.instruction, 31, 27) @[CacheModule.scala 164:72]
      node _isStoreConditionalWire_T_1 = eq(_isStoreConditionalWire_T, UInt<2>("h3")) @[CacheModule.scala 164:80]
      node _isStoreConditionalWire_T_2 = and(isAtomicsWire, _isStoreConditionalWire_T_1) @[CacheModule.scala 164:46]
      isStoreConditionalWire <= _isStoreConditionalWire_T_2 @[CacheModule.scala 164:28]
      node _isInsValid_T = bits(inputBuffer.instruction, 1, 0) @[CacheModule.scala 165:42]
      node _isInsValid_T_1 = eq(_isInsValid_T, UInt<2>("h3")) @[CacheModule.scala 165:48]
      isInsValid <= _isInsValid_T_1 @[CacheModule.scala 165:16]
    else :
      when requestScheduler.requestOut.valid : @[CacheModule.scala 166:49]
        node _isLoadWire_T_2 = bits(requestScheduler.requestOut.instruction, 6, 3) @[CacheModule.scala 167:58]
        node _isLoadWire_T_3 = eq(_isLoadWire_T_2, UInt<1>("h0")) @[CacheModule.scala 167:64]
        isLoadWire <= _isLoadWire_T_3 @[CacheModule.scala 167:16]
        node _isAtomicsWire_T_2 = bits(requestScheduler.requestOut.instruction, 6, 2) @[CacheModule.scala 168:61]
        node _isAtomicsWire_T_3 = eq(_isAtomicsWire_T_2, UInt<4>("hb")) @[CacheModule.scala 168:67]
        isAtomicsWire <= _isAtomicsWire_T_3 @[CacheModule.scala 168:19]
        node _isLoadReservedWire_T_3 = bits(requestScheduler.requestOut.instruction, 31, 27) @[CacheModule.scala 169:84]
        node _isLoadReservedWire_T_4 = eq(_isLoadReservedWire_T_3, UInt<2>("h2")) @[CacheModule.scala 169:92]
        node _isLoadReservedWire_T_5 = and(isAtomicsWire, _isLoadReservedWire_T_4) @[CacheModule.scala 169:42]
        isLoadReservedWire <= _isLoadReservedWire_T_5 @[CacheModule.scala 169:24]
        node _isStoreConditionalWire_T_3 = bits(requestScheduler.requestOut.instruction, 31, 27) @[CacheModule.scala 170:88]
        node _isStoreConditionalWire_T_4 = eq(_isStoreConditionalWire_T_3, UInt<2>("h3")) @[CacheModule.scala 170:96]
        node _isStoreConditionalWire_T_5 = and(isAtomicsWire, _isStoreConditionalWire_T_4) @[CacheModule.scala 170:46]
        isStoreConditionalWire <= _isStoreConditionalWire_T_5 @[CacheModule.scala 170:28]
        node _isInsValid_T_2 = bits(requestScheduler.requestOut.instruction, 1, 0) @[CacheModule.scala 171:58]
        node _isInsValid_T_3 = eq(_isInsValid_T_2, UInt<2>("h3")) @[CacheModule.scala 171:64]
        isInsValid <= _isInsValid_T_3 @[CacheModule.scala 171:16]
    node _T_9 = eq(UInt<2>("h0"), inputBufferState) @[CacheModule.scala 174:27]
    when _T_9 : @[CacheModule.scala 174:27]
      requestScheduler.canAccept <= UInt<1>("h1") @[CacheModule.scala 176:34]
      when requestScheduler.requestOut.valid : @[CacheModule.scala 177:46]
        inputBuffer.address <= requestScheduler.requestOut.address @[CacheModule.scala 178:29]
        inputBuffer.instruction <= requestScheduler.requestOut.instruction @[CacheModule.scala 179:33]
        inputBuffer.robAddr <= requestScheduler.requestOut.robAddr @[CacheModule.scala 180:29]
        inputBuffer.prfDest <= requestScheduler.requestOut.prfDest @[CacheModule.scala 181:29]
        when branchValidWire : @[CacheModule.scala 183:30]
          when branchPassWire : @[CacheModule.scala 184:31]
            node _inputBuffer_branchMask_T_1 = xor(requestScheduler.requestOut.branchMask, branchMaskWire) @[CacheModule.scala 185:78]
            inputBuffer.branchMask <= _inputBuffer_branchMask_T_1 @[CacheModule.scala 185:36]
          else :
            inputBuffer.branchMask <= requestScheduler.requestOut.branchMask @[CacheModule.scala 187:36]
            node _isFlushed_T_4 = and(requestScheduler.requestOut.branchMask, branchMaskWire) @[CacheModule.scala 188:66]
            node _isFlushed_T_5 = orr(_isFlushed_T_4) @[CacheModule.scala 188:84]
            isFlushed <= _isFlushed_T_5 @[CacheModule.scala 188:23]
        else :
          inputBuffer.branchMask <= requestScheduler.requestOut.branchMask @[CacheModule.scala 191:34]
      node _toAwaitRead_T = or(isLoadWire, isLoadReservedWire) @[CacheModule.scala 195:42]
      node _toAwaitRead_T_1 = eq(isStoreConditionalWire, UInt<1>("h0")) @[CacheModule.scala 195:85]
      node _toAwaitRead_T_2 = and(isAtomicsWire, _toAwaitRead_T_1) @[CacheModule.scala 195:82]
      node _toAwaitRead_T_3 = or(_toAwaitRead_T, _toAwaitRead_T_2) @[CacheModule.scala 195:64]
      node _toAwaitRead_T_4 = and(_toAwaitRead_T_3, isInsValid) @[CacheModule.scala 195:111]
      node toAwaitRead = mux(requestScheduler.requestOut.valid, _toAwaitRead_T_4, UInt<1>("h0")) @[CacheModule.scala 194:28]
      when requestScheduler.requestOut.valid : @[CacheModule.scala 198:46]
        node _inputBufferState_T = mux(toAwaitRead, UInt<2>("h1"), UInt<2>("h2")) @[CacheModule.scala 199:32]
        inputBufferState <= _inputBufferState_T @[CacheModule.scala 199:26]
      else :
        inputBufferState <= UInt<2>("h0") @[CacheModule.scala 201:26]
    else :
      node _T_10 = eq(UInt<2>("h1"), inputBufferState) @[CacheModule.scala 174:27]
      when _T_10 : @[CacheModule.scala 174:27]
        node _peripheralRead_T = eq(inputBuffer.address, UInt<32>("he000102c")) @[CacheModule.scala 206:57]
        wire peripheralRead : UInt<1>
        peripheralRead <= _peripheralRead_T
        when peripheralRead : @[CacheModule.scala 208:27]
          peripheralAXIUnit.loadData.ready <= UInt<1>("h1") @[CacheModule.scala 209:42]
          node _T_11 = bits(inputBuffer.branchMask, 3, 0) @[CacheModule.scala 210:72]
          node _T_12 = orr(_T_11) @[CacheModule.scala 210:78]
          node _T_13 = eq(_T_12, UInt<1>("h0")) @[CacheModule.scala 210:49]
          node _T_14 = and(peripheralAXIUnit.request.ready, _T_13) @[CacheModule.scala 210:46]
          when _T_14 : @[CacheModule.scala 210:82]
            peripheralAXIUnit.request.valid <= UInt<1>("h1") @[CacheModule.scala 211:43]
            peripheralAXIUnit.request.writeEn <= UInt<1>("h0") @[CacheModule.scala 212:45]
            peripheralAXIUnit.request.address <= inputBuffer.address @[CacheModule.scala 213:45]
            peripheralAXIUnit.request.data <= UInt<1>("h0") @[CacheModule.scala 214:42]
            peripheralAXIUnit.request.instruction <= inputBuffer.instruction @[CacheModule.scala 215:49]
        else :
          node _T_15 = eq(isAtomicsWire, UInt<1>("h0")) @[CacheModule.scala 219:15]
          node _T_16 = bits(inputBuffer.branchMask, 3, 0) @[CacheModule.scala 219:74]
          node _T_17 = orr(_T_16) @[CacheModule.scala 219:80]
          node _T_18 = eq(_T_17, UInt<1>("h0")) @[CacheModule.scala 219:51]
          node _T_19 = and(isAtomicsWire, _T_18) @[CacheModule.scala 219:48]
          node _T_20 = or(_T_15, _T_19) @[CacheModule.scala 219:30]
          when _T_20 : @[CacheModule.scala 219:86]
            cacheLookup.responseOut.ready <= UInt<1>("h1") @[CacheModule.scala 220:41]
            cacheLookup.cacheRequest.valid <= UInt<1>("h1") @[CacheModule.scala 222:42]
            cacheLookup.cacheRequest.writeEn <= UInt<1>("h0") @[CacheModule.scala 223:44]
            cacheLookup.cacheRequest.address <= inputBuffer.address @[CacheModule.scala 224:44]
            cacheLookup.cacheRequest.instruction <= inputBuffer.instruction @[CacheModule.scala 225:48]
            cacheLookup.storeDataIn.data <= UInt<1>("h0") @[CacheModule.scala 226:40]
            cacheLookup.storeDataIn.valid <= UInt<1>("h0") @[CacheModule.scala 227:41]
          node _T_21 = eq(isAtomicsWire, UInt<1>("h0")) @[CacheModule.scala 230:14]
          when _T_21 : @[CacheModule.scala 230:29]
            cacheLookup.branchFail <= isFlushedWire @[CacheModule.scala 231:34]
        when peripheralRead : @[CacheModule.scala 235:27]
          node _inputBuffer_result_T = mux(peripheralAXIUnit.loadData.valid, peripheralAXIUnit.loadData.data, inputBuffer.result) @[CacheModule.scala 236:34]
          inputBuffer.result <= _inputBuffer_result_T @[CacheModule.scala 236:28]
        else :
          node _inputBuffer_result_T_1 = mux(cacheLookup.responseOut.valid, cacheLookup.responseOut.data, inputBuffer.result) @[CacheModule.scala 238:34]
          inputBuffer.result <= _inputBuffer_result_T_1 @[CacheModule.scala 238:28]
        when peripheralRead : @[CacheModule.scala 241:27]
          when isFlushedWire : @[CacheModule.scala 242:28]
            inputBufferState <= UInt<2>("h0") @[CacheModule.scala 243:28]
          else :
            node _inputBufferState_T_1 = mux(peripheralAXIUnit.loadData.valid, UInt<2>("h3"), UInt<2>("h1")) @[CacheModule.scala 245:34]
            inputBufferState <= _inputBufferState_T_1 @[CacheModule.scala 245:28]
        else :
          when isFlushedWire : @[CacheModule.scala 248:28]
            inputBufferState <= UInt<2>("h0") @[CacheModule.scala 249:28]
          else :
            node _inputBufferState_T_2 = mux(cacheLookup.responseOut.valid, UInt<2>("h3"), UInt<2>("h1")) @[CacheModule.scala 251:34]
            inputBufferState <= _inputBufferState_T_2 @[CacheModule.scala 251:28]
      else :
        node _T_22 = eq(UInt<2>("h2"), inputBufferState) @[CacheModule.scala 174:27]
        when _T_22 : @[CacheModule.scala 174:27]
          node _peripheralWrite_T = eq(inputBuffer.address, UInt<32>("he0001030")) @[CacheModule.scala 256:58]
          wire peripheralWrite : UInt<1>
          peripheralWrite <= _peripheralWrite_T
          when peripheralWrite : @[CacheModule.scala 257:28]
            node _writeDataInFifo_canAccept_T = eq(requestAccepted, UInt<1>("h0")) @[CacheModule.scala 258:38]
            writeDataInFifo.canAccept <= _writeDataInFifo_canAccept_T @[CacheModule.scala 258:35]
            node _T_23 = bits(inputBuffer.branchMask, 3, 0) @[CacheModule.scala 260:73]
            node _T_24 = orr(_T_23) @[CacheModule.scala 260:79]
            node _T_25 = eq(_T_24, UInt<1>("h0")) @[CacheModule.scala 260:50]
            node _T_26 = and(peripheralAXIUnit.request.ready, _T_25) @[CacheModule.scala 260:47]
            node _T_27 = and(_T_26, writeDataInFifo.dataOut.valid) @[CacheModule.scala 260:83]
            node _T_28 = eq(requestAccepted, UInt<1>("h0")) @[CacheModule.scala 260:119]
            node _T_29 = and(_T_27, _T_28) @[CacheModule.scala 260:116]
            when _T_29 : @[CacheModule.scala 260:136]
              peripheralAXIUnit.request.valid <= UInt<1>("h1") @[CacheModule.scala 262:43]
              peripheralAXIUnit.request.writeEn <= UInt<1>("h1") @[CacheModule.scala 263:45]
              peripheralAXIUnit.request.address <= inputBuffer.address @[CacheModule.scala 264:45]
              peripheralAXIUnit.request.data <= writeDataInFifo.dataOut.data @[CacheModule.scala 265:42]
              peripheralAXIUnit.request.instruction <= inputBuffer.instruction @[CacheModule.scala 266:49]
              node _requestAccepted_T = eq(requestAccepted, UInt<1>("h0")) @[CacheModule.scala 268:69]
              node _requestAccepted_T_1 = and(peripheralAXIUnit.request.ready, _requestAccepted_T) @[CacheModule.scala 268:66]
              node _requestAccepted_T_2 = mux(_requestAccepted_T_1, UInt<1>("h1"), requestAccepted) @[CacheModule.scala 268:33]
              requestAccepted <= _requestAccepted_T_2 @[CacheModule.scala 268:27]
          else :
            node _T_30 = eq(coherencyInterrupted, UInt<1>("h0")) @[CacheModule.scala 272:14]
            when _T_30 : @[CacheModule.scala 272:36]
              coherencyInterrupted <= memoryAXIUnit.coherencyReceived @[CacheModule.scala 273:32]
            when memoryAXIUnit.coherencyReceived : @[CacheModule.scala 275:46]
              requestAccepted <= UInt<1>("h0") @[CacheModule.scala 276:27]
            node _T_31 = bits(inputBuffer.branchMask, 3, 0) @[CacheModule.scala 278:37]
            node _T_32 = orr(_T_31) @[CacheModule.scala 278:43]
            node _T_33 = eq(_T_32, UInt<1>("h0")) @[CacheModule.scala 278:14]
            node _T_34 = and(_T_33, memoryAXIUnit.request.ready) @[CacheModule.scala 278:48]
            node _T_35 = and(_T_34, writeDataInFifo.dataOut.valid) @[CacheModule.scala 278:79]
            node _T_36 = eq(requestAccepted, UInt<1>("h0")) @[CacheModule.scala 278:115]
            node _T_37 = and(_T_35, _T_36) @[CacheModule.scala 278:112]
            when _T_37 : @[CacheModule.scala 278:132]
              cacheLookup.responseOut.ready <= isStoreConditionalWire @[CacheModule.scala 279:41]
              node _writeDataInFifo_canAccept_T_1 = eq(cacheLookup.cacheRequest.accepted, UInt<1>("h0")) @[CacheModule.scala 281:75]
              node _writeDataInFifo_canAccept_T_2 = mux(coherencyInterrupted, UInt<1>("h0"), _writeDataInFifo_canAccept_T_1) @[CacheModule.scala 281:43]
              writeDataInFifo.canAccept <= _writeDataInFifo_canAccept_T_2 @[CacheModule.scala 281:37]
              node _cacheLookup_cacheRequest_valid_T = eq(cacheLookup.cacheRequest.accepted, UInt<1>("h0")) @[CacheModule.scala 283:45]
              cacheLookup.cacheRequest.valid <= _cacheLookup_cacheRequest_valid_T @[CacheModule.scala 283:42]
              cacheLookup.cacheRequest.writeEn <= UInt<1>("h1") @[CacheModule.scala 284:44]
              cacheLookup.cacheRequest.address <= inputBuffer.address @[CacheModule.scala 285:44]
              cacheLookup.cacheRequest.instruction <= inputBuffer.instruction @[CacheModule.scala 286:48]
              node _cacheLookup_storeDataIn_data_T = mux(coherencyInterrupted, storeDataReg, writeDataInFifo.dataOut.data) @[CacheModule.scala 288:46]
              cacheLookup.storeDataIn.data <= _cacheLookup_storeDataIn_data_T @[CacheModule.scala 288:40]
              node _cacheLookup_storeDataIn_valid_T = eq(cacheLookup.cacheRequest.accepted, UInt<1>("h0")) @[CacheModule.scala 289:44]
              cacheLookup.storeDataIn.valid <= _cacheLookup_storeDataIn_valid_T @[CacheModule.scala 289:41]
              node _T_38 = eq(coherencyInterrupted, UInt<1>("h0")) @[CacheModule.scala 291:16]
              when _T_38 : @[CacheModule.scala 291:38]
                storeDataReg <= writeDataInFifo.dataOut.data @[CacheModule.scala 292:26]
              when memoryAXIUnit.coherencyReceived : @[CacheModule.scala 295:48]
                requestAccepted <= UInt<1>("h0") @[CacheModule.scala 296:29]
              else :
                node _requestAccepted_T_3 = eq(requestAccepted, UInt<1>("h0")) @[CacheModule.scala 298:70]
                node _requestAccepted_T_4 = and(cacheLookup.cacheRequest.valid, _requestAccepted_T_3) @[CacheModule.scala 298:67]
                node _requestAccepted_T_5 = mux(_requestAccepted_T_4, UInt<1>("h1"), requestAccepted) @[CacheModule.scala 298:35]
                requestAccepted <= _requestAccepted_T_5 @[CacheModule.scala 298:29]
          when peripheralWrite : @[CacheModule.scala 302:28]
            node _writeCommit_ready_T = eq(gotFired, UInt<1>("h0")) @[CacheModule.scala 303:30]
            writeCommit.ready <= _writeCommit_ready_T @[CacheModule.scala 303:27]
            node _gotFired_T = eq(gotFired, UInt<1>("h0")) @[CacheModule.scala 304:46]
            node _gotFired_T_1 = and(writeCommit.fired, _gotFired_T) @[CacheModule.scala 304:43]
            node _gotFired_T_2 = mux(_gotFired_T_1, UInt<1>("h1"), gotFired) @[CacheModule.scala 304:24]
            gotFired <= _gotFired_T_2 @[CacheModule.scala 304:18]
          else :
            node _writeCommit_ready_T_1 = eq(gotFired, UInt<1>("h0")) @[CacheModule.scala 306:30]
            writeCommit.ready <= _writeCommit_ready_T_1 @[CacheModule.scala 306:27]
            node _gotFired_T_3 = eq(gotFired, UInt<1>("h0")) @[CacheModule.scala 307:46]
            node _gotFired_T_4 = and(writeCommit.fired, _gotFired_T_3) @[CacheModule.scala 307:43]
            node _gotFired_T_5 = mux(_gotFired_T_4, UInt<1>("h1"), gotFired) @[CacheModule.scala 307:24]
            gotFired <= _gotFired_T_5 @[CacheModule.scala 307:18]
          when isStoreConditionalWire : @[CacheModule.scala 310:35]
            cacheLookup.responseOut.ready <= UInt<1>("h1") @[CacheModule.scala 311:39]
            when peripheralWrite : @[CacheModule.scala 312:30]
              node _inputBuffer_result_T_2 = mux(peripheralAXIUnit.loadData.valid, peripheralAXIUnit.loadData.data, inputBuffer.result) @[CacheModule.scala 314:36]
              inputBuffer.result <= _inputBuffer_result_T_2 @[CacheModule.scala 314:30]
            else :
              node _inputBuffer_result_T_3 = mux(cacheLookup.responseOut.valid, cacheLookup.responseOut.data, inputBuffer.result) @[CacheModule.scala 316:36]
              inputBuffer.result <= _inputBuffer_result_T_3 @[CacheModule.scala 316:30]
          else :
            inputBuffer.result <= UInt<1>("h0") @[CacheModule.scala 319:28]
          when isFlushedWire : @[CacheModule.scala 322:26]
            inputBufferState <= UInt<2>("h0") @[CacheModule.scala 323:26]
          else :
            when gotFired : @[CacheModule.scala 325:23]
              when requestAccepted : @[CacheModule.scala 326:32]
                when peripheralWrite : @[CacheModule.scala 327:34]
                  when peripheralAXIUnit.request.ready : @[CacheModule.scala 328:52]
                    node _inputBufferState_T_3 = mux(isStoreConditionalWire, UInt<2>("h3"), UInt<2>("h0")) @[CacheModule.scala 329:39]
                    inputBufferState <= _inputBufferState_T_3 @[CacheModule.scala 329:33]
                else :
                  when cacheLookup.cacheRequest.ready : @[CacheModule.scala 332:51]
                    node _inputBufferState_T_4 = mux(isStoreConditionalWire, UInt<2>("h3"), UInt<2>("h0")) @[CacheModule.scala 333:39]
                    inputBufferState <= _inputBufferState_T_4 @[CacheModule.scala 333:33]
            else :
              inputBufferState <= UInt<2>("h2") @[CacheModule.scala 339:28]
        else :
          node _T_39 = eq(UInt<2>("h3"), inputBufferState) @[CacheModule.scala 174:27]
          when _T_39 : @[CacheModule.scala 174:27]
            when isFlushedWire : @[CacheModule.scala 344:26]
              responseOut.valid <= UInt<1>("h0") @[CacheModule.scala 345:27]
            else :
              node _responseOut_valid_T = or(isLoadWire, isAtomicsWire) @[CacheModule.scala 347:43]
              node _responseOut_valid_T_1 = and(_responseOut_valid_T, isInsValid) @[CacheModule.scala 347:61]
              responseOut.valid <= _responseOut_valid_T_1 @[CacheModule.scala 347:27]
            responseOut.prfDest <= inputBuffer.prfDest @[CacheModule.scala 349:27]
            responseOut.robAddr <= inputBuffer.robAddr @[CacheModule.scala 350:27]
            responseOut.result <= inputBuffer.result @[CacheModule.scala 351:26]
            responseOut.instruction <= inputBuffer.instruction @[CacheModule.scala 352:31]
            node _inputBufferState_T_5 = or(isLoadReservedWire, isStoreConditionalWire) @[CacheModule.scala 354:69]
            node _inputBufferState_T_6 = eq(_inputBufferState_T_5, UInt<1>("h0")) @[CacheModule.scala 354:48]
            node _inputBufferState_T_7 = and(isAtomicsWire, _inputBufferState_T_6) @[CacheModule.scala 354:45]
            node _inputBufferState_T_8 = mux(_inputBufferState_T_7, UInt<2>("h2"), UInt<2>("h0")) @[CacheModule.scala 354:30]
            inputBufferState <= _inputBufferState_T_8 @[CacheModule.scala 354:24]
    writeDataInFifo.dataIn.data <= writeDataIn.data @[CacheModule.scala 359:26]
    writeDataInFifo.dataIn.valid <= writeDataIn.valid @[CacheModule.scala 359:26]
    memoryAXIUnit.isAtomicsInOperation <= cacheLookup.isAtomicsInOperation @[CacheModule.scala 361:38]
    cacheLookup.coherencyReceived <= memoryAXIUnit.coherencyReceived @[CacheModule.scala 362:33]
    cacheLookup.memoryRequest <= memoryAXIUnit.request @[CacheModule.scala 363:25]
    cacheLookup.loadData <= memoryAXIUnit.loadData @[CacheModule.scala 364:26]
    cacheLookup.coherencyRequest <= memoryAXIUnit.coherencyRequest @[CacheModule.scala 365:34]
    memoryAXIUnit.setFence <= UInt<1>("h0") @[CacheModule.scala 366:26]
    dPort.CDLAST <= memoryAXIUnit.bus.CDLAST @[CacheModule.scala 367:9]
    dPort.CDDATA <= memoryAXIUnit.bus.CDDATA @[CacheModule.scala 367:9]
    memoryAXIUnit.bus.CDREADY <= dPort.CDREADY @[CacheModule.scala 367:9]
    dPort.CDVALID <= memoryAXIUnit.bus.CDVALID @[CacheModule.scala 367:9]
    dPort.CRRESP <= memoryAXIUnit.bus.CRRESP @[CacheModule.scala 367:9]
    memoryAXIUnit.bus.CRREADY <= dPort.CRREADY @[CacheModule.scala 367:9]
    dPort.CRVALID <= memoryAXIUnit.bus.CRVALID @[CacheModule.scala 367:9]
    memoryAXIUnit.bus.ACPROT <= dPort.ACPROT @[CacheModule.scala 367:9]
    memoryAXIUnit.bus.ACSNOOP <= dPort.ACSNOOP @[CacheModule.scala 367:9]
    memoryAXIUnit.bus.ACADDR <= dPort.ACADDR @[CacheModule.scala 367:9]
    dPort.ACREADY <= memoryAXIUnit.bus.ACREADY @[CacheModule.scala 367:9]
    memoryAXIUnit.bus.ACVALID <= dPort.ACVALID @[CacheModule.scala 367:9]
    memoryAXIUnit.bus.RRESP <= dPort.RRESP @[CacheModule.scala 367:9]
    dPort.ARBAR <= memoryAXIUnit.bus.ARBAR @[CacheModule.scala 367:9]
    dPort.ARSNOOP <= memoryAXIUnit.bus.ARSNOOP @[CacheModule.scala 367:9]
    dPort.ARDOMAIN <= memoryAXIUnit.bus.ARDOMAIN @[CacheModule.scala 367:9]
    dPort.AWBAR <= memoryAXIUnit.bus.AWBAR @[CacheModule.scala 367:9]
    dPort.AWSNOOP <= memoryAXIUnit.bus.AWSNOOP @[CacheModule.scala 367:9]
    dPort.AWDOMAIN <= memoryAXIUnit.bus.AWDOMAIN @[CacheModule.scala 367:9]
    dPort.RREADY <= memoryAXIUnit.bus.RREADY @[CacheModule.scala 367:9]
    memoryAXIUnit.bus.RVALID <= dPort.RVALID @[CacheModule.scala 367:9]
    memoryAXIUnit.bus.RLAST <= dPort.RLAST @[CacheModule.scala 367:9]
    memoryAXIUnit.bus.RDATA <= dPort.RDATA @[CacheModule.scala 367:9]
    memoryAXIUnit.bus.RID <= dPort.RID @[CacheModule.scala 367:9]
    memoryAXIUnit.bus.ARREADY <= dPort.ARREADY @[CacheModule.scala 367:9]
    dPort.ARVALID <= memoryAXIUnit.bus.ARVALID @[CacheModule.scala 367:9]
    dPort.ARQOS <= memoryAXIUnit.bus.ARQOS @[CacheModule.scala 367:9]
    dPort.ARPROT <= memoryAXIUnit.bus.ARPROT @[CacheModule.scala 367:9]
    dPort.ARCACHE <= memoryAXIUnit.bus.ARCACHE @[CacheModule.scala 367:9]
    dPort.ARLOCK <= memoryAXIUnit.bus.ARLOCK @[CacheModule.scala 367:9]
    dPort.ARBURST <= memoryAXIUnit.bus.ARBURST @[CacheModule.scala 367:9]
    dPort.ARSIZE <= memoryAXIUnit.bus.ARSIZE @[CacheModule.scala 367:9]
    dPort.ARLEN <= memoryAXIUnit.bus.ARLEN @[CacheModule.scala 367:9]
    dPort.ARADDR <= memoryAXIUnit.bus.ARADDR @[CacheModule.scala 367:9]
    dPort.ARID <= memoryAXIUnit.bus.ARID @[CacheModule.scala 367:9]
    dPort.BREADY <= memoryAXIUnit.bus.BREADY @[CacheModule.scala 367:9]
    memoryAXIUnit.bus.BVALID <= dPort.BVALID @[CacheModule.scala 367:9]
    memoryAXIUnit.bus.BRESP <= dPort.BRESP @[CacheModule.scala 367:9]
    memoryAXIUnit.bus.BID <= dPort.BID @[CacheModule.scala 367:9]
    memoryAXIUnit.bus.WREADY <= dPort.WREADY @[CacheModule.scala 367:9]
    dPort.WVALID <= memoryAXIUnit.bus.WVALID @[CacheModule.scala 367:9]
    dPort.WLAST <= memoryAXIUnit.bus.WLAST @[CacheModule.scala 367:9]
    dPort.WSTRB <= memoryAXIUnit.bus.WSTRB @[CacheModule.scala 367:9]
    dPort.WDATA <= memoryAXIUnit.bus.WDATA @[CacheModule.scala 367:9]
    memoryAXIUnit.bus.AWREADY <= dPort.AWREADY @[CacheModule.scala 367:9]
    dPort.AWVALID <= memoryAXIUnit.bus.AWVALID @[CacheModule.scala 367:9]
    dPort.AWQOS <= memoryAXIUnit.bus.AWQOS @[CacheModule.scala 367:9]
    dPort.AWPROT <= memoryAXIUnit.bus.AWPROT @[CacheModule.scala 367:9]
    dPort.AWCACHE <= memoryAXIUnit.bus.AWCACHE @[CacheModule.scala 367:9]
    dPort.AWLOCK <= memoryAXIUnit.bus.AWLOCK @[CacheModule.scala 367:9]
    dPort.AWBURST <= memoryAXIUnit.bus.AWBURST @[CacheModule.scala 367:9]
    dPort.AWSIZE <= memoryAXIUnit.bus.AWSIZE @[CacheModule.scala 367:9]
    dPort.AWLEN <= memoryAXIUnit.bus.AWLEN @[CacheModule.scala 367:9]
    dPort.AWADDR <= memoryAXIUnit.bus.AWADDR @[CacheModule.scala 367:9]
    dPort.AWID <= memoryAXIUnit.bus.AWID @[CacheModule.scala 367:9]
    peripheral.RREADY <= peripheralAXIUnit.bus.RREADY @[CacheModule.scala 368:14]
    peripheralAXIUnit.bus.RVALID <= peripheral.RVALID @[CacheModule.scala 368:14]
    peripheralAXIUnit.bus.RLAST <= peripheral.RLAST @[CacheModule.scala 368:14]
    peripheralAXIUnit.bus.RRESP <= peripheral.RRESP @[CacheModule.scala 368:14]
    peripheralAXIUnit.bus.RDATA <= peripheral.RDATA @[CacheModule.scala 368:14]
    peripheralAXIUnit.bus.RID <= peripheral.RID @[CacheModule.scala 368:14]
    peripheralAXIUnit.bus.ARREADY <= peripheral.ARREADY @[CacheModule.scala 368:14]
    peripheral.ARVALID <= peripheralAXIUnit.bus.ARVALID @[CacheModule.scala 368:14]
    peripheral.ARQOS <= peripheralAXIUnit.bus.ARQOS @[CacheModule.scala 368:14]
    peripheral.ARPROT <= peripheralAXIUnit.bus.ARPROT @[CacheModule.scala 368:14]
    peripheral.ARCACHE <= peripheralAXIUnit.bus.ARCACHE @[CacheModule.scala 368:14]
    peripheral.ARLOCK <= peripheralAXIUnit.bus.ARLOCK @[CacheModule.scala 368:14]
    peripheral.ARBURST <= peripheralAXIUnit.bus.ARBURST @[CacheModule.scala 368:14]
    peripheral.ARSIZE <= peripheralAXIUnit.bus.ARSIZE @[CacheModule.scala 368:14]
    peripheral.ARLEN <= peripheralAXIUnit.bus.ARLEN @[CacheModule.scala 368:14]
    peripheral.ARADDR <= peripheralAXIUnit.bus.ARADDR @[CacheModule.scala 368:14]
    peripheral.ARID <= peripheralAXIUnit.bus.ARID @[CacheModule.scala 368:14]
    peripheral.BREADY <= peripheralAXIUnit.bus.BREADY @[CacheModule.scala 368:14]
    peripheralAXIUnit.bus.BVALID <= peripheral.BVALID @[CacheModule.scala 368:14]
    peripheralAXIUnit.bus.BRESP <= peripheral.BRESP @[CacheModule.scala 368:14]
    peripheralAXIUnit.bus.BID <= peripheral.BID @[CacheModule.scala 368:14]
    peripheralAXIUnit.bus.WREADY <= peripheral.WREADY @[CacheModule.scala 368:14]
    peripheral.WVALID <= peripheralAXIUnit.bus.WVALID @[CacheModule.scala 368:14]
    peripheral.WLAST <= peripheralAXIUnit.bus.WLAST @[CacheModule.scala 368:14]
    peripheral.WSTRB <= peripheralAXIUnit.bus.WSTRB @[CacheModule.scala 368:14]
    peripheral.WDATA <= peripheralAXIUnit.bus.WDATA @[CacheModule.scala 368:14]
    peripheralAXIUnit.bus.AWREADY <= peripheral.AWREADY @[CacheModule.scala 368:14]
    peripheral.AWVALID <= peripheralAXIUnit.bus.AWVALID @[CacheModule.scala 368:14]
    peripheral.AWQOS <= peripheralAXIUnit.bus.AWQOS @[CacheModule.scala 368:14]
    peripheral.AWPROT <= peripheralAXIUnit.bus.AWPROT @[CacheModule.scala 368:14]
    peripheral.AWCACHE <= peripheralAXIUnit.bus.AWCACHE @[CacheModule.scala 368:14]
    peripheral.AWLOCK <= peripheralAXIUnit.bus.AWLOCK @[CacheModule.scala 368:14]
    peripheral.AWBURST <= peripheralAXIUnit.bus.AWBURST @[CacheModule.scala 368:14]
    peripheral.AWSIZE <= peripheralAXIUnit.bus.AWSIZE @[CacheModule.scala 368:14]
    peripheral.AWLEN <= peripheralAXIUnit.bus.AWLEN @[CacheModule.scala 368:14]
    peripheral.AWADDR <= peripheralAXIUnit.bus.AWADDR @[CacheModule.scala 368:14]
    peripheral.AWID <= peripheralAXIUnit.bus.AWID @[CacheModule.scala 368:14]
    loadCommit.state <= cacheLookup.loadCommit.state @[CacheModule.scala 369:26]
    loadCommit.valid <= cacheLookup.loadCommit.valid @[CacheModule.scala 369:26]
    cacheLookup.loadCommit.ready <= loadCommit.ready @[CacheModule.scala 369:26]
    reg fenceInititatedReg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[CacheModule.scala 372:35]
    node _T_40 = and(initiateFence, requestScheduler.isEmpty) @[CacheModule.scala 373:22]
    node _T_41 = and(_T_40, writeDataInFifo.isEmpty) @[CacheModule.scala 373:50]
    node _T_42 = eq(inputBufferState, UInt<2>("h0")) @[CacheModule.scala 373:97]
    node _T_43 = and(_T_41, _T_42) @[CacheModule.scala 373:77]
    when _T_43 : @[CacheModule.scala 373:107]
      fenceInititatedReg <= UInt<1>("h1") @[CacheModule.scala 374:24]
    when fenceInititatedReg : @[CacheModule.scala 376:27]
      fenceInstructions.ready <= UInt<1>("h1") @[CacheModule.scala 377:29]
      canAllocate <= UInt<1>("h0") @[CacheModule.scala 378:17]
      node _fenceInititatedReg_T = mux(fenceInstructions.fired, UInt<1>("h0"), UInt<1>("h1")) @[CacheModule.scala 379:30]
      fenceInititatedReg <= _fenceInititatedReg_T @[CacheModule.scala 379:24]
      memoryAXIUnit.setFence <= fenceInstructions.fired @[CacheModule.scala 380:28]
    decrCounter <= UInt<1>("h0") @[core.scala 70:17]
    reg writeToMemoryPending : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[core.scala 72:39]
    writeToMemoryPending <= UInt<1>("h0") @[core.scala 73:26]
    writeToMemoryPendingOut <= UInt<1>("h0") @[core.scala 75:29]

  module ReadWriteSmem :
    input clock : Clock
    input reset : Reset
    output io : { flip wenable : UInt<1>, flip renable : UInt<1>, flip raddr : UInt<6>, flip waddr : UInt<6>, flip dataIn : UInt<64>, dataOut : UInt<64>}

    smem mem : UInt<64> [64] @[SRAM_block.scala 15:24]
    when io.wenable : @[SRAM_block.scala 17:19]
      write mport MPORT = mem[io.waddr], clock
      MPORT <= io.dataIn
    wire _io_dataOut_WIRE : UInt @[SRAM_block.scala 21:25]
    _io_dataOut_WIRE is invalid @[SRAM_block.scala 21:25]
    when io.renable : @[SRAM_block.scala 21:25]
      _io_dataOut_WIRE <= io.raddr @[SRAM_block.scala 21:25]
      node _io_dataOut_T = or(_io_dataOut_WIRE, UInt<6>("h0")) @[SRAM_block.scala 21:25]
      node _io_dataOut_T_1 = bits(_io_dataOut_T, 5, 0) @[SRAM_block.scala 21:25]
      read mport io_dataOut_MPORT = mem[_io_dataOut_T_1], clock @[SRAM_block.scala 21:25]
    io.dataOut <= io_dataOut_MPORT @[SRAM_block.scala 21:14]

  module ReadWriteSmem_1 :
    input clock : Clock
    input reset : Reset
    output io : { flip wenable : UInt<1>, flip renable : UInt<1>, flip raddr : UInt<6>, flip waddr : UInt<6>, flip dataIn : UInt<64>, dataOut : UInt<64>}

    smem mem : UInt<64> [64] @[SRAM_block.scala 15:24]
    when io.wenable : @[SRAM_block.scala 17:19]
      write mport MPORT = mem[io.waddr], clock
      MPORT <= io.dataIn
    wire _io_dataOut_WIRE : UInt @[SRAM_block.scala 21:25]
    _io_dataOut_WIRE is invalid @[SRAM_block.scala 21:25]
    when io.renable : @[SRAM_block.scala 21:25]
      _io_dataOut_WIRE <= io.raddr @[SRAM_block.scala 21:25]
      node _io_dataOut_T = or(_io_dataOut_WIRE, UInt<6>("h0")) @[SRAM_block.scala 21:25]
      node _io_dataOut_T_1 = bits(_io_dataOut_T, 5, 0) @[SRAM_block.scala 21:25]
      read mport io_dataOut_MPORT = mem[_io_dataOut_T_1], clock @[SRAM_block.scala 21:25]
    io.dataOut <= io_dataOut_MPORT @[SRAM_block.scala 21:14]

  module ReadWriteSmem_2 :
    input clock : Clock
    input reset : Reset
    output io : { flip wenable : UInt<1>, flip renable : UInt<1>, flip raddr : UInt<6>, flip waddr : UInt<6>, flip dataIn : UInt<64>, dataOut : UInt<64>}

    smem mem : UInt<64> [64] @[SRAM_block.scala 15:24]
    when io.wenable : @[SRAM_block.scala 17:19]
      write mport MPORT = mem[io.waddr], clock
      MPORT <= io.dataIn
    wire _io_dataOut_WIRE : UInt @[SRAM_block.scala 21:25]
    _io_dataOut_WIRE is invalid @[SRAM_block.scala 21:25]
    when io.renable : @[SRAM_block.scala 21:25]
      _io_dataOut_WIRE <= io.raddr @[SRAM_block.scala 21:25]
      node _io_dataOut_T = or(_io_dataOut_WIRE, UInt<6>("h0")) @[SRAM_block.scala 21:25]
      node _io_dataOut_T_1 = bits(_io_dataOut_T, 5, 0) @[SRAM_block.scala 21:25]
      read mport io_dataOut_MPORT = mem[_io_dataOut_T_1], clock @[SRAM_block.scala 21:25]
    io.dataOut <= io_dataOut_MPORT @[SRAM_block.scala 21:14]

  module LVT_set :
    input clock : Clock
    input reset : Reset
    output io : { flip wenable : UInt<1>, flip r1enable : UInt<1>, flip r2enable : UInt<1>, flip r3enable : UInt<1>, flip r1addr : UInt<6>, flip r2addr : UInt<6>, flip r3addr : UInt<6>, flip waddr : UInt<6>, flip wdata : UInt<64>, r1data : UInt<64>, r2data : UInt<64>, r3data : UInt<64>}

    inst b1 of ReadWriteSmem @[LVT_set.scala 20:18]
    b1.clock <= clock
    b1.reset <= reset
    inst b2 of ReadWriteSmem_1 @[LVT_set.scala 21:18]
    b2.clock <= clock
    b2.reset <= reset
    inst b3 of ReadWriteSmem_2 @[LVT_set.scala 22:18]
    b3.clock <= clock
    b3.reset <= reset
    b1.io.wenable <= io.wenable @[LVT_set.scala 24:17]
    b2.io.wenable <= io.wenable @[LVT_set.scala 25:17]
    b3.io.wenable <= io.wenable @[LVT_set.scala 26:17]
    b1.io.dataIn <= io.wdata @[LVT_set.scala 27:16]
    b2.io.dataIn <= io.wdata @[LVT_set.scala 28:16]
    b3.io.dataIn <= io.wdata @[LVT_set.scala 29:16]
    b1.io.renable <= io.r1enable @[LVT_set.scala 31:17]
    b2.io.renable <= io.r2enable @[LVT_set.scala 32:17]
    b3.io.renable <= io.r3enable @[LVT_set.scala 33:17]
    io.r1data <= b1.io.dataOut @[LVT_set.scala 35:13]
    io.r2data <= b2.io.dataOut @[LVT_set.scala 36:13]
    io.r3data <= b3.io.dataOut @[LVT_set.scala 37:13]
    b1.io.raddr <= io.r1addr @[LVT_set.scala 39:15]
    b2.io.raddr <= io.r2addr @[LVT_set.scala 40:15]
    b3.io.raddr <= io.r3addr @[LVT_set.scala 41:15]
    b1.io.waddr <= io.waddr @[LVT_set.scala 43:15]
    b2.io.waddr <= io.waddr @[LVT_set.scala 44:15]
    b3.io.waddr <= io.waddr @[LVT_set.scala 45:15]

  module ReadWriteSmem_3 :
    input clock : Clock
    input reset : Reset
    output io : { flip wenable : UInt<1>, flip renable : UInt<1>, flip raddr : UInt<6>, flip waddr : UInt<6>, flip dataIn : UInt<64>, dataOut : UInt<64>}

    smem mem : UInt<64> [64] @[SRAM_block.scala 15:24]
    when io.wenable : @[SRAM_block.scala 17:19]
      write mport MPORT = mem[io.waddr], clock
      MPORT <= io.dataIn
    wire _io_dataOut_WIRE : UInt @[SRAM_block.scala 21:25]
    _io_dataOut_WIRE is invalid @[SRAM_block.scala 21:25]
    when io.renable : @[SRAM_block.scala 21:25]
      _io_dataOut_WIRE <= io.raddr @[SRAM_block.scala 21:25]
      node _io_dataOut_T = or(_io_dataOut_WIRE, UInt<6>("h0")) @[SRAM_block.scala 21:25]
      node _io_dataOut_T_1 = bits(_io_dataOut_T, 5, 0) @[SRAM_block.scala 21:25]
      read mport io_dataOut_MPORT = mem[_io_dataOut_T_1], clock @[SRAM_block.scala 21:25]
    io.dataOut <= io_dataOut_MPORT @[SRAM_block.scala 21:14]

  module ReadWriteSmem_4 :
    input clock : Clock
    input reset : Reset
    output io : { flip wenable : UInt<1>, flip renable : UInt<1>, flip raddr : UInt<6>, flip waddr : UInt<6>, flip dataIn : UInt<64>, dataOut : UInt<64>}

    smem mem : UInt<64> [64] @[SRAM_block.scala 15:24]
    when io.wenable : @[SRAM_block.scala 17:19]
      write mport MPORT = mem[io.waddr], clock
      MPORT <= io.dataIn
    wire _io_dataOut_WIRE : UInt @[SRAM_block.scala 21:25]
    _io_dataOut_WIRE is invalid @[SRAM_block.scala 21:25]
    when io.renable : @[SRAM_block.scala 21:25]
      _io_dataOut_WIRE <= io.raddr @[SRAM_block.scala 21:25]
      node _io_dataOut_T = or(_io_dataOut_WIRE, UInt<6>("h0")) @[SRAM_block.scala 21:25]
      node _io_dataOut_T_1 = bits(_io_dataOut_T, 5, 0) @[SRAM_block.scala 21:25]
      read mport io_dataOut_MPORT = mem[_io_dataOut_T_1], clock @[SRAM_block.scala 21:25]
    io.dataOut <= io_dataOut_MPORT @[SRAM_block.scala 21:14]

  module ReadWriteSmem_5 :
    input clock : Clock
    input reset : Reset
    output io : { flip wenable : UInt<1>, flip renable : UInt<1>, flip raddr : UInt<6>, flip waddr : UInt<6>, flip dataIn : UInt<64>, dataOut : UInt<64>}

    smem mem : UInt<64> [64] @[SRAM_block.scala 15:24]
    when io.wenable : @[SRAM_block.scala 17:19]
      write mport MPORT = mem[io.waddr], clock
      MPORT <= io.dataIn
    wire _io_dataOut_WIRE : UInt @[SRAM_block.scala 21:25]
    _io_dataOut_WIRE is invalid @[SRAM_block.scala 21:25]
    when io.renable : @[SRAM_block.scala 21:25]
      _io_dataOut_WIRE <= io.raddr @[SRAM_block.scala 21:25]
      node _io_dataOut_T = or(_io_dataOut_WIRE, UInt<6>("h0")) @[SRAM_block.scala 21:25]
      node _io_dataOut_T_1 = bits(_io_dataOut_T, 5, 0) @[SRAM_block.scala 21:25]
      read mport io_dataOut_MPORT = mem[_io_dataOut_T_1], clock @[SRAM_block.scala 21:25]
    io.dataOut <= io_dataOut_MPORT @[SRAM_block.scala 21:14]

  module LVT_set_1 :
    input clock : Clock
    input reset : Reset
    output io : { flip wenable : UInt<1>, flip r1enable : UInt<1>, flip r2enable : UInt<1>, flip r3enable : UInt<1>, flip r1addr : UInt<6>, flip r2addr : UInt<6>, flip r3addr : UInt<6>, flip waddr : UInt<6>, flip wdata : UInt<64>, r1data : UInt<64>, r2data : UInt<64>, r3data : UInt<64>}

    inst b1 of ReadWriteSmem_3 @[LVT_set.scala 20:18]
    b1.clock <= clock
    b1.reset <= reset
    inst b2 of ReadWriteSmem_4 @[LVT_set.scala 21:18]
    b2.clock <= clock
    b2.reset <= reset
    inst b3 of ReadWriteSmem_5 @[LVT_set.scala 22:18]
    b3.clock <= clock
    b3.reset <= reset
    b1.io.wenable <= io.wenable @[LVT_set.scala 24:17]
    b2.io.wenable <= io.wenable @[LVT_set.scala 25:17]
    b3.io.wenable <= io.wenable @[LVT_set.scala 26:17]
    b1.io.dataIn <= io.wdata @[LVT_set.scala 27:16]
    b2.io.dataIn <= io.wdata @[LVT_set.scala 28:16]
    b3.io.dataIn <= io.wdata @[LVT_set.scala 29:16]
    b1.io.renable <= io.r1enable @[LVT_set.scala 31:17]
    b2.io.renable <= io.r2enable @[LVT_set.scala 32:17]
    b3.io.renable <= io.r3enable @[LVT_set.scala 33:17]
    io.r1data <= b1.io.dataOut @[LVT_set.scala 35:13]
    io.r2data <= b2.io.dataOut @[LVT_set.scala 36:13]
    io.r3data <= b3.io.dataOut @[LVT_set.scala 37:13]
    b1.io.raddr <= io.r1addr @[LVT_set.scala 39:15]
    b2.io.raddr <= io.r2addr @[LVT_set.scala 40:15]
    b3.io.raddr <= io.r3addr @[LVT_set.scala 41:15]
    b1.io.waddr <= io.waddr @[LVT_set.scala 43:15]
    b2.io.waddr <= io.waddr @[LVT_set.scala 44:15]
    b3.io.waddr <= io.waddr @[LVT_set.scala 45:15]

  module ReadWriteSmem_6 :
    input clock : Clock
    input reset : Reset
    output io : { flip wenable : UInt<1>, flip renable : UInt<1>, flip raddr : UInt<6>, flip waddr : UInt<6>, flip dataIn : UInt<64>, dataOut : UInt<64>}

    smem mem : UInt<64> [64] @[SRAM_block.scala 15:24]
    when io.wenable : @[SRAM_block.scala 17:19]
      write mport MPORT = mem[io.waddr], clock
      MPORT <= io.dataIn
    wire _io_dataOut_WIRE : UInt @[SRAM_block.scala 21:25]
    _io_dataOut_WIRE is invalid @[SRAM_block.scala 21:25]
    when io.renable : @[SRAM_block.scala 21:25]
      _io_dataOut_WIRE <= io.raddr @[SRAM_block.scala 21:25]
      node _io_dataOut_T = or(_io_dataOut_WIRE, UInt<6>("h0")) @[SRAM_block.scala 21:25]
      node _io_dataOut_T_1 = bits(_io_dataOut_T, 5, 0) @[SRAM_block.scala 21:25]
      read mport io_dataOut_MPORT = mem[_io_dataOut_T_1], clock @[SRAM_block.scala 21:25]
    io.dataOut <= io_dataOut_MPORT @[SRAM_block.scala 21:14]

  module ReadWriteSmem_7 :
    input clock : Clock
    input reset : Reset
    output io : { flip wenable : UInt<1>, flip renable : UInt<1>, flip raddr : UInt<6>, flip waddr : UInt<6>, flip dataIn : UInt<64>, dataOut : UInt<64>}

    smem mem : UInt<64> [64] @[SRAM_block.scala 15:24]
    when io.wenable : @[SRAM_block.scala 17:19]
      write mport MPORT = mem[io.waddr], clock
      MPORT <= io.dataIn
    wire _io_dataOut_WIRE : UInt @[SRAM_block.scala 21:25]
    _io_dataOut_WIRE is invalid @[SRAM_block.scala 21:25]
    when io.renable : @[SRAM_block.scala 21:25]
      _io_dataOut_WIRE <= io.raddr @[SRAM_block.scala 21:25]
      node _io_dataOut_T = or(_io_dataOut_WIRE, UInt<6>("h0")) @[SRAM_block.scala 21:25]
      node _io_dataOut_T_1 = bits(_io_dataOut_T, 5, 0) @[SRAM_block.scala 21:25]
      read mport io_dataOut_MPORT = mem[_io_dataOut_T_1], clock @[SRAM_block.scala 21:25]
    io.dataOut <= io_dataOut_MPORT @[SRAM_block.scala 21:14]

  module ReadWriteSmem_8 :
    input clock : Clock
    input reset : Reset
    output io : { flip wenable : UInt<1>, flip renable : UInt<1>, flip raddr : UInt<6>, flip waddr : UInt<6>, flip dataIn : UInt<64>, dataOut : UInt<64>}

    smem mem : UInt<64> [64] @[SRAM_block.scala 15:24]
    when io.wenable : @[SRAM_block.scala 17:19]
      write mport MPORT = mem[io.waddr], clock
      MPORT <= io.dataIn
    wire _io_dataOut_WIRE : UInt @[SRAM_block.scala 21:25]
    _io_dataOut_WIRE is invalid @[SRAM_block.scala 21:25]
    when io.renable : @[SRAM_block.scala 21:25]
      _io_dataOut_WIRE <= io.raddr @[SRAM_block.scala 21:25]
      node _io_dataOut_T = or(_io_dataOut_WIRE, UInt<6>("h0")) @[SRAM_block.scala 21:25]
      node _io_dataOut_T_1 = bits(_io_dataOut_T, 5, 0) @[SRAM_block.scala 21:25]
      read mport io_dataOut_MPORT = mem[_io_dataOut_T_1], clock @[SRAM_block.scala 21:25]
    io.dataOut <= io_dataOut_MPORT @[SRAM_block.scala 21:14]

  module LVT_set_2 :
    input clock : Clock
    input reset : Reset
    output io : { flip wenable : UInt<1>, flip r1enable : UInt<1>, flip r2enable : UInt<1>, flip r3enable : UInt<1>, flip r1addr : UInt<6>, flip r2addr : UInt<6>, flip r3addr : UInt<6>, flip waddr : UInt<6>, flip wdata : UInt<64>, r1data : UInt<64>, r2data : UInt<64>, r3data : UInt<64>}

    inst b1 of ReadWriteSmem_6 @[LVT_set.scala 20:18]
    b1.clock <= clock
    b1.reset <= reset
    inst b2 of ReadWriteSmem_7 @[LVT_set.scala 21:18]
    b2.clock <= clock
    b2.reset <= reset
    inst b3 of ReadWriteSmem_8 @[LVT_set.scala 22:18]
    b3.clock <= clock
    b3.reset <= reset
    b1.io.wenable <= io.wenable @[LVT_set.scala 24:17]
    b2.io.wenable <= io.wenable @[LVT_set.scala 25:17]
    b3.io.wenable <= io.wenable @[LVT_set.scala 26:17]
    b1.io.dataIn <= io.wdata @[LVT_set.scala 27:16]
    b2.io.dataIn <= io.wdata @[LVT_set.scala 28:16]
    b3.io.dataIn <= io.wdata @[LVT_set.scala 29:16]
    b1.io.renable <= io.r1enable @[LVT_set.scala 31:17]
    b2.io.renable <= io.r2enable @[LVT_set.scala 32:17]
    b3.io.renable <= io.r3enable @[LVT_set.scala 33:17]
    io.r1data <= b1.io.dataOut @[LVT_set.scala 35:13]
    io.r2data <= b2.io.dataOut @[LVT_set.scala 36:13]
    io.r3data <= b3.io.dataOut @[LVT_set.scala 37:13]
    b1.io.raddr <= io.r1addr @[LVT_set.scala 39:15]
    b2.io.raddr <= io.r2addr @[LVT_set.scala 40:15]
    b3.io.raddr <= io.r3addr @[LVT_set.scala 41:15]
    b1.io.waddr <= io.waddr @[LVT_set.scala 43:15]
    b2.io.waddr <= io.waddr @[LVT_set.scala 44:15]
    b3.io.waddr <= io.waddr @[LVT_set.scala 45:15]

  module ReadWriteSmem_9 :
    input clock : Clock
    input reset : Reset
    output io : { flip wenable : UInt<1>, flip renable : UInt<1>, flip raddr : UInt<6>, flip waddr : UInt<6>, flip dataIn : UInt<64>, dataOut : UInt<64>}

    smem mem : UInt<64> [64] @[SRAM_block.scala 15:24]
    when io.wenable : @[SRAM_block.scala 17:19]
      write mport MPORT = mem[io.waddr], clock
      MPORT <= io.dataIn
    wire _io_dataOut_WIRE : UInt @[SRAM_block.scala 21:25]
    _io_dataOut_WIRE is invalid @[SRAM_block.scala 21:25]
    when io.renable : @[SRAM_block.scala 21:25]
      _io_dataOut_WIRE <= io.raddr @[SRAM_block.scala 21:25]
      node _io_dataOut_T = or(_io_dataOut_WIRE, UInt<6>("h0")) @[SRAM_block.scala 21:25]
      node _io_dataOut_T_1 = bits(_io_dataOut_T, 5, 0) @[SRAM_block.scala 21:25]
      read mport io_dataOut_MPORT = mem[_io_dataOut_T_1], clock @[SRAM_block.scala 21:25]
    io.dataOut <= io_dataOut_MPORT @[SRAM_block.scala 21:14]

  module ReadWriteSmem_10 :
    input clock : Clock
    input reset : Reset
    output io : { flip wenable : UInt<1>, flip renable : UInt<1>, flip raddr : UInt<6>, flip waddr : UInt<6>, flip dataIn : UInt<64>, dataOut : UInt<64>}

    smem mem : UInt<64> [64] @[SRAM_block.scala 15:24]
    when io.wenable : @[SRAM_block.scala 17:19]
      write mport MPORT = mem[io.waddr], clock
      MPORT <= io.dataIn
    wire _io_dataOut_WIRE : UInt @[SRAM_block.scala 21:25]
    _io_dataOut_WIRE is invalid @[SRAM_block.scala 21:25]
    when io.renable : @[SRAM_block.scala 21:25]
      _io_dataOut_WIRE <= io.raddr @[SRAM_block.scala 21:25]
      node _io_dataOut_T = or(_io_dataOut_WIRE, UInt<6>("h0")) @[SRAM_block.scala 21:25]
      node _io_dataOut_T_1 = bits(_io_dataOut_T, 5, 0) @[SRAM_block.scala 21:25]
      read mport io_dataOut_MPORT = mem[_io_dataOut_T_1], clock @[SRAM_block.scala 21:25]
    io.dataOut <= io_dataOut_MPORT @[SRAM_block.scala 21:14]

  module ReadWriteSmem_11 :
    input clock : Clock
    input reset : Reset
    output io : { flip wenable : UInt<1>, flip renable : UInt<1>, flip raddr : UInt<6>, flip waddr : UInt<6>, flip dataIn : UInt<64>, dataOut : UInt<64>}

    smem mem : UInt<64> [64] @[SRAM_block.scala 15:24]
    when io.wenable : @[SRAM_block.scala 17:19]
      write mport MPORT = mem[io.waddr], clock
      MPORT <= io.dataIn
    wire _io_dataOut_WIRE : UInt @[SRAM_block.scala 21:25]
    _io_dataOut_WIRE is invalid @[SRAM_block.scala 21:25]
    when io.renable : @[SRAM_block.scala 21:25]
      _io_dataOut_WIRE <= io.raddr @[SRAM_block.scala 21:25]
      node _io_dataOut_T = or(_io_dataOut_WIRE, UInt<6>("h0")) @[SRAM_block.scala 21:25]
      node _io_dataOut_T_1 = bits(_io_dataOut_T, 5, 0) @[SRAM_block.scala 21:25]
      read mport io_dataOut_MPORT = mem[_io_dataOut_T_1], clock @[SRAM_block.scala 21:25]
    io.dataOut <= io_dataOut_MPORT @[SRAM_block.scala 21:14]

  module LVT_set_3 :
    input clock : Clock
    input reset : Reset
    output io : { flip wenable : UInt<1>, flip r1enable : UInt<1>, flip r2enable : UInt<1>, flip r3enable : UInt<1>, flip r1addr : UInt<6>, flip r2addr : UInt<6>, flip r3addr : UInt<6>, flip waddr : UInt<6>, flip wdata : UInt<64>, r1data : UInt<64>, r2data : UInt<64>, r3data : UInt<64>}

    inst b1 of ReadWriteSmem_9 @[LVT_set.scala 20:18]
    b1.clock <= clock
    b1.reset <= reset
    inst b2 of ReadWriteSmem_10 @[LVT_set.scala 21:18]
    b2.clock <= clock
    b2.reset <= reset
    inst b3 of ReadWriteSmem_11 @[LVT_set.scala 22:18]
    b3.clock <= clock
    b3.reset <= reset
    b1.io.wenable <= io.wenable @[LVT_set.scala 24:17]
    b2.io.wenable <= io.wenable @[LVT_set.scala 25:17]
    b3.io.wenable <= io.wenable @[LVT_set.scala 26:17]
    b1.io.dataIn <= io.wdata @[LVT_set.scala 27:16]
    b2.io.dataIn <= io.wdata @[LVT_set.scala 28:16]
    b3.io.dataIn <= io.wdata @[LVT_set.scala 29:16]
    b1.io.renable <= io.r1enable @[LVT_set.scala 31:17]
    b2.io.renable <= io.r2enable @[LVT_set.scala 32:17]
    b3.io.renable <= io.r3enable @[LVT_set.scala 33:17]
    io.r1data <= b1.io.dataOut @[LVT_set.scala 35:13]
    io.r2data <= b2.io.dataOut @[LVT_set.scala 36:13]
    io.r3data <= b3.io.dataOut @[LVT_set.scala 37:13]
    b1.io.raddr <= io.r1addr @[LVT_set.scala 39:15]
    b2.io.raddr <= io.r2addr @[LVT_set.scala 40:15]
    b3.io.raddr <= io.r3addr @[LVT_set.scala 41:15]
    b1.io.waddr <= io.waddr @[LVT_set.scala 43:15]
    b2.io.waddr <= io.waddr @[LVT_set.scala 44:15]
    b3.io.waddr <= io.waddr @[LVT_set.scala 45:15]

  module LVT_Mem :
    input clock : Clock
    input reset : Reset
    output io : { R1 : { flip addr : UInt<6>, data : UInt<64>, flip en : UInt<1>}, R2 : { flip addr : UInt<6>, data : UInt<64>, flip en : UInt<1>}, R3 : { flip addr : UInt<6>, data : UInt<64>, flip en : UInt<1>}, W1 : { flip addr : UInt<6>, flip data : UInt<64>, flip en : UInt<1>}, W2 : { flip addr : UInt<6>, flip data : UInt<64>, flip en : UInt<1>}, W3 : { flip addr : UInt<6>, flip data : UInt<64>, flip en : UInt<1>}, W4 : { flip addr : UInt<6>, flip data : UInt<64>, flip en : UInt<1>}}

    cmem LVT : UInt<2> [64] @[LVT_Mem.scala 32:16]
    inst s1 of LVT_set @[LVT_Mem.scala 35:18]
    s1.clock <= clock
    s1.reset <= reset
    inst s2 of LVT_set_1 @[LVT_Mem.scala 36:18]
    s2.clock <= clock
    s2.reset <= reset
    inst s3 of LVT_set_2 @[LVT_Mem.scala 37:18]
    s3.clock <= clock
    s3.reset <= reset
    inst s4 of LVT_set_3 @[LVT_Mem.scala 38:18]
    s4.clock <= clock
    s4.reset <= reset
    when io.W1.en : @[LVT_Mem.scala 41:17]
      infer mport MPORT = LVT[io.W1.addr], clock @[LVT_Mem.scala 42:8]
      MPORT <= UInt<1>("h0") @[LVT_Mem.scala 42:21]
    when io.W2.en : @[LVT_Mem.scala 44:18]
      infer mport MPORT_1 = LVT[io.W2.addr], clock @[LVT_Mem.scala 45:8]
      MPORT_1 <= UInt<1>("h1") @[LVT_Mem.scala 45:21]
    when io.W3.en : @[LVT_Mem.scala 47:18]
      infer mport MPORT_2 = LVT[io.W3.addr], clock @[LVT_Mem.scala 48:8]
      MPORT_2 <= UInt<2>("h2") @[LVT_Mem.scala 48:21]
    when io.W4.en : @[LVT_Mem.scala 50:18]
      infer mport MPORT_3 = LVT[io.W4.addr], clock @[LVT_Mem.scala 51:8]
      MPORT_3 <= UInt<2>("h3") @[LVT_Mem.scala 51:21]
    s1.io.wenable <= io.W1.en @[LVT_Mem.scala 55:17]
    s2.io.wenable <= io.W2.en @[LVT_Mem.scala 56:17]
    s3.io.wenable <= io.W3.en @[LVT_Mem.scala 57:17]
    s4.io.wenable <= io.W4.en @[LVT_Mem.scala 58:17]
    s1.io.wdata <= io.W1.data @[LVT_Mem.scala 59:15]
    s2.io.wdata <= io.W2.data @[LVT_Mem.scala 60:15]
    s3.io.wdata <= io.W3.data @[LVT_Mem.scala 61:15]
    s4.io.wdata <= io.W4.data @[LVT_Mem.scala 62:15]
    s1.io.waddr <= io.W1.addr @[LVT_Mem.scala 63:15]
    s2.io.waddr <= io.W2.addr @[LVT_Mem.scala 64:15]
    s3.io.waddr <= io.W3.addr @[LVT_Mem.scala 65:15]
    s4.io.waddr <= io.W4.addr @[LVT_Mem.scala 66:15]
    reg r1_sel_reg : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[LVT_Mem.scala 69:27]
    reg r2_sel_reg : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[LVT_Mem.scala 70:27]
    reg r3_sel_reg : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[LVT_Mem.scala 71:27]
    infer mport r1_sel_reg_MPORT = LVT[io.R1.addr], clock @[LVT_Mem.scala 73:20]
    r1_sel_reg <= r1_sel_reg_MPORT @[LVT_Mem.scala 73:14]
    infer mport r2_sel_reg_MPORT = LVT[io.R2.addr], clock @[LVT_Mem.scala 74:20]
    r2_sel_reg <= r2_sel_reg_MPORT @[LVT_Mem.scala 74:14]
    infer mport r3_sel_reg_MPORT = LVT[io.R3.addr], clock @[LVT_Mem.scala 75:20]
    r3_sel_reg <= r3_sel_reg_MPORT @[LVT_Mem.scala 75:14]
    s1.io.r1addr <= io.R1.addr @[LVT_Mem.scala 78:16]
    s2.io.r1addr <= io.R1.addr @[LVT_Mem.scala 79:16]
    s3.io.r1addr <= io.R1.addr @[LVT_Mem.scala 80:16]
    s4.io.r1addr <= io.R1.addr @[LVT_Mem.scala 81:16]
    s1.io.r2addr <= io.R2.addr @[LVT_Mem.scala 83:16]
    s2.io.r2addr <= io.R2.addr @[LVT_Mem.scala 84:16]
    s3.io.r2addr <= io.R2.addr @[LVT_Mem.scala 85:16]
    s4.io.r2addr <= io.R2.addr @[LVT_Mem.scala 86:16]
    s1.io.r3addr <= io.R3.addr @[LVT_Mem.scala 88:16]
    s2.io.r3addr <= io.R3.addr @[LVT_Mem.scala 89:16]
    s3.io.r3addr <= io.R3.addr @[LVT_Mem.scala 90:16]
    s4.io.r3addr <= io.R3.addr @[LVT_Mem.scala 91:16]
    s1.io.r1enable <= io.R1.en @[LVT_Mem.scala 93:18]
    s2.io.r1enable <= io.R1.en @[LVT_Mem.scala 94:18]
    s3.io.r1enable <= io.R1.en @[LVT_Mem.scala 95:18]
    s4.io.r1enable <= io.R1.en @[LVT_Mem.scala 96:18]
    s1.io.r2enable <= io.R2.en @[LVT_Mem.scala 98:18]
    s2.io.r2enable <= io.R2.en @[LVT_Mem.scala 99:18]
    s3.io.r2enable <= io.R2.en @[LVT_Mem.scala 100:18]
    s4.io.r2enable <= io.R2.en @[LVT_Mem.scala 101:18]
    s1.io.r3enable <= io.R3.en @[LVT_Mem.scala 103:18]
    s2.io.r3enable <= io.R3.en @[LVT_Mem.scala 104:18]
    s3.io.r3enable <= io.R3.en @[LVT_Mem.scala 105:18]
    s4.io.r3enable <= io.R3.en @[LVT_Mem.scala 106:18]
    node _io_R1_data_T = eq(r1_sel_reg, UInt<1>("h0")) @[LVT_Mem.scala 110:45]
    node _io_R1_data_T_1 = eq(r1_sel_reg, UInt<1>("h1")) @[LVT_Mem.scala 110:79]
    node _io_R1_data_T_2 = eq(r1_sel_reg, UInt<2>("h2")) @[LVT_Mem.scala 110:113]
    node _io_R1_data_T_3 = eq(r1_sel_reg, UInt<2>("h3")) @[LVT_Mem.scala 110:147]
    node _io_R1_data_T_4 = mux(_io_R1_data_T_3, s4.io.r1data, UInt<1>("h0")) @[Mux.scala 101:16]
    node _io_R1_data_T_5 = mux(_io_R1_data_T_2, s3.io.r1data, _io_R1_data_T_4) @[Mux.scala 101:16]
    node _io_R1_data_T_6 = mux(_io_R1_data_T_1, s2.io.r1data, _io_R1_data_T_5) @[Mux.scala 101:16]
    node _io_R1_data_T_7 = mux(_io_R1_data_T, s1.io.r1data, _io_R1_data_T_6) @[Mux.scala 101:16]
    io.R1.data <= _io_R1_data_T_7 @[LVT_Mem.scala 110:14]
    node _io_R2_data_T = eq(r2_sel_reg, UInt<1>("h0")) @[LVT_Mem.scala 111:45]
    node _io_R2_data_T_1 = eq(r2_sel_reg, UInt<1>("h1")) @[LVT_Mem.scala 111:79]
    node _io_R2_data_T_2 = eq(r2_sel_reg, UInt<2>("h2")) @[LVT_Mem.scala 111:113]
    node _io_R2_data_T_3 = eq(r2_sel_reg, UInt<2>("h3")) @[LVT_Mem.scala 111:147]
    node _io_R2_data_T_4 = mux(_io_R2_data_T_3, s4.io.r2data, UInt<1>("h0")) @[Mux.scala 101:16]
    node _io_R2_data_T_5 = mux(_io_R2_data_T_2, s3.io.r2data, _io_R2_data_T_4) @[Mux.scala 101:16]
    node _io_R2_data_T_6 = mux(_io_R2_data_T_1, s2.io.r2data, _io_R2_data_T_5) @[Mux.scala 101:16]
    node _io_R2_data_T_7 = mux(_io_R2_data_T, s1.io.r2data, _io_R2_data_T_6) @[Mux.scala 101:16]
    io.R2.data <= _io_R2_data_T_7 @[LVT_Mem.scala 111:14]
    node _io_R3_data_T = eq(r3_sel_reg, UInt<1>("h0")) @[LVT_Mem.scala 112:45]
    node _io_R3_data_T_1 = eq(r3_sel_reg, UInt<1>("h1")) @[LVT_Mem.scala 112:79]
    node _io_R3_data_T_2 = eq(r3_sel_reg, UInt<2>("h2")) @[LVT_Mem.scala 112:113]
    node _io_R3_data_T_3 = eq(r3_sel_reg, UInt<2>("h3")) @[LVT_Mem.scala 112:147]
    node _io_R3_data_T_4 = mux(_io_R3_data_T_3, s4.io.r3data, UInt<1>("h0")) @[Mux.scala 101:16]
    node _io_R3_data_T_5 = mux(_io_R3_data_T_2, s3.io.r3data, _io_R3_data_T_4) @[Mux.scala 101:16]
    node _io_R3_data_T_6 = mux(_io_R3_data_T_1, s2.io.r3data, _io_R3_data_T_5) @[Mux.scala 101:16]
    node _io_R3_data_T_7 = mux(_io_R3_data_T, s1.io.r3data, _io_R3_data_T_6) @[Mux.scala 101:16]
    io.R3.data <= _io_R3_data_T_7 @[LVT_Mem.scala 112:14]

  module PRF :
    input clock : Clock
    input reset : Reset
    output w1 : { flip addr : UInt<6>, flip data : UInt<64>, flip en : UInt<1>}
    output w2 : { flip addr : UInt<6>, flip data : UInt<64>, flip en : UInt<1>}
    output w3 : { flip addr : UInt<6>, flip data : UInt<64>, flip en : UInt<1>}
    output w4 : { flip addr : UInt<6>, flip data : UInt<64>, flip en : UInt<1>}
    output execRead : { flip valid : UInt<1>, flip instruction : UInt<32>, flip branchmask : UInt<5>, flip rs1Addr : UInt<6>, flip rs2Addr : UInt<6>, flip robAddr : UInt<6>, flip prfDest : UInt<6>}
    output toExec : { valid : UInt<1>, instruction : UInt<32>, branchmask : UInt<5>, rs1Addr : UInt<6>, rs1Data : UInt<64>, rs2Addr : UInt<6>, rs2Data : UInt<64>, robAddr : UInt<6>, prfDest : UInt<6>}
    output fromStore : { flip valid : UInt<1>, flip instruction : UInt<32>, flip branchmask : UInt<5>, flip rs2Addr : UInt<6>, flip prfDest : UInt<6>}
    output toStore : { valid : UInt<1>, instruction : UInt<32>, branchmask : UInt<5>, rs2Data : UInt<64>, prfDest : UInt<6>}
    output branchCheck : { flip pass : UInt<1>, flip branchmask : UInt<5>, flip valid : UInt<1>}
    output registerFileOutput : UInt<64>[64]

    inst prf of LVT_Mem @[PRF.scala 73:19]
    prf.clock <= clock
    prf.reset <= reset
    prf.io.W1.en <= w1.en @[PRF.scala 76:13]
    prf.io.W1.data <= w1.data @[PRF.scala 76:13]
    prf.io.W1.addr <= w1.addr @[PRF.scala 76:13]
    prf.io.W2.en <= w2.en @[PRF.scala 77:13]
    prf.io.W2.data <= w2.data @[PRF.scala 77:13]
    prf.io.W2.addr <= w2.addr @[PRF.scala 77:13]
    prf.io.W3.en <= w3.en @[PRF.scala 78:13]
    prf.io.W3.data <= w3.data @[PRF.scala 78:13]
    prf.io.W3.addr <= w3.addr @[PRF.scala 78:13]
    prf.io.W4.en <= w4.en @[PRF.scala 79:13]
    prf.io.W4.data <= w4.data @[PRF.scala 79:13]
    prf.io.W4.addr <= w4.addr @[PRF.scala 79:13]
    reg toExec_robAddr_REG : UInt, clock with :
      reset => (UInt<1>("h0"), toExec_robAddr_REG) @[PRF.scala 82:28]
    toExec_robAddr_REG <= execRead.robAddr @[PRF.scala 82:28]
    toExec.robAddr <= toExec_robAddr_REG @[PRF.scala 82:18]
    reg toExec_rs1Addr_REG : UInt, clock with :
      reset => (UInt<1>("h0"), toExec_rs1Addr_REG) @[PRF.scala 83:28]
    toExec_rs1Addr_REG <= execRead.rs1Addr @[PRF.scala 83:28]
    toExec.rs1Addr <= toExec_rs1Addr_REG @[PRF.scala 83:18]
    reg toExec_rs2Addr_REG : UInt, clock with :
      reset => (UInt<1>("h0"), toExec_rs2Addr_REG) @[PRF.scala 84:28]
    toExec_rs2Addr_REG <= execRead.rs2Addr @[PRF.scala 84:28]
    toExec.rs2Addr <= toExec_rs2Addr_REG @[PRF.scala 84:18]
    reg toExec_instruction_REG : UInt, clock with :
      reset => (UInt<1>("h0"), toExec_instruction_REG) @[PRF.scala 85:32]
    toExec_instruction_REG <= execRead.instruction @[PRF.scala 85:32]
    toExec.instruction <= toExec_instruction_REG @[PRF.scala 85:22]
    reg toStore_instruction_REG : UInt, clock with :
      reset => (UInt<1>("h0"), toStore_instruction_REG) @[PRF.scala 86:33]
    toStore_instruction_REG <= fromStore.instruction @[PRF.scala 86:33]
    toStore.instruction <= toStore_instruction_REG @[PRF.scala 86:23]
    reg toExec_prfDest_REG : UInt, clock with :
      reset => (UInt<1>("h0"), toExec_prfDest_REG) @[PRF.scala 87:28]
    toExec_prfDest_REG <= execRead.prfDest @[PRF.scala 87:28]
    toExec.prfDest <= toExec_prfDest_REG @[PRF.scala 87:18]
    reg toStore_prfDest_REG : UInt, clock with :
      reset => (UInt<1>("h0"), toStore_prfDest_REG) @[PRF.scala 88:29]
    toStore_prfDest_REG <= fromStore.prfDest @[PRF.scala 88:29]
    toStore.prfDest <= toStore_prfDest_REG @[PRF.scala 88:19]
    prf.io.R1.en <= execRead.valid @[PRF.scala 91:16]
    prf.io.R1.addr <= execRead.rs1Addr @[PRF.scala 92:18]
    toExec.rs1Data <= prf.io.R1.data @[PRF.scala 93:18]
    prf.io.R2.en <= execRead.valid @[PRF.scala 95:16]
    prf.io.R2.addr <= execRead.rs2Addr @[PRF.scala 96:18]
    toExec.rs2Data <= prf.io.R2.data @[PRF.scala 97:18]
    prf.io.R3.en <= fromStore.valid @[PRF.scala 99:16]
    prf.io.R3.addr <= fromStore.rs2Addr @[PRF.scala 100:18]
    toStore.rs2Data <= prf.io.R3.data @[PRF.scala 101:19]
    reg toExec_valid : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[PRF.scala 104:29]
    reg toStore_valid : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[PRF.scala 105:30]
    reg toExec_mask : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[PRF.scala 107:28]
    reg toStore_mask : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[PRF.scala 108:29]
    when branchCheck.valid : @[PRF.scala 110:27]
      when branchCheck.pass : @[PRF.scala 112:28]
        toExec_valid <= execRead.valid @[PRF.scala 113:20]
        toExec_mask <= execRead.branchmask @[PRF.scala 114:19]
        node _T = and(branchCheck.branchmask, execRead.branchmask) @[PRF.scala 115:36]
        node _T_1 = orr(_T) @[PRF.scala 115:59]
        when _T_1 : @[PRF.scala 115:64]
          node _toExec_mask_T = xor(branchCheck.branchmask, execRead.branchmask) @[PRF.scala 116:47]
          toExec_mask <= _toExec_mask_T @[PRF.scala 116:21]
        toStore_valid <= fromStore.valid @[PRF.scala 118:21]
        node _toStore_mask_T = xor(branchCheck.branchmask, fromStore.branchmask) @[PRF.scala 119:46]
        toStore_mask <= _toStore_mask_T @[PRF.scala 119:20]
      else :
        node _toExec_valid_T = and(branchCheck.branchmask, execRead.branchmask) @[PRF.scala 122:48]
        node _toExec_valid_T_1 = eq(_toExec_valid_T, UInt<1>("h0")) @[PRF.scala 122:71]
        node _toExec_valid_T_2 = and(_toExec_valid_T_1, execRead.valid) @[PRF.scala 122:79]
        toExec_valid <= _toExec_valid_T_2 @[PRF.scala 122:20]
        toExec_mask <= execRead.branchmask @[PRF.scala 123:19]
        node _toStore_valid_T = and(branchCheck.branchmask, fromStore.branchmask) @[PRF.scala 125:48]
        node _toStore_valid_T_1 = eq(_toStore_valid_T, UInt<1>("h0")) @[PRF.scala 125:72]
        toStore_valid <= _toStore_valid_T_1 @[PRF.scala 125:21]
        toStore_mask <= fromStore.branchmask @[PRF.scala 126:20]
    else :
      toExec_valid <= execRead.valid @[PRF.scala 129:18]
      toExec_mask <= execRead.branchmask @[PRF.scala 130:17]
      reg toStore_valid_REG : UInt<1>, clock with :
        reset => (reset, UInt<1>("h0")) @[PRF.scala 132:29]
      toStore_valid_REG <= fromStore.valid @[PRF.scala 132:29]
      toStore_valid <= toStore_valid_REG @[PRF.scala 132:19]
      toStore_mask <= fromStore.branchmask @[PRF.scala 133:18]
    toExec.valid <= toExec_valid @[PRF.scala 136:16]
    toExec.branchmask <= toExec_mask @[PRF.scala 137:21]
    reg toStore_valid_REG_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[PRF.scala 140:27]
    toStore_valid_REG_1 <= fromStore.valid @[PRF.scala 140:27]
    toStore.valid <= toStore_valid_REG_1 @[PRF.scala 140:17]
    toStore.branchmask <= toStore_mask @[PRF.scala 141:22]
    reg physicalRegisterFile : UInt<64>[64], clock with :
      reset => (UInt<1>("h0"), physicalRegisterFile) @[PRF.scala 143:33]
    when w1.en : @[PRF.scala 145:54]
      physicalRegisterFile[w1.addr] <= w1.data @[PRF.scala 145:88]
    when w2.en : @[PRF.scala 145:54]
      physicalRegisterFile[w2.addr] <= w2.data @[PRF.scala 145:88]
    when w3.en : @[PRF.scala 145:54]
      physicalRegisterFile[w3.addr] <= w3.data @[PRF.scala 145:88]
    when w4.en : @[PRF.scala 145:54]
      physicalRegisterFile[w4.addr] <= w4.data @[PRF.scala 145:88]
    registerFileOutput <= physicalRegisterFile @[PRF.scala 146:22]

  module system_Anon :
    input clock : Clock
    input reset : Reset
    output iPort : { AWID : UInt<2>, AWADDR : UInt<32>, AWLEN : UInt<8>, AWSIZE : UInt<3>, AWBURST : UInt<2>, AWLOCK : UInt<1>, AWCACHE : UInt<4>, AWPROT : UInt<3>, AWQOS : UInt<4>, AWVALID : UInt<1>, flip AWREADY : UInt<1>, WDATA : UInt<64>, WSTRB : UInt<8>, WLAST : UInt<1>, WVALID : UInt<1>, flip WREADY : UInt<1>, flip BID : UInt<2>, flip BRESP : UInt<2>, flip BVALID : UInt<1>, BREADY : UInt<1>, ARID : UInt<2>, ARADDR : UInt<32>, ARLEN : UInt<8>, ARSIZE : UInt<3>, ARBURST : UInt<2>, ARLOCK : UInt<1>, ARCACHE : UInt<4>, ARPROT : UInt<3>, ARQOS : UInt<4>, ARVALID : UInt<1>, flip ARREADY : UInt<1>, flip RID : UInt<2>, flip RDATA : UInt<64>, flip RLAST : UInt<1>, flip RVALID : UInt<1>, RREADY : UInt<1>, AWDOMAIN : UInt<2>, AWSNOOP : UInt<3>, AWBAR : UInt<2>, ARDOMAIN : UInt<2>, ARSNOOP : UInt<4>, ARBAR : UInt<2>, flip RRESP : UInt<4>, flip ACVALID : UInt<1>, ACREADY : UInt<1>, flip ACADDR : UInt<32>, flip ACSNOOP : UInt<4>, flip ACPROT : UInt<3>, CRVALID : UInt<1>, flip CRREADY : UInt<1>, CRRESP : UInt<5>, CDVALID : UInt<1>, flip CDREADY : UInt<1>, CDDATA : UInt<64>, CDLAST : UInt<1>}
    output dPort : { AWID : UInt<2>, AWADDR : UInt<32>, AWLEN : UInt<8>, AWSIZE : UInt<3>, AWBURST : UInt<2>, AWLOCK : UInt<1>, AWCACHE : UInt<4>, AWPROT : UInt<3>, AWQOS : UInt<4>, AWVALID : UInt<1>, flip AWREADY : UInt<1>, WDATA : UInt<64>, WSTRB : UInt<8>, WLAST : UInt<1>, WVALID : UInt<1>, flip WREADY : UInt<1>, flip BID : UInt<2>, flip BRESP : UInt<2>, flip BVALID : UInt<1>, BREADY : UInt<1>, ARID : UInt<2>, ARADDR : UInt<32>, ARLEN : UInt<8>, ARSIZE : UInt<3>, ARBURST : UInt<2>, ARLOCK : UInt<1>, ARCACHE : UInt<4>, ARPROT : UInt<3>, ARQOS : UInt<4>, ARVALID : UInt<1>, flip ARREADY : UInt<1>, flip RID : UInt<2>, flip RDATA : UInt<64>, flip RLAST : UInt<1>, flip RVALID : UInt<1>, RREADY : UInt<1>, AWDOMAIN : UInt<2>, AWSNOOP : UInt<3>, AWBAR : UInt<2>, ARDOMAIN : UInt<2>, ARSNOOP : UInt<4>, ARBAR : UInt<2>, flip RRESP : UInt<4>, flip ACVALID : UInt<1>, ACREADY : UInt<1>, flip ACADDR : UInt<32>, flip ACSNOOP : UInt<4>, flip ACPROT : UInt<3>, CRVALID : UInt<1>, flip CRREADY : UInt<1>, CRRESP : UInt<5>, CDVALID : UInt<1>, flip CDREADY : UInt<1>, CDDATA : UInt<64>, CDLAST : UInt<1>}
    output peripheral : { AWID : UInt<1>, AWADDR : UInt<32>, AWLEN : UInt<8>, AWSIZE : UInt<3>, AWBURST : UInt<2>, AWLOCK : UInt<1>, AWCACHE : UInt<4>, AWPROT : UInt<3>, AWQOS : UInt<4>, AWVALID : UInt<1>, flip AWREADY : UInt<1>, WDATA : UInt<32>, WSTRB : UInt<4>, WLAST : UInt<1>, WVALID : UInt<1>, flip WREADY : UInt<1>, flip BID : UInt<1>, flip BRESP : UInt<2>, flip BVALID : UInt<1>, BREADY : UInt<1>, ARID : UInt<1>, ARADDR : UInt<32>, ARLEN : UInt<8>, ARSIZE : UInt<3>, ARBURST : UInt<2>, ARLOCK : UInt<1>, ARCACHE : UInt<4>, ARPROT : UInt<3>, ARQOS : UInt<4>, ARVALID : UInt<1>, flip ARREADY : UInt<1>, flip RID : UInt<1>, flip RDATA : UInt<32>, flip RRESP : UInt<2>, flip RLAST : UInt<1>, flip RVALID : UInt<1>, RREADY : UInt<1>}
    output core_sample0 : UInt<1>
    output core_sample1 : UInt<1>
    input MTIP : UInt<1>
    output registersOut : UInt<64>[33]
    output robOut : { commitFired : UInt<1>, pc : UInt<64>, interrupt : UInt<1>}
    output allRobFiresOut : UInt<1>

    inst icache of iCache @[core.scala 27:22]
    icache.clock <= clock
    icache.reset <= reset
    iPort.CDLAST <= icache.lowLevelMem.CDLAST @[core.scala 30:9]
    iPort.CDDATA <= icache.lowLevelMem.CDDATA @[core.scala 30:9]
    icache.lowLevelMem.CDREADY <= iPort.CDREADY @[core.scala 30:9]
    iPort.CDVALID <= icache.lowLevelMem.CDVALID @[core.scala 30:9]
    iPort.CRRESP <= icache.lowLevelMem.CRRESP @[core.scala 30:9]
    icache.lowLevelMem.CRREADY <= iPort.CRREADY @[core.scala 30:9]
    iPort.CRVALID <= icache.lowLevelMem.CRVALID @[core.scala 30:9]
    icache.lowLevelMem.ACPROT <= iPort.ACPROT @[core.scala 30:9]
    icache.lowLevelMem.ACSNOOP <= iPort.ACSNOOP @[core.scala 30:9]
    icache.lowLevelMem.ACADDR <= iPort.ACADDR @[core.scala 30:9]
    iPort.ACREADY <= icache.lowLevelMem.ACREADY @[core.scala 30:9]
    icache.lowLevelMem.ACVALID <= iPort.ACVALID @[core.scala 30:9]
    icache.lowLevelMem.RRESP <= iPort.RRESP @[core.scala 30:9]
    iPort.ARBAR <= icache.lowLevelMem.ARBAR @[core.scala 30:9]
    iPort.ARSNOOP <= icache.lowLevelMem.ARSNOOP @[core.scala 30:9]
    iPort.ARDOMAIN <= icache.lowLevelMem.ARDOMAIN @[core.scala 30:9]
    iPort.AWBAR <= icache.lowLevelMem.AWBAR @[core.scala 30:9]
    iPort.AWSNOOP <= icache.lowLevelMem.AWSNOOP @[core.scala 30:9]
    iPort.AWDOMAIN <= icache.lowLevelMem.AWDOMAIN @[core.scala 30:9]
    iPort.RREADY <= icache.lowLevelMem.RREADY @[core.scala 30:9]
    icache.lowLevelMem.RVALID <= iPort.RVALID @[core.scala 30:9]
    icache.lowLevelMem.RLAST <= iPort.RLAST @[core.scala 30:9]
    icache.lowLevelMem.RDATA <= iPort.RDATA @[core.scala 30:9]
    icache.lowLevelMem.RID <= iPort.RID @[core.scala 30:9]
    icache.lowLevelMem.ARREADY <= iPort.ARREADY @[core.scala 30:9]
    iPort.ARVALID <= icache.lowLevelMem.ARVALID @[core.scala 30:9]
    iPort.ARQOS <= icache.lowLevelMem.ARQOS @[core.scala 30:9]
    iPort.ARPROT <= icache.lowLevelMem.ARPROT @[core.scala 30:9]
    iPort.ARCACHE <= icache.lowLevelMem.ARCACHE @[core.scala 30:9]
    iPort.ARLOCK <= icache.lowLevelMem.ARLOCK @[core.scala 30:9]
    iPort.ARBURST <= icache.lowLevelMem.ARBURST @[core.scala 30:9]
    iPort.ARSIZE <= icache.lowLevelMem.ARSIZE @[core.scala 30:9]
    iPort.ARLEN <= icache.lowLevelMem.ARLEN @[core.scala 30:9]
    iPort.ARADDR <= icache.lowLevelMem.ARADDR @[core.scala 30:9]
    iPort.ARID <= icache.lowLevelMem.ARID @[core.scala 30:9]
    iPort.BREADY <= icache.lowLevelMem.BREADY @[core.scala 30:9]
    icache.lowLevelMem.BVALID <= iPort.BVALID @[core.scala 30:9]
    icache.lowLevelMem.BRESP <= iPort.BRESP @[core.scala 30:9]
    icache.lowLevelMem.BID <= iPort.BID @[core.scala 30:9]
    icache.lowLevelMem.WREADY <= iPort.WREADY @[core.scala 30:9]
    iPort.WVALID <= icache.lowLevelMem.WVALID @[core.scala 30:9]
    iPort.WLAST <= icache.lowLevelMem.WLAST @[core.scala 30:9]
    iPort.WSTRB <= icache.lowLevelMem.WSTRB @[core.scala 30:9]
    iPort.WDATA <= icache.lowLevelMem.WDATA @[core.scala 30:9]
    icache.lowLevelMem.AWREADY <= iPort.AWREADY @[core.scala 30:9]
    iPort.AWVALID <= icache.lowLevelMem.AWVALID @[core.scala 30:9]
    iPort.AWQOS <= icache.lowLevelMem.AWQOS @[core.scala 30:9]
    iPort.AWPROT <= icache.lowLevelMem.AWPROT @[core.scala 30:9]
    iPort.AWCACHE <= icache.lowLevelMem.AWCACHE @[core.scala 30:9]
    iPort.AWLOCK <= icache.lowLevelMem.AWLOCK @[core.scala 30:9]
    iPort.AWBURST <= icache.lowLevelMem.AWBURST @[core.scala 30:9]
    iPort.AWSIZE <= icache.lowLevelMem.AWSIZE @[core.scala 30:9]
    iPort.AWLEN <= icache.lowLevelMem.AWLEN @[core.scala 30:9]
    iPort.AWADDR <= icache.lowLevelMem.AWADDR @[core.scala 30:9]
    iPort.AWID <= icache.lowLevelMem.AWID @[core.scala 30:9]
    icache.updateAllCachelines.fired <= UInt<1>("h0") @[core.scala 33:36]
    icache.cachelinesUpdatesResp.fired <= UInt<1>("h0") @[core.scala 34:38]
    inst fetch of fetch @[core.scala 36:21]
    fetch.clock <= clock
    fetch.reset <= reset
    icache.fromFetch.req <= fetch.cache.req @[core.scala 38:24]
    node _icache_fromFetch_req_bits_T = bits(fetch.cache.req.bits, 31, 0) @[core.scala 39:67]
    node _icache_fromFetch_req_bits_T_1 = cat(UInt<32>("h0"), _icache_fromFetch_req_bits_T) @[Cat.scala 33:92]
    icache.fromFetch.req.bits <= _icache_fromFetch_req_bits_T_1 @[core.scala 39:29]
    fetch.cache.resp <= icache.fromFetch.resp @[core.scala 40:20]
    fetch.updateAllCachelines.fired <= UInt<1>("h0") @[core.scala 43:35]
    fetch.carryOutFence.fired <= UInt<1>("h0") @[core.scala 44:29]
    inst decode of core_Anon @[core.scala 46:22]
    decode.clock <= clock
    decode.reset <= reset
    node _fetch_toDecode_fired_T = and(decode.fromFetch.ready, fetch.toDecode.ready) @[core.scala 54:33]
    node _fetch_toDecode_fired_T_1 = eq(decode.fromFetch.expected.valid, UInt<1>("h0")) @[core.scala 55:7]
    node _fetch_toDecode_fired_T_2 = eq(decode.fromFetch.expected.pc, fetch.toDecode.pc) @[core.scala 55:73]
    node _fetch_toDecode_fired_T_3 = or(_fetch_toDecode_fired_T_1, _fetch_toDecode_fired_T_2) @[core.scala 55:40]
    node _fetch_toDecode_fired_T_4 = and(_fetch_toDecode_fired_T, _fetch_toDecode_fired_T_3) @[core.scala 54:57]
    fetch.toDecode.fired <= _fetch_toDecode_fired_T_4 @[core.scala 54:7]
    node _decode_fromFetch_fired_T = and(decode.fromFetch.ready, fetch.toDecode.ready) @[core.scala 54:33]
    node _decode_fromFetch_fired_T_1 = eq(decode.fromFetch.expected.valid, UInt<1>("h0")) @[core.scala 55:7]
    node _decode_fromFetch_fired_T_2 = eq(decode.fromFetch.expected.pc, fetch.toDecode.pc) @[core.scala 55:73]
    node _decode_fromFetch_fired_T_3 = or(_decode_fromFetch_fired_T_1, _decode_fromFetch_fired_T_2) @[core.scala 55:40]
    node _decode_fromFetch_fired_T_4 = and(_decode_fromFetch_fired_T, _decode_fromFetch_fired_T_3) @[core.scala 54:57]
    decode.fromFetch.fired <= _decode_fromFetch_fired_T_4 @[core.scala 54:7]
    fetch.toDecode.expected.coherency <= decode.fromFetch.expected.coherency @[core.scala 58:27]
    fetch.toDecode.expected.pc <= decode.fromFetch.expected.pc @[core.scala 58:27]
    fetch.toDecode.expected.valid <= decode.fromFetch.expected.valid @[core.scala 58:27]
    decode.fromFetch.instruction <= fetch.toDecode.instruction @[core.scala 59:32]
    decode.fromFetch.pc <= fetch.toDecode.pc @[core.scala 60:23]
    inst dataQueue of storeDataIssue @[core.scala 62:25]
    dataQueue.clock <= clock
    dataQueue.reset <= reset
    inst rob of rob @[core.scala 63:19]
    rob.clock <= clock
    rob.reset <= reset
    inst scheduler of scheduler @[core.scala 64:25]
    scheduler.clock <= clock
    scheduler.reset <= reset
    inst memAccess of core_Anon_1 @[core.scala 65:25]
    memAccess.clock <= clock
    memAccess.reset <= reset
    wire branchOps : { valid : UInt<1>, branchMask : UInt<5>, passed : UInt<1>} @[core.scala 78:23]
    wire wakeUps : { valid : UInt<1>, prfAddr : UInt<6>}[3] @[core.scala 84:21]
    node _instructionDecodedReady_T = bits(decode.toExec.instruction, 6, 2) @[core.scala 90:109]
    node _instructionDecodedReady_T_1 = eq(UInt<2>("h3"), _instructionDecodedReady_T) @[core.scala 90:80]
    node _instructionDecodedReady_T_2 = bits(decode.toExec.instruction, 6, 2) @[core.scala 90:109]
    node _instructionDecodedReady_T_3 = eq(UInt<3>("h5"), _instructionDecodedReady_T_2) @[core.scala 90:80]
    node _instructionDecodedReady_T_4 = bits(decode.toExec.instruction, 6, 2) @[core.scala 90:109]
    node _instructionDecodedReady_T_5 = eq(UInt<4>("hd"), _instructionDecodedReady_T_4) @[core.scala 90:80]
    node _instructionDecodedReady_T_6 = or(_instructionDecodedReady_T_1, _instructionDecodedReady_T_3) @[core.scala 90:125]
    node instructionDecodedReady = or(_instructionDecodedReady_T_6, _instructionDecodedReady_T_5) @[core.scala 90:125]
    node _decode_toExec_fired_T = and(decode.toExec.ready, rob.allocate.ready) @[core.scala 92:31]
    node _decode_toExec_fired_T_1 = and(_decode_toExec_fired_T, scheduler.allocate.ready) @[core.scala 92:53]
    node _decode_toExec_fired_T_2 = bits(decode.toExec.instruction, 6, 4) @[core.scala 92:111]
    node _decode_toExec_fired_T_3 = neq(_decode_toExec_fired_T_2, UInt<2>("h2")) @[core.scala 92:118]
    node _decode_toExec_fired_T_4 = or(_decode_toExec_fired_T_3, dataQueue.fromDecode.ready) @[core.scala 92:132]
    node _decode_toExec_fired_T_5 = and(_decode_toExec_fired_T_1, _decode_toExec_fired_T_4) @[core.scala 92:81]
    decode.toExec.fired <= _decode_toExec_fired_T_5 @[core.scala 92:7]
    node _rob_allocate_fired_T = and(decode.toExec.ready, rob.allocate.ready) @[core.scala 92:31]
    node _rob_allocate_fired_T_1 = and(_rob_allocate_fired_T, scheduler.allocate.ready) @[core.scala 92:53]
    node _rob_allocate_fired_T_2 = bits(decode.toExec.instruction, 6, 4) @[core.scala 92:111]
    node _rob_allocate_fired_T_3 = neq(_rob_allocate_fired_T_2, UInt<2>("h2")) @[core.scala 92:118]
    node _rob_allocate_fired_T_4 = or(_rob_allocate_fired_T_3, dataQueue.fromDecode.ready) @[core.scala 92:132]
    node _rob_allocate_fired_T_5 = and(_rob_allocate_fired_T_1, _rob_allocate_fired_T_4) @[core.scala 92:81]
    rob.allocate.fired <= _rob_allocate_fired_T_5 @[core.scala 92:7]
    node _scheduler_allocate_fired_T = and(decode.toExec.ready, rob.allocate.ready) @[core.scala 92:31]
    node _scheduler_allocate_fired_T_1 = and(_scheduler_allocate_fired_T, scheduler.allocate.ready) @[core.scala 92:53]
    node _scheduler_allocate_fired_T_2 = bits(decode.toExec.instruction, 6, 4) @[core.scala 92:111]
    node _scheduler_allocate_fired_T_3 = neq(_scheduler_allocate_fired_T_2, UInt<2>("h2")) @[core.scala 92:118]
    node _scheduler_allocate_fired_T_4 = or(_scheduler_allocate_fired_T_3, dataQueue.fromDecode.ready) @[core.scala 92:132]
    node _scheduler_allocate_fired_T_5 = and(_scheduler_allocate_fired_T_1, _scheduler_allocate_fired_T_4) @[core.scala 92:81]
    scheduler.allocate.fired <= _scheduler_allocate_fired_T_5 @[core.scala 92:7]
    decode.toExec.robAddr <= rob.allocate.robAddr @[core.scala 94:25]
    rob.allocate.pc <= decode.toExec.pc @[core.scala 95:19]
    rob.allocate.instruction <= decode.toExec.instruction @[core.scala 96:28]
    rob.allocate.prfDest <= decode.toExec.PRFDest @[core.scala 97:24]
    rob.allocate.isReady <= instructionDecodedReady @[core.scala 98:24]
    scheduler.allocate.instruction <= decode.toExec.instruction @[core.scala 99:34]
    scheduler.allocate.branchMask <= decode.toExec.branchMask @[core.scala 100:33]
    scheduler.allocate.rs1.ready <= decode.toExec.rs1Ready @[core.scala 101:32]
    scheduler.allocate.rs1.prfAddr <= decode.toExec.rs1Addr @[core.scala 102:34]
    node _scheduler_allocate_rs2_ready_T = bits(decode.toExec.instruction, 6, 0) @[core.scala 103:65]
    node _scheduler_allocate_rs2_ready_T_1 = and(_scheduler_allocate_rs2_ready_T, UInt<7>("h77")) @[core.scala 103:72]
    node _scheduler_allocate_rs2_ready_T_2 = eq(UInt<5>("h13"), _scheduler_allocate_rs2_ready_T_1) @[core.scala 103:72]
    node _scheduler_allocate_rs2_ready_T_3 = mux(_scheduler_allocate_rs2_ready_T_2, UInt<1>("h1"), decode.toExec.rs2Ready) @[core.scala 103:38]
    scheduler.allocate.rs2.ready <= _scheduler_allocate_rs2_ready_T_3 @[core.scala 103:32]
    scheduler.allocate.rs2.prfAddr <= decode.toExec.rs2Addr @[core.scala 104:34]
    scheduler.allocate.prfDest <= decode.toExec.PRFDest @[core.scala 105:30]
    scheduler.allocate.robAddr <= rob.allocate.robAddr @[core.scala 106:30]
    dataQueue.fromDecode.branchMask <= decode.toExec.branchMask @[core.scala 107:35]
    dataQueue.fromDecode.instruction <= decode.toExec.instruction @[core.scala 108:36]
    dataQueue.fromDecode.rs2Addr <= decode.toExec.rs2Addr @[core.scala 109:32]
    dataQueue.fromDecode.rs2Ready <= decode.toExec.rs2Ready @[core.scala 110:33]
    node _dataQueue_fromDecode_valid_T = bits(decode.toExec.instruction, 6, 4) @[core.scala 111:87]
    node _dataQueue_fromDecode_valid_T_1 = eq(_dataQueue_fromDecode_valid_T, UInt<2>("h2")) @[core.scala 111:94]
    node _dataQueue_fromDecode_valid_T_2 = and(scheduler.allocate.fired, _dataQueue_fromDecode_valid_T_1) @[core.scala 111:58]
    dataQueue.fromDecode.valid <= _dataQueue_fromDecode_valid_T_2 @[core.scala 111:30]
    when instructionDecodedReady : @[core.scala 112:33]
      scheduler.allocate.fired <= UInt<1>("h0") @[core.scala 112:60]
    when branchOps.valid : @[core.scala 113:25]
      node _scheduler_allocate_branchMask_T = xor(decode.toExec.branchMask, branchOps.branchMask) @[core.scala 114:62]
      scheduler.allocate.branchMask <= _scheduler_allocate_branchMask_T @[core.scala 114:34]
      node _dataQueue_fromDecode_branchMask_T = xor(decode.toExec.branchMask, branchOps.branchMask) @[core.scala 115:64]
      dataQueue.fromDecode.branchMask <= _dataQueue_fromDecode_branchMask_T @[core.scala 115:36]
      node _T = eq(branchOps.passed, UInt<1>("h0")) @[core.scala 116:9]
      when _T : @[core.scala 116:28]
        scheduler.allocate.fired <= UInt<1>("h0") @[core.scala 117:30]
        rob.allocate.fired <= UInt<1>("h0") @[core.scala 118:24]
        dataQueue.fromDecode.valid <= UInt<1>("h0") @[core.scala 119:32]
    when wakeUps[0].valid : @[core.scala 124:24]
      node _T_1 = eq(decode.toExec.rs1Addr, wakeUps[0].prfAddr) @[core.scala 125:35]
      when _T_1 : @[core.scala 125:55]
        scheduler.allocate.rs1.ready <= UInt<1>("h1") @[core.scala 125:86]
      node _T_2 = eq(decode.toExec.rs2Addr, wakeUps[0].prfAddr) @[core.scala 126:35]
      when _T_2 : @[core.scala 126:55]
        scheduler.allocate.rs2.ready <= UInt<1>("h1") @[core.scala 126:86]
    when wakeUps[1].valid : @[core.scala 124:24]
      node _T_3 = eq(decode.toExec.rs1Addr, wakeUps[1].prfAddr) @[core.scala 125:35]
      when _T_3 : @[core.scala 125:55]
        scheduler.allocate.rs1.ready <= UInt<1>("h1") @[core.scala 125:86]
      node _T_4 = eq(decode.toExec.rs2Addr, wakeUps[1].prfAddr) @[core.scala 126:35]
      when _T_4 : @[core.scala 126:55]
        scheduler.allocate.rs2.ready <= UInt<1>("h1") @[core.scala 126:86]
    when wakeUps[2].valid : @[core.scala 124:24]
      node _T_5 = eq(decode.toExec.rs1Addr, wakeUps[2].prfAddr) @[core.scala 125:35]
      when _T_5 : @[core.scala 125:55]
        scheduler.allocate.rs1.ready <= UInt<1>("h1") @[core.scala 125:86]
      node _T_6 = eq(decode.toExec.rs2Addr, wakeUps[2].prfAddr) @[core.scala 126:35]
      when _T_6 : @[core.scala 126:55]
        scheduler.allocate.rs2.ready <= UInt<1>("h1") @[core.scala 126:86]
    reg mExtensionReady : UInt<1>, clock with :
      reset => (reset, UInt<1>("h1")) @[core.scala 130:32]
    inst prf of PRF @[core.scala 132:19]
    prf.clock <= clock
    prf.reset <= reset
    node _scheduler_release_fired_T = bits(scheduler.release.instruction, 25, 25) @[core.scala 136:41]
    node _scheduler_release_fired_T_1 = bits(scheduler.release.instruction, 6, 4) @[core.scala 136:76]
    node _scheduler_release_fired_T_2 = cat(_scheduler_release_fired_T, _scheduler_release_fired_T_1) @[Cat.scala 33:92]
    node _scheduler_release_fired_T_3 = eq(_scheduler_release_fired_T_2, UInt<4>("hb")) @[core.scala 136:84]
    node _scheduler_release_fired_T_4 = eq(_scheduler_release_fired_T_3, UInt<1>("h0")) @[core.scala 136:6]
    node _scheduler_release_fired_T_5 = or(_scheduler_release_fired_T_4, mExtensionReady) @[core.scala 136:99]
    node _scheduler_release_fired_T_6 = and(scheduler.release.ready, _scheduler_release_fired_T_5) @[core.scala 134:29]
    scheduler.release.fired <= _scheduler_release_fired_T_6 @[core.scala 133:27]
    prf.execRead.instruction <= scheduler.release.instruction @[core.scala 138:28]
    prf.execRead.branchmask <= scheduler.release.branchMask @[core.scala 139:27]
    prf.execRead.rs1Addr <= scheduler.release.rs1prfAddr @[core.scala 140:24]
    prf.execRead.rs2Addr <= scheduler.release.rs2prfAddr @[core.scala 141:24]
    prf.execRead.robAddr <= scheduler.release.robAddr @[core.scala 142:24]
    prf.execRead.valid <= scheduler.release.fired @[core.scala 143:22]
    prf.execRead.prfDest <= scheduler.release.prfDest @[core.scala 144:24]
    node _T_7 = bits(scheduler.release.instruction, 1, 0) @[core.scala 145:37]
    node _T_8 = eq(_T_7, UInt<1>("h0")) @[core.scala 145:44]
    when _T_8 : @[core.scala 145:57]
      prf.execRead.valid <= UInt<1>("h0") @[core.scala 145:78]
    wire _addressGenerationInput_WIRE : { valid : UInt<1>, rs1 : UInt<64>, instruction : UInt<32>, prfDest : UInt<6>, robAddr : UInt<4>, branchMask : UInt<5>}
    _addressGenerationInput_WIRE.branchMask is invalid
    _addressGenerationInput_WIRE.robAddr is invalid
    _addressGenerationInput_WIRE.prfDest is invalid
    _addressGenerationInput_WIRE.instruction is invalid
    _addressGenerationInput_WIRE.rs1 is invalid
    _addressGenerationInput_WIRE.valid <= UInt<1>("h0")
    reg addressGenerationInput : { valid : UInt<1>, rs1 : UInt<64>, instruction : UInt<32>, prfDest : UInt<6>, robAddr : UInt<4>, branchMask : UInt<5>}, clock with :
      reset => (reset, _addressGenerationInput_WIRE) @[core.scala 153:39]
    node _addressGenerationInput_valid_T = bits(prf.toExec.instruction, 6, 6) @[core.scala 162:97]
    node _addressGenerationInput_valid_T_1 = bits(_addressGenerationInput_valid_T, 0, 0) @[core.scala 162:101]
    node _addressGenerationInput_valid_T_2 = bits(prf.toExec.instruction, 4, 4) @[core.scala 162:97]
    node _addressGenerationInput_valid_T_3 = bits(_addressGenerationInput_valid_T_2, 0, 0) @[core.scala 162:101]
    node _addressGenerationInput_valid_T_4 = or(_addressGenerationInput_valid_T_1, _addressGenerationInput_valid_T_3) @[core.scala 162:118]
    node _addressGenerationInput_valid_T_5 = eq(_addressGenerationInput_valid_T_4, UInt<1>("h0")) @[core.scala 162:55]
    node _addressGenerationInput_valid_T_6 = and(prf.toExec.valid, _addressGenerationInput_valid_T_5) @[core.scala 162:52]
    addressGenerationInput.valid <= _addressGenerationInput_valid_T_6 @[core.scala 162:32]
    addressGenerationInput.instruction <= prf.toExec.instruction @[core.scala 164:38]
    addressGenerationInput.prfDest <= prf.toExec.prfDest @[core.scala 165:34]
    addressGenerationInput.robAddr <= prf.toExec.robAddr @[core.scala 166:34]
    addressGenerationInput.branchMask <= prf.toExec.branchmask @[core.scala 167:37]
    when branchOps.valid : @[core.scala 169:25]
      node _T_9 = and(prf.toExec.branchmask, branchOps.branchMask) @[core.scala 170:33]
      node _T_10 = orr(_T_9) @[core.scala 170:57]
      when _T_10 : @[core.scala 170:62]
        node _addressGenerationInput_branchMask_T = xor(prf.toExec.branchmask, branchOps.branchMask) @[core.scala 171:66]
        addressGenerationInput.branchMask <= _addressGenerationInput_branchMask_T @[core.scala 171:41]
      node _T_11 = eq(branchOps.passed, UInt<1>("h0")) @[core.scala 173:10]
      node _T_12 = and(prf.toExec.branchmask, branchOps.branchMask) @[core.scala 173:54]
      node _T_13 = orr(_T_12) @[core.scala 173:78]
      node _T_14 = and(_T_11, _T_13) @[core.scala 173:28]
      when _T_14 : @[core.scala 173:83]
        addressGenerationInput.valid <= UInt<1>("h0") @[core.scala 173:114]
    wire _memoryRequest_WIRE : { valid : UInt<1>, address : UInt<32>, instruction : UInt<32>, branchMask : UInt<5>, robAddr : UInt<4>, prfDest : UInt<6>}
    _memoryRequest_WIRE.prfDest is invalid
    _memoryRequest_WIRE.robAddr is invalid
    _memoryRequest_WIRE.branchMask is invalid
    _memoryRequest_WIRE.instruction is invalid
    _memoryRequest_WIRE.address is invalid
    _memoryRequest_WIRE.valid <= UInt<1>("h0")
    reg memoryRequest : { valid : UInt<1>, address : UInt<32>, instruction : UInt<32>, branchMask : UInt<5>, robAddr : UInt<4>, prfDest : UInt<6>}, clock with :
      reset => (reset, _memoryRequest_WIRE) @[core.scala 176:30]
    node _memoryRequest_address_T = bits(addressGenerationInput.instruction, 31, 31) @[core.scala 178:52]
    node _memoryRequest_address_T_1 = bits(_memoryRequest_address_T, 0, 0) @[Bitwise.scala 77:15]
    node _memoryRequest_address_T_2 = mux(_memoryRequest_address_T_1, UInt<52>("hfffffffffffff"), UInt<52>("h0")) @[Bitwise.scala 77:12]
    node _memoryRequest_address_T_3 = bits(addressGenerationInput.instruction, 31, 20) @[core.scala 178:93]
    node _memoryRequest_address_T_4 = cat(_memoryRequest_address_T_2, _memoryRequest_address_T_3) @[Cat.scala 33:92]
    node _memoryRequest_address_T_5 = bits(addressGenerationInput.instruction, 31, 31) @[core.scala 179:52]
    node _memoryRequest_address_T_6 = bits(_memoryRequest_address_T_5, 0, 0) @[Bitwise.scala 77:15]
    node _memoryRequest_address_T_7 = mux(_memoryRequest_address_T_6, UInt<52>("hfffffffffffff"), UInt<52>("h0")) @[Bitwise.scala 77:12]
    node _memoryRequest_address_T_8 = bits(addressGenerationInput.instruction, 31, 25) @[core.scala 179:93]
    node _memoryRequest_address_T_9 = bits(addressGenerationInput.instruction, 11, 7) @[core.scala 179:137]
    node memoryRequest_address_hi = cat(_memoryRequest_address_T_7, _memoryRequest_address_T_8) @[Cat.scala 33:92]
    node _memoryRequest_address_T_10 = cat(memoryRequest_address_hi, _memoryRequest_address_T_9) @[Cat.scala 33:92]
    wire _memoryRequest_address_WIRE : UInt<64>[4] @[core.scala 177:64]
    _memoryRequest_address_WIRE[0] <= _memoryRequest_address_T_4 @[core.scala 177:64]
    _memoryRequest_address_WIRE[1] <= _memoryRequest_address_T_10 @[core.scala 177:64]
    _memoryRequest_address_WIRE[2] <= UInt<1>("h0") @[core.scala 177:64]
    _memoryRequest_address_WIRE[3] <= UInt<1>("h0") @[core.scala 177:64]
    node _memoryRequest_address_T_11 = bits(addressGenerationInput.instruction, 3, 3) @[core.scala 181:43]
    node _memoryRequest_address_T_12 = bits(addressGenerationInput.instruction, 5, 5) @[core.scala 181:82]
    node _memoryRequest_address_T_13 = cat(_memoryRequest_address_T_11, _memoryRequest_address_T_12) @[Cat.scala 33:92]
    node _memoryRequest_address_T_14 = add(addressGenerationInput.rs1, _memoryRequest_address_WIRE[_memoryRequest_address_T_13]) @[core.scala 177:55]
    node _memoryRequest_address_T_15 = tail(_memoryRequest_address_T_14, 1) @[core.scala 177:55]
    memoryRequest.address <= _memoryRequest_address_T_15 @[core.scala 177:25]
    memoryRequest.branchMask <= addressGenerationInput.branchMask @[core.scala 182:28]
    memoryRequest.instruction <= addressGenerationInput.instruction @[core.scala 183:29]
    memoryRequest.prfDest <= addressGenerationInput.prfDest @[core.scala 184:25]
    memoryRequest.robAddr <= addressGenerationInput.robAddr @[core.scala 185:25]
    memoryRequest.valid <= addressGenerationInput.valid @[core.scala 186:23]
    when branchOps.valid : @[core.scala 188:25]
      node _T_15 = and(addressGenerationInput.branchMask, branchOps.branchMask) @[core.scala 189:45]
      node _T_16 = orr(_T_15) @[core.scala 189:69]
      when _T_16 : @[core.scala 189:74]
        node _memoryRequest_branchMask_T = xor(addressGenerationInput.branchMask, branchOps.branchMask) @[core.scala 190:69]
        memoryRequest.branchMask <= _memoryRequest_branchMask_T @[core.scala 190:32]
      node _T_17 = eq(branchOps.passed, UInt<1>("h0")) @[core.scala 192:10]
      node _T_18 = and(addressGenerationInput.branchMask, branchOps.branchMask) @[core.scala 192:66]
      node _T_19 = orr(_T_18) @[core.scala 192:90]
      node _T_20 = and(_T_17, _T_19) @[core.scala 192:28]
      when _T_20 : @[core.scala 192:95]
        memoryRequest.valid <= UInt<1>("h0") @[core.scala 192:117]
    memAccess.request.prfDest <= memoryRequest.prfDest @[core.scala 195:21]
    memAccess.request.robAddr <= memoryRequest.robAddr @[core.scala 195:21]
    memAccess.request.branchMask <= memoryRequest.branchMask @[core.scala 195:21]
    memAccess.request.instruction <= memoryRequest.instruction @[core.scala 195:21]
    memAccess.request.address <= memoryRequest.address @[core.scala 195:21]
    memAccess.request.valid <= memoryRequest.valid @[core.scala 195:21]
    memAccess.branchOps.passed <= branchOps.passed @[core.scala 196:23]
    memAccess.branchOps.branchMask <= branchOps.branchMask @[core.scala 196:23]
    memAccess.branchOps.valid <= branchOps.valid @[core.scala 196:23]
    wire _singleCycleArithmeticRequest_WIRE : { valid : UInt<1>, rs1 : UInt<64>, rs2 : UInt<64>, instruction : UInt<32>, prfDest : UInt<6>, robAddr : UInt<4>, branchMask : UInt<5>}
    _singleCycleArithmeticRequest_WIRE.branchMask is invalid
    _singleCycleArithmeticRequest_WIRE.robAddr is invalid
    _singleCycleArithmeticRequest_WIRE.prfDest is invalid
    _singleCycleArithmeticRequest_WIRE.instruction is invalid
    _singleCycleArithmeticRequest_WIRE.rs2 is invalid
    _singleCycleArithmeticRequest_WIRE.rs1 is invalid
    _singleCycleArithmeticRequest_WIRE.valid <= UInt<1>("h0")
    reg singleCycleArithmeticRequest : { valid : UInt<1>, rs1 : UInt<64>, rs2 : UInt<64>, instruction : UInt<32>, prfDest : UInt<6>, robAddr : UInt<4>, branchMask : UInt<5>}, clock with :
      reset => (reset, _singleCycleArithmeticRequest_WIRE) @[core.scala 198:45]
    wire _singleCycleArithmeticResponse_WIRE : { valid : UInt<1>, result : UInt<64>, prfDest : UInt<6>, robAddr : UInt<4>}
    _singleCycleArithmeticResponse_WIRE.robAddr is invalid
    _singleCycleArithmeticResponse_WIRE.prfDest is invalid
    _singleCycleArithmeticResponse_WIRE.result is invalid
    _singleCycleArithmeticResponse_WIRE.valid <= UInt<1>("h0")
    reg singleCycleArithmeticResponse : { valid : UInt<1>, result : UInt<64>, prfDest : UInt<6>, robAddr : UInt<4>}, clock with :
      reset => (reset, _singleCycleArithmeticResponse_WIRE) @[core.scala 208:46]
    wire _extnMRequest_WIRE : { valid : UInt<1>, rs1 : UInt<64>, rs2 : UInt<64>, instruction : UInt<32>, prfDest : UInt<6>, robAddr : UInt<4>, branchMask : UInt<5>}
    _extnMRequest_WIRE.branchMask is invalid
    _extnMRequest_WIRE.robAddr is invalid
    _extnMRequest_WIRE.prfDest is invalid
    _extnMRequest_WIRE.instruction is invalid
    _extnMRequest_WIRE.rs2 is invalid
    _extnMRequest_WIRE.rs1 is invalid
    _extnMRequest_WIRE.valid <= UInt<1>("h0")
    reg extnMRequest : { valid : UInt<1>, rs1 : UInt<64>, rs2 : UInt<64>, instruction : UInt<32>, prfDest : UInt<6>, robAddr : UInt<4>, branchMask : UInt<5>}, clock with :
      reset => (reset, _extnMRequest_WIRE) @[core.scala 215:29]
    wire _extnMServicing_WIRE : { valid : UInt<1>, rs1 : UInt<64>, rs2 : UInt<64>, instruction : UInt<32>, prfDest : UInt<6>, robAddr : UInt<4>, branchMask : UInt<5>}
    _extnMServicing_WIRE.branchMask is invalid
    _extnMServicing_WIRE.robAddr is invalid
    _extnMServicing_WIRE.prfDest is invalid
    _extnMServicing_WIRE.instruction is invalid
    _extnMServicing_WIRE.rs2 is invalid
    _extnMServicing_WIRE.rs1 is invalid
    _extnMServicing_WIRE.valid <= UInt<1>("h0")
    reg extnMServicing : { valid : UInt<1>, rs1 : UInt<64>, rs2 : UInt<64>, instruction : UInt<32>, prfDest : UInt<6>, robAddr : UInt<4>, branchMask : UInt<5>}, clock with :
      reset => (reset, _extnMServicing_WIRE) @[core.scala 217:31]
    wire _extnMPartialServicing_WIRE : { valid : UInt<1>, rs1 : UInt<64>, rs2 : UInt<64>, instruction : UInt<32>, prfDest : UInt<6>, robAddr : UInt<4>, branchMask : UInt<5>}
    _extnMPartialServicing_WIRE.branchMask is invalid
    _extnMPartialServicing_WIRE.robAddr is invalid
    _extnMPartialServicing_WIRE.prfDest is invalid
    _extnMPartialServicing_WIRE.instruction is invalid
    _extnMPartialServicing_WIRE.rs2 is invalid
    _extnMPartialServicing_WIRE.rs1 is invalid
    _extnMPartialServicing_WIRE.valid <= UInt<1>("h0")
    reg extnMPartialServicing : { valid : UInt<1>, rs1 : UInt<64>, rs2 : UInt<64>, instruction : UInt<32>, prfDest : UInt<6>, robAddr : UInt<4>, branchMask : UInt<5>}, clock with :
      reset => (reset, _extnMPartialServicing_WIRE) @[core.scala 218:38]
    reg muls : UInt<96>[6], clock with :
      reset => (UInt<1>("h0"), muls) @[core.scala 219:17]
    extnMPartialServicing <= extnMRequest @[core.scala 220:25]
    extnMServicing <= extnMPartialServicing @[core.scala 221:18]
    node _T_21 = bits(extnMRequest.instruction, 14, 14) @[core.scala 222:32]
    node _T_22 = bits(_T_21, 0, 0) @[core.scala 222:37]
    when _T_22 : @[core.scala 222:45]
      extnMPartialServicing.valid <= UInt<1>("h0") @[core.scala 222:75]
    wire _extnMResponse_WIRE : { valid : UInt<1>, result : UInt<64>, prfDest : UInt<6>, robAddr : UInt<4>}
    _extnMResponse_WIRE.robAddr is invalid
    _extnMResponse_WIRE.prfDest is invalid
    _extnMResponse_WIRE.result is invalid
    _extnMResponse_WIRE.valid <= UInt<1>("h0")
    reg extnMResponse : { valid : UInt<1>, result : UInt<64>, prfDest : UInt<6>, robAddr : UInt<4>}, clock with :
      reset => (reset, _extnMResponse_WIRE) @[core.scala 224:30]
    wire _division_WIRE : { request : { valid : UInt<1>, rs1 : UInt<64>, rs2 : UInt<64>, instruction : UInt<32>, prfDest : UInt<6>, robAddr : UInt<4>, branchMask : UInt<5>}, quotient : UInt<65>, remainder : UInt<65>, divisor : UInt<65>, counter : UInt<7>, resultNegative : UInt<1>}
    _division_WIRE.resultNegative is invalid
    _division_WIRE.counter is invalid
    _division_WIRE.divisor is invalid
    _division_WIRE.remainder is invalid
    _division_WIRE.quotient is invalid
    _division_WIRE.request.branchMask is invalid
    _division_WIRE.request.robAddr is invalid
    _division_WIRE.request.prfDest is invalid
    _division_WIRE.request.instruction is invalid
    _division_WIRE.request.rs2 is invalid
    _division_WIRE.request.rs1 is invalid
    _division_WIRE.request.valid <= UInt<1>("h0")
    reg division : { request : { valid : UInt<1>, rs1 : UInt<64>, rs2 : UInt<64>, instruction : UInt<32>, prfDest : UInt<6>, robAddr : UInt<4>, branchMask : UInt<5>}, quotient : UInt<65>, remainder : UInt<65>, divisor : UInt<65>, counter : UInt<7>, resultNegative : UInt<1>}, clock with :
      reset => (reset, _division_WIRE) @[core.scala 226:25]
    wire _fwdBuffers_WIRE : { valid : UInt<1>, prfDest : UInt<6>, result : UInt<64>, branchMask : UInt<5>}[2] @[core.scala 235:35]
    _fwdBuffers_WIRE[0].branchMask is invalid @[core.scala 235:35]
    _fwdBuffers_WIRE[0].result is invalid @[core.scala 235:35]
    _fwdBuffers_WIRE[0].prfDest is invalid @[core.scala 235:35]
    _fwdBuffers_WIRE[0].valid <= UInt<1>("h0") @[core.scala 235:35]
    _fwdBuffers_WIRE[1].branchMask is invalid @[core.scala 235:35]
    _fwdBuffers_WIRE[1].result is invalid @[core.scala 235:35]
    _fwdBuffers_WIRE[1].prfDest is invalid @[core.scala 235:35]
    _fwdBuffers_WIRE[1].valid <= UInt<1>("h0") @[core.scala 235:35]
    reg fwdBuffers : { valid : UInt<1>, prfDest : UInt<6>, result : UInt<64>, branchMask : UInt<5>}[2], clock with :
      reset => (reset, _fwdBuffers_WIRE) @[core.scala 235:27]
    wire fwdFrom_0 : { valid : UInt<1>, prfDest : UInt<6>, result : UInt<64>, branchMask : UInt<5>} @[core.scala 241:33]
    wire fwdFrom_1 : { valid : UInt<1>, prfDest : UInt<6>, result : UInt<64>, branchMask : UInt<5>} @[core.scala 241:33]
    wire fwdFrom_2 : { valid : UInt<1>, prfDest : UInt<6>, result : UInt<64>, branchMask : UInt<5>} @[core.scala 241:33]
    fwdFrom_1 <= fwdBuffers[0] @[core.scala 242:14]
    fwdFrom_2 <= fwdBuffers[1] @[core.scala 243:14]
    node _fwdFrom_0_valid_T = bits(singleCycleArithmeticRequest.instruction, 11, 7) @[core.scala 244:101]
    node _fwdFrom_0_valid_T_1 = orr(_fwdFrom_0_valid_T) @[core.scala 244:109]
    node _fwdFrom_0_valid_T_2 = and(singleCycleArithmeticRequest.valid, _fwdFrom_0_valid_T_1) @[core.scala 244:58]
    fwdFrom_0.valid <= _fwdFrom_0_valid_T_2 @[core.scala 244:20]
    fwdFrom_0.prfDest <= singleCycleArithmeticRequest.prfDest @[core.scala 245:22]
    fwdFrom_0.branchMask <= singleCycleArithmeticRequest.branchMask @[core.scala 246:25]
    node _addressGenerationInput_rs1_T = bits(prf.toExec.instruction, 19, 15) @[core.scala 248:59]
    node _addressGenerationInput_rs1_T_1 = orr(_addressGenerationInput_rs1_T) @[core.scala 248:68]
    node _addressGenerationInput_rs1_T_2 = eq(fwdFrom_0.prfDest, prf.toExec.rs1Addr) @[core.scala 249:50]
    node _addressGenerationInput_rs1_T_3 = and(fwdFrom_0.valid, _addressGenerationInput_rs1_T_2) @[core.scala 249:34]
    node _addressGenerationInput_rs1_T_4 = eq(fwdFrom_1.prfDest, prf.toExec.rs1Addr) @[core.scala 249:50]
    node _addressGenerationInput_rs1_T_5 = and(fwdFrom_1.valid, _addressGenerationInput_rs1_T_4) @[core.scala 249:34]
    node _addressGenerationInput_rs1_T_6 = eq(fwdFrom_2.prfDest, prf.toExec.rs1Addr) @[core.scala 249:50]
    node _addressGenerationInput_rs1_T_7 = and(fwdFrom_2.valid, _addressGenerationInput_rs1_T_6) @[core.scala 249:34]
    node _addressGenerationInput_rs1_T_8 = mux(_addressGenerationInput_rs1_T_7, fwdFrom_2.result, prf.toExec.rs1Data) @[Mux.scala 101:16]
    node _addressGenerationInput_rs1_T_9 = mux(_addressGenerationInput_rs1_T_5, fwdFrom_1.result, _addressGenerationInput_rs1_T_8) @[Mux.scala 101:16]
    node _addressGenerationInput_rs1_T_10 = mux(_addressGenerationInput_rs1_T_3, fwdFrom_0.result, _addressGenerationInput_rs1_T_9) @[Mux.scala 101:16]
    node _addressGenerationInput_rs1_T_11 = mux(_addressGenerationInput_rs1_T_1, _addressGenerationInput_rs1_T_10, UInt<1>("h0")) @[core.scala 248:36]
    addressGenerationInput.rs1 <= _addressGenerationInput_rs1_T_11 @[core.scala 248:30]
    node _arithmeticResult_arithmetic32_T = bits(singleCycleArithmeticRequest.instruction, 30, 30) @[core.scala 261:36]
    node _arithmeticResult_arithmetic32_T_1 = bits(singleCycleArithmeticRequest.instruction, 5, 5) @[core.scala 261:53]
    node _arithmeticResult_arithmetic32_T_2 = cat(_arithmeticResult_arithmetic32_T, _arithmeticResult_arithmetic32_T_1) @[Cat.scala 33:92]
    node _arithmeticResult_arithmetic32_T_3 = eq(_arithmeticResult_arithmetic32_T_2, UInt<2>("h3")) @[core.scala 261:58]
    node _arithmeticResult_arithmetic32_T_4 = sub(singleCycleArithmeticRequest.rs1, singleCycleArithmeticRequest.rs2) @[core.scala 261:87]
    node _arithmeticResult_arithmetic32_T_5 = tail(_arithmeticResult_arithmetic32_T_4, 1) @[core.scala 261:87]
    node _arithmeticResult_arithmetic32_T_6 = bits(_arithmeticResult_arithmetic32_T_5, 31, 31) @[core.scala 254:23]
    node _arithmeticResult_arithmetic32_T_7 = bits(_arithmeticResult_arithmetic32_T_6, 0, 0) @[Bitwise.scala 77:15]
    node _arithmeticResult_arithmetic32_T_8 = mux(_arithmeticResult_arithmetic32_T_7, UInt<32>("hffffffff"), UInt<32>("h0")) @[Bitwise.scala 77:12]
    node _arithmeticResult_arithmetic32_T_9 = bits(_arithmeticResult_arithmetic32_T_5, 31, 0) @[core.scala 254:33]
    node _arithmeticResult_arithmetic32_T_10 = cat(_arithmeticResult_arithmetic32_T_8, _arithmeticResult_arithmetic32_T_9) @[Cat.scala 33:92]
    node _arithmeticResult_arithmetic32_T_11 = add(singleCycleArithmeticRequest.rs1, singleCycleArithmeticRequest.rs2) @[core.scala 261:111]
    node _arithmeticResult_arithmetic32_T_12 = tail(_arithmeticResult_arithmetic32_T_11, 1) @[core.scala 261:111]
    node _arithmeticResult_arithmetic32_T_13 = bits(_arithmeticResult_arithmetic32_T_12, 31, 31) @[core.scala 254:23]
    node _arithmeticResult_arithmetic32_T_14 = bits(_arithmeticResult_arithmetic32_T_13, 0, 0) @[Bitwise.scala 77:15]
    node _arithmeticResult_arithmetic32_T_15 = mux(_arithmeticResult_arithmetic32_T_14, UInt<32>("hffffffff"), UInt<32>("h0")) @[Bitwise.scala 77:12]
    node _arithmeticResult_arithmetic32_T_16 = bits(_arithmeticResult_arithmetic32_T_12, 31, 0) @[core.scala 254:33]
    node _arithmeticResult_arithmetic32_T_17 = cat(_arithmeticResult_arithmetic32_T_15, _arithmeticResult_arithmetic32_T_16) @[Cat.scala 33:92]
    node _arithmeticResult_arithmetic32_T_18 = mux(_arithmeticResult_arithmetic32_T_3, _arithmeticResult_arithmetic32_T_10, _arithmeticResult_arithmetic32_T_17) @[core.scala 261:20]
    node _arithmeticResult_arithmetic32_T_19 = bits(singleCycleArithmeticRequest.rs2, 4, 0) @[core.scala 262:40]
    node _arithmeticResult_arithmetic32_T_20 = dshl(singleCycleArithmeticRequest.rs1, _arithmeticResult_arithmetic32_T_19) @[core.scala 262:34]
    node _arithmeticResult_arithmetic32_T_21 = bits(_arithmeticResult_arithmetic32_T_20, 31, 31) @[core.scala 254:23]
    node _arithmeticResult_arithmetic32_T_22 = bits(_arithmeticResult_arithmetic32_T_21, 0, 0) @[Bitwise.scala 77:15]
    node _arithmeticResult_arithmetic32_T_23 = mux(_arithmeticResult_arithmetic32_T_22, UInt<32>("hffffffff"), UInt<32>("h0")) @[Bitwise.scala 77:12]
    node _arithmeticResult_arithmetic32_T_24 = bits(_arithmeticResult_arithmetic32_T_20, 31, 0) @[core.scala 254:33]
    node _arithmeticResult_arithmetic32_T_25 = cat(_arithmeticResult_arithmetic32_T_23, _arithmeticResult_arithmetic32_T_24) @[Cat.scala 33:92]
    node _arithmeticResult_arithmetic32_T_26 = bits(singleCycleArithmeticRequest.rs2, 4, 0) @[core.scala 263:40]
    node _arithmeticResult_arithmetic32_T_27 = dshl(singleCycleArithmeticRequest.rs1, _arithmeticResult_arithmetic32_T_26) @[core.scala 263:34]
    node _arithmeticResult_arithmetic32_T_28 = bits(_arithmeticResult_arithmetic32_T_27, 31, 31) @[core.scala 254:23]
    node _arithmeticResult_arithmetic32_T_29 = bits(_arithmeticResult_arithmetic32_T_28, 0, 0) @[Bitwise.scala 77:15]
    node _arithmeticResult_arithmetic32_T_30 = mux(_arithmeticResult_arithmetic32_T_29, UInt<32>("hffffffff"), UInt<32>("h0")) @[Bitwise.scala 77:12]
    node _arithmeticResult_arithmetic32_T_31 = bits(_arithmeticResult_arithmetic32_T_27, 31, 0) @[core.scala 254:33]
    node _arithmeticResult_arithmetic32_T_32 = cat(_arithmeticResult_arithmetic32_T_30, _arithmeticResult_arithmetic32_T_31) @[Cat.scala 33:92]
    node _arithmeticResult_arithmetic32_T_33 = bits(singleCycleArithmeticRequest.instruction, 30, 30) @[core.scala 264:32]
    node _arithmeticResult_arithmetic32_T_34 = bits(_arithmeticResult_arithmetic32_T_33, 0, 0) @[core.scala 264:37]
    node _arithmeticResult_arithmetic32_T_35 = bits(singleCycleArithmeticRequest.rs1, 31, 0) @[core.scala 264:61]
    node _arithmeticResult_arithmetic32_T_36 = asSInt(_arithmeticResult_arithmetic32_T_35) @[core.scala 264:69]
    node _arithmeticResult_arithmetic32_T_37 = bits(singleCycleArithmeticRequest.rs2, 4, 0) @[core.scala 264:82]
    node _arithmeticResult_arithmetic32_T_38 = dshr(_arithmeticResult_arithmetic32_T_36, _arithmeticResult_arithmetic32_T_37) @[core.scala 264:76]
    node _arithmeticResult_arithmetic32_T_39 = asUInt(_arithmeticResult_arithmetic32_T_38) @[core.scala 264:90]
    node _arithmeticResult_arithmetic32_T_40 = bits(_arithmeticResult_arithmetic32_T_39, 31, 31) @[core.scala 254:23]
    node _arithmeticResult_arithmetic32_T_41 = bits(_arithmeticResult_arithmetic32_T_40, 0, 0) @[Bitwise.scala 77:15]
    node _arithmeticResult_arithmetic32_T_42 = mux(_arithmeticResult_arithmetic32_T_41, UInt<32>("hffffffff"), UInt<32>("h0")) @[Bitwise.scala 77:12]
    node _arithmeticResult_arithmetic32_T_43 = bits(_arithmeticResult_arithmetic32_T_39, 31, 0) @[core.scala 254:33]
    node _arithmeticResult_arithmetic32_T_44 = cat(_arithmeticResult_arithmetic32_T_42, _arithmeticResult_arithmetic32_T_43) @[Cat.scala 33:92]
    node _arithmeticResult_arithmetic32_T_45 = bits(singleCycleArithmeticRequest.rs1, 31, 0) @[core.scala 264:114]
    node _arithmeticResult_arithmetic32_T_46 = bits(singleCycleArithmeticRequest.rs2, 4, 0) @[core.scala 264:128]
    node _arithmeticResult_arithmetic32_T_47 = dshr(_arithmeticResult_arithmetic32_T_45, _arithmeticResult_arithmetic32_T_46) @[core.scala 264:122]
    node _arithmeticResult_arithmetic32_T_48 = bits(_arithmeticResult_arithmetic32_T_47, 31, 31) @[core.scala 254:23]
    node _arithmeticResult_arithmetic32_T_49 = bits(_arithmeticResult_arithmetic32_T_48, 0, 0) @[Bitwise.scala 77:15]
    node _arithmeticResult_arithmetic32_T_50 = mux(_arithmeticResult_arithmetic32_T_49, UInt<32>("hffffffff"), UInt<32>("h0")) @[Bitwise.scala 77:12]
    node _arithmeticResult_arithmetic32_T_51 = bits(_arithmeticResult_arithmetic32_T_47, 31, 0) @[core.scala 254:33]
    node _arithmeticResult_arithmetic32_T_52 = cat(_arithmeticResult_arithmetic32_T_50, _arithmeticResult_arithmetic32_T_51) @[Cat.scala 33:92]
    node _arithmeticResult_arithmetic32_T_53 = mux(_arithmeticResult_arithmetic32_T_34, _arithmeticResult_arithmetic32_T_44, _arithmeticResult_arithmetic32_T_52) @[core.scala 264:20]
    wire _arithmeticResult_arithmetic32_WIRE : UInt<64>[4] @[core.scala 260:43]
    _arithmeticResult_arithmetic32_WIRE[0] <= _arithmeticResult_arithmetic32_T_18 @[core.scala 260:43]
    _arithmeticResult_arithmetic32_WIRE[1] <= _arithmeticResult_arithmetic32_T_25 @[core.scala 260:43]
    _arithmeticResult_arithmetic32_WIRE[2] <= _arithmeticResult_arithmetic32_T_32 @[core.scala 260:43]
    _arithmeticResult_arithmetic32_WIRE[3] <= _arithmeticResult_arithmetic32_T_53 @[core.scala 260:43]
    node _arithmeticResult_arithmetic32_T_54 = bits(singleCycleArithmeticRequest.instruction, 14, 14) @[core.scala 265:23]
    node _arithmeticResult_arithmetic32_T_55 = bits(singleCycleArithmeticRequest.instruction, 12, 12) @[core.scala 265:40]
    node _arithmeticResult_arithmetic32_T_56 = cat(_arithmeticResult_arithmetic32_T_54, _arithmeticResult_arithmetic32_T_55) @[Cat.scala 33:92]
    node _arithmeticResult_arithmetic64_T = bits(singleCycleArithmeticRequest.instruction, 30, 30) @[core.scala 271:36]
    node _arithmeticResult_arithmetic64_T_1 = bits(singleCycleArithmeticRequest.instruction, 5, 5) @[core.scala 271:53]
    node _arithmeticResult_arithmetic64_T_2 = cat(_arithmeticResult_arithmetic64_T, _arithmeticResult_arithmetic64_T_1) @[Cat.scala 33:92]
    node _arithmeticResult_arithmetic64_T_3 = eq(_arithmeticResult_arithmetic64_T_2, UInt<2>("h3")) @[core.scala 271:58]
    node _arithmeticResult_arithmetic64_T_4 = sub(singleCycleArithmeticRequest.rs1, singleCycleArithmeticRequest.rs2) @[core.scala 271:75]
    node _arithmeticResult_arithmetic64_T_5 = tail(_arithmeticResult_arithmetic64_T_4, 1) @[core.scala 271:75]
    node _arithmeticResult_arithmetic64_T_6 = add(singleCycleArithmeticRequest.rs1, singleCycleArithmeticRequest.rs2) @[core.scala 271:86]
    node _arithmeticResult_arithmetic64_T_7 = tail(_arithmeticResult_arithmetic64_T_6, 1) @[core.scala 271:86]
    node _arithmeticResult_arithmetic64_T_8 = mux(_arithmeticResult_arithmetic64_T_3, _arithmeticResult_arithmetic64_T_5, _arithmeticResult_arithmetic64_T_7) @[core.scala 271:20]
    node _arithmeticResult_arithmetic64_T_9 = bits(singleCycleArithmeticRequest.rs2, 5, 0) @[core.scala 272:28]
    node _arithmeticResult_arithmetic64_T_10 = dshl(singleCycleArithmeticRequest.rs1, _arithmeticResult_arithmetic64_T_9) @[core.scala 272:22]
    node _arithmeticResult_arithmetic64_T_11 = asSInt(singleCycleArithmeticRequest.rs1) @[core.scala 273:22]
    node _arithmeticResult_arithmetic64_T_12 = asSInt(singleCycleArithmeticRequest.rs2) @[core.scala 273:35]
    node _arithmeticResult_arithmetic64_T_13 = lt(_arithmeticResult_arithmetic64_T_11, _arithmeticResult_arithmetic64_T_12) @[core.scala 273:29]
    node _arithmeticResult_arithmetic64_T_14 = lt(singleCycleArithmeticRequest.rs1, singleCycleArithmeticRequest.rs2) @[core.scala 274:22]
    node _arithmeticResult_arithmetic64_T_15 = xor(singleCycleArithmeticRequest.rs1, singleCycleArithmeticRequest.rs2) @[core.scala 275:22]
    node _arithmeticResult_arithmetic64_T_16 = bits(singleCycleArithmeticRequest.instruction, 30, 30) @[core.scala 276:32]
    node _arithmeticResult_arithmetic64_T_17 = bits(_arithmeticResult_arithmetic64_T_16, 0, 0) @[core.scala 276:37]
    node _arithmeticResult_arithmetic64_T_18 = asSInt(singleCycleArithmeticRequest.rs1) @[core.scala 276:50]
    node _arithmeticResult_arithmetic64_T_19 = bits(singleCycleArithmeticRequest.rs2, 5, 0) @[core.scala 276:63]
    node _arithmeticResult_arithmetic64_T_20 = dshr(_arithmeticResult_arithmetic64_T_18, _arithmeticResult_arithmetic64_T_19) @[core.scala 276:57]
    node _arithmeticResult_arithmetic64_T_21 = asUInt(_arithmeticResult_arithmetic64_T_20) @[core.scala 276:71]
    node _arithmeticResult_arithmetic64_T_22 = bits(singleCycleArithmeticRequest.rs2, 5, 0) @[core.scala 276:90]
    node _arithmeticResult_arithmetic64_T_23 = dshr(singleCycleArithmeticRequest.rs1, _arithmeticResult_arithmetic64_T_22) @[core.scala 276:84]
    node _arithmeticResult_arithmetic64_T_24 = mux(_arithmeticResult_arithmetic64_T_17, _arithmeticResult_arithmetic64_T_21, _arithmeticResult_arithmetic64_T_23) @[core.scala 276:20]
    node _arithmeticResult_arithmetic64_T_25 = or(singleCycleArithmeticRequest.rs1, singleCycleArithmeticRequest.rs2) @[core.scala 277:22]
    node _arithmeticResult_arithmetic64_T_26 = and(singleCycleArithmeticRequest.rs1, singleCycleArithmeticRequest.rs2) @[core.scala 278:22]
    wire _arithmeticResult_arithmetic64_WIRE : UInt<127>[8] @[core.scala 270:43]
    _arithmeticResult_arithmetic64_WIRE[0] <= _arithmeticResult_arithmetic64_T_8 @[core.scala 270:43]
    _arithmeticResult_arithmetic64_WIRE[1] <= _arithmeticResult_arithmetic64_T_10 @[core.scala 270:43]
    _arithmeticResult_arithmetic64_WIRE[2] <= _arithmeticResult_arithmetic64_T_13 @[core.scala 270:43]
    _arithmeticResult_arithmetic64_WIRE[3] <= _arithmeticResult_arithmetic64_T_14 @[core.scala 270:43]
    _arithmeticResult_arithmetic64_WIRE[4] <= _arithmeticResult_arithmetic64_T_15 @[core.scala 270:43]
    _arithmeticResult_arithmetic64_WIRE[5] <= _arithmeticResult_arithmetic64_T_24 @[core.scala 270:43]
    _arithmeticResult_arithmetic64_WIRE[6] <= _arithmeticResult_arithmetic64_T_25 @[core.scala 270:43]
    _arithmeticResult_arithmetic64_WIRE[7] <= _arithmeticResult_arithmetic64_T_26 @[core.scala 270:43]
    node _arithmeticResult_arithmetic64_T_27 = bits(singleCycleArithmeticRequest.instruction, 14, 12) @[core.scala 279:19]
    node _arithmeticResult_T = bits(singleCycleArithmeticRequest.instruction, 3, 3) @[core.scala 280:20]
    node _arithmeticResult_T_1 = bits(_arithmeticResult_T, 0, 0) @[core.scala 280:24]
    node arithmeticResult = mux(_arithmeticResult_T_1, _arithmeticResult_arithmetic32_WIRE[_arithmeticResult_arithmetic32_T_56], _arithmeticResult_arithmetic64_WIRE[_arithmeticResult_arithmetic64_T_27]) @[core.scala 280:8]
    fwdFrom_0.result <= arithmeticResult @[core.scala 282:21]
    node _arithmeticImm_T = bits(prf.toExec.instruction, 31, 31) @[core.scala 284:58]
    node _arithmeticImm_T_1 = bits(_arithmeticImm_T, 0, 0) @[Bitwise.scala 77:15]
    node _arithmeticImm_T_2 = mux(_arithmeticImm_T_1, UInt<52>("hfffffffffffff"), UInt<52>("h0")) @[Bitwise.scala 77:12]
    node _arithmeticImm_T_3 = bits(prf.toExec.instruction, 31, 20) @[core.scala 284:87]
    node arithmeticImm = cat(_arithmeticImm_T_2, _arithmeticImm_T_3) @[Cat.scala 33:92]
    node _singleCycleArithmeticRequest_valid_T = bits(prf.toExec.instruction, 4, 2) @[core.scala 287:84]
    node _singleCycleArithmeticRequest_valid_T_1 = and(_singleCycleArithmeticRequest_valid_T, UInt<3>("h5")) @[core.scala 287:91]
    node _singleCycleArithmeticRequest_valid_T_2 = eq(UInt<3>("h4"), _singleCycleArithmeticRequest_valid_T_1) @[core.scala 287:91]
    node _singleCycleArithmeticRequest_valid_T_3 = and(prf.toExec.valid, _singleCycleArithmeticRequest_valid_T_2) @[core.scala 287:58]
    node _singleCycleArithmeticRequest_valid_T_4 = bits(prf.toExec.instruction, 6, 6) @[core.scala 287:137]
    node _singleCycleArithmeticRequest_valid_T_5 = bits(_singleCycleArithmeticRequest_valid_T_4, 0, 0) @[core.scala 287:141]
    node _singleCycleArithmeticRequest_valid_T_6 = bits(prf.toExec.instruction, 5, 5) @[core.scala 287:174]
    node _singleCycleArithmeticRequest_valid_T_7 = bits(_singleCycleArithmeticRequest_valid_T_6, 0, 0) @[core.scala 287:178]
    node _singleCycleArithmeticRequest_valid_T_8 = eq(_singleCycleArithmeticRequest_valid_T_7, UInt<1>("h0")) @[core.scala 287:151]
    node _singleCycleArithmeticRequest_valid_T_9 = or(_singleCycleArithmeticRequest_valid_T_5, _singleCycleArithmeticRequest_valid_T_8) @[core.scala 287:148]
    node _singleCycleArithmeticRequest_valid_T_10 = bits(prf.toExec.instruction, 25, 25) @[core.scala 287:211]
    node _singleCycleArithmeticRequest_valid_T_11 = bits(_singleCycleArithmeticRequest_valid_T_10, 0, 0) @[core.scala 287:216]
    node _singleCycleArithmeticRequest_valid_T_12 = eq(_singleCycleArithmeticRequest_valid_T_11, UInt<1>("h0")) @[core.scala 287:188]
    node _singleCycleArithmeticRequest_valid_T_13 = or(_singleCycleArithmeticRequest_valid_T_9, _singleCycleArithmeticRequest_valid_T_12) @[core.scala 287:185]
    node _singleCycleArithmeticRequest_valid_T_14 = and(_singleCycleArithmeticRequest_valid_T_3, _singleCycleArithmeticRequest_valid_T_13) @[core.scala 287:111]
    singleCycleArithmeticRequest.valid <= _singleCycleArithmeticRequest_valid_T_14 @[core.scala 287:38]
    singleCycleArithmeticRequest.branchMask <= prf.toExec.branchmask @[core.scala 288:43]
    singleCycleArithmeticRequest.instruction <= prf.toExec.instruction @[core.scala 289:44]
    singleCycleArithmeticRequest.prfDest <= prf.toExec.prfDest @[core.scala 290:40]
    singleCycleArithmeticRequest.robAddr <= prf.toExec.robAddr @[core.scala 291:40]
    node _singleCycleArithmeticRequest_rs1_T = bits(prf.toExec.instruction, 19, 15) @[core.scala 292:65]
    node _singleCycleArithmeticRequest_rs1_T_1 = orr(_singleCycleArithmeticRequest_rs1_T) @[core.scala 292:74]
    node _singleCycleArithmeticRequest_rs1_T_2 = eq(fwdFrom_0.prfDest, prf.toExec.rs1Addr) @[core.scala 293:50]
    node _singleCycleArithmeticRequest_rs1_T_3 = and(fwdFrom_0.valid, _singleCycleArithmeticRequest_rs1_T_2) @[core.scala 293:34]
    node _singleCycleArithmeticRequest_rs1_T_4 = eq(fwdFrom_1.prfDest, prf.toExec.rs1Addr) @[core.scala 293:50]
    node _singleCycleArithmeticRequest_rs1_T_5 = and(fwdFrom_1.valid, _singleCycleArithmeticRequest_rs1_T_4) @[core.scala 293:34]
    node _singleCycleArithmeticRequest_rs1_T_6 = eq(fwdFrom_2.prfDest, prf.toExec.rs1Addr) @[core.scala 293:50]
    node _singleCycleArithmeticRequest_rs1_T_7 = and(fwdFrom_2.valid, _singleCycleArithmeticRequest_rs1_T_6) @[core.scala 293:34]
    node _singleCycleArithmeticRequest_rs1_T_8 = mux(_singleCycleArithmeticRequest_rs1_T_7, fwdFrom_2.result, prf.toExec.rs1Data) @[Mux.scala 101:16]
    node _singleCycleArithmeticRequest_rs1_T_9 = mux(_singleCycleArithmeticRequest_rs1_T_5, fwdFrom_1.result, _singleCycleArithmeticRequest_rs1_T_8) @[Mux.scala 101:16]
    node _singleCycleArithmeticRequest_rs1_T_10 = mux(_singleCycleArithmeticRequest_rs1_T_3, fwdFrom_0.result, _singleCycleArithmeticRequest_rs1_T_9) @[Mux.scala 101:16]
    node _singleCycleArithmeticRequest_rs1_T_11 = mux(_singleCycleArithmeticRequest_rs1_T_1, _singleCycleArithmeticRequest_rs1_T_10, UInt<1>("h0")) @[core.scala 292:42]
    singleCycleArithmeticRequest.rs1 <= _singleCycleArithmeticRequest_rs1_T_11 @[core.scala 292:36]
    node _singleCycleArithmeticRequest_rs2_T = bits(prf.toExec.instruction, 5, 5) @[core.scala 295:65]
    node _singleCycleArithmeticRequest_rs2_T_1 = bits(_singleCycleArithmeticRequest_rs2_T, 0, 0) @[core.scala 295:69]
    node _singleCycleArithmeticRequest_rs2_T_2 = bits(prf.toExec.instruction, 24, 20) @[core.scala 295:103]
    node _singleCycleArithmeticRequest_rs2_T_3 = orr(_singleCycleArithmeticRequest_rs2_T_2) @[core.scala 295:112]
    node _singleCycleArithmeticRequest_rs2_T_4 = eq(fwdFrom_0.prfDest, prf.toExec.rs2Addr) @[core.scala 296:50]
    node _singleCycleArithmeticRequest_rs2_T_5 = and(fwdFrom_0.valid, _singleCycleArithmeticRequest_rs2_T_4) @[core.scala 296:34]
    node _singleCycleArithmeticRequest_rs2_T_6 = eq(fwdFrom_1.prfDest, prf.toExec.rs2Addr) @[core.scala 296:50]
    node _singleCycleArithmeticRequest_rs2_T_7 = and(fwdFrom_1.valid, _singleCycleArithmeticRequest_rs2_T_6) @[core.scala 296:34]
    node _singleCycleArithmeticRequest_rs2_T_8 = eq(fwdFrom_2.prfDest, prf.toExec.rs2Addr) @[core.scala 296:50]
    node _singleCycleArithmeticRequest_rs2_T_9 = and(fwdFrom_2.valid, _singleCycleArithmeticRequest_rs2_T_8) @[core.scala 296:34]
    node _singleCycleArithmeticRequest_rs2_T_10 = mux(_singleCycleArithmeticRequest_rs2_T_9, fwdFrom_2.result, prf.toExec.rs2Data) @[Mux.scala 101:16]
    node _singleCycleArithmeticRequest_rs2_T_11 = mux(_singleCycleArithmeticRequest_rs2_T_7, fwdFrom_1.result, _singleCycleArithmeticRequest_rs2_T_10) @[Mux.scala 101:16]
    node _singleCycleArithmeticRequest_rs2_T_12 = mux(_singleCycleArithmeticRequest_rs2_T_5, fwdFrom_0.result, _singleCycleArithmeticRequest_rs2_T_11) @[Mux.scala 101:16]
    node _singleCycleArithmeticRequest_rs2_T_13 = mux(_singleCycleArithmeticRequest_rs2_T_3, _singleCycleArithmeticRequest_rs2_T_12, UInt<1>("h0")) @[core.scala 295:80]
    node _singleCycleArithmeticRequest_rs2_T_14 = mux(_singleCycleArithmeticRequest_rs2_T_1, _singleCycleArithmeticRequest_rs2_T_13, arithmeticImm) @[core.scala 295:42]
    singleCycleArithmeticRequest.rs2 <= _singleCycleArithmeticRequest_rs2_T_14 @[core.scala 295:36]
    when branchOps.valid : @[core.scala 299:25]
      node _T_23 = and(prf.toExec.branchmask, branchOps.branchMask) @[core.scala 300:33]
      node _T_24 = orr(_T_23) @[core.scala 300:57]
      when _T_24 : @[core.scala 300:62]
        node _singleCycleArithmeticRequest_branchMask_T = xor(prf.toExec.branchmask, branchOps.branchMask) @[core.scala 301:72]
        singleCycleArithmeticRequest.branchMask <= _singleCycleArithmeticRequest_branchMask_T @[core.scala 301:47]
      node _T_25 = eq(branchOps.passed, UInt<1>("h0")) @[core.scala 303:10]
      node _T_26 = and(prf.toExec.branchmask, branchOps.branchMask) @[core.scala 303:54]
      node _T_27 = orr(_T_26) @[core.scala 303:78]
      node _T_28 = and(_T_25, _T_27) @[core.scala 303:28]
      when _T_28 : @[core.scala 303:83]
        singleCycleArithmeticRequest.valid <= UInt<1>("h0") @[core.scala 304:42]
    singleCycleArithmeticResponse.prfDest <= singleCycleArithmeticRequest.prfDest @[core.scala 309:41]
    singleCycleArithmeticResponse.result <= arithmeticResult @[core.scala 310:40]
    singleCycleArithmeticResponse.robAddr <= singleCycleArithmeticRequest.robAddr @[core.scala 311:41]
    singleCycleArithmeticResponse.valid <= singleCycleArithmeticRequest.valid @[core.scala 312:39]
    when branchOps.valid : @[core.scala 314:25]
      node _T_29 = eq(branchOps.passed, UInt<1>("h0")) @[core.scala 315:10]
      node _T_30 = and(branchOps.branchMask, singleCycleArithmeticRequest.branchMask) @[core.scala 315:53]
      node _T_31 = orr(_T_30) @[core.scala 315:96]
      node _T_32 = and(_T_29, _T_31) @[core.scala 315:28]
      when _T_32 : @[core.scala 315:101]
        singleCycleArithmeticResponse.valid <= UInt<1>("h0") @[core.scala 316:43]
    node _extnMRequest_valid_T = bits(prf.toExec.instruction, 6, 2) @[core.scala 321:68]
    node _extnMRequest_valid_T_1 = and(_extnMRequest_valid_T, UInt<5>("h1d")) @[core.scala 321:75]
    node _extnMRequest_valid_T_2 = eq(UInt<4>("hc"), _extnMRequest_valid_T_1) @[core.scala 321:75]
    node _extnMRequest_valid_T_3 = and(prf.toExec.valid, _extnMRequest_valid_T_2) @[core.scala 321:42]
    node _extnMRequest_valid_T_4 = bits(prf.toExec.instruction, 25, 25) @[core.scala 321:122]
    node _extnMRequest_valid_T_5 = bits(_extnMRequest_valid_T_4, 0, 0) @[core.scala 321:127]
    node _extnMRequest_valid_T_6 = and(_extnMRequest_valid_T_3, _extnMRequest_valid_T_5) @[core.scala 321:97]
    extnMRequest.valid <= _extnMRequest_valid_T_6 @[core.scala 321:22]
    extnMRequest.branchMask <= prf.toExec.branchmask @[core.scala 322:27]
    extnMRequest.instruction <= prf.toExec.instruction @[core.scala 323:28]
    when branchOps.valid : @[core.scala 324:25]
      node _T_33 = and(prf.toExec.branchmask, branchOps.branchMask) @[core.scala 325:33]
      node _T_34 = orr(_T_33) @[core.scala 325:57]
      when _T_34 : @[core.scala 325:62]
        node _extnMRequest_branchMask_T = xor(prf.toExec.branchmask, branchOps.branchMask) @[core.scala 326:56]
        extnMRequest.branchMask <= _extnMRequest_branchMask_T @[core.scala 326:31]
      node _T_35 = eq(branchOps.passed, UInt<1>("h0")) @[core.scala 328:10]
      node _T_36 = and(prf.toExec.branchmask, branchOps.branchMask) @[core.scala 328:54]
      node _T_37 = orr(_T_36) @[core.scala 328:78]
      node _T_38 = and(_T_35, _T_37) @[core.scala 328:28]
      when _T_38 : @[core.scala 328:83]
        extnMRequest.valid <= UInt<1>("h0") @[core.scala 329:26]
    extnMRequest.prfDest <= prf.toExec.prfDest @[core.scala 332:24]
    extnMRequest.robAddr <= prf.toExec.robAddr @[core.scala 333:24]
    node _extnMRequest_rs1_T = eq(fwdFrom_0.prfDest, prf.toExec.rs1Addr) @[core.scala 335:50]
    node _extnMRequest_rs1_T_1 = and(fwdFrom_0.valid, _extnMRequest_rs1_T) @[core.scala 335:34]
    node _extnMRequest_rs1_T_2 = eq(fwdFrom_1.prfDest, prf.toExec.rs1Addr) @[core.scala 335:50]
    node _extnMRequest_rs1_T_3 = and(fwdFrom_1.valid, _extnMRequest_rs1_T_2) @[core.scala 335:34]
    node _extnMRequest_rs1_T_4 = eq(fwdFrom_2.prfDest, prf.toExec.rs1Addr) @[core.scala 335:50]
    node _extnMRequest_rs1_T_5 = and(fwdFrom_2.valid, _extnMRequest_rs1_T_4) @[core.scala 335:34]
    node _extnMRequest_rs1_T_6 = mux(_extnMRequest_rs1_T_5, fwdFrom_2.result, prf.toExec.rs1Data) @[Mux.scala 101:16]
    node _extnMRequest_rs1_T_7 = mux(_extnMRequest_rs1_T_3, fwdFrom_1.result, _extnMRequest_rs1_T_6) @[Mux.scala 101:16]
    node _extnMRequest_rs1_T_8 = mux(_extnMRequest_rs1_T_1, fwdFrom_0.result, _extnMRequest_rs1_T_7) @[Mux.scala 101:16]
    extnMRequest.rs1 <= _extnMRequest_rs1_T_8 @[core.scala 334:20]
    node _extnMRequest_rs2_T = eq(fwdFrom_0.prfDest, prf.toExec.rs2Addr) @[core.scala 338:50]
    node _extnMRequest_rs2_T_1 = and(fwdFrom_0.valid, _extnMRequest_rs2_T) @[core.scala 338:34]
    node _extnMRequest_rs2_T_2 = eq(fwdFrom_1.prfDest, prf.toExec.rs2Addr) @[core.scala 338:50]
    node _extnMRequest_rs2_T_3 = and(fwdFrom_1.valid, _extnMRequest_rs2_T_2) @[core.scala 338:34]
    node _extnMRequest_rs2_T_4 = eq(fwdFrom_2.prfDest, prf.toExec.rs2Addr) @[core.scala 338:50]
    node _extnMRequest_rs2_T_5 = and(fwdFrom_2.valid, _extnMRequest_rs2_T_4) @[core.scala 338:34]
    node _extnMRequest_rs2_T_6 = mux(_extnMRequest_rs2_T_5, fwdFrom_2.result, prf.toExec.rs2Data) @[Mux.scala 101:16]
    node _extnMRequest_rs2_T_7 = mux(_extnMRequest_rs2_T_3, fwdFrom_1.result, _extnMRequest_rs2_T_6) @[Mux.scala 101:16]
    node _extnMRequest_rs2_T_8 = mux(_extnMRequest_rs2_T_1, fwdFrom_0.result, _extnMRequest_rs2_T_7) @[Mux.scala 101:16]
    extnMRequest.rs2 <= _extnMRequest_rs2_T_8 @[core.scala 337:20]
    node _partialMuls32x32_T = bits(extnMRequest.rs1, 31, 0) @[core.scala 342:21]
    node _partialMuls32x32_T_1 = bits(extnMRequest.rs2, 31, 0) @[core.scala 342:47]
    node partialMuls32x32_0 = mul(_partialMuls32x32_T, _partialMuls32x32_T_1) @[core.scala 342:29]
    node _partialMuls32x32_T_2 = bits(extnMRequest.rs1, 63, 32) @[core.scala 343:21]
    node _partialMuls32x32_T_3 = bits(extnMRequest.rs2, 31, 0) @[core.scala 343:48]
    node partialMuls32x32_1 = mul(_partialMuls32x32_T_2, _partialMuls32x32_T_3) @[core.scala 343:30]
    node _partialMuls32x32_T_4 = bits(extnMRequest.rs1, 63, 63) @[core.scala 344:25]
    node _partialMuls32x32_T_5 = bits(extnMRequest.rs1, 63, 32) @[core.scala 344:47]
    node _partialMuls32x32_T_6 = cat(_partialMuls32x32_T_4, _partialMuls32x32_T_5) @[Cat.scala 33:92]
    node _partialMuls32x32_T_7 = asSInt(_partialMuls32x32_T_6) @[core.scala 344:57]
    node _partialMuls32x32_T_8 = bits(extnMRequest.rs2, 31, 0) @[core.scala 344:96]
    node _partialMuls32x32_T_9 = cat(UInt<1>("h0"), _partialMuls32x32_T_8) @[Cat.scala 33:92]
    node _partialMuls32x32_T_10 = asSInt(_partialMuls32x32_T_9) @[core.scala 344:105]
    node partialMuls32x32_2 = mul(_partialMuls32x32_T_7, _partialMuls32x32_T_10) @[core.scala 344:64]
    node _partialMuls32x32_T_11 = bits(extnMRequest.rs1, 31, 0) @[core.scala 345:21]
    node _partialMuls32x32_T_12 = bits(extnMRequest.rs2, 63, 32) @[core.scala 345:47]
    node partialMuls32x32_3 = mul(_partialMuls32x32_T_11, _partialMuls32x32_T_12) @[core.scala 345:29]
    node _partialMuls32x32_T_13 = bits(extnMRequest.rs1, 31, 0) @[core.scala 346:35]
    node _partialMuls32x32_T_14 = cat(UInt<1>("h0"), _partialMuls32x32_T_13) @[Cat.scala 33:92]
    node _partialMuls32x32_T_15 = asSInt(_partialMuls32x32_T_14) @[core.scala 346:44]
    node _partialMuls32x32_T_16 = bits(extnMRequest.rs2, 63, 63) @[core.scala 346:73]
    node _partialMuls32x32_T_17 = bits(extnMRequest.rs2, 63, 32) @[core.scala 346:95]
    node _partialMuls32x32_T_18 = cat(_partialMuls32x32_T_16, _partialMuls32x32_T_17) @[Cat.scala 33:92]
    node _partialMuls32x32_T_19 = asSInt(_partialMuls32x32_T_18) @[core.scala 346:105]
    node partialMuls32x32_4 = mul(_partialMuls32x32_T_15, _partialMuls32x32_T_19) @[core.scala 346:51]
    node _partialMuls32x32_T_20 = bits(extnMRequest.rs1, 63, 32) @[core.scala 347:21]
    node _partialMuls32x32_T_21 = bits(extnMRequest.rs2, 63, 32) @[core.scala 347:48]
    node partialMuls32x32_5 = mul(_partialMuls32x32_T_20, _partialMuls32x32_T_21) @[core.scala 347:30]
    node _partialMuls32x32_T_22 = bits(extnMRequest.rs1, 63, 63) @[core.scala 348:25]
    node _partialMuls32x32_T_23 = bits(extnMRequest.rs1, 63, 32) @[core.scala 348:47]
    node _partialMuls32x32_T_24 = cat(_partialMuls32x32_T_22, _partialMuls32x32_T_23) @[Cat.scala 33:92]
    node _partialMuls32x32_T_25 = asSInt(_partialMuls32x32_T_24) @[core.scala 348:57]
    node _partialMuls32x32_T_26 = bits(extnMRequest.rs2, 63, 32) @[core.scala 348:96]
    node _partialMuls32x32_T_27 = cat(UInt<1>("h0"), _partialMuls32x32_T_26) @[Cat.scala 33:92]
    node _partialMuls32x32_T_28 = asSInt(_partialMuls32x32_T_27) @[core.scala 348:106]
    node partialMuls32x32_6 = mul(_partialMuls32x32_T_25, _partialMuls32x32_T_28) @[core.scala 348:64]
    node _partialMuls32x32_T_29 = bits(extnMRequest.rs1, 63, 32) @[core.scala 349:21]
    node _partialMuls32x32_T_30 = asSInt(_partialMuls32x32_T_29) @[core.scala 349:30]
    node _partialMuls32x32_T_31 = bits(extnMRequest.rs2, 63, 32) @[core.scala 349:55]
    node _partialMuls32x32_T_32 = asSInt(_partialMuls32x32_T_31) @[core.scala 349:64]
    node partialMuls32x32_7 = mul(_partialMuls32x32_T_30, _partialMuls32x32_T_32) @[core.scala 349:37]
    node _partialMuls32x32_T_33 = bits(extnMRequest.rs1, 31, 0) @[core.scala 350:21]
    node _partialMuls32x32_T_34 = asSInt(_partialMuls32x32_T_33) @[core.scala 350:29]
    node _partialMuls32x32_T_35 = bits(extnMRequest.rs2, 31, 0) @[core.scala 350:54]
    node _partialMuls32x32_T_36 = asSInt(_partialMuls32x32_T_35) @[core.scala 350:62]
    node partialMuls32x32_8 = mul(_partialMuls32x32_T_34, _partialMuls32x32_T_36) @[core.scala 350:36]
    reg narrowMuls : UInt<64>[9], clock with :
      reset => (UInt<1>("h0"), narrowMuls) @[core.scala 352:23]
    node _T_39 = asUInt(partialMuls32x32_2) @[core.scala 353:41]
    node _T_40 = asUInt(partialMuls32x32_4) @[core.scala 353:41]
    node _T_41 = asUInt(partialMuls32x32_6) @[core.scala 353:41]
    node _T_42 = asUInt(partialMuls32x32_7) @[core.scala 353:41]
    node _T_43 = asUInt(partialMuls32x32_8) @[core.scala 353:41]
    narrowMuls[0] <= partialMuls32x32_0 @[core.scala 353:80]
    narrowMuls[1] <= partialMuls32x32_1 @[core.scala 353:80]
    narrowMuls[2] <= _T_39 @[core.scala 353:80]
    narrowMuls[3] <= partialMuls32x32_3 @[core.scala 353:80]
    narrowMuls[4] <= _T_40 @[core.scala 353:80]
    narrowMuls[5] <= partialMuls32x32_5 @[core.scala 353:80]
    narrowMuls[6] <= _T_41 @[core.scala 353:80]
    narrowMuls[7] <= _T_42 @[core.scala 353:80]
    narrowMuls[8] <= _T_43 @[core.scala 353:80]
    node _muls_0_T = cat(narrowMuls[1], UInt<32>("h0")) @[Cat.scala 33:92]
    node _muls_0_T_1 = add(narrowMuls[0], _muls_0_T) @[core.scala 356:29]
    node _muls_0_T_2 = tail(_muls_0_T_1, 1) @[core.scala 356:29]
    muls[0] <= _muls_0_T_2 @[core.scala 356:11]
    node _muls_1_T = cat(narrowMuls[5], UInt<32>("h0")) @[Cat.scala 33:92]
    node _muls_1_T_1 = add(narrowMuls[3], _muls_1_T) @[core.scala 357:28]
    node _muls_1_T_2 = tail(_muls_1_T_1, 1) @[core.scala 357:28]
    muls[1] <= _muls_1_T_2 @[core.scala 357:11]
    node _muls_2_T = cat(narrowMuls[6], UInt<32>("h0")) @[Cat.scala 33:92]
    node _muls_2_T_1 = add(narrowMuls[3], _muls_2_T) @[core.scala 358:28]
    node _muls_2_T_2 = tail(_muls_2_T_1, 1) @[core.scala 358:28]
    muls[2] <= _muls_2_T_2 @[core.scala 358:11]
    node _muls_3_T = bits(narrowMuls[4], 63, 63) @[core.scala 359:40]
    node _muls_3_T_1 = bits(_muls_3_T, 0, 0) @[Bitwise.scala 77:15]
    node _muls_3_T_2 = mux(_muls_3_T_1, UInt<32>("hffffffff"), UInt<32>("h0")) @[Bitwise.scala 77:12]
    node _muls_3_T_3 = cat(_muls_3_T_2, narrowMuls[4]) @[Cat.scala 33:92]
    node _muls_3_T_4 = cat(narrowMuls[7], UInt<32>("h0")) @[Cat.scala 33:92]
    node _muls_3_T_5 = add(_muls_3_T_3, _muls_3_T_4) @[core.scala 359:62]
    node _muls_3_T_6 = tail(_muls_3_T_5, 1) @[core.scala 359:62]
    muls[3] <= _muls_3_T_6 @[core.scala 359:11]
    node _muls_4_T = cat(narrowMuls[2], UInt<32>("h0")) @[Cat.scala 33:92]
    node _muls_4_T_1 = add(narrowMuls[0], _muls_4_T) @[core.scala 360:28]
    node _muls_4_T_2 = tail(_muls_4_T_1, 1) @[core.scala 360:28]
    muls[4] <= _muls_4_T_2 @[core.scala 360:11]
    muls[5] <= narrowMuls[8] @[core.scala 361:11]
    reg extnResponseInstruction : UInt<32>, clock with :
      reset => (UInt<1>("h0"), extnResponseInstruction) @[core.scala 363:36]
    extnMResponse.prfDest <= extnMServicing.prfDest @[core.scala 365:25]
    node _extnMResponse_result_T = bits(extnMServicing.instruction, 3, 3) @[core.scala 366:57]
    node _extnMResponse_result_T_1 = bits(_extnMResponse_result_T, 0, 0) @[core.scala 366:61]
    node _extnMResponse_result_T_2 = bits(muls[5], 31, 31) @[core.scala 366:89]
    node _extnMResponse_result_T_3 = bits(_extnMResponse_result_T_2, 0, 0) @[Bitwise.scala 77:15]
    node _extnMResponse_result_T_4 = mux(_extnMResponse_result_T_3, UInt<32>("hffffffff"), UInt<32>("h0")) @[Bitwise.scala 77:12]
    node _extnMResponse_result_T_5 = bits(muls[5], 31, 0) @[core.scala 366:103]
    node _extnMResponse_result_T_6 = cat(_extnMResponse_result_T_4, _extnMResponse_result_T_5) @[Cat.scala 33:92]
    node _extnMResponse_result_T_7 = bits(muls[4], 95, 95) @[core.scala 368:26]
    node _extnMResponse_result_T_8 = bits(_extnMResponse_result_T_7, 0, 0) @[Bitwise.scala 77:15]
    node _extnMResponse_result_T_9 = mux(_extnMResponse_result_T_8, UInt<32>("hffffffff"), UInt<32>("h0")) @[Bitwise.scala 77:12]
    node _extnMResponse_result_T_10 = cat(_extnMResponse_result_T_9, muls[4]) @[Cat.scala 33:92]
    node _extnMResponse_result_T_11 = cat(muls[3], UInt<32>("h0")) @[Cat.scala 33:92]
    node _extnMResponse_result_T_12 = add(_extnMResponse_result_T_10, _extnMResponse_result_T_11) @[core.scala 368:42]
    node _extnMResponse_result_T_13 = tail(_extnMResponse_result_T_12, 1) @[core.scala 368:42]
    node _extnMResponse_result_T_14 = bits(_extnMResponse_result_T_13, 63, 0) @[core.scala 368:68]
    node _extnMResponse_result_T_15 = bits(muls[4], 95, 95) @[core.scala 369:26]
    node _extnMResponse_result_T_16 = bits(_extnMResponse_result_T_15, 0, 0) @[Bitwise.scala 77:15]
    node _extnMResponse_result_T_17 = mux(_extnMResponse_result_T_16, UInt<32>("hffffffff"), UInt<32>("h0")) @[Bitwise.scala 77:12]
    node _extnMResponse_result_T_18 = cat(_extnMResponse_result_T_17, muls[4]) @[Cat.scala 33:92]
    node _extnMResponse_result_T_19 = cat(muls[3], UInt<32>("h0")) @[Cat.scala 33:92]
    node _extnMResponse_result_T_20 = add(_extnMResponse_result_T_18, _extnMResponse_result_T_19) @[core.scala 369:42]
    node _extnMResponse_result_T_21 = tail(_extnMResponse_result_T_20, 1) @[core.scala 369:42]
    node _extnMResponse_result_T_22 = bits(_extnMResponse_result_T_21, 127, 64) @[core.scala 369:68]
    node _extnMResponse_result_T_23 = bits(muls[4], 95, 95) @[core.scala 370:26]
    node _extnMResponse_result_T_24 = bits(_extnMResponse_result_T_23, 0, 0) @[Bitwise.scala 77:15]
    node _extnMResponse_result_T_25 = mux(_extnMResponse_result_T_24, UInt<32>("hffffffff"), UInt<32>("h0")) @[Bitwise.scala 77:12]
    node _extnMResponse_result_T_26 = cat(_extnMResponse_result_T_25, muls[4]) @[Cat.scala 33:92]
    node _extnMResponse_result_T_27 = cat(muls[2], UInt<32>("h0")) @[Cat.scala 33:92]
    node _extnMResponse_result_T_28 = add(_extnMResponse_result_T_26, _extnMResponse_result_T_27) @[core.scala 370:42]
    node _extnMResponse_result_T_29 = tail(_extnMResponse_result_T_28, 1) @[core.scala 370:42]
    node _extnMResponse_result_T_30 = bits(_extnMResponse_result_T_29, 127, 64) @[core.scala 370:68]
    node _extnMResponse_result_T_31 = cat(muls[1], UInt<32>("h0")) @[Cat.scala 33:92]
    node _extnMResponse_result_T_32 = add(muls[0], _extnMResponse_result_T_31) @[core.scala 371:14]
    node _extnMResponse_result_T_33 = tail(_extnMResponse_result_T_32, 1) @[core.scala 371:14]
    node _extnMResponse_result_T_34 = bits(_extnMResponse_result_T_33, 127, 64) @[core.scala 371:40]
    wire _extnMResponse_result_WIRE : UInt<64>[4] @[core.scala 367:10]
    _extnMResponse_result_WIRE[0] <= _extnMResponse_result_T_14 @[core.scala 367:10]
    _extnMResponse_result_WIRE[1] <= _extnMResponse_result_T_22 @[core.scala 367:10]
    _extnMResponse_result_WIRE[2] <= _extnMResponse_result_T_30 @[core.scala 367:10]
    _extnMResponse_result_WIRE[3] <= _extnMResponse_result_T_34 @[core.scala 367:10]
    node _extnMResponse_result_T_35 = bits(extnMServicing.instruction, 13, 12) @[core.scala 372:31]
    node _extnMResponse_result_T_36 = mux(_extnMResponse_result_T_1, _extnMResponse_result_T_6, _extnMResponse_result_WIRE[_extnMResponse_result_T_35]) @[core.scala 366:30]
    extnMResponse.result <= _extnMResponse_result_T_36 @[core.scala 366:24]
    node _T_44 = bits(extnMServicing.instruction, 24, 20) @[core.scala 373:60]
    node _T_45 = orr(_T_44) @[core.scala 373:69]
    node _T_46 = eq(_T_45, UInt<1>("h0")) @[core.scala 373:33]
    node _T_47 = bits(extnMServicing.instruction, 19, 15) @[core.scala 373:103]
    node _T_48 = orr(_T_47) @[core.scala 373:112]
    node _T_49 = eq(_T_48, UInt<1>("h0")) @[core.scala 373:76]
    node _T_50 = or(_T_46, _T_49) @[core.scala 373:73]
    node _T_51 = and(extnMServicing.valid, _T_50) @[core.scala 373:29]
    when _T_51 : @[core.scala 373:118]
      extnMResponse.result <= UInt<1>("h0") @[core.scala 374:26]
    extnMResponse.robAddr <= extnMServicing.robAddr @[core.scala 376:25]
    extnMResponse.valid <= extnMServicing.valid @[core.scala 377:23]
    extnResponseInstruction <= extnMServicing.instruction @[core.scala 378:27]
    when branchOps.valid : @[core.scala 380:25]
      node _T_52 = xor(prf.toExec.branchmask, branchOps.branchMask) @[core.scala 381:103]
      node _T_53 = and(prf.toExec.branchmask, branchOps.branchMask) @[core.scala 381:130]
      node _T_54 = orr(_T_53) @[core.scala 381:154]
      node _T_55 = xor(extnMRequest.branchMask, branchOps.branchMask) @[core.scala 381:103]
      node _T_56 = and(extnMRequest.branchMask, branchOps.branchMask) @[core.scala 381:130]
      node _T_57 = orr(_T_56) @[core.scala 381:154]
      node _T_58 = xor(extnMPartialServicing.branchMask, branchOps.branchMask) @[core.scala 381:103]
      node _T_59 = and(extnMPartialServicing.branchMask, branchOps.branchMask) @[core.scala 381:130]
      node _T_60 = orr(_T_59) @[core.scala 381:154]
      when _T_54 : @[core.scala 383:73]
        extnMRequest.branchMask <= _T_52 @[core.scala 384:11]
      when _T_57 : @[core.scala 383:73]
        extnMPartialServicing.branchMask <= _T_55 @[core.scala 384:11]
      when _T_60 : @[core.scala 383:73]
        extnMServicing.branchMask <= _T_58 @[core.scala 384:11]
      node _T_61 = eq(branchOps.passed, UInt<1>("h0")) @[core.scala 386:10]
      when _T_61 : @[core.scala 386:29]
        node _T_62 = and(prf.toExec.branchmask, branchOps.branchMask) @[core.scala 387:93]
        node _T_63 = and(extnMRequest.branchMask, branchOps.branchMask) @[core.scala 387:93]
        node _T_64 = and(extnMServicing.branchMask, branchOps.branchMask) @[core.scala 387:93]
        node _T_65 = orr(_T_62) @[core.scala 387:123]
        node _T_66 = orr(_T_63) @[core.scala 387:123]
        node _T_67 = orr(_T_64) @[core.scala 387:123]
        node _T_68 = and(_T_65, prf.toExec.valid) @[core.scala 389:80]
        when _T_68 : @[core.scala 389:101]
          extnMRequest.valid <= UInt<1>("h0") @[core.scala 389:107]
        node _T_69 = and(_T_66, extnMRequest.valid) @[core.scala 389:80]
        when _T_69 : @[core.scala 389:101]
          extnMServicing.valid <= UInt<1>("h0") @[core.scala 389:107]
        node _T_70 = and(_T_67, extnMServicing.valid) @[core.scala 389:80]
        when _T_70 : @[core.scala 389:101]
          extnMResponse.valid <= UInt<1>("h0") @[core.scala 389:107]
    reg divBranchMask : UInt<5>, clock with :
      reset => (UInt<1>("h0"), divBranchMask) @[core.scala 393:26]
    node _T_71 = bits(scheduler.release.instruction, 25, 25) @[core.scala 395:37]
    node _T_72 = bits(scheduler.release.instruction, 14, 14) @[core.scala 395:72]
    node _T_73 = bits(scheduler.release.instruction, 6, 4) @[core.scala 395:107]
    node hi = cat(_T_71, _T_72) @[Cat.scala 33:92]
    node _T_74 = cat(hi, _T_73) @[Cat.scala 33:92]
    node _T_75 = eq(_T_74, UInt<5>("h1b")) @[core.scala 395:115]
    node _T_76 = and(scheduler.release.fired, _T_75) @[core.scala 394:32]
    when _T_76 : @[core.scala 395:132]
      node _mExtensionReady_T = and(branchOps.branchMask, scheduler.release.branchMask) @[core.scala 397:77]
      node _mExtensionReady_T_1 = orr(_mExtensionReady_T) @[core.scala 397:109]
      node _mExtensionReady_T_2 = and(branchOps.valid, _mExtensionReady_T_1) @[core.scala 397:52]
      node _mExtensionReady_T_3 = eq(branchOps.passed, UInt<1>("h0")) @[core.scala 397:116]
      node _mExtensionReady_T_4 = and(_mExtensionReady_T_2, _mExtensionReady_T_3) @[core.scala 397:113]
      node _mExtensionReady_T_5 = or(UInt<1>("h0"), _mExtensionReady_T_4) @[core.scala 397:32]
      mExtensionReady <= _mExtensionReady_T_5 @[core.scala 397:21]
      node _divBranchMask_T = and(branchOps.branchMask, scheduler.release.branchMask) @[core.scala 399:67]
      node _divBranchMask_T_1 = orr(_divBranchMask_T) @[core.scala 399:99]
      node _divBranchMask_T_2 = and(branchOps.valid, _divBranchMask_T_1) @[core.scala 399:42]
      node _divBranchMask_T_3 = xor(scheduler.release.branchMask, branchOps.branchMask) @[core.scala 399:133]
      node _divBranchMask_T_4 = mux(_divBranchMask_T_2, _divBranchMask_T_3, scheduler.release.branchMask) @[core.scala 399:25]
      divBranchMask <= _divBranchMask_T_4 @[core.scala 399:19]
    node _T_77 = eq(mExtensionReady, UInt<1>("h0")) @[core.scala 401:8]
    when _T_77 : @[core.scala 401:26]
      node _T_78 = and(branchOps.branchMask, divBranchMask) @[core.scala 402:51]
      node _T_79 = orr(_T_78) @[core.scala 402:68]
      node _T_80 = and(branchOps.valid, _T_79) @[core.scala 402:26]
      when _T_80 : @[core.scala 402:73]
        when branchOps.passed : @[core.scala 403:30]
          node _divBranchMask_T_5 = xor(divBranchMask, branchOps.branchMask) @[core.scala 404:40]
          divBranchMask <= _divBranchMask_T_5 @[core.scala 404:23]
        node _T_81 = eq(branchOps.passed, UInt<1>("h0")) @[core.scala 406:12]
        when _T_81 : @[core.scala 406:31]
          mExtensionReady <= UInt<1>("h1") @[core.scala 407:25]
    node _T_82 = bits(extnResponseInstruction, 14, 14) @[core.scala 411:54]
    node _T_83 = bits(_T_82, 0, 0) @[core.scala 411:59]
    node _T_84 = and(extnMResponse.valid, _T_83) @[core.scala 411:28]
    when _T_84 : @[core.scala 411:67]
      mExtensionReady <= UInt<1>("h1") @[core.scala 411:85]
    node _division_remainder_T = bits(division.remainder, 63, 0) @[core.scala 413:47]
    node _division_remainder_T_1 = bits(division.quotient, 64, 64) @[core.scala 413:73]
    node _division_remainder_T_2 = cat(_division_remainder_T, _division_remainder_T_1) @[Cat.scala 33:92]
    node _division_remainder_T_3 = bits(division.remainder, 64, 64) @[core.scala 413:103]
    node _division_remainder_T_4 = bits(_division_remainder_T_3, 0, 0) @[core.scala 413:108]
    node _division_remainder_T_5 = sub(UInt<1>("h0"), division.divisor) @[core.scala 413:134]
    node _division_remainder_T_6 = tail(_division_remainder_T_5, 1) @[core.scala 413:134]
    node _division_remainder_T_7 = mux(_division_remainder_T_4, division.divisor, _division_remainder_T_6) @[core.scala 413:84]
    node _division_remainder_T_8 = add(_division_remainder_T_2, _division_remainder_T_7) @[core.scala 413:79]
    node _division_remainder_T_9 = tail(_division_remainder_T_8, 1) @[core.scala 413:79]
    division.remainder <= _division_remainder_T_9 @[core.scala 413:22]
    node _division_quotient_T = bits(division.quotient, 63, 0) @[core.scala 414:45]
    node _division_quotient_T_1 = bits(division.remainder, 63, 0) @[core.scala 414:78]
    node _division_quotient_T_2 = bits(division.quotient, 64, 64) @[core.scala 414:104]
    node _division_quotient_T_3 = cat(_division_quotient_T_1, _division_quotient_T_2) @[Cat.scala 33:92]
    node _division_quotient_T_4 = bits(division.remainder, 64, 64) @[core.scala 414:134]
    node _division_quotient_T_5 = bits(_division_quotient_T_4, 0, 0) @[core.scala 414:139]
    node _division_quotient_T_6 = sub(UInt<1>("h0"), division.divisor) @[core.scala 414:165]
    node _division_quotient_T_7 = tail(_division_quotient_T_6, 1) @[core.scala 414:165]
    node _division_quotient_T_8 = mux(_division_quotient_T_5, division.divisor, _division_quotient_T_7) @[core.scala 414:115]
    node _division_quotient_T_9 = add(_division_quotient_T_3, _division_quotient_T_8) @[core.scala 414:110]
    node _division_quotient_T_10 = tail(_division_quotient_T_9, 1) @[core.scala 414:110]
    node _division_quotient_T_11 = bits(_division_quotient_T_10, 64, 64) @[core.scala 414:185]
    node _division_quotient_T_12 = not(_division_quotient_T_11) @[core.scala 414:54]
    node _division_quotient_T_13 = cat(_division_quotient_T, _division_quotient_T_12) @[Cat.scala 33:92]
    division.quotient <= _division_quotient_T_13 @[core.scala 414:21]
    node _division_counter_T = sub(division.counter, UInt<1>("h1")) @[core.scala 415:40]
    node _division_counter_T_1 = tail(_division_counter_T, 1) @[core.scala 415:40]
    division.counter <= _division_counter_T_1 @[core.scala 415:20]
    node _T_85 = bits(extnMRequest.instruction, 14, 14) @[core.scala 417:54]
    node _T_86 = bits(_T_85, 0, 0) @[core.scala 417:59]
    node _T_87 = and(extnMRequest.valid, _T_86) @[core.scala 417:27]
    when _T_87 : @[core.scala 417:67]
      division.counter <= UInt<7>("h41") @[core.scala 418:22]
      division.divisor <= extnMRequest.rs2 @[core.scala 419:22]
      division.quotient <= extnMRequest.rs1 @[core.scala 420:23]
      node _T_88 = bits(extnMRequest.instruction, 3, 3) @[core.scala 421:34]
      node _T_89 = bits(_T_88, 0, 0) @[core.scala 421:38]
      when _T_89 : @[core.scala 421:46]
        node _division_divisor_T = bits(extnMRequest.rs2, 31, 0) @[core.scala 422:58]
        node _division_divisor_T_1 = cat(UInt<33>("h0"), _division_divisor_T) @[Cat.scala 33:92]
        division.divisor <= _division_divisor_T_1 @[core.scala 422:24]
        node _division_quotient_T_14 = bits(extnMRequest.rs1, 31, 0) @[core.scala 423:59]
        node _division_quotient_T_15 = cat(UInt<33>("h0"), _division_quotient_T_14) @[Cat.scala 33:92]
        division.quotient <= _division_quotient_T_15 @[core.scala 423:25]
      division.remainder <= UInt<1>("h0") @[core.scala 425:24]
      division.request <= extnMRequest @[core.scala 426:22]
      division.resultNegative <= UInt<1>("h0") @[core.scala 427:29]
      node _T_90 = bits(extnMRequest.instruction, 12, 12) @[core.scala 428:35]
      node _T_91 = bits(_T_90, 0, 0) @[core.scala 428:40]
      node _T_92 = eq(_T_91, UInt<1>("h0")) @[core.scala 428:10]
      when _T_92 : @[core.scala 428:47]
        node _division_resultNegative_T = bits(extnMRequest.rs1, 63, 63) @[core.scala 429:50]
        node _division_resultNegative_T_1 = bits(_division_resultNegative_T, 0, 0) @[core.scala 429:55]
        node _division_resultNegative_T_2 = bits(extnMRequest.rs2, 63, 63) @[core.scala 429:80]
        node _division_resultNegative_T_3 = bits(_division_resultNegative_T_2, 0, 0) @[core.scala 429:85]
        node _division_resultNegative_T_4 = xor(_division_resultNegative_T_1, _division_resultNegative_T_3) @[core.scala 429:62]
        division.resultNegative <= _division_resultNegative_T_4 @[core.scala 429:31]
        node _T_93 = bits(extnMRequest.rs1, 63, 63) @[core.scala 430:28]
        node _T_94 = bits(_T_93, 0, 0) @[core.scala 430:33]
        when _T_94 : @[core.scala 430:41]
          node _division_quotient_T_16 = sub(UInt<1>("h0"), extnMRequest.rs1) @[core.scala 430:79]
          node _division_quotient_T_17 = tail(_division_quotient_T_16, 1) @[core.scala 430:79]
          node _division_quotient_T_18 = bits(_division_quotient_T_17, 63, 0) @[core.scala 430:98]
          node _division_quotient_T_19 = cat(UInt<1>("h0"), _division_quotient_T_18) @[Cat.scala 33:92]
          division.quotient <= _division_quotient_T_19 @[core.scala 430:61]
        node _T_95 = bits(extnMRequest.rs2, 63, 63) @[core.scala 431:28]
        node _T_96 = bits(_T_95, 0, 0) @[core.scala 431:33]
        when _T_96 : @[core.scala 431:41]
          node _division_divisor_T_2 = sub(UInt<1>("h0"), extnMRequest.rs2) @[core.scala 431:78]
          node _division_divisor_T_3 = tail(_division_divisor_T_2, 1) @[core.scala 431:78]
          node _division_divisor_T_4 = bits(_division_divisor_T_3, 63, 0) @[core.scala 431:97]
          node _division_divisor_T_5 = cat(UInt<1>("h0"), _division_divisor_T_4) @[Cat.scala 33:92]
          division.divisor <= _division_divisor_T_5 @[core.scala 431:60]
        node _T_97 = bits(extnMRequest.instruction, 3, 3) @[core.scala 432:36]
        node _T_98 = bits(_T_97, 0, 0) @[core.scala 432:40]
        when _T_98 : @[core.scala 432:48]
          node _T_99 = bits(extnMRequest.rs1, 31, 31) @[core.scala 433:30]
          node _T_100 = bits(_T_99, 0, 0) @[core.scala 433:35]
          when _T_100 : @[core.scala 433:43]
            node _division_quotient_T_20 = bits(extnMRequest.rs1, 31, 0) @[core.scala 433:100]
            node _division_quotient_T_21 = sub(UInt<1>("h0"), _division_quotient_T_20) @[core.scala 433:82]
            node _division_quotient_T_22 = tail(_division_quotient_T_21, 1) @[core.scala 433:82]
            node _division_quotient_T_23 = bits(_division_quotient_T_22, 31, 0) @[core.scala 433:108]
            node _division_quotient_T_24 = cat(UInt<33>("h0"), _division_quotient_T_23) @[Cat.scala 33:92]
            division.quotient <= _division_quotient_T_24 @[core.scala 433:63]
          node _T_101 = bits(extnMRequest.rs2, 31, 31) @[core.scala 434:30]
          node _T_102 = bits(_T_101, 0, 0) @[core.scala 434:35]
          when _T_102 : @[core.scala 434:43]
            node _division_divisor_T_6 = bits(extnMRequest.rs2, 31, 0) @[core.scala 434:99]
            node _division_divisor_T_7 = sub(UInt<1>("h0"), _division_divisor_T_6) @[core.scala 434:81]
            node _division_divisor_T_8 = tail(_division_divisor_T_7, 1) @[core.scala 434:81]
            node _division_divisor_T_9 = bits(_division_divisor_T_8, 31, 0) @[core.scala 434:107]
            node _division_divisor_T_10 = cat(UInt<33>("h0"), _division_divisor_T_9) @[Cat.scala 33:92]
            division.divisor <= _division_divisor_T_10 @[core.scala 434:62]
    node _T_103 = orr(division.counter) @[core.scala 439:52]
    node _T_104 = eq(_T_103, UInt<1>("h0")) @[core.scala 439:34]
    node _T_105 = and(division.request.valid, _T_104) @[core.scala 439:31]
    when _T_105 : @[core.scala 439:57]
      extnMResponse.prfDest <= division.request.prfDest @[core.scala 440:27]
      node _extnMResponse_result_quotient32_T = bits(division.request.rs1, 31, 31) @[core.scala 442:49]
      node _extnMResponse_result_quotient32_T_1 = bits(_extnMResponse_result_quotient32_T, 0, 0) @[core.scala 442:54]
      node _extnMResponse_result_quotient32_T_2 = bits(division.request.rs2, 31, 31) @[core.scala 442:83]
      node _extnMResponse_result_quotient32_T_3 = bits(_extnMResponse_result_quotient32_T_2, 0, 0) @[core.scala 442:88]
      node _extnMResponse_result_quotient32_T_4 = xor(_extnMResponse_result_quotient32_T_1, _extnMResponse_result_quotient32_T_3) @[core.scala 442:61]
      node _extnMResponse_result_quotient32_T_5 = andr(division.quotient) @[core.scala 442:118]
      node _extnMResponse_result_quotient32_T_6 = eq(_extnMResponse_result_quotient32_T_5, UInt<1>("h0")) @[core.scala 442:99]
      node _extnMResponse_result_quotient32_T_7 = and(_extnMResponse_result_quotient32_T_4, _extnMResponse_result_quotient32_T_6) @[core.scala 442:96]
      node _extnMResponse_result_quotient32_T_8 = sub(UInt<1>("h0"), division.quotient) @[core.scala 442:125]
      node _extnMResponse_result_quotient32_T_9 = tail(_extnMResponse_result_quotient32_T_8, 1) @[core.scala 442:125]
      node _extnMResponse_result_quotient32_T_10 = bits(_extnMResponse_result_quotient32_T_9, 31, 0) @[core.scala 442:145]
      node _extnMResponse_result_quotient32_T_11 = bits(division.quotient, 31, 0) @[core.scala 442:171]
      node extnMResponse_result_quotient32 = mux(_extnMResponse_result_quotient32_T_7, _extnMResponse_result_quotient32_T_10, _extnMResponse_result_quotient32_T_11) @[core.scala 442:27]
      node _extnMResponse_result_remainder64Unsigned_T = bits(division.remainder, 64, 64) @[core.scala 443:55]
      node _extnMResponse_result_remainder64Unsigned_T_1 = bits(_extnMResponse_result_remainder64Unsigned_T, 0, 0) @[core.scala 443:60]
      node _extnMResponse_result_remainder64Unsigned_T_2 = add(division.remainder, division.divisor) @[core.scala 443:87]
      node _extnMResponse_result_remainder64Unsigned_T_3 = tail(_extnMResponse_result_remainder64Unsigned_T_2, 1) @[core.scala 443:87]
      node extnMResponse_result_remainder64Unsigned = mux(_extnMResponse_result_remainder64Unsigned_T_1, _extnMResponse_result_remainder64Unsigned_T_3, division.remainder) @[core.scala 443:36]
      node _extnMResponse_result_remainder32Signed_T = bits(division.request.rs1, 31, 31) @[core.scala 444:56]
      node _extnMResponse_result_remainder32Signed_T_1 = bits(_extnMResponse_result_remainder32Signed_T, 0, 0) @[core.scala 444:61]
      node _extnMResponse_result_remainder32Signed_T_2 = sub(UInt<1>("h0"), extnMResponse_result_remainder64Unsigned) @[core.scala 444:70]
      node _extnMResponse_result_remainder32Signed_T_3 = tail(_extnMResponse_result_remainder32Signed_T_2, 1) @[core.scala 444:70]
      node extnMResponse_result_remainder32Signed = mux(_extnMResponse_result_remainder32Signed_T_1, _extnMResponse_result_remainder32Signed_T_3, extnMResponse_result_remainder64Unsigned) @[core.scala 444:34]
      node _extnMResponse_result_T_37 = bits(division.request.rs1, 63, 63) @[core.scala 447:32]
      node _extnMResponse_result_T_38 = bits(_extnMResponse_result_T_37, 0, 0) @[core.scala 447:37]
      node _extnMResponse_result_T_39 = bits(division.request.rs2, 63, 63) @[core.scala 447:66]
      node _extnMResponse_result_T_40 = bits(_extnMResponse_result_T_39, 0, 0) @[core.scala 447:71]
      node _extnMResponse_result_T_41 = xor(_extnMResponse_result_T_38, _extnMResponse_result_T_40) @[core.scala 447:44]
      node _extnMResponse_result_T_42 = andr(division.quotient) @[core.scala 447:101]
      node _extnMResponse_result_T_43 = eq(_extnMResponse_result_T_42, UInt<1>("h0")) @[core.scala 447:82]
      node _extnMResponse_result_T_44 = and(_extnMResponse_result_T_41, _extnMResponse_result_T_43) @[core.scala 447:79]
      node _extnMResponse_result_T_45 = sub(UInt<1>("h0"), division.quotient) @[core.scala 447:107]
      node _extnMResponse_result_T_46 = tail(_extnMResponse_result_T_45, 1) @[core.scala 447:107]
      node _extnMResponse_result_T_47 = mux(_extnMResponse_result_T_44, _extnMResponse_result_T_46, division.quotient) @[core.scala 447:10]
      node _extnMResponse_result_T_48 = bits(division.request.rs1, 63, 63) @[core.scala 449:32]
      node _extnMResponse_result_T_49 = bits(_extnMResponse_result_T_48, 0, 0) @[core.scala 449:37]
      node _extnMResponse_result_T_50 = sub(UInt<1>("h0"), extnMResponse_result_remainder64Unsigned) @[core.scala 449:46]
      node _extnMResponse_result_T_51 = tail(_extnMResponse_result_T_50, 1) @[core.scala 449:46]
      node _extnMResponse_result_T_52 = mux(_extnMResponse_result_T_49, _extnMResponse_result_T_51, extnMResponse_result_remainder64Unsigned) @[core.scala 449:10]
      node _extnMResponse_result_T_53 = bits(extnMResponse_result_quotient32, 31, 31) @[core.scala 451:30]
      node _extnMResponse_result_T_54 = bits(_extnMResponse_result_T_53, 0, 0) @[Bitwise.scala 77:15]
      node _extnMResponse_result_T_55 = mux(_extnMResponse_result_T_54, UInt<32>("hffffffff"), UInt<32>("h0")) @[Bitwise.scala 77:12]
      node _extnMResponse_result_T_56 = bits(extnMResponse_result_quotient32, 31, 0) @[core.scala 451:47]
      node _extnMResponse_result_T_57 = cat(_extnMResponse_result_T_55, _extnMResponse_result_T_56) @[Cat.scala 33:92]
      node _extnMResponse_result_T_58 = bits(division.quotient, 31, 31) @[core.scala 452:37]
      node _extnMResponse_result_T_59 = bits(_extnMResponse_result_T_58, 0, 0) @[Bitwise.scala 77:15]
      node _extnMResponse_result_T_60 = mux(_extnMResponse_result_T_59, UInt<32>("hffffffff"), UInt<32>("h0")) @[Bitwise.scala 77:12]
      node _extnMResponse_result_T_61 = bits(division.quotient, 31, 0) @[core.scala 452:61]
      node _extnMResponse_result_T_62 = cat(_extnMResponse_result_T_60, _extnMResponse_result_T_61) @[Cat.scala 33:92]
      node _extnMResponse_result_T_63 = bits(extnMResponse_result_remainder32Signed, 31, 31) @[core.scala 453:37]
      node _extnMResponse_result_T_64 = bits(_extnMResponse_result_T_63, 0, 0) @[Bitwise.scala 77:15]
      node _extnMResponse_result_T_65 = mux(_extnMResponse_result_T_64, UInt<32>("hffffffff"), UInt<32>("h0")) @[Bitwise.scala 77:12]
      node _extnMResponse_result_T_66 = bits(extnMResponse_result_remainder32Signed, 31, 0) @[core.scala 454:26]
      node _extnMResponse_result_T_67 = cat(_extnMResponse_result_T_65, _extnMResponse_result_T_66) @[Cat.scala 33:92]
      node _extnMResponse_result_T_68 = bits(extnMResponse_result_remainder64Unsigned, 31, 31) @[core.scala 455:39]
      node _extnMResponse_result_T_69 = bits(_extnMResponse_result_T_68, 0, 0) @[Bitwise.scala 77:15]
      node _extnMResponse_result_T_70 = mux(_extnMResponse_result_T_69, UInt<32>("hffffffff"), UInt<32>("h0")) @[Bitwise.scala 77:12]
      node _extnMResponse_result_T_71 = bits(extnMResponse_result_remainder64Unsigned, 31, 0) @[core.scala 456:28]
      node _extnMResponse_result_T_72 = cat(_extnMResponse_result_T_70, _extnMResponse_result_T_71) @[Cat.scala 33:92]
      wire _extnMResponse_result_WIRE_1 : UInt<65>[8] @[core.scala 446:14]
      _extnMResponse_result_WIRE_1[0] <= _extnMResponse_result_T_47 @[core.scala 446:14]
      _extnMResponse_result_WIRE_1[1] <= division.quotient @[core.scala 446:14]
      _extnMResponse_result_WIRE_1[2] <= _extnMResponse_result_T_52 @[core.scala 446:14]
      _extnMResponse_result_WIRE_1[3] <= extnMResponse_result_remainder64Unsigned @[core.scala 446:14]
      _extnMResponse_result_WIRE_1[4] <= _extnMResponse_result_T_57 @[core.scala 446:14]
      _extnMResponse_result_WIRE_1[5] <= _extnMResponse_result_T_62 @[core.scala 446:14]
      _extnMResponse_result_WIRE_1[6] <= _extnMResponse_result_T_67 @[core.scala 446:14]
      _extnMResponse_result_WIRE_1[7] <= _extnMResponse_result_T_72 @[core.scala 446:14]
      node _extnMResponse_result_T_73 = bits(division.request.instruction, 3, 3) @[core.scala 457:39]
      node _extnMResponse_result_T_74 = bits(division.request.instruction, 13, 12) @[core.scala 457:72]
      node _extnMResponse_result_T_75 = cat(_extnMResponse_result_T_73, _extnMResponse_result_T_74) @[Cat.scala 33:92]
      extnMResponse.result <= _extnMResponse_result_WIRE_1[_extnMResponse_result_T_75] @[core.scala 441:26]
      extnMResponse.robAddr <= division.request.robAddr @[core.scala 459:27]
      extnMResponse.valid <= division.request.valid @[core.scala 460:25]
      extnResponseInstruction <= division.request.instruction @[core.scala 461:29]
      division.request.valid <= UInt<1>("h0") @[core.scala 462:28]
      when branchOps.valid : @[core.scala 463:27]
        node _T_106 = and(division.request.branchMask, branchOps.branchMask) @[core.scala 464:41]
        node _T_107 = orr(_T_106) @[core.scala 464:65]
        node _T_108 = eq(branchOps.passed, UInt<1>("h0")) @[core.scala 464:72]
        node _T_109 = and(_T_107, _T_108) @[core.scala 464:69]
        when _T_109 : @[core.scala 464:91]
          extnMResponse.valid <= UInt<1>("h0") @[core.scala 464:113]
    when branchOps.valid : @[core.scala 468:25]
      when extnMRequest.valid : @[core.scala 469:30]
        node _T_110 = and(extnMRequest.branchMask, branchOps.branchMask) @[core.scala 470:38]
        node _T_111 = orr(_T_110) @[core.scala 470:62]
        when _T_111 : @[core.scala 470:67]
          node _division_request_branchMask_T = xor(extnMRequest.branchMask, branchOps.branchMask) @[core.scala 470:124]
          division.request.branchMask <= _division_request_branchMask_T @[core.scala 470:97]
        node _T_112 = eq(branchOps.passed, UInt<1>("h0")) @[core.scala 471:12]
        node _T_113 = and(extnMRequest.branchMask, branchOps.branchMask) @[core.scala 471:58]
        node _T_114 = orr(_T_113) @[core.scala 471:82]
        node _T_115 = and(_T_112, _T_114) @[core.scala 471:30]
        when _T_115 : @[core.scala 471:87]
          division.request.valid <= UInt<1>("h0") @[core.scala 471:112]
      node _T_116 = and(division.request.branchMask, branchOps.branchMask) @[core.scala 473:40]
      node _T_117 = orr(_T_116) @[core.scala 473:64]
      when _T_117 : @[core.scala 473:69]
        node _division_request_branchMask_T_1 = xor(division.request.branchMask, branchOps.branchMask) @[core.scala 473:130]
        division.request.branchMask <= _division_request_branchMask_T_1 @[core.scala 473:99]
      node _T_118 = eq(branchOps.passed, UInt<1>("h0")) @[core.scala 474:10]
      node _T_119 = and(division.request.branchMask, branchOps.branchMask) @[core.scala 474:60]
      node _T_120 = orr(_T_119) @[core.scala 474:84]
      node _T_121 = and(_T_118, _T_120) @[core.scala 474:28]
      when _T_121 : @[core.scala 474:89]
        division.request.valid <= UInt<1>("h0") @[core.scala 474:114]
    fwdBuffers[0] <= fwdFrom_0 @[core.scala 479:64]
    fwdBuffers[1] <= fwdFrom_1 @[core.scala 479:64]
    wire _branchPCs_WIRE : { valid : UInt<1>, pc : UInt<64>, branchMask : UInt<5>}[4] @[core.scala 489:34]
    _branchPCs_WIRE[0].branchMask is invalid @[core.scala 489:34]
    _branchPCs_WIRE[0].pc is invalid @[core.scala 489:34]
    _branchPCs_WIRE[0].valid <= UInt<1>("h0") @[core.scala 489:34]
    _branchPCs_WIRE[1].branchMask is invalid @[core.scala 489:34]
    _branchPCs_WIRE[1].pc is invalid @[core.scala 489:34]
    _branchPCs_WIRE[1].valid <= UInt<1>("h0") @[core.scala 489:34]
    _branchPCs_WIRE[2].branchMask is invalid @[core.scala 489:34]
    _branchPCs_WIRE[2].pc is invalid @[core.scala 489:34]
    _branchPCs_WIRE[2].valid <= UInt<1>("h0") @[core.scala 489:34]
    _branchPCs_WIRE[3].branchMask is invalid @[core.scala 489:34]
    _branchPCs_WIRE[3].pc is invalid @[core.scala 489:34]
    _branchPCs_WIRE[3].valid <= UInt<1>("h0") @[core.scala 489:34]
    reg branchPCs : { valid : UInt<1>, pc : UInt<64>, branchMask : UInt<5>}[4], clock with :
      reset => (reset, _branchPCs_WIRE) @[core.scala 489:26]
    wire _predictedPCs_WIRE : { valid : UInt<1>, pc : UInt<64>}[4] @[core.scala 496:37]
    _predictedPCs_WIRE[0].pc is invalid @[core.scala 496:37]
    _predictedPCs_WIRE[0].valid <= UInt<1>("h0") @[core.scala 496:37]
    _predictedPCs_WIRE[1].pc is invalid @[core.scala 496:37]
    _predictedPCs_WIRE[1].valid <= UInt<1>("h0") @[core.scala 496:37]
    _predictedPCs_WIRE[2].pc is invalid @[core.scala 496:37]
    _predictedPCs_WIRE[2].valid <= UInt<1>("h0") @[core.scala 496:37]
    _predictedPCs_WIRE[3].pc is invalid @[core.scala 496:37]
    _predictedPCs_WIRE[3].valid <= UInt<1>("h0") @[core.scala 496:37]
    reg predictedPCs : { valid : UInt<1>, pc : UInt<64>}[4], clock with :
      reset => (reset, _predictedPCs_WIRE) @[core.scala 496:29]
    wire _branchInstruction_WIRE : { valid : UInt<1>, rs1 : UInt<64>, rs2 : UInt<64>, robAddr : UInt<4>, branchMask : UInt<5>, instruction : UInt<32>, immediate : UInt<64>}
    _branchInstruction_WIRE.immediate is invalid
    _branchInstruction_WIRE.instruction is invalid
    _branchInstruction_WIRE.branchMask is invalid
    _branchInstruction_WIRE.robAddr is invalid
    _branchInstruction_WIRE.rs2 is invalid
    _branchInstruction_WIRE.rs1 is invalid
    _branchInstruction_WIRE.valid <= UInt<1>("h0")
    reg branchInstruction : { valid : UInt<1>, rs1 : UInt<64>, rs2 : UInt<64>, robAddr : UInt<4>, branchMask : UInt<5>, instruction : UInt<32>, immediate : UInt<64>}, clock with :
      reset => (reset, _branchInstruction_WIRE) @[core.scala 501:34]
    node _branchInstruction_immediate_T = bits(prf.toExec.instruction, 31, 31) @[core.scala 516:31]
    node _branchInstruction_immediate_T_1 = bits(_branchInstruction_immediate_T, 0, 0) @[Bitwise.scala 77:15]
    node _branchInstruction_immediate_T_2 = mux(_branchInstruction_immediate_T_1, UInt<52>("hfffffffffffff"), UInt<52>("h0")) @[Bitwise.scala 77:12]
    node _branchInstruction_immediate_T_3 = bits(prf.toExec.instruction, 7, 7) @[core.scala 516:49]
    node _branchInstruction_immediate_T_4 = bits(prf.toExec.instruction, 30, 25) @[core.scala 516:65]
    node _branchInstruction_immediate_T_5 = bits(prf.toExec.instruction, 11, 8) @[core.scala 516:86]
    node branchInstruction_immediate_lo = cat(_branchInstruction_immediate_T_5, UInt<1>("h0")) @[Cat.scala 33:92]
    node branchInstruction_immediate_hi_hi = cat(_branchInstruction_immediate_T_2, _branchInstruction_immediate_T_3) @[Cat.scala 33:92]
    node branchInstruction_immediate_hi = cat(branchInstruction_immediate_hi_hi, _branchInstruction_immediate_T_4) @[Cat.scala 33:92]
    node _branchInstruction_immediate_T_6 = cat(branchInstruction_immediate_hi, branchInstruction_immediate_lo) @[Cat.scala 33:92]
    node _branchInstruction_immediate_T_7 = bits(prf.toExec.instruction, 31, 31) @[core.scala 517:31]
    node _branchInstruction_immediate_T_8 = bits(_branchInstruction_immediate_T_7, 0, 0) @[Bitwise.scala 77:15]
    node _branchInstruction_immediate_T_9 = mux(_branchInstruction_immediate_T_8, UInt<52>("hfffffffffffff"), UInt<52>("h0")) @[Bitwise.scala 77:12]
    node _branchInstruction_immediate_T_10 = bits(prf.toExec.instruction, 31, 20) @[core.scala 517:49]
    node _branchInstruction_immediate_T_11 = cat(_branchInstruction_immediate_T_9, _branchInstruction_immediate_T_10) @[Cat.scala 33:92]
    node _branchInstruction_immediate_T_12 = bits(prf.toExec.instruction, 31, 31) @[core.scala 519:31]
    node _branchInstruction_immediate_T_13 = bits(_branchInstruction_immediate_T_12, 0, 0) @[Bitwise.scala 77:15]
    node _branchInstruction_immediate_T_14 = mux(_branchInstruction_immediate_T_13, UInt<44>("hfffffffffff"), UInt<44>("h0")) @[Bitwise.scala 77:12]
    node _branchInstruction_immediate_T_15 = bits(prf.toExec.instruction, 19, 12) @[core.scala 519:49]
    node _branchInstruction_immediate_T_16 = bits(prf.toExec.instruction, 20, 20) @[core.scala 519:70]
    node _branchInstruction_immediate_T_17 = bits(prf.toExec.instruction, 30, 21) @[core.scala 519:87]
    node branchInstruction_immediate_lo_1 = cat(_branchInstruction_immediate_T_17, UInt<1>("h0")) @[Cat.scala 33:92]
    node branchInstruction_immediate_hi_hi_1 = cat(_branchInstruction_immediate_T_14, _branchInstruction_immediate_T_15) @[Cat.scala 33:92]
    node branchInstruction_immediate_hi_1 = cat(branchInstruction_immediate_hi_hi_1, _branchInstruction_immediate_T_16) @[Cat.scala 33:92]
    node _branchInstruction_immediate_T_18 = cat(branchInstruction_immediate_hi_1, branchInstruction_immediate_lo_1) @[Cat.scala 33:92]
    wire _branchInstruction_immediate_WIRE : UInt<64>[4] @[core.scala 515:12]
    _branchInstruction_immediate_WIRE[0] <= _branchInstruction_immediate_T_6 @[core.scala 515:12]
    _branchInstruction_immediate_WIRE[1] <= _branchInstruction_immediate_T_11 @[core.scala 515:12]
    _branchInstruction_immediate_WIRE[2] <= UInt<1>("h0") @[core.scala 515:12]
    _branchInstruction_immediate_WIRE[3] <= _branchInstruction_immediate_T_18 @[core.scala 515:12]
    node _branchInstruction_immediate_T_19 = bits(prf.toExec.instruction, 3, 2) @[core.scala 520:29]
    branchInstruction.immediate <= _branchInstruction_immediate_WIRE[_branchInstruction_immediate_T_19] @[core.scala 512:31]
    wire _branchEvals_WIRE : { valid : UInt<1>, passed : UInt<1>, branchMask : UInt<5>, robAddr : UInt<4>, nextPC : UInt<64>}
    _branchEvals_WIRE.nextPC is invalid
    _branchEvals_WIRE.robAddr is invalid
    _branchEvals_WIRE.branchMask is invalid
    _branchEvals_WIRE.passed is invalid
    _branchEvals_WIRE.valid <= UInt<1>("h0")
    reg branchEvals : { valid : UInt<1>, passed : UInt<1>, branchMask : UInt<5>, robAddr : UInt<4>, nextPC : UInt<64>}, clock with :
      reset => (reset, _branchEvals_WIRE) @[core.scala 523:28]
    branchOps.valid <= branchEvals.valid @[core.scala 530:19]
    branchOps.passed <= branchEvals.passed @[core.scala 531:20]
    branchOps.branchMask <= branchEvals.branchMask @[core.scala 532:24]
    node _branchInstruction_valid_T = bits(prf.toExec.instruction, 6, 4) @[core.scala 534:73]
    node _branchInstruction_valid_T_1 = eq(_branchInstruction_valid_T, UInt<3>("h6")) @[core.scala 534:80]
    node _branchInstruction_valid_T_2 = and(prf.toExec.valid, _branchInstruction_valid_T_1) @[core.scala 534:47]
    branchInstruction.valid <= _branchInstruction_valid_T_2 @[core.scala 534:27]
    node _T_122 = bits(prf.toExec.instruction, 6, 5) @[core.scala 535:51]
    node _T_123 = eq(_T_122, UInt<2>("h3")) @[core.scala 535:58]
    node _T_124 = and(prf.toExec.valid, _T_123) @[core.scala 535:25]
    when _T_124 : @[core.scala 535:71]
      node _branchInstruction_rs1_T = eq(fwdFrom_0.prfDest, prf.toExec.rs1Addr) @[core.scala 537:52]
      node _branchInstruction_rs1_T_1 = and(fwdFrom_0.valid, _branchInstruction_rs1_T) @[core.scala 537:36]
      node _branchInstruction_rs1_T_2 = eq(fwdFrom_1.prfDest, prf.toExec.rs1Addr) @[core.scala 537:52]
      node _branchInstruction_rs1_T_3 = and(fwdFrom_1.valid, _branchInstruction_rs1_T_2) @[core.scala 537:36]
      node _branchInstruction_rs1_T_4 = eq(fwdFrom_2.prfDest, prf.toExec.rs1Addr) @[core.scala 537:52]
      node _branchInstruction_rs1_T_5 = and(fwdFrom_2.valid, _branchInstruction_rs1_T_4) @[core.scala 537:36]
      node _branchInstruction_rs1_T_6 = mux(_branchInstruction_rs1_T_5, fwdFrom_2.result, prf.toExec.rs1Data) @[Mux.scala 101:16]
      node _branchInstruction_rs1_T_7 = mux(_branchInstruction_rs1_T_3, fwdFrom_1.result, _branchInstruction_rs1_T_6) @[Mux.scala 101:16]
      node _branchInstruction_rs1_T_8 = mux(_branchInstruction_rs1_T_1, fwdFrom_0.result, _branchInstruction_rs1_T_7) @[Mux.scala 101:16]
      branchInstruction.rs1 <= _branchInstruction_rs1_T_8 @[core.scala 536:27]
      node _branchInstruction_rs2_T = eq(fwdFrom_0.prfDest, prf.toExec.rs2Addr) @[core.scala 540:52]
      node _branchInstruction_rs2_T_1 = and(fwdFrom_0.valid, _branchInstruction_rs2_T) @[core.scala 540:36]
      node _branchInstruction_rs2_T_2 = eq(fwdFrom_1.prfDest, prf.toExec.rs2Addr) @[core.scala 540:52]
      node _branchInstruction_rs2_T_3 = and(fwdFrom_1.valid, _branchInstruction_rs2_T_2) @[core.scala 540:36]
      node _branchInstruction_rs2_T_4 = eq(fwdFrom_2.prfDest, prf.toExec.rs2Addr) @[core.scala 540:52]
      node _branchInstruction_rs2_T_5 = and(fwdFrom_2.valid, _branchInstruction_rs2_T_4) @[core.scala 540:36]
      node _branchInstruction_rs2_T_6 = mux(_branchInstruction_rs2_T_5, fwdFrom_2.result, prf.toExec.rs2Data) @[Mux.scala 101:16]
      node _branchInstruction_rs2_T_7 = mux(_branchInstruction_rs2_T_3, fwdFrom_1.result, _branchInstruction_rs2_T_6) @[Mux.scala 101:16]
      node _branchInstruction_rs2_T_8 = mux(_branchInstruction_rs2_T_1, fwdFrom_0.result, _branchInstruction_rs2_T_7) @[Mux.scala 101:16]
      branchInstruction.rs2 <= _branchInstruction_rs2_T_8 @[core.scala 539:27]
      branchInstruction.branchMask <= prf.toExec.branchmask @[core.scala 542:34]
      branchInstruction.robAddr <= prf.toExec.robAddr @[core.scala 543:31]
      branchInstruction.instruction <= prf.toExec.instruction @[core.scala 544:35]
    when branchOps.valid : @[core.scala 547:25]
      node _T_125 = and(branchOps.branchMask, prf.toExec.branchmask) @[core.scala 548:32]
      node _T_126 = orr(_T_125) @[core.scala 548:57]
      when _T_126 : @[core.scala 548:62]
        node _branchInstruction_branchMask_T = xor(prf.toExec.branchmask, branchOps.branchMask) @[core.scala 549:61]
        branchInstruction.branchMask <= _branchInstruction_branchMask_T @[core.scala 549:36]
      node _T_127 = eq(branchOps.passed, UInt<1>("h0")) @[core.scala 551:10]
      node _T_128 = and(branchOps.branchMask, prf.toExec.branchmask) @[core.scala 551:53]
      node _T_129 = orr(_T_128) @[core.scala 551:78]
      node _T_130 = and(_T_127, _T_129) @[core.scala 551:28]
      when _T_130 : @[core.scala 551:83]
        branchInstruction.valid <= UInt<1>("h0") @[core.scala 552:31]
    node _coherentLoadInvalid_T = eq(memAccess.loadCommit.state, UInt<1>("h0")) @[core.scala 557:29]
    node _coherentLoadInvalid_T_1 = and(_coherentLoadInvalid_T, memAccess.loadCommit.valid) @[core.scala 557:57]
    node _coherentLoadInvalid_T_2 = and(_coherentLoadInvalid_T_1, rob.commit.ready) @[core.scala 557:87]
    node _coherentLoadInvalid_T_3 = bits(rob.commit.instruction, 6, 2) @[core.scala 557:132]
    node _coherentLoadInvalid_T_4 = orr(_coherentLoadInvalid_T_3) @[core.scala 557:138]
    node _coherentLoadInvalid_T_5 = eq(_coherentLoadInvalid_T_4, UInt<1>("h0")) @[core.scala 557:141]
    node coherentLoadInvalid = and(_coherentLoadInvalid_T_2, _coherentLoadInvalid_T_5) @[core.scala 557:107]
    node _branchEvals_valid_T = mux(coherentLoadInvalid, UInt<1>("h1"), branchInstruction.valid) @[core.scala 560:27]
    branchEvals.valid <= _branchEvals_valid_T @[core.scala 560:21]
    node _branchEvals_robAddr_T = sub(rob.commit.robAddr, UInt<1>("h1")) @[core.scala 561:68]
    node _branchEvals_robAddr_T_1 = tail(_branchEvals_robAddr_T, 1) @[core.scala 561:68]
    node _branchEvals_robAddr_T_2 = mux(coherentLoadInvalid, _branchEvals_robAddr_T_1, branchInstruction.robAddr) @[core.scala 561:29]
    branchEvals.robAddr <= _branchEvals_robAddr_T_2 @[core.scala 561:23]
    node _branchEvals_branchMask_T = mux(coherentLoadInvalid, UInt<5>("h10"), branchPCs[0].branchMask) @[core.scala 562:32]
    branchEvals.branchMask <= _branchEvals_branchMask_T @[core.scala 562:26]
    when branchOps.valid : @[core.scala 564:25]
      node _T_131 = eq(branchOps.passed, UInt<1>("h0")) @[core.scala 566:10]
      when _T_131 : @[core.scala 566:29]
        branchEvals.valid <= UInt<1>("h0") @[core.scala 567:25]
    node _branchTaken_rs1_T = bits(branchInstruction.instruction, 19, 15) @[core.scala 572:48]
    node _branchTaken_rs1_T_1 = orr(_branchTaken_rs1_T) @[core.scala 572:57]
    node branchTaken_rs1 = mux(_branchTaken_rs1_T_1, branchInstruction.rs1, UInt<1>("h0")) @[core.scala 572:18]
    node _branchTaken_rs2_T = bits(branchInstruction.instruction, 24, 20) @[core.scala 573:48]
    node _branchTaken_rs2_T_1 = orr(_branchTaken_rs2_T) @[core.scala 573:57]
    node branchTaken_rs2 = mux(_branchTaken_rs2_T_1, branchInstruction.rs2, UInt<1>("h0")) @[core.scala 573:18]
    node _branchTaken_conditionEval_T = eq(branchTaken_rs1, branchTaken_rs2) @[core.scala 577:41]
    node _branchTaken_conditionEval_T_1 = eq(branchTaken_rs1, branchTaken_rs2) @[core.scala 577:54]
    node _branchTaken_conditionEval_T_2 = asSInt(branchTaken_rs1) @[core.scala 577:67]
    node _branchTaken_conditionEval_T_3 = asSInt(branchTaken_rs2) @[core.scala 577:80]
    node _branchTaken_conditionEval_T_4 = lt(_branchTaken_conditionEval_T_2, _branchTaken_conditionEval_T_3) @[core.scala 577:74]
    node _branchTaken_conditionEval_T_5 = lt(branchTaken_rs1, branchTaken_rs2) @[core.scala 577:92]
    node _branchTaken_conditionEval_T_6 = eq(_branchTaken_conditionEval_T, UInt<1>("h0")) @[core.scala 577:125]
    node _branchTaken_conditionEval_T_7 = eq(_branchTaken_conditionEval_T_1, UInt<1>("h0")) @[core.scala 577:125]
    node _branchTaken_conditionEval_T_8 = eq(_branchTaken_conditionEval_T_4, UInt<1>("h0")) @[core.scala 577:125]
    node _branchTaken_conditionEval_T_9 = eq(_branchTaken_conditionEval_T_5, UInt<1>("h0")) @[core.scala 577:125]
    wire branchTaken_conditionEval : UInt<1>[8] @[core.scala 577:32]
    branchTaken_conditionEval[0] <= _branchTaken_conditionEval_T @[core.scala 577:32]
    branchTaken_conditionEval[1] <= _branchTaken_conditionEval_T_6 @[core.scala 577:32]
    branchTaken_conditionEval[2] <= _branchTaken_conditionEval_T_1 @[core.scala 577:32]
    branchTaken_conditionEval[3] <= _branchTaken_conditionEval_T_7 @[core.scala 577:32]
    branchTaken_conditionEval[4] <= _branchTaken_conditionEval_T_4 @[core.scala 577:32]
    branchTaken_conditionEval[5] <= _branchTaken_conditionEval_T_8 @[core.scala 577:32]
    branchTaken_conditionEval[6] <= _branchTaken_conditionEval_T_5 @[core.scala 577:32]
    branchTaken_conditionEval[7] <= _branchTaken_conditionEval_T_9 @[core.scala 577:32]
    node _branchTaken_T = bits(branchInstruction.instruction, 14, 12) @[core.scala 579:30]
    node _nextCorrectPC_conditionEval_T = eq(branchInstruction.rs1, branchInstruction.rs2) @[core.scala 597:11]
    node _nextCorrectPC_conditionEval_T_1 = neq(branchInstruction.rs1, branchInstruction.rs2) @[core.scala 598:11]
    node _nextCorrectPC_conditionEval_T_2 = asSInt(branchInstruction.rs1) @[core.scala 601:11]
    node _nextCorrectPC_conditionEval_T_3 = asSInt(branchInstruction.rs2) @[core.scala 601:24]
    node _nextCorrectPC_conditionEval_T_4 = lt(_nextCorrectPC_conditionEval_T_2, _nextCorrectPC_conditionEval_T_3) @[core.scala 601:18]
    node _nextCorrectPC_conditionEval_T_5 = asSInt(branchInstruction.rs1) @[core.scala 602:11]
    node _nextCorrectPC_conditionEval_T_6 = asSInt(branchInstruction.rs2) @[core.scala 602:25]
    node _nextCorrectPC_conditionEval_T_7 = geq(_nextCorrectPC_conditionEval_T_5, _nextCorrectPC_conditionEval_T_6) @[core.scala 602:18]
    node _nextCorrectPC_conditionEval_T_8 = lt(branchInstruction.rs1, branchInstruction.rs2) @[core.scala 603:11]
    node _nextCorrectPC_conditionEval_T_9 = geq(branchInstruction.rs1, branchInstruction.rs2) @[core.scala 604:11]
    wire nextCorrectPC_conditionEval : UInt<1>[8] @[core.scala 596:32]
    nextCorrectPC_conditionEval[0] <= _nextCorrectPC_conditionEval_T @[core.scala 596:32]
    nextCorrectPC_conditionEval[1] <= _nextCorrectPC_conditionEval_T_1 @[core.scala 596:32]
    nextCorrectPC_conditionEval[2] <= UInt<1>("h0") @[core.scala 596:32]
    nextCorrectPC_conditionEval[3] <= UInt<1>("h0") @[core.scala 596:32]
    nextCorrectPC_conditionEval[4] <= _nextCorrectPC_conditionEval_T_4 @[core.scala 596:32]
    nextCorrectPC_conditionEval[5] <= _nextCorrectPC_conditionEval_T_7 @[core.scala 596:32]
    nextCorrectPC_conditionEval[6] <= _nextCorrectPC_conditionEval_T_8 @[core.scala 596:32]
    nextCorrectPC_conditionEval[7] <= _nextCorrectPC_conditionEval_T_9 @[core.scala 596:32]
    node _nextCorrectPC_T = bits(branchInstruction.instruction, 14, 12) @[core.scala 608:36]
    node _nextCorrectPC_T_1 = add(branchPCs[0].pc, branchInstruction.immediate) @[core.scala 608:50]
    node _nextCorrectPC_T_2 = tail(_nextCorrectPC_T_1, 1) @[core.scala 608:50]
    node _nextCorrectPC_T_3 = add(branchPCs[0].pc, UInt<3>("h4")) @[core.scala 608:66]
    node _nextCorrectPC_T_4 = tail(_nextCorrectPC_T_3, 1) @[core.scala 608:66]
    node _nextCorrectPC_T_5 = mux(nextCorrectPC_conditionEval[_nextCorrectPC_T], _nextCorrectPC_T_2, _nextCorrectPC_T_4) @[core.scala 608:10]
    node _nextCorrectPC_T_6 = add(branchInstruction.rs1, branchInstruction.immediate) @[core.scala 609:11]
    node _nextCorrectPC_T_7 = tail(_nextCorrectPC_T_6, 1) @[core.scala 609:11]
    node _nextCorrectPC_T_8 = add(branchPCs[0].pc, branchInstruction.immediate) @[core.scala 611:10]
    node _nextCorrectPC_T_9 = tail(_nextCorrectPC_T_8, 1) @[core.scala 611:10]
    wire _nextCorrectPC_WIRE : UInt<64>[4] @[core.scala 607:12]
    _nextCorrectPC_WIRE[0] <= _nextCorrectPC_T_5 @[core.scala 607:12]
    _nextCorrectPC_WIRE[1] <= _nextCorrectPC_T_7 @[core.scala 607:12]
    _nextCorrectPC_WIRE[2] <= UInt<1>("h0") @[core.scala 607:12]
    _nextCorrectPC_WIRE[3] <= _nextCorrectPC_T_9 @[core.scala 607:12]
    node _nextCorrectPC_T_10 = bits(branchInstruction.instruction, 3, 2) @[core.scala 612:18]
    node _branchEvals_nextPC_T = mux(coherentLoadInvalid, rob.commit.pc, _nextCorrectPC_WIRE[_nextCorrectPC_T_10]) @[core.scala 616:28]
    branchEvals.nextPC <= _branchEvals_nextPC_T @[core.scala 616:22]
    node _branchEvals_passed_T = eq(_nextCorrectPC_WIRE[_nextCorrectPC_T_10], predictedPCs[0].pc) @[core.scala 618:95]
    node _branchEvals_passed_T_1 = and(predictedPCs[0].valid, _branchEvals_passed_T) @[core.scala 618:77]
    node _branchEvals_passed_T_2 = mux(coherentLoadInvalid, UInt<1>("h0"), _branchEvals_passed_T_1) @[core.scala 618:28]
    branchEvals.passed <= _branchEvals_passed_T_2 @[core.scala 618:22]
    node _decode_branchPCs_fired_T = and(branchPCs[0].valid, branchPCs[1].valid) @[core.scala 621:90]
    node _decode_branchPCs_fired_T_1 = and(_decode_branchPCs_fired_T, branchPCs[2].valid) @[core.scala 621:90]
    node _decode_branchPCs_fired_T_2 = and(_decode_branchPCs_fired_T_1, branchPCs[3].valid) @[core.scala 621:90]
    node _decode_branchPCs_fired_T_3 = eq(_decode_branchPCs_fired_T_2, UInt<1>("h0")) @[core.scala 621:55]
    node _decode_branchPCs_fired_T_4 = and(decode.branchPCs.ready, _decode_branchPCs_fired_T_3) @[core.scala 621:52]
    decode.branchPCs.fired <= _decode_branchPCs_fired_T_4 @[core.scala 621:26]
    node _T_132 = and(UInt<1>("h1"), branchPCs[0].valid) @[core.scala 624:46]
    node _T_133 = and(_T_132, branchPCs[1].valid) @[core.scala 624:46]
    node _T_134 = and(_T_133, branchPCs[2].valid) @[core.scala 624:46]
    node _T_135 = and(_T_134, branchPCs[3].valid) @[core.scala 624:46]
    node _T_136 = eq(branchPCs[0].valid, UInt<1>("h0")) @[core.scala 625:70]
    node _T_137 = and(UInt<1>("h1"), _T_136) @[core.scala 625:67]
    when _T_137 : @[core.scala 625:82]
      branchPCs[0].valid <= decode.branchPCs.branchPCReady @[core.scala 626:15]
      branchPCs[0].pc <= decode.branchPCs.branchPC @[core.scala 627:12]
      branchPCs[0].branchMask <= decode.branchPCs.branchMask @[core.scala 628:20]
    node _T_138 = eq(branchPCs[1].valid, UInt<1>("h0")) @[core.scala 625:70]
    node _T_139 = and(_T_132, _T_138) @[core.scala 625:67]
    when _T_139 : @[core.scala 625:82]
      branchPCs[1].valid <= decode.branchPCs.branchPCReady @[core.scala 626:15]
      branchPCs[1].pc <= decode.branchPCs.branchPC @[core.scala 627:12]
      branchPCs[1].branchMask <= decode.branchPCs.branchMask @[core.scala 628:20]
    node _T_140 = eq(branchPCs[2].valid, UInt<1>("h0")) @[core.scala 625:70]
    node _T_141 = and(_T_133, _T_140) @[core.scala 625:67]
    when _T_141 : @[core.scala 625:82]
      branchPCs[2].valid <= decode.branchPCs.branchPCReady @[core.scala 626:15]
      branchPCs[2].pc <= decode.branchPCs.branchPC @[core.scala 627:12]
      branchPCs[2].branchMask <= decode.branchPCs.branchMask @[core.scala 628:20]
    node _T_142 = eq(branchPCs[3].valid, UInt<1>("h0")) @[core.scala 625:70]
    node _T_143 = and(_T_134, _T_142) @[core.scala 625:67]
    when _T_143 : @[core.scala 625:82]
      branchPCs[3].valid <= decode.branchPCs.branchPCReady @[core.scala 626:15]
      branchPCs[3].pc <= decode.branchPCs.branchPC @[core.scala 627:12]
      branchPCs[3].branchMask <= decode.branchPCs.branchMask @[core.scala 628:20]
    node _T_144 = eq(branchOps.passed, UInt<1>("h0")) @[core.scala 630:27]
    node _T_145 = and(branchOps.valid, _T_144) @[core.scala 630:24]
    when _T_145 : @[core.scala 630:46]
      branchPCs[0].valid <= UInt<1>("h0") @[core.scala 631:32]
      branchPCs[1].valid <= UInt<1>("h0") @[core.scala 631:32]
      branchPCs[2].valid <= UInt<1>("h0") @[core.scala 631:32]
      branchPCs[3].valid <= UInt<1>("h0") @[core.scala 631:32]
    else :
      when branchInstruction.valid : @[core.scala 632:39]
        node _T_146 = and(UInt<1>("h1"), branchPCs[0].valid) @[core.scala 633:48]
        node _T_147 = and(_T_146, branchPCs[1].valid) @[core.scala 633:48]
        node _T_148 = and(_T_147, branchPCs[2].valid) @[core.scala 633:48]
        node _T_149 = and(_T_148, branchPCs[3].valid) @[core.scala 633:48]
        wire entry : { valid : UInt<1>, pc : UInt<64>, branchMask : UInt<5>} @[core.scala 635:23]
        node _entry_valid_T = eq(branchPCs[0].valid, UInt<1>("h0")) @[core.scala 636:71]
        node _entry_valid_T_1 = and(_entry_valid_T, UInt<1>("h1")) @[core.scala 636:82]
        node _entry_valid_T_2 = and(decode.branchPCs.branchPCReady, _entry_valid_T_1) @[core.scala 636:67]
        node _entry_valid_T_3 = or(branchPCs[0].valid, _entry_valid_T_2) @[core.scala 636:32]
        entry.valid <= _entry_valid_T_3 @[core.scala 636:19]
        node _entry_pc_T = mux(branchPCs[0].valid, branchPCs[0].pc, decode.branchPCs.branchPC) @[core.scala 637:22]
        entry.pc <= _entry_pc_T @[core.scala 637:16]
        node _entry_branchMask_T = mux(branchPCs[0].valid, branchPCs[0].branchMask, decode.branchPCs.branchMask) @[core.scala 638:30]
        entry.branchMask <= _entry_branchMask_T @[core.scala 638:24]
        wire entry_1 : { valid : UInt<1>, pc : UInt<64>, branchMask : UInt<5>} @[core.scala 635:23]
        node _entry_valid_T_4 = eq(branchPCs[1].valid, UInt<1>("h0")) @[core.scala 636:71]
        node _entry_valid_T_5 = and(_entry_valid_T_4, _T_146) @[core.scala 636:82]
        node _entry_valid_T_6 = and(decode.branchPCs.branchPCReady, _entry_valid_T_5) @[core.scala 636:67]
        node _entry_valid_T_7 = or(branchPCs[1].valid, _entry_valid_T_6) @[core.scala 636:32]
        entry_1.valid <= _entry_valid_T_7 @[core.scala 636:19]
        node _entry_pc_T_1 = mux(branchPCs[1].valid, branchPCs[1].pc, decode.branchPCs.branchPC) @[core.scala 637:22]
        entry_1.pc <= _entry_pc_T_1 @[core.scala 637:16]
        node _entry_branchMask_T_1 = mux(branchPCs[1].valid, branchPCs[1].branchMask, decode.branchPCs.branchMask) @[core.scala 638:30]
        entry_1.branchMask <= _entry_branchMask_T_1 @[core.scala 638:24]
        wire entry_2 : { valid : UInt<1>, pc : UInt<64>, branchMask : UInt<5>} @[core.scala 635:23]
        node _entry_valid_T_8 = eq(branchPCs[2].valid, UInt<1>("h0")) @[core.scala 636:71]
        node _entry_valid_T_9 = and(_entry_valid_T_8, _T_147) @[core.scala 636:82]
        node _entry_valid_T_10 = and(decode.branchPCs.branchPCReady, _entry_valid_T_9) @[core.scala 636:67]
        node _entry_valid_T_11 = or(branchPCs[2].valid, _entry_valid_T_10) @[core.scala 636:32]
        entry_2.valid <= _entry_valid_T_11 @[core.scala 636:19]
        node _entry_pc_T_2 = mux(branchPCs[2].valid, branchPCs[2].pc, decode.branchPCs.branchPC) @[core.scala 637:22]
        entry_2.pc <= _entry_pc_T_2 @[core.scala 637:16]
        node _entry_branchMask_T_2 = mux(branchPCs[2].valid, branchPCs[2].branchMask, decode.branchPCs.branchMask) @[core.scala 638:30]
        entry_2.branchMask <= _entry_branchMask_T_2 @[core.scala 638:24]
        wire entry_3 : { valid : UInt<1>, pc : UInt<64>, branchMask : UInt<5>} @[core.scala 635:23]
        node _entry_valid_T_12 = eq(branchPCs[3].valid, UInt<1>("h0")) @[core.scala 636:71]
        node _entry_valid_T_13 = and(_entry_valid_T_12, _T_148) @[core.scala 636:82]
        node _entry_valid_T_14 = and(decode.branchPCs.branchPCReady, _entry_valid_T_13) @[core.scala 636:67]
        node _entry_valid_T_15 = or(branchPCs[3].valid, _entry_valid_T_14) @[core.scala 636:32]
        entry_3.valid <= _entry_valid_T_15 @[core.scala 636:19]
        node _entry_pc_T_3 = mux(branchPCs[3].valid, branchPCs[3].pc, decode.branchPCs.branchPC) @[core.scala 637:22]
        entry_3.pc <= _entry_pc_T_3 @[core.scala 637:16]
        node _entry_branchMask_T_3 = mux(branchPCs[3].valid, branchPCs[3].branchMask, decode.branchPCs.branchMask) @[core.scala 638:30]
        entry_3.branchMask <= _entry_branchMask_T_3 @[core.scala 638:24]
        branchPCs[0] <= entry_1 @[core.scala 643:40]
        branchPCs[1] <= entry_2 @[core.scala 643:40]
        branchPCs[2] <= entry_3 @[core.scala 643:40]
        branchPCs[3].valid <= UInt<1>("h0") @[core.scala 644:41]
    node _T_150 = and(UInt<1>("h1"), predictedPCs[0].valid) @[core.scala 648:49]
    node _T_151 = and(_T_150, predictedPCs[1].valid) @[core.scala 648:49]
    node _T_152 = and(_T_151, predictedPCs[2].valid) @[core.scala 648:49]
    node _T_153 = and(_T_152, predictedPCs[3].valid) @[core.scala 648:49]
    node _T_154 = eq(predictedPCs[0].valid, UInt<1>("h0")) @[core.scala 649:70]
    node _T_155 = and(UInt<1>("h1"), _T_154) @[core.scala 649:67]
    when _T_155 : @[core.scala 649:82]
      predictedPCs[0].valid <= decode.branchPCs.predictedPCReady @[core.scala 650:15]
      predictedPCs[0].pc <= decode.branchPCs.predictedPC @[core.scala 651:12]
    node _T_156 = eq(predictedPCs[1].valid, UInt<1>("h0")) @[core.scala 649:70]
    node _T_157 = and(_T_150, _T_156) @[core.scala 649:67]
    when _T_157 : @[core.scala 649:82]
      predictedPCs[1].valid <= decode.branchPCs.predictedPCReady @[core.scala 650:15]
      predictedPCs[1].pc <= decode.branchPCs.predictedPC @[core.scala 651:12]
    node _T_158 = eq(predictedPCs[2].valid, UInt<1>("h0")) @[core.scala 649:70]
    node _T_159 = and(_T_151, _T_158) @[core.scala 649:67]
    when _T_159 : @[core.scala 649:82]
      predictedPCs[2].valid <= decode.branchPCs.predictedPCReady @[core.scala 650:15]
      predictedPCs[2].pc <= decode.branchPCs.predictedPC @[core.scala 651:12]
    node _T_160 = eq(predictedPCs[3].valid, UInt<1>("h0")) @[core.scala 649:70]
    node _T_161 = and(_T_152, _T_160) @[core.scala 649:67]
    when _T_161 : @[core.scala 649:82]
      predictedPCs[3].valid <= decode.branchPCs.predictedPCReady @[core.scala 650:15]
      predictedPCs[3].pc <= decode.branchPCs.predictedPC @[core.scala 651:12]
    node _T_162 = eq(branchOps.passed, UInt<1>("h0")) @[core.scala 653:27]
    node _T_163 = and(branchOps.valid, _T_162) @[core.scala 653:24]
    when _T_163 : @[core.scala 653:46]
      predictedPCs[0].valid <= UInt<1>("h0") @[core.scala 654:35]
      predictedPCs[1].valid <= UInt<1>("h0") @[core.scala 654:35]
      predictedPCs[2].valid <= UInt<1>("h0") @[core.scala 654:35]
      predictedPCs[3].valid <= UInt<1>("h0") @[core.scala 654:35]
    else :
      when branchInstruction.valid : @[core.scala 655:39]
        node _T_164 = and(UInt<1>("h1"), predictedPCs[0].valid) @[core.scala 656:51]
        node _T_165 = and(_T_164, predictedPCs[1].valid) @[core.scala 656:51]
        node _T_166 = and(_T_165, predictedPCs[2].valid) @[core.scala 656:51]
        node _T_167 = and(_T_166, predictedPCs[3].valid) @[core.scala 656:51]
        wire entry_4 : { valid : UInt<1>, pc : UInt<64>} @[core.scala 658:23]
        node _entry_valid_T_16 = eq(predictedPCs[0].valid, UInt<1>("h0")) @[core.scala 659:74]
        node _entry_valid_T_17 = and(_entry_valid_T_16, UInt<1>("h1")) @[core.scala 659:85]
        node _entry_valid_T_18 = and(decode.branchPCs.predictedPCReady, _entry_valid_T_17) @[core.scala 659:70]
        node _entry_valid_T_19 = or(predictedPCs[0].valid, _entry_valid_T_18) @[core.scala 659:32]
        entry_4.valid <= _entry_valid_T_19 @[core.scala 659:19]
        node _entry_pc_T_4 = mux(predictedPCs[0].valid, predictedPCs[0].pc, decode.branchPCs.predictedPC) @[core.scala 660:22]
        entry_4.pc <= _entry_pc_T_4 @[core.scala 660:16]
        wire entry_5 : { valid : UInt<1>, pc : UInt<64>} @[core.scala 658:23]
        node _entry_valid_T_20 = eq(predictedPCs[1].valid, UInt<1>("h0")) @[core.scala 659:74]
        node _entry_valid_T_21 = and(_entry_valid_T_20, _T_164) @[core.scala 659:85]
        node _entry_valid_T_22 = and(decode.branchPCs.predictedPCReady, _entry_valid_T_21) @[core.scala 659:70]
        node _entry_valid_T_23 = or(predictedPCs[1].valid, _entry_valid_T_22) @[core.scala 659:32]
        entry_5.valid <= _entry_valid_T_23 @[core.scala 659:19]
        node _entry_pc_T_5 = mux(predictedPCs[1].valid, predictedPCs[1].pc, decode.branchPCs.predictedPC) @[core.scala 660:22]
        entry_5.pc <= _entry_pc_T_5 @[core.scala 660:16]
        wire entry_6 : { valid : UInt<1>, pc : UInt<64>} @[core.scala 658:23]
        node _entry_valid_T_24 = eq(predictedPCs[2].valid, UInt<1>("h0")) @[core.scala 659:74]
        node _entry_valid_T_25 = and(_entry_valid_T_24, _T_165) @[core.scala 659:85]
        node _entry_valid_T_26 = and(decode.branchPCs.predictedPCReady, _entry_valid_T_25) @[core.scala 659:70]
        node _entry_valid_T_27 = or(predictedPCs[2].valid, _entry_valid_T_26) @[core.scala 659:32]
        entry_6.valid <= _entry_valid_T_27 @[core.scala 659:19]
        node _entry_pc_T_6 = mux(predictedPCs[2].valid, predictedPCs[2].pc, decode.branchPCs.predictedPC) @[core.scala 660:22]
        entry_6.pc <= _entry_pc_T_6 @[core.scala 660:16]
        wire entry_7 : { valid : UInt<1>, pc : UInt<64>} @[core.scala 658:23]
        node _entry_valid_T_28 = eq(predictedPCs[3].valid, UInt<1>("h0")) @[core.scala 659:74]
        node _entry_valid_T_29 = and(_entry_valid_T_28, _T_166) @[core.scala 659:85]
        node _entry_valid_T_30 = and(decode.branchPCs.predictedPCReady, _entry_valid_T_29) @[core.scala 659:70]
        node _entry_valid_T_31 = or(predictedPCs[3].valid, _entry_valid_T_30) @[core.scala 659:32]
        entry_7.valid <= _entry_valid_T_31 @[core.scala 659:19]
        node _entry_pc_T_7 = mux(predictedPCs[3].valid, predictedPCs[3].pc, decode.branchPCs.predictedPC) @[core.scala 660:22]
        entry_7.pc <= _entry_pc_T_7 @[core.scala 660:16]
        predictedPCs[0] <= entry_5 @[core.scala 665:40]
        predictedPCs[1] <= entry_6 @[core.scala 665:40]
        predictedPCs[2] <= entry_7 @[core.scala 665:40]
        predictedPCs[3].valid <= UInt<1>("h0") @[core.scala 666:44]
    reg coherentLoadInvalidReg : UInt<1>, clock with :
      reset => (reset, coherentLoadInvalid) @[core.scala 697:39]
    coherentLoadInvalidReg <= coherentLoadInvalid @[core.scala 698:26]
    fetch.branchRes.branchTaken <= branchTaken_conditionEval[_branchTaken_T] @[core.scala 701:31]
    fetch.branchRes.isBranch <= UInt<1>("h1") @[core.scala 702:28]
    fetch.branchRes.pc <= branchPCs[0].pc @[core.scala 703:22]
    fetch.branchRes.pcAfterBrnach <= branchEvals.nextPC @[core.scala 704:33]
    node _fetch_branchRes_fired_T = and(fetch.branchRes.ready, branchEvals.valid) @[core.scala 705:50]
    node _fetch_branchRes_fired_T_1 = eq(coherentLoadInvalidReg, UInt<1>("h0")) @[core.scala 705:74]
    node _fetch_branchRes_fired_T_2 = and(_fetch_branchRes_fired_T, _fetch_branchRes_fired_T_1) @[core.scala 705:71]
    fetch.branchRes.fired <= _fetch_branchRes_fired_T_2 @[core.scala 705:25]
    decode.writeBackResult.PRFDest <= rob.commit.prfDest @[core.scala 707:34]
    decode.writeBackResult.instruction <= rob.commit.instruction @[core.scala 708:38]
    decode.writeBackResult.pc <= rob.commit.pc @[core.scala 709:29]
    node _decode_writeBackResult_rdAddr_T = bits(rob.commit.instruction, 11, 7) @[core.scala 710:58]
    decode.writeBackResult.rdAddr <= _decode_writeBackResult_rdAddr_T @[core.scala 710:33]
    node _decode_writeBackResult_fired_T = bits(rob.commit.instruction, 6, 2) @[core.scala 714:35]
    node _decode_writeBackResult_fired_T_1 = orr(_decode_writeBackResult_fired_T) @[core.scala 714:41]
    node _decode_writeBackResult_fired_T_2 = eq(_decode_writeBackResult_fired_T_1, UInt<1>("h0")) @[core.scala 714:12]
    node _decode_writeBackResult_fired_T_3 = eq(_decode_writeBackResult_fired_T_2, UInt<1>("h0")) @[core.scala 714:44]
    node _decode_writeBackResult_fired_T_4 = eq(coherentLoadInvalid, UInt<1>("h0")) @[core.scala 714:54]
    node _decode_writeBackResult_fired_T_5 = or(_decode_writeBackResult_fired_T_3, _decode_writeBackResult_fired_T_4) @[core.scala 714:51]
    node _decode_writeBackResult_fired_T_6 = and(_decode_writeBackResult_fired_T_5, decode.writeBackResult.ready) @[core.scala 714:76]
    node _decode_writeBackResult_fired_T_7 = and(_decode_writeBackResult_fired_T_6, rob.commit.ready) @[core.scala 714:108]
    node _decode_writeBackResult_fired_T_8 = bits(rob.commit.instruction, 6, 4) @[core.scala 714:186]
    node _decode_writeBackResult_fired_T_9 = neq(_decode_writeBackResult_fired_T_8, UInt<2>("h2")) @[core.scala 714:193]
    node _decode_writeBackResult_fired_T_10 = or(memAccess.writeCommit.ready, _decode_writeBackResult_fired_T_9) @[core.scala 714:160]
    node _decode_writeBackResult_fired_T_11 = and(_decode_writeBackResult_fired_T_7, _decode_writeBackResult_fired_T_10) @[core.scala 714:128]
    decode.writeBackResult.fired <= _decode_writeBackResult_fired_T_11 @[core.scala 714:7]
    node _rob_commit_fired_T = bits(rob.commit.instruction, 6, 2) @[core.scala 714:35]
    node _rob_commit_fired_T_1 = orr(_rob_commit_fired_T) @[core.scala 714:41]
    node _rob_commit_fired_T_2 = eq(_rob_commit_fired_T_1, UInt<1>("h0")) @[core.scala 714:12]
    node _rob_commit_fired_T_3 = eq(_rob_commit_fired_T_2, UInt<1>("h0")) @[core.scala 714:44]
    node _rob_commit_fired_T_4 = eq(coherentLoadInvalid, UInt<1>("h0")) @[core.scala 714:54]
    node _rob_commit_fired_T_5 = or(_rob_commit_fired_T_3, _rob_commit_fired_T_4) @[core.scala 714:51]
    node _rob_commit_fired_T_6 = and(_rob_commit_fired_T_5, decode.writeBackResult.ready) @[core.scala 714:76]
    node _rob_commit_fired_T_7 = and(_rob_commit_fired_T_6, rob.commit.ready) @[core.scala 714:108]
    node _rob_commit_fired_T_8 = bits(rob.commit.instruction, 6, 4) @[core.scala 714:186]
    node _rob_commit_fired_T_9 = neq(_rob_commit_fired_T_8, UInt<2>("h2")) @[core.scala 714:193]
    node _rob_commit_fired_T_10 = or(memAccess.writeCommit.ready, _rob_commit_fired_T_9) @[core.scala 714:160]
    node _rob_commit_fired_T_11 = and(_rob_commit_fired_T_7, _rob_commit_fired_T_10) @[core.scala 714:128]
    rob.commit.fired <= _rob_commit_fired_T_11 @[core.scala 714:7]
    node _memAccess_loadCommit_ready_T = bits(rob.commit.instruction, 6, 2) @[core.scala 718:55]
    node _memAccess_loadCommit_ready_T_1 = orr(_memAccess_loadCommit_ready_T) @[core.scala 718:61]
    node _memAccess_loadCommit_ready_T_2 = eq(_memAccess_loadCommit_ready_T_1, UInt<1>("h0")) @[core.scala 718:64]
    node _memAccess_loadCommit_ready_T_3 = and(_memAccess_loadCommit_ready_T_2, rob.commit.ready) @[core.scala 718:71]
    memAccess.loadCommit.ready <= _memAccess_loadCommit_ready_T_3 @[core.scala 718:30]
    decode.writeAddrPRF.exec1Addr <= scheduler.instrRetired.prfAddr @[core.scala 723:33]
    decode.writeAddrPRF.exec1Valid <= scheduler.instrRetired.valid @[core.scala 724:34]
    decode.writeAddrPRF.exec2Addr <= memAccess.responseOut.prfDest @[core.scala 725:33]
    decode.writeAddrPRF.exec3Addr <= extnMResponse.prfDest @[core.scala 726:33]
    node _decode_writeAddrPRF_exec2Valid_T = bits(memAccess.responseOut.instruction, 11, 7) @[core.scala 727:101]
    node _decode_writeAddrPRF_exec2Valid_T_1 = orr(_decode_writeAddrPRF_exec2Valid_T) @[core.scala 727:109]
    node _decode_writeAddrPRF_exec2Valid_T_2 = and(memAccess.responseOut.valid, _decode_writeAddrPRF_exec2Valid_T_1) @[core.scala 727:65]
    decode.writeAddrPRF.exec2Valid <= _decode_writeAddrPRF_exec2Valid_T_2 @[core.scala 727:34]
    node _decode_writeAddrPRF_exec3Valid_T = bits(extnResponseInstruction, 11, 7) @[core.scala 728:83]
    node _decode_writeAddrPRF_exec3Valid_T_1 = orr(_decode_writeAddrPRF_exec3Valid_T) @[core.scala 728:91]
    node _decode_writeAddrPRF_exec3Valid_T_2 = and(extnMResponse.valid, _decode_writeAddrPRF_exec3Valid_T_1) @[core.scala 728:57]
    decode.writeAddrPRF.exec3Valid <= _decode_writeAddrPRF_exec3Valid_T_2 @[core.scala 728:34]
    decode.branchEvalIn.branchMask <= branchEvals.branchMask @[core.scala 730:34]
    decode.branchEvalIn.passFail <= branchEvals.passed @[core.scala 731:32]
    decode.branchEvalIn.targetPC <= branchEvals.nextPC @[core.scala 732:32]
    node _decode_branchEvalIn_fired_T = and(decode.branchEvalIn.ready, branchEvals.valid) @[core.scala 733:58]
    decode.branchEvalIn.fired <= _decode_branchEvalIn_fired_T @[core.scala 733:29]
    rob.branch.pass <= branchEvals.passed @[core.scala 735:19]
    rob.branch.robAddr <= branchEvals.robAddr @[core.scala 736:22]
    rob.branch.valid <= branchEvals.valid @[core.scala 737:20]
    scheduler.memoryReady <= memAccess.canAllocate @[core.scala 739:25]
    scheduler.multuplyAndDivideReady <= mExtensionReady @[core.scala 740:36]
    rob.execPorts[0].exceptionOccurred <= UInt<1>("h0") @[core.scala 742:46]
    rob.execPorts[1].exceptionOccurred <= UInt<1>("h0") @[core.scala 742:46]
    rob.execPorts[2].exceptionOccurred <= UInt<1>("h0") @[core.scala 742:46]
    rob.execPorts[3].exceptionOccurred <= UInt<1>("h0") @[core.scala 742:46]
    rob.execPorts[0].mcause <= UInt<1>("h0") @[core.scala 743:35]
    rob.execPorts[1].mcause <= UInt<1>("h0") @[core.scala 743:35]
    rob.execPorts[2].mcause <= UInt<1>("h0") @[core.scala 743:35]
    rob.execPorts[3].mcause <= UInt<1>("h0") @[core.scala 743:35]
    rob.execPorts[0].mtval <= UInt<1>("h0") @[core.scala 744:34]
    rob.execPorts[1].mtval <= UInt<1>("h0") @[core.scala 744:34]
    rob.execPorts[2].mtval <= UInt<1>("h0") @[core.scala 744:34]
    rob.execPorts[3].mtval <= UInt<1>("h0") @[core.scala 744:34]
    reg rob_execPorts_0_mtval_REG : UInt, clock with :
      reset => (UInt<1>("h0"), rob_execPorts_0_mtval_REG) @[core.scala 745:36]
    rob_execPorts_0_mtval_REG <= singleCycleArithmeticRequest.rs1 @[core.scala 745:36]
    rob.execPorts[0].mtval <= rob_execPorts_0_mtval_REG @[core.scala 745:26]
    rob.execPorts[0].robAddr <= singleCycleArithmeticResponse.robAddr @[core.scala 761:22]
    rob.execPorts[0].valid <= singleCycleArithmeticResponse.valid @[core.scala 762:20]
    rob.execPorts[1].robAddr <= branchEvals.robAddr @[core.scala 761:22]
    rob.execPorts[1].valid <= branchEvals.valid @[core.scala 762:20]
    rob.execPorts[2].robAddr <= memAccess.responseOut.robAddr @[core.scala 761:22]
    rob.execPorts[2].valid <= memAccess.responseOut.valid @[core.scala 762:20]
    rob.execPorts[3].robAddr <= extnMResponse.robAddr @[core.scala 761:22]
    rob.execPorts[3].valid <= extnMResponse.valid @[core.scala 762:20]
    node _T_168 = bits(singleCycleArithmeticRequest.instruction, 11, 7) @[core.scala 766:170]
    node _T_169 = orr(_T_168) @[core.scala 766:178]
    node _T_170 = bits(singleCycleArithmeticRequest.instruction, 6, 2) @[core.scala 766:226]
    node _T_171 = neq(_T_170, UInt<5>("h1c")) @[core.scala 766:233]
    node _T_172 = and(_T_169, _T_171) @[core.scala 766:182]
    reg REG : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[core.scala 766:129]
    REG <= _T_172 @[core.scala 766:129]
    node _T_173 = and(singleCycleArithmeticResponse.valid, REG) @[core.scala 766:119]
    node _T_174 = bits(memAccess.responseOut.instruction, 11, 7) @[core.scala 768:131]
    node _T_175 = orr(_T_174) @[core.scala 768:139]
    node _T_176 = and(memAccess.responseOut.valid, _T_175) @[core.scala 768:95]
    node _T_177 = bits(extnResponseInstruction, 11, 7) @[core.scala 769:97]
    node _T_178 = orr(_T_177) @[core.scala 769:105]
    node _T_179 = and(extnMResponse.valid, _T_178) @[core.scala 769:71]
    prf.w1.addr <= singleCycleArithmeticResponse.prfDest @[core.scala 773:20]
    prf.w1.data <= singleCycleArithmeticResponse.result @[core.scala 774:20]
    prf.w1.en <= _T_173 @[core.scala 775:18]
    prf.w2.addr <= decode.jumpAddrWrite.PRFDest @[core.scala 773:20]
    prf.w2.data <= decode.jumpAddrWrite.linkAddr @[core.scala 774:20]
    prf.w2.en <= decode.jumpAddrWrite.ready @[core.scala 775:18]
    prf.w3.addr <= memAccess.responseOut.prfDest @[core.scala 773:20]
    prf.w3.data <= memAccess.responseOut.result @[core.scala 774:20]
    prf.w3.en <= _T_176 @[core.scala 775:18]
    prf.w4.addr <= extnMResponse.prfDest @[core.scala 773:20]
    prf.w4.data <= extnMResponse.result @[core.scala 774:20]
    prf.w4.en <= _T_179 @[core.scala 775:18]
    node _T_180 = bits(memAccess.responseOut.instruction, 11, 7) @[core.scala 785:69]
    node _T_181 = orr(_T_180) @[core.scala 785:77]
    node _T_182 = and(memAccess.responseOut.valid, _T_181) @[core.scala 785:33]
    node _T_183 = bits(extnResponseInstruction, 11, 7) @[core.scala 786:51]
    node _T_184 = orr(_T_183) @[core.scala 786:59]
    node _T_185 = and(extnMResponse.valid, _T_184) @[core.scala 786:25]
    wakeUps[0].prfAddr <= scheduler.instrRetired.prfAddr @[core.scala 790:20]
    wakeUps[0].valid <= scheduler.instrRetired.valid @[core.scala 791:18]
    wakeUps[1].prfAddr <= memAccess.responseOut.prfDest @[core.scala 790:20]
    wakeUps[1].valid <= _T_182 @[core.scala 791:18]
    wakeUps[2].prfAddr <= extnMResponse.prfDest @[core.scala 790:20]
    wakeUps[2].valid <= _T_185 @[core.scala 791:18]
    decode.jumpAddrWrite.fired <= decode.jumpAddrWrite.ready @[core.scala 794:30]
    prf.branchCheck.branchmask <= branchOps.branchMask @[core.scala 796:30]
    prf.branchCheck.pass <= branchOps.passed @[core.scala 797:24]
    prf.branchCheck.valid <= branchOps.valid @[core.scala 798:25]
    reg prf_fromStore_branchmask_REG : UInt, clock with :
      reset => (UInt<1>("h0"), prf_fromStore_branchmask_REG) @[core.scala 800:46]
    prf_fromStore_branchmask_REG <= dataQueue.toPRF.branchMask @[core.scala 800:46]
    reg prf_fromStore_branchmask_REG_1 : UInt, clock with :
      reset => (UInt<1>("h0"), prf_fromStore_branchmask_REG_1) @[core.scala 800:38]
    prf_fromStore_branchmask_REG_1 <= prf_fromStore_branchmask_REG @[core.scala 800:38]
    prf.fromStore.branchmask <= prf_fromStore_branchmask_REG_1 @[core.scala 800:28]
    reg prf_fromStore_instruction_REG : UInt, clock with :
      reset => (UInt<1>("h0"), prf_fromStore_instruction_REG) @[core.scala 801:47]
    prf_fromStore_instruction_REG <= dataQueue.toPRF.instruction @[core.scala 801:47]
    reg prf_fromStore_instruction_REG_1 : UInt, clock with :
      reset => (UInt<1>("h0"), prf_fromStore_instruction_REG_1) @[core.scala 801:39]
    prf_fromStore_instruction_REG_1 <= prf_fromStore_instruction_REG @[core.scala 801:39]
    prf.fromStore.instruction <= prf_fromStore_instruction_REG_1 @[core.scala 801:29]
    reg prf_fromStore_rs2Addr_REG : UInt, clock with :
      reset => (UInt<1>("h0"), prf_fromStore_rs2Addr_REG) @[core.scala 802:43]
    prf_fromStore_rs2Addr_REG <= dataQueue.toPRF.rs2Addr @[core.scala 802:43]
    reg prf_fromStore_rs2Addr_REG_1 : UInt, clock with :
      reset => (UInt<1>("h0"), prf_fromStore_rs2Addr_REG_1) @[core.scala 802:35]
    prf_fromStore_rs2Addr_REG_1 <= prf_fromStore_rs2Addr_REG @[core.scala 802:35]
    prf.fromStore.rs2Addr <= prf_fromStore_rs2Addr_REG_1 @[core.scala 802:25]
    node _prf_fromStore_valid_T = and(dataQueue.toPRF.valid, dataQueue.fromROB.readyNow) @[core.scala 803:64]
    reg prf_fromStore_valid_REG : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[core.scala 803:41]
    prf_fromStore_valid_REG <= _prf_fromStore_valid_T @[core.scala 803:41]
    reg prf_fromStore_valid_REG_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[core.scala 803:33]
    prf_fromStore_valid_REG_1 <= prf_fromStore_valid_REG @[core.scala 803:33]
    prf.fromStore.valid <= prf_fromStore_valid_REG_1 @[core.scala 803:23]
    prf.fromStore.prfDest <= UInt<1>("h0") @[core.scala 804:25]
    dataQueue.fromBranch.robAddr <= branchEvals.robAddr @[core.scala 806:32]
    dataQueue.fromBranch.passOrFail <= branchOps.passed @[core.scala 807:35]
    dataQueue.fromBranch.valid <= branchOps.valid @[core.scala 808:30]
    dataQueue.robMapUpdate.robAddr <= rob.allocate.robAddr @[core.scala 810:34]
    dataQueue.robMapUpdate.valid <= rob.allocate.fired @[core.scala 811:32]
    dataQueue.fromROB.readyNow <= memAccess.writeCommit.fired @[core.scala 813:30]
    memAccess.writeDataIn.data <= prf.toStore.rs2Data @[core.scala 815:30]
    memAccess.writeDataIn.valid <= prf.toStore.valid @[core.scala 816:31]
    node _memAccess_writeCommit_fired_T = bits(rob.commit.instruction, 6, 4) @[core.scala 818:88]
    node _memAccess_writeCommit_fired_T_1 = eq(_memAccess_writeCommit_fired_T, UInt<2>("h2")) @[core.scala 818:95]
    node _memAccess_writeCommit_fired_T_2 = and(memAccess.writeCommit.ready, _memAccess_writeCommit_fired_T_1) @[core.scala 818:62]
    node _memAccess_writeCommit_fired_T_3 = and(_memAccess_writeCommit_fired_T_2, rob.commit.fired) @[core.scala 818:109]
    memAccess.writeCommit.fired <= _memAccess_writeCommit_fired_T_3 @[core.scala 818:31]
    scheduler.wakeUpExt[0].prfAddr <= wakeUps[1].prfAddr @[core.scala 822:21]
    scheduler.wakeUpExt[0].valid <= wakeUps[1].valid @[core.scala 822:21]
    scheduler.wakeUpExt[1].prfAddr <= wakeUps[2].prfAddr @[core.scala 822:21]
    scheduler.wakeUpExt[1].valid <= wakeUps[2].valid @[core.scala 822:21]
    decode.branchEvalOut.fired <= decode.branchEvalOut.ready @[core.scala 825:30]
    scheduler.branchOps.passed <= branchOps.passed @[core.scala 827:23]
    scheduler.branchOps.branchMask <= branchOps.branchMask @[core.scala 827:23]
    scheduler.branchOps.valid <= branchOps.valid @[core.scala 827:23]
    dPort.CDLAST <= memAccess.dPort.CDLAST @[core.scala 833:9]
    dPort.CDDATA <= memAccess.dPort.CDDATA @[core.scala 833:9]
    memAccess.dPort.CDREADY <= dPort.CDREADY @[core.scala 833:9]
    dPort.CDVALID <= memAccess.dPort.CDVALID @[core.scala 833:9]
    dPort.CRRESP <= memAccess.dPort.CRRESP @[core.scala 833:9]
    memAccess.dPort.CRREADY <= dPort.CRREADY @[core.scala 833:9]
    dPort.CRVALID <= memAccess.dPort.CRVALID @[core.scala 833:9]
    memAccess.dPort.ACPROT <= dPort.ACPROT @[core.scala 833:9]
    memAccess.dPort.ACSNOOP <= dPort.ACSNOOP @[core.scala 833:9]
    memAccess.dPort.ACADDR <= dPort.ACADDR @[core.scala 833:9]
    dPort.ACREADY <= memAccess.dPort.ACREADY @[core.scala 833:9]
    memAccess.dPort.ACVALID <= dPort.ACVALID @[core.scala 833:9]
    memAccess.dPort.RRESP <= dPort.RRESP @[core.scala 833:9]
    dPort.ARBAR <= memAccess.dPort.ARBAR @[core.scala 833:9]
    dPort.ARSNOOP <= memAccess.dPort.ARSNOOP @[core.scala 833:9]
    dPort.ARDOMAIN <= memAccess.dPort.ARDOMAIN @[core.scala 833:9]
    dPort.AWBAR <= memAccess.dPort.AWBAR @[core.scala 833:9]
    dPort.AWSNOOP <= memAccess.dPort.AWSNOOP @[core.scala 833:9]
    dPort.AWDOMAIN <= memAccess.dPort.AWDOMAIN @[core.scala 833:9]
    dPort.RREADY <= memAccess.dPort.RREADY @[core.scala 833:9]
    memAccess.dPort.RVALID <= dPort.RVALID @[core.scala 833:9]
    memAccess.dPort.RLAST <= dPort.RLAST @[core.scala 833:9]
    memAccess.dPort.RDATA <= dPort.RDATA @[core.scala 833:9]
    memAccess.dPort.RID <= dPort.RID @[core.scala 833:9]
    memAccess.dPort.ARREADY <= dPort.ARREADY @[core.scala 833:9]
    dPort.ARVALID <= memAccess.dPort.ARVALID @[core.scala 833:9]
    dPort.ARQOS <= memAccess.dPort.ARQOS @[core.scala 833:9]
    dPort.ARPROT <= memAccess.dPort.ARPROT @[core.scala 833:9]
    dPort.ARCACHE <= memAccess.dPort.ARCACHE @[core.scala 833:9]
    dPort.ARLOCK <= memAccess.dPort.ARLOCK @[core.scala 833:9]
    dPort.ARBURST <= memAccess.dPort.ARBURST @[core.scala 833:9]
    dPort.ARSIZE <= memAccess.dPort.ARSIZE @[core.scala 833:9]
    dPort.ARLEN <= memAccess.dPort.ARLEN @[core.scala 833:9]
    dPort.ARADDR <= memAccess.dPort.ARADDR @[core.scala 833:9]
    dPort.ARID <= memAccess.dPort.ARID @[core.scala 833:9]
    dPort.BREADY <= memAccess.dPort.BREADY @[core.scala 833:9]
    memAccess.dPort.BVALID <= dPort.BVALID @[core.scala 833:9]
    memAccess.dPort.BRESP <= dPort.BRESP @[core.scala 833:9]
    memAccess.dPort.BID <= dPort.BID @[core.scala 833:9]
    memAccess.dPort.WREADY <= dPort.WREADY @[core.scala 833:9]
    dPort.WVALID <= memAccess.dPort.WVALID @[core.scala 833:9]
    dPort.WLAST <= memAccess.dPort.WLAST @[core.scala 833:9]
    dPort.WSTRB <= memAccess.dPort.WSTRB @[core.scala 833:9]
    dPort.WDATA <= memAccess.dPort.WDATA @[core.scala 833:9]
    memAccess.dPort.AWREADY <= dPort.AWREADY @[core.scala 833:9]
    dPort.AWVALID <= memAccess.dPort.AWVALID @[core.scala 833:9]
    dPort.AWQOS <= memAccess.dPort.AWQOS @[core.scala 833:9]
    dPort.AWPROT <= memAccess.dPort.AWPROT @[core.scala 833:9]
    dPort.AWCACHE <= memAccess.dPort.AWCACHE @[core.scala 833:9]
    dPort.AWLOCK <= memAccess.dPort.AWLOCK @[core.scala 833:9]
    dPort.AWBURST <= memAccess.dPort.AWBURST @[core.scala 833:9]
    dPort.AWSIZE <= memAccess.dPort.AWSIZE @[core.scala 833:9]
    dPort.AWLEN <= memAccess.dPort.AWLEN @[core.scala 833:9]
    dPort.AWADDR <= memAccess.dPort.AWADDR @[core.scala 833:9]
    dPort.AWID <= memAccess.dPort.AWID @[core.scala 833:9]
    peripheral.RREADY <= memAccess.peripheral.RREADY @[core.scala 834:14]
    memAccess.peripheral.RVALID <= peripheral.RVALID @[core.scala 834:14]
    memAccess.peripheral.RLAST <= peripheral.RLAST @[core.scala 834:14]
    memAccess.peripheral.RRESP <= peripheral.RRESP @[core.scala 834:14]
    memAccess.peripheral.RDATA <= peripheral.RDATA @[core.scala 834:14]
    memAccess.peripheral.RID <= peripheral.RID @[core.scala 834:14]
    memAccess.peripheral.ARREADY <= peripheral.ARREADY @[core.scala 834:14]
    peripheral.ARVALID <= memAccess.peripheral.ARVALID @[core.scala 834:14]
    peripheral.ARQOS <= memAccess.peripheral.ARQOS @[core.scala 834:14]
    peripheral.ARPROT <= memAccess.peripheral.ARPROT @[core.scala 834:14]
    peripheral.ARCACHE <= memAccess.peripheral.ARCACHE @[core.scala 834:14]
    peripheral.ARLOCK <= memAccess.peripheral.ARLOCK @[core.scala 834:14]
    peripheral.ARBURST <= memAccess.peripheral.ARBURST @[core.scala 834:14]
    peripheral.ARSIZE <= memAccess.peripheral.ARSIZE @[core.scala 834:14]
    peripheral.ARLEN <= memAccess.peripheral.ARLEN @[core.scala 834:14]
    peripheral.ARADDR <= memAccess.peripheral.ARADDR @[core.scala 834:14]
    peripheral.ARID <= memAccess.peripheral.ARID @[core.scala 834:14]
    peripheral.BREADY <= memAccess.peripheral.BREADY @[core.scala 834:14]
    memAccess.peripheral.BVALID <= peripheral.BVALID @[core.scala 834:14]
    memAccess.peripheral.BRESP <= peripheral.BRESP @[core.scala 834:14]
    memAccess.peripheral.BID <= peripheral.BID @[core.scala 834:14]
    memAccess.peripheral.WREADY <= peripheral.WREADY @[core.scala 834:14]
    peripheral.WVALID <= memAccess.peripheral.WVALID @[core.scala 834:14]
    peripheral.WLAST <= memAccess.peripheral.WLAST @[core.scala 834:14]
    peripheral.WSTRB <= memAccess.peripheral.WSTRB @[core.scala 834:14]
    peripheral.WDATA <= memAccess.peripheral.WDATA @[core.scala 834:14]
    memAccess.peripheral.AWREADY <= peripheral.AWREADY @[core.scala 834:14]
    peripheral.AWVALID <= memAccess.peripheral.AWVALID @[core.scala 834:14]
    peripheral.AWQOS <= memAccess.peripheral.AWQOS @[core.scala 834:14]
    peripheral.AWPROT <= memAccess.peripheral.AWPROT @[core.scala 834:14]
    peripheral.AWCACHE <= memAccess.peripheral.AWCACHE @[core.scala 834:14]
    peripheral.AWLOCK <= memAccess.peripheral.AWLOCK @[core.scala 834:14]
    peripheral.AWBURST <= memAccess.peripheral.AWBURST @[core.scala 834:14]
    peripheral.AWSIZE <= memAccess.peripheral.AWSIZE @[core.scala 834:14]
    peripheral.AWLEN <= memAccess.peripheral.AWLEN @[core.scala 834:14]
    peripheral.AWADDR <= memAccess.peripheral.AWADDR @[core.scala 834:14]
    peripheral.AWID <= memAccess.peripheral.AWID @[core.scala 834:14]
    node _memAccess_initiateFence_T = and(rob.commit.fired, rob.commit.is_fence) @[core.scala 845:47]
    memAccess.initiateFence <= _memAccess_initiateFence_T @[core.scala 845:27]
    wire _fenceState_WIRE : { state : UInt<2>, branchMask : UInt<5>}
    _fenceState_WIRE.branchMask is invalid
    _fenceState_WIRE.state <= UInt<2>("h0")
    reg fenceState : { state : UInt<2>, branchMask : UInt<5>}, clock with :
      reset => (reset, _fenceState_WIRE) @[core.scala 849:27]
    node _T_186 = eq(UInt<2>("h0"), fenceState.state) @[core.scala 856:28]
    when _T_186 : @[core.scala 856:28]
      node _T_187 = bits(fetch.toDecode.instruction, 19, 0) @[core.scala 858:64]
      node _T_188 = and(_T_187, UInt<20>("hfefff")) @[core.scala 858:72]
      node _T_189 = eq(_T_188, UInt<20>("hf")) @[core.scala 858:92]
      node _T_190 = and(fetch.toDecode.fired, _T_189) @[core.scala 858:33]
      when _T_190 : @[core.scala 858:115]
        fenceState.state <= UInt<2>("h1") @[core.scala 859:26]
    else :
      node _T_191 = eq(UInt<2>("h1"), fenceState.state) @[core.scala 856:28]
      when _T_191 : @[core.scala 856:28]
        node _T_192 = eq(branchEvals.passed, UInt<1>("h0")) @[core.scala 863:33]
        node _T_193 = and(branchEvals.valid, _T_192) @[core.scala 863:30]
        when _T_193 : @[core.scala 863:54]
          memAccess.initiateFence <= UInt<1>("h1") @[core.scala 865:33]
          fenceState.state <= UInt<2>("h0") @[core.scala 866:26]
        else :
          node _T_194 = bits(decode.toExec.instruction, 19, 0) @[core.scala 867:68]
          node _T_195 = and(_T_194, UInt<20>("hfefff")) @[core.scala 867:76]
          node _T_196 = eq(_T_195, UInt<20>("hf")) @[core.scala 867:96]
          node _T_197 = and(decode.toExec.fired, _T_196) @[core.scala 867:38]
          when _T_197 : @[core.scala 867:119]
            fenceState.state <= UInt<2>("h2") @[core.scala 868:26]
            fenceState.branchMask <= decode.toExec.branchMask @[core.scala 869:31]
      else :
        node _T_198 = eq(UInt<2>("h2"), fenceState.state) @[core.scala 856:28]
        when _T_198 : @[core.scala 856:28]
          node _T_199 = and(branchEvals.branchMask, fenceState.branchMask) @[core.scala 873:57]
          node _T_200 = orr(_T_199) @[core.scala 873:82]
          node _T_201 = and(branchEvals.valid, _T_200) @[core.scala 873:30]
          node _T_202 = eq(branchEvals.passed, UInt<1>("h0")) @[core.scala 873:89]
          node _T_203 = and(_T_201, _T_202) @[core.scala 873:86]
          when _T_203 : @[core.scala 873:110]
            memAccess.initiateFence <= UInt<1>("h1") @[core.scala 875:33]
            fenceState.state <= UInt<2>("h0") @[core.scala 876:26]
          else :
            node _T_204 = and(rob.commit.fired, rob.commit.is_fence) @[core.scala 877:35]
            when _T_204 : @[core.scala 877:59]
              memAccess.initiateFence <= UInt<1>("h1") @[core.scala 878:33]
              fenceState.state <= UInt<2>("h0") @[core.scala 879:26]
            else :
              node _T_205 = and(branchEvals.branchMask, fenceState.branchMask) @[core.scala 880:63]
              node _T_206 = orr(_T_205) @[core.scala 880:88]
              node _T_207 = and(branchEvals.valid, _T_206) @[core.scala 880:36]
              node _T_208 = and(_T_207, branchEvals.passed) @[core.scala 880:92]
              when _T_208 : @[core.scala 880:115]
                node _fenceState_branchMask_T = xor(fenceState.branchMask, branchOps.branchMask) @[core.scala 881:57]
                fenceState.branchMask <= _fenceState_branchMask_T @[core.scala 881:31]
    node _memAccess_fenceInstructions_fired_T = and(memAccess.fenceInstructions.ready, icache.updateAllCachelines.ready) @[core.scala 888:45]
    memAccess.fenceInstructions.fired <= _memAccess_fenceInstructions_fired_T @[core.scala 888:7]
    node _icache_updateAllCachelines_fired_T = and(memAccess.fenceInstructions.ready, icache.updateAllCachelines.ready) @[core.scala 888:45]
    icache.updateAllCachelines.fired <= _icache_updateAllCachelines_fired_T @[core.scala 888:7]
    fetch.carryOutFence.fired <= fetch.carryOutFence.ready @[core.scala 890:29]
    fetch.updateAllCachelines.fired <= fetch.updateAllCachelines.ready @[core.scala 895:35]
    node _icache_cachelinesUpdatesResp_fired_T = and(icache.cachelinesUpdatesResp.ready, fetch.cachelinesUpdatesResp.ready) @[core.scala 898:46]
    icache.cachelinesUpdatesResp.fired <= _icache_cachelinesUpdatesResp_fired_T @[core.scala 898:7]
    node _fetch_cachelinesUpdatesResp_fired_T = and(icache.cachelinesUpdatesResp.ready, fetch.cachelinesUpdatesResp.ready) @[core.scala 898:46]
    fetch.cachelinesUpdatesResp.fired <= _fetch_cachelinesUpdatesResp_fired_T @[core.scala 898:7]
    decode.writeBackResult.robAddr <= UInt<1>("h0") @[core.scala 901:34]
    decode.writeBackResult.data <= rob.commit.mtval @[core.scala 902:31]
    node _T_209 = eq(branchOps.passed, UInt<1>("h0")) @[core.scala 904:27]
    node _T_210 = and(branchOps.valid, _T_209) @[core.scala 904:24]
    node _T_211 = and(_T_210, fetch.cachelinesUpdatesResp.ready) @[core.scala 904:45]
    when _T_211 : @[core.scala 904:85]
      memAccess.initiateFence <= UInt<1>("h1") @[core.scala 905:29]
    node _T_212 = eq(branchOps.passed, UInt<1>("h0")) @[core.scala 907:35]
    node _T_213 = and(branchOps.valid, _T_212) @[core.scala 907:32]
    node _T_214 = eq(fetch.toDecode.instruction, UInt<28>("hff0000f")) @[core.scala 907:85]
    node _T_215 = and(_T_214, fetch.toDecode.fired) @[core.scala 907:103]
    node _T_216 = and(_T_213, _T_215) @[core.scala 907:53]
    reg REG_1 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), REG_1) @[core.scala 907:15]
    REG_1 <= _T_216 @[core.scala 907:15]
    when REG_1 : @[core.scala 907:131]
      memAccess.initiateFence <= UInt<1>("h1") @[core.scala 908:29]
    node _T_217 = bits(scheduler.release.instruction, 4, 2) @[core.scala 913:37]
    node _T_218 = eq(_T_217, UInt<3>("h2")) @[core.scala 913:44]
    when _T_218 : @[core.scala 913:63]
      prf.execRead.valid <= UInt<1>("h0") @[core.scala 913:84]
    reg minstret : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[core.scala 922:25]
    reg programRunning : UInt<1>, clock with :
      reset => (reset, UInt<1>("h1")) @[core.scala 924:31]
    wire _counters_WIRE : { minstret : UInt<64>, decodeReady : UInt<64>, decodeFired : UInt<64>, branchCount : UInt<64>, branchesPassed : UInt<64>, cycleCount : UInt<64>, schedulerFull : UInt<64>, robFull : UInt<64>}
    _counters_WIRE.robFull <= UInt<1>("h0")
    _counters_WIRE.schedulerFull <= UInt<1>("h0")
    _counters_WIRE.cycleCount <= UInt<1>("h0")
    _counters_WIRE.branchesPassed <= UInt<1>("h0")
    _counters_WIRE.branchCount <= UInt<1>("h0")
    _counters_WIRE.decodeFired <= UInt<1>("h0")
    _counters_WIRE.decodeReady <= UInt<1>("h0")
    _counters_WIRE.minstret <= UInt<1>("h0")
    reg counters : { minstret : UInt<64>, decodeReady : UInt<64>, decodeFired : UInt<64>, branchCount : UInt<64>, branchesPassed : UInt<64>, cycleCount : UInt<64>, schedulerFull : UInt<64>, robFull : UInt<64>}, clock with :
      reset => (reset, _counters_WIRE) @[core.scala 926:25]
    node _T_219 = geq(rob.commit.pc, UInt<21>("h100440")) @[core.scala 946:42]
    node _T_220 = and(rob.commit.fired, _T_219) @[core.scala 946:25]
    when _T_220 : @[core.scala 946:58]
      programRunning <= UInt<1>("h0") @[core.scala 946:75]
    when programRunning : @[core.scala 947:24]
      node _counters_cycleCount_T = add(counters.cycleCount, UInt<1>("h1")) @[core.scala 948:48]
      node _counters_cycleCount_T_1 = tail(_counters_cycleCount_T, 1) @[core.scala 948:48]
      counters.cycleCount <= _counters_cycleCount_T_1 @[core.scala 948:25]
      when branchOps.valid : @[core.scala 949:27]
        node _counters_branchCount_T = add(counters.branchCount, UInt<1>("h1")) @[core.scala 950:52]
        node _counters_branchCount_T_1 = tail(_counters_branchCount_T, 1) @[core.scala 950:52]
        counters.branchCount <= _counters_branchCount_T_1 @[core.scala 950:28]
        when branchOps.passed : @[core.scala 951:30]
          node _counters_branchesPassed_T = add(counters.branchesPassed, UInt<1>("h1")) @[core.scala 952:60]
          node _counters_branchesPassed_T_1 = tail(_counters_branchesPassed_T, 1) @[core.scala 952:60]
          counters.branchesPassed <= _counters_branchesPassed_T_1 @[core.scala 952:33]
      when decode.toExec.ready : @[core.scala 955:31]
        node _counters_decodeReady_T = add(counters.decodeReady, UInt<1>("h1")) @[core.scala 956:52]
        node _counters_decodeReady_T_1 = tail(_counters_decodeReady_T, 1) @[core.scala 956:52]
        counters.decodeReady <= _counters_decodeReady_T_1 @[core.scala 956:28]
        when decode.toExec.fired : @[core.scala 957:33]
          node _counters_decodeFired_T = add(counters.decodeFired, UInt<1>("h1")) @[core.scala 957:80]
          node _counters_decodeFired_T_1 = tail(_counters_decodeFired_T, 1) @[core.scala 957:80]
          counters.decodeFired <= _counters_decodeFired_T_1 @[core.scala 957:56]
        node _T_221 = eq(scheduler.allocate.ready, UInt<1>("h0")) @[core.scala 958:12]
        when _T_221 : @[core.scala 958:39]
          node _counters_schedulerFull_T = add(counters.schedulerFull, UInt<1>("h1")) @[core.scala 958:90]
          node _counters_schedulerFull_T_1 = tail(_counters_schedulerFull_T, 1) @[core.scala 958:90]
          counters.schedulerFull <= _counters_schedulerFull_T_1 @[core.scala 958:64]
        node _T_222 = eq(rob.allocate.ready, UInt<1>("h0")) @[core.scala 959:12]
        when _T_222 : @[core.scala 959:33]
          node _counters_robFull_T = add(counters.robFull, UInt<1>("h1")) @[core.scala 959:72]
          node _counters_robFull_T_1 = tail(_counters_robFull_T, 1) @[core.scala 959:72]
          counters.robFull <= _counters_robFull_T_1 @[core.scala 959:52]
      when rob.commit.fired : @[core.scala 961:28]
        node _counters_minstret_T = add(counters.minstret, UInt<1>("h1")) @[core.scala 962:46]
        node _counters_minstret_T_1 = tail(_counters_minstret_T, 1) @[core.scala 962:46]
        counters.minstret <= _counters_minstret_T_1 @[core.scala 962:25]
    core_sample0 <= decode.fromFetch.expected.valid @[core.scala 982:16]
    node _core_sample1_T = bits(decode.fromFetch.expected.pc, 30, 30) @[core.scala 983:47]
    core_sample1 <= _core_sample1_T @[core.scala 983:16]
    reg branchCounter : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[core.scala 1020:30]
    node _branchCounter_T = bits(decode.fromFetch.instruction, 6, 4) @[core.scala 1024:60]
    node _branchCounter_T_1 = eq(_branchCounter_T, UInt<3>("h6")) @[core.scala 1024:67]
    node _branchCounter_T_2 = and(decode.fromFetch.fired, _branchCounter_T_1) @[core.scala 1024:29]
    node _branchCounter_T_3 = add(branchCounter, _branchCounter_T_2) @[core.scala 1021:34]
    node _branchCounter_T_4 = sub(_branchCounter_T_3, branchEvals.valid) @[core.scala 1024:81]
    node _branchCounter_T_5 = asUInt(_branchCounter_T_4) @[core.scala 1024:81]
    branchCounter <= _branchCounter_T_5 @[core.scala 1021:17]
    node _T_223 = eq(branchEvals.passed, UInt<1>("h0")) @[core.scala 1027:29]
    node _T_224 = and(branchEvals.valid, _T_223) @[core.scala 1027:26]
    when _T_224 : @[core.scala 1027:50]
      branchCounter <= UInt<1>("h0") @[core.scala 1030:19]
    reg lastBranchExecRob : UInt<4>, clock with :
      reset => (UInt<1>("h0"), lastBranchExecRob) @[core.scala 1034:30]
    reg lastBranchExecPC : UInt<64>, clock with :
      reset => (UInt<1>("h0"), lastBranchExecPC) @[core.scala 1035:29]
    when branchEvals.valid : @[core.scala 1036:27]
      lastBranchExecRob <= branchEvals.robAddr @[core.scala 1037:23]
      reg lastBranchExecPC_REG : UInt, clock with :
        reset => (UInt<1>("h0"), lastBranchExecPC_REG) @[core.scala 1038:32]
      lastBranchExecPC_REG <= branchPCs[0].pc @[core.scala 1038:32]
      lastBranchExecPC <= lastBranchExecPC_REG @[core.scala 1038:22]
    decode.interruptedPC <= lastBranchExecPC @[core.scala 1040:24]
    reg lastRetiredSystem : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[core.scala 1054:34]
    when decode.fromFetch.fired : @[core.scala 1055:32]
      node _lastRetiredSystem_T = bits(fetch.toDecode.instruction, 6, 0) @[core.scala 1055:81]
      node _lastRetiredSystem_T_1 = eq(_lastRetiredSystem_T, UInt<7>("h73")) @[core.scala 1055:88]
      lastRetiredSystem <= _lastRetiredSystem_T_1 @[core.scala 1055:52]
    reg interruptInjectStatus : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[core.scala 1057:38]
    node _T_225 = eq(UInt<2>("h0"), interruptInjectStatus) @[core.scala 1058:33]
    when _T_225 : @[core.scala 1058:33]
      node _T_226 = and(decode.canTakeInterrupt, MTIP) @[core.scala 1062:36]
      node _T_227 = eq(lastRetiredSystem, UInt<1>("h0")) @[core.scala 1062:47]
      node _T_228 = and(_T_226, _T_227) @[core.scala 1062:44]
      when _T_228 : @[core.scala 1062:67]
        interruptInjectStatus <= UInt<2>("h1") @[core.scala 1062:91]
    else :
      node _T_229 = eq(UInt<2>("h1"), interruptInjectStatus) @[core.scala 1058:33]
      when _T_229 : @[core.scala 1058:33]
        when decode.canTakeInterrupt : @[core.scala 1066:56]
          node _T_230 = eq(branchEvals.valid, UInt<1>("h0")) @[core.scala 1067:38]
          when _T_230 : @[core.scala 1067:58]
            node _T_231 = orr(branchCounter) @[core.scala 1068:60]
            when _T_231 : @[core.scala 1068:65]
              node _T_232 = bits(branchInstruction.instruction, 6, 0) @[core.scala 1069:110]
              node _T_233 = eq(_T_232, UInt<7>("h63")) @[core.scala 1069:117]
              node _T_234 = and(branchInstruction.valid, _T_233) @[core.scala 1069:78]
              when _T_234 : @[core.scala 1069:135]
                interruptInjectStatus <= UInt<2>("h2") @[core.scala 1070:79]
                branchEvals.passed <= UInt<1>("h0") @[core.scala 1073:76]
            else :
              node _T_235 = bits(fetch.toDecode.instruction, 6, 0) @[core.scala 1076:81]
              node _T_236 = neq(_T_235, UInt<4>("hf")) @[core.scala 1076:88]
              node _T_237 = bits(fetch.toDecode.instruction, 6, 0) @[core.scala 1076:136]
              node _T_238 = neq(_T_237, UInt<7>("h73")) @[core.scala 1076:143]
              node _T_239 = and(_T_236, _T_238) @[core.scala 1076:106]
              when _T_239 : @[core.scala 1076:162]
                decode.fromFetch.instruction <= UInt<64>("h80000073") @[core.scala 1078:86]
                when decode.fromFetch.fired : @[core.scala 1083:86]
                  interruptInjectStatus <= UInt<2>("h0") @[core.scala 1083:110]
      else :
        node _T_240 = eq(UInt<2>("h2"), interruptInjectStatus) @[core.scala 1058:33]
        when _T_240 : @[core.scala 1058:33]
          interruptInjectStatus <= UInt<2>("h3") @[core.scala 1090:29]
        else :
          node _T_241 = eq(UInt<2>("h3"), interruptInjectStatus) @[core.scala 1058:33]
          when _T_241 : @[core.scala 1058:33]
            node _T_242 = eq(rob.commit.robAddr, lastBranchExecRob) @[core.scala 1093:31]
            when _T_242 : @[core.scala 1093:54]
              decode.writeBackResult.instruction <= UInt<64>("h80000073") @[core.scala 1095:44]
              when decode.writeBackResult.fired : @[core.scala 1097:44]
                interruptInjectStatus <= UInt<2>("h0") @[core.scala 1097:68]
    node _T_243 = eq(interruptInjectStatus, UInt<2>("h0")) @[core.scala 1101:33]
    node _T_244 = eq(interruptInjectStatus, UInt<2>("h1")) @[core.scala 1101:77]
    node _T_245 = orr(branchCounter) @[core.scala 1101:119]
    node _T_246 = eq(_T_245, UInt<1>("h0")) @[core.scala 1101:104]
    node _T_247 = and(_T_244, _T_246) @[core.scala 1101:101]
    node _T_248 = or(_T_243, _T_247) @[core.scala 1101:50]
    node _T_249 = eq(_T_248, UInt<1>("h0")) @[core.scala 1101:8]
    when _T_249 : @[core.scala 1101:126]
      fetch.toDecode.fired <= UInt<1>("h0") @[core.scala 1103:26]
      decode.fromFetch.fired <= UInt<1>("h0") @[core.scala 1104:28]
    wire architecturalRegisterFile : UInt<64>[32] @[system.scala 30:44]
    architecturalRegisterFile[0] <= prf.registerFileOutput[decode.retiredRenamedTable.table[0]] @[system.scala 30:44]
    architecturalRegisterFile[1] <= prf.registerFileOutput[decode.retiredRenamedTable.table[1]] @[system.scala 30:44]
    architecturalRegisterFile[2] <= prf.registerFileOutput[decode.retiredRenamedTable.table[2]] @[system.scala 30:44]
    architecturalRegisterFile[3] <= prf.registerFileOutput[decode.retiredRenamedTable.table[3]] @[system.scala 30:44]
    architecturalRegisterFile[4] <= prf.registerFileOutput[decode.retiredRenamedTable.table[4]] @[system.scala 30:44]
    architecturalRegisterFile[5] <= prf.registerFileOutput[decode.retiredRenamedTable.table[5]] @[system.scala 30:44]
    architecturalRegisterFile[6] <= prf.registerFileOutput[decode.retiredRenamedTable.table[6]] @[system.scala 30:44]
    architecturalRegisterFile[7] <= prf.registerFileOutput[decode.retiredRenamedTable.table[7]] @[system.scala 30:44]
    architecturalRegisterFile[8] <= prf.registerFileOutput[decode.retiredRenamedTable.table[8]] @[system.scala 30:44]
    architecturalRegisterFile[9] <= prf.registerFileOutput[decode.retiredRenamedTable.table[9]] @[system.scala 30:44]
    architecturalRegisterFile[10] <= prf.registerFileOutput[decode.retiredRenamedTable.table[10]] @[system.scala 30:44]
    architecturalRegisterFile[11] <= prf.registerFileOutput[decode.retiredRenamedTable.table[11]] @[system.scala 30:44]
    architecturalRegisterFile[12] <= prf.registerFileOutput[decode.retiredRenamedTable.table[12]] @[system.scala 30:44]
    architecturalRegisterFile[13] <= prf.registerFileOutput[decode.retiredRenamedTable.table[13]] @[system.scala 30:44]
    architecturalRegisterFile[14] <= prf.registerFileOutput[decode.retiredRenamedTable.table[14]] @[system.scala 30:44]
    architecturalRegisterFile[15] <= prf.registerFileOutput[decode.retiredRenamedTable.table[15]] @[system.scala 30:44]
    architecturalRegisterFile[16] <= prf.registerFileOutput[decode.retiredRenamedTable.table[16]] @[system.scala 30:44]
    architecturalRegisterFile[17] <= prf.registerFileOutput[decode.retiredRenamedTable.table[17]] @[system.scala 30:44]
    architecturalRegisterFile[18] <= prf.registerFileOutput[decode.retiredRenamedTable.table[18]] @[system.scala 30:44]
    architecturalRegisterFile[19] <= prf.registerFileOutput[decode.retiredRenamedTable.table[19]] @[system.scala 30:44]
    architecturalRegisterFile[20] <= prf.registerFileOutput[decode.retiredRenamedTable.table[20]] @[system.scala 30:44]
    architecturalRegisterFile[21] <= prf.registerFileOutput[decode.retiredRenamedTable.table[21]] @[system.scala 30:44]
    architecturalRegisterFile[22] <= prf.registerFileOutput[decode.retiredRenamedTable.table[22]] @[system.scala 30:44]
    architecturalRegisterFile[23] <= prf.registerFileOutput[decode.retiredRenamedTable.table[23]] @[system.scala 30:44]
    architecturalRegisterFile[24] <= prf.registerFileOutput[decode.retiredRenamedTable.table[24]] @[system.scala 30:44]
    architecturalRegisterFile[25] <= prf.registerFileOutput[decode.retiredRenamedTable.table[25]] @[system.scala 30:44]
    architecturalRegisterFile[26] <= prf.registerFileOutput[decode.retiredRenamedTable.table[26]] @[system.scala 30:44]
    architecturalRegisterFile[27] <= prf.registerFileOutput[decode.retiredRenamedTable.table[27]] @[system.scala 30:44]
    architecturalRegisterFile[28] <= prf.registerFileOutput[decode.retiredRenamedTable.table[28]] @[system.scala 30:44]
    architecturalRegisterFile[29] <= prf.registerFileOutput[decode.retiredRenamedTable.table[29]] @[system.scala 30:44]
    architecturalRegisterFile[30] <= prf.registerFileOutput[decode.retiredRenamedTable.table[30]] @[system.scala 30:44]
    architecturalRegisterFile[31] <= prf.registerFileOutput[decode.retiredRenamedTable.table[31]] @[system.scala 30:44]
    registersOut[0] <= architecturalRegisterFile[0] @[system.scala 31:74]
    registersOut[1] <= architecturalRegisterFile[1] @[system.scala 31:74]
    registersOut[2] <= architecturalRegisterFile[2] @[system.scala 31:74]
    registersOut[3] <= architecturalRegisterFile[3] @[system.scala 31:74]
    registersOut[4] <= architecturalRegisterFile[4] @[system.scala 31:74]
    registersOut[5] <= architecturalRegisterFile[5] @[system.scala 31:74]
    registersOut[6] <= architecturalRegisterFile[6] @[system.scala 31:74]
    registersOut[7] <= architecturalRegisterFile[7] @[system.scala 31:74]
    registersOut[8] <= architecturalRegisterFile[8] @[system.scala 31:74]
    registersOut[9] <= architecturalRegisterFile[9] @[system.scala 31:74]
    registersOut[10] <= architecturalRegisterFile[10] @[system.scala 31:74]
    registersOut[11] <= architecturalRegisterFile[11] @[system.scala 31:74]
    registersOut[12] <= architecturalRegisterFile[12] @[system.scala 31:74]
    registersOut[13] <= architecturalRegisterFile[13] @[system.scala 31:74]
    registersOut[14] <= architecturalRegisterFile[14] @[system.scala 31:74]
    registersOut[15] <= architecturalRegisterFile[15] @[system.scala 31:74]
    registersOut[16] <= architecturalRegisterFile[16] @[system.scala 31:74]
    registersOut[17] <= architecturalRegisterFile[17] @[system.scala 31:74]
    registersOut[18] <= architecturalRegisterFile[18] @[system.scala 31:74]
    registersOut[19] <= architecturalRegisterFile[19] @[system.scala 31:74]
    registersOut[20] <= architecturalRegisterFile[20] @[system.scala 31:74]
    registersOut[21] <= architecturalRegisterFile[21] @[system.scala 31:74]
    registersOut[22] <= architecturalRegisterFile[22] @[system.scala 31:74]
    registersOut[23] <= architecturalRegisterFile[23] @[system.scala 31:74]
    registersOut[24] <= architecturalRegisterFile[24] @[system.scala 31:74]
    registersOut[25] <= architecturalRegisterFile[25] @[system.scala 31:74]
    registersOut[26] <= architecturalRegisterFile[26] @[system.scala 31:74]
    registersOut[27] <= architecturalRegisterFile[27] @[system.scala 31:74]
    registersOut[28] <= architecturalRegisterFile[28] @[system.scala 31:74]
    registersOut[29] <= architecturalRegisterFile[29] @[system.scala 31:74]
    registersOut[30] <= architecturalRegisterFile[30] @[system.scala 31:74]
    registersOut[31] <= architecturalRegisterFile[31] @[system.scala 31:74]
    registersOut[32] <= decode.registersOut[0] @[system.scala 32:31]
    robOut.commitFired <= rob.commit.fired @[system.scala 39:24]
    robOut.pc <= rob.commit.pc @[system.scala 40:24]
    node _robOut_interrupt_T = eq(decode.writeBackResult.instruction, UInt<64>("h80000073")) @[system.scala 41:62]
    robOut.interrupt <= _robOut_interrupt_T @[system.scala 41:24]
    node _T_250 = bits(rob.commit.instruction, 6, 0) @[system.scala 42:33]
    node _T_251 = eq(_T_250, UInt<7>("h73")) @[system.scala 42:40]
    node _T_252 = bits(rob.commit.instruction, 14, 12) @[system.scala 42:84]
    node _T_253 = orr(_T_252) @[system.scala 42:93]
    node _T_254 = and(_T_251, _T_253) @[system.scala 42:58]
    when _T_254 : @[system.scala 42:99]
      robOut.commitFired <= UInt<1>("h0") @[system.scala 42:120]
    allRobFiresOut <= rob.commit.fired @[system.scala 45:20]

  extmodule iCacheRegisters_1 :
    input address : UInt<32>
    output instruction : UInt<32>
    output tag : UInt<20>
    output tag_valid : UInt<1>
    input write_line_index : UInt<6>
    input write_block : UInt<512>
    input write_tag : UInt<20>
    input write_in : UInt<1>
    input invalidate_all : UInt<1>
    input clock : Clock
    input reset : Reset
    defname = iCacheRegisters
    parameter offset_width  = 4
    parameter line_width = 6

  module iCache_1 :
    input clock : Clock
    input reset : Reset
    output fromFetch : { flip req : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<64>}, resp : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<32>}}
    output updateAllCachelines : { ready : UInt<1>, flip fired : UInt<1>}
    output cachelinesUpdatesResp : { ready : UInt<1>, flip fired : UInt<1>}
    output lowLevelMem : { AWID : UInt<2>, AWADDR : UInt<32>, AWLEN : UInt<8>, AWSIZE : UInt<3>, AWBURST : UInt<2>, AWLOCK : UInt<1>, AWCACHE : UInt<4>, AWPROT : UInt<3>, AWQOS : UInt<4>, AWVALID : UInt<1>, flip AWREADY : UInt<1>, WDATA : UInt<64>, WSTRB : UInt<8>, WLAST : UInt<1>, WVALID : UInt<1>, flip WREADY : UInt<1>, flip BID : UInt<2>, flip BRESP : UInt<2>, flip BVALID : UInt<1>, BREADY : UInt<1>, ARID : UInt<2>, ARADDR : UInt<32>, ARLEN : UInt<8>, ARSIZE : UInt<3>, ARBURST : UInt<2>, ARLOCK : UInt<1>, ARCACHE : UInt<4>, ARPROT : UInt<3>, ARQOS : UInt<4>, ARVALID : UInt<1>, flip ARREADY : UInt<1>, flip RID : UInt<2>, flip RDATA : UInt<64>, flip RLAST : UInt<1>, flip RVALID : UInt<1>, RREADY : UInt<1>, AWDOMAIN : UInt<2>, AWSNOOP : UInt<3>, AWBAR : UInt<2>, ARDOMAIN : UInt<2>, ARSNOOP : UInt<4>, ARBAR : UInt<2>, flip RRESP : UInt<4>, flip ACVALID : UInt<1>, ACREADY : UInt<1>, flip ACADDR : UInt<32>, flip ACSNOOP : UInt<4>, flip ACPROT : UInt<3>, CRVALID : UInt<1>, flip CRREADY : UInt<1>, CRRESP : UInt<5>, CDVALID : UInt<1>, flip CDREADY : UInt<1>, CDDATA : UInt<64>, CDLAST : UInt<1>}

    reg commitFence : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[ICache.scala 65:28]
    reg pendingInvalidate : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[ICache.scala 67:34]
    wire _requests_WIRE : { valid : UInt<1>, address : UInt<64>}
    _requests_WIRE.address <= UInt<1>("h0")
    _requests_WIRE.valid <= UInt<1>("h0")
    reg requests_REG : { valid : UInt<1>, address : UInt<64>}, clock with :
      reset => (reset, _requests_WIRE) @[ICache.scala 72:53]
    wire _requests_WIRE_1 : { valid : UInt<1>, address : UInt<64>}
    _requests_WIRE_1.address <= UInt<1>("h0")
    _requests_WIRE_1.valid <= UInt<1>("h0")
    reg requests_REG_1 : { valid : UInt<1>, address : UInt<64>}, clock with :
      reset => (reset, _requests_WIRE_1) @[ICache.scala 72:53]
    wire _requests_WIRE_2 : { valid : UInt<1>, address : UInt<64>}
    _requests_WIRE_2.address <= UInt<1>("h0")
    _requests_WIRE_2.valid <= UInt<1>("h0")
    reg requests_REG_2 : { valid : UInt<1>, address : UInt<64>}, clock with :
      reset => (reset, _requests_WIRE_2) @[ICache.scala 72:53]
    wire _requests_WIRE_3 : { valid : UInt<1>, address : UInt<64>}[3] @[ICache.scala 72:33]
    _requests_WIRE_3[0] <= requests_REG @[ICache.scala 72:33]
    _requests_WIRE_3[1] <= requests_REG_1 @[ICache.scala 72:33]
    _requests_WIRE_3[2] <= requests_REG_2 @[ICache.scala 72:33]
    reg requests : { valid : UInt<1>, address : UInt<64>}[3], clock with :
      reset => (reset, _requests_WIRE_3) @[ICache.scala 72:25]
    inst cache of iCacheRegisters_1 @[ICache.scala 80:21]
    cache.reset is invalid
    cache.clock is invalid
    cache.invalidate_all is invalid
    cache.write_in is invalid
    cache.write_tag is invalid
    cache.write_block is invalid
    cache.write_line_index is invalid
    cache.tag_valid is invalid
    cache.tag is invalid
    cache.instruction is invalid
    cache.address is invalid
    wire _results_WIRE : { valid : UInt<1>, address : UInt<64>, instruction : UInt<32>, tag : UInt<20>, tagValid : UInt<1>}
    _results_WIRE.tagValid <= UInt<1>("h0")
    _results_WIRE.tag <= UInt<1>("h0")
    _results_WIRE.instruction <= UInt<1>("h0")
    _results_WIRE.address <= UInt<1>("h0")
    _results_WIRE.valid <= UInt<1>("h0")
    reg results_REG : { valid : UInt<1>, address : UInt<64>, instruction : UInt<32>, tag : UInt<20>, tagValid : UInt<1>}, clock with :
      reset => (reset, _results_WIRE) @[ICache.scala 82:52]
    wire _results_WIRE_1 : { valid : UInt<1>, address : UInt<64>, instruction : UInt<32>, tag : UInt<20>, tagValid : UInt<1>}
    _results_WIRE_1.tagValid <= UInt<1>("h0")
    _results_WIRE_1.tag <= UInt<1>("h0")
    _results_WIRE_1.instruction <= UInt<1>("h0")
    _results_WIRE_1.address <= UInt<1>("h0")
    _results_WIRE_1.valid <= UInt<1>("h0")
    reg results_REG_1 : { valid : UInt<1>, address : UInt<64>, instruction : UInt<32>, tag : UInt<20>, tagValid : UInt<1>}, clock with :
      reset => (reset, _results_WIRE_1) @[ICache.scala 82:52]
    wire _results_WIRE_2 : { valid : UInt<1>, address : UInt<64>, instruction : UInt<32>, tag : UInt<20>, tagValid : UInt<1>}[2] @[ICache.scala 82:32]
    _results_WIRE_2[0] <= results_REG @[ICache.scala 82:32]
    _results_WIRE_2[1] <= results_REG_1 @[ICache.scala 82:32]
    reg results : { valid : UInt<1>, address : UInt<64>, instruction : UInt<32>, tag : UInt<20>, tagValid : UInt<1>}[2], clock with :
      reset => (reset, _results_WIRE_2) @[ICache.scala 82:24]
    wire _cacheFill_WIRE : { valid : UInt<1>, block : UInt<512>}
    _cacheFill_WIRE.block <= UInt<1>("h0")
    _cacheFill_WIRE.valid <= UInt<1>("h0")
    reg cacheFill : { valid : UInt<1>, block : UInt<512>}, clock with :
      reset => (reset, _cacheFill_WIRE) @[ICache.scala 96:26]
    node _cacheMissed_T = shr(results[UInt<1>("h0")].address, 12) @[ICache.scala 103:72]
    node _cacheMissed_T_1 = eq(_cacheMissed_T, results[UInt<1>("h0")].tag) @[ICache.scala 103:96]
    node _cacheMissed_T_2 = and(results[UInt<1>("h0")].tagValid, _cacheMissed_T_1) @[ICache.scala 103:46]
    node _cacheMissed_T_3 = eq(_cacheMissed_T_2, UInt<1>("h0")) @[ICache.scala 103:21]
    node cacheMissed = and(_cacheMissed_T_3, results[UInt<1>("h0")].valid) @[ICache.scala 103:119]
    reg arvalid : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[ICache.scala 104:33]
    reg rready : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[ICache.scala 104:33]
    node _T = and(lowLevelMem.RREADY, lowLevelMem.RVALID) @[ICache.scala 106:27]
    when _T : @[ICache.scala 106:50]
      node _cacheFill_block_T = bits(cacheFill.block, 511, 64) @[ICache.scala 106:109]
      node _cacheFill_block_T_1 = cat(lowLevelMem.RDATA, _cacheFill_block_T) @[Cat.scala 33:92]
      cacheFill.block <= _cacheFill_block_T_1 @[ICache.scala 106:68]
    node _T_1 = eq(arvalid, UInt<1>("h0")) @[ICache.scala 108:8]
    when _T_1 : @[ICache.scala 108:18]
      node _arvalid_T = eq(rready, UInt<1>("h0")) @[ICache.scala 108:46]
      node _arvalid_T_1 = and(cacheMissed, _arvalid_T) @[ICache.scala 108:43]
      node _arvalid_T_2 = eq(cacheFill.valid, UInt<1>("h0")) @[ICache.scala 108:57]
      node _arvalid_T_3 = and(_arvalid_T_1, _arvalid_T_2) @[ICache.scala 108:54]
      arvalid <= _arvalid_T_3 @[ICache.scala 108:28]
    else :
      node _arvalid_T_4 = and(lowLevelMem.ARVALID, lowLevelMem.ARREADY) @[ICache.scala 109:49]
      node _arvalid_T_5 = eq(_arvalid_T_4, UInt<1>("h0")) @[ICache.scala 109:27]
      arvalid <= _arvalid_T_5 @[ICache.scala 109:24]
    node _T_2 = eq(rready, UInt<1>("h0")) @[ICache.scala 111:8]
    when _T_2 : @[ICache.scala 111:17]
      node _rready_T = and(lowLevelMem.ARVALID, lowLevelMem.ARREADY) @[ICache.scala 111:50]
      rready <= _rready_T @[ICache.scala 111:26]
    else :
      node _rready_T_1 = and(lowLevelMem.RLAST, lowLevelMem.RREADY) @[ICache.scala 112:46]
      node _rready_T_2 = and(_rready_T_1, lowLevelMem.RVALID) @[ICache.scala 112:68]
      node _rready_T_3 = eq(_rready_T_2, UInt<1>("h0")) @[ICache.scala 112:26]
      rready <= _rready_T_3 @[ICache.scala 112:23]
    node _T_3 = eq(cacheFill.valid, UInt<1>("h0")) @[ICache.scala 114:8]
    when _T_3 : @[ICache.scala 114:26]
      node _cacheFill_valid_T = and(lowLevelMem.RLAST, lowLevelMem.RREADY) @[ICache.scala 114:65]
      node _cacheFill_valid_T_1 = and(_cacheFill_valid_T, lowLevelMem.RVALID) @[ICache.scala 114:87]
      cacheFill.valid <= _cacheFill_valid_T_1 @[ICache.scala 114:44]
    else :
      cacheFill.valid <= UInt<1>("h0") @[ICache.scala 115:32]
    cache.write_block <= cacheFill.block @[ICache.scala 117:24]
    cache.write_in <= cacheFill.valid @[ICache.scala 118:21]
    node _cache_io_write_line_index_T = bits(results[UInt<1>("h0")].address, 12, 6) @[ICache.scala 119:53]
    cache.write_line_index <= _cache_io_write_line_index_T @[ICache.scala 119:29]
    node _cache_io_write_tag_T = bits(results[UInt<1>("h0")].address, 32, 12) @[ICache.scala 120:46]
    cache.write_tag <= _cache_io_write_tag_T @[ICache.scala 120:22]
    cache.clock <= clock @[ICache.scala 121:18]
    cache.reset <= reset @[ICache.scala 122:18]
    node _cacheStalled_T = eq(fromFetch.resp.ready, UInt<1>("h0")) @[ICache.scala 124:62]
    node _cacheStalled_T_1 = and(fromFetch.resp.valid, _cacheStalled_T) @[ICache.scala 124:59]
    node cacheStalled = or(cacheMissed, _cacheStalled_T_1) @[ICache.scala 124:34]
    node _T_4 = eq(cacheMissed, UInt<1>("h0")) @[ICache.scala 125:9]
    node _T_5 = or(fromFetch.resp.ready, commitFence) @[ICache.scala 125:47]
    node _T_6 = and(_T_4, _T_5) @[ICache.scala 125:22]
    node _T_7 = eq(results[UInt<1>("h0")].valid, UInt<1>("h0")) @[ICache.scala 125:67]
    node _T_8 = or(_T_6, _T_7) @[ICache.scala 125:64]
    when _T_8 : @[ICache.scala 125:89]
      when results[UInt<1>("h1")].valid : @[ICache.scala 126:35]
        results[UInt<1>("h0")] <= results[UInt<1>("h1")] @[ICache.scala 126:51]
      else :
        results[UInt<1>("h0")].valid <= requests[UInt<2>("h2")].valid @[ICache.scala 128:27]
        results[UInt<1>("h0")].address <= requests[UInt<2>("h2")].address @[ICache.scala 129:29]
        results[UInt<1>("h0")].instruction <= cache.instruction @[ICache.scala 130:33]
        results[UInt<1>("h0")].tag <= cache.tag @[ICache.scala 131:25]
        results[UInt<1>("h0")].tagValid <= cache.tag_valid @[ICache.scala 132:30]
    else :
      node _T_9 = and(cacheMissed, cacheFill.valid) @[ICache.scala 134:26]
      when _T_9 : @[ICache.scala 134:46]
        node _results_0_instruction_T = bits(cacheFill.block, 31, 0) @[ICache.scala 135:96]
        node _results_0_instruction_T_1 = bits(cacheFill.block, 63, 32) @[ICache.scala 135:96]
        node _results_0_instruction_T_2 = bits(cacheFill.block, 95, 64) @[ICache.scala 135:96]
        node _results_0_instruction_T_3 = bits(cacheFill.block, 127, 96) @[ICache.scala 135:96]
        node _results_0_instruction_T_4 = bits(cacheFill.block, 159, 128) @[ICache.scala 135:96]
        node _results_0_instruction_T_5 = bits(cacheFill.block, 191, 160) @[ICache.scala 135:96]
        node _results_0_instruction_T_6 = bits(cacheFill.block, 223, 192) @[ICache.scala 135:96]
        node _results_0_instruction_T_7 = bits(cacheFill.block, 255, 224) @[ICache.scala 135:96]
        node _results_0_instruction_T_8 = bits(cacheFill.block, 287, 256) @[ICache.scala 135:96]
        node _results_0_instruction_T_9 = bits(cacheFill.block, 319, 288) @[ICache.scala 135:96]
        node _results_0_instruction_T_10 = bits(cacheFill.block, 351, 320) @[ICache.scala 135:96]
        node _results_0_instruction_T_11 = bits(cacheFill.block, 383, 352) @[ICache.scala 135:96]
        node _results_0_instruction_T_12 = bits(cacheFill.block, 415, 384) @[ICache.scala 135:96]
        node _results_0_instruction_T_13 = bits(cacheFill.block, 447, 416) @[ICache.scala 135:96]
        node _results_0_instruction_T_14 = bits(cacheFill.block, 479, 448) @[ICache.scala 135:96]
        node _results_0_instruction_T_15 = bits(cacheFill.block, 511, 480) @[ICache.scala 135:96]
        wire _results_0_instruction_WIRE : UInt<32>[16] @[ICache.scala 135:75]
        _results_0_instruction_WIRE[0] <= _results_0_instruction_T @[ICache.scala 135:75]
        _results_0_instruction_WIRE[1] <= _results_0_instruction_T_1 @[ICache.scala 135:75]
        _results_0_instruction_WIRE[2] <= _results_0_instruction_T_2 @[ICache.scala 135:75]
        _results_0_instruction_WIRE[3] <= _results_0_instruction_T_3 @[ICache.scala 135:75]
        _results_0_instruction_WIRE[4] <= _results_0_instruction_T_4 @[ICache.scala 135:75]
        _results_0_instruction_WIRE[5] <= _results_0_instruction_T_5 @[ICache.scala 135:75]
        _results_0_instruction_WIRE[6] <= _results_0_instruction_T_6 @[ICache.scala 135:75]
        _results_0_instruction_WIRE[7] <= _results_0_instruction_T_7 @[ICache.scala 135:75]
        _results_0_instruction_WIRE[8] <= _results_0_instruction_T_8 @[ICache.scala 135:75]
        _results_0_instruction_WIRE[9] <= _results_0_instruction_T_9 @[ICache.scala 135:75]
        _results_0_instruction_WIRE[10] <= _results_0_instruction_T_10 @[ICache.scala 135:75]
        _results_0_instruction_WIRE[11] <= _results_0_instruction_T_11 @[ICache.scala 135:75]
        _results_0_instruction_WIRE[12] <= _results_0_instruction_T_12 @[ICache.scala 135:75]
        _results_0_instruction_WIRE[13] <= _results_0_instruction_T_13 @[ICache.scala 135:75]
        _results_0_instruction_WIRE[14] <= _results_0_instruction_T_14 @[ICache.scala 135:75]
        _results_0_instruction_WIRE[15] <= _results_0_instruction_T_15 @[ICache.scala 135:75]
        node _results_0_instruction_T_16 = bits(results[UInt<1>("h0")].address, 6, 2) @[ICache.scala 135:137]
        node _results_0_instruction_T_17 = bits(_results_0_instruction_T_16, 3, 0)
        results[UInt<1>("h0")].instruction <= _results_0_instruction_WIRE[_results_0_instruction_T_17] @[ICache.scala 135:31]
        node _results_0_tag_T = bits(results[UInt<1>("h0")].address, 32, 12) @[ICache.scala 136:47]
        results[UInt<1>("h0")].tag <= _results_0_tag_T @[ICache.scala 136:23]
        results[UInt<1>("h0")].tagValid <= UInt<1>("h1") @[ICache.scala 137:28]
    node _T_10 = eq(results[UInt<1>("h1")].valid, UInt<1>("h0")) @[ICache.scala 140:8]
    when _T_10 : @[ICache.scala 140:34]
      node _results_1_valid_T = and(requests[UInt<2>("h2")].valid, results[UInt<1>("h0")].valid) @[ICache.scala 141:58]
      node _results_1_valid_T_1 = eq(fromFetch.resp.ready, UInt<1>("h0")) @[ICache.scala 141:100]
      node _results_1_valid_T_2 = or(cacheMissed, _results_1_valid_T_1) @[ICache.scala 141:97]
      node _results_1_valid_T_3 = and(_results_1_valid_T, _results_1_valid_T_2) @[ICache.scala 141:81]
      results[UInt<1>("h1")].valid <= _results_1_valid_T_3 @[ICache.scala 141:29]
      results[UInt<1>("h1")].address <= requests[UInt<2>("h2")].address @[ICache.scala 142:31]
      results[UInt<1>("h1")].instruction <= cache.instruction @[ICache.scala 143:35]
      results[UInt<1>("h1")].tag <= cache.tag @[ICache.scala 144:27]
      results[UInt<1>("h1")].tagValid <= cache.tag_valid @[ICache.scala 145:32]
    else :
      node _T_11 = and(cacheMissed, cacheFill.valid) @[ICache.scala 146:26]
      node _T_12 = bits(results[UInt<1>("h0")].address, 31, 6) @[ICache.scala 146:70]
      node _T_13 = bits(results[UInt<1>("h1")].address, 31, 6) @[ICache.scala 146:127]
      node _T_14 = eq(_T_12, _T_13) @[ICache.scala 146:98]
      node _T_15 = and(_T_11, _T_14) @[ICache.scala 146:45]
      when _T_15 : @[ICache.scala 146:157]
        node _results_1_instruction_T = bits(cacheFill.block, 31, 0) @[ICache.scala 147:100]
        node _results_1_instruction_T_1 = bits(cacheFill.block, 63, 32) @[ICache.scala 147:100]
        node _results_1_instruction_T_2 = bits(cacheFill.block, 95, 64) @[ICache.scala 147:100]
        node _results_1_instruction_T_3 = bits(cacheFill.block, 127, 96) @[ICache.scala 147:100]
        node _results_1_instruction_T_4 = bits(cacheFill.block, 159, 128) @[ICache.scala 147:100]
        node _results_1_instruction_T_5 = bits(cacheFill.block, 191, 160) @[ICache.scala 147:100]
        node _results_1_instruction_T_6 = bits(cacheFill.block, 223, 192) @[ICache.scala 147:100]
        node _results_1_instruction_T_7 = bits(cacheFill.block, 255, 224) @[ICache.scala 147:100]
        node _results_1_instruction_T_8 = bits(cacheFill.block, 287, 256) @[ICache.scala 147:100]
        node _results_1_instruction_T_9 = bits(cacheFill.block, 319, 288) @[ICache.scala 147:100]
        node _results_1_instruction_T_10 = bits(cacheFill.block, 351, 320) @[ICache.scala 147:100]
        node _results_1_instruction_T_11 = bits(cacheFill.block, 383, 352) @[ICache.scala 147:100]
        node _results_1_instruction_T_12 = bits(cacheFill.block, 415, 384) @[ICache.scala 147:100]
        node _results_1_instruction_T_13 = bits(cacheFill.block, 447, 416) @[ICache.scala 147:100]
        node _results_1_instruction_T_14 = bits(cacheFill.block, 479, 448) @[ICache.scala 147:100]
        node _results_1_instruction_T_15 = bits(cacheFill.block, 511, 480) @[ICache.scala 147:100]
        wire _results_1_instruction_WIRE : UInt<32>[16] @[ICache.scala 147:79]
        _results_1_instruction_WIRE[0] <= _results_1_instruction_T @[ICache.scala 147:79]
        _results_1_instruction_WIRE[1] <= _results_1_instruction_T_1 @[ICache.scala 147:79]
        _results_1_instruction_WIRE[2] <= _results_1_instruction_T_2 @[ICache.scala 147:79]
        _results_1_instruction_WIRE[3] <= _results_1_instruction_T_3 @[ICache.scala 147:79]
        _results_1_instruction_WIRE[4] <= _results_1_instruction_T_4 @[ICache.scala 147:79]
        _results_1_instruction_WIRE[5] <= _results_1_instruction_T_5 @[ICache.scala 147:79]
        _results_1_instruction_WIRE[6] <= _results_1_instruction_T_6 @[ICache.scala 147:79]
        _results_1_instruction_WIRE[7] <= _results_1_instruction_T_7 @[ICache.scala 147:79]
        _results_1_instruction_WIRE[8] <= _results_1_instruction_T_8 @[ICache.scala 147:79]
        _results_1_instruction_WIRE[9] <= _results_1_instruction_T_9 @[ICache.scala 147:79]
        _results_1_instruction_WIRE[10] <= _results_1_instruction_T_10 @[ICache.scala 147:79]
        _results_1_instruction_WIRE[11] <= _results_1_instruction_T_11 @[ICache.scala 147:79]
        _results_1_instruction_WIRE[12] <= _results_1_instruction_T_12 @[ICache.scala 147:79]
        _results_1_instruction_WIRE[13] <= _results_1_instruction_T_13 @[ICache.scala 147:79]
        _results_1_instruction_WIRE[14] <= _results_1_instruction_T_14 @[ICache.scala 147:79]
        _results_1_instruction_WIRE[15] <= _results_1_instruction_T_15 @[ICache.scala 147:79]
        node _results_1_instruction_T_16 = bits(results[UInt<1>("h1")].address, 6, 2) @[ICache.scala 147:145]
        node _results_1_instruction_T_17 = bits(_results_1_instruction_T_16, 3, 0)
        results[UInt<1>("h1")].instruction <= _results_1_instruction_WIRE[_results_1_instruction_T_17] @[ICache.scala 147:35]
        node _results_1_tag_T = bits(results[UInt<1>("h0")].address, 32, 12) @[ICache.scala 148:51]
        results[UInt<1>("h1")].tag <= _results_1_tag_T @[ICache.scala 148:27]
        results[UInt<1>("h1")].tagValid <= UInt<1>("h1") @[ICache.scala 149:32]
      else :
        node _T_16 = eq(cacheStalled, UInt<1>("h0")) @[ICache.scala 150:14]
        when _T_16 : @[ICache.scala 150:29]
          results[UInt<1>("h1")].valid <= UInt<1>("h0") @[ICache.scala 151:29]
    node _T_17 = eq(results[UInt<1>("h1")].valid, UInt<1>("h0")) @[ICache.scala 154:8]
    when _T_17 : @[ICache.scala 154:34]
      requests[UInt<2>("h2")] <= requests[UInt<2>("h0")] @[ICache.scala 155:25]
      node _requests_2_valid_T = eq(cacheStalled, UInt<1>("h0")) @[ICache.scala 156:34]
      node _requests_2_valid_T_1 = and(_requests_2_valid_T, requests[UInt<2>("h0")].valid) @[ICache.scala 156:48]
      requests[UInt<2>("h2")].valid <= _requests_2_valid_T_1 @[ICache.scala 156:31]
    else :
      requests[UInt<2>("h2")].valid <= UInt<1>("h0") @[ICache.scala 158:31]
    node _T_18 = eq(cacheStalled, UInt<1>("h0")) @[ICache.scala 161:9]
    node _T_19 = eq(results[UInt<1>("h1")].valid, UInt<1>("h0")) @[ICache.scala 161:26]
    node _T_20 = and(_T_18, _T_19) @[ICache.scala 161:23]
    node _T_21 = eq(requests[UInt<2>("h0")].valid, UInt<1>("h0")) @[ICache.scala 161:55]
    node _T_22 = or(_T_20, _T_21) @[ICache.scala 161:52]
    when _T_22 : @[ICache.scala 161:78]
      when requests[UInt<2>("h1")].valid : @[ICache.scala 162:36]
        requests[UInt<2>("h0")] <= requests[UInt<2>("h1")] @[ICache.scala 162:53]
      else :
        node _requests_0_valid_T = and(fromFetch.req.ready, fromFetch.req.valid) @[ICache.scala 164:52]
        requests[UInt<2>("h0")].valid <= _requests_0_valid_T @[ICache.scala 164:28]
        requests[UInt<2>("h0")].address <= fromFetch.req.bits @[ICache.scala 165:30]
    node _T_23 = eq(requests[UInt<2>("h1")].valid, UInt<1>("h0")) @[ICache.scala 169:8]
    when _T_23 : @[ICache.scala 169:35]
      node _requests_1_valid_T = or(cacheStalled, results[UInt<1>("h1")].valid) @[ICache.scala 170:47]
      node _requests_1_valid_T_1 = and(fromFetch.req.ready, fromFetch.req.valid) @[ICache.scala 170:99]
      node _requests_1_valid_T_2 = and(_requests_1_valid_T, _requests_1_valid_T_1) @[ICache.scala 170:75]
      node _requests_1_valid_T_3 = and(_requests_1_valid_T_2, requests[UInt<2>("h0")].valid) @[ICache.scala 170:123]
      requests[UInt<2>("h1")].valid <= _requests_1_valid_T_3 @[ICache.scala 170:30]
      requests[UInt<2>("h1")].address <= fromFetch.req.bits @[ICache.scala 171:32]
    else :
      node _requests_1_valid_T_4 = or(cacheStalled, results[UInt<1>("h1")].valid) @[ICache.scala 173:47]
      requests[UInt<2>("h1")].valid <= _requests_1_valid_T_4 @[ICache.scala 173:30]
    node _fromFetch_resp_valid_T = eq(cacheMissed, UInt<1>("h0")) @[ICache.scala 176:27]
    node _fromFetch_resp_valid_T_1 = and(_fromFetch_resp_valid_T, results[UInt<1>("h0")].valid) @[ICache.scala 176:40]
    fromFetch.resp.valid <= _fromFetch_resp_valid_T_1 @[ICache.scala 176:24]
    fromFetch.resp.bits <= results[UInt<1>("h0")].instruction @[ICache.scala 177:23]
    node _fromFetch_req_ready_T = eq(requests[UInt<2>("h1")].valid, UInt<1>("h0")) @[ICache.scala 178:26]
    node _fromFetch_req_ready_T_1 = eq(commitFence, UInt<1>("h0")) @[ICache.scala 178:55]
    node _fromFetch_req_ready_T_2 = and(_fromFetch_req_ready_T, _fromFetch_req_ready_T_1) @[ICache.scala 178:52]
    fromFetch.req.ready <= _fromFetch_req_ready_T_2 @[ICache.scala 178:23]
    cache.address <= requests[UInt<2>("h0")].address @[ICache.scala 180:20]
    node _T_24 = eq(commitFence, UInt<1>("h0")) @[ICache.scala 181:8]
    when _T_24 : @[ICache.scala 181:22]
      commitFence <= updateAllCachelines.fired @[ICache.scala 182:17]
    else :
      node _commitFence_T = or(requests[0].valid, requests[1].valid) @[ICache.scala 184:74]
      node _commitFence_T_1 = or(_commitFence_T, requests[2].valid) @[ICache.scala 184:74]
      node _commitFence_T_2 = or(_commitFence_T_1, results[0].valid) @[ICache.scala 184:74]
      node _commitFence_T_3 = or(_commitFence_T_2, results[1].valid) @[ICache.scala 184:74]
      node _commitFence_T_4 = eq(cachelinesUpdatesResp.fired, UInt<1>("h0")) @[ICache.scala 184:84]
      node _commitFence_T_5 = or(_commitFence_T_3, _commitFence_T_4) @[ICache.scala 184:81]
      commitFence <= _commitFence_T_5 @[ICache.scala 184:17]
    node _updateAllCachelines_ready_T = eq(commitFence, UInt<1>("h0")) @[ICache.scala 186:32]
    updateAllCachelines.ready <= _updateAllCachelines_ready_T @[ICache.scala 186:29]
    node _cachelinesUpdatesResp_ready_T = or(requests[0].valid, requests[1].valid) @[ICache.scala 187:89]
    node _cachelinesUpdatesResp_ready_T_1 = or(_cachelinesUpdatesResp_ready_T, requests[2].valid) @[ICache.scala 187:89]
    node _cachelinesUpdatesResp_ready_T_2 = or(_cachelinesUpdatesResp_ready_T_1, results[0].valid) @[ICache.scala 187:89]
    node _cachelinesUpdatesResp_ready_T_3 = or(_cachelinesUpdatesResp_ready_T_2, results[1].valid) @[ICache.scala 187:89]
    node _cachelinesUpdatesResp_ready_T_4 = eq(_cachelinesUpdatesResp_ready_T_3, UInt<1>("h0")) @[ICache.scala 187:34]
    node _cachelinesUpdatesResp_ready_T_5 = and(_cachelinesUpdatesResp_ready_T_4, commitFence) @[ICache.scala 187:96]
    cachelinesUpdatesResp.ready <= _cachelinesUpdatesResp_ready_T_5 @[ICache.scala 187:31]
    cache.invalidate_all <= cachelinesUpdatesResp.fired @[ICache.scala 188:27]
    node _lowLevelMem_ARADDR_T = bits(results[UInt<1>("h0")].address, 31, 6) @[ICache.scala 191:50]
    node _lowLevelMem_ARADDR_T_1 = cat(_lowLevelMem_ARADDR_T, UInt<6>("h0")) @[Cat.scala 33:92]
    lowLevelMem.ARADDR <= _lowLevelMem_ARADDR_T_1 @[ICache.scala 191:22]
    lowLevelMem.ARBURST <= UInt<1>("h1") @[ICache.scala 192:23]
    lowLevelMem.ARCACHE <= UInt<2>("h2") @[ICache.scala 193:23]
    lowLevelMem.ARID <= UInt<2>("h3") @[ICache.scala 194:20]
    lowLevelMem.ARLEN <= UInt<3>("h7") @[ICache.scala 195:21]
    lowLevelMem.ARLOCK <= UInt<1>("h0") @[ICache.scala 196:22]
    lowLevelMem.ARPROT <= UInt<1>("h0") @[ICache.scala 197:22]
    lowLevelMem.ARQOS <= UInt<1>("h0") @[ICache.scala 198:21]
    lowLevelMem.ARSIZE <= UInt<2>("h3") @[ICache.scala 199:22]
    lowLevelMem.ARVALID <= arvalid @[ICache.scala 200:23]
    lowLevelMem.ARDOMAIN <= UInt<1>("h0") @[ICache.scala 201:24]
    lowLevelMem.ARSNOOP <= UInt<1>("h0") @[ICache.scala 202:23]
    lowLevelMem.ARBAR <= UInt<1>("h0") @[ICache.scala 203:21]
    lowLevelMem.RREADY <= rready @[ICache.scala 205:22]
    lowLevelMem.AWADDR <= UInt<1>("h0") @[ICache.scala 207:22]
    lowLevelMem.AWBURST <= UInt<1>("h1") @[ICache.scala 208:23]
    lowLevelMem.AWCACHE <= UInt<2>("h2") @[ICache.scala 209:23]
    lowLevelMem.AWID <= UInt<2>("h3") @[ICache.scala 210:20]
    lowLevelMem.AWLEN <= UInt<1>("h0") @[ICache.scala 211:21]
    lowLevelMem.AWLOCK <= UInt<1>("h0") @[ICache.scala 212:22]
    lowLevelMem.AWPROT <= UInt<1>("h0") @[ICache.scala 213:22]
    lowLevelMem.AWQOS <= UInt<1>("h0") @[ICache.scala 214:21]
    lowLevelMem.AWSIZE <= UInt<1>("h0") @[ICache.scala 215:22]
    lowLevelMem.AWVALID <= UInt<1>("h0") @[ICache.scala 216:23]
    lowLevelMem.AWDOMAIN <= UInt<1>("h0") @[ICache.scala 217:24]
    lowLevelMem.AWSNOOP <= UInt<1>("h0") @[ICache.scala 218:23]
    lowLevelMem.AWBAR <= UInt<1>("h0") @[ICache.scala 219:21]
    lowLevelMem.WDATA <= UInt<1>("h0") @[ICache.scala 221:21]
    lowLevelMem.WLAST <= UInt<1>("h0") @[ICache.scala 222:21]
    lowLevelMem.WSTRB <= UInt<1>("h0") @[ICache.scala 223:21]
    lowLevelMem.WVALID <= UInt<1>("h0") @[ICache.scala 224:22]
    lowLevelMem.BREADY <= UInt<1>("h0") @[ICache.scala 226:22]
    lowLevelMem.ACREADY <= UInt<1>("h1") @[ICache.scala 228:23]
    lowLevelMem.CRVALID <= UInt<1>("h1") @[ICache.scala 229:23]
    lowLevelMem.CRRESP <= UInt<1>("h0") @[ICache.scala 230:22]
    lowLevelMem.CDVALID <= UInt<1>("h0") @[ICache.scala 231:23]
    lowLevelMem.CDDATA <= UInt<1>("h0") @[ICache.scala 232:22]
    lowLevelMem.CDLAST <= UInt<1>("h0") @[ICache.scala 233:22]

  module shiftReg_1 :
    input clock : Clock
    input reset : Reset
    input in : UInt<1>
    input en : UInt<1>
    output output : UInt<1>[5]

    reg shiftregs_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[fetch.scala 90:56]
    reg shiftregs_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[fetch.scala 90:56]
    reg shiftregs_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[fetch.scala 90:56]
    reg shiftregs_3 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[fetch.scala 90:56]
    reg shiftregs_4 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[fetch.scala 90:56]
    when en : @[fetch.scala 92:14]
      shiftregs_0 <= in @[fetch.scala 93:20]
      shiftregs_1 <= shiftregs_0 @[fetch.scala 95:22]
      shiftregs_2 <= shiftregs_1 @[fetch.scala 95:22]
      shiftregs_3 <= shiftregs_2 @[fetch.scala 95:22]
      shiftregs_4 <= shiftregs_3 @[fetch.scala 95:22]
    output[0] <= shiftregs_0 @[fetch.scala 99:54]
    output[1] <= shiftregs_1 @[fetch.scala 99:54]
    output[2] <= shiftregs_2 @[fetch.scala 99:54]
    output[3] <= shiftregs_3 @[fetch.scala 99:54]
    output[4] <= shiftregs_4 @[fetch.scala 99:54]

  module updateShiftReg_1 :
    input clock : Clock
    input reset : Reset
    input in : UInt<1>
    input en : UInt<1>
    output output : UInt<1>[5]
    input updateVals : UInt<1>[5]
    input update : UInt<1>

    reg shiftregs_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[fetch.scala 90:56]
    reg shiftregs_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[fetch.scala 90:56]
    reg shiftregs_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[fetch.scala 90:56]
    reg shiftregs_3 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[fetch.scala 90:56]
    reg shiftregs_4 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[fetch.scala 90:56]
    when en : @[fetch.scala 92:14]
      shiftregs_0 <= in @[fetch.scala 93:20]
      shiftregs_1 <= shiftregs_0 @[fetch.scala 95:22]
      shiftregs_2 <= shiftregs_1 @[fetch.scala 95:22]
      shiftregs_3 <= shiftregs_2 @[fetch.scala 95:22]
      shiftregs_4 <= shiftregs_3 @[fetch.scala 95:22]
    output[0] <= shiftregs_0 @[fetch.scala 99:54]
    output[1] <= shiftregs_1 @[fetch.scala 99:54]
    output[2] <= shiftregs_2 @[fetch.scala 99:54]
    output[3] <= shiftregs_3 @[fetch.scala 99:54]
    output[4] <= shiftregs_4 @[fetch.scala 99:54]
    when update : @[fetch.scala 106:17]
      shiftregs_0 <= updateVals[0] @[fetch.scala 107:48]
      shiftregs_1 <= updateVals[1] @[fetch.scala 107:48]
      shiftregs_2 <= updateVals[2] @[fetch.scala 107:48]
      shiftregs_3 <= updateVals[3] @[fetch.scala 107:48]
      shiftregs_4 <= updateVals[4] @[fetch.scala 107:48]

  module gshare_predictor_1 :
    input clock : Clock
    input reset : Reset
    output io : { branchres : { ready : UInt<1>, flip fired : UInt<1>, flip isBranch : UInt<1>, flip branchTaken : UInt<1>, flip pc : UInt<64>, flip pcAfterBrnach : UInt<64>}, flip curr_pc : UInt<64>, next_pc : UInt<64>}
    input requestSent : UInt<1>
    input mispredicted : UInt<1>

    inst correct_history of shiftReg_1 @[fetch.scala 121:31]
    correct_history.clock <= clock
    correct_history.reset <= reset
    inst predicted_history of updateShiftReg_1 @[fetch.scala 122:33]
    predicted_history.clock <= clock
    predicted_history.reset <= reset
    node _correct_history_en_T = and(io.branchres.fired, io.branchres.isBranch) @[fetch.scala 123:44]
    correct_history.en <= _correct_history_en_T @[fetch.scala 123:22]
    correct_history.in <= io.branchres.branchTaken @[fetch.scala 124:22]
    predicted_history.updateVals[0] <= correct_history.output[0] @[fetch.scala 127:37]
    predicted_history.updateVals[1] <= correct_history.output[1] @[fetch.scala 127:37]
    predicted_history.updateVals[2] <= correct_history.output[2] @[fetch.scala 127:37]
    predicted_history.updateVals[3] <= correct_history.output[3] @[fetch.scala 127:37]
    predicted_history.updateVals[4] <= correct_history.output[4] @[fetch.scala 127:37]
    node _counterIndex_pred_T = bits(io.curr_pc, 7, 2) @[fetch.scala 131:41]
    node _counterIndex_pred_T_1 = bits(io.curr_pc, 6, 2) @[fetch.scala 131:109]
    node counterIndex_pred_lo = cat(predicted_history.output[1], predicted_history.output[0]) @[fetch.scala 131:178]
    node counterIndex_pred_hi_hi = cat(predicted_history.output[4], predicted_history.output[3]) @[fetch.scala 131:178]
    node counterIndex_pred_hi = cat(counterIndex_pred_hi_hi, predicted_history.output[2]) @[fetch.scala 131:178]
    node _counterIndex_pred_T_2 = cat(counterIndex_pred_hi, counterIndex_pred_lo) @[fetch.scala 131:178]
    node _counterIndex_pred_T_3 = bits(_counterIndex_pred_T_2, 3, 0) @[Bitwise.scala 114:18]
    node _counterIndex_pred_T_4 = bits(_counterIndex_pred_T_3, 1, 0) @[Bitwise.scala 114:18]
    node _counterIndex_pred_T_5 = bits(_counterIndex_pred_T_4, 0, 0) @[Bitwise.scala 114:18]
    node _counterIndex_pred_T_6 = bits(_counterIndex_pred_T_4, 1, 1) @[Bitwise.scala 114:47]
    node _counterIndex_pred_T_7 = cat(_counterIndex_pred_T_5, _counterIndex_pred_T_6) @[Cat.scala 33:92]
    node _counterIndex_pred_T_8 = bits(_counterIndex_pred_T_3, 3, 2) @[Bitwise.scala 114:47]
    node _counterIndex_pred_T_9 = bits(_counterIndex_pred_T_8, 0, 0) @[Bitwise.scala 114:18]
    node _counterIndex_pred_T_10 = bits(_counterIndex_pred_T_8, 1, 1) @[Bitwise.scala 114:47]
    node _counterIndex_pred_T_11 = cat(_counterIndex_pred_T_9, _counterIndex_pred_T_10) @[Cat.scala 33:92]
    node _counterIndex_pred_T_12 = cat(_counterIndex_pred_T_7, _counterIndex_pred_T_11) @[Cat.scala 33:92]
    node _counterIndex_pred_T_13 = bits(_counterIndex_pred_T_2, 4, 4) @[Bitwise.scala 114:47]
    node _counterIndex_pred_T_14 = cat(_counterIndex_pred_T_12, _counterIndex_pred_T_13) @[Cat.scala 33:92]
    node _counterIndex_pred_T_15 = xor(_counterIndex_pred_T_1, _counterIndex_pred_T_14) @[fetch.scala 131:143]
    node counterIndex_pred = cat(_counterIndex_pred_T, _counterIndex_pred_T_15) @[Cat.scala 33:92]
    node _counterIndex_train_T = bits(io.branchres.pc, 7, 2) @[fetch.scala 132:47]
    node _counterIndex_train_T_1 = bits(io.branchres.pc, 6, 2) @[fetch.scala 132:120]
    node counterIndex_train_lo = cat(correct_history.output[1], correct_history.output[0]) @[fetch.scala 132:187]
    node counterIndex_train_hi_hi = cat(correct_history.output[4], correct_history.output[3]) @[fetch.scala 132:187]
    node counterIndex_train_hi = cat(counterIndex_train_hi_hi, correct_history.output[2]) @[fetch.scala 132:187]
    node _counterIndex_train_T_2 = cat(counterIndex_train_hi, counterIndex_train_lo) @[fetch.scala 132:187]
    node _counterIndex_train_T_3 = bits(_counterIndex_train_T_2, 3, 0) @[Bitwise.scala 114:18]
    node _counterIndex_train_T_4 = bits(_counterIndex_train_T_3, 1, 0) @[Bitwise.scala 114:18]
    node _counterIndex_train_T_5 = bits(_counterIndex_train_T_4, 0, 0) @[Bitwise.scala 114:18]
    node _counterIndex_train_T_6 = bits(_counterIndex_train_T_4, 1, 1) @[Bitwise.scala 114:47]
    node _counterIndex_train_T_7 = cat(_counterIndex_train_T_5, _counterIndex_train_T_6) @[Cat.scala 33:92]
    node _counterIndex_train_T_8 = bits(_counterIndex_train_T_3, 3, 2) @[Bitwise.scala 114:47]
    node _counterIndex_train_T_9 = bits(_counterIndex_train_T_8, 0, 0) @[Bitwise.scala 114:18]
    node _counterIndex_train_T_10 = bits(_counterIndex_train_T_8, 1, 1) @[Bitwise.scala 114:47]
    node _counterIndex_train_T_11 = cat(_counterIndex_train_T_9, _counterIndex_train_T_10) @[Cat.scala 33:92]
    node _counterIndex_train_T_12 = cat(_counterIndex_train_T_7, _counterIndex_train_T_11) @[Cat.scala 33:92]
    node _counterIndex_train_T_13 = bits(_counterIndex_train_T_2, 4, 4) @[Bitwise.scala 114:47]
    node _counterIndex_train_T_14 = cat(_counterIndex_train_T_12, _counterIndex_train_T_13) @[Cat.scala 33:92]
    node _counterIndex_train_T_15 = xor(_counterIndex_train_T_1, _counterIndex_train_T_14) @[fetch.scala 132:154]
    node counterIndex_train = cat(_counterIndex_train_T, _counterIndex_train_T_15) @[Cat.scala 33:92]
    node btb_addr = bits(io.curr_pc, 9, 2) @[fetch.scala 140:28]
    node tag = bits(io.curr_pc, 63, 10) @[fetch.scala 141:23]
    node result_addr = bits(io.branchres.pc, 9, 2) @[fetch.scala 142:36]
    node result_tag = bits(io.branchres.pc, 63, 10) @[fetch.scala 143:35]
    cmem btb : UInt<64> [256] @[fetch.scala 146:16]
    cmem counters : UInt<2> [2048] @[fetch.scala 147:21]
    wire _valid_bits_WIRE : UInt<1>[256] @[fetch.scala 148:35]
    _valid_bits_WIRE[0] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[1] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[2] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[3] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[4] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[5] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[6] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[7] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[8] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[9] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[10] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[11] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[12] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[13] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[14] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[15] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[16] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[17] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[18] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[19] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[20] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[21] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[22] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[23] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[24] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[25] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[26] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[27] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[28] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[29] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[30] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[31] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[32] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[33] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[34] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[35] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[36] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[37] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[38] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[39] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[40] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[41] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[42] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[43] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[44] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[45] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[46] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[47] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[48] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[49] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[50] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[51] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[52] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[53] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[54] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[55] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[56] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[57] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[58] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[59] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[60] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[61] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[62] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[63] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[64] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[65] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[66] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[67] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[68] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[69] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[70] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[71] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[72] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[73] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[74] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[75] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[76] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[77] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[78] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[79] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[80] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[81] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[82] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[83] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[84] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[85] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[86] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[87] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[88] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[89] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[90] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[91] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[92] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[93] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[94] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[95] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[96] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[97] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[98] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[99] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[100] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[101] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[102] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[103] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[104] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[105] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[106] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[107] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[108] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[109] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[110] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[111] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[112] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[113] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[114] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[115] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[116] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[117] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[118] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[119] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[120] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[121] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[122] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[123] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[124] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[125] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[126] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[127] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[128] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[129] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[130] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[131] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[132] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[133] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[134] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[135] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[136] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[137] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[138] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[139] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[140] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[141] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[142] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[143] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[144] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[145] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[146] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[147] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[148] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[149] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[150] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[151] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[152] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[153] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[154] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[155] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[156] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[157] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[158] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[159] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[160] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[161] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[162] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[163] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[164] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[165] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[166] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[167] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[168] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[169] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[170] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[171] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[172] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[173] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[174] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[175] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[176] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[177] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[178] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[179] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[180] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[181] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[182] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[183] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[184] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[185] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[186] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[187] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[188] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[189] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[190] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[191] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[192] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[193] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[194] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[195] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[196] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[197] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[198] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[199] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[200] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[201] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[202] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[203] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[204] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[205] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[206] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[207] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[208] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[209] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[210] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[211] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[212] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[213] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[214] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[215] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[216] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[217] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[218] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[219] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[220] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[221] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[222] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[223] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[224] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[225] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[226] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[227] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[228] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[229] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[230] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[231] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[232] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[233] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[234] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[235] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[236] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[237] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[238] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[239] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[240] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[241] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[242] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[243] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[244] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[245] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[246] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[247] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[248] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[249] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[250] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[251] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[252] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[253] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[254] <= UInt<1>("h0") @[fetch.scala 148:35]
    _valid_bits_WIRE[255] <= UInt<1>("h0") @[fetch.scala 148:35]
    reg valid_bits : UInt<1>[256], clock with :
      reset => (reset, _valid_bits_WIRE) @[fetch.scala 148:27]
    cmem tag_store : UInt<54> [256] @[fetch.scala 149:22]
    when io.branchres.fired : @[fetch.scala 152:27]
      when io.branchres.isBranch : @[fetch.scala 153:33]
        valid_bits[result_addr] <= UInt<1>("h1") @[fetch.scala 154:31]
        infer mport MPORT = tag_store[result_addr], clock @[fetch.scala 155:16]
        MPORT <= result_tag @[fetch.scala 155:30]
        infer mport MPORT_1 = btb[result_addr], clock @[fetch.scala 156:10]
        MPORT_1 <= io.branchres.pcAfterBrnach @[fetch.scala 156:24]
        when io.branchres.branchTaken : @[fetch.scala 158:37]
          infer mport MPORT_2 = counters[counterIndex_train], clock @[fetch.scala 159:24]
          node _T = eq(MPORT_2, UInt<2>("h3")) @[fetch.scala 159:45]
          node _T_1 = eq(_T, UInt<1>("h0")) @[fetch.scala 159:14]
          when _T_1 : @[fetch.scala 159:54]
            infer mport MPORT_3 = counters[counterIndex_train], clock @[fetch.scala 160:19]
            infer mport MPORT_4 = counters[counterIndex_train], clock @[fetch.scala 160:51]
            node _T_2 = add(MPORT_4, UInt<1>("h1")) @[fetch.scala 160:72]
            node _T_3 = tail(_T_2, 1) @[fetch.scala 160:72]
            MPORT_3 <= _T_3 @[fetch.scala 160:40]
        else :
          infer mport MPORT_5 = counters[counterIndex_train], clock @[fetch.scala 163:24]
          node _T_4 = eq(MPORT_5, UInt<1>("h0")) @[fetch.scala 163:45]
          node _T_5 = eq(_T_4, UInt<1>("h0")) @[fetch.scala 163:14]
          when _T_5 : @[fetch.scala 163:55]
            infer mport MPORT_6 = counters[counterIndex_train], clock @[fetch.scala 164:19]
            infer mport MPORT_7 = counters[counterIndex_train], clock @[fetch.scala 164:51]
            node _T_6 = sub(MPORT_7, UInt<1>("h1")) @[fetch.scala 164:72]
            node _T_7 = tail(_T_6, 1) @[fetch.scala 164:72]
            MPORT_6 <= _T_7 @[fetch.scala 164:40]
      else :
        when io.branchres.branchTaken : @[fetch.scala 168:37]
          valid_bits[result_addr] <= UInt<1>("h0") @[fetch.scala 169:33]
    node _btb_hit_T = eq(valid_bits[btb_addr], UInt<1>("h1")) @[fetch.scala 174:37]
    infer mport btb_hit_MPORT = tag_store[btb_addr], clock @[fetch.scala 174:56]
    node _btb_hit_T_1 = eq(btb_hit_MPORT, tag) @[fetch.scala 174:67]
    node btb_hit = and(_btb_hit_T, _btb_hit_T_1) @[fetch.scala 174:44]
    infer mport prediction_MPORT = counters[counterIndex_pred], clock @[fetch.scala 175:28]
    node _prediction_T = bits(prediction_MPORT, 1, 1) @[fetch.scala 175:47]
    node prediction = eq(_prediction_T, UInt<1>("h1")) @[fetch.scala 175:51]
    node _predicted_history_en_T = eq(mispredicted, UInt<1>("h0")) @[fetch.scala 177:27]
    node _predicted_history_en_T_1 = and(_predicted_history_en_T, btb_hit) @[fetch.scala 177:41]
    node _predicted_history_en_T_2 = and(_predicted_history_en_T_1, requestSent) @[fetch.scala 177:52]
    predicted_history.en <= _predicted_history_en_T_2 @[fetch.scala 177:24]
    predicted_history.in <= prediction @[fetch.scala 178:24]
    node _io_next_pc_T = and(btb_hit, prediction) @[fetch.scala 180:29]
    infer mport io_next_pc_MPORT = btb[btb_addr], clock @[fetch.scala 180:47]
    node _io_next_pc_T_1 = add(io.curr_pc, UInt<3>("h4")) @[fetch.scala 180:70]
    node _io_next_pc_T_2 = tail(_io_next_pc_T_1, 1) @[fetch.scala 180:70]
    node _io_next_pc_T_3 = mux(_io_next_pc_T, io_next_pc_MPORT, _io_next_pc_T_2) @[fetch.scala 180:20]
    io.next_pc <= _io_next_pc_T_3 @[fetch.scala 180:14]
    when mispredicted : @[fetch.scala 183:22]
      predicted_history.update <= UInt<1>("h1") @[fetch.scala 184:30]
      when correct_history.en : @[fetch.scala 185:29]
        predicted_history.updateVals[0] <= io.branchres.branchTaken @[fetch.scala 186:39]
        predicted_history.updateVals[1] <= correct_history.output[1] @[fetch.scala 188:41]
        predicted_history.updateVals[2] <= correct_history.output[2] @[fetch.scala 188:41]
        predicted_history.updateVals[3] <= correct_history.output[3] @[fetch.scala 188:41]
        predicted_history.updateVals[4] <= correct_history.output[4] @[fetch.scala 188:41]
      else :
        predicted_history.updateVals[0] <= correct_history.output[0] @[fetch.scala 192:41]
        predicted_history.updateVals[1] <= correct_history.output[1] @[fetch.scala 192:41]
        predicted_history.updateVals[2] <= correct_history.output[2] @[fetch.scala 192:41]
        predicted_history.updateVals[3] <= correct_history.output[3] @[fetch.scala 192:41]
        predicted_history.updateVals[4] <= correct_history.output[4] @[fetch.scala 192:41]
    else :
      predicted_history.update <= UInt<1>("h0") @[fetch.scala 196:30]
    io.branchres.ready <= UInt<1>("h1") @[fetch.scala 199:22]

  module regFifo_1 :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<128>}, deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<128>}}
    output isEmpty : UInt<1>

    cmem memReg : UInt<128> [4] @[Fifo.scala 21:19]
    wire incrRead : UInt<1>
    incrRead <= UInt<1>("h0")
    wire incrWrite : UInt<1>
    incrWrite <= UInt<1>("h0")
    reg readPtr : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[Fifo.scala 12:26]
    node _nextVal_T = eq(readPtr, UInt<2>("h3")) @[Fifo.scala 13:30]
    node _nextVal_T_1 = add(readPtr, UInt<1>("h1")) @[Fifo.scala 13:60]
    node _nextVal_T_2 = tail(_nextVal_T_1, 1) @[Fifo.scala 13:60]
    node nextRead = mux(_nextVal_T, UInt<1>("h0"), _nextVal_T_2) @[Fifo.scala 13:22]
    when incrRead : @[Fifo.scala 14:17]
      readPtr <= nextRead @[Fifo.scala 15:14]
    reg writePtr : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[Fifo.scala 12:26]
    node _nextVal_T_3 = eq(writePtr, UInt<2>("h3")) @[Fifo.scala 13:30]
    node _nextVal_T_4 = add(writePtr, UInt<1>("h1")) @[Fifo.scala 13:60]
    node _nextVal_T_5 = tail(_nextVal_T_4, 1) @[Fifo.scala 13:60]
    node nextWrite = mux(_nextVal_T_3, UInt<1>("h0"), _nextVal_T_5) @[Fifo.scala 13:22]
    when incrWrite : @[Fifo.scala 14:17]
      writePtr <= nextWrite @[Fifo.scala 15:14]
    reg emptyReg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h1")) @[Fifo.scala 26:25]
    reg fullReg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Fifo.scala 27:24]
    node _T = and(io.deq.ready, io.deq.valid) @[Fifo.scala 30:21]
    node _T_1 = and(_T, io.enq.valid) @[Fifo.scala 30:37]
    node _T_2 = and(_T_1, io.enq.ready) @[Fifo.scala 30:53]
    when _T_2 : @[Fifo.scala 30:70]
      infer mport MPORT = memReg[writePtr], clock @[Fifo.scala 31:11]
      MPORT <= io.enq.bits @[Fifo.scala 31:22]
      incrWrite <= UInt<1>("h1") @[Fifo.scala 32:15]
      incrRead <= UInt<1>("h1") @[Fifo.scala 33:14]
    else :
      node _T_3 = and(io.enq.valid, io.enq.ready) @[Fifo.scala 34:27]
      when _T_3 : @[Fifo.scala 34:44]
        infer mport MPORT_1 = memReg[writePtr], clock @[Fifo.scala 35:11]
        MPORT_1 <= io.enq.bits @[Fifo.scala 35:22]
        emptyReg <= UInt<1>("h0") @[Fifo.scala 36:14]
        node _fullReg_T = eq(nextWrite, readPtr) @[Fifo.scala 37:26]
        fullReg <= _fullReg_T @[Fifo.scala 37:13]
        incrWrite <= UInt<1>("h1") @[Fifo.scala 38:15]
      else :
        node _T_4 = and(io.deq.ready, io.deq.valid) @[Fifo.scala 39:27]
        when _T_4 : @[Fifo.scala 39:44]
          fullReg <= UInt<1>("h0") @[Fifo.scala 40:13]
          node _emptyReg_T = eq(nextRead, writePtr) @[Fifo.scala 41:26]
          emptyReg <= _emptyReg_T @[Fifo.scala 41:14]
          incrRead <= UInt<1>("h1") @[Fifo.scala 42:14]
    infer mport io_deq_bits_MPORT = memReg[readPtr], clock @[Fifo.scala 45:24]
    io.deq.bits <= io_deq_bits_MPORT @[Fifo.scala 45:15]
    node _io_enq_ready_T = eq(fullReg, UInt<1>("h0")) @[Fifo.scala 46:19]
    node _io_enq_ready_T_1 = and(io.deq.valid, io.deq.ready) @[Fifo.scala 46:44]
    node _io_enq_ready_T_2 = or(_io_enq_ready_T, _io_enq_ready_T_1) @[Fifo.scala 46:28]
    io.enq.ready <= _io_enq_ready_T_2 @[Fifo.scala 46:16]
    node _io_deq_valid_T = eq(emptyReg, UInt<1>("h0")) @[Fifo.scala 47:19]
    io.deq.valid <= _io_deq_valid_T @[Fifo.scala 47:16]
    isEmpty <= emptyReg @[Fifo.scala 50:11]

  module fetch_1 :
    input clock : Clock
    input reset : Reset
    output cache : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<64>}, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<32>}}
    output toDecode : { ready : UInt<1>, flip fired : UInt<1>, pc : UInt<64>, instruction : UInt<32>, flip expected : { valid : UInt<1>, pc : UInt<64>, coherency : UInt<1>}}
    output branchRes : { ready : UInt<1>, flip fired : UInt<1>, flip isBranch : UInt<1>, flip branchTaken : UInt<1>, flip pc : UInt<64>, flip pcAfterBrnach : UInt<64>}
    output carryOutFence : { ready : UInt<1>, flip fired : UInt<1>}
    output updateAllCachelines : { ready : UInt<1>, flip fired : UInt<1>}
    output cachelinesUpdatesResp : { ready : UInt<1>, flip fired : UInt<1>}

    reg PC : UInt<64>, clock with :
      reset => (reset, UInt<64>("h10000000")) @[fetch.scala 248:19]
    reg redirect_bit : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[fetch.scala 249:28]
    reg handle_fenceI : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[fetch.scala 250:29]
    reg clear_cache_req : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[fetch.scala 251:31]
    reg cache_cleared : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[fetch.scala 252:29]
    reg fence_pending : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[fetch.scala 253:29]
    inst predictor of gshare_predictor_1 @[fetch.scala 257:25]
    predictor.clock <= clock
    predictor.reset <= reset
    predictor.io.branchres.pcAfterBrnach <= branchRes.pcAfterBrnach @[fetch.scala 258:26]
    predictor.io.branchres.pc <= branchRes.pc @[fetch.scala 258:26]
    predictor.io.branchres.branchTaken <= branchRes.branchTaken @[fetch.scala 258:26]
    predictor.io.branchres.isBranch <= branchRes.isBranch @[fetch.scala 258:26]
    predictor.io.branchres.fired <= branchRes.fired @[fetch.scala 258:26]
    branchRes.ready <= predictor.io.branchres.ready @[fetch.scala 258:26]
    predictor.io.curr_pc <= PC @[fetch.scala 259:24]
    inst PC_fifo of regFifo_1 @[fetch.scala 260:23]
    PC_fifo.clock <= clock
    PC_fifo.reset <= reset
    PC_fifo.io.enq.bits <= PC @[fetch.scala 263:23]
    node _PC_fifo_io_enq_valid_T = and(cache.req.valid, cache.req.ready) @[fetch.scala 264:43]
    PC_fifo.io.enq.valid <= _PC_fifo_io_enq_valid_T @[fetch.scala 264:24]
    node _PC_fifo_io_deq_ready_T = and(cache.resp.valid, cache.resp.ready) @[fetch.scala 265:44]
    PC_fifo.io.deq.ready <= _PC_fifo_io_deq_ready_T @[fetch.scala 265:24]
    toDecode.pc <= PC_fifo.io.deq.bits @[fetch.scala 266:15]
    node _is_fenceI_T = bits(toDecode.instruction, 6, 2) @[fetch.scala 269:40]
    node _is_fenceI_T_1 = eq(_is_fenceI_T, UInt<2>("h3")) @[fetch.scala 269:46]
    node _is_fenceI_T_2 = bits(toDecode.instruction, 14, 13) @[fetch.scala 269:85]
    node _is_fenceI_T_3 = eq(_is_fenceI_T_2, UInt<1>("h0")) @[fetch.scala 269:93]
    node _is_fenceI_T_4 = and(_is_fenceI_T_1, _is_fenceI_T_3) @[fetch.scala 269:62]
    node is_fenceI = and(_is_fenceI_T_4, toDecode.fired) @[fetch.scala 269:102]
    node _T = eq(handle_fenceI, UInt<1>("h1")) @[fetch.scala 270:22]
    when _T : @[fetch.scala 270:29]
      PC_fifo.reset <= UInt<1>("h1") @[fetch.scala 271:18]
    node _T_1 = eq(handle_fenceI, UInt<1>("h0")) @[fetch.scala 273:23]
    when _T_1 : @[fetch.scala 273:31]
      handle_fenceI <= is_fenceI @[fetch.scala 274:19]
    else :
      node _T_2 = eq(clear_cache_req, UInt<1>("h0")) @[fetch.scala 276:26]
      node _T_3 = eq(cache_cleared, UInt<1>("h0")) @[fetch.scala 276:49]
      node _T_4 = and(_T_2, _T_3) @[fetch.scala 276:33]
      node _T_5 = eq(fence_pending, UInt<1>("h0")) @[fetch.scala 276:72]
      node _T_6 = and(_T_4, _T_5) @[fetch.scala 276:57]
      when _T_6 : @[fetch.scala 276:79]
        handle_fenceI <= UInt<1>("h0") @[fetch.scala 277:21]
    node _T_7 = eq(clear_cache_req, UInt<1>("h0")) @[fetch.scala 281:24]
    node _T_8 = eq(handle_fenceI, UInt<1>("h0")) @[fetch.scala 281:33]
    node _T_9 = eq(_T_8, UInt<1>("h1")) @[fetch.scala 281:47]
    node _T_10 = and(_T_7, _T_9) @[fetch.scala 281:31]
    when _T_10 : @[fetch.scala 281:54]
      clear_cache_req <= is_fenceI @[fetch.scala 282:21]
    else :
      when updateAllCachelines.fired : @[fetch.scala 283:40]
        clear_cache_req <= UInt<1>("h0") @[fetch.scala 284:21]
    node _T_11 = eq(cache_cleared, UInt<1>("h0")) @[fetch.scala 287:22]
    node _T_12 = eq(handle_fenceI, UInt<1>("h0")) @[fetch.scala 287:32]
    node _T_13 = eq(_T_12, UInt<1>("h1")) @[fetch.scala 287:46]
    node _T_14 = and(_T_11, _T_13) @[fetch.scala 287:30]
    when _T_14 : @[fetch.scala 287:54]
      cache_cleared <= is_fenceI @[fetch.scala 288:19]
    else :
      when cachelinesUpdatesResp.fired : @[fetch.scala 289:43]
        cache_cleared <= UInt<1>("h0") @[fetch.scala 290:19]
    carryOutFence.ready <= fence_pending @[fetch.scala 293:23]
    node _T_15 = eq(fence_pending, UInt<1>("h0")) @[fetch.scala 295:22]
    node _T_16 = eq(handle_fenceI, UInt<1>("h0")) @[fetch.scala 295:31]
    node _T_17 = eq(_T_16, UInt<1>("h1")) @[fetch.scala 295:45]
    node _T_18 = and(_T_15, _T_17) @[fetch.scala 295:29]
    when _T_18 : @[fetch.scala 295:52]
      fence_pending <= is_fenceI @[fetch.scala 296:18]
    else :
      when carryOutFence.fired : @[fetch.scala 297:34]
        fence_pending <= UInt<1>("h0") @[fetch.scala 298:18]
    wire redirect : UInt<1> @[fetch.scala 302:22]
    wire coherent : UInt<1> @[fetch.scala 303:22]
    node _redirect_T = eq(toDecode.expected.pc, toDecode.pc) @[fetch.scala 305:38]
    node _redirect_T_1 = eq(_redirect_T, UInt<1>("h0")) @[fetch.scala 305:15]
    node _redirect_T_2 = and(_redirect_T_1, toDecode.expected.valid) @[fetch.scala 305:55]
    redirect <= _redirect_T_2 @[fetch.scala 305:12]
    coherent <= toDecode.expected.coherency @[fetch.scala 306:12]
    node _T_19 = eq(redirect_bit, UInt<1>("h0")) @[fetch.scala 309:20]
    node _T_20 = and(_T_19, PC_fifo.io.deq.valid) @[fetch.scala 309:27]
    when _T_20 : @[fetch.scala 309:50]
      redirect_bit <= redirect @[fetch.scala 310:18]
    else :
      node _T_21 = eq(PC_fifo.io.deq.valid, UInt<1>("h0")) @[fetch.scala 311:36]
      when _T_21 : @[fetch.scala 311:44]
        redirect_bit <= UInt<1>("h0") @[fetch.scala 312:18]
    node _T_22 = eq(redirect_bit, UInt<1>("h1")) @[fetch.scala 317:20]
    when _T_22 : @[fetch.scala 317:28]
      PC <= toDecode.expected.pc @[fetch.scala 318:8]
    else :
      when is_fenceI : @[fetch.scala 319:25]
        node _PC_T = add(PC_fifo.io.deq.bits, UInt<3>("h4")) @[fetch.scala 320:31]
        node _PC_T_1 = tail(_PC_T, 1) @[fetch.scala 320:31]
        PC <= _PC_T_1 @[fetch.scala 320:8]
      else :
        node _T_23 = and(cache.req.valid, cache.req.ready) @[fetch.scala 321:30]
        when _T_23 : @[fetch.scala 321:49]
          PC <= predictor.io.next_pc @[fetch.scala 322:8]
    cache.req.bits <= PC @[fetch.scala 324:18]
    node _cache_req_valid_T = eq(redirect_bit, UInt<1>("h0")) @[fetch.scala 327:35]
    node _cache_req_valid_T_1 = and(_cache_req_valid_T, PC_fifo.io.enq.ready) @[fetch.scala 327:43]
    node _cache_req_valid_T_2 = eq(is_fenceI, UInt<1>("h0")) @[fetch.scala 327:68]
    node _cache_req_valid_T_3 = and(_cache_req_valid_T_1, _cache_req_valid_T_2) @[fetch.scala 327:66]
    node _cache_req_valid_T_4 = eq(handle_fenceI, UInt<1>("h1")) @[fetch.scala 327:96]
    node _cache_req_valid_T_5 = eq(_cache_req_valid_T_4, UInt<1>("h0")) @[fetch.scala 327:81]
    node _cache_req_valid_T_6 = and(_cache_req_valid_T_3, _cache_req_valid_T_5) @[fetch.scala 327:79]
    cache.req.valid <= _cache_req_valid_T_6 @[fetch.scala 327:19]
    node _cache_resp_ready_T = eq(redirect_bit, UInt<1>("h1")) @[fetch.scala 328:36]
    node _cache_resp_ready_T_1 = or(_cache_resp_ready_T, toDecode.fired) @[fetch.scala 328:43]
    node _cache_resp_ready_T_2 = eq(handle_fenceI, UInt<1>("h0")) @[fetch.scala 328:64]
    node _cache_resp_ready_T_3 = and(_cache_resp_ready_T_1, _cache_resp_ready_T_2) @[fetch.scala 328:62]
    cache.resp.ready <= _cache_resp_ready_T_3 @[fetch.scala 328:20]
    updateAllCachelines.ready <= clear_cache_req @[fetch.scala 329:29]
    cachelinesUpdatesResp.ready <= cache_cleared @[fetch.scala 330:31]
    node _T_24 = eq(redirect_bit, UInt<1>("h1")) @[fetch.scala 332:33]
    node _T_25 = or(redirect, _T_24) @[fetch.scala 332:18]
    node _T_26 = eq(cache.resp.valid, UInt<1>("h0")) @[fetch.scala 332:43]
    node _T_27 = or(_T_25, _T_26) @[fetch.scala 332:40]
    node _T_28 = eq(PC_fifo.io.deq.valid, UInt<1>("h0")) @[fetch.scala 332:64]
    node _T_29 = or(_T_27, _T_28) @[fetch.scala 332:61]
    node _T_30 = eq(handle_fenceI, UInt<1>("h1")) @[fetch.scala 332:102]
    node _T_31 = or(_T_29, _T_30) @[fetch.scala 332:86]
    when _T_31 : @[fetch.scala 332:109]
      toDecode.ready <= UInt<1>("h0") @[fetch.scala 333:20]
    else :
      toDecode.ready <= UInt<1>("h1") @[fetch.scala 335:20]
    toDecode.instruction <= cache.resp.bits @[fetch.scala 338:24]
    node _predictor_requestSent_T = and(cache.req.valid, cache.req.ready) @[fetch.scala 340:44]
    predictor.requestSent <= _predictor_requestSent_T @[fetch.scala 340:25]
    reg misPredicted : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[fetch.scala 343:29]
    node _T_32 = eq(redirect_bit, UInt<1>("h0")) @[fetch.scala 344:21]
    node _T_33 = and(_T_32, PC_fifo.io.deq.valid) @[fetch.scala 344:28]
    when _T_33 : @[fetch.scala 344:51]
      node _misPredicted_T = eq(coherent, UInt<1>("h0")) @[fetch.scala 345:33]
      node _misPredicted_T_1 = and(redirect, _misPredicted_T) @[fetch.scala 345:30]
      misPredicted <= _misPredicted_T_1 @[fetch.scala 345:18]
    else :
      misPredicted <= UInt<1>("h0") @[fetch.scala 347:18]
    predictor.mispredicted <= misPredicted @[fetch.scala 350:26]
    node _T_34 = bits(handle_fenceI, 0, 0) @[fetch.scala 351:22]
    when _T_34 : @[fetch.scala 351:30]
      cache.resp.ready <= UInt<1>("h1") @[fetch.scala 351:49]

  module core_Anon_2 :
    input clock : Clock
    input reset : Reset
    output fromFetch : { ready : UInt<1>, flip fired : UInt<1>, flip pc : UInt<64>, flip instruction : UInt<32>, expected : { valid : UInt<1>, pc : UInt<64>, coherency : UInt<1>}}
    output toExec : { ready : UInt<1>, flip fired : UInt<1>, instruction : UInt<32>, pc : UInt<64>, PRFDest : UInt<6>, rs1Addr : UInt<6>, rs1Ready : UInt<1>, rs2Addr : UInt<6>, rs2Ready : UInt<1>, immediate : UInt<64>, flip robAddr : UInt<4>, branchMask : UInt<5>}
    output writeBackResult : { ready : UInt<1>, flip fired : UInt<1>, flip pc : UInt<64>, flip instruction : UInt<32>, flip rdAddr : UInt<5>, flip PRFDest : UInt<6>, flip robAddr : UInt<4>, flip data : UInt<64>}
    output writeAddrPRF : { flip exec1Addr : UInt<6>, flip exec2Addr : UInt<6>, flip exec3Addr : UInt<6>, flip exec1Valid : UInt<1>, flip exec2Valid : UInt<1>, flip exec3Valid : UInt<1>}
    output jumpAddrWrite : { ready : UInt<1>, flip fired : UInt<1>, PRFDest : UInt<6>, linkAddr : UInt<64>}
    output branchPCs : { ready : UInt<1>, flip fired : UInt<1>, branchPCReady : UInt<1>, branchPC : UInt<64>, predictedPCReady : UInt<1>, predictedPC : UInt<64>, branchMask : UInt<5>}
    output branchEvalIn : { ready : UInt<1>, flip fired : UInt<1>, flip passFail : UInt<1>, flip branchMask : UInt<5>, flip targetPC : UInt<64>}
    output branchEvalOut : { ready : UInt<1>, flip fired : UInt<1>, passFail : UInt<1>, branchMask : UInt<4>}
    output retiredRenamedTable : { table : UInt<6>[32]}
    input interruptedPC : UInt<64>
    output freeCount : UInt<7>
    output canTakeInterrupt : UInt<1>
    output registersOut : UInt<64>[33]

    wire _inputBuffer_WIRE : { pc : UInt<64>, instruction : UInt<32>}
    _inputBuffer_WIRE.instruction <= UInt<1>("h0")
    _inputBuffer_WIRE.pc <= UInt<28>("hffffffc")
    reg inputBuffer : { pc : UInt<64>, instruction : UInt<32>}, clock with :
      reset => (reset, _inputBuffer_WIRE) @[decode.scala 111:28]
    wire _outputBuffer_WIRE : { instruction : UInt<32>, pc : UInt<64>, PRFDest : UInt<6>, rs1Addr : UInt<6>, rs2Addr : UInt<6>, immediate : UInt<64>, passFail : UInt<1>, branchMask : UInt<5>, branchEvalReady : UInt<1>}
    _outputBuffer_WIRE.branchEvalReady <= UInt<1>("h0")
    _outputBuffer_WIRE.branchMask <= UInt<1>("h0")
    _outputBuffer_WIRE.passFail <= UInt<1>("h0")
    _outputBuffer_WIRE.immediate <= UInt<1>("h0")
    _outputBuffer_WIRE.rs2Addr <= UInt<1>("h0")
    _outputBuffer_WIRE.rs1Addr <= UInt<1>("h0")
    _outputBuffer_WIRE.PRFDest <= UInt<1>("h0")
    _outputBuffer_WIRE.pc <= UInt<1>("h0")
    _outputBuffer_WIRE.instruction <= UInt<1>("h0")
    reg outputBuffer : { instruction : UInt<32>, pc : UInt<64>, PRFDest : UInt<6>, rs1Addr : UInt<6>, rs2Addr : UInt<6>, immediate : UInt<64>, passFail : UInt<1>, branchMask : UInt<5>, branchEvalReady : UInt<1>}, clock with :
      reset => (reset, _outputBuffer_WIRE) @[decode.scala 120:29]
    wire _branchBuffer_WIRE : { branchPCReady : UInt<1>, predictedPCReady : UInt<1>, branchPC : UInt<64>, predictedPC : UInt<64>, branchMask : UInt<1>[5]}
    _branchBuffer_WIRE.branchMask[0] <= UInt<1>("h0")
    _branchBuffer_WIRE.branchMask[1] <= UInt<1>("h0")
    _branchBuffer_WIRE.branchMask[2] <= UInt<1>("h0")
    _branchBuffer_WIRE.branchMask[3] <= UInt<1>("h0")
    _branchBuffer_WIRE.branchMask[4] <= UInt<1>("h1")
    _branchBuffer_WIRE.predictedPC <= UInt<1>("h0")
    _branchBuffer_WIRE.branchPC <= UInt<1>("h0")
    _branchBuffer_WIRE.predictedPCReady <= UInt<1>("h0")
    _branchBuffer_WIRE.branchPCReady <= UInt<1>("h0")
    reg branchBuffer : { branchPCReady : UInt<1>, predictedPCReady : UInt<1>, branchPC : UInt<64>, predictedPC : UInt<64>, branchMask : UInt<1>[5]}, clock with :
      reset => (reset, _branchBuffer_WIRE) @[decode.scala 142:29]
    wire opcode : UInt<7>
    opcode <= UInt<7>("h0")
    wire rs1 : UInt<5>
    rs1 <= UInt<5>("h0")
    wire rs2 : UInt<5>
    rs2 <= UInt<5>("h0")
    wire rd : UInt<5>
    rd <= UInt<5>("h0")
    wire fun3 : UInt<3>
    fun3 <= UInt<3>("h0")
    wire insType : UInt<3>
    insType <= UInt<3>("h0")
    wire immediate : UInt<64>
    immediate <= UInt<64>("h0")
    wire rs1Addr : UInt<6>
    rs1Addr <= UInt<6>("h0")
    wire rs2Addr : UInt<6>
    rs2Addr <= UInt<6>("h0")
    wire rs1Valid : UInt<1>
    rs1Valid <= UInt<1>("h0")
    wire rs2Valid : UInt<1>
    rs2Valid <= UInt<1>("h0")
    wire freeRegAddr : UInt<6>
    freeRegAddr <= UInt<6>("h0")
    reg branchTracker : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[decode.scala 178:30]
    wire ins : UInt<32>
    ins <= UInt<32>("h0")
    wire pc : UInt<64>
    pc <= UInt<64>("h0")
    wire validInputBuf : UInt<1>
    validInputBuf <= UInt<1>("h0")
    wire readyInputBuf : UInt<1>
    readyInputBuf <= UInt<1>("h0")
    wire validOutputBuf : UInt<1>
    validOutputBuf <= UInt<1>("h0")
    wire readyOutputBuf : UInt<1>
    readyOutputBuf <= UInt<1>("h0")
    reg expectedPC : UInt<64>, clock with :
      reset => (reset, UInt<64>("h10000000")) @[decode.scala 188:27]
    reg coherency : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[decode.scala 189:26]
    reg stateRegInputBuf : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[decode.scala 193:34]
    reg stateRegOutputBuf : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[decode.scala 194:34]
    reg stallReg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[decode.scala 196:25]
    reg ecallPC : UInt<64>, clock with :
      reset => (UInt<1>("h0"), ecallPC) @[decode.scala 197:20]
    wire _PRFValidList_WIRE : UInt<1>[64] @[decode.scala 199:37]
    _PRFValidList_WIRE[0] <= UInt<1>("h1") @[decode.scala 199:37]
    _PRFValidList_WIRE[1] <= UInt<1>("h1") @[decode.scala 199:37]
    _PRFValidList_WIRE[2] <= UInt<1>("h1") @[decode.scala 199:37]
    _PRFValidList_WIRE[3] <= UInt<1>("h1") @[decode.scala 199:37]
    _PRFValidList_WIRE[4] <= UInt<1>("h1") @[decode.scala 199:37]
    _PRFValidList_WIRE[5] <= UInt<1>("h1") @[decode.scala 199:37]
    _PRFValidList_WIRE[6] <= UInt<1>("h1") @[decode.scala 199:37]
    _PRFValidList_WIRE[7] <= UInt<1>("h1") @[decode.scala 199:37]
    _PRFValidList_WIRE[8] <= UInt<1>("h1") @[decode.scala 199:37]
    _PRFValidList_WIRE[9] <= UInt<1>("h1") @[decode.scala 199:37]
    _PRFValidList_WIRE[10] <= UInt<1>("h1") @[decode.scala 199:37]
    _PRFValidList_WIRE[11] <= UInt<1>("h1") @[decode.scala 199:37]
    _PRFValidList_WIRE[12] <= UInt<1>("h1") @[decode.scala 199:37]
    _PRFValidList_WIRE[13] <= UInt<1>("h1") @[decode.scala 199:37]
    _PRFValidList_WIRE[14] <= UInt<1>("h1") @[decode.scala 199:37]
    _PRFValidList_WIRE[15] <= UInt<1>("h1") @[decode.scala 199:37]
    _PRFValidList_WIRE[16] <= UInt<1>("h1") @[decode.scala 199:37]
    _PRFValidList_WIRE[17] <= UInt<1>("h1") @[decode.scala 199:37]
    _PRFValidList_WIRE[18] <= UInt<1>("h1") @[decode.scala 199:37]
    _PRFValidList_WIRE[19] <= UInt<1>("h1") @[decode.scala 199:37]
    _PRFValidList_WIRE[20] <= UInt<1>("h1") @[decode.scala 199:37]
    _PRFValidList_WIRE[21] <= UInt<1>("h1") @[decode.scala 199:37]
    _PRFValidList_WIRE[22] <= UInt<1>("h1") @[decode.scala 199:37]
    _PRFValidList_WIRE[23] <= UInt<1>("h1") @[decode.scala 199:37]
    _PRFValidList_WIRE[24] <= UInt<1>("h1") @[decode.scala 199:37]
    _PRFValidList_WIRE[25] <= UInt<1>("h1") @[decode.scala 199:37]
    _PRFValidList_WIRE[26] <= UInt<1>("h1") @[decode.scala 199:37]
    _PRFValidList_WIRE[27] <= UInt<1>("h1") @[decode.scala 199:37]
    _PRFValidList_WIRE[28] <= UInt<1>("h1") @[decode.scala 199:37]
    _PRFValidList_WIRE[29] <= UInt<1>("h1") @[decode.scala 199:37]
    _PRFValidList_WIRE[30] <= UInt<1>("h1") @[decode.scala 199:37]
    _PRFValidList_WIRE[31] <= UInt<1>("h1") @[decode.scala 199:37]
    _PRFValidList_WIRE[32] <= UInt<1>("h0") @[decode.scala 199:37]
    _PRFValidList_WIRE[33] <= UInt<1>("h0") @[decode.scala 199:37]
    _PRFValidList_WIRE[34] <= UInt<1>("h0") @[decode.scala 199:37]
    _PRFValidList_WIRE[35] <= UInt<1>("h0") @[decode.scala 199:37]
    _PRFValidList_WIRE[36] <= UInt<1>("h0") @[decode.scala 199:37]
    _PRFValidList_WIRE[37] <= UInt<1>("h0") @[decode.scala 199:37]
    _PRFValidList_WIRE[38] <= UInt<1>("h0") @[decode.scala 199:37]
    _PRFValidList_WIRE[39] <= UInt<1>("h0") @[decode.scala 199:37]
    _PRFValidList_WIRE[40] <= UInt<1>("h0") @[decode.scala 199:37]
    _PRFValidList_WIRE[41] <= UInt<1>("h0") @[decode.scala 199:37]
    _PRFValidList_WIRE[42] <= UInt<1>("h0") @[decode.scala 199:37]
    _PRFValidList_WIRE[43] <= UInt<1>("h0") @[decode.scala 199:37]
    _PRFValidList_WIRE[44] <= UInt<1>("h0") @[decode.scala 199:37]
    _PRFValidList_WIRE[45] <= UInt<1>("h0") @[decode.scala 199:37]
    _PRFValidList_WIRE[46] <= UInt<1>("h0") @[decode.scala 199:37]
    _PRFValidList_WIRE[47] <= UInt<1>("h0") @[decode.scala 199:37]
    _PRFValidList_WIRE[48] <= UInt<1>("h0") @[decode.scala 199:37]
    _PRFValidList_WIRE[49] <= UInt<1>("h0") @[decode.scala 199:37]
    _PRFValidList_WIRE[50] <= UInt<1>("h0") @[decode.scala 199:37]
    _PRFValidList_WIRE[51] <= UInt<1>("h0") @[decode.scala 199:37]
    _PRFValidList_WIRE[52] <= UInt<1>("h0") @[decode.scala 199:37]
    _PRFValidList_WIRE[53] <= UInt<1>("h0") @[decode.scala 199:37]
    _PRFValidList_WIRE[54] <= UInt<1>("h0") @[decode.scala 199:37]
    _PRFValidList_WIRE[55] <= UInt<1>("h0") @[decode.scala 199:37]
    _PRFValidList_WIRE[56] <= UInt<1>("h0") @[decode.scala 199:37]
    _PRFValidList_WIRE[57] <= UInt<1>("h0") @[decode.scala 199:37]
    _PRFValidList_WIRE[58] <= UInt<1>("h0") @[decode.scala 199:37]
    _PRFValidList_WIRE[59] <= UInt<1>("h0") @[decode.scala 199:37]
    _PRFValidList_WIRE[60] <= UInt<1>("h0") @[decode.scala 199:37]
    _PRFValidList_WIRE[61] <= UInt<1>("h0") @[decode.scala 199:37]
    _PRFValidList_WIRE[62] <= UInt<1>("h0") @[decode.scala 199:37]
    _PRFValidList_WIRE[63] <= UInt<1>("h0") @[decode.scala 199:37]
    reg PRFValidList : UInt<1>[64], clock with :
      reset => (reset, _PRFValidList_WIRE) @[decode.scala 199:29]
    node _T = and(fromFetch.fired, readyInputBuf) @[decode.scala 202:24]
    when _T : @[decode.scala 202:42]
      inputBuffer.instruction <= fromFetch.instruction @[decode.scala 203:29]
      inputBuffer.pc <= fromFetch.pc @[decode.scala 204:29]
      node _T_1 = bits(fromFetch.instruction, 6, 0) @[decode.scala 205:31]
      node _T_2 = eq(_T_1, UInt<7>("h73")) @[decode.scala 205:37]
      when _T_2 : @[decode.scala 205:97]
        stallReg <= UInt<1>("h1") @[decode.scala 206:16]
        ecallPC <= fromFetch.pc @[decode.scala 207:15]
    node _T_3 = and(validInputBuf, readyOutputBuf) @[decode.scala 212:22]
    when _T_3 : @[decode.scala 212:41]
      outputBuffer.instruction <= ins @[decode.scala 213:30]
      outputBuffer.pc <= pc @[decode.scala 214:30]
      outputBuffer.PRFDest <= freeRegAddr @[decode.scala 215:30]
      outputBuffer.rs1Addr <= rs1Addr @[decode.scala 216:30]
      outputBuffer.rs2Addr <= rs2Addr @[decode.scala 217:30]
      outputBuffer.immediate <= immediate @[decode.scala 218:30]
    outputBuffer.branchEvalReady <= branchEvalIn.fired @[decode.scala 221:32]
    outputBuffer.passFail <= branchEvalIn.passFail @[decode.scala 222:32]
    outputBuffer.branchMask <= branchEvalIn.branchMask @[decode.scala 223:32]
    reg branchPCMask : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[decode.scala 225:29]
    reg branchReg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[decode.scala 226:29]
    wire stall : UInt<1>
    stall <= UInt<1>("h0")
    wire isCSR : UInt<1>
    isCSR <= UInt<1>("h0")
    wire waitToCommit : UInt<1>
    waitToCommit <= UInt<1>("h0")
    reg issueRobBuff : UInt<4>, clock with :
      reset => (reset, UInt<4>("h0")) @[decode.scala 232:29]
    reg commitRobBuf : UInt<4>, clock with :
      reset => (reset, UInt<4>("h0")) @[decode.scala 233:29]
    reg csrDone : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[decode.scala 234:24]
    wire unconditionalJumps : UInt<1>
    unconditionalJumps <= UInt<1>("h0")
    wire csrIns : UInt<1>
    csrIns <= UInt<1>("h0")
    reg csrRobAddrReg : UInt<4>, clock with :
      reset => (reset, UInt<4>("h0")) @[decode.scala 239:30]
    reg csrReadDataReg : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[decode.scala 240:31]
    reg csrFunc3Reg : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[decode.scala 241:28]
    reg csrAddrReg : UInt<12>, clock with :
      reset => (reset, UInt<12>("h0")) @[decode.scala 242:27]
    reg csrImmReg : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[decode.scala 243:26]
    reg csrInsReg : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[decode.scala 244:26]
    toExec.ready <= validOutputBuf @[decode.scala 249:22]
    toExec.instruction <= outputBuffer.instruction @[decode.scala 250:22]
    toExec.pc <= outputBuffer.pc @[decode.scala 251:22]
    toExec.PRFDest <= outputBuffer.PRFDest @[decode.scala 252:22]
    toExec.rs1Addr <= outputBuffer.rs1Addr @[decode.scala 253:22]
    toExec.rs1Ready <= PRFValidList[outputBuffer.rs1Addr] @[decode.scala 254:22]
    toExec.rs2Addr <= outputBuffer.rs2Addr @[decode.scala 255:22]
    node _toExec_rs2Ready_T = bits(outputBuffer.instruction, 6, 0) @[decode.scala 256:139]
    wire toExec_rs2Ready_insType : UInt<3>
    toExec_rs2Ready_insType <= UInt<3>("h0")
    node _toExec_rs2Ready_T_1 = eq(UInt<6>("h37"), _toExec_rs2Ready_T) @[utils.scala 10:20]
    when _toExec_rs2Ready_T_1 : @[utils.scala 10:20]
      toExec_rs2Ready_insType <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _toExec_rs2Ready_T_2 = eq(UInt<5>("h17"), _toExec_rs2Ready_T) @[utils.scala 10:20]
      when _toExec_rs2Ready_T_2 : @[utils.scala 10:20]
        toExec_rs2Ready_insType <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _toExec_rs2Ready_T_3 = eq(UInt<7>("h6f"), _toExec_rs2Ready_T) @[utils.scala 10:20]
        when _toExec_rs2Ready_T_3 : @[utils.scala 10:20]
          toExec_rs2Ready_insType <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _toExec_rs2Ready_T_4 = eq(UInt<7>("h67"), _toExec_rs2Ready_T) @[utils.scala 10:20]
          when _toExec_rs2Ready_T_4 : @[utils.scala 10:20]
            toExec_rs2Ready_insType <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _toExec_rs2Ready_T_5 = eq(UInt<7>("h63"), _toExec_rs2Ready_T) @[utils.scala 10:20]
            when _toExec_rs2Ready_T_5 : @[utils.scala 10:20]
              toExec_rs2Ready_insType <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _toExec_rs2Ready_T_6 = eq(UInt<2>("h3"), _toExec_rs2Ready_T) @[utils.scala 10:20]
              when _toExec_rs2Ready_T_6 : @[utils.scala 10:20]
                toExec_rs2Ready_insType <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _toExec_rs2Ready_T_7 = eq(UInt<6>("h23"), _toExec_rs2Ready_T) @[utils.scala 10:20]
                when _toExec_rs2Ready_T_7 : @[utils.scala 10:20]
                  toExec_rs2Ready_insType <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _toExec_rs2Ready_T_8 = eq(UInt<5>("h13"), _toExec_rs2Ready_T) @[utils.scala 10:20]
                  when _toExec_rs2Ready_T_8 : @[utils.scala 10:20]
                    toExec_rs2Ready_insType <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _toExec_rs2Ready_T_9 = eq(UInt<5>("h1b"), _toExec_rs2Ready_T) @[utils.scala 10:20]
                    when _toExec_rs2Ready_T_9 : @[utils.scala 10:20]
                      toExec_rs2Ready_insType <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _toExec_rs2Ready_T_10 = eq(UInt<6>("h33"), _toExec_rs2Ready_T) @[utils.scala 10:20]
                      when _toExec_rs2Ready_T_10 : @[utils.scala 10:20]
                        toExec_rs2Ready_insType <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _toExec_rs2Ready_T_11 = eq(UInt<6>("h3b"), _toExec_rs2Ready_T) @[utils.scala 10:20]
                        when _toExec_rs2Ready_T_11 : @[utils.scala 10:20]
                          toExec_rs2Ready_insType <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _toExec_rs2Ready_T_12 = eq(UInt<7>("h73"), _toExec_rs2Ready_T) @[utils.scala 10:20]
                          when _toExec_rs2Ready_T_12 : @[utils.scala 10:20]
                            toExec_rs2Ready_insType <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _toExec_rs2Ready_T_13 = eq(UInt<4>("hf"), _toExec_rs2Ready_T) @[utils.scala 10:20]
                            when _toExec_rs2Ready_T_13 : @[utils.scala 10:20]
                              toExec_rs2Ready_insType <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _toExec_rs2Ready_T_14 = eq(UInt<6>("h2f"), _toExec_rs2Ready_T) @[utils.scala 10:20]
                              when _toExec_rs2Ready_T_14 : @[utils.scala 10:20]
                                toExec_rs2Ready_insType <= UInt<1>("h0") @[utils.scala 51:17]
    node _toExec_rs2Ready_T_15 = eq(UInt<1>("h1"), toExec_rs2Ready_insType) @[decode.scala 256:100]
    node _toExec_rs2Ready_T_16 = bits(outputBuffer.instruction, 6, 0) @[decode.scala 256:139]
    wire toExec_rs2Ready_insType_1 : UInt<3>
    toExec_rs2Ready_insType_1 <= UInt<3>("h0")
    node _toExec_rs2Ready_T_17 = eq(UInt<6>("h37"), _toExec_rs2Ready_T_16) @[utils.scala 10:20]
    when _toExec_rs2Ready_T_17 : @[utils.scala 10:20]
      toExec_rs2Ready_insType_1 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _toExec_rs2Ready_T_18 = eq(UInt<5>("h17"), _toExec_rs2Ready_T_16) @[utils.scala 10:20]
      when _toExec_rs2Ready_T_18 : @[utils.scala 10:20]
        toExec_rs2Ready_insType_1 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _toExec_rs2Ready_T_19 = eq(UInt<7>("h6f"), _toExec_rs2Ready_T_16) @[utils.scala 10:20]
        when _toExec_rs2Ready_T_19 : @[utils.scala 10:20]
          toExec_rs2Ready_insType_1 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _toExec_rs2Ready_T_20 = eq(UInt<7>("h67"), _toExec_rs2Ready_T_16) @[utils.scala 10:20]
          when _toExec_rs2Ready_T_20 : @[utils.scala 10:20]
            toExec_rs2Ready_insType_1 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _toExec_rs2Ready_T_21 = eq(UInt<7>("h63"), _toExec_rs2Ready_T_16) @[utils.scala 10:20]
            when _toExec_rs2Ready_T_21 : @[utils.scala 10:20]
              toExec_rs2Ready_insType_1 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _toExec_rs2Ready_T_22 = eq(UInt<2>("h3"), _toExec_rs2Ready_T_16) @[utils.scala 10:20]
              when _toExec_rs2Ready_T_22 : @[utils.scala 10:20]
                toExec_rs2Ready_insType_1 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _toExec_rs2Ready_T_23 = eq(UInt<6>("h23"), _toExec_rs2Ready_T_16) @[utils.scala 10:20]
                when _toExec_rs2Ready_T_23 : @[utils.scala 10:20]
                  toExec_rs2Ready_insType_1 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _toExec_rs2Ready_T_24 = eq(UInt<5>("h13"), _toExec_rs2Ready_T_16) @[utils.scala 10:20]
                  when _toExec_rs2Ready_T_24 : @[utils.scala 10:20]
                    toExec_rs2Ready_insType_1 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _toExec_rs2Ready_T_25 = eq(UInt<5>("h1b"), _toExec_rs2Ready_T_16) @[utils.scala 10:20]
                    when _toExec_rs2Ready_T_25 : @[utils.scala 10:20]
                      toExec_rs2Ready_insType_1 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _toExec_rs2Ready_T_26 = eq(UInt<6>("h33"), _toExec_rs2Ready_T_16) @[utils.scala 10:20]
                      when _toExec_rs2Ready_T_26 : @[utils.scala 10:20]
                        toExec_rs2Ready_insType_1 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _toExec_rs2Ready_T_27 = eq(UInt<6>("h3b"), _toExec_rs2Ready_T_16) @[utils.scala 10:20]
                        when _toExec_rs2Ready_T_27 : @[utils.scala 10:20]
                          toExec_rs2Ready_insType_1 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _toExec_rs2Ready_T_28 = eq(UInt<7>("h73"), _toExec_rs2Ready_T_16) @[utils.scala 10:20]
                          when _toExec_rs2Ready_T_28 : @[utils.scala 10:20]
                            toExec_rs2Ready_insType_1 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _toExec_rs2Ready_T_29 = eq(UInt<4>("hf"), _toExec_rs2Ready_T_16) @[utils.scala 10:20]
                            when _toExec_rs2Ready_T_29 : @[utils.scala 10:20]
                              toExec_rs2Ready_insType_1 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _toExec_rs2Ready_T_30 = eq(UInt<6>("h2f"), _toExec_rs2Ready_T_16) @[utils.scala 10:20]
                              when _toExec_rs2Ready_T_30 : @[utils.scala 10:20]
                                toExec_rs2Ready_insType_1 <= UInt<1>("h0") @[utils.scala 51:17]
    node _toExec_rs2Ready_T_31 = eq(UInt<3>("h4"), toExec_rs2Ready_insType_1) @[decode.scala 256:100]
    node _toExec_rs2Ready_T_32 = bits(outputBuffer.instruction, 6, 0) @[decode.scala 256:139]
    wire toExec_rs2Ready_insType_2 : UInt<3>
    toExec_rs2Ready_insType_2 <= UInt<3>("h0")
    node _toExec_rs2Ready_T_33 = eq(UInt<6>("h37"), _toExec_rs2Ready_T_32) @[utils.scala 10:20]
    when _toExec_rs2Ready_T_33 : @[utils.scala 10:20]
      toExec_rs2Ready_insType_2 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _toExec_rs2Ready_T_34 = eq(UInt<5>("h17"), _toExec_rs2Ready_T_32) @[utils.scala 10:20]
      when _toExec_rs2Ready_T_34 : @[utils.scala 10:20]
        toExec_rs2Ready_insType_2 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _toExec_rs2Ready_T_35 = eq(UInt<7>("h6f"), _toExec_rs2Ready_T_32) @[utils.scala 10:20]
        when _toExec_rs2Ready_T_35 : @[utils.scala 10:20]
          toExec_rs2Ready_insType_2 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _toExec_rs2Ready_T_36 = eq(UInt<7>("h67"), _toExec_rs2Ready_T_32) @[utils.scala 10:20]
          when _toExec_rs2Ready_T_36 : @[utils.scala 10:20]
            toExec_rs2Ready_insType_2 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _toExec_rs2Ready_T_37 = eq(UInt<7>("h63"), _toExec_rs2Ready_T_32) @[utils.scala 10:20]
            when _toExec_rs2Ready_T_37 : @[utils.scala 10:20]
              toExec_rs2Ready_insType_2 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _toExec_rs2Ready_T_38 = eq(UInt<2>("h3"), _toExec_rs2Ready_T_32) @[utils.scala 10:20]
              when _toExec_rs2Ready_T_38 : @[utils.scala 10:20]
                toExec_rs2Ready_insType_2 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _toExec_rs2Ready_T_39 = eq(UInt<6>("h23"), _toExec_rs2Ready_T_32) @[utils.scala 10:20]
                when _toExec_rs2Ready_T_39 : @[utils.scala 10:20]
                  toExec_rs2Ready_insType_2 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _toExec_rs2Ready_T_40 = eq(UInt<5>("h13"), _toExec_rs2Ready_T_32) @[utils.scala 10:20]
                  when _toExec_rs2Ready_T_40 : @[utils.scala 10:20]
                    toExec_rs2Ready_insType_2 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _toExec_rs2Ready_T_41 = eq(UInt<5>("h1b"), _toExec_rs2Ready_T_32) @[utils.scala 10:20]
                    when _toExec_rs2Ready_T_41 : @[utils.scala 10:20]
                      toExec_rs2Ready_insType_2 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _toExec_rs2Ready_T_42 = eq(UInt<6>("h33"), _toExec_rs2Ready_T_32) @[utils.scala 10:20]
                      when _toExec_rs2Ready_T_42 : @[utils.scala 10:20]
                        toExec_rs2Ready_insType_2 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _toExec_rs2Ready_T_43 = eq(UInt<6>("h3b"), _toExec_rs2Ready_T_32) @[utils.scala 10:20]
                        when _toExec_rs2Ready_T_43 : @[utils.scala 10:20]
                          toExec_rs2Ready_insType_2 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _toExec_rs2Ready_T_44 = eq(UInt<7>("h73"), _toExec_rs2Ready_T_32) @[utils.scala 10:20]
                          when _toExec_rs2Ready_T_44 : @[utils.scala 10:20]
                            toExec_rs2Ready_insType_2 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _toExec_rs2Ready_T_45 = eq(UInt<4>("hf"), _toExec_rs2Ready_T_32) @[utils.scala 10:20]
                            when _toExec_rs2Ready_T_45 : @[utils.scala 10:20]
                              toExec_rs2Ready_insType_2 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _toExec_rs2Ready_T_46 = eq(UInt<6>("h2f"), _toExec_rs2Ready_T_32) @[utils.scala 10:20]
                              when _toExec_rs2Ready_T_46 : @[utils.scala 10:20]
                                toExec_rs2Ready_insType_2 <= UInt<1>("h0") @[utils.scala 51:17]
    node _toExec_rs2Ready_T_47 = eq(UInt<3>("h5"), toExec_rs2Ready_insType_2) @[decode.scala 256:100]
    node _toExec_rs2Ready_T_48 = or(_toExec_rs2Ready_T_15, _toExec_rs2Ready_T_31) @[decode.scala 256:156]
    node _toExec_rs2Ready_T_49 = or(_toExec_rs2Ready_T_48, _toExec_rs2Ready_T_47) @[decode.scala 256:156]
    node _toExec_rs2Ready_T_50 = or(PRFValidList[outputBuffer.rs2Addr], _toExec_rs2Ready_T_49) @[decode.scala 256:60]
    toExec.rs2Ready <= _toExec_rs2Ready_T_50 @[decode.scala 256:22]
    toExec.immediate <= outputBuffer.immediate @[decode.scala 257:22]
    node toExec_branchMask_lo = cat(branchBuffer.branchMask[1], branchBuffer.branchMask[0]) @[decode.scala 258:49]
    node toExec_branchMask_hi_hi = cat(branchBuffer.branchMask[4], branchBuffer.branchMask[3]) @[decode.scala 258:49]
    node toExec_branchMask_hi = cat(toExec_branchMask_hi_hi, branchBuffer.branchMask[2]) @[decode.scala 258:49]
    node _toExec_branchMask_T = cat(toExec_branchMask_hi, toExec_branchMask_lo) @[decode.scala 258:49]
    toExec.branchMask <= _toExec_branchMask_T @[decode.scala 258:22]
    fromFetch.ready <= readyInputBuf @[decode.scala 260:28]
    node _fromFetch_expected_valid_T = neq(expectedPC, UInt<1>("h0")) @[decode.scala 261:42]
    fromFetch.expected.valid <= _fromFetch_expected_valid_T @[decode.scala 261:28]
    fromFetch.expected.pc <= expectedPC @[decode.scala 262:28]
    fromFetch.expected.coherency <= coherency @[decode.scala 263:32]
    node _jumpAddrWrite_ready_T = or(unconditionalJumps, csrIns) @[decode.scala 265:67]
    node _jumpAddrWrite_ready_T_1 = and(validOutputBuf, _jumpAddrWrite_ready_T) @[decode.scala 265:44]
    jumpAddrWrite.ready <= _jumpAddrWrite_ready_T_1 @[decode.scala 265:26]
    jumpAddrWrite.PRFDest <= outputBuffer.PRFDest @[decode.scala 266:26]
    when unconditionalJumps : @[decode.scala 267:28]
      node _jumpAddrWrite_linkAddr_T = bits(outputBuffer.instruction, 31, 31) @[decode.scala 269:63]
      node _jumpAddrWrite_linkAddr_T_1 = bits(_jumpAddrWrite_linkAddr_T, 0, 0) @[Bitwise.scala 77:15]
      node _jumpAddrWrite_linkAddr_T_2 = mux(_jumpAddrWrite_linkAddr_T_1, UInt<32>("hffffffff"), UInt<32>("h0")) @[Bitwise.scala 77:12]
      node _jumpAddrWrite_linkAddr_T_3 = bits(outputBuffer.instruction, 31, 12) @[decode.scala 269:94]
      node jumpAddrWrite_linkAddr_hi = cat(_jumpAddrWrite_linkAddr_T_2, _jumpAddrWrite_linkAddr_T_3) @[Cat.scala 33:92]
      node _jumpAddrWrite_linkAddr_T_4 = cat(jumpAddrWrite_linkAddr_hi, UInt<12>("h0")) @[Cat.scala 33:92]
      node _jumpAddrWrite_linkAddr_T_5 = add(outputBuffer.pc, _jumpAddrWrite_linkAddr_T_4) @[decode.scala 269:24]
      node _jumpAddrWrite_linkAddr_T_6 = tail(_jumpAddrWrite_linkAddr_T_5, 1) @[decode.scala 269:24]
      node _jumpAddrWrite_linkAddr_T_7 = bits(outputBuffer.instruction, 31, 31) @[decode.scala 270:44]
      node _jumpAddrWrite_linkAddr_T_8 = bits(_jumpAddrWrite_linkAddr_T_7, 0, 0) @[Bitwise.scala 77:15]
      node _jumpAddrWrite_linkAddr_T_9 = mux(_jumpAddrWrite_linkAddr_T_8, UInt<32>("hffffffff"), UInt<32>("h0")) @[Bitwise.scala 77:12]
      node _jumpAddrWrite_linkAddr_T_10 = bits(outputBuffer.instruction, 31, 12) @[decode.scala 270:75]
      node jumpAddrWrite_linkAddr_hi_1 = cat(_jumpAddrWrite_linkAddr_T_9, _jumpAddrWrite_linkAddr_T_10) @[Cat.scala 33:92]
      node _jumpAddrWrite_linkAddr_T_11 = cat(jumpAddrWrite_linkAddr_hi_1, UInt<12>("h0")) @[Cat.scala 33:92]
      node _jumpAddrWrite_linkAddr_T_12 = add(outputBuffer.pc, UInt<3>("h4")) @[decode.scala 272:23]
      node _jumpAddrWrite_linkAddr_T_13 = tail(_jumpAddrWrite_linkAddr_T_12, 1) @[decode.scala 272:23]
      wire _jumpAddrWrite_linkAddr_WIRE : UInt<64>[4] @[decode.scala 268:38]
      _jumpAddrWrite_linkAddr_WIRE[0] <= _jumpAddrWrite_linkAddr_T_6 @[decode.scala 268:38]
      _jumpAddrWrite_linkAddr_WIRE[1] <= _jumpAddrWrite_linkAddr_T_11 @[decode.scala 268:38]
      _jumpAddrWrite_linkAddr_WIRE[2] <= UInt<1>("h0") @[decode.scala 268:38]
      _jumpAddrWrite_linkAddr_WIRE[3] <= _jumpAddrWrite_linkAddr_T_13 @[decode.scala 268:38]
      node _jumpAddrWrite_linkAddr_T_14 = bits(outputBuffer.instruction, 6, 5) @[decode.scala 272:54]
      jumpAddrWrite.linkAddr <= _jumpAddrWrite_linkAddr_WIRE[_jumpAddrWrite_linkAddr_T_14] @[decode.scala 268:28]
    else :
      jumpAddrWrite.linkAddr <= csrReadDataReg @[decode.scala 274:28]
    node _branchPCs_ready_T = or(branchBuffer.branchPCReady, branchBuffer.predictedPCReady) @[decode.scala 278:60]
    branchPCs.ready <= _branchPCs_ready_T @[decode.scala 278:30]
    branchPCs.branchPCReady <= branchBuffer.branchPCReady @[decode.scala 279:30]
    branchPCs.predictedPCReady <= branchBuffer.predictedPCReady @[decode.scala 280:30]
    branchPCs.branchPC <= branchBuffer.branchPC @[decode.scala 281:30]
    branchPCs.predictedPC <= branchBuffer.predictedPC @[decode.scala 282:30]
    branchPCs.branchMask <= branchPCMask @[decode.scala 283:30]
    branchEvalOut.ready <= outputBuffer.branchEvalReady @[decode.scala 285:28]
    branchEvalOut.branchMask <= outputBuffer.branchMask @[decode.scala 286:28]
    branchEvalOut.passFail <= outputBuffer.passFail @[decode.scala 287:28]
    branchEvalIn.ready <= UInt<1>("h1") @[decode.scala 289:25]
    writeBackResult.ready <= UInt<1>("h1") @[decode.scala 290:25]
    ins <= inputBuffer.instruction @[decode.scala 293:7]
    pc <= inputBuffer.pc @[decode.scala 294:7]
    node _opcode_T = bits(ins, 6, 0) @[decode.scala 296:16]
    opcode <= _opcode_T @[decode.scala 296:10]
    node _rs1_T = bits(ins, 19, 15) @[decode.scala 297:16]
    rs1 <= _rs1_T @[decode.scala 297:10]
    node _rs2_T = bits(ins, 24, 20) @[decode.scala 298:16]
    rs2 <= _rs2_T @[decode.scala 298:10]
    node _rd_T = bits(ins, 11, 7) @[decode.scala 299:16]
    rd <= _rd_T @[decode.scala 299:10]
    node _fun3_T = bits(ins, 14, 12) @[decode.scala 300:16]
    fun3 <= _fun3_T @[decode.scala 300:10]
    wire insType_insType : UInt<3>
    insType_insType <= UInt<3>("h0")
    node _insType_T = eq(UInt<6>("h37"), opcode) @[utils.scala 10:20]
    when _insType_T : @[utils.scala 10:20]
      insType_insType <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _insType_T_1 = eq(UInt<5>("h17"), opcode) @[utils.scala 10:20]
      when _insType_T_1 : @[utils.scala 10:20]
        insType_insType <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _insType_T_2 = eq(UInt<7>("h6f"), opcode) @[utils.scala 10:20]
        when _insType_T_2 : @[utils.scala 10:20]
          insType_insType <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _insType_T_3 = eq(UInt<7>("h67"), opcode) @[utils.scala 10:20]
          when _insType_T_3 : @[utils.scala 10:20]
            insType_insType <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _insType_T_4 = eq(UInt<7>("h63"), opcode) @[utils.scala 10:20]
            when _insType_T_4 : @[utils.scala 10:20]
              insType_insType <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _insType_T_5 = eq(UInt<2>("h3"), opcode) @[utils.scala 10:20]
              when _insType_T_5 : @[utils.scala 10:20]
                insType_insType <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _insType_T_6 = eq(UInt<6>("h23"), opcode) @[utils.scala 10:20]
                when _insType_T_6 : @[utils.scala 10:20]
                  insType_insType <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _insType_T_7 = eq(UInt<5>("h13"), opcode) @[utils.scala 10:20]
                  when _insType_T_7 : @[utils.scala 10:20]
                    insType_insType <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _insType_T_8 = eq(UInt<5>("h1b"), opcode) @[utils.scala 10:20]
                    when _insType_T_8 : @[utils.scala 10:20]
                      insType_insType <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _insType_T_9 = eq(UInt<6>("h33"), opcode) @[utils.scala 10:20]
                      when _insType_T_9 : @[utils.scala 10:20]
                        insType_insType <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _insType_T_10 = eq(UInt<6>("h3b"), opcode) @[utils.scala 10:20]
                        when _insType_T_10 : @[utils.scala 10:20]
                          insType_insType <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _insType_T_11 = eq(UInt<7>("h73"), opcode) @[utils.scala 10:20]
                          when _insType_T_11 : @[utils.scala 10:20]
                            insType_insType <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _insType_T_12 = eq(UInt<4>("hf"), opcode) @[utils.scala 10:20]
                            when _insType_T_12 : @[utils.scala 10:20]
                              insType_insType <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _insType_T_13 = eq(UInt<6>("h2f"), opcode) @[utils.scala 10:20]
                              when _insType_T_13 : @[utils.scala 10:20]
                                insType_insType <= UInt<1>("h0") @[utils.scala 51:17]
    insType <= insType_insType @[decode.scala 302:13]
    wire immediate_immediate : UInt<64>
    immediate_immediate <= UInt<64>("h0")
    node _immediate_T = eq(UInt<1>("h1"), insType) @[utils.scala 59:29]
    when _immediate_T : @[utils.scala 59:29]
      node _immediate_immediate_T = bits(ins, 31, 31) @[utils.scala 61:46]
      node _immediate_immediate_T_1 = bits(_immediate_immediate_T, 0, 0) @[Bitwise.scala 77:15]
      node _immediate_immediate_T_2 = mux(_immediate_immediate_T_1, UInt<53>("h1fffffffffffff"), UInt<53>("h0")) @[Bitwise.scala 77:12]
      node _immediate_immediate_T_3 = bits(ins, 30, 20) @[utils.scala 61:64]
      node _immediate_immediate_T_4 = cat(_immediate_immediate_T_2, _immediate_immediate_T_3) @[Cat.scala 33:92]
      immediate_immediate <= _immediate_immediate_T_4 @[utils.scala 61:19]
    else :
      node _immediate_T_1 = eq(UInt<2>("h2"), insType) @[utils.scala 59:29]
      when _immediate_T_1 : @[utils.scala 59:29]
        node _immediate_immediate_T_5 = bits(ins, 31, 31) @[utils.scala 64:46]
        node _immediate_immediate_T_6 = bits(_immediate_immediate_T_5, 0, 0) @[Bitwise.scala 77:15]
        node _immediate_immediate_T_7 = mux(_immediate_immediate_T_6, UInt<53>("h1fffffffffffff"), UInt<53>("h0")) @[Bitwise.scala 77:12]
        node _immediate_immediate_T_8 = bits(ins, 30, 25) @[utils.scala 64:64]
        node _immediate_immediate_T_9 = bits(ins, 11, 7) @[utils.scala 64:85]
        node immediate_immediate_hi = cat(_immediate_immediate_T_7, _immediate_immediate_T_8) @[Cat.scala 33:92]
        node _immediate_immediate_T_10 = cat(immediate_immediate_hi, _immediate_immediate_T_9) @[Cat.scala 33:92]
        immediate_immediate <= _immediate_immediate_T_10 @[utils.scala 64:19]
      else :
        node _immediate_T_2 = eq(UInt<2>("h3"), insType) @[utils.scala 59:29]
        when _immediate_T_2 : @[utils.scala 59:29]
          node _immediate_immediate_T_11 = bits(ins, 31, 31) @[utils.scala 67:46]
          node _immediate_immediate_T_12 = bits(_immediate_immediate_T_11, 0, 0) @[Bitwise.scala 77:15]
          node _immediate_immediate_T_13 = mux(_immediate_immediate_T_12, UInt<53>("h1fffffffffffff"), UInt<53>("h0")) @[Bitwise.scala 77:12]
          node _immediate_immediate_T_14 = bits(ins, 7, 7) @[utils.scala 67:64]
          node _immediate_immediate_T_15 = bits(ins, 30, 25) @[utils.scala 67:80]
          node _immediate_immediate_T_16 = bits(ins, 11, 8) @[utils.scala 67:101]
          node immediate_immediate_lo = cat(_immediate_immediate_T_16, UInt<1>("h0")) @[Cat.scala 33:92]
          node immediate_immediate_hi_hi = cat(_immediate_immediate_T_13, _immediate_immediate_T_14) @[Cat.scala 33:92]
          node immediate_immediate_hi_1 = cat(immediate_immediate_hi_hi, _immediate_immediate_T_15) @[Cat.scala 33:92]
          node _immediate_immediate_T_17 = cat(immediate_immediate_hi_1, immediate_immediate_lo) @[Cat.scala 33:92]
          immediate_immediate <= _immediate_immediate_T_17 @[utils.scala 67:19]
        else :
          node _immediate_T_3 = eq(UInt<3>("h4"), insType) @[utils.scala 59:29]
          when _immediate_T_3 : @[utils.scala 59:29]
            node _immediate_immediate_T_18 = bits(ins, 31, 31) @[utils.scala 70:46]
            node _immediate_immediate_T_19 = bits(_immediate_immediate_T_18, 0, 0) @[Bitwise.scala 77:15]
            node _immediate_immediate_T_20 = mux(_immediate_immediate_T_19, UInt<32>("hffffffff"), UInt<32>("h0")) @[Bitwise.scala 77:12]
            node _immediate_immediate_T_21 = bits(ins, 31, 12) @[utils.scala 70:64]
            node immediate_immediate_hi_2 = cat(_immediate_immediate_T_20, _immediate_immediate_T_21) @[Cat.scala 33:92]
            node _immediate_immediate_T_22 = cat(immediate_immediate_hi_2, UInt<12>("h0")) @[Cat.scala 33:92]
            immediate_immediate <= _immediate_immediate_T_22 @[utils.scala 70:19]
          else :
            node _immediate_T_4 = eq(UInt<3>("h5"), insType) @[utils.scala 59:29]
            when _immediate_T_4 : @[utils.scala 59:29]
              node _immediate_immediate_T_23 = bits(ins, 31, 31) @[utils.scala 73:46]
              node _immediate_immediate_T_24 = bits(_immediate_immediate_T_23, 0, 0) @[Bitwise.scala 77:15]
              node _immediate_immediate_T_25 = mux(_immediate_immediate_T_24, UInt<44>("hfffffffffff"), UInt<44>("h0")) @[Bitwise.scala 77:12]
              node _immediate_immediate_T_26 = bits(ins, 19, 12) @[utils.scala 73:64]
              node _immediate_immediate_T_27 = bits(ins, 20, 20) @[utils.scala 73:85]
              node _immediate_immediate_T_28 = bits(ins, 30, 25) @[utils.scala 73:102]
              node _immediate_immediate_T_29 = bits(ins, 24, 21) @[utils.scala 73:123]
              node immediate_immediate_lo_hi = cat(_immediate_immediate_T_28, _immediate_immediate_T_29) @[Cat.scala 33:92]
              node immediate_immediate_lo_1 = cat(immediate_immediate_lo_hi, UInt<1>("h0")) @[Cat.scala 33:92]
              node immediate_immediate_hi_hi_1 = cat(_immediate_immediate_T_25, _immediate_immediate_T_26) @[Cat.scala 33:92]
              node immediate_immediate_hi_3 = cat(immediate_immediate_hi_hi_1, _immediate_immediate_T_27) @[Cat.scala 33:92]
              node _immediate_immediate_T_30 = cat(immediate_immediate_hi_3, immediate_immediate_lo_1) @[Cat.scala 33:92]
              immediate_immediate <= _immediate_immediate_T_30 @[utils.scala 73:19]
            else :
              node _immediate_T_5 = eq(UInt<3>("h6"), insType) @[utils.scala 59:29]
              when _immediate_T_5 : @[utils.scala 59:29]
                node _immediate_immediate_T_31 = mux(UInt<1>("h0"), UInt<64>("hffffffffffffffff"), UInt<64>("h0")) @[Bitwise.scala 77:12]
                immediate_immediate <= _immediate_immediate_T_31 @[utils.scala 76:19]
              else :
                node _immediate_T_6 = eq(UInt<1>("h0"), insType) @[utils.scala 59:29]
                when _immediate_T_6 : @[utils.scala 59:29]
                  node _immediate_immediate_T_32 = mux(UInt<1>("h0"), UInt<64>("hffffffffffffffff"), UInt<64>("h0")) @[Bitwise.scala 77:12]
                  immediate_immediate <= _immediate_immediate_T_32 @[utils.scala 79:19]
    immediate <= immediate_immediate @[decode.scala 303:13]
    node _unconditionalJumps_T = bits(outputBuffer.instruction, 6, 0) @[decode.scala 305:49]
    node _unconditionalJumps_T_1 = eq(_unconditionalJumps_T, UInt<7>("h6f")) @[decode.scala 305:55]
    node _unconditionalJumps_T_2 = bits(outputBuffer.instruction, 6, 0) @[decode.scala 305:93]
    node _unconditionalJumps_T_3 = eq(_unconditionalJumps_T_2, UInt<7>("h67")) @[decode.scala 305:99]
    node _unconditionalJumps_T_4 = or(_unconditionalJumps_T_1, _unconditionalJumps_T_3) @[decode.scala 305:66]
    node _unconditionalJumps_T_5 = bits(outputBuffer.instruction, 6, 0) @[decode.scala 305:138]
    node _unconditionalJumps_T_6 = eq(_unconditionalJumps_T_5, UInt<6>("h37")) @[decode.scala 305:144]
    node _unconditionalJumps_T_7 = or(_unconditionalJumps_T_4, _unconditionalJumps_T_6) @[decode.scala 305:111]
    node _unconditionalJumps_T_8 = bits(outputBuffer.instruction, 6, 0) @[decode.scala 305:181]
    node _unconditionalJumps_T_9 = eq(_unconditionalJumps_T_8, UInt<5>("h17")) @[decode.scala 305:187]
    node _unconditionalJumps_T_10 = or(_unconditionalJumps_T_7, _unconditionalJumps_T_9) @[decode.scala 305:154]
    unconditionalJumps <= _unconditionalJumps_T_10 @[decode.scala 305:22]
    node _csrIns_T = bits(outputBuffer.instruction, 6, 0) @[decode.scala 306:37]
    node _csrIns_T_1 = eq(_csrIns_T, UInt<7>("h73")) @[decode.scala 306:43]
    node _csrIns_T_2 = bits(outputBuffer.instruction, 14, 12) @[decode.scala 306:83]
    node _csrIns_T_3 = neq(_csrIns_T_2, UInt<1>("h0")) @[decode.scala 306:91]
    node _csrIns_T_4 = and(_csrIns_T_1, _csrIns_T_3) @[decode.scala 306:56]
    csrIns <= _csrIns_T_4 @[decode.scala 306:10]
    wire _frontEndRegMap_WIRE : UInt<6>[32] @[decode.scala 308:44]
    _frontEndRegMap_WIRE[0] <= UInt<6>("h0") @[decode.scala 308:44]
    _frontEndRegMap_WIRE[1] <= UInt<6>("h1") @[decode.scala 308:44]
    _frontEndRegMap_WIRE[2] <= UInt<6>("h2") @[decode.scala 308:44]
    _frontEndRegMap_WIRE[3] <= UInt<6>("h3") @[decode.scala 308:44]
    _frontEndRegMap_WIRE[4] <= UInt<6>("h4") @[decode.scala 308:44]
    _frontEndRegMap_WIRE[5] <= UInt<6>("h5") @[decode.scala 308:44]
    _frontEndRegMap_WIRE[6] <= UInt<6>("h6") @[decode.scala 308:44]
    _frontEndRegMap_WIRE[7] <= UInt<6>("h7") @[decode.scala 308:44]
    _frontEndRegMap_WIRE[8] <= UInt<6>("h8") @[decode.scala 308:44]
    _frontEndRegMap_WIRE[9] <= UInt<6>("h9") @[decode.scala 308:44]
    _frontEndRegMap_WIRE[10] <= UInt<6>("ha") @[decode.scala 308:44]
    _frontEndRegMap_WIRE[11] <= UInt<6>("hb") @[decode.scala 308:44]
    _frontEndRegMap_WIRE[12] <= UInt<6>("hc") @[decode.scala 308:44]
    _frontEndRegMap_WIRE[13] <= UInt<6>("hd") @[decode.scala 308:44]
    _frontEndRegMap_WIRE[14] <= UInt<6>("he") @[decode.scala 308:44]
    _frontEndRegMap_WIRE[15] <= UInt<6>("hf") @[decode.scala 308:44]
    _frontEndRegMap_WIRE[16] <= UInt<6>("h10") @[decode.scala 308:44]
    _frontEndRegMap_WIRE[17] <= UInt<6>("h11") @[decode.scala 308:44]
    _frontEndRegMap_WIRE[18] <= UInt<6>("h12") @[decode.scala 308:44]
    _frontEndRegMap_WIRE[19] <= UInt<6>("h13") @[decode.scala 308:44]
    _frontEndRegMap_WIRE[20] <= UInt<6>("h14") @[decode.scala 308:44]
    _frontEndRegMap_WIRE[21] <= UInt<6>("h15") @[decode.scala 308:44]
    _frontEndRegMap_WIRE[22] <= UInt<6>("h16") @[decode.scala 308:44]
    _frontEndRegMap_WIRE[23] <= UInt<6>("h17") @[decode.scala 308:44]
    _frontEndRegMap_WIRE[24] <= UInt<6>("h18") @[decode.scala 308:44]
    _frontEndRegMap_WIRE[25] <= UInt<6>("h19") @[decode.scala 308:44]
    _frontEndRegMap_WIRE[26] <= UInt<6>("h1a") @[decode.scala 308:44]
    _frontEndRegMap_WIRE[27] <= UInt<6>("h1b") @[decode.scala 308:44]
    _frontEndRegMap_WIRE[28] <= UInt<6>("h1c") @[decode.scala 308:44]
    _frontEndRegMap_WIRE[29] <= UInt<6>("h1d") @[decode.scala 308:44]
    _frontEndRegMap_WIRE[30] <= UInt<6>("h1e") @[decode.scala 308:44]
    _frontEndRegMap_WIRE[31] <= UInt<6>("h1f") @[decode.scala 308:44]
    reg frontEndRegMap : UInt<6>[32], clock with :
      reset => (reset, _frontEndRegMap_WIRE) @[decode.scala 308:36]
    wire _architecturalRegMap_WIRE : UInt<6>[32] @[decode.scala 309:44]
    _architecturalRegMap_WIRE[0] <= UInt<6>("h0") @[decode.scala 309:44]
    _architecturalRegMap_WIRE[1] <= UInt<6>("h1") @[decode.scala 309:44]
    _architecturalRegMap_WIRE[2] <= UInt<6>("h2") @[decode.scala 309:44]
    _architecturalRegMap_WIRE[3] <= UInt<6>("h3") @[decode.scala 309:44]
    _architecturalRegMap_WIRE[4] <= UInt<6>("h4") @[decode.scala 309:44]
    _architecturalRegMap_WIRE[5] <= UInt<6>("h5") @[decode.scala 309:44]
    _architecturalRegMap_WIRE[6] <= UInt<6>("h6") @[decode.scala 309:44]
    _architecturalRegMap_WIRE[7] <= UInt<6>("h7") @[decode.scala 309:44]
    _architecturalRegMap_WIRE[8] <= UInt<6>("h8") @[decode.scala 309:44]
    _architecturalRegMap_WIRE[9] <= UInt<6>("h9") @[decode.scala 309:44]
    _architecturalRegMap_WIRE[10] <= UInt<6>("ha") @[decode.scala 309:44]
    _architecturalRegMap_WIRE[11] <= UInt<6>("hb") @[decode.scala 309:44]
    _architecturalRegMap_WIRE[12] <= UInt<6>("hc") @[decode.scala 309:44]
    _architecturalRegMap_WIRE[13] <= UInt<6>("hd") @[decode.scala 309:44]
    _architecturalRegMap_WIRE[14] <= UInt<6>("he") @[decode.scala 309:44]
    _architecturalRegMap_WIRE[15] <= UInt<6>("hf") @[decode.scala 309:44]
    _architecturalRegMap_WIRE[16] <= UInt<6>("h10") @[decode.scala 309:44]
    _architecturalRegMap_WIRE[17] <= UInt<6>("h11") @[decode.scala 309:44]
    _architecturalRegMap_WIRE[18] <= UInt<6>("h12") @[decode.scala 309:44]
    _architecturalRegMap_WIRE[19] <= UInt<6>("h13") @[decode.scala 309:44]
    _architecturalRegMap_WIRE[20] <= UInt<6>("h14") @[decode.scala 309:44]
    _architecturalRegMap_WIRE[21] <= UInt<6>("h15") @[decode.scala 309:44]
    _architecturalRegMap_WIRE[22] <= UInt<6>("h16") @[decode.scala 309:44]
    _architecturalRegMap_WIRE[23] <= UInt<6>("h17") @[decode.scala 309:44]
    _architecturalRegMap_WIRE[24] <= UInt<6>("h18") @[decode.scala 309:44]
    _architecturalRegMap_WIRE[25] <= UInt<6>("h19") @[decode.scala 309:44]
    _architecturalRegMap_WIRE[26] <= UInt<6>("h1a") @[decode.scala 309:44]
    _architecturalRegMap_WIRE[27] <= UInt<6>("h1b") @[decode.scala 309:44]
    _architecturalRegMap_WIRE[28] <= UInt<6>("h1c") @[decode.scala 309:44]
    _architecturalRegMap_WIRE[29] <= UInt<6>("h1d") @[decode.scala 309:44]
    _architecturalRegMap_WIRE[30] <= UInt<6>("h1e") @[decode.scala 309:44]
    _architecturalRegMap_WIRE[31] <= UInt<6>("h1f") @[decode.scala 309:44]
    reg architecturalRegMap : UInt<6>[32], clock with :
      reset => (reset, _architecturalRegMap_WIRE) @[decode.scala 309:36]
    wire _PRFFreeList_WIRE : UInt<1>[64] @[decode.scala 310:44]
    _PRFFreeList_WIRE[0] <= UInt<1>("h0") @[decode.scala 310:44]
    _PRFFreeList_WIRE[1] <= UInt<1>("h0") @[decode.scala 310:44]
    _PRFFreeList_WIRE[2] <= UInt<1>("h0") @[decode.scala 310:44]
    _PRFFreeList_WIRE[3] <= UInt<1>("h0") @[decode.scala 310:44]
    _PRFFreeList_WIRE[4] <= UInt<1>("h0") @[decode.scala 310:44]
    _PRFFreeList_WIRE[5] <= UInt<1>("h0") @[decode.scala 310:44]
    _PRFFreeList_WIRE[6] <= UInt<1>("h0") @[decode.scala 310:44]
    _PRFFreeList_WIRE[7] <= UInt<1>("h0") @[decode.scala 310:44]
    _PRFFreeList_WIRE[8] <= UInt<1>("h0") @[decode.scala 310:44]
    _PRFFreeList_WIRE[9] <= UInt<1>("h0") @[decode.scala 310:44]
    _PRFFreeList_WIRE[10] <= UInt<1>("h0") @[decode.scala 310:44]
    _PRFFreeList_WIRE[11] <= UInt<1>("h0") @[decode.scala 310:44]
    _PRFFreeList_WIRE[12] <= UInt<1>("h0") @[decode.scala 310:44]
    _PRFFreeList_WIRE[13] <= UInt<1>("h0") @[decode.scala 310:44]
    _PRFFreeList_WIRE[14] <= UInt<1>("h0") @[decode.scala 310:44]
    _PRFFreeList_WIRE[15] <= UInt<1>("h0") @[decode.scala 310:44]
    _PRFFreeList_WIRE[16] <= UInt<1>("h0") @[decode.scala 310:44]
    _PRFFreeList_WIRE[17] <= UInt<1>("h0") @[decode.scala 310:44]
    _PRFFreeList_WIRE[18] <= UInt<1>("h0") @[decode.scala 310:44]
    _PRFFreeList_WIRE[19] <= UInt<1>("h0") @[decode.scala 310:44]
    _PRFFreeList_WIRE[20] <= UInt<1>("h0") @[decode.scala 310:44]
    _PRFFreeList_WIRE[21] <= UInt<1>("h0") @[decode.scala 310:44]
    _PRFFreeList_WIRE[22] <= UInt<1>("h0") @[decode.scala 310:44]
    _PRFFreeList_WIRE[23] <= UInt<1>("h0") @[decode.scala 310:44]
    _PRFFreeList_WIRE[24] <= UInt<1>("h0") @[decode.scala 310:44]
    _PRFFreeList_WIRE[25] <= UInt<1>("h0") @[decode.scala 310:44]
    _PRFFreeList_WIRE[26] <= UInt<1>("h0") @[decode.scala 310:44]
    _PRFFreeList_WIRE[27] <= UInt<1>("h0") @[decode.scala 310:44]
    _PRFFreeList_WIRE[28] <= UInt<1>("h0") @[decode.scala 310:44]
    _PRFFreeList_WIRE[29] <= UInt<1>("h0") @[decode.scala 310:44]
    _PRFFreeList_WIRE[30] <= UInt<1>("h0") @[decode.scala 310:44]
    _PRFFreeList_WIRE[31] <= UInt<1>("h0") @[decode.scala 310:44]
    _PRFFreeList_WIRE[32] <= UInt<1>("h1") @[decode.scala 310:44]
    _PRFFreeList_WIRE[33] <= UInt<1>("h1") @[decode.scala 310:44]
    _PRFFreeList_WIRE[34] <= UInt<1>("h1") @[decode.scala 310:44]
    _PRFFreeList_WIRE[35] <= UInt<1>("h1") @[decode.scala 310:44]
    _PRFFreeList_WIRE[36] <= UInt<1>("h1") @[decode.scala 310:44]
    _PRFFreeList_WIRE[37] <= UInt<1>("h1") @[decode.scala 310:44]
    _PRFFreeList_WIRE[38] <= UInt<1>("h1") @[decode.scala 310:44]
    _PRFFreeList_WIRE[39] <= UInt<1>("h1") @[decode.scala 310:44]
    _PRFFreeList_WIRE[40] <= UInt<1>("h1") @[decode.scala 310:44]
    _PRFFreeList_WIRE[41] <= UInt<1>("h1") @[decode.scala 310:44]
    _PRFFreeList_WIRE[42] <= UInt<1>("h1") @[decode.scala 310:44]
    _PRFFreeList_WIRE[43] <= UInt<1>("h1") @[decode.scala 310:44]
    _PRFFreeList_WIRE[44] <= UInt<1>("h1") @[decode.scala 310:44]
    _PRFFreeList_WIRE[45] <= UInt<1>("h1") @[decode.scala 310:44]
    _PRFFreeList_WIRE[46] <= UInt<1>("h1") @[decode.scala 310:44]
    _PRFFreeList_WIRE[47] <= UInt<1>("h1") @[decode.scala 310:44]
    _PRFFreeList_WIRE[48] <= UInt<1>("h1") @[decode.scala 310:44]
    _PRFFreeList_WIRE[49] <= UInt<1>("h1") @[decode.scala 310:44]
    _PRFFreeList_WIRE[50] <= UInt<1>("h1") @[decode.scala 310:44]
    _PRFFreeList_WIRE[51] <= UInt<1>("h1") @[decode.scala 310:44]
    _PRFFreeList_WIRE[52] <= UInt<1>("h1") @[decode.scala 310:44]
    _PRFFreeList_WIRE[53] <= UInt<1>("h1") @[decode.scala 310:44]
    _PRFFreeList_WIRE[54] <= UInt<1>("h1") @[decode.scala 310:44]
    _PRFFreeList_WIRE[55] <= UInt<1>("h1") @[decode.scala 310:44]
    _PRFFreeList_WIRE[56] <= UInt<1>("h1") @[decode.scala 310:44]
    _PRFFreeList_WIRE[57] <= UInt<1>("h1") @[decode.scala 310:44]
    _PRFFreeList_WIRE[58] <= UInt<1>("h1") @[decode.scala 310:44]
    _PRFFreeList_WIRE[59] <= UInt<1>("h1") @[decode.scala 310:44]
    _PRFFreeList_WIRE[60] <= UInt<1>("h1") @[decode.scala 310:44]
    _PRFFreeList_WIRE[61] <= UInt<1>("h1") @[decode.scala 310:44]
    _PRFFreeList_WIRE[62] <= UInt<1>("h1") @[decode.scala 310:44]
    _PRFFreeList_WIRE[63] <= UInt<1>("h1") @[decode.scala 310:44]
    reg PRFFreeList : UInt<1>[64], clock with :
      reset => (reset, _PRFFreeList_WIRE) @[decode.scala 310:36]
    retiredRenamedTable.table[0] <= architecturalRegMap[0] @[decode.scala 314:34]
    retiredRenamedTable.table[1] <= architecturalRegMap[1] @[decode.scala 314:34]
    retiredRenamedTable.table[2] <= architecturalRegMap[2] @[decode.scala 314:34]
    retiredRenamedTable.table[3] <= architecturalRegMap[3] @[decode.scala 314:34]
    retiredRenamedTable.table[4] <= architecturalRegMap[4] @[decode.scala 314:34]
    retiredRenamedTable.table[5] <= architecturalRegMap[5] @[decode.scala 314:34]
    retiredRenamedTable.table[6] <= architecturalRegMap[6] @[decode.scala 314:34]
    retiredRenamedTable.table[7] <= architecturalRegMap[7] @[decode.scala 314:34]
    retiredRenamedTable.table[8] <= architecturalRegMap[8] @[decode.scala 314:34]
    retiredRenamedTable.table[9] <= architecturalRegMap[9] @[decode.scala 314:34]
    retiredRenamedTable.table[10] <= architecturalRegMap[10] @[decode.scala 314:34]
    retiredRenamedTable.table[11] <= architecturalRegMap[11] @[decode.scala 314:34]
    retiredRenamedTable.table[12] <= architecturalRegMap[12] @[decode.scala 314:34]
    retiredRenamedTable.table[13] <= architecturalRegMap[13] @[decode.scala 314:34]
    retiredRenamedTable.table[14] <= architecturalRegMap[14] @[decode.scala 314:34]
    retiredRenamedTable.table[15] <= architecturalRegMap[15] @[decode.scala 314:34]
    retiredRenamedTable.table[16] <= architecturalRegMap[16] @[decode.scala 314:34]
    retiredRenamedTable.table[17] <= architecturalRegMap[17] @[decode.scala 314:34]
    retiredRenamedTable.table[18] <= architecturalRegMap[18] @[decode.scala 314:34]
    retiredRenamedTable.table[19] <= architecturalRegMap[19] @[decode.scala 314:34]
    retiredRenamedTable.table[20] <= architecturalRegMap[20] @[decode.scala 314:34]
    retiredRenamedTable.table[21] <= architecturalRegMap[21] @[decode.scala 314:34]
    retiredRenamedTable.table[22] <= architecturalRegMap[22] @[decode.scala 314:34]
    retiredRenamedTable.table[23] <= architecturalRegMap[23] @[decode.scala 314:34]
    retiredRenamedTable.table[24] <= architecturalRegMap[24] @[decode.scala 314:34]
    retiredRenamedTable.table[25] <= architecturalRegMap[25] @[decode.scala 314:34]
    retiredRenamedTable.table[26] <= architecturalRegMap[26] @[decode.scala 314:34]
    retiredRenamedTable.table[27] <= architecturalRegMap[27] @[decode.scala 314:34]
    retiredRenamedTable.table[28] <= architecturalRegMap[28] @[decode.scala 314:34]
    retiredRenamedTable.table[29] <= architecturalRegMap[29] @[decode.scala 314:34]
    retiredRenamedTable.table[30] <= architecturalRegMap[30] @[decode.scala 314:34]
    retiredRenamedTable.table[31] <= architecturalRegMap[31] @[decode.scala 314:34]
    reg reservedRegMap1 : UInt<6>[32], clock with :
      reset => (UInt<1>("h0"), reservedRegMap1) @[decode.scala 317:28]
    reg reservedRegMap2 : UInt<6>[32], clock with :
      reset => (UInt<1>("h0"), reservedRegMap2) @[decode.scala 318:28]
    reg reservedRegMap3 : UInt<6>[32], clock with :
      reset => (UInt<1>("h0"), reservedRegMap3) @[decode.scala 319:28]
    reg reservedRegMap4 : UInt<6>[32], clock with :
      reset => (UInt<1>("h0"), reservedRegMap4) @[decode.scala 320:28]
    reg reservedFreeList1 : UInt<1>[64], clock with :
      reset => (UInt<1>("h0"), reservedFreeList1) @[decode.scala 322:30]
    reg reservedFreeList2 : UInt<1>[64], clock with :
      reset => (UInt<1>("h0"), reservedFreeList2) @[decode.scala 323:30]
    reg reservedFreeList3 : UInt<1>[64], clock with :
      reset => (UInt<1>("h0"), reservedFreeList3) @[decode.scala 324:30]
    reg reservedFreeList4 : UInt<1>[64], clock with :
      reset => (UInt<1>("h0"), reservedFreeList4) @[decode.scala 325:30]
    reg reservedValidList1 : UInt<1>[64], clock with :
      reset => (UInt<1>("h0"), reservedValidList1) @[decode.scala 327:31]
    reg reservedValidList2 : UInt<1>[64], clock with :
      reset => (UInt<1>("h0"), reservedValidList2) @[decode.scala 328:31]
    reg reservedValidList3 : UInt<1>[64], clock with :
      reset => (UInt<1>("h0"), reservedValidList3) @[decode.scala 329:31]
    reg reservedValidList4 : UInt<1>[64], clock with :
      reset => (UInt<1>("h0"), reservedValidList4) @[decode.scala 330:31]
    rs1Addr <= frontEndRegMap[rs1] @[decode.scala 332:12]
    rs2Addr <= frontEndRegMap[rs2] @[decode.scala 333:12]
    node _freeRegAddr_T = mux(PRFFreeList[62], UInt<6>("h3e"), UInt<6>("h3f")) @[Mux.scala 47:70]
    node _freeRegAddr_T_1 = mux(PRFFreeList[61], UInt<6>("h3d"), _freeRegAddr_T) @[Mux.scala 47:70]
    node _freeRegAddr_T_2 = mux(PRFFreeList[60], UInt<6>("h3c"), _freeRegAddr_T_1) @[Mux.scala 47:70]
    node _freeRegAddr_T_3 = mux(PRFFreeList[59], UInt<6>("h3b"), _freeRegAddr_T_2) @[Mux.scala 47:70]
    node _freeRegAddr_T_4 = mux(PRFFreeList[58], UInt<6>("h3a"), _freeRegAddr_T_3) @[Mux.scala 47:70]
    node _freeRegAddr_T_5 = mux(PRFFreeList[57], UInt<6>("h39"), _freeRegAddr_T_4) @[Mux.scala 47:70]
    node _freeRegAddr_T_6 = mux(PRFFreeList[56], UInt<6>("h38"), _freeRegAddr_T_5) @[Mux.scala 47:70]
    node _freeRegAddr_T_7 = mux(PRFFreeList[55], UInt<6>("h37"), _freeRegAddr_T_6) @[Mux.scala 47:70]
    node _freeRegAddr_T_8 = mux(PRFFreeList[54], UInt<6>("h36"), _freeRegAddr_T_7) @[Mux.scala 47:70]
    node _freeRegAddr_T_9 = mux(PRFFreeList[53], UInt<6>("h35"), _freeRegAddr_T_8) @[Mux.scala 47:70]
    node _freeRegAddr_T_10 = mux(PRFFreeList[52], UInt<6>("h34"), _freeRegAddr_T_9) @[Mux.scala 47:70]
    node _freeRegAddr_T_11 = mux(PRFFreeList[51], UInt<6>("h33"), _freeRegAddr_T_10) @[Mux.scala 47:70]
    node _freeRegAddr_T_12 = mux(PRFFreeList[50], UInt<6>("h32"), _freeRegAddr_T_11) @[Mux.scala 47:70]
    node _freeRegAddr_T_13 = mux(PRFFreeList[49], UInt<6>("h31"), _freeRegAddr_T_12) @[Mux.scala 47:70]
    node _freeRegAddr_T_14 = mux(PRFFreeList[48], UInt<6>("h30"), _freeRegAddr_T_13) @[Mux.scala 47:70]
    node _freeRegAddr_T_15 = mux(PRFFreeList[47], UInt<6>("h2f"), _freeRegAddr_T_14) @[Mux.scala 47:70]
    node _freeRegAddr_T_16 = mux(PRFFreeList[46], UInt<6>("h2e"), _freeRegAddr_T_15) @[Mux.scala 47:70]
    node _freeRegAddr_T_17 = mux(PRFFreeList[45], UInt<6>("h2d"), _freeRegAddr_T_16) @[Mux.scala 47:70]
    node _freeRegAddr_T_18 = mux(PRFFreeList[44], UInt<6>("h2c"), _freeRegAddr_T_17) @[Mux.scala 47:70]
    node _freeRegAddr_T_19 = mux(PRFFreeList[43], UInt<6>("h2b"), _freeRegAddr_T_18) @[Mux.scala 47:70]
    node _freeRegAddr_T_20 = mux(PRFFreeList[42], UInt<6>("h2a"), _freeRegAddr_T_19) @[Mux.scala 47:70]
    node _freeRegAddr_T_21 = mux(PRFFreeList[41], UInt<6>("h29"), _freeRegAddr_T_20) @[Mux.scala 47:70]
    node _freeRegAddr_T_22 = mux(PRFFreeList[40], UInt<6>("h28"), _freeRegAddr_T_21) @[Mux.scala 47:70]
    node _freeRegAddr_T_23 = mux(PRFFreeList[39], UInt<6>("h27"), _freeRegAddr_T_22) @[Mux.scala 47:70]
    node _freeRegAddr_T_24 = mux(PRFFreeList[38], UInt<6>("h26"), _freeRegAddr_T_23) @[Mux.scala 47:70]
    node _freeRegAddr_T_25 = mux(PRFFreeList[37], UInt<6>("h25"), _freeRegAddr_T_24) @[Mux.scala 47:70]
    node _freeRegAddr_T_26 = mux(PRFFreeList[36], UInt<6>("h24"), _freeRegAddr_T_25) @[Mux.scala 47:70]
    node _freeRegAddr_T_27 = mux(PRFFreeList[35], UInt<6>("h23"), _freeRegAddr_T_26) @[Mux.scala 47:70]
    node _freeRegAddr_T_28 = mux(PRFFreeList[34], UInt<6>("h22"), _freeRegAddr_T_27) @[Mux.scala 47:70]
    node _freeRegAddr_T_29 = mux(PRFFreeList[33], UInt<6>("h21"), _freeRegAddr_T_28) @[Mux.scala 47:70]
    node _freeRegAddr_T_30 = mux(PRFFreeList[32], UInt<6>("h20"), _freeRegAddr_T_29) @[Mux.scala 47:70]
    node _freeRegAddr_T_31 = mux(PRFFreeList[31], UInt<5>("h1f"), _freeRegAddr_T_30) @[Mux.scala 47:70]
    node _freeRegAddr_T_32 = mux(PRFFreeList[30], UInt<5>("h1e"), _freeRegAddr_T_31) @[Mux.scala 47:70]
    node _freeRegAddr_T_33 = mux(PRFFreeList[29], UInt<5>("h1d"), _freeRegAddr_T_32) @[Mux.scala 47:70]
    node _freeRegAddr_T_34 = mux(PRFFreeList[28], UInt<5>("h1c"), _freeRegAddr_T_33) @[Mux.scala 47:70]
    node _freeRegAddr_T_35 = mux(PRFFreeList[27], UInt<5>("h1b"), _freeRegAddr_T_34) @[Mux.scala 47:70]
    node _freeRegAddr_T_36 = mux(PRFFreeList[26], UInt<5>("h1a"), _freeRegAddr_T_35) @[Mux.scala 47:70]
    node _freeRegAddr_T_37 = mux(PRFFreeList[25], UInt<5>("h19"), _freeRegAddr_T_36) @[Mux.scala 47:70]
    node _freeRegAddr_T_38 = mux(PRFFreeList[24], UInt<5>("h18"), _freeRegAddr_T_37) @[Mux.scala 47:70]
    node _freeRegAddr_T_39 = mux(PRFFreeList[23], UInt<5>("h17"), _freeRegAddr_T_38) @[Mux.scala 47:70]
    node _freeRegAddr_T_40 = mux(PRFFreeList[22], UInt<5>("h16"), _freeRegAddr_T_39) @[Mux.scala 47:70]
    node _freeRegAddr_T_41 = mux(PRFFreeList[21], UInt<5>("h15"), _freeRegAddr_T_40) @[Mux.scala 47:70]
    node _freeRegAddr_T_42 = mux(PRFFreeList[20], UInt<5>("h14"), _freeRegAddr_T_41) @[Mux.scala 47:70]
    node _freeRegAddr_T_43 = mux(PRFFreeList[19], UInt<5>("h13"), _freeRegAddr_T_42) @[Mux.scala 47:70]
    node _freeRegAddr_T_44 = mux(PRFFreeList[18], UInt<5>("h12"), _freeRegAddr_T_43) @[Mux.scala 47:70]
    node _freeRegAddr_T_45 = mux(PRFFreeList[17], UInt<5>("h11"), _freeRegAddr_T_44) @[Mux.scala 47:70]
    node _freeRegAddr_T_46 = mux(PRFFreeList[16], UInt<5>("h10"), _freeRegAddr_T_45) @[Mux.scala 47:70]
    node _freeRegAddr_T_47 = mux(PRFFreeList[15], UInt<4>("hf"), _freeRegAddr_T_46) @[Mux.scala 47:70]
    node _freeRegAddr_T_48 = mux(PRFFreeList[14], UInt<4>("he"), _freeRegAddr_T_47) @[Mux.scala 47:70]
    node _freeRegAddr_T_49 = mux(PRFFreeList[13], UInt<4>("hd"), _freeRegAddr_T_48) @[Mux.scala 47:70]
    node _freeRegAddr_T_50 = mux(PRFFreeList[12], UInt<4>("hc"), _freeRegAddr_T_49) @[Mux.scala 47:70]
    node _freeRegAddr_T_51 = mux(PRFFreeList[11], UInt<4>("hb"), _freeRegAddr_T_50) @[Mux.scala 47:70]
    node _freeRegAddr_T_52 = mux(PRFFreeList[10], UInt<4>("ha"), _freeRegAddr_T_51) @[Mux.scala 47:70]
    node _freeRegAddr_T_53 = mux(PRFFreeList[9], UInt<4>("h9"), _freeRegAddr_T_52) @[Mux.scala 47:70]
    node _freeRegAddr_T_54 = mux(PRFFreeList[8], UInt<4>("h8"), _freeRegAddr_T_53) @[Mux.scala 47:70]
    node _freeRegAddr_T_55 = mux(PRFFreeList[7], UInt<3>("h7"), _freeRegAddr_T_54) @[Mux.scala 47:70]
    node _freeRegAddr_T_56 = mux(PRFFreeList[6], UInt<3>("h6"), _freeRegAddr_T_55) @[Mux.scala 47:70]
    node _freeRegAddr_T_57 = mux(PRFFreeList[5], UInt<3>("h5"), _freeRegAddr_T_56) @[Mux.scala 47:70]
    node _freeRegAddr_T_58 = mux(PRFFreeList[4], UInt<3>("h4"), _freeRegAddr_T_57) @[Mux.scala 47:70]
    node _freeRegAddr_T_59 = mux(PRFFreeList[3], UInt<2>("h3"), _freeRegAddr_T_58) @[Mux.scala 47:70]
    node _freeRegAddr_T_60 = mux(PRFFreeList[2], UInt<2>("h2"), _freeRegAddr_T_59) @[Mux.scala 47:70]
    node _freeRegAddr_T_61 = mux(PRFFreeList[1], UInt<1>("h1"), _freeRegAddr_T_60) @[Mux.scala 47:70]
    node _freeRegAddr_T_62 = mux(PRFFreeList[0], UInt<1>("h0"), _freeRegAddr_T_61) @[Mux.scala 47:70]
    freeRegAddr <= _freeRegAddr_T_62 @[decode.scala 335:15]
    node _T_4 = eq(freeRegAddr, UInt<6>("h3f")) @[decode.scala 338:20]
    node _T_5 = eq(UInt<7>("h6f"), opcode) @[decode.scala 338:69]
    node _T_6 = eq(UInt<7>("h67"), opcode) @[decode.scala 338:69]
    node _T_7 = eq(UInt<7>("h63"), opcode) @[decode.scala 338:69]
    node _T_8 = or(_T_5, _T_6) @[decode.scala 338:90]
    node _T_9 = or(_T_8, _T_7) @[decode.scala 338:90]
    node _T_10 = bits(branchBuffer.branchMask[0], 0, 0) @[decode.scala 338:129]
    node _T_11 = bits(branchBuffer.branchMask[1], 0, 0) @[decode.scala 338:129]
    node _T_12 = bits(branchBuffer.branchMask[2], 0, 0) @[decode.scala 338:129]
    node _T_13 = bits(branchBuffer.branchMask[3], 0, 0) @[decode.scala 338:129]
    node _T_14 = bits(branchBuffer.branchMask[4], 0, 0) @[decode.scala 338:129]
    node _T_15 = and(_T_10, _T_11) @[decode.scala 338:146]
    node _T_16 = and(_T_15, _T_12) @[decode.scala 338:146]
    node _T_17 = and(_T_16, _T_13) @[decode.scala 338:146]
    node _T_18 = and(_T_17, _T_14) @[decode.scala 338:146]
    node _T_19 = and(_T_9, _T_18) @[decode.scala 338:96]
    node _T_20 = or(_T_4, _T_19) @[decode.scala 338:29]
    when _T_20 : @[decode.scala 338:154]
      stall <= UInt<1>("h1") @[decode.scala 339:11]
    node _T_21 = eq(rs1Addr, freeRegAddr) @[decode.scala 342:16]
    node _T_22 = eq(rs2Addr, freeRegAddr) @[decode.scala 342:43]
    node _T_23 = or(_T_21, _T_22) @[decode.scala 342:32]
    when _T_23 : @[decode.scala 342:60]
      stall <= UInt<1>("h1") @[decode.scala 343:11]
      node _T_24 = eq(rs1Addr, freeRegAddr) @[decode.scala 344:18]
      when _T_24 : @[decode.scala 344:35]
        PRFFreeList[rs1Addr] <= UInt<1>("h0") @[decode.scala 345:28]
      else :
        node _T_25 = eq(rs2Addr, freeRegAddr) @[decode.scala 346:24]
        when _T_25 : @[decode.scala 346:41]
          PRFFreeList[rs2Addr] <= UInt<1>("h0") @[decode.scala 347:28]
    node _T_26 = bits(outputBuffer.instruction, 11, 7) @[decode.scala 351:55]
    node _T_27 = neq(_T_26, UInt<1>("h0")) @[decode.scala 351:62]
    node _T_28 = and(jumpAddrWrite.fired, _T_27) @[decode.scala 351:28]
    when _T_28 : @[decode.scala 351:71]
      PRFValidList[outputBuffer.PRFDest] <= UInt<1>("h1") @[decode.scala 351:108]
    node _T_29 = and(validInputBuf, readyOutputBuf) @[decode.scala 353:22]
    node _T_30 = eq(insType, UInt<1>("h1")) @[decode.scala 353:52]
    node _T_31 = eq(insType, UInt<1>("h0")) @[decode.scala 353:75]
    node _T_32 = or(_T_30, _T_31) @[decode.scala 353:64]
    node _T_33 = eq(insType, UInt<3>("h4")) @[decode.scala 353:98]
    node _T_34 = or(_T_32, _T_33) @[decode.scala 353:87]
    node _T_35 = eq(insType, UInt<3>("h5")) @[decode.scala 353:121]
    node _T_36 = or(_T_34, _T_35) @[decode.scala 353:110]
    node _T_37 = and(_T_29, _T_36) @[decode.scala 353:40]
    node _T_38 = neq(rd, UInt<1>("h0")) @[decode.scala 353:140]
    node _T_39 = and(_T_37, _T_38) @[decode.scala 353:134]
    when _T_39 : @[decode.scala 353:149]
      node _T_40 = eq(branchEvalIn.fired, UInt<1>("h0")) @[decode.scala 354:10]
      node _T_41 = or(_T_40, branchEvalIn.passFail) @[decode.scala 354:30]
      when _T_41 : @[decode.scala 354:55]
        PRFFreeList[freeRegAddr] <= UInt<1>("h0") @[decode.scala 355:33]
        PRFValidList[freeRegAddr] <= UInt<1>("h0") @[decode.scala 356:33]
        frontEndRegMap[rd] <= freeRegAddr @[decode.scala 357:33]
    when branchEvalIn.fired : @[decode.scala 363:28]
      node _branchTracker_T = sub(branchTracker, UInt<1>("h1")) @[decode.scala 364:36]
      node _branchTracker_T_1 = tail(_branchTracker_T, 1) @[decode.scala 364:36]
      branchTracker <= _branchTracker_T_1 @[decode.scala 364:19]
      node lo = cat(branchBuffer.branchMask[1], branchBuffer.branchMask[0]) @[decode.scala 367:66]
      node hi_hi = cat(branchBuffer.branchMask[4], branchBuffer.branchMask[3]) @[decode.scala 367:66]
      node hi = cat(hi_hi, branchBuffer.branchMask[2]) @[decode.scala 367:66]
      node _T_42 = cat(hi, lo) @[decode.scala 367:66]
      node _T_43 = not(UInt<5>("hf")) @[decode.scala 367:75]
      node _T_44 = and(_T_42, _T_43) @[decode.scala 367:73]
      node lo_1 = cat(branchBuffer.branchMask[1], branchBuffer.branchMask[0]) @[decode.scala 367:114]
      node hi_hi_1 = cat(branchBuffer.branchMask[4], branchBuffer.branchMask[3]) @[decode.scala 367:114]
      node hi_1 = cat(hi_hi_1, branchBuffer.branchMask[2]) @[decode.scala 367:114]
      node _T_45 = cat(hi_1, lo_1) @[decode.scala 367:114]
      node _T_46 = not(branchEvalIn.branchMask) @[decode.scala 367:124]
      node _T_47 = and(_T_45, _T_46) @[decode.scala 367:121]
      node _T_48 = and(_T_47, UInt<5>("hf")) @[decode.scala 367:151]
      node _T_49 = or(_T_44, _T_48) @[decode.scala 367:86]
      node _T_50 = bits(_T_49, 0, 0) @[decode.scala 367:164]
      node _T_51 = bits(_T_49, 1, 1) @[decode.scala 367:164]
      node _T_52 = bits(_T_49, 2, 2) @[decode.scala 367:164]
      node _T_53 = bits(_T_49, 3, 3) @[decode.scala 367:164]
      node _T_54 = bits(_T_49, 4, 4) @[decode.scala 367:164]
      wire _WIRE : UInt<1>[5] @[decode.scala 367:39]
      _WIRE[0] <= _T_50 @[decode.scala 367:39]
      _WIRE[1] <= _T_51 @[decode.scala 367:39]
      _WIRE[2] <= _T_52 @[decode.scala 367:39]
      _WIRE[3] <= _T_53 @[decode.scala 367:39]
      _WIRE[4] <= _T_54 @[decode.scala 367:39]
      branchBuffer.branchMask[0] <= _WIRE[0] @[decode.scala 367:29]
      branchBuffer.branchMask[1] <= _WIRE[1] @[decode.scala 367:29]
      branchBuffer.branchMask[2] <= _WIRE[2] @[decode.scala 367:29]
      branchBuffer.branchMask[3] <= _WIRE[3] @[decode.scala 367:29]
      branchBuffer.branchMask[4] <= _WIRE[4] @[decode.scala 367:29]
      node _T_55 = eq(branchEvalIn.passFail, UInt<1>("h0")) @[decode.scala 369:10]
      when _T_55 : @[decode.scala 369:34]
        branchReg <= UInt<1>("h0") @[decode.scala 370:17]
        branchBuffer.branchMask[0] <= UInt<1>("h0") @[decode.scala 372:34]
        branchBuffer.branchMask[1] <= UInt<1>("h0") @[decode.scala 373:34]
        branchBuffer.branchMask[2] <= UInt<1>("h0") @[decode.scala 374:34]
        branchBuffer.branchMask[3] <= UInt<1>("h0") @[decode.scala 375:34]
        branchBuffer.branchMask[4] <= UInt<1>("h1") @[decode.scala 376:34]
        expectedPC <= branchEvalIn.targetPC @[decode.scala 378:18]
        node _T_56 = bits(branchEvalIn.branchMask, 3, 0) @[decode.scala 381:35]
        node _T_57 = orr(_T_56) @[decode.scala 381:41]
        when _T_57 : @[decode.scala 381:45]
          frontEndRegMap <= reservedRegMap1 @[decode.scala 382:22]
          node _T_58 = or(reservedFreeList1[0], PRFFreeList[0]) @[decode.scala 383:100]
          node _T_59 = or(reservedFreeList1[1], PRFFreeList[1]) @[decode.scala 383:100]
          node _T_60 = or(reservedFreeList1[2], PRFFreeList[2]) @[decode.scala 383:100]
          node _T_61 = or(reservedFreeList1[3], PRFFreeList[3]) @[decode.scala 383:100]
          node _T_62 = or(reservedFreeList1[4], PRFFreeList[4]) @[decode.scala 383:100]
          node _T_63 = or(reservedFreeList1[5], PRFFreeList[5]) @[decode.scala 383:100]
          node _T_64 = or(reservedFreeList1[6], PRFFreeList[6]) @[decode.scala 383:100]
          node _T_65 = or(reservedFreeList1[7], PRFFreeList[7]) @[decode.scala 383:100]
          node _T_66 = or(reservedFreeList1[8], PRFFreeList[8]) @[decode.scala 383:100]
          node _T_67 = or(reservedFreeList1[9], PRFFreeList[9]) @[decode.scala 383:100]
          node _T_68 = or(reservedFreeList1[10], PRFFreeList[10]) @[decode.scala 383:100]
          node _T_69 = or(reservedFreeList1[11], PRFFreeList[11]) @[decode.scala 383:100]
          node _T_70 = or(reservedFreeList1[12], PRFFreeList[12]) @[decode.scala 383:100]
          node _T_71 = or(reservedFreeList1[13], PRFFreeList[13]) @[decode.scala 383:100]
          node _T_72 = or(reservedFreeList1[14], PRFFreeList[14]) @[decode.scala 383:100]
          node _T_73 = or(reservedFreeList1[15], PRFFreeList[15]) @[decode.scala 383:100]
          node _T_74 = or(reservedFreeList1[16], PRFFreeList[16]) @[decode.scala 383:100]
          node _T_75 = or(reservedFreeList1[17], PRFFreeList[17]) @[decode.scala 383:100]
          node _T_76 = or(reservedFreeList1[18], PRFFreeList[18]) @[decode.scala 383:100]
          node _T_77 = or(reservedFreeList1[19], PRFFreeList[19]) @[decode.scala 383:100]
          node _T_78 = or(reservedFreeList1[20], PRFFreeList[20]) @[decode.scala 383:100]
          node _T_79 = or(reservedFreeList1[21], PRFFreeList[21]) @[decode.scala 383:100]
          node _T_80 = or(reservedFreeList1[22], PRFFreeList[22]) @[decode.scala 383:100]
          node _T_81 = or(reservedFreeList1[23], PRFFreeList[23]) @[decode.scala 383:100]
          node _T_82 = or(reservedFreeList1[24], PRFFreeList[24]) @[decode.scala 383:100]
          node _T_83 = or(reservedFreeList1[25], PRFFreeList[25]) @[decode.scala 383:100]
          node _T_84 = or(reservedFreeList1[26], PRFFreeList[26]) @[decode.scala 383:100]
          node _T_85 = or(reservedFreeList1[27], PRFFreeList[27]) @[decode.scala 383:100]
          node _T_86 = or(reservedFreeList1[28], PRFFreeList[28]) @[decode.scala 383:100]
          node _T_87 = or(reservedFreeList1[29], PRFFreeList[29]) @[decode.scala 383:100]
          node _T_88 = or(reservedFreeList1[30], PRFFreeList[30]) @[decode.scala 383:100]
          node _T_89 = or(reservedFreeList1[31], PRFFreeList[31]) @[decode.scala 383:100]
          node _T_90 = or(reservedFreeList1[32], PRFFreeList[32]) @[decode.scala 383:100]
          node _T_91 = or(reservedFreeList1[33], PRFFreeList[33]) @[decode.scala 383:100]
          node _T_92 = or(reservedFreeList1[34], PRFFreeList[34]) @[decode.scala 383:100]
          node _T_93 = or(reservedFreeList1[35], PRFFreeList[35]) @[decode.scala 383:100]
          node _T_94 = or(reservedFreeList1[36], PRFFreeList[36]) @[decode.scala 383:100]
          node _T_95 = or(reservedFreeList1[37], PRFFreeList[37]) @[decode.scala 383:100]
          node _T_96 = or(reservedFreeList1[38], PRFFreeList[38]) @[decode.scala 383:100]
          node _T_97 = or(reservedFreeList1[39], PRFFreeList[39]) @[decode.scala 383:100]
          node _T_98 = or(reservedFreeList1[40], PRFFreeList[40]) @[decode.scala 383:100]
          node _T_99 = or(reservedFreeList1[41], PRFFreeList[41]) @[decode.scala 383:100]
          node _T_100 = or(reservedFreeList1[42], PRFFreeList[42]) @[decode.scala 383:100]
          node _T_101 = or(reservedFreeList1[43], PRFFreeList[43]) @[decode.scala 383:100]
          node _T_102 = or(reservedFreeList1[44], PRFFreeList[44]) @[decode.scala 383:100]
          node _T_103 = or(reservedFreeList1[45], PRFFreeList[45]) @[decode.scala 383:100]
          node _T_104 = or(reservedFreeList1[46], PRFFreeList[46]) @[decode.scala 383:100]
          node _T_105 = or(reservedFreeList1[47], PRFFreeList[47]) @[decode.scala 383:100]
          node _T_106 = or(reservedFreeList1[48], PRFFreeList[48]) @[decode.scala 383:100]
          node _T_107 = or(reservedFreeList1[49], PRFFreeList[49]) @[decode.scala 383:100]
          node _T_108 = or(reservedFreeList1[50], PRFFreeList[50]) @[decode.scala 383:100]
          node _T_109 = or(reservedFreeList1[51], PRFFreeList[51]) @[decode.scala 383:100]
          node _T_110 = or(reservedFreeList1[52], PRFFreeList[52]) @[decode.scala 383:100]
          node _T_111 = or(reservedFreeList1[53], PRFFreeList[53]) @[decode.scala 383:100]
          node _T_112 = or(reservedFreeList1[54], PRFFreeList[54]) @[decode.scala 383:100]
          node _T_113 = or(reservedFreeList1[55], PRFFreeList[55]) @[decode.scala 383:100]
          node _T_114 = or(reservedFreeList1[56], PRFFreeList[56]) @[decode.scala 383:100]
          node _T_115 = or(reservedFreeList1[57], PRFFreeList[57]) @[decode.scala 383:100]
          node _T_116 = or(reservedFreeList1[58], PRFFreeList[58]) @[decode.scala 383:100]
          node _T_117 = or(reservedFreeList1[59], PRFFreeList[59]) @[decode.scala 383:100]
          node _T_118 = or(reservedFreeList1[60], PRFFreeList[60]) @[decode.scala 383:100]
          node _T_119 = or(reservedFreeList1[61], PRFFreeList[61]) @[decode.scala 383:100]
          node _T_120 = or(reservedFreeList1[62], PRFFreeList[62]) @[decode.scala 383:100]
          node _T_121 = or(reservedFreeList1[63], PRFFreeList[63]) @[decode.scala 383:100]
          PRFFreeList[0] <= _T_58 @[decode.scala 383:22]
          PRFFreeList[1] <= _T_59 @[decode.scala 383:22]
          PRFFreeList[2] <= _T_60 @[decode.scala 383:22]
          PRFFreeList[3] <= _T_61 @[decode.scala 383:22]
          PRFFreeList[4] <= _T_62 @[decode.scala 383:22]
          PRFFreeList[5] <= _T_63 @[decode.scala 383:22]
          PRFFreeList[6] <= _T_64 @[decode.scala 383:22]
          PRFFreeList[7] <= _T_65 @[decode.scala 383:22]
          PRFFreeList[8] <= _T_66 @[decode.scala 383:22]
          PRFFreeList[9] <= _T_67 @[decode.scala 383:22]
          PRFFreeList[10] <= _T_68 @[decode.scala 383:22]
          PRFFreeList[11] <= _T_69 @[decode.scala 383:22]
          PRFFreeList[12] <= _T_70 @[decode.scala 383:22]
          PRFFreeList[13] <= _T_71 @[decode.scala 383:22]
          PRFFreeList[14] <= _T_72 @[decode.scala 383:22]
          PRFFreeList[15] <= _T_73 @[decode.scala 383:22]
          PRFFreeList[16] <= _T_74 @[decode.scala 383:22]
          PRFFreeList[17] <= _T_75 @[decode.scala 383:22]
          PRFFreeList[18] <= _T_76 @[decode.scala 383:22]
          PRFFreeList[19] <= _T_77 @[decode.scala 383:22]
          PRFFreeList[20] <= _T_78 @[decode.scala 383:22]
          PRFFreeList[21] <= _T_79 @[decode.scala 383:22]
          PRFFreeList[22] <= _T_80 @[decode.scala 383:22]
          PRFFreeList[23] <= _T_81 @[decode.scala 383:22]
          PRFFreeList[24] <= _T_82 @[decode.scala 383:22]
          PRFFreeList[25] <= _T_83 @[decode.scala 383:22]
          PRFFreeList[26] <= _T_84 @[decode.scala 383:22]
          PRFFreeList[27] <= _T_85 @[decode.scala 383:22]
          PRFFreeList[28] <= _T_86 @[decode.scala 383:22]
          PRFFreeList[29] <= _T_87 @[decode.scala 383:22]
          PRFFreeList[30] <= _T_88 @[decode.scala 383:22]
          PRFFreeList[31] <= _T_89 @[decode.scala 383:22]
          PRFFreeList[32] <= _T_90 @[decode.scala 383:22]
          PRFFreeList[33] <= _T_91 @[decode.scala 383:22]
          PRFFreeList[34] <= _T_92 @[decode.scala 383:22]
          PRFFreeList[35] <= _T_93 @[decode.scala 383:22]
          PRFFreeList[36] <= _T_94 @[decode.scala 383:22]
          PRFFreeList[37] <= _T_95 @[decode.scala 383:22]
          PRFFreeList[38] <= _T_96 @[decode.scala 383:22]
          PRFFreeList[39] <= _T_97 @[decode.scala 383:22]
          PRFFreeList[40] <= _T_98 @[decode.scala 383:22]
          PRFFreeList[41] <= _T_99 @[decode.scala 383:22]
          PRFFreeList[42] <= _T_100 @[decode.scala 383:22]
          PRFFreeList[43] <= _T_101 @[decode.scala 383:22]
          PRFFreeList[44] <= _T_102 @[decode.scala 383:22]
          PRFFreeList[45] <= _T_103 @[decode.scala 383:22]
          PRFFreeList[46] <= _T_104 @[decode.scala 383:22]
          PRFFreeList[47] <= _T_105 @[decode.scala 383:22]
          PRFFreeList[48] <= _T_106 @[decode.scala 383:22]
          PRFFreeList[49] <= _T_107 @[decode.scala 383:22]
          PRFFreeList[50] <= _T_108 @[decode.scala 383:22]
          PRFFreeList[51] <= _T_109 @[decode.scala 383:22]
          PRFFreeList[52] <= _T_110 @[decode.scala 383:22]
          PRFFreeList[53] <= _T_111 @[decode.scala 383:22]
          PRFFreeList[54] <= _T_112 @[decode.scala 383:22]
          PRFFreeList[55] <= _T_113 @[decode.scala 383:22]
          PRFFreeList[56] <= _T_114 @[decode.scala 383:22]
          PRFFreeList[57] <= _T_115 @[decode.scala 383:22]
          PRFFreeList[58] <= _T_116 @[decode.scala 383:22]
          PRFFreeList[59] <= _T_117 @[decode.scala 383:22]
          PRFFreeList[60] <= _T_118 @[decode.scala 383:22]
          PRFFreeList[61] <= _T_119 @[decode.scala 383:22]
          PRFFreeList[62] <= _T_120 @[decode.scala 383:22]
          PRFFreeList[63] <= _T_121 @[decode.scala 383:22]
          node _T_122 = or(reservedValidList1[0], PRFValidList[0]) @[decode.scala 384:102]
          node _T_123 = or(reservedValidList1[1], PRFValidList[1]) @[decode.scala 384:102]
          node _T_124 = or(reservedValidList1[2], PRFValidList[2]) @[decode.scala 384:102]
          node _T_125 = or(reservedValidList1[3], PRFValidList[3]) @[decode.scala 384:102]
          node _T_126 = or(reservedValidList1[4], PRFValidList[4]) @[decode.scala 384:102]
          node _T_127 = or(reservedValidList1[5], PRFValidList[5]) @[decode.scala 384:102]
          node _T_128 = or(reservedValidList1[6], PRFValidList[6]) @[decode.scala 384:102]
          node _T_129 = or(reservedValidList1[7], PRFValidList[7]) @[decode.scala 384:102]
          node _T_130 = or(reservedValidList1[8], PRFValidList[8]) @[decode.scala 384:102]
          node _T_131 = or(reservedValidList1[9], PRFValidList[9]) @[decode.scala 384:102]
          node _T_132 = or(reservedValidList1[10], PRFValidList[10]) @[decode.scala 384:102]
          node _T_133 = or(reservedValidList1[11], PRFValidList[11]) @[decode.scala 384:102]
          node _T_134 = or(reservedValidList1[12], PRFValidList[12]) @[decode.scala 384:102]
          node _T_135 = or(reservedValidList1[13], PRFValidList[13]) @[decode.scala 384:102]
          node _T_136 = or(reservedValidList1[14], PRFValidList[14]) @[decode.scala 384:102]
          node _T_137 = or(reservedValidList1[15], PRFValidList[15]) @[decode.scala 384:102]
          node _T_138 = or(reservedValidList1[16], PRFValidList[16]) @[decode.scala 384:102]
          node _T_139 = or(reservedValidList1[17], PRFValidList[17]) @[decode.scala 384:102]
          node _T_140 = or(reservedValidList1[18], PRFValidList[18]) @[decode.scala 384:102]
          node _T_141 = or(reservedValidList1[19], PRFValidList[19]) @[decode.scala 384:102]
          node _T_142 = or(reservedValidList1[20], PRFValidList[20]) @[decode.scala 384:102]
          node _T_143 = or(reservedValidList1[21], PRFValidList[21]) @[decode.scala 384:102]
          node _T_144 = or(reservedValidList1[22], PRFValidList[22]) @[decode.scala 384:102]
          node _T_145 = or(reservedValidList1[23], PRFValidList[23]) @[decode.scala 384:102]
          node _T_146 = or(reservedValidList1[24], PRFValidList[24]) @[decode.scala 384:102]
          node _T_147 = or(reservedValidList1[25], PRFValidList[25]) @[decode.scala 384:102]
          node _T_148 = or(reservedValidList1[26], PRFValidList[26]) @[decode.scala 384:102]
          node _T_149 = or(reservedValidList1[27], PRFValidList[27]) @[decode.scala 384:102]
          node _T_150 = or(reservedValidList1[28], PRFValidList[28]) @[decode.scala 384:102]
          node _T_151 = or(reservedValidList1[29], PRFValidList[29]) @[decode.scala 384:102]
          node _T_152 = or(reservedValidList1[30], PRFValidList[30]) @[decode.scala 384:102]
          node _T_153 = or(reservedValidList1[31], PRFValidList[31]) @[decode.scala 384:102]
          node _T_154 = or(reservedValidList1[32], PRFValidList[32]) @[decode.scala 384:102]
          node _T_155 = or(reservedValidList1[33], PRFValidList[33]) @[decode.scala 384:102]
          node _T_156 = or(reservedValidList1[34], PRFValidList[34]) @[decode.scala 384:102]
          node _T_157 = or(reservedValidList1[35], PRFValidList[35]) @[decode.scala 384:102]
          node _T_158 = or(reservedValidList1[36], PRFValidList[36]) @[decode.scala 384:102]
          node _T_159 = or(reservedValidList1[37], PRFValidList[37]) @[decode.scala 384:102]
          node _T_160 = or(reservedValidList1[38], PRFValidList[38]) @[decode.scala 384:102]
          node _T_161 = or(reservedValidList1[39], PRFValidList[39]) @[decode.scala 384:102]
          node _T_162 = or(reservedValidList1[40], PRFValidList[40]) @[decode.scala 384:102]
          node _T_163 = or(reservedValidList1[41], PRFValidList[41]) @[decode.scala 384:102]
          node _T_164 = or(reservedValidList1[42], PRFValidList[42]) @[decode.scala 384:102]
          node _T_165 = or(reservedValidList1[43], PRFValidList[43]) @[decode.scala 384:102]
          node _T_166 = or(reservedValidList1[44], PRFValidList[44]) @[decode.scala 384:102]
          node _T_167 = or(reservedValidList1[45], PRFValidList[45]) @[decode.scala 384:102]
          node _T_168 = or(reservedValidList1[46], PRFValidList[46]) @[decode.scala 384:102]
          node _T_169 = or(reservedValidList1[47], PRFValidList[47]) @[decode.scala 384:102]
          node _T_170 = or(reservedValidList1[48], PRFValidList[48]) @[decode.scala 384:102]
          node _T_171 = or(reservedValidList1[49], PRFValidList[49]) @[decode.scala 384:102]
          node _T_172 = or(reservedValidList1[50], PRFValidList[50]) @[decode.scala 384:102]
          node _T_173 = or(reservedValidList1[51], PRFValidList[51]) @[decode.scala 384:102]
          node _T_174 = or(reservedValidList1[52], PRFValidList[52]) @[decode.scala 384:102]
          node _T_175 = or(reservedValidList1[53], PRFValidList[53]) @[decode.scala 384:102]
          node _T_176 = or(reservedValidList1[54], PRFValidList[54]) @[decode.scala 384:102]
          node _T_177 = or(reservedValidList1[55], PRFValidList[55]) @[decode.scala 384:102]
          node _T_178 = or(reservedValidList1[56], PRFValidList[56]) @[decode.scala 384:102]
          node _T_179 = or(reservedValidList1[57], PRFValidList[57]) @[decode.scala 384:102]
          node _T_180 = or(reservedValidList1[58], PRFValidList[58]) @[decode.scala 384:102]
          node _T_181 = or(reservedValidList1[59], PRFValidList[59]) @[decode.scala 384:102]
          node _T_182 = or(reservedValidList1[60], PRFValidList[60]) @[decode.scala 384:102]
          node _T_183 = or(reservedValidList1[61], PRFValidList[61]) @[decode.scala 384:102]
          node _T_184 = or(reservedValidList1[62], PRFValidList[62]) @[decode.scala 384:102]
          node _T_185 = or(reservedValidList1[63], PRFValidList[63]) @[decode.scala 384:102]
          PRFValidList[0] <= _T_122 @[decode.scala 384:22]
          PRFValidList[1] <= _T_123 @[decode.scala 384:22]
          PRFValidList[2] <= _T_124 @[decode.scala 384:22]
          PRFValidList[3] <= _T_125 @[decode.scala 384:22]
          PRFValidList[4] <= _T_126 @[decode.scala 384:22]
          PRFValidList[5] <= _T_127 @[decode.scala 384:22]
          PRFValidList[6] <= _T_128 @[decode.scala 384:22]
          PRFValidList[7] <= _T_129 @[decode.scala 384:22]
          PRFValidList[8] <= _T_130 @[decode.scala 384:22]
          PRFValidList[9] <= _T_131 @[decode.scala 384:22]
          PRFValidList[10] <= _T_132 @[decode.scala 384:22]
          PRFValidList[11] <= _T_133 @[decode.scala 384:22]
          PRFValidList[12] <= _T_134 @[decode.scala 384:22]
          PRFValidList[13] <= _T_135 @[decode.scala 384:22]
          PRFValidList[14] <= _T_136 @[decode.scala 384:22]
          PRFValidList[15] <= _T_137 @[decode.scala 384:22]
          PRFValidList[16] <= _T_138 @[decode.scala 384:22]
          PRFValidList[17] <= _T_139 @[decode.scala 384:22]
          PRFValidList[18] <= _T_140 @[decode.scala 384:22]
          PRFValidList[19] <= _T_141 @[decode.scala 384:22]
          PRFValidList[20] <= _T_142 @[decode.scala 384:22]
          PRFValidList[21] <= _T_143 @[decode.scala 384:22]
          PRFValidList[22] <= _T_144 @[decode.scala 384:22]
          PRFValidList[23] <= _T_145 @[decode.scala 384:22]
          PRFValidList[24] <= _T_146 @[decode.scala 384:22]
          PRFValidList[25] <= _T_147 @[decode.scala 384:22]
          PRFValidList[26] <= _T_148 @[decode.scala 384:22]
          PRFValidList[27] <= _T_149 @[decode.scala 384:22]
          PRFValidList[28] <= _T_150 @[decode.scala 384:22]
          PRFValidList[29] <= _T_151 @[decode.scala 384:22]
          PRFValidList[30] <= _T_152 @[decode.scala 384:22]
          PRFValidList[31] <= _T_153 @[decode.scala 384:22]
          PRFValidList[32] <= _T_154 @[decode.scala 384:22]
          PRFValidList[33] <= _T_155 @[decode.scala 384:22]
          PRFValidList[34] <= _T_156 @[decode.scala 384:22]
          PRFValidList[35] <= _T_157 @[decode.scala 384:22]
          PRFValidList[36] <= _T_158 @[decode.scala 384:22]
          PRFValidList[37] <= _T_159 @[decode.scala 384:22]
          PRFValidList[38] <= _T_160 @[decode.scala 384:22]
          PRFValidList[39] <= _T_161 @[decode.scala 384:22]
          PRFValidList[40] <= _T_162 @[decode.scala 384:22]
          PRFValidList[41] <= _T_163 @[decode.scala 384:22]
          PRFValidList[42] <= _T_164 @[decode.scala 384:22]
          PRFValidList[43] <= _T_165 @[decode.scala 384:22]
          PRFValidList[44] <= _T_166 @[decode.scala 384:22]
          PRFValidList[45] <= _T_167 @[decode.scala 384:22]
          PRFValidList[46] <= _T_168 @[decode.scala 384:22]
          PRFValidList[47] <= _T_169 @[decode.scala 384:22]
          PRFValidList[48] <= _T_170 @[decode.scala 384:22]
          PRFValidList[49] <= _T_171 @[decode.scala 384:22]
          PRFValidList[50] <= _T_172 @[decode.scala 384:22]
          PRFValidList[51] <= _T_173 @[decode.scala 384:22]
          PRFValidList[52] <= _T_174 @[decode.scala 384:22]
          PRFValidList[53] <= _T_175 @[decode.scala 384:22]
          PRFValidList[54] <= _T_176 @[decode.scala 384:22]
          PRFValidList[55] <= _T_177 @[decode.scala 384:22]
          PRFValidList[56] <= _T_178 @[decode.scala 384:22]
          PRFValidList[57] <= _T_179 @[decode.scala 384:22]
          PRFValidList[58] <= _T_180 @[decode.scala 384:22]
          PRFValidList[59] <= _T_181 @[decode.scala 384:22]
          PRFValidList[60] <= _T_182 @[decode.scala 384:22]
          PRFValidList[61] <= _T_183 @[decode.scala 384:22]
          PRFValidList[62] <= _T_184 @[decode.scala 384:22]
          PRFValidList[63] <= _T_185 @[decode.scala 384:22]
        else :
          frontEndRegMap <= architecturalRegMap @[decode.scala 386:24]
          wire _WIRE_1 : UInt<1>[64] @[decode.scala 387:34]
          _WIRE_1[0] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[1] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[2] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[3] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[4] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[5] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[6] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[7] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[8] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[9] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[10] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[11] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[12] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[13] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[14] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[15] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[16] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[17] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[18] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[19] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[20] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[21] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[22] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[23] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[24] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[25] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[26] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[27] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[28] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[29] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[30] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[31] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[32] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[33] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[34] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[35] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[36] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[37] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[38] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[39] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[40] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[41] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[42] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[43] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[44] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[45] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[46] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[47] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[48] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[49] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[50] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[51] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[52] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[53] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[54] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[55] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[56] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[57] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[58] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[59] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[60] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[61] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[62] <= UInt<1>("h1") @[decode.scala 387:34]
          _WIRE_1[63] <= UInt<1>("h1") @[decode.scala 387:34]
          PRFFreeList <= _WIRE_1 @[decode.scala 387:24]
          wire _WIRE_2 : UInt<1>[64] @[decode.scala 388:34]
          _WIRE_2[0] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[1] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[2] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[3] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[4] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[5] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[6] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[7] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[8] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[9] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[10] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[11] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[12] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[13] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[14] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[15] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[16] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[17] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[18] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[19] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[20] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[21] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[22] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[23] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[24] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[25] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[26] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[27] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[28] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[29] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[30] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[31] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[32] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[33] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[34] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[35] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[36] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[37] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[38] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[39] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[40] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[41] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[42] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[43] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[44] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[45] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[46] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[47] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[48] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[49] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[50] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[51] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[52] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[53] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[54] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[55] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[56] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[57] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[58] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[59] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[60] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[61] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[62] <= UInt<1>("h0") @[decode.scala 388:34]
          _WIRE_2[63] <= UInt<1>("h0") @[decode.scala 388:34]
          PRFValidList <= _WIRE_2 @[decode.scala 388:24]
          coherency <= UInt<1>("h1") @[decode.scala 389:19]
          PRFValidList[architecturalRegMap[0]] <= UInt<1>("h1") @[decode.scala 392:47]
          PRFFreeList[architecturalRegMap[0]] <= UInt<1>("h0") @[decode.scala 393:46]
          PRFValidList[architecturalRegMap[1]] <= UInt<1>("h1") @[decode.scala 392:47]
          PRFFreeList[architecturalRegMap[1]] <= UInt<1>("h0") @[decode.scala 393:46]
          PRFValidList[architecturalRegMap[2]] <= UInt<1>("h1") @[decode.scala 392:47]
          PRFFreeList[architecturalRegMap[2]] <= UInt<1>("h0") @[decode.scala 393:46]
          PRFValidList[architecturalRegMap[3]] <= UInt<1>("h1") @[decode.scala 392:47]
          PRFFreeList[architecturalRegMap[3]] <= UInt<1>("h0") @[decode.scala 393:46]
          PRFValidList[architecturalRegMap[4]] <= UInt<1>("h1") @[decode.scala 392:47]
          PRFFreeList[architecturalRegMap[4]] <= UInt<1>("h0") @[decode.scala 393:46]
          PRFValidList[architecturalRegMap[5]] <= UInt<1>("h1") @[decode.scala 392:47]
          PRFFreeList[architecturalRegMap[5]] <= UInt<1>("h0") @[decode.scala 393:46]
          PRFValidList[architecturalRegMap[6]] <= UInt<1>("h1") @[decode.scala 392:47]
          PRFFreeList[architecturalRegMap[6]] <= UInt<1>("h0") @[decode.scala 393:46]
          PRFValidList[architecturalRegMap[7]] <= UInt<1>("h1") @[decode.scala 392:47]
          PRFFreeList[architecturalRegMap[7]] <= UInt<1>("h0") @[decode.scala 393:46]
          PRFValidList[architecturalRegMap[8]] <= UInt<1>("h1") @[decode.scala 392:47]
          PRFFreeList[architecturalRegMap[8]] <= UInt<1>("h0") @[decode.scala 393:46]
          PRFValidList[architecturalRegMap[9]] <= UInt<1>("h1") @[decode.scala 392:47]
          PRFFreeList[architecturalRegMap[9]] <= UInt<1>("h0") @[decode.scala 393:46]
          PRFValidList[architecturalRegMap[10]] <= UInt<1>("h1") @[decode.scala 392:47]
          PRFFreeList[architecturalRegMap[10]] <= UInt<1>("h0") @[decode.scala 393:46]
          PRFValidList[architecturalRegMap[11]] <= UInt<1>("h1") @[decode.scala 392:47]
          PRFFreeList[architecturalRegMap[11]] <= UInt<1>("h0") @[decode.scala 393:46]
          PRFValidList[architecturalRegMap[12]] <= UInt<1>("h1") @[decode.scala 392:47]
          PRFFreeList[architecturalRegMap[12]] <= UInt<1>("h0") @[decode.scala 393:46]
          PRFValidList[architecturalRegMap[13]] <= UInt<1>("h1") @[decode.scala 392:47]
          PRFFreeList[architecturalRegMap[13]] <= UInt<1>("h0") @[decode.scala 393:46]
          PRFValidList[architecturalRegMap[14]] <= UInt<1>("h1") @[decode.scala 392:47]
          PRFFreeList[architecturalRegMap[14]] <= UInt<1>("h0") @[decode.scala 393:46]
          PRFValidList[architecturalRegMap[15]] <= UInt<1>("h1") @[decode.scala 392:47]
          PRFFreeList[architecturalRegMap[15]] <= UInt<1>("h0") @[decode.scala 393:46]
          PRFValidList[architecturalRegMap[16]] <= UInt<1>("h1") @[decode.scala 392:47]
          PRFFreeList[architecturalRegMap[16]] <= UInt<1>("h0") @[decode.scala 393:46]
          PRFValidList[architecturalRegMap[17]] <= UInt<1>("h1") @[decode.scala 392:47]
          PRFFreeList[architecturalRegMap[17]] <= UInt<1>("h0") @[decode.scala 393:46]
          PRFValidList[architecturalRegMap[18]] <= UInt<1>("h1") @[decode.scala 392:47]
          PRFFreeList[architecturalRegMap[18]] <= UInt<1>("h0") @[decode.scala 393:46]
          PRFValidList[architecturalRegMap[19]] <= UInt<1>("h1") @[decode.scala 392:47]
          PRFFreeList[architecturalRegMap[19]] <= UInt<1>("h0") @[decode.scala 393:46]
          PRFValidList[architecturalRegMap[20]] <= UInt<1>("h1") @[decode.scala 392:47]
          PRFFreeList[architecturalRegMap[20]] <= UInt<1>("h0") @[decode.scala 393:46]
          PRFValidList[architecturalRegMap[21]] <= UInt<1>("h1") @[decode.scala 392:47]
          PRFFreeList[architecturalRegMap[21]] <= UInt<1>("h0") @[decode.scala 393:46]
          PRFValidList[architecturalRegMap[22]] <= UInt<1>("h1") @[decode.scala 392:47]
          PRFFreeList[architecturalRegMap[22]] <= UInt<1>("h0") @[decode.scala 393:46]
          PRFValidList[architecturalRegMap[23]] <= UInt<1>("h1") @[decode.scala 392:47]
          PRFFreeList[architecturalRegMap[23]] <= UInt<1>("h0") @[decode.scala 393:46]
          PRFValidList[architecturalRegMap[24]] <= UInt<1>("h1") @[decode.scala 392:47]
          PRFFreeList[architecturalRegMap[24]] <= UInt<1>("h0") @[decode.scala 393:46]
          PRFValidList[architecturalRegMap[25]] <= UInt<1>("h1") @[decode.scala 392:47]
          PRFFreeList[architecturalRegMap[25]] <= UInt<1>("h0") @[decode.scala 393:46]
          PRFValidList[architecturalRegMap[26]] <= UInt<1>("h1") @[decode.scala 392:47]
          PRFFreeList[architecturalRegMap[26]] <= UInt<1>("h0") @[decode.scala 393:46]
          PRFValidList[architecturalRegMap[27]] <= UInt<1>("h1") @[decode.scala 392:47]
          PRFFreeList[architecturalRegMap[27]] <= UInt<1>("h0") @[decode.scala 393:46]
          PRFValidList[architecturalRegMap[28]] <= UInt<1>("h1") @[decode.scala 392:47]
          PRFFreeList[architecturalRegMap[28]] <= UInt<1>("h0") @[decode.scala 393:46]
          PRFValidList[architecturalRegMap[29]] <= UInt<1>("h1") @[decode.scala 392:47]
          PRFFreeList[architecturalRegMap[29]] <= UInt<1>("h0") @[decode.scala 393:46]
          PRFValidList[architecturalRegMap[30]] <= UInt<1>("h1") @[decode.scala 392:47]
          PRFFreeList[architecturalRegMap[30]] <= UInt<1>("h0") @[decode.scala 393:46]
          PRFValidList[architecturalRegMap[31]] <= UInt<1>("h1") @[decode.scala 392:47]
          PRFFreeList[architecturalRegMap[31]] <= UInt<1>("h0") @[decode.scala 393:46]
        branchTracker <= UInt<1>("h0") @[decode.scala 398:21]
      else :
        reservedRegMap1 <= reservedRegMap2 @[decode.scala 400:23]
        reservedRegMap2 <= reservedRegMap3 @[decode.scala 401:23]
        reservedRegMap3 <= reservedRegMap4 @[decode.scala 402:23]
        reservedFreeList1 <= reservedFreeList2 @[decode.scala 404:25]
        reservedFreeList2 <= reservedFreeList3 @[decode.scala 405:25]
        reservedFreeList3 <= reservedFreeList4 @[decode.scala 406:25]
        reservedValidList1 <= reservedValidList2 @[decode.scala 408:26]
        reservedValidList2 <= reservedValidList3 @[decode.scala 409:26]
        reservedValidList3 <= reservedValidList4 @[decode.scala 410:26]
    wire bitPosition : UInt<2>
    bitPosition <= UInt<2>("h0")
    node bitPosition_lo = cat(branchBuffer.branchMask[1], branchBuffer.branchMask[0]) @[decode.scala 417:59]
    node bitPosition_hi_hi = cat(branchBuffer.branchMask[4], branchBuffer.branchMask[3]) @[decode.scala 417:59]
    node bitPosition_hi = cat(bitPosition_hi_hi, branchBuffer.branchMask[2]) @[decode.scala 417:59]
    node _bitPosition_T = cat(bitPosition_hi, bitPosition_lo) @[decode.scala 417:59]
    node _bitPosition_T_1 = not(_bitPosition_T) @[decode.scala 417:34]
    node _bitPosition_T_2 = bits(_bitPosition_T_1, 0, 0) @[OneHot.scala 47:45]
    node _bitPosition_T_3 = bits(_bitPosition_T_1, 1, 1) @[OneHot.scala 47:45]
    node _bitPosition_T_4 = bits(_bitPosition_T_1, 2, 2) @[OneHot.scala 47:45]
    node _bitPosition_T_5 = bits(_bitPosition_T_1, 3, 3) @[OneHot.scala 47:45]
    node _bitPosition_T_6 = bits(_bitPosition_T_1, 4, 4) @[OneHot.scala 47:45]
    node _bitPosition_T_7 = mux(_bitPosition_T_5, UInt<2>("h3"), UInt<3>("h4")) @[Mux.scala 47:70]
    node _bitPosition_T_8 = mux(_bitPosition_T_4, UInt<2>("h2"), _bitPosition_T_7) @[Mux.scala 47:70]
    node _bitPosition_T_9 = mux(_bitPosition_T_3, UInt<1>("h1"), _bitPosition_T_8) @[Mux.scala 47:70]
    node _bitPosition_T_10 = mux(_bitPosition_T_2, UInt<1>("h0"), _bitPosition_T_9) @[Mux.scala 47:70]
    bitPosition <= _bitPosition_T_10 @[decode.scala 417:15]
    node _T_186 = and(validInputBuf, readyOutputBuf) @[decode.scala 419:22]
    when _T_186 : @[decode.scala 419:41]
      node _T_187 = eq(opcode, UInt<7>("h6f")) @[decode.scala 420:17]
      node _T_188 = eq(opcode, UInt<7>("h67")) @[decode.scala 420:38]
      node _T_189 = or(_T_187, _T_188) @[decode.scala 420:28]
      node _T_190 = eq(opcode, UInt<7>("h63")) @[decode.scala 420:60]
      node _T_191 = or(_T_189, _T_190) @[decode.scala 420:50]
      when _T_191 : @[decode.scala 420:73]
        branchReg <= UInt<1>("h1") @[decode.scala 421:17]
        branchBuffer.branchPC <= pc @[decode.scala 422:29]
        branchBuffer.branchMask[bitPosition] <= UInt<1>("h1") @[decode.scala 423:44]
        node _T_192 = eq(UInt<1>("h0"), bitPosition) @[decode.scala 424:27]
        when _T_192 : @[decode.scala 424:27]
          branchPCMask <= UInt<1>("h1") @[decode.scala 425:32]
        else :
          node _T_193 = eq(UInt<1>("h1"), bitPosition) @[decode.scala 424:27]
          when _T_193 : @[decode.scala 424:27]
            branchPCMask <= UInt<2>("h2") @[decode.scala 426:32]
          else :
            node _T_194 = eq(UInt<2>("h2"), bitPosition) @[decode.scala 424:27]
            when _T_194 : @[decode.scala 424:27]
              branchPCMask <= UInt<3>("h4") @[decode.scala 427:32]
            else :
              node _T_195 = eq(UInt<2>("h3"), bitPosition) @[decode.scala 424:27]
              when _T_195 : @[decode.scala 424:27]
                branchPCMask <= UInt<4>("h8") @[decode.scala 428:32]
        node _T_196 = eq(UInt<1>("h0"), branchTracker) @[decode.scala 431:29]
        when _T_196 : @[decode.scala 431:29]
          reservedRegMap1 <= frontEndRegMap @[decode.scala 433:30]
          reservedFreeList1 <= PRFFreeList @[decode.scala 434:30]
          reservedValidList1 <= PRFValidList @[decode.scala 435:30]
          node _T_197 = bits(opcode, 2, 2) @[decode.scala 436:22]
          node _T_198 = bits(_T_197, 0, 0) @[decode.scala 436:26]
          node _T_199 = orr(rd) @[decode.scala 436:39]
          node _T_200 = and(_T_198, _T_199) @[decode.scala 436:33]
          when _T_200 : @[decode.scala 436:44]
            reservedRegMap1[rd] <= freeRegAddr @[decode.scala 437:45]
            reservedFreeList1[freeRegAddr] <= UInt<1>("h0") @[decode.scala 438:45]
            reservedValidList1[freeRegAddr] <= UInt<1>("h0") @[decode.scala 439:45]
        else :
          node _T_201 = eq(UInt<1>("h1"), branchTracker) @[decode.scala 431:29]
          when _T_201 : @[decode.scala 431:29]
            reservedRegMap2 <= frontEndRegMap @[decode.scala 443:30]
            reservedFreeList2 <= PRFFreeList @[decode.scala 444:30]
            reservedValidList2 <= PRFValidList @[decode.scala 445:30]
            node _T_202 = bits(opcode, 2, 2) @[decode.scala 446:22]
            node _T_203 = bits(_T_202, 0, 0) @[decode.scala 446:26]
            node _T_204 = orr(rd) @[decode.scala 446:39]
            node _T_205 = and(_T_203, _T_204) @[decode.scala 446:33]
            when _T_205 : @[decode.scala 446:44]
              reservedRegMap2[rd] <= freeRegAddr @[decode.scala 447:45]
              reservedFreeList2[freeRegAddr] <= UInt<1>("h0") @[decode.scala 448:45]
              reservedValidList2[freeRegAddr] <= UInt<1>("h0") @[decode.scala 449:45]
          else :
            node _T_206 = eq(UInt<2>("h2"), branchTracker) @[decode.scala 431:29]
            when _T_206 : @[decode.scala 431:29]
              reservedRegMap3 <= frontEndRegMap @[decode.scala 453:30]
              reservedFreeList3 <= PRFFreeList @[decode.scala 454:30]
              reservedValidList3 <= PRFValidList @[decode.scala 455:30]
              node _T_207 = bits(opcode, 2, 2) @[decode.scala 456:22]
              node _T_208 = bits(_T_207, 0, 0) @[decode.scala 456:26]
              node _T_209 = orr(rd) @[decode.scala 456:39]
              node _T_210 = and(_T_208, _T_209) @[decode.scala 456:33]
              when _T_210 : @[decode.scala 456:44]
                reservedRegMap3[rd] <= freeRegAddr @[decode.scala 457:45]
                reservedFreeList3[freeRegAddr] <= UInt<1>("h0") @[decode.scala 458:45]
                reservedValidList3[freeRegAddr] <= UInt<1>("h0") @[decode.scala 459:45]
            else :
              node _T_211 = eq(UInt<2>("h3"), branchTracker) @[decode.scala 431:29]
              when _T_211 : @[decode.scala 431:29]
                reservedRegMap4 <= frontEndRegMap @[decode.scala 463:30]
                reservedFreeList4 <= PRFFreeList @[decode.scala 464:30]
                reservedValidList4 <= PRFValidList @[decode.scala 465:30]
                node _T_212 = bits(opcode, 2, 2) @[decode.scala 466:22]
                node _T_213 = bits(_T_212, 0, 0) @[decode.scala 466:26]
                node _T_214 = orr(rd) @[decode.scala 466:39]
                node _T_215 = and(_T_213, _T_214) @[decode.scala 466:33]
                when _T_215 : @[decode.scala 466:44]
                  reservedRegMap4[rd] <= freeRegAddr @[decode.scala 467:45]
                  reservedFreeList4[freeRegAddr] <= UInt<1>("h0") @[decode.scala 468:45]
                  reservedValidList4[freeRegAddr] <= UInt<1>("h0") @[decode.scala 469:45]
        node _branchTracker_T_2 = add(branchTracker, UInt<1>("h1")) @[decode.scala 473:38]
        node _branchTracker_T_3 = tail(_branchTracker_T_2, 1) @[decode.scala 473:38]
        branchTracker <= _branchTracker_T_3 @[decode.scala 473:21]
      else :
        branchReg <= UInt<1>("h0") @[decode.scala 475:17]
    node lo_2 = cat(branchBuffer.branchMask[1], branchBuffer.branchMask[0]) @[decode.scala 480:32]
    node hi_hi_2 = cat(branchBuffer.branchMask[4], branchBuffer.branchMask[3]) @[decode.scala 480:32]
    node hi_2 = cat(hi_hi_2, branchBuffer.branchMask[2]) @[decode.scala 480:32]
    node _T_216 = cat(hi_2, lo_2) @[decode.scala 480:32]
    node _T_217 = neq(_T_216, UInt<1>("h0")) @[decode.scala 480:39]
    node _T_218 = and(_T_217, validInputBuf) @[decode.scala 480:47]
    node _T_219 = and(_T_218, readyOutputBuf) @[decode.scala 480:64]
    when _T_219 : @[decode.scala 480:83]
      branchBuffer.predictedPC <= pc @[decode.scala 481:30]
    node _branchBuffer_branchPCReady_T = eq(opcode, UInt<7>("h63")) @[decode.scala 484:41]
    node _branchBuffer_branchPCReady_T_1 = eq(opcode, UInt<7>("h6f")) @[decode.scala 484:63]
    node _branchBuffer_branchPCReady_T_2 = or(_branchBuffer_branchPCReady_T, _branchBuffer_branchPCReady_T_1) @[decode.scala 484:53]
    node _branchBuffer_branchPCReady_T_3 = eq(opcode, UInt<7>("h67")) @[decode.scala 484:84]
    node _branchBuffer_branchPCReady_T_4 = or(_branchBuffer_branchPCReady_T_2, _branchBuffer_branchPCReady_T_3) @[decode.scala 484:74]
    node _branchBuffer_branchPCReady_T_5 = and(_branchBuffer_branchPCReady_T_4, validInputBuf) @[decode.scala 484:97]
    node _branchBuffer_branchPCReady_T_6 = and(_branchBuffer_branchPCReady_T_5, readyOutputBuf) @[decode.scala 484:114]
    branchBuffer.branchPCReady <= _branchBuffer_branchPCReady_T_6 @[decode.scala 484:30]
    node _branchBuffer_predictedPCReady_T = and(branchReg, validInputBuf) @[decode.scala 485:46]
    node _branchBuffer_predictedPCReady_T_1 = and(_branchBuffer_predictedPCReady_T, readyOutputBuf) @[decode.scala 485:63]
    branchBuffer.predictedPCReady <= _branchBuffer_predictedPCReady_T_1 @[decode.scala 485:33]
    node _T_220 = neq(expectedPC, UInt<1>("h0")) @[decode.scala 487:19]
    node _T_221 = and(_T_220, fromFetch.fired) @[decode.scala 487:27]
    node _T_222 = eq(fromFetch.expected.pc, fromFetch.pc) @[decode.scala 487:71]
    node _T_223 = and(_T_221, _T_222) @[decode.scala 487:46]
    when _T_223 : @[decode.scala 487:89]
      expectedPC <= UInt<1>("h0") @[decode.scala 488:16]
      coherency <= UInt<1>("h0") @[decode.scala 489:15]
    when toExec.fired : @[decode.scala 492:22]
      issueRobBuff <= toExec.robAddr @[decode.scala 492:37]
    when writeBackResult.fired : @[decode.scala 493:31]
      commitRobBuf <= writeBackResult.robAddr @[decode.scala 493:46]
    node _isCSR_T = bits(outputBuffer.instruction, 6, 0) @[decode.scala 495:36]
    node _isCSR_T_1 = eq(_isCSR_T, UInt<7>("h73")) @[decode.scala 495:42]
    node _isCSR_T_2 = bits(outputBuffer.instruction, 14, 12) @[decode.scala 495:82]
    node _isCSR_T_3 = neq(_isCSR_T_2, UInt<1>("h0")) @[decode.scala 495:90]
    node _isCSR_T_4 = and(_isCSR_T_1, _isCSR_T_3) @[decode.scala 495:55]
    node _isCSR_T_5 = and(_isCSR_T_4, toExec.fired) @[decode.scala 495:98]
    isCSR <= _isCSR_T_5 @[decode.scala 495:9]
    reg ustatus : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[decode.scala 497:28]
    reg utvec : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[decode.scala 498:28]
    reg uepc : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[decode.scala 499:28]
    reg ucause : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[decode.scala 500:28]
    reg scounteren : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[decode.scala 501:28]
    reg satp : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[decode.scala 502:28]
    reg mstatus : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[decode.scala 503:28]
    reg misa : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[decode.scala 504:28]
    reg medeleg : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[decode.scala 505:28]
    reg mideleg : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[decode.scala 506:28]
    reg mie : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[decode.scala 507:28]
    reg mtvec : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[decode.scala 508:28]
    reg mcounteren : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[decode.scala 509:28]
    reg mscratch : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[decode.scala 510:28]
    reg mepc : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[decode.scala 511:28]
    reg mcause : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[decode.scala 512:28]
    reg mtval : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[decode.scala 513:28]
    reg mip : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[decode.scala 514:28]
    reg pmpcfg0 : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[decode.scala 515:28]
    reg pmpaddr0 : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[decode.scala 516:28]
    reg mvendorid : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[decode.scala 517:28]
    reg marchid : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[decode.scala 518:28]
    reg mimpid : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[decode.scala 519:28]
    reg mhartid : UInt<64>, clock with :
      reset => (reset, UInt<64>("h1")) @[decode.scala 520:28]
    node _mstatus_T = and(mstatus, UInt<13>("h1888")) @[decode.scala 522:23]
    node _mstatus_T_1 = or(_mstatus_T, UInt<36>("ha00000000")) @[decode.scala 522:48]
    mstatus <= _mstatus_T_1 @[decode.scala 522:11]
    node _misa_T = shl(UInt<64>("h1"), 63) @[decode.scala 523:36]
    node _misa_T_1 = or(UInt<21>("h101101"), _misa_T) @[decode.scala 523:23]
    misa <= _misa_T_1 @[decode.scala 523:8]
    when isCSR : @[decode.scala 525:15]
      csrRobAddrReg <= toExec.robAddr @[decode.scala 526:19]
      node _csrFunc3Reg_T = bits(outputBuffer.instruction, 14, 12) @[decode.scala 527:46]
      csrFunc3Reg <= _csrFunc3Reg_T @[decode.scala 527:19]
      csrAddrReg <= outputBuffer.immediate @[decode.scala 528:19]
      node _csrImmReg_T = bits(outputBuffer.instruction, 19, 15) @[decode.scala 529:46]
      node _csrImmReg_T_1 = and(_csrImmReg_T, UInt<5>("h1f")) @[decode.scala 529:54]
      csrImmReg <= _csrImmReg_T_1 @[decode.scala 529:19]
      csrInsReg <= outputBuffer.instruction @[decode.scala 530:19]
    node _T_224 = eq(opcode, UInt<7>("h73")) @[decode.scala 534:15]
    node _T_225 = neq(fun3, UInt<1>("h0")) @[decode.scala 534:36]
    node _T_226 = and(_T_224, _T_225) @[decode.scala 534:28]
    node _T_227 = and(_T_226, validInputBuf) @[decode.scala 534:44]
    node _T_228 = and(_T_227, readyOutputBuf) @[decode.scala 534:61]
    when _T_228 : @[decode.scala 534:80]
      node _T_229 = and(immediate, UInt<12>("hfff")) @[decode.scala 535:22]
      node _T_230 = eq(UInt<1>("h0"), _T_229) @[decode.scala 535:34]
      when _T_230 : @[decode.scala 535:34]
        csrReadDataReg <= ustatus @[decode.scala 536:37]
      else :
        node _T_231 = eq(UInt<3>("h5"), _T_229) @[decode.scala 535:34]
        when _T_231 : @[decode.scala 535:34]
          csrReadDataReg <= utvec @[decode.scala 537:37]
        else :
          node _T_232 = eq(UInt<7>("h41"), _T_229) @[decode.scala 535:34]
          when _T_232 : @[decode.scala 535:34]
            csrReadDataReg <= uepc @[decode.scala 538:37]
          else :
            node _T_233 = eq(UInt<7>("h42"), _T_229) @[decode.scala 535:34]
            when _T_233 : @[decode.scala 535:34]
              csrReadDataReg <= ucause @[decode.scala 539:37]
            else :
              node _T_234 = eq(UInt<9>("h106"), _T_229) @[decode.scala 535:34]
              when _T_234 : @[decode.scala 535:34]
                csrReadDataReg <= scounteren @[decode.scala 540:37]
              else :
                node _T_235 = eq(UInt<9>("h180"), _T_229) @[decode.scala 535:34]
                when _T_235 : @[decode.scala 535:34]
                  csrReadDataReg <= satp @[decode.scala 541:37]
                else :
                  node _T_236 = eq(UInt<10>("h300"), _T_229) @[decode.scala 535:34]
                  when _T_236 : @[decode.scala 535:34]
                    csrReadDataReg <= mstatus @[decode.scala 542:37]
                  else :
                    node _T_237 = eq(UInt<10>("h301"), _T_229) @[decode.scala 535:34]
                    when _T_237 : @[decode.scala 535:34]
                      csrReadDataReg <= misa @[decode.scala 543:37]
                    else :
                      node _T_238 = eq(UInt<10>("h302"), _T_229) @[decode.scala 535:34]
                      when _T_238 : @[decode.scala 535:34]
                        csrReadDataReg <= medeleg @[decode.scala 544:37]
                      else :
                        node _T_239 = eq(UInt<10>("h303"), _T_229) @[decode.scala 535:34]
                        when _T_239 : @[decode.scala 535:34]
                          csrReadDataReg <= mideleg @[decode.scala 545:37]
                        else :
                          node _T_240 = eq(UInt<10>("h304"), _T_229) @[decode.scala 535:34]
                          when _T_240 : @[decode.scala 535:34]
                            csrReadDataReg <= mie @[decode.scala 546:37]
                          else :
                            node _T_241 = eq(UInt<10>("h305"), _T_229) @[decode.scala 535:34]
                            when _T_241 : @[decode.scala 535:34]
                              csrReadDataReg <= mtvec @[decode.scala 547:37]
                            else :
                              node _T_242 = eq(UInt<10>("h306"), _T_229) @[decode.scala 535:34]
                              when _T_242 : @[decode.scala 535:34]
                                csrReadDataReg <= mcounteren @[decode.scala 548:37]
                              else :
                                node _T_243 = eq(UInt<10>("h340"), _T_229) @[decode.scala 535:34]
                                when _T_243 : @[decode.scala 535:34]
                                  csrReadDataReg <= mscratch @[decode.scala 549:37]
                                else :
                                  node _T_244 = eq(UInt<10>("h341"), _T_229) @[decode.scala 535:34]
                                  when _T_244 : @[decode.scala 535:34]
                                    csrReadDataReg <= mepc @[decode.scala 550:37]
                                  else :
                                    node _T_245 = eq(UInt<10>("h342"), _T_229) @[decode.scala 535:34]
                                    when _T_245 : @[decode.scala 535:34]
                                      csrReadDataReg <= mcause @[decode.scala 551:37]
                                    else :
                                      node _T_246 = eq(UInt<10>("h343"), _T_229) @[decode.scala 535:34]
                                      when _T_246 : @[decode.scala 535:34]
                                        csrReadDataReg <= mtval @[decode.scala 552:37]
                                      else :
                                        node _T_247 = eq(UInt<10>("h344"), _T_229) @[decode.scala 535:34]
                                        when _T_247 : @[decode.scala 535:34]
                                          csrReadDataReg <= mip @[decode.scala 553:37]
                                        else :
                                          node _T_248 = eq(UInt<10>("h3a0"), _T_229) @[decode.scala 535:34]
                                          when _T_248 : @[decode.scala 535:34]
                                            csrReadDataReg <= pmpcfg0 @[decode.scala 554:37]
                                          else :
                                            node _T_249 = eq(UInt<10>("h3b0"), _T_229) @[decode.scala 535:34]
                                            when _T_249 : @[decode.scala 535:34]
                                              csrReadDataReg <= pmpaddr0 @[decode.scala 555:37]
                                            else :
                                              node _T_250 = eq(UInt<12>("hf11"), _T_229) @[decode.scala 535:34]
                                              when _T_250 : @[decode.scala 535:34]
                                                csrReadDataReg <= mvendorid @[decode.scala 556:37]
                                              else :
                                                node _T_251 = eq(UInt<12>("hf12"), _T_229) @[decode.scala 535:34]
                                                when _T_251 : @[decode.scala 535:34]
                                                  csrReadDataReg <= marchid @[decode.scala 557:37]
                                                else :
                                                  node _T_252 = eq(UInt<12>("hf13"), _T_229) @[decode.scala 535:34]
                                                  when _T_252 : @[decode.scala 535:34]
                                                    csrReadDataReg <= mimpid @[decode.scala 558:37]
                                                  else :
                                                    node _T_253 = eq(UInt<12>("hf14"), _T_229) @[decode.scala 535:34]
                                                    when _T_253 : @[decode.scala 535:34]
                                                      csrReadDataReg <= mhartid @[decode.scala 559:37]
    wire csrWriteData : UInt<64>
    csrWriteData <= UInt<64>("h0")
    node _T_254 = bits(writeBackResult.instruction, 6, 0) @[decode.scala 564:60]
    node _T_255 = eq(_T_254, UInt<7>("h73")) @[decode.scala 564:66]
    node _T_256 = and(writeBackResult.fired, _T_255) @[decode.scala 564:30]
    when _T_256 : @[decode.scala 564:80]
      stallReg <= UInt<1>("h0") @[decode.scala 565:14]
    node _T_257 = bits(writeBackResult.instruction, 6, 0) @[decode.scala 568:60]
    node _T_258 = eq(_T_257, UInt<7>("h73")) @[decode.scala 568:66]
    node _T_259 = and(writeBackResult.fired, _T_258) @[decode.scala 568:30]
    node _T_260 = bits(writeBackResult.instruction, 14, 12) @[decode.scala 568:109]
    node _T_261 = neq(_T_260, UInt<1>("h0")) @[decode.scala 568:117]
    node _T_262 = and(_T_259, _T_261) @[decode.scala 568:79]
    when _T_262 : @[decode.scala 568:126]
      csrWriteData <= writeBackResult.data @[decode.scala 570:18]
      node _T_263 = bits(writeBackResult.instruction, 14, 12) @[decode.scala 571:39]
      node _T_264 = eq(UInt<1>("h1"), _T_263) @[decode.scala 571:48]
      when _T_264 : @[decode.scala 571:48]
        node _T_265 = and(csrAddrReg, UInt<12>("hfff")) @[decode.scala 573:27]
        node _T_266 = eq(UInt<1>("h0"), _T_265) @[decode.scala 573:39]
        when _T_266 : @[decode.scala 573:39]
          ustatus <= csrWriteData @[decode.scala 574:37]
        else :
          node _T_267 = eq(UInt<3>("h5"), _T_265) @[decode.scala 573:39]
          when _T_267 : @[decode.scala 573:39]
            utvec <= csrWriteData @[decode.scala 575:37]
          else :
            node _T_268 = eq(UInt<7>("h41"), _T_265) @[decode.scala 573:39]
            when _T_268 : @[decode.scala 573:39]
              uepc <= csrWriteData @[decode.scala 576:37]
            else :
              node _T_269 = eq(UInt<7>("h42"), _T_265) @[decode.scala 573:39]
              when _T_269 : @[decode.scala 573:39]
                ucause <= csrWriteData @[decode.scala 577:37]
              else :
                node _T_270 = eq(UInt<9>("h106"), _T_265) @[decode.scala 573:39]
                when _T_270 : @[decode.scala 573:39]
                  scounteren <= csrWriteData @[decode.scala 578:37]
                else :
                  node _T_271 = eq(UInt<9>("h180"), _T_265) @[decode.scala 573:39]
                  when _T_271 : @[decode.scala 573:39]
                    satp <= csrWriteData @[decode.scala 579:37]
                  else :
                    node _T_272 = eq(UInt<10>("h300"), _T_265) @[decode.scala 573:39]
                    when _T_272 : @[decode.scala 573:39]
                      mstatus <= csrWriteData @[decode.scala 580:37]
                    else :
                      node _T_273 = eq(UInt<10>("h301"), _T_265) @[decode.scala 573:39]
                      when _T_273 : @[decode.scala 573:39]
                        misa <= csrWriteData @[decode.scala 581:37]
                      else :
                        node _T_274 = eq(UInt<10>("h302"), _T_265) @[decode.scala 573:39]
                        when _T_274 : @[decode.scala 573:39]
                          medeleg <= csrWriteData @[decode.scala 582:37]
                        else :
                          node _T_275 = eq(UInt<10>("h303"), _T_265) @[decode.scala 573:39]
                          when _T_275 : @[decode.scala 573:39]
                            mideleg <= csrWriteData @[decode.scala 583:37]
                          else :
                            node _T_276 = eq(UInt<10>("h304"), _T_265) @[decode.scala 573:39]
                            when _T_276 : @[decode.scala 573:39]
                              mie <= csrWriteData @[decode.scala 584:37]
                            else :
                              node _T_277 = eq(UInt<10>("h305"), _T_265) @[decode.scala 573:39]
                              when _T_277 : @[decode.scala 573:39]
                                mtvec <= csrWriteData @[decode.scala 585:37]
                              else :
                                node _T_278 = eq(UInt<10>("h306"), _T_265) @[decode.scala 573:39]
                                when _T_278 : @[decode.scala 573:39]
                                  mcounteren <= csrWriteData @[decode.scala 586:37]
                                else :
                                  node _T_279 = eq(UInt<10>("h340"), _T_265) @[decode.scala 573:39]
                                  when _T_279 : @[decode.scala 573:39]
                                    mscratch <= csrWriteData @[decode.scala 587:37]
                                  else :
                                    node _T_280 = eq(UInt<10>("h341"), _T_265) @[decode.scala 573:39]
                                    when _T_280 : @[decode.scala 573:39]
                                      mepc <= csrWriteData @[decode.scala 588:37]
                                    else :
                                      node _T_281 = eq(UInt<10>("h342"), _T_265) @[decode.scala 573:39]
                                      when _T_281 : @[decode.scala 573:39]
                                        mcause <= csrWriteData @[decode.scala 589:37]
                                      else :
                                        node _T_282 = eq(UInt<10>("h343"), _T_265) @[decode.scala 573:39]
                                        when _T_282 : @[decode.scala 573:39]
                                          mtval <= csrWriteData @[decode.scala 590:37]
                                        else :
                                          node _T_283 = eq(UInt<10>("h344"), _T_265) @[decode.scala 573:39]
                                          when _T_283 : @[decode.scala 573:39]
                                            mip <= csrWriteData @[decode.scala 591:37]
                                          else :
                                            node _T_284 = eq(UInt<10>("h3a0"), _T_265) @[decode.scala 573:39]
                                            when _T_284 : @[decode.scala 573:39]
                                              pmpcfg0 <= csrWriteData @[decode.scala 592:37]
                                            else :
                                              node _T_285 = eq(UInt<10>("h3b0"), _T_265) @[decode.scala 573:39]
                                              when _T_285 : @[decode.scala 573:39]
                                                pmpaddr0 <= csrWriteData @[decode.scala 593:37]
                                              else :
                                                node _T_286 = eq(UInt<12>("hf11"), _T_265) @[decode.scala 573:39]
                                                when _T_286 : @[decode.scala 573:39]
                                                  mvendorid <= csrWriteData @[decode.scala 594:37]
                                                else :
                                                  node _T_287 = eq(UInt<12>("hf12"), _T_265) @[decode.scala 573:39]
                                                  when _T_287 : @[decode.scala 573:39]
                                                    marchid <= csrWriteData @[decode.scala 595:37]
                                                  else :
                                                    node _T_288 = eq(UInt<12>("hf13"), _T_265) @[decode.scala 573:39]
                                                    when _T_288 : @[decode.scala 573:39]
                                                      mimpid <= csrWriteData @[decode.scala 596:37]
                                                    else :
                                                      node _T_289 = eq(UInt<12>("hf14"), _T_265) @[decode.scala 573:39]
                                                      when _T_289 : @[decode.scala 573:39]
                                                        mhartid <= csrWriteData @[decode.scala 597:37]
      else :
        node _T_290 = eq(UInt<2>("h2"), _T_263) @[decode.scala 571:48]
        when _T_290 : @[decode.scala 571:48]
          node _T_291 = and(csrAddrReg, UInt<12>("hfff")) @[decode.scala 601:27]
          node _T_292 = eq(UInt<1>("h0"), _T_291) @[decode.scala 601:39]
          when _T_292 : @[decode.scala 601:39]
            node _ustatus_T = or(ustatus, csrWriteData) @[decode.scala 602:49]
            ustatus <= _ustatus_T @[decode.scala 602:38]
          else :
            node _T_293 = eq(UInt<3>("h5"), _T_291) @[decode.scala 601:39]
            when _T_293 : @[decode.scala 601:39]
              node _utvec_T = or(utvec, csrWriteData) @[decode.scala 603:47]
              utvec <= _utvec_T @[decode.scala 603:38]
            else :
              node _T_294 = eq(UInt<7>("h41"), _T_291) @[decode.scala 601:39]
              when _T_294 : @[decode.scala 601:39]
                node _uepc_T = or(uepc, csrWriteData) @[decode.scala 604:46]
                uepc <= _uepc_T @[decode.scala 604:38]
              else :
                node _T_295 = eq(UInt<7>("h42"), _T_291) @[decode.scala 601:39]
                when _T_295 : @[decode.scala 601:39]
                  node _ucause_T = or(ucause, csrWriteData) @[decode.scala 605:48]
                  ucause <= _ucause_T @[decode.scala 605:38]
                else :
                  node _T_296 = eq(UInt<9>("h106"), _T_291) @[decode.scala 601:39]
                  when _T_296 : @[decode.scala 601:39]
                    node _scounteren_T = or(scounteren, csrWriteData) @[decode.scala 606:52]
                    scounteren <= _scounteren_T @[decode.scala 606:38]
                  else :
                    node _T_297 = eq(UInt<9>("h180"), _T_291) @[decode.scala 601:39]
                    when _T_297 : @[decode.scala 601:39]
                      node _satp_T = or(satp, csrWriteData) @[decode.scala 607:46]
                      satp <= _satp_T @[decode.scala 607:38]
                    else :
                      node _T_298 = eq(UInt<10>("h300"), _T_291) @[decode.scala 601:39]
                      when _T_298 : @[decode.scala 601:39]
                        node _mstatus_T_2 = or(mstatus, csrWriteData) @[decode.scala 608:49]
                        mstatus <= _mstatus_T_2 @[decode.scala 608:38]
                      else :
                        node _T_299 = eq(UInt<10>("h301"), _T_291) @[decode.scala 601:39]
                        when _T_299 : @[decode.scala 601:39]
                          node _misa_T_2 = or(misa, csrWriteData) @[decode.scala 609:46]
                          misa <= _misa_T_2 @[decode.scala 609:38]
                        else :
                          node _T_300 = eq(UInt<10>("h302"), _T_291) @[decode.scala 601:39]
                          when _T_300 : @[decode.scala 601:39]
                            node _medeleg_T = or(medeleg, csrWriteData) @[decode.scala 610:49]
                            medeleg <= _medeleg_T @[decode.scala 610:38]
                          else :
                            node _T_301 = eq(UInt<10>("h303"), _T_291) @[decode.scala 601:39]
                            when _T_301 : @[decode.scala 601:39]
                              node _mideleg_T = or(mideleg, csrWriteData) @[decode.scala 611:49]
                              mideleg <= _mideleg_T @[decode.scala 611:38]
                            else :
                              node _T_302 = eq(UInt<10>("h304"), _T_291) @[decode.scala 601:39]
                              when _T_302 : @[decode.scala 601:39]
                                node _mie_T = or(mie, csrWriteData) @[decode.scala 612:46]
                                mie <= _mie_T @[decode.scala 612:38]
                              else :
                                node _T_303 = eq(UInt<10>("h305"), _T_291) @[decode.scala 601:39]
                                when _T_303 : @[decode.scala 601:39]
                                  node _mtvec_T = or(mtvec, csrWriteData) @[decode.scala 613:47]
                                  mtvec <= _mtvec_T @[decode.scala 613:38]
                                else :
                                  node _T_304 = eq(UInt<10>("h306"), _T_291) @[decode.scala 601:39]
                                  when _T_304 : @[decode.scala 601:39]
                                    node _mcounteren_T = or(mcounteren, csrWriteData) @[decode.scala 614:52]
                                    mcounteren <= _mcounteren_T @[decode.scala 614:38]
                                  else :
                                    node _T_305 = eq(UInt<10>("h340"), _T_291) @[decode.scala 601:39]
                                    when _T_305 : @[decode.scala 601:39]
                                      node _mscratch_T = or(mscratch, csrWriteData) @[decode.scala 615:50]
                                      mscratch <= _mscratch_T @[decode.scala 615:38]
                                    else :
                                      node _T_306 = eq(UInt<10>("h341"), _T_291) @[decode.scala 601:39]
                                      when _T_306 : @[decode.scala 601:39]
                                        node _mepc_T = or(mepc, csrWriteData) @[decode.scala 616:46]
                                        mepc <= _mepc_T @[decode.scala 616:38]
                                      else :
                                        node _T_307 = eq(UInt<10>("h342"), _T_291) @[decode.scala 601:39]
                                        when _T_307 : @[decode.scala 601:39]
                                          node _mcause_T = or(mcause, csrWriteData) @[decode.scala 617:48]
                                          mcause <= _mcause_T @[decode.scala 617:38]
                                        else :
                                          node _T_308 = eq(UInt<10>("h343"), _T_291) @[decode.scala 601:39]
                                          when _T_308 : @[decode.scala 601:39]
                                            node _mtval_T = or(mtval, csrWriteData) @[decode.scala 618:47]
                                            mtval <= _mtval_T @[decode.scala 618:38]
                                          else :
                                            node _T_309 = eq(UInt<10>("h344"), _T_291) @[decode.scala 601:39]
                                            when _T_309 : @[decode.scala 601:39]
                                              node _mip_T = or(mip, csrWriteData) @[decode.scala 619:45]
                                              mip <= _mip_T @[decode.scala 619:38]
                                            else :
                                              node _T_310 = eq(UInt<10>("h3a0"), _T_291) @[decode.scala 601:39]
                                              when _T_310 : @[decode.scala 601:39]
                                                node _pmpcfg0_T = or(pmpcfg0, csrWriteData) @[decode.scala 620:49]
                                                pmpcfg0 <= _pmpcfg0_T @[decode.scala 620:38]
                                              else :
                                                node _T_311 = eq(UInt<10>("h3b0"), _T_291) @[decode.scala 601:39]
                                                when _T_311 : @[decode.scala 601:39]
                                                  node _pmpaddr0_T = or(pmpaddr0, csrWriteData) @[decode.scala 621:50]
                                                  pmpaddr0 <= _pmpaddr0_T @[decode.scala 621:38]
                                                else :
                                                  node _T_312 = eq(UInt<12>("hf11"), _T_291) @[decode.scala 601:39]
                                                  when _T_312 : @[decode.scala 601:39]
                                                    node _mvendorid_T = or(mvendorid, csrWriteData) @[decode.scala 622:51]
                                                    mvendorid <= _mvendorid_T @[decode.scala 622:38]
                                                  else :
                                                    node _T_313 = eq(UInt<12>("hf12"), _T_291) @[decode.scala 601:39]
                                                    when _T_313 : @[decode.scala 601:39]
                                                      node _marchid_T = or(marchid, csrWriteData) @[decode.scala 623:49]
                                                      marchid <= _marchid_T @[decode.scala 623:38]
                                                    else :
                                                      node _T_314 = eq(UInt<12>("hf13"), _T_291) @[decode.scala 601:39]
                                                      when _T_314 : @[decode.scala 601:39]
                                                        node _mimpid_T = or(mimpid, csrWriteData) @[decode.scala 624:48]
                                                        mimpid <= _mimpid_T @[decode.scala 624:38]
                                                      else :
                                                        node _T_315 = eq(UInt<12>("hf14"), _T_291) @[decode.scala 601:39]
                                                        when _T_315 : @[decode.scala 601:39]
                                                          node _mhartid_T = or(mhartid, csrWriteData) @[decode.scala 625:49]
                                                          mhartid <= _mhartid_T @[decode.scala 625:38]
        else :
          node _T_316 = eq(UInt<2>("h3"), _T_263) @[decode.scala 571:48]
          when _T_316 : @[decode.scala 571:48]
            node _T_317 = and(csrAddrReg, UInt<12>("hfff")) @[decode.scala 629:27]
            node _T_318 = eq(UInt<1>("h0"), _T_317) @[decode.scala 629:39]
            when _T_318 : @[decode.scala 629:39]
              node _ustatus_T_1 = not(csrWriteData) @[decode.scala 630:51]
              node _ustatus_T_2 = and(ustatus, _ustatus_T_1) @[decode.scala 630:49]
              ustatus <= _ustatus_T_2 @[decode.scala 630:38]
            else :
              node _T_319 = eq(UInt<3>("h5"), _T_317) @[decode.scala 629:39]
              when _T_319 : @[decode.scala 629:39]
                node _utvec_T_1 = not(csrWriteData) @[decode.scala 631:49]
                node _utvec_T_2 = and(mtvec, _utvec_T_1) @[decode.scala 631:47]
                utvec <= _utvec_T_2 @[decode.scala 631:38]
              else :
                node _T_320 = eq(UInt<7>("h41"), _T_317) @[decode.scala 629:39]
                when _T_320 : @[decode.scala 629:39]
                  node _uepc_T_1 = not(csrWriteData) @[decode.scala 632:48]
                  node _uepc_T_2 = and(uepc, _uepc_T_1) @[decode.scala 632:46]
                  uepc <= _uepc_T_2 @[decode.scala 632:38]
                else :
                  node _T_321 = eq(UInt<7>("h42"), _T_317) @[decode.scala 629:39]
                  when _T_321 : @[decode.scala 629:39]
                    node _ucause_T_1 = not(csrWriteData) @[decode.scala 633:50]
                    node _ucause_T_2 = and(ucause, _ucause_T_1) @[decode.scala 633:48]
                    ucause <= _ucause_T_2 @[decode.scala 633:38]
                  else :
                    node _T_322 = eq(UInt<9>("h106"), _T_317) @[decode.scala 629:39]
                    when _T_322 : @[decode.scala 629:39]
                      node _scounteren_T_1 = not(csrWriteData) @[decode.scala 634:54]
                      node _scounteren_T_2 = and(scounteren, _scounteren_T_1) @[decode.scala 634:52]
                      scounteren <= _scounteren_T_2 @[decode.scala 634:38]
                    else :
                      node _T_323 = eq(UInt<9>("h180"), _T_317) @[decode.scala 629:39]
                      when _T_323 : @[decode.scala 629:39]
                        node _satp_T_1 = not(csrWriteData) @[decode.scala 635:48]
                        node _satp_T_2 = and(satp, _satp_T_1) @[decode.scala 635:46]
                        satp <= _satp_T_2 @[decode.scala 635:38]
                      else :
                        node _T_324 = eq(UInt<10>("h300"), _T_317) @[decode.scala 629:39]
                        when _T_324 : @[decode.scala 629:39]
                          node _mstatus_T_3 = not(csrWriteData) @[decode.scala 636:51]
                          node _mstatus_T_4 = and(mstatus, _mstatus_T_3) @[decode.scala 636:49]
                          mstatus <= _mstatus_T_4 @[decode.scala 636:38]
                        else :
                          node _T_325 = eq(UInt<10>("h301"), _T_317) @[decode.scala 629:39]
                          when _T_325 : @[decode.scala 629:39]
                            node _misa_T_3 = not(csrWriteData) @[decode.scala 637:48]
                            node _misa_T_4 = and(misa, _misa_T_3) @[decode.scala 637:46]
                            misa <= _misa_T_4 @[decode.scala 637:38]
                          else :
                            node _T_326 = eq(UInt<10>("h302"), _T_317) @[decode.scala 629:39]
                            when _T_326 : @[decode.scala 629:39]
                              node _medeleg_T_1 = not(csrWriteData) @[decode.scala 638:51]
                              node _medeleg_T_2 = and(medeleg, _medeleg_T_1) @[decode.scala 638:49]
                              medeleg <= _medeleg_T_2 @[decode.scala 638:38]
                            else :
                              node _T_327 = eq(UInt<10>("h303"), _T_317) @[decode.scala 629:39]
                              when _T_327 : @[decode.scala 629:39]
                                node _mideleg_T_1 = not(csrWriteData) @[decode.scala 639:51]
                                node _mideleg_T_2 = and(mideleg, _mideleg_T_1) @[decode.scala 639:49]
                                mideleg <= _mideleg_T_2 @[decode.scala 639:38]
                              else :
                                node _T_328 = eq(UInt<10>("h304"), _T_317) @[decode.scala 629:39]
                                when _T_328 : @[decode.scala 629:39]
                                  node _mie_T_1 = not(csrWriteData) @[decode.scala 640:47]
                                  node _mie_T_2 = and(mie, _mie_T_1) @[decode.scala 640:45]
                                  mie <= _mie_T_2 @[decode.scala 640:38]
                                else :
                                  node _T_329 = eq(UInt<10>("h305"), _T_317) @[decode.scala 629:39]
                                  when _T_329 : @[decode.scala 629:39]
                                    node _mtvec_T_1 = not(csrWriteData) @[decode.scala 641:49]
                                    node _mtvec_T_2 = and(mtvec, _mtvec_T_1) @[decode.scala 641:47]
                                    mtvec <= _mtvec_T_2 @[decode.scala 641:38]
                                  else :
                                    node _T_330 = eq(UInt<10>("h306"), _T_317) @[decode.scala 629:39]
                                    when _T_330 : @[decode.scala 629:39]
                                      node _mcounteren_T_1 = not(csrWriteData) @[decode.scala 642:54]
                                      node _mcounteren_T_2 = and(mcounteren, _mcounteren_T_1) @[decode.scala 642:52]
                                      mcounteren <= _mcounteren_T_2 @[decode.scala 642:38]
                                    else :
                                      node _T_331 = eq(UInt<10>("h340"), _T_317) @[decode.scala 629:39]
                                      when _T_331 : @[decode.scala 629:39]
                                        node _mscratch_T_1 = not(csrWriteData) @[decode.scala 643:52]
                                        node _mscratch_T_2 = and(mscratch, _mscratch_T_1) @[decode.scala 643:50]
                                        mscratch <= _mscratch_T_2 @[decode.scala 643:38]
                                      else :
                                        node _T_332 = eq(UInt<10>("h341"), _T_317) @[decode.scala 629:39]
                                        when _T_332 : @[decode.scala 629:39]
                                          node _mepc_T_1 = not(csrWriteData) @[decode.scala 644:48]
                                          node _mepc_T_2 = and(mepc, _mepc_T_1) @[decode.scala 644:46]
                                          mepc <= _mepc_T_2 @[decode.scala 644:38]
                                        else :
                                          node _T_333 = eq(UInt<10>("h342"), _T_317) @[decode.scala 629:39]
                                          when _T_333 : @[decode.scala 629:39]
                                            node _mcause_T_1 = not(csrWriteData) @[decode.scala 645:50]
                                            node _mcause_T_2 = and(mcause, _mcause_T_1) @[decode.scala 645:48]
                                            mcause <= _mcause_T_2 @[decode.scala 645:38]
                                          else :
                                            node _T_334 = eq(UInt<10>("h343"), _T_317) @[decode.scala 629:39]
                                            when _T_334 : @[decode.scala 629:39]
                                              node _mtval_T_1 = not(csrWriteData) @[decode.scala 646:49]
                                              node _mtval_T_2 = and(mtval, _mtval_T_1) @[decode.scala 646:47]
                                              mtval <= _mtval_T_2 @[decode.scala 646:38]
                                            else :
                                              node _T_335 = eq(UInt<10>("h344"), _T_317) @[decode.scala 629:39]
                                              when _T_335 : @[decode.scala 629:39]
                                                node _mip_T_1 = not(csrWriteData) @[decode.scala 647:47]
                                                node _mip_T_2 = and(mip, _mip_T_1) @[decode.scala 647:45]
                                                mip <= _mip_T_2 @[decode.scala 647:38]
                                              else :
                                                node _T_336 = eq(UInt<10>("h3a0"), _T_317) @[decode.scala 629:39]
                                                when _T_336 : @[decode.scala 629:39]
                                                  node _pmpcfg0_T_1 = not(csrWriteData) @[decode.scala 648:51]
                                                  node _pmpcfg0_T_2 = and(pmpcfg0, _pmpcfg0_T_1) @[decode.scala 648:49]
                                                  pmpcfg0 <= _pmpcfg0_T_2 @[decode.scala 648:38]
                                                else :
                                                  node _T_337 = eq(UInt<10>("h3b0"), _T_317) @[decode.scala 629:39]
                                                  when _T_337 : @[decode.scala 629:39]
                                                    node _pmpaddr0_T_1 = not(csrWriteData) @[decode.scala 649:52]
                                                    node _pmpaddr0_T_2 = and(pmpaddr0, _pmpaddr0_T_1) @[decode.scala 649:50]
                                                    pmpaddr0 <= _pmpaddr0_T_2 @[decode.scala 649:38]
                                                  else :
                                                    node _T_338 = eq(UInt<12>("hf11"), _T_317) @[decode.scala 629:39]
                                                    when _T_338 : @[decode.scala 629:39]
                                                      node _mvendorid_T_1 = not(csrWriteData) @[decode.scala 650:53]
                                                      node _mvendorid_T_2 = and(mvendorid, _mvendorid_T_1) @[decode.scala 650:51]
                                                      mvendorid <= _mvendorid_T_2 @[decode.scala 650:38]
                                                    else :
                                                      node _T_339 = eq(UInt<12>("hf12"), _T_317) @[decode.scala 629:39]
                                                      when _T_339 : @[decode.scala 629:39]
                                                        node _marchid_T_1 = not(csrWriteData) @[decode.scala 651:51]
                                                        node _marchid_T_2 = and(marchid, _marchid_T_1) @[decode.scala 651:49]
                                                        marchid <= _marchid_T_2 @[decode.scala 651:38]
                                                      else :
                                                        node _T_340 = eq(UInt<12>("hf13"), _T_317) @[decode.scala 629:39]
                                                        when _T_340 : @[decode.scala 629:39]
                                                          node _mimpid_T_1 = not(csrWriteData) @[decode.scala 652:50]
                                                          node _mimpid_T_2 = and(mimpid, _mimpid_T_1) @[decode.scala 652:48]
                                                          mimpid <= _mimpid_T_2 @[decode.scala 652:38]
                                                        else :
                                                          node _T_341 = eq(UInt<12>("hf14"), _T_317) @[decode.scala 629:39]
                                                          when _T_341 : @[decode.scala 629:39]
                                                            node _mhartid_T_1 = not(csrWriteData) @[decode.scala 653:51]
                                                            node _mhartid_T_2 = and(mhartid, _mhartid_T_1) @[decode.scala 653:49]
                                                            mhartid <= _mhartid_T_2 @[decode.scala 653:38]
          else :
            node _T_342 = eq(UInt<3>("h5"), _T_263) @[decode.scala 571:48]
            when _T_342 : @[decode.scala 571:48]
              node _T_343 = and(csrAddrReg, UInt<12>("hfff")) @[decode.scala 657:27]
              node _T_344 = eq(UInt<1>("h0"), _T_343) @[decode.scala 657:39]
              when _T_344 : @[decode.scala 657:39]
                ustatus <= csrImmReg @[decode.scala 658:38]
              else :
                node _T_345 = eq(UInt<3>("h5"), _T_343) @[decode.scala 657:39]
                when _T_345 : @[decode.scala 657:39]
                  utvec <= csrImmReg @[decode.scala 659:38]
                else :
                  node _T_346 = eq(UInt<7>("h41"), _T_343) @[decode.scala 657:39]
                  when _T_346 : @[decode.scala 657:39]
                    uepc <= csrImmReg @[decode.scala 660:38]
                  else :
                    node _T_347 = eq(UInt<7>("h42"), _T_343) @[decode.scala 657:39]
                    when _T_347 : @[decode.scala 657:39]
                      ucause <= csrImmReg @[decode.scala 661:38]
                    else :
                      node _T_348 = eq(UInt<9>("h106"), _T_343) @[decode.scala 657:39]
                      when _T_348 : @[decode.scala 657:39]
                        scounteren <= csrImmReg @[decode.scala 662:38]
                      else :
                        node _T_349 = eq(UInt<9>("h180"), _T_343) @[decode.scala 657:39]
                        when _T_349 : @[decode.scala 657:39]
                          satp <= csrImmReg @[decode.scala 663:38]
                        else :
                          node _T_350 = eq(UInt<10>("h300"), _T_343) @[decode.scala 657:39]
                          when _T_350 : @[decode.scala 657:39]
                            mstatus <= csrImmReg @[decode.scala 664:38]
                          else :
                            node _T_351 = eq(UInt<10>("h301"), _T_343) @[decode.scala 657:39]
                            when _T_351 : @[decode.scala 657:39]
                              misa <= csrImmReg @[decode.scala 665:38]
                            else :
                              node _T_352 = eq(UInt<10>("h302"), _T_343) @[decode.scala 657:39]
                              when _T_352 : @[decode.scala 657:39]
                                medeleg <= csrImmReg @[decode.scala 666:38]
                              else :
                                node _T_353 = eq(UInt<10>("h303"), _T_343) @[decode.scala 657:39]
                                when _T_353 : @[decode.scala 657:39]
                                  mideleg <= csrImmReg @[decode.scala 667:38]
                                else :
                                  node _T_354 = eq(UInt<10>("h304"), _T_343) @[decode.scala 657:39]
                                  when _T_354 : @[decode.scala 657:39]
                                    mie <= csrImmReg @[decode.scala 668:38]
                                  else :
                                    node _T_355 = eq(UInt<10>("h305"), _T_343) @[decode.scala 657:39]
                                    when _T_355 : @[decode.scala 657:39]
                                      mtvec <= csrImmReg @[decode.scala 669:38]
                                    else :
                                      node _T_356 = eq(UInt<10>("h306"), _T_343) @[decode.scala 657:39]
                                      when _T_356 : @[decode.scala 657:39]
                                        mcounteren <= csrImmReg @[decode.scala 670:38]
                                      else :
                                        node _T_357 = eq(UInt<10>("h340"), _T_343) @[decode.scala 657:39]
                                        when _T_357 : @[decode.scala 657:39]
                                          mscratch <= csrImmReg @[decode.scala 671:38]
                                        else :
                                          node _T_358 = eq(UInt<10>("h341"), _T_343) @[decode.scala 657:39]
                                          when _T_358 : @[decode.scala 657:39]
                                            mepc <= csrImmReg @[decode.scala 672:38]
                                          else :
                                            node _T_359 = eq(UInt<10>("h342"), _T_343) @[decode.scala 657:39]
                                            when _T_359 : @[decode.scala 657:39]
                                              mcause <= csrImmReg @[decode.scala 673:38]
                                            else :
                                              node _T_360 = eq(UInt<10>("h343"), _T_343) @[decode.scala 657:39]
                                              when _T_360 : @[decode.scala 657:39]
                                                mtval <= csrImmReg @[decode.scala 674:38]
                                              else :
                                                node _T_361 = eq(UInt<10>("h344"), _T_343) @[decode.scala 657:39]
                                                when _T_361 : @[decode.scala 657:39]
                                                  mip <= csrImmReg @[decode.scala 675:38]
                                                else :
                                                  node _T_362 = eq(UInt<10>("h3a0"), _T_343) @[decode.scala 657:39]
                                                  when _T_362 : @[decode.scala 657:39]
                                                    pmpcfg0 <= csrImmReg @[decode.scala 676:38]
                                                  else :
                                                    node _T_363 = eq(UInt<10>("h3b0"), _T_343) @[decode.scala 657:39]
                                                    when _T_363 : @[decode.scala 657:39]
                                                      pmpaddr0 <= csrImmReg @[decode.scala 677:38]
                                                    else :
                                                      node _T_364 = eq(UInt<12>("hf11"), _T_343) @[decode.scala 657:39]
                                                      when _T_364 : @[decode.scala 657:39]
                                                        mvendorid <= csrImmReg @[decode.scala 678:38]
                                                      else :
                                                        node _T_365 = eq(UInt<12>("hf12"), _T_343) @[decode.scala 657:39]
                                                        when _T_365 : @[decode.scala 657:39]
                                                          marchid <= csrImmReg @[decode.scala 679:38]
                                                        else :
                                                          node _T_366 = eq(UInt<12>("hf13"), _T_343) @[decode.scala 657:39]
                                                          when _T_366 : @[decode.scala 657:39]
                                                            mimpid <= csrImmReg @[decode.scala 680:38]
                                                          else :
                                                            node _T_367 = eq(UInt<12>("hf14"), _T_343) @[decode.scala 657:39]
                                                            when _T_367 : @[decode.scala 657:39]
                                                              mhartid <= csrImmReg @[decode.scala 681:38]
            else :
              node _T_368 = eq(UInt<3>("h6"), _T_263) @[decode.scala 571:48]
              when _T_368 : @[decode.scala 571:48]
                node _T_369 = and(csrAddrReg, UInt<12>("hfff")) @[decode.scala 685:27]
                node _T_370 = eq(UInt<1>("h0"), _T_369) @[decode.scala 685:39]
                when _T_370 : @[decode.scala 685:39]
                  node _ustatus_T_3 = or(ustatus, csrImmReg) @[decode.scala 686:49]
                  ustatus <= _ustatus_T_3 @[decode.scala 686:38]
                else :
                  node _T_371 = eq(UInt<3>("h5"), _T_369) @[decode.scala 685:39]
                  when _T_371 : @[decode.scala 685:39]
                    node _utvec_T_3 = or(utvec, csrImmReg) @[decode.scala 687:47]
                    utvec <= _utvec_T_3 @[decode.scala 687:38]
                  else :
                    node _T_372 = eq(UInt<7>("h41"), _T_369) @[decode.scala 685:39]
                    when _T_372 : @[decode.scala 685:39]
                      node _uepc_T_3 = or(uepc, csrImmReg) @[decode.scala 688:46]
                      uepc <= _uepc_T_3 @[decode.scala 688:38]
                    else :
                      node _T_373 = eq(UInt<7>("h42"), _T_369) @[decode.scala 685:39]
                      when _T_373 : @[decode.scala 685:39]
                        node _ucause_T_3 = or(ucause, csrImmReg) @[decode.scala 689:48]
                        ucause <= _ucause_T_3 @[decode.scala 689:38]
                      else :
                        node _T_374 = eq(UInt<9>("h106"), _T_369) @[decode.scala 685:39]
                        when _T_374 : @[decode.scala 685:39]
                          node _scounteren_T_3 = or(scounteren, csrImmReg) @[decode.scala 690:52]
                          scounteren <= _scounteren_T_3 @[decode.scala 690:38]
                        else :
                          node _T_375 = eq(UInt<9>("h180"), _T_369) @[decode.scala 685:39]
                          when _T_375 : @[decode.scala 685:39]
                            node _satp_T_3 = or(satp, csrImmReg) @[decode.scala 691:46]
                            satp <= _satp_T_3 @[decode.scala 691:38]
                          else :
                            node _T_376 = eq(UInt<10>("h300"), _T_369) @[decode.scala 685:39]
                            when _T_376 : @[decode.scala 685:39]
                              node _mstatus_T_5 = or(mstatus, csrImmReg) @[decode.scala 692:49]
                              mstatus <= _mstatus_T_5 @[decode.scala 692:38]
                            else :
                              node _T_377 = eq(UInt<10>("h301"), _T_369) @[decode.scala 685:39]
                              when _T_377 : @[decode.scala 685:39]
                                node _misa_T_5 = or(misa, csrImmReg) @[decode.scala 693:46]
                                misa <= _misa_T_5 @[decode.scala 693:38]
                              else :
                                node _T_378 = eq(UInt<10>("h302"), _T_369) @[decode.scala 685:39]
                                when _T_378 : @[decode.scala 685:39]
                                  node _medeleg_T_3 = or(medeleg, csrImmReg) @[decode.scala 694:49]
                                  medeleg <= _medeleg_T_3 @[decode.scala 694:38]
                                else :
                                  node _T_379 = eq(UInt<10>("h303"), _T_369) @[decode.scala 685:39]
                                  when _T_379 : @[decode.scala 685:39]
                                    node _mideleg_T_3 = or(mideleg, csrImmReg) @[decode.scala 695:49]
                                    mideleg <= _mideleg_T_3 @[decode.scala 695:38]
                                  else :
                                    node _T_380 = eq(UInt<10>("h304"), _T_369) @[decode.scala 685:39]
                                    when _T_380 : @[decode.scala 685:39]
                                      node _mie_T_3 = or(mie, csrImmReg) @[decode.scala 696:45]
                                      mie <= _mie_T_3 @[decode.scala 696:38]
                                    else :
                                      node _T_381 = eq(UInt<10>("h305"), _T_369) @[decode.scala 685:39]
                                      when _T_381 : @[decode.scala 685:39]
                                        node _mtvec_T_3 = or(mtvec, csrImmReg) @[decode.scala 697:47]
                                        mtvec <= _mtvec_T_3 @[decode.scala 697:38]
                                      else :
                                        node _T_382 = eq(UInt<10>("h306"), _T_369) @[decode.scala 685:39]
                                        when _T_382 : @[decode.scala 685:39]
                                          node _mcounteren_T_3 = or(mcounteren, csrImmReg) @[decode.scala 698:52]
                                          mcounteren <= _mcounteren_T_3 @[decode.scala 698:38]
                                        else :
                                          node _T_383 = eq(UInt<10>("h340"), _T_369) @[decode.scala 685:39]
                                          when _T_383 : @[decode.scala 685:39]
                                            node _mscratch_T_3 = or(mscratch, csrImmReg) @[decode.scala 699:50]
                                            mscratch <= _mscratch_T_3 @[decode.scala 699:38]
                                          else :
                                            node _T_384 = eq(UInt<10>("h341"), _T_369) @[decode.scala 685:39]
                                            when _T_384 : @[decode.scala 685:39]
                                              node _mepc_T_3 = or(mepc, csrImmReg) @[decode.scala 700:46]
                                              mepc <= _mepc_T_3 @[decode.scala 700:38]
                                            else :
                                              node _T_385 = eq(UInt<10>("h342"), _T_369) @[decode.scala 685:39]
                                              when _T_385 : @[decode.scala 685:39]
                                                node _mcause_T_3 = or(mcause, csrImmReg) @[decode.scala 701:48]
                                                mcause <= _mcause_T_3 @[decode.scala 701:38]
                                              else :
                                                node _T_386 = eq(UInt<10>("h343"), _T_369) @[decode.scala 685:39]
                                                when _T_386 : @[decode.scala 685:39]
                                                  node _mtval_T_3 = or(mtval, csrImmReg) @[decode.scala 702:47]
                                                  mtval <= _mtval_T_3 @[decode.scala 702:38]
                                                else :
                                                  node _T_387 = eq(UInt<10>("h344"), _T_369) @[decode.scala 685:39]
                                                  when _T_387 : @[decode.scala 685:39]
                                                    node _mip_T_3 = or(mip, csrImmReg) @[decode.scala 703:45]
                                                    mip <= _mip_T_3 @[decode.scala 703:38]
                                                  else :
                                                    node _T_388 = eq(UInt<10>("h3a0"), _T_369) @[decode.scala 685:39]
                                                    when _T_388 : @[decode.scala 685:39]
                                                      node _pmpcfg0_T_3 = or(pmpcfg0, csrImmReg) @[decode.scala 704:49]
                                                      pmpcfg0 <= _pmpcfg0_T_3 @[decode.scala 704:38]
                                                    else :
                                                      node _T_389 = eq(UInt<10>("h3b0"), _T_369) @[decode.scala 685:39]
                                                      when _T_389 : @[decode.scala 685:39]
                                                        node _pmpaddr0_T_3 = or(pmpaddr0, csrImmReg) @[decode.scala 705:50]
                                                        pmpaddr0 <= _pmpaddr0_T_3 @[decode.scala 705:38]
                                                      else :
                                                        node _T_390 = eq(UInt<12>("hf11"), _T_369) @[decode.scala 685:39]
                                                        when _T_390 : @[decode.scala 685:39]
                                                          node _mvendorid_T_3 = or(mvendorid, csrImmReg) @[decode.scala 706:51]
                                                          mvendorid <= _mvendorid_T_3 @[decode.scala 706:38]
                                                        else :
                                                          node _T_391 = eq(UInt<12>("hf12"), _T_369) @[decode.scala 685:39]
                                                          when _T_391 : @[decode.scala 685:39]
                                                            node _marchid_T_3 = or(marchid, csrImmReg) @[decode.scala 707:49]
                                                            marchid <= _marchid_T_3 @[decode.scala 707:38]
                                                          else :
                                                            node _T_392 = eq(UInt<12>("hf13"), _T_369) @[decode.scala 685:39]
                                                            when _T_392 : @[decode.scala 685:39]
                                                              node _mimpid_T_3 = or(mimpid, csrImmReg) @[decode.scala 708:48]
                                                              mimpid <= _mimpid_T_3 @[decode.scala 708:38]
                                                            else :
                                                              node _T_393 = eq(UInt<12>("hf14"), _T_369) @[decode.scala 685:39]
                                                              when _T_393 : @[decode.scala 685:39]
                                                                node _mhartid_T_3 = or(mhartid, csrImmReg) @[decode.scala 709:49]
                                                                mhartid <= _mhartid_T_3 @[decode.scala 709:38]
              else :
                node _T_394 = eq(UInt<3>("h7"), _T_263) @[decode.scala 571:48]
                when _T_394 : @[decode.scala 571:48]
                  node _T_395 = and(csrAddrReg, UInt<12>("hfff")) @[decode.scala 713:27]
                  node _T_396 = eq(UInt<1>("h0"), _T_395) @[decode.scala 713:39]
                  when _T_396 : @[decode.scala 713:39]
                    node _ustatus_T_4 = not(csrImmReg) @[decode.scala 714:51]
                    node _ustatus_T_5 = and(ustatus, _ustatus_T_4) @[decode.scala 714:49]
                    ustatus <= _ustatus_T_5 @[decode.scala 714:38]
                  else :
                    node _T_397 = eq(UInt<3>("h5"), _T_395) @[decode.scala 713:39]
                    when _T_397 : @[decode.scala 713:39]
                      node _utvec_T_4 = not(csrImmReg) @[decode.scala 715:49]
                      node _utvec_T_5 = and(utvec, _utvec_T_4) @[decode.scala 715:47]
                      utvec <= _utvec_T_5 @[decode.scala 715:38]
                    else :
                      node _T_398 = eq(UInt<7>("h41"), _T_395) @[decode.scala 713:39]
                      when _T_398 : @[decode.scala 713:39]
                        node _uepc_T_4 = not(csrImmReg) @[decode.scala 716:48]
                        node _uepc_T_5 = and(uepc, _uepc_T_4) @[decode.scala 716:46]
                        uepc <= _uepc_T_5 @[decode.scala 716:38]
                      else :
                        node _T_399 = eq(UInt<7>("h42"), _T_395) @[decode.scala 713:39]
                        when _T_399 : @[decode.scala 713:39]
                          node _ucause_T_4 = not(csrImmReg) @[decode.scala 717:50]
                          node _ucause_T_5 = and(ucause, _ucause_T_4) @[decode.scala 717:48]
                          ucause <= _ucause_T_5 @[decode.scala 717:38]
                        else :
                          node _T_400 = eq(UInt<9>("h106"), _T_395) @[decode.scala 713:39]
                          when _T_400 : @[decode.scala 713:39]
                            node _scounteren_T_4 = not(csrImmReg) @[decode.scala 718:54]
                            node _scounteren_T_5 = and(scounteren, _scounteren_T_4) @[decode.scala 718:52]
                            scounteren <= _scounteren_T_5 @[decode.scala 718:38]
                          else :
                            node _T_401 = eq(UInt<9>("h180"), _T_395) @[decode.scala 713:39]
                            when _T_401 : @[decode.scala 713:39]
                              node _satp_T_4 = not(csrImmReg) @[decode.scala 719:48]
                              node _satp_T_5 = and(satp, _satp_T_4) @[decode.scala 719:46]
                              satp <= _satp_T_5 @[decode.scala 719:38]
                            else :
                              node _T_402 = eq(UInt<10>("h300"), _T_395) @[decode.scala 713:39]
                              when _T_402 : @[decode.scala 713:39]
                                node _mstatus_T_6 = not(csrImmReg) @[decode.scala 720:51]
                                node _mstatus_T_7 = and(mstatus, _mstatus_T_6) @[decode.scala 720:49]
                                mstatus <= _mstatus_T_7 @[decode.scala 720:38]
                              else :
                                node _T_403 = eq(UInt<10>("h301"), _T_395) @[decode.scala 713:39]
                                when _T_403 : @[decode.scala 713:39]
                                  node _misa_T_6 = not(csrImmReg) @[decode.scala 721:48]
                                  node _misa_T_7 = and(misa, _misa_T_6) @[decode.scala 721:46]
                                  misa <= _misa_T_7 @[decode.scala 721:38]
                                else :
                                  node _T_404 = eq(UInt<10>("h302"), _T_395) @[decode.scala 713:39]
                                  when _T_404 : @[decode.scala 713:39]
                                    node _medeleg_T_4 = not(csrImmReg) @[decode.scala 722:51]
                                    node _medeleg_T_5 = and(medeleg, _medeleg_T_4) @[decode.scala 722:49]
                                    medeleg <= _medeleg_T_5 @[decode.scala 722:38]
                                  else :
                                    node _T_405 = eq(UInt<10>("h303"), _T_395) @[decode.scala 713:39]
                                    when _T_405 : @[decode.scala 713:39]
                                      node _mideleg_T_4 = not(csrImmReg) @[decode.scala 723:51]
                                      node _mideleg_T_5 = and(mideleg, _mideleg_T_4) @[decode.scala 723:49]
                                      mideleg <= _mideleg_T_5 @[decode.scala 723:38]
                                    else :
                                      node _T_406 = eq(UInt<10>("h304"), _T_395) @[decode.scala 713:39]
                                      when _T_406 : @[decode.scala 713:39]
                                        node _mie_T_4 = not(csrImmReg) @[decode.scala 724:47]
                                        node _mie_T_5 = and(mie, _mie_T_4) @[decode.scala 724:45]
                                        mie <= _mie_T_5 @[decode.scala 724:38]
                                      else :
                                        node _T_407 = eq(UInt<10>("h305"), _T_395) @[decode.scala 713:39]
                                        when _T_407 : @[decode.scala 713:39]
                                          node _mtvec_T_4 = not(csrImmReg) @[decode.scala 725:49]
                                          node _mtvec_T_5 = and(mtvec, _mtvec_T_4) @[decode.scala 725:47]
                                          mtvec <= _mtvec_T_5 @[decode.scala 725:38]
                                        else :
                                          node _T_408 = eq(UInt<10>("h306"), _T_395) @[decode.scala 713:39]
                                          when _T_408 : @[decode.scala 713:39]
                                            node _mcounteren_T_4 = not(csrImmReg) @[decode.scala 726:54]
                                            node _mcounteren_T_5 = and(mcounteren, _mcounteren_T_4) @[decode.scala 726:52]
                                            mcounteren <= _mcounteren_T_5 @[decode.scala 726:38]
                                          else :
                                            node _T_409 = eq(UInt<10>("h340"), _T_395) @[decode.scala 713:39]
                                            when _T_409 : @[decode.scala 713:39]
                                              node _mscratch_T_4 = not(csrImmReg) @[decode.scala 727:52]
                                              node _mscratch_T_5 = and(mscratch, _mscratch_T_4) @[decode.scala 727:50]
                                              mscratch <= _mscratch_T_5 @[decode.scala 727:38]
                                            else :
                                              node _T_410 = eq(UInt<10>("h341"), _T_395) @[decode.scala 713:39]
                                              when _T_410 : @[decode.scala 713:39]
                                                node _mepc_T_4 = not(csrImmReg) @[decode.scala 728:48]
                                                node _mepc_T_5 = and(mepc, _mepc_T_4) @[decode.scala 728:46]
                                                mepc <= _mepc_T_5 @[decode.scala 728:38]
                                              else :
                                                node _T_411 = eq(UInt<10>("h342"), _T_395) @[decode.scala 713:39]
                                                when _T_411 : @[decode.scala 713:39]
                                                  node _mcause_T_4 = not(csrImmReg) @[decode.scala 729:50]
                                                  node _mcause_T_5 = and(mcause, _mcause_T_4) @[decode.scala 729:48]
                                                  mcause <= _mcause_T_5 @[decode.scala 729:38]
                                                else :
                                                  node _T_412 = eq(UInt<10>("h343"), _T_395) @[decode.scala 713:39]
                                                  when _T_412 : @[decode.scala 713:39]
                                                    node _mtval_T_4 = not(csrImmReg) @[decode.scala 730:49]
                                                    node _mtval_T_5 = and(mtval, _mtval_T_4) @[decode.scala 730:47]
                                                    mtval <= _mtval_T_5 @[decode.scala 730:38]
                                                  else :
                                                    node _T_413 = eq(UInt<10>("h344"), _T_395) @[decode.scala 713:39]
                                                    when _T_413 : @[decode.scala 713:39]
                                                      node _mip_T_4 = not(csrImmReg) @[decode.scala 731:47]
                                                      node _mip_T_5 = and(mip, _mip_T_4) @[decode.scala 731:45]
                                                      mip <= _mip_T_5 @[decode.scala 731:38]
                                                    else :
                                                      node _T_414 = eq(UInt<10>("h3a0"), _T_395) @[decode.scala 713:39]
                                                      when _T_414 : @[decode.scala 713:39]
                                                        node _pmpcfg0_T_4 = not(csrImmReg) @[decode.scala 732:51]
                                                        node _pmpcfg0_T_5 = and(pmpcfg0, _pmpcfg0_T_4) @[decode.scala 732:49]
                                                        pmpcfg0 <= _pmpcfg0_T_5 @[decode.scala 732:38]
                                                      else :
                                                        node _T_415 = eq(UInt<10>("h3b0"), _T_395) @[decode.scala 713:39]
                                                        when _T_415 : @[decode.scala 713:39]
                                                          node _pmpaddr0_T_4 = not(csrImmReg) @[decode.scala 733:52]
                                                          node _pmpaddr0_T_5 = and(pmpaddr0, _pmpaddr0_T_4) @[decode.scala 733:50]
                                                          pmpaddr0 <= _pmpaddr0_T_5 @[decode.scala 733:38]
                                                        else :
                                                          node _T_416 = eq(UInt<12>("hf11"), _T_395) @[decode.scala 713:39]
                                                          when _T_416 : @[decode.scala 713:39]
                                                            node _mvendorid_T_4 = not(csrImmReg) @[decode.scala 734:53]
                                                            node _mvendorid_T_5 = and(mvendorid, _mvendorid_T_4) @[decode.scala 734:51]
                                                            mvendorid <= _mvendorid_T_5 @[decode.scala 734:38]
                                                          else :
                                                            node _T_417 = eq(UInt<12>("hf12"), _T_395) @[decode.scala 713:39]
                                                            when _T_417 : @[decode.scala 713:39]
                                                              node _marchid_T_4 = not(csrImmReg) @[decode.scala 735:51]
                                                              node _marchid_T_5 = and(marchid, _marchid_T_4) @[decode.scala 735:49]
                                                              marchid <= _marchid_T_5 @[decode.scala 735:38]
                                                            else :
                                                              node _T_418 = eq(UInt<12>("hf13"), _T_395) @[decode.scala 713:39]
                                                              when _T_418 : @[decode.scala 713:39]
                                                                node _mimpid_T_4 = not(csrImmReg) @[decode.scala 736:50]
                                                                node _mimpid_T_5 = and(mimpid, _mimpid_T_4) @[decode.scala 736:48]
                                                                mimpid <= _mimpid_T_5 @[decode.scala 736:38]
                                                              else :
                                                                node _T_419 = eq(UInt<12>("hf14"), _T_395) @[decode.scala 713:39]
                                                                when _T_419 : @[decode.scala 713:39]
                                                                  node _mhartid_T_4 = not(csrImmReg) @[decode.scala 737:51]
                                                                  node _mhartid_T_5 = and(mhartid, _mhartid_T_4) @[decode.scala 737:49]
                                                                  mhartid <= _mhartid_T_5 @[decode.scala 737:38]
    reg currentPrivilege : UInt<64>, clock with :
      reset => (reset, UInt<64>("h2200000000")) @[decode.scala 743:33]
    node _T_420 = bits(writeBackResult.instruction, 6, 0) @[decode.scala 744:60]
    node _T_421 = eq(_T_420, UInt<7>("h73")) @[decode.scala 744:66]
    node _T_422 = and(writeBackResult.fired, _T_421) @[decode.scala 744:30]
    node _T_423 = bits(writeBackResult.instruction, 14, 12) @[decode.scala 744:109]
    node _T_424 = eq(_T_423, UInt<1>("h0")) @[decode.scala 744:117]
    node _T_425 = and(_T_422, _T_424) @[decode.scala 744:79]
    when _T_425 : @[decode.scala 744:126]
      node _T_426 = bits(writeBackResult.instruction, 31, 20) @[decode.scala 745:37]
      node _T_427 = eq(_T_426, UInt<10>("h302")) @[decode.scala 745:46]
      when _T_427 : @[decode.scala 745:60]
        wire _currentPrivilege_WIRE : UInt<38>[2] @[decode.scala 747:34]
        _currentPrivilege_WIRE[0] <= UInt<38>("h2200001800") @[decode.scala 747:34]
        _currentPrivilege_WIRE[1] <= UInt<38>("h2200000000") @[decode.scala 747:34]
        node _currentPrivilege_T = bits(mstatus, 12, 12) @[decode.scala 747:60]
        currentPrivilege <= _currentPrivilege_WIRE[_currentPrivilege_T] @[decode.scala 747:24]
        expectedPC <= mepc @[decode.scala 748:18]
        node _mstatus_T_8 = bits(mstatus, 7, 4) @[decode.scala 749:69]
        node mstatus_hi = cat(UInt<52>("ha00000"), UInt<8>("h8")) @[Cat.scala 33:92]
        node _mstatus_T_9 = cat(mstatus_hi, _mstatus_T_8) @[Cat.scala 33:92]
        mstatus <= _mstatus_T_9 @[decode.scala 749:15]
      else :
        node _T_428 = bits(writeBackResult.instruction, 31, 20) @[decode.scala 750:44]
        node _T_429 = orr(_T_428) @[decode.scala 750:53]
        node _T_430 = eq(_T_429, UInt<1>("h0")) @[decode.scala 750:16]
        when _T_430 : @[decode.scala 750:58]
          mepc <= ecallPC @[decode.scala 752:12]
          node _T_431 = eq(currentPrivilege, UInt<38>("h2200000000")) @[decode.scala 753:29]
          when _T_431 : @[decode.scala 753:42]
            mcause <= UInt<4>("hb") @[decode.scala 753:51]
          else :
            mcause <= UInt<4>("h8") @[decode.scala 754:27]
          currentPrivilege <= UInt<38>("h2200000000") @[decode.scala 755:24]
          expectedPC <= mtvec @[decode.scala 756:18]
          node _mstatus_T_10 = eq(currentPrivilege, UInt<38>("h2200000000")) @[decode.scala 757:83]
          node _mstatus_T_11 = mux(_mstatus_T_10, UInt<5>("h18"), UInt<5>("h0")) @[decode.scala 757:66]
          node _mstatus_T_12 = bits(mstatus, 3, 0) @[decode.scala 757:130]
          node mstatus_lo = cat(_mstatus_T_12, UInt<4>("h0")) @[Cat.scala 33:92]
          node mstatus_hi_1 = cat(UInt<51>("h0"), _mstatus_T_11) @[Cat.scala 33:92]
          node _mstatus_T_13 = cat(mstatus_hi_1, mstatus_lo) @[Cat.scala 33:92]
          node _mstatus_T_14 = or(UInt<64>("ha00000000"), _mstatus_T_13) @[decode.scala 757:46]
          mstatus <= _mstatus_T_14 @[decode.scala 757:15]
        else :
          node _T_432 = eq(writeBackResult.instruction, UInt<64>("h80000073")) @[decode.scala 758:44]
          when _T_432 : @[decode.scala 758:69]
            node _mepc_T_6 = mux(stallReg, ecallPC, interruptedPC) @[decode.scala 761:18]
            mepc <= _mepc_T_6 @[decode.scala 761:12]
            mcause <= UInt<64>("h8000000000000007") @[decode.scala 762:14]
            currentPrivilege <= UInt<38>("h2200000000") @[decode.scala 763:24]
            expectedPC <= mtvec @[decode.scala 764:18]
            node _mstatus_T_15 = eq(currentPrivilege, UInt<38>("h2200000000")) @[decode.scala 765:83]
            node _mstatus_T_16 = mux(_mstatus_T_15, UInt<5>("h18"), UInt<5>("h0")) @[decode.scala 765:66]
            node _mstatus_T_17 = bits(mstatus, 3, 0) @[decode.scala 765:130]
            node mstatus_lo_1 = cat(_mstatus_T_17, UInt<4>("h0")) @[Cat.scala 33:92]
            node mstatus_hi_2 = cat(UInt<51>("h0"), _mstatus_T_16) @[Cat.scala 33:92]
            node _mstatus_T_18 = cat(mstatus_hi_2, mstatus_lo_1) @[Cat.scala 33:92]
            node _mstatus_T_19 = or(UInt<64>("ha00000000"), _mstatus_T_18) @[decode.scala 765:46]
            mstatus <= _mstatus_T_19 @[decode.scala 765:15]
    when writeAddrPRF.exec1Valid : @[decode.scala 784:33]
      PRFValidList[writeAddrPRF.exec1Addr] <= UInt<1>("h1") @[decode.scala 784:72]
    when writeAddrPRF.exec2Valid : @[decode.scala 785:33]
      PRFValidList[writeAddrPRF.exec2Addr] <= UInt<1>("h1") @[decode.scala 785:72]
    when writeAddrPRF.exec3Valid : @[decode.scala 786:33]
      PRFValidList[writeAddrPRF.exec3Addr] <= UInt<1>("h1") @[decode.scala 786:72]
    node _T_433 = eq(UInt<1>("h0"), stateRegInputBuf) @[decode.scala 792:28]
    when _T_433 : @[decode.scala 792:28]
      node _T_434 = eq(branchEvalIn.passFail, UInt<1>("h0")) @[decode.scala 794:34]
      node _T_435 = and(branchEvalIn.fired, _T_434) @[decode.scala 794:31]
      when _T_435 : @[decode.scala 794:58]
        stateRegInputBuf <= UInt<1>("h0") @[decode.scala 795:26]
        validInputBuf <= UInt<1>("h0") @[decode.scala 796:26]
        readyInputBuf <= UInt<1>("h0") @[decode.scala 797:26]
        stallReg <= UInt<1>("h0") @[decode.scala 798:18]
      else :
        validInputBuf <= UInt<1>("h0") @[decode.scala 800:23]
        readyInputBuf <= UInt<1>("h1") @[decode.scala 801:23]
        when fromFetch.fired : @[decode.scala 802:31]
          when fromFetch.expected.valid : @[decode.scala 803:42]
            node _T_436 = eq(fromFetch.expected.pc, fromFetch.pc) @[decode.scala 804:40]
            when _T_436 : @[decode.scala 804:58]
              stateRegInputBuf <= UInt<1>("h1") @[decode.scala 805:32]
          else :
            stateRegInputBuf <= UInt<1>("h1") @[decode.scala 808:30]
      when stallReg : @[decode.scala 812:22]
        readyInputBuf <= UInt<1>("h0") @[decode.scala 813:23]
    else :
      node _T_437 = eq(UInt<1>("h1"), stateRegInputBuf) @[decode.scala 792:28]
      when _T_437 : @[decode.scala 792:28]
        node _T_438 = eq(branchEvalIn.passFail, UInt<1>("h0")) @[decode.scala 817:34]
        node _T_439 = and(branchEvalIn.fired, _T_438) @[decode.scala 817:31]
        when _T_439 : @[decode.scala 817:58]
          stateRegInputBuf <= UInt<1>("h0") @[decode.scala 818:26]
          validInputBuf <= UInt<1>("h0") @[decode.scala 819:26]
          readyInputBuf <= UInt<1>("h0") @[decode.scala 820:26]
          stallReg <= UInt<1>("h0") @[decode.scala 821:18]
        else :
          node _T_440 = eq(stall, UInt<1>("h0")) @[decode.scala 823:14]
          node _T_441 = eq(opcode, UInt<7>("h63")) @[decode.scala 823:56]
          node _T_442 = eq(opcode, UInt<7>("h6f")) @[decode.scala 823:78]
          node _T_443 = or(_T_441, _T_442) @[decode.scala 823:68]
          node _T_444 = eq(opcode, UInt<7>("h67")) @[decode.scala 823:99]
          node _T_445 = or(_T_443, _T_444) @[decode.scala 823:89]
          node _T_446 = and(branchEvalIn.fired, _T_445) @[decode.scala 823:45]
          node _T_447 = eq(_T_446, UInt<1>("h0")) @[decode.scala 823:24]
          node _T_448 = and(_T_440, _T_447) @[decode.scala 823:21]
          when _T_448 : @[decode.scala 823:114]
            validInputBuf <= UInt<1>("h1") @[decode.scala 824:25]
            when readyOutputBuf : @[decode.scala 825:32]
              readyInputBuf <= UInt<1>("h1") @[decode.scala 826:27]
              node _T_449 = eq(fromFetch.fired, UInt<1>("h0")) @[decode.scala 827:18]
              node _T_450 = eq(opcode, UInt<7>("h73")) @[decode.scala 827:46]
              node _T_451 = eq(fun3, UInt<1>("h0")) @[decode.scala 827:67]
              node _T_452 = and(_T_450, _T_451) @[decode.scala 827:59]
              node _T_453 = eq(immediate, UInt<10>("h302")) @[decode.scala 827:88]
              node _T_454 = and(_T_452, _T_453) @[decode.scala 827:75]
              node _T_455 = or(_T_449, _T_454) @[decode.scala 827:35]
              when _T_455 : @[decode.scala 827:100]
                stateRegInputBuf <= UInt<1>("h0") @[decode.scala 828:32]
            else :
              readyInputBuf <= UInt<1>("h0") @[decode.scala 831:27]
          else :
            validInputBuf <= UInt<1>("h0") @[decode.scala 834:25]
        when stallReg : @[decode.scala 837:22]
          readyInputBuf <= UInt<1>("h0") @[decode.scala 838:23]
    node _T_456 = eq(UInt<1>("h0"), stateRegOutputBuf) @[decode.scala 846:29]
    when _T_456 : @[decode.scala 846:29]
      node _T_457 = eq(branchEvalIn.passFail, UInt<1>("h0")) @[decode.scala 848:34]
      node _T_458 = and(branchEvalIn.fired, _T_457) @[decode.scala 848:31]
      when _T_458 : @[decode.scala 848:58]
        stateRegOutputBuf <= UInt<1>("h0") @[decode.scala 849:27]
        validOutputBuf <= UInt<1>("h0") @[decode.scala 850:27]
        readyOutputBuf <= UInt<1>("h0") @[decode.scala 851:27]
      else :
        validOutputBuf <= UInt<1>("h0") @[decode.scala 853:24]
        readyOutputBuf <= UInt<1>("h1") @[decode.scala 854:24]
        when validInputBuf : @[decode.scala 855:29]
          stateRegOutputBuf <= UInt<1>("h1") @[decode.scala 856:29]
    else :
      node _T_459 = eq(UInt<1>("h1"), stateRegOutputBuf) @[decode.scala 846:29]
      when _T_459 : @[decode.scala 846:29]
        node _T_460 = eq(branchEvalIn.passFail, UInt<1>("h0")) @[decode.scala 861:34]
        node _T_461 = and(branchEvalIn.fired, _T_460) @[decode.scala 861:31]
        when _T_461 : @[decode.scala 861:58]
          stateRegOutputBuf <= UInt<1>("h0") @[decode.scala 862:27]
          validOutputBuf <= UInt<1>("h0") @[decode.scala 863:27]
          readyOutputBuf <= UInt<1>("h0") @[decode.scala 864:27]
        else :
          validOutputBuf <= UInt<1>("h1") @[decode.scala 866:24]
          when toExec.fired : @[decode.scala 867:28]
            readyOutputBuf <= UInt<1>("h1") @[decode.scala 868:26]
            node _T_462 = eq(validInputBuf, UInt<1>("h0")) @[decode.scala 869:16]
            when _T_462 : @[decode.scala 869:32]
              stateRegOutputBuf <= UInt<1>("h0") @[decode.scala 870:31]
          else :
            readyOutputBuf <= UInt<1>("h0") @[decode.scala 873:26]
    node _freeCount_T = add(PRFFreeList[0], PRFFreeList[1]) @[decode.scala 879:51]
    node _freeCount_T_1 = add(_freeCount_T, PRFFreeList[2]) @[decode.scala 879:51]
    node _freeCount_T_2 = add(_freeCount_T_1, PRFFreeList[3]) @[decode.scala 879:51]
    node _freeCount_T_3 = add(_freeCount_T_2, PRFFreeList[4]) @[decode.scala 879:51]
    node _freeCount_T_4 = add(_freeCount_T_3, PRFFreeList[5]) @[decode.scala 879:51]
    node _freeCount_T_5 = add(_freeCount_T_4, PRFFreeList[6]) @[decode.scala 879:51]
    node _freeCount_T_6 = add(_freeCount_T_5, PRFFreeList[7]) @[decode.scala 879:51]
    node _freeCount_T_7 = add(_freeCount_T_6, PRFFreeList[8]) @[decode.scala 879:51]
    node _freeCount_T_8 = add(_freeCount_T_7, PRFFreeList[9]) @[decode.scala 879:51]
    node _freeCount_T_9 = add(_freeCount_T_8, PRFFreeList[10]) @[decode.scala 879:51]
    node _freeCount_T_10 = add(_freeCount_T_9, PRFFreeList[11]) @[decode.scala 879:51]
    node _freeCount_T_11 = add(_freeCount_T_10, PRFFreeList[12]) @[decode.scala 879:51]
    node _freeCount_T_12 = add(_freeCount_T_11, PRFFreeList[13]) @[decode.scala 879:51]
    node _freeCount_T_13 = add(_freeCount_T_12, PRFFreeList[14]) @[decode.scala 879:51]
    node _freeCount_T_14 = add(_freeCount_T_13, PRFFreeList[15]) @[decode.scala 879:51]
    node _freeCount_T_15 = add(_freeCount_T_14, PRFFreeList[16]) @[decode.scala 879:51]
    node _freeCount_T_16 = add(_freeCount_T_15, PRFFreeList[17]) @[decode.scala 879:51]
    node _freeCount_T_17 = add(_freeCount_T_16, PRFFreeList[18]) @[decode.scala 879:51]
    node _freeCount_T_18 = add(_freeCount_T_17, PRFFreeList[19]) @[decode.scala 879:51]
    node _freeCount_T_19 = add(_freeCount_T_18, PRFFreeList[20]) @[decode.scala 879:51]
    node _freeCount_T_20 = add(_freeCount_T_19, PRFFreeList[21]) @[decode.scala 879:51]
    node _freeCount_T_21 = add(_freeCount_T_20, PRFFreeList[22]) @[decode.scala 879:51]
    node _freeCount_T_22 = add(_freeCount_T_21, PRFFreeList[23]) @[decode.scala 879:51]
    node _freeCount_T_23 = add(_freeCount_T_22, PRFFreeList[24]) @[decode.scala 879:51]
    node _freeCount_T_24 = add(_freeCount_T_23, PRFFreeList[25]) @[decode.scala 879:51]
    node _freeCount_T_25 = add(_freeCount_T_24, PRFFreeList[26]) @[decode.scala 879:51]
    node _freeCount_T_26 = add(_freeCount_T_25, PRFFreeList[27]) @[decode.scala 879:51]
    node _freeCount_T_27 = add(_freeCount_T_26, PRFFreeList[28]) @[decode.scala 879:51]
    node _freeCount_T_28 = add(_freeCount_T_27, PRFFreeList[29]) @[decode.scala 879:51]
    node _freeCount_T_29 = add(_freeCount_T_28, PRFFreeList[30]) @[decode.scala 879:51]
    node _freeCount_T_30 = add(_freeCount_T_29, PRFFreeList[31]) @[decode.scala 879:51]
    node _freeCount_T_31 = add(_freeCount_T_30, PRFFreeList[32]) @[decode.scala 879:51]
    node _freeCount_T_32 = add(_freeCount_T_31, PRFFreeList[33]) @[decode.scala 879:51]
    node _freeCount_T_33 = add(_freeCount_T_32, PRFFreeList[34]) @[decode.scala 879:51]
    node _freeCount_T_34 = add(_freeCount_T_33, PRFFreeList[35]) @[decode.scala 879:51]
    node _freeCount_T_35 = add(_freeCount_T_34, PRFFreeList[36]) @[decode.scala 879:51]
    node _freeCount_T_36 = add(_freeCount_T_35, PRFFreeList[37]) @[decode.scala 879:51]
    node _freeCount_T_37 = add(_freeCount_T_36, PRFFreeList[38]) @[decode.scala 879:51]
    node _freeCount_T_38 = add(_freeCount_T_37, PRFFreeList[39]) @[decode.scala 879:51]
    node _freeCount_T_39 = add(_freeCount_T_38, PRFFreeList[40]) @[decode.scala 879:51]
    node _freeCount_T_40 = add(_freeCount_T_39, PRFFreeList[41]) @[decode.scala 879:51]
    node _freeCount_T_41 = add(_freeCount_T_40, PRFFreeList[42]) @[decode.scala 879:51]
    node _freeCount_T_42 = add(_freeCount_T_41, PRFFreeList[43]) @[decode.scala 879:51]
    node _freeCount_T_43 = add(_freeCount_T_42, PRFFreeList[44]) @[decode.scala 879:51]
    node _freeCount_T_44 = add(_freeCount_T_43, PRFFreeList[45]) @[decode.scala 879:51]
    node _freeCount_T_45 = add(_freeCount_T_44, PRFFreeList[46]) @[decode.scala 879:51]
    node _freeCount_T_46 = add(_freeCount_T_45, PRFFreeList[47]) @[decode.scala 879:51]
    node _freeCount_T_47 = add(_freeCount_T_46, PRFFreeList[48]) @[decode.scala 879:51]
    node _freeCount_T_48 = add(_freeCount_T_47, PRFFreeList[49]) @[decode.scala 879:51]
    node _freeCount_T_49 = add(_freeCount_T_48, PRFFreeList[50]) @[decode.scala 879:51]
    node _freeCount_T_50 = add(_freeCount_T_49, PRFFreeList[51]) @[decode.scala 879:51]
    node _freeCount_T_51 = add(_freeCount_T_50, PRFFreeList[52]) @[decode.scala 879:51]
    node _freeCount_T_52 = add(_freeCount_T_51, PRFFreeList[53]) @[decode.scala 879:51]
    node _freeCount_T_53 = add(_freeCount_T_52, PRFFreeList[54]) @[decode.scala 879:51]
    node _freeCount_T_54 = add(_freeCount_T_53, PRFFreeList[55]) @[decode.scala 879:51]
    node _freeCount_T_55 = add(_freeCount_T_54, PRFFreeList[56]) @[decode.scala 879:51]
    node _freeCount_T_56 = add(_freeCount_T_55, PRFFreeList[57]) @[decode.scala 879:51]
    node _freeCount_T_57 = add(_freeCount_T_56, PRFFreeList[58]) @[decode.scala 879:51]
    node _freeCount_T_58 = add(_freeCount_T_57, PRFFreeList[59]) @[decode.scala 879:51]
    node _freeCount_T_59 = add(_freeCount_T_58, PRFFreeList[60]) @[decode.scala 879:51]
    node _freeCount_T_60 = add(_freeCount_T_59, PRFFreeList[61]) @[decode.scala 879:51]
    node _freeCount_T_61 = add(_freeCount_T_60, PRFFreeList[62]) @[decode.scala 879:51]
    node _freeCount_T_62 = add(_freeCount_T_61, PRFFreeList[63]) @[decode.scala 879:51]
    freeCount <= _freeCount_T_62 @[decode.scala 879:13]
    node _T_463 = neq(writeBackResult.rdAddr, UInt<1>("h0")) @[decode.scala 884:53]
    node _T_464 = and(writeBackResult.fired, _T_463) @[decode.scala 884:27]
    node _T_465 = bits(writeBackResult.instruction, 6, 0) @[decode.scala 885:32]
    node _T_466 = neq(_T_465, UInt<7>("h63")) @[decode.scala 885:38]
    node _T_467 = and(_T_464, _T_466) @[decode.scala 884:61]
    node _T_468 = bits(writeBackResult.instruction, 6, 0) @[decode.scala 886:32]
    node _T_469 = neq(_T_468, UInt<6>("h23")) @[decode.scala 886:38]
    node _T_470 = and(_T_467, _T_469) @[decode.scala 885:50]
    node _T_471 = neq(architecturalRegMap[writeBackResult.rdAddr], writeBackResult.PRFDest) @[decode.scala 887:49]
    node _T_472 = and(_T_470, _T_471) @[decode.scala 886:50]
    node _T_473 = neq(writeBackResult.instruction, UInt<32>("h80000073")) @[decode.scala 888:33]
    node _T_474 = and(_T_472, _T_473) @[decode.scala 887:77]
    when _T_474 : @[decode.scala 889:5]
      architecturalRegMap[writeBackResult.rdAddr] <= writeBackResult.PRFDest @[decode.scala 890:62]
      PRFFreeList[architecturalRegMap[writeBackResult.rdAddr]] <= UInt<1>("h1") @[decode.scala 891:62]
      reservedFreeList1[architecturalRegMap[writeBackResult.rdAddr]] <= UInt<1>("h1") @[decode.scala 892:68]
      reservedFreeList2[architecturalRegMap[writeBackResult.rdAddr]] <= UInt<1>("h1") @[decode.scala 893:68]
      reservedFreeList3[architecturalRegMap[writeBackResult.rdAddr]] <= UInt<1>("h1") @[decode.scala 894:68]
      reservedFreeList4[architecturalRegMap[writeBackResult.rdAddr]] <= UInt<1>("h1") @[decode.scala 895:68]
    when stallReg : @[decode.scala 899:18]
      canTakeInterrupt <= UInt<1>("h0") @[decode.scala 902:22]
    else :
      node _T_475 = eq(currentPrivilege, UInt<38>("h2200001800")) @[decode.scala 903:31]
      when _T_475 : @[decode.scala 903:44]
        node _canTakeInterrupt_T = bits(mie, 7, 7) @[decode.scala 905:28]
        node _canTakeInterrupt_T_1 = bits(_canTakeInterrupt_T, 0, 0) @[decode.scala 905:32]
        canTakeInterrupt <= _canTakeInterrupt_T_1 @[decode.scala 905:22]
      else :
        node _canTakeInterrupt_T_2 = bits(mstatus, 3, 3) @[decode.scala 908:32]
        node _canTakeInterrupt_T_3 = bits(_canTakeInterrupt_T_2, 0, 0) @[decode.scala 908:36]
        node _canTakeInterrupt_T_4 = bits(mie, 7, 7) @[decode.scala 908:49]
        node _canTakeInterrupt_T_5 = bits(_canTakeInterrupt_T_4, 0, 0) @[decode.scala 908:53]
        node _canTakeInterrupt_T_6 = and(_canTakeInterrupt_T_3, _canTakeInterrupt_T_5) @[decode.scala 908:43]
        canTakeInterrupt <= _canTakeInterrupt_T_6 @[decode.scala 908:22]
    registersOut[0] <= UInt<1>("h0") @[core.scala 50:28]
    registersOut[1] <= UInt<1>("h0") @[core.scala 50:28]
    registersOut[2] <= UInt<1>("h0") @[core.scala 50:28]
    registersOut[3] <= UInt<1>("h0") @[core.scala 50:28]
    registersOut[4] <= UInt<1>("h0") @[core.scala 50:28]
    registersOut[5] <= UInt<1>("h0") @[core.scala 50:28]
    registersOut[6] <= UInt<1>("h0") @[core.scala 50:28]
    registersOut[7] <= UInt<1>("h0") @[core.scala 50:28]
    registersOut[8] <= UInt<1>("h0") @[core.scala 50:28]
    registersOut[9] <= UInt<1>("h0") @[core.scala 50:28]
    registersOut[10] <= UInt<1>("h0") @[core.scala 50:28]
    registersOut[11] <= UInt<1>("h0") @[core.scala 50:28]
    registersOut[12] <= UInt<1>("h0") @[core.scala 50:28]
    registersOut[13] <= UInt<1>("h0") @[core.scala 50:28]
    registersOut[14] <= UInt<1>("h0") @[core.scala 50:28]
    registersOut[15] <= UInt<1>("h0") @[core.scala 50:28]
    registersOut[16] <= UInt<1>("h0") @[core.scala 50:28]
    registersOut[17] <= UInt<1>("h0") @[core.scala 50:28]
    registersOut[18] <= UInt<1>("h0") @[core.scala 50:28]
    registersOut[19] <= UInt<1>("h0") @[core.scala 50:28]
    registersOut[20] <= UInt<1>("h0") @[core.scala 50:28]
    registersOut[21] <= UInt<1>("h0") @[core.scala 50:28]
    registersOut[22] <= UInt<1>("h0") @[core.scala 50:28]
    registersOut[23] <= UInt<1>("h0") @[core.scala 50:28]
    registersOut[24] <= UInt<1>("h0") @[core.scala 50:28]
    registersOut[25] <= UInt<1>("h0") @[core.scala 50:28]
    registersOut[26] <= UInt<1>("h0") @[core.scala 50:28]
    registersOut[27] <= UInt<1>("h0") @[core.scala 50:28]
    registersOut[28] <= UInt<1>("h0") @[core.scala 50:28]
    registersOut[29] <= UInt<1>("h0") @[core.scala 50:28]
    registersOut[30] <= UInt<1>("h0") @[core.scala 50:28]
    registersOut[31] <= UInt<1>("h0") @[core.scala 50:28]
    registersOut[32] <= UInt<1>("h0") @[core.scala 50:28]
    registersOut[0] <= mstatus @[core.scala 51:23]

  module storeDataIssue_Anon_1 :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<11>}, deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<11>}}
    input modifyVal : UInt<4>
    input modify : UInt<1>
    output allocatedAddr : UInt<4>
    output readPtrOut : UInt<4>

    reg readPtr : UInt<4>, clock with :
      reset => (reset, UInt<4>("h0")) @[storeDataIssue.scala 25:24]
    node _nextRead_T = eq(readPtr, UInt<4>("hf")) @[storeDataIssue.scala 26:30]
    node _nextRead_T_1 = add(readPtr, UInt<1>("h1")) @[storeDataIssue.scala 26:62]
    node _nextRead_T_2 = tail(_nextRead_T_1, 1) @[storeDataIssue.scala 26:62]
    node nextRead = mux(_nextRead_T, UInt<1>("h0"), _nextRead_T_2) @[storeDataIssue.scala 26:21]
    reg writePtr : UInt<4>, clock with :
      reset => (reset, UInt<4>("h0")) @[storeDataIssue.scala 27:25]
    node _nextWrite_T = eq(writePtr, UInt<4>("hf")) @[storeDataIssue.scala 28:32]
    node _nextWrite_T_1 = add(writePtr, UInt<1>("h1")) @[storeDataIssue.scala 28:65]
    node _nextWrite_T_2 = tail(_nextWrite_T_1, 1) @[storeDataIssue.scala 28:65]
    node nextWrite = mux(_nextWrite_T, UInt<1>("h0"), _nextWrite_T_2) @[storeDataIssue.scala 28:22]
    cmem memReg : UInt<11> [16] @[storeDataIssue.scala 31:19]
    reg emptyReg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h1")) @[storeDataIssue.scala 34:25]
    reg fullReg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[storeDataIssue.scala 35:24]
    wire incrRead : UInt<1>
    incrRead <= UInt<1>("h0")
    wire incrWrite : UInt<1>
    incrWrite <= UInt<1>("h0")
    when incrRead : @[storeDataIssue.scala 48:19]
      readPtr <= nextRead @[storeDataIssue.scala 49:13]
    node _T = eq(emptyReg, UInt<1>("h0")) @[storeDataIssue.scala 53:19]
    node _T_1 = and(modify, _T) @[storeDataIssue.scala 53:16]
    when _T_1 : @[storeDataIssue.scala 53:29]
      writePtr <= modifyVal @[storeDataIssue.scala 56:14]
      node _emptyReg_T = eq(modifyVal, readPtr) @[storeDataIssue.scala 58:25]
      emptyReg <= _emptyReg_T @[storeDataIssue.scala 58:14]
    else :
      when incrWrite : @[storeDataIssue.scala 59:24]
        writePtr <= nextWrite @[storeDataIssue.scala 60:14]
    wire _validBits_WIRE : UInt<1>[16] @[storeDataIssue.scala 62:34]
    _validBits_WIRE[0] <= UInt<1>("h0") @[storeDataIssue.scala 62:34]
    _validBits_WIRE[1] <= UInt<1>("h0") @[storeDataIssue.scala 62:34]
    _validBits_WIRE[2] <= UInt<1>("h0") @[storeDataIssue.scala 62:34]
    _validBits_WIRE[3] <= UInt<1>("h0") @[storeDataIssue.scala 62:34]
    _validBits_WIRE[4] <= UInt<1>("h0") @[storeDataIssue.scala 62:34]
    _validBits_WIRE[5] <= UInt<1>("h0") @[storeDataIssue.scala 62:34]
    _validBits_WIRE[6] <= UInt<1>("h0") @[storeDataIssue.scala 62:34]
    _validBits_WIRE[7] <= UInt<1>("h0") @[storeDataIssue.scala 62:34]
    _validBits_WIRE[8] <= UInt<1>("h0") @[storeDataIssue.scala 62:34]
    _validBits_WIRE[9] <= UInt<1>("h0") @[storeDataIssue.scala 62:34]
    _validBits_WIRE[10] <= UInt<1>("h0") @[storeDataIssue.scala 62:34]
    _validBits_WIRE[11] <= UInt<1>("h0") @[storeDataIssue.scala 62:34]
    _validBits_WIRE[12] <= UInt<1>("h0") @[storeDataIssue.scala 62:34]
    _validBits_WIRE[13] <= UInt<1>("h0") @[storeDataIssue.scala 62:34]
    _validBits_WIRE[14] <= UInt<1>("h0") @[storeDataIssue.scala 62:34]
    _validBits_WIRE[15] <= UInt<1>("h0") @[storeDataIssue.scala 62:34]
    reg validBits : UInt<1>[16], clock with :
      reset => (reset, _validBits_WIRE) @[storeDataIssue.scala 62:26]
    node _T_2 = and(io.deq.ready, io.deq.valid) @[storeDataIssue.scala 64:21]
    node _T_3 = and(_T_2, io.enq.valid) @[storeDataIssue.scala 64:37]
    node _T_4 = and(_T_3, io.enq.ready) @[storeDataIssue.scala 64:53]
    when _T_4 : @[storeDataIssue.scala 64:70]
      infer mport MPORT = memReg[writePtr], clock @[storeDataIssue.scala 65:11]
      MPORT <= io.enq.bits @[storeDataIssue.scala 65:22]
      validBits[writePtr] <= UInt<1>("h1") @[storeDataIssue.scala 66:25]
      validBits[readPtr] <= UInt<1>("h0") @[storeDataIssue.scala 67:24]
      incrWrite <= UInt<1>("h1") @[storeDataIssue.scala 68:15]
      incrRead <= UInt<1>("h1") @[storeDataIssue.scala 69:14]
    else :
      node _T_5 = and(io.enq.valid, io.enq.ready) @[storeDataIssue.scala 70:27]
      when _T_5 : @[storeDataIssue.scala 70:44]
        infer mport MPORT_1 = memReg[writePtr], clock @[storeDataIssue.scala 71:11]
        MPORT_1 <= io.enq.bits @[storeDataIssue.scala 71:22]
        validBits[writePtr] <= UInt<1>("h1") @[storeDataIssue.scala 72:25]
        emptyReg <= UInt<1>("h0") @[storeDataIssue.scala 73:14]
        node _fullReg_T = eq(nextWrite, readPtr) @[storeDataIssue.scala 74:26]
        fullReg <= _fullReg_T @[storeDataIssue.scala 74:13]
        incrWrite <= UInt<1>("h1") @[storeDataIssue.scala 75:15]
      else :
        node _T_6 = and(io.deq.ready, io.deq.valid) @[storeDataIssue.scala 76:27]
        when _T_6 : @[storeDataIssue.scala 76:44]
          fullReg <= UInt<1>("h0") @[storeDataIssue.scala 77:13]
          node _emptyReg_T_1 = eq(nextRead, writePtr) @[storeDataIssue.scala 78:26]
          emptyReg <= _emptyReg_T_1 @[storeDataIssue.scala 78:14]
          incrRead <= UInt<1>("h1") @[storeDataIssue.scala 79:14]
          validBits[readPtr] <= UInt<1>("h0") @[storeDataIssue.scala 80:24]
    infer mport io_deq_bits_MPORT = memReg[readPtr], clock @[storeDataIssue.scala 83:24]
    io.deq.bits <= io_deq_bits_MPORT @[storeDataIssue.scala 83:15]
    node _io_enq_ready_T = eq(fullReg, UInt<1>("h0")) @[storeDataIssue.scala 84:20]
    node _io_enq_ready_T_1 = and(io.deq.valid, io.deq.ready) @[storeDataIssue.scala 84:45]
    node _io_enq_ready_T_2 = or(_io_enq_ready_T, _io_enq_ready_T_1) @[storeDataIssue.scala 84:29]
    node _io_enq_ready_T_3 = eq(modify, UInt<1>("h0")) @[storeDataIssue.scala 84:64]
    node _io_enq_ready_T_4 = and(_io_enq_ready_T_2, _io_enq_ready_T_3) @[storeDataIssue.scala 84:62]
    io.enq.ready <= _io_enq_ready_T_4 @[storeDataIssue.scala 84:16]
    node _io_deq_valid_T = eq(emptyReg, UInt<1>("h0")) @[storeDataIssue.scala 85:19]
    node _io_deq_valid_T_1 = eq(modify, UInt<1>("h0")) @[storeDataIssue.scala 85:31]
    node _io_deq_valid_T_2 = and(_io_deq_valid_T, _io_deq_valid_T_1) @[storeDataIssue.scala 85:29]
    io.deq.valid <= _io_deq_valid_T_2 @[storeDataIssue.scala 85:16]
    allocatedAddr <= writePtr @[storeDataIssue.scala 92:17]
    readPtrOut <= readPtr @[storeDataIssue.scala 148:16]

  module storeDataIssue_1 :
    input clock : Clock
    input reset : Reset
    output fromROB : { flip readyNow : UInt<1>}
    output fromBranch : { flip passOrFail : UInt<1>, flip robAddr : UInt<4>, flip valid : UInt<1>}
    output fromDecode : { ready : UInt<1>, flip valid : UInt<1>, flip instruction : UInt<32>, flip rs2Addr : UInt<6>, flip rs2Ready : UInt<1>, flip branchMask : UInt<5>}
    output toPRF : { instruction : UInt<32>, valid : UInt<1>, rs2Addr : UInt<6>, branchMask : UInt<5>}
    output robMapUpdate : { ready : UInt<1>, flip valid : UInt<1>, flip robAddr : UInt<4>}
    output robOfStore : UInt<4>

    reg toStore_reg : UInt<11>, clock with :
      reset => (UInt<1>("h0"), toStore_reg) @[storeDataIssue.scala 142:24]
    reg branchMask_reg : UInt<5>, clock with :
      reset => (UInt<1>("h0"), branchMask_reg) @[storeDataIssue.scala 143:28]
    inst sdiFifo of storeDataIssue_Anon_1 @[storeDataIssue.scala 146:27]
    sdiFifo.clock <= clock
    sdiFifo.reset <= reset
    cmem map : UInt<4> [16] @[storeDataIssue.scala 152:16]
    when robMapUpdate.valid : @[storeDataIssue.scala 154:28]
      infer mport MPORT = map[robMapUpdate.robAddr], clock @[storeDataIssue.scala 155:8]
      MPORT <= sdiFifo.allocatedAddr @[storeDataIssue.scala 155:31]
    robMapUpdate.ready <= UInt<1>("h1") @[storeDataIssue.scala 157:22]
    reg sdAddrToRobAddr : UInt<4>[16], clock with :
      reset => (UInt<1>("h0"), sdAddrToRobAddr) @[storeDataIssue.scala 160:28]
    node _T = and(fromDecode.valid, fromDecode.ready) @[storeDataIssue.scala 161:25]
    when _T : @[storeDataIssue.scala 161:46]
      sdAddrToRobAddr[sdiFifo.allocatedAddr] <= robMapUpdate.robAddr @[storeDataIssue.scala 162:44]
    sdiFifo.io.enq.valid <= fromDecode.valid @[storeDataIssue.scala 166:29]
    fromDecode.ready <= sdiFifo.io.enq.ready @[storeDataIssue.scala 167:29]
    node _sdiFifo_io_enq_bits_T = cat(fromDecode.branchMask, fromDecode.rs2Addr) @[Cat.scala 33:92]
    sdiFifo.io.enq.bits <= _sdiFifo_io_enq_bits_T @[storeDataIssue.scala 168:29]
    infer mport sdiFifo_modifyVal_MPORT = map[fromBranch.robAddr], clock @[storeDataIssue.scala 169:27]
    sdiFifo.modifyVal <= sdiFifo_modifyVal_MPORT @[storeDataIssue.scala 169:21]
    node _sdiFifo_modify_T = eq(fromBranch.passOrFail, UInt<1>("h0")) @[storeDataIssue.scala 170:44]
    node _sdiFifo_modify_T_1 = and(fromBranch.valid, _sdiFifo_modify_T) @[storeDataIssue.scala 170:41]
    sdiFifo.modify <= _sdiFifo_modify_T_1 @[storeDataIssue.scala 170:21]
    sdiFifo.io.deq.ready <= fromROB.readyNow @[storeDataIssue.scala 172:29]
    node _toPRF_rs2Addr_T = bits(sdiFifo.io.deq.bits, 5, 0) @[storeDataIssue.scala 176:43]
    toPRF.rs2Addr <= _toPRF_rs2Addr_T @[storeDataIssue.scala 176:21]
    node _toPRF_branchMask_T = bits(sdiFifo.io.deq.bits, 10, 6) @[storeDataIssue.scala 177:43]
    toPRF.branchMask <= _toPRF_branchMask_T @[storeDataIssue.scala 177:21]
    toPRF.instruction <= fromDecode.instruction @[storeDataIssue.scala 178:21]
    toPRF.valid <= sdiFifo.io.deq.valid @[storeDataIssue.scala 179:21]
    robOfStore <= sdAddrToRobAddr[sdiFifo.readPtrOut] @[storeDataIssue.scala 183:14]

  module rob_Anon_2 :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<102>}, deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<102>}}
    input modify : UInt<1>
    input modifyVal : UInt<4>
    output debugFIFOOut : { valid : UInt<1>, instruction : UInt<32>, prfDest : UInt<6>, pc : UInt<64>, writeBackGPR : UInt<1>}[16]
    output allocatedPRFCount : UInt<16>

    wire incrRead : UInt<1>
    incrRead <= UInt<1>("h0")
    wire incrWrite : UInt<1>
    incrWrite <= UInt<1>("h0")
    reg readPtr : UInt<4>, clock with :
      reset => (reset, UInt<4>("h0")) @[Fifo.scala 75:25]
    node _nextRead_T = eq(readPtr, UInt<4>("hf")) @[Fifo.scala 76:30]
    node _nextRead_T_1 = add(readPtr, UInt<1>("h1")) @[Fifo.scala 76:61]
    node _nextRead_T_2 = tail(_nextRead_T_1, 1) @[Fifo.scala 76:61]
    node nextRead = mux(_nextRead_T, UInt<1>("h0"), _nextRead_T_2) @[Fifo.scala 76:21]
    when incrRead : @[Fifo.scala 77:19]
      readPtr <= nextRead @[Fifo.scala 78:13]
    reg writePtr : UInt<4>, clock with :
      reset => (reset, UInt<4>("h0")) @[Fifo.scala 81:25]
    node _nextWrite_T = eq(writePtr, UInt<4>("hf")) @[Fifo.scala 82:32]
    node _nextWrite_T_1 = add(writePtr, UInt<1>("h1")) @[Fifo.scala 82:65]
    node _nextWrite_T_2 = tail(_nextWrite_T_1, 1) @[Fifo.scala 82:65]
    node nextWrite = mux(_nextWrite_T, UInt<1>("h0"), _nextWrite_T_2) @[Fifo.scala 82:22]
    reg fullReg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Fifo.scala 84:24]
    cmem memReg : UInt<102> [16] @[Fifo.scala 86:19]
    reg emptyReg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h1")) @[Fifo.scala 89:25]
    node _nextval_T = eq(modifyVal, UInt<4>("hf")) @[Fifo.scala 91:31]
    node _nextval_T_1 = add(modifyVal, UInt<1>("h1")) @[Fifo.scala 91:65]
    node _nextval_T_2 = tail(_nextval_T_1, 1) @[Fifo.scala 91:65]
    node nextval = mux(_nextval_T, UInt<1>("h0"), _nextval_T_2) @[Fifo.scala 91:20]
    when modify : @[Fifo.scala 93:16]
      writePtr <= nextval @[Fifo.scala 95:14]
      node _emptyReg_T = eq(nextval, readPtr) @[Fifo.scala 97:25]
      emptyReg <= _emptyReg_T @[Fifo.scala 97:14]
    else :
      when incrWrite : @[Fifo.scala 98:24]
        writePtr <= nextWrite @[Fifo.scala 99:14]
    node _T = and(io.deq.ready, io.deq.valid) @[Fifo.scala 105:21]
    node _T_1 = and(_T, io.enq.valid) @[Fifo.scala 105:37]
    node _T_2 = and(_T_1, io.enq.ready) @[Fifo.scala 105:53]
    when _T_2 : @[Fifo.scala 105:70]
      infer mport MPORT = memReg[writePtr], clock @[Fifo.scala 106:11]
      MPORT <= io.enq.bits @[Fifo.scala 106:22]
      incrWrite <= UInt<1>("h1") @[Fifo.scala 107:15]
      incrRead <= UInt<1>("h1") @[Fifo.scala 108:14]
    else :
      node _T_3 = and(io.enq.valid, io.enq.ready) @[Fifo.scala 109:27]
      when _T_3 : @[Fifo.scala 109:44]
        infer mport MPORT_1 = memReg[writePtr], clock @[Fifo.scala 110:11]
        MPORT_1 <= io.enq.bits @[Fifo.scala 110:22]
        emptyReg <= UInt<1>("h0") @[Fifo.scala 111:14]
        node _fullReg_T = eq(nextWrite, readPtr) @[Fifo.scala 112:26]
        fullReg <= _fullReg_T @[Fifo.scala 112:13]
        incrWrite <= UInt<1>("h1") @[Fifo.scala 113:15]
      else :
        node _T_4 = and(io.deq.ready, io.deq.valid) @[Fifo.scala 114:27]
        when _T_4 : @[Fifo.scala 114:44]
          fullReg <= UInt<1>("h0") @[Fifo.scala 115:13]
          node _emptyReg_T_1 = eq(nextRead, writePtr) @[Fifo.scala 116:26]
          emptyReg <= _emptyReg_T_1 @[Fifo.scala 116:14]
          incrRead <= UInt<1>("h1") @[Fifo.scala 117:14]
    infer mport io_deq_bits_MPORT = memReg[readPtr], clock @[Fifo.scala 120:24]
    io.deq.bits <= io_deq_bits_MPORT @[Fifo.scala 120:15]
    node _io_enq_ready_T = eq(fullReg, UInt<1>("h0")) @[Fifo.scala 121:20]
    node _io_enq_ready_T_1 = and(io.deq.valid, io.deq.ready) @[Fifo.scala 121:45]
    node _io_enq_ready_T_2 = or(_io_enq_ready_T, _io_enq_ready_T_1) @[Fifo.scala 121:29]
    node _io_enq_ready_T_3 = eq(modify, UInt<1>("h0")) @[Fifo.scala 121:64]
    node _io_enq_ready_T_4 = and(_io_enq_ready_T_2, _io_enq_ready_T_3) @[Fifo.scala 121:62]
    io.enq.ready <= _io_enq_ready_T_4 @[Fifo.scala 121:16]
    node _io_deq_valid_T = eq(emptyReg, UInt<1>("h0")) @[Fifo.scala 122:19]
    node _io_deq_valid_T_1 = eq(modify, UInt<1>("h0")) @[Fifo.scala 122:31]
    node _io_deq_valid_T_2 = and(_io_deq_valid_T, _io_deq_valid_T_1) @[Fifo.scala 122:29]
    io.deq.valid <= _io_deq_valid_T_2 @[Fifo.scala 122:16]
    wire debugFIFO : { valid : UInt<1>, instruction : UInt<32>, prfDest : UInt<6>, pc : UInt<64>, writeBackGPR : UInt<1>}[16] @[rob.scala 25:25]
    infer mport MPORT_2 = memReg[UInt<1>("h0")], clock @[rob.scala 33:37]
    infer mport MPORT_3 = memReg[UInt<1>("h1")], clock @[rob.scala 33:37]
    infer mport MPORT_4 = memReg[UInt<2>("h2")], clock @[rob.scala 33:37]
    infer mport MPORT_5 = memReg[UInt<2>("h3")], clock @[rob.scala 33:37]
    infer mport MPORT_6 = memReg[UInt<3>("h4")], clock @[rob.scala 33:37]
    infer mport MPORT_7 = memReg[UInt<3>("h5")], clock @[rob.scala 33:37]
    infer mport MPORT_8 = memReg[UInt<3>("h6")], clock @[rob.scala 33:37]
    infer mport MPORT_9 = memReg[UInt<3>("h7")], clock @[rob.scala 33:37]
    infer mport MPORT_10 = memReg[UInt<4>("h8")], clock @[rob.scala 33:37]
    infer mport MPORT_11 = memReg[UInt<4>("h9")], clock @[rob.scala 33:37]
    infer mport MPORT_12 = memReg[UInt<4>("ha")], clock @[rob.scala 33:37]
    infer mport MPORT_13 = memReg[UInt<4>("hb")], clock @[rob.scala 33:37]
    infer mport MPORT_14 = memReg[UInt<4>("hc")], clock @[rob.scala 33:37]
    infer mport MPORT_15 = memReg[UInt<4>("hd")], clock @[rob.scala 33:37]
    infer mport MPORT_16 = memReg[UInt<4>("he")], clock @[rob.scala 33:37]
    infer mport MPORT_17 = memReg[UInt<4>("hf")], clock @[rob.scala 33:37]
    node _debugFIFO_0_prfDest_T = bits(MPORT_2, 5, 0) @[rob.scala 35:27]
    debugFIFO[0].prfDest <= _debugFIFO_0_prfDest_T @[rob.scala 35:21]
    node _debugFIFO_0_instruction_T = bits(MPORT_2, 37, 6) @[rob.scala 36:31]
    debugFIFO[0].instruction <= _debugFIFO_0_instruction_T @[rob.scala 36:25]
    node _debugFIFO_0_pc_T = bits(MPORT_2, 101, 38) @[rob.scala 37:22]
    debugFIFO[0].pc <= _debugFIFO_0_pc_T @[rob.scala 37:16]
    node _debugFIFO_1_prfDest_T = bits(MPORT_3, 5, 0) @[rob.scala 35:27]
    debugFIFO[1].prfDest <= _debugFIFO_1_prfDest_T @[rob.scala 35:21]
    node _debugFIFO_1_instruction_T = bits(MPORT_3, 37, 6) @[rob.scala 36:31]
    debugFIFO[1].instruction <= _debugFIFO_1_instruction_T @[rob.scala 36:25]
    node _debugFIFO_1_pc_T = bits(MPORT_3, 101, 38) @[rob.scala 37:22]
    debugFIFO[1].pc <= _debugFIFO_1_pc_T @[rob.scala 37:16]
    node _debugFIFO_2_prfDest_T = bits(MPORT_4, 5, 0) @[rob.scala 35:27]
    debugFIFO[2].prfDest <= _debugFIFO_2_prfDest_T @[rob.scala 35:21]
    node _debugFIFO_2_instruction_T = bits(MPORT_4, 37, 6) @[rob.scala 36:31]
    debugFIFO[2].instruction <= _debugFIFO_2_instruction_T @[rob.scala 36:25]
    node _debugFIFO_2_pc_T = bits(MPORT_4, 101, 38) @[rob.scala 37:22]
    debugFIFO[2].pc <= _debugFIFO_2_pc_T @[rob.scala 37:16]
    node _debugFIFO_3_prfDest_T = bits(MPORT_5, 5, 0) @[rob.scala 35:27]
    debugFIFO[3].prfDest <= _debugFIFO_3_prfDest_T @[rob.scala 35:21]
    node _debugFIFO_3_instruction_T = bits(MPORT_5, 37, 6) @[rob.scala 36:31]
    debugFIFO[3].instruction <= _debugFIFO_3_instruction_T @[rob.scala 36:25]
    node _debugFIFO_3_pc_T = bits(MPORT_5, 101, 38) @[rob.scala 37:22]
    debugFIFO[3].pc <= _debugFIFO_3_pc_T @[rob.scala 37:16]
    node _debugFIFO_4_prfDest_T = bits(MPORT_6, 5, 0) @[rob.scala 35:27]
    debugFIFO[4].prfDest <= _debugFIFO_4_prfDest_T @[rob.scala 35:21]
    node _debugFIFO_4_instruction_T = bits(MPORT_6, 37, 6) @[rob.scala 36:31]
    debugFIFO[4].instruction <= _debugFIFO_4_instruction_T @[rob.scala 36:25]
    node _debugFIFO_4_pc_T = bits(MPORT_6, 101, 38) @[rob.scala 37:22]
    debugFIFO[4].pc <= _debugFIFO_4_pc_T @[rob.scala 37:16]
    node _debugFIFO_5_prfDest_T = bits(MPORT_7, 5, 0) @[rob.scala 35:27]
    debugFIFO[5].prfDest <= _debugFIFO_5_prfDest_T @[rob.scala 35:21]
    node _debugFIFO_5_instruction_T = bits(MPORT_7, 37, 6) @[rob.scala 36:31]
    debugFIFO[5].instruction <= _debugFIFO_5_instruction_T @[rob.scala 36:25]
    node _debugFIFO_5_pc_T = bits(MPORT_7, 101, 38) @[rob.scala 37:22]
    debugFIFO[5].pc <= _debugFIFO_5_pc_T @[rob.scala 37:16]
    node _debugFIFO_6_prfDest_T = bits(MPORT_8, 5, 0) @[rob.scala 35:27]
    debugFIFO[6].prfDest <= _debugFIFO_6_prfDest_T @[rob.scala 35:21]
    node _debugFIFO_6_instruction_T = bits(MPORT_8, 37, 6) @[rob.scala 36:31]
    debugFIFO[6].instruction <= _debugFIFO_6_instruction_T @[rob.scala 36:25]
    node _debugFIFO_6_pc_T = bits(MPORT_8, 101, 38) @[rob.scala 37:22]
    debugFIFO[6].pc <= _debugFIFO_6_pc_T @[rob.scala 37:16]
    node _debugFIFO_7_prfDest_T = bits(MPORT_9, 5, 0) @[rob.scala 35:27]
    debugFIFO[7].prfDest <= _debugFIFO_7_prfDest_T @[rob.scala 35:21]
    node _debugFIFO_7_instruction_T = bits(MPORT_9, 37, 6) @[rob.scala 36:31]
    debugFIFO[7].instruction <= _debugFIFO_7_instruction_T @[rob.scala 36:25]
    node _debugFIFO_7_pc_T = bits(MPORT_9, 101, 38) @[rob.scala 37:22]
    debugFIFO[7].pc <= _debugFIFO_7_pc_T @[rob.scala 37:16]
    node _debugFIFO_8_prfDest_T = bits(MPORT_10, 5, 0) @[rob.scala 35:27]
    debugFIFO[8].prfDest <= _debugFIFO_8_prfDest_T @[rob.scala 35:21]
    node _debugFIFO_8_instruction_T = bits(MPORT_10, 37, 6) @[rob.scala 36:31]
    debugFIFO[8].instruction <= _debugFIFO_8_instruction_T @[rob.scala 36:25]
    node _debugFIFO_8_pc_T = bits(MPORT_10, 101, 38) @[rob.scala 37:22]
    debugFIFO[8].pc <= _debugFIFO_8_pc_T @[rob.scala 37:16]
    node _debugFIFO_9_prfDest_T = bits(MPORT_11, 5, 0) @[rob.scala 35:27]
    debugFIFO[9].prfDest <= _debugFIFO_9_prfDest_T @[rob.scala 35:21]
    node _debugFIFO_9_instruction_T = bits(MPORT_11, 37, 6) @[rob.scala 36:31]
    debugFIFO[9].instruction <= _debugFIFO_9_instruction_T @[rob.scala 36:25]
    node _debugFIFO_9_pc_T = bits(MPORT_11, 101, 38) @[rob.scala 37:22]
    debugFIFO[9].pc <= _debugFIFO_9_pc_T @[rob.scala 37:16]
    node _debugFIFO_10_prfDest_T = bits(MPORT_12, 5, 0) @[rob.scala 35:27]
    debugFIFO[10].prfDest <= _debugFIFO_10_prfDest_T @[rob.scala 35:21]
    node _debugFIFO_10_instruction_T = bits(MPORT_12, 37, 6) @[rob.scala 36:31]
    debugFIFO[10].instruction <= _debugFIFO_10_instruction_T @[rob.scala 36:25]
    node _debugFIFO_10_pc_T = bits(MPORT_12, 101, 38) @[rob.scala 37:22]
    debugFIFO[10].pc <= _debugFIFO_10_pc_T @[rob.scala 37:16]
    node _debugFIFO_11_prfDest_T = bits(MPORT_13, 5, 0) @[rob.scala 35:27]
    debugFIFO[11].prfDest <= _debugFIFO_11_prfDest_T @[rob.scala 35:21]
    node _debugFIFO_11_instruction_T = bits(MPORT_13, 37, 6) @[rob.scala 36:31]
    debugFIFO[11].instruction <= _debugFIFO_11_instruction_T @[rob.scala 36:25]
    node _debugFIFO_11_pc_T = bits(MPORT_13, 101, 38) @[rob.scala 37:22]
    debugFIFO[11].pc <= _debugFIFO_11_pc_T @[rob.scala 37:16]
    node _debugFIFO_12_prfDest_T = bits(MPORT_14, 5, 0) @[rob.scala 35:27]
    debugFIFO[12].prfDest <= _debugFIFO_12_prfDest_T @[rob.scala 35:21]
    node _debugFIFO_12_instruction_T = bits(MPORT_14, 37, 6) @[rob.scala 36:31]
    debugFIFO[12].instruction <= _debugFIFO_12_instruction_T @[rob.scala 36:25]
    node _debugFIFO_12_pc_T = bits(MPORT_14, 101, 38) @[rob.scala 37:22]
    debugFIFO[12].pc <= _debugFIFO_12_pc_T @[rob.scala 37:16]
    node _debugFIFO_13_prfDest_T = bits(MPORT_15, 5, 0) @[rob.scala 35:27]
    debugFIFO[13].prfDest <= _debugFIFO_13_prfDest_T @[rob.scala 35:21]
    node _debugFIFO_13_instruction_T = bits(MPORT_15, 37, 6) @[rob.scala 36:31]
    debugFIFO[13].instruction <= _debugFIFO_13_instruction_T @[rob.scala 36:25]
    node _debugFIFO_13_pc_T = bits(MPORT_15, 101, 38) @[rob.scala 37:22]
    debugFIFO[13].pc <= _debugFIFO_13_pc_T @[rob.scala 37:16]
    node _debugFIFO_14_prfDest_T = bits(MPORT_16, 5, 0) @[rob.scala 35:27]
    debugFIFO[14].prfDest <= _debugFIFO_14_prfDest_T @[rob.scala 35:21]
    node _debugFIFO_14_instruction_T = bits(MPORT_16, 37, 6) @[rob.scala 36:31]
    debugFIFO[14].instruction <= _debugFIFO_14_instruction_T @[rob.scala 36:25]
    node _debugFIFO_14_pc_T = bits(MPORT_16, 101, 38) @[rob.scala 37:22]
    debugFIFO[14].pc <= _debugFIFO_14_pc_T @[rob.scala 37:16]
    node _debugFIFO_15_prfDest_T = bits(MPORT_17, 5, 0) @[rob.scala 35:27]
    debugFIFO[15].prfDest <= _debugFIFO_15_prfDest_T @[rob.scala 35:21]
    node _debugFIFO_15_instruction_T = bits(MPORT_17, 37, 6) @[rob.scala 36:31]
    debugFIFO[15].instruction <= _debugFIFO_15_instruction_T @[rob.scala 36:25]
    node _debugFIFO_15_pc_T = bits(MPORT_17, 101, 38) @[rob.scala 37:22]
    debugFIFO[15].pc <= _debugFIFO_15_pc_T @[rob.scala 37:16]
    debugFIFO[0].valid <= UInt<1>("h0") @[rob.scala 39:31]
    debugFIFO[1].valid <= UInt<1>("h0") @[rob.scala 39:31]
    debugFIFO[2].valid <= UInt<1>("h0") @[rob.scala 39:31]
    debugFIFO[3].valid <= UInt<1>("h0") @[rob.scala 39:31]
    debugFIFO[4].valid <= UInt<1>("h0") @[rob.scala 39:31]
    debugFIFO[5].valid <= UInt<1>("h0") @[rob.scala 39:31]
    debugFIFO[6].valid <= UInt<1>("h0") @[rob.scala 39:31]
    debugFIFO[7].valid <= UInt<1>("h0") @[rob.scala 39:31]
    debugFIFO[8].valid <= UInt<1>("h0") @[rob.scala 39:31]
    debugFIFO[9].valid <= UInt<1>("h0") @[rob.scala 39:31]
    debugFIFO[10].valid <= UInt<1>("h0") @[rob.scala 39:31]
    debugFIFO[11].valid <= UInt<1>("h0") @[rob.scala 39:31]
    debugFIFO[12].valid <= UInt<1>("h0") @[rob.scala 39:31]
    debugFIFO[13].valid <= UInt<1>("h0") @[rob.scala 39:31]
    debugFIFO[14].valid <= UInt<1>("h0") @[rob.scala 39:31]
    debugFIFO[15].valid <= UInt<1>("h0") @[rob.scala 39:31]
    node _T_5 = neq(readPtr, writePtr) @[rob.scala 40:18]
    when _T_5 : @[rob.scala 40:32]
      node _T_6 = geq(UInt<1>("h0"), readPtr) @[rob.scala 41:37]
      node _T_7 = lt(UInt<1>("h0"), writePtr) @[rob.scala 41:57]
      node _T_8 = and(_T_6, _T_7) @[rob.scala 41:49]
      node _T_9 = geq(UInt<1>("h1"), readPtr) @[rob.scala 41:37]
      node _T_10 = lt(UInt<1>("h1"), writePtr) @[rob.scala 41:57]
      node _T_11 = and(_T_9, _T_10) @[rob.scala 41:49]
      node _T_12 = geq(UInt<2>("h2"), readPtr) @[rob.scala 41:37]
      node _T_13 = lt(UInt<2>("h2"), writePtr) @[rob.scala 41:57]
      node _T_14 = and(_T_12, _T_13) @[rob.scala 41:49]
      node _T_15 = geq(UInt<2>("h3"), readPtr) @[rob.scala 41:37]
      node _T_16 = lt(UInt<2>("h3"), writePtr) @[rob.scala 41:57]
      node _T_17 = and(_T_15, _T_16) @[rob.scala 41:49]
      node _T_18 = geq(UInt<3>("h4"), readPtr) @[rob.scala 41:37]
      node _T_19 = lt(UInt<3>("h4"), writePtr) @[rob.scala 41:57]
      node _T_20 = and(_T_18, _T_19) @[rob.scala 41:49]
      node _T_21 = geq(UInt<3>("h5"), readPtr) @[rob.scala 41:37]
      node _T_22 = lt(UInt<3>("h5"), writePtr) @[rob.scala 41:57]
      node _T_23 = and(_T_21, _T_22) @[rob.scala 41:49]
      node _T_24 = geq(UInt<3>("h6"), readPtr) @[rob.scala 41:37]
      node _T_25 = lt(UInt<3>("h6"), writePtr) @[rob.scala 41:57]
      node _T_26 = and(_T_24, _T_25) @[rob.scala 41:49]
      node _T_27 = geq(UInt<3>("h7"), readPtr) @[rob.scala 41:37]
      node _T_28 = lt(UInt<3>("h7"), writePtr) @[rob.scala 41:57]
      node _T_29 = and(_T_27, _T_28) @[rob.scala 41:49]
      node _T_30 = geq(UInt<4>("h8"), readPtr) @[rob.scala 41:37]
      node _T_31 = lt(UInt<4>("h8"), writePtr) @[rob.scala 41:57]
      node _T_32 = and(_T_30, _T_31) @[rob.scala 41:49]
      node _T_33 = geq(UInt<4>("h9"), readPtr) @[rob.scala 41:37]
      node _T_34 = lt(UInt<4>("h9"), writePtr) @[rob.scala 41:57]
      node _T_35 = and(_T_33, _T_34) @[rob.scala 41:49]
      node _T_36 = geq(UInt<4>("ha"), readPtr) @[rob.scala 41:37]
      node _T_37 = lt(UInt<4>("ha"), writePtr) @[rob.scala 41:57]
      node _T_38 = and(_T_36, _T_37) @[rob.scala 41:49]
      node _T_39 = geq(UInt<4>("hb"), readPtr) @[rob.scala 41:37]
      node _T_40 = lt(UInt<4>("hb"), writePtr) @[rob.scala 41:57]
      node _T_41 = and(_T_39, _T_40) @[rob.scala 41:49]
      node _T_42 = geq(UInt<4>("hc"), readPtr) @[rob.scala 41:37]
      node _T_43 = lt(UInt<4>("hc"), writePtr) @[rob.scala 41:57]
      node _T_44 = and(_T_42, _T_43) @[rob.scala 41:49]
      node _T_45 = geq(UInt<4>("hd"), readPtr) @[rob.scala 41:37]
      node _T_46 = lt(UInt<4>("hd"), writePtr) @[rob.scala 41:57]
      node _T_47 = and(_T_45, _T_46) @[rob.scala 41:49]
      node _T_48 = geq(UInt<4>("he"), readPtr) @[rob.scala 41:37]
      node _T_49 = lt(UInt<4>("he"), writePtr) @[rob.scala 41:57]
      node _T_50 = and(_T_48, _T_49) @[rob.scala 41:49]
      node _T_51 = geq(UInt<4>("hf"), readPtr) @[rob.scala 41:37]
      node _T_52 = lt(UInt<4>("hf"), writePtr) @[rob.scala 41:57]
      node _T_53 = and(_T_51, _T_52) @[rob.scala 41:49]
      debugFIFO[0].valid <= _T_8 @[rob.scala 43:52]
      debugFIFO[1].valid <= _T_11 @[rob.scala 43:52]
      debugFIFO[2].valid <= _T_14 @[rob.scala 43:52]
      debugFIFO[3].valid <= _T_17 @[rob.scala 43:52]
      debugFIFO[4].valid <= _T_20 @[rob.scala 43:52]
      debugFIFO[5].valid <= _T_23 @[rob.scala 43:52]
      debugFIFO[6].valid <= _T_26 @[rob.scala 43:52]
      debugFIFO[7].valid <= _T_29 @[rob.scala 43:52]
      debugFIFO[8].valid <= _T_32 @[rob.scala 43:52]
      debugFIFO[9].valid <= _T_35 @[rob.scala 43:52]
      debugFIFO[10].valid <= _T_38 @[rob.scala 43:52]
      debugFIFO[11].valid <= _T_41 @[rob.scala 43:52]
      debugFIFO[12].valid <= _T_44 @[rob.scala 43:52]
      debugFIFO[13].valid <= _T_47 @[rob.scala 43:52]
      debugFIFO[14].valid <= _T_50 @[rob.scala 43:52]
      debugFIFO[15].valid <= _T_53 @[rob.scala 43:52]
      node _T_54 = gt(readPtr, writePtr) @[rob.scala 44:21]
      when _T_54 : @[rob.scala 44:33]
        node _T_55 = geq(UInt<1>("h0"), readPtr) @[rob.scala 45:39]
        node _T_56 = lt(UInt<1>("h0"), writePtr) @[rob.scala 45:59]
        node _T_57 = or(_T_55, _T_56) @[rob.scala 45:51]
        node _T_58 = geq(UInt<1>("h1"), readPtr) @[rob.scala 45:39]
        node _T_59 = lt(UInt<1>("h1"), writePtr) @[rob.scala 45:59]
        node _T_60 = or(_T_58, _T_59) @[rob.scala 45:51]
        node _T_61 = geq(UInt<2>("h2"), readPtr) @[rob.scala 45:39]
        node _T_62 = lt(UInt<2>("h2"), writePtr) @[rob.scala 45:59]
        node _T_63 = or(_T_61, _T_62) @[rob.scala 45:51]
        node _T_64 = geq(UInt<2>("h3"), readPtr) @[rob.scala 45:39]
        node _T_65 = lt(UInt<2>("h3"), writePtr) @[rob.scala 45:59]
        node _T_66 = or(_T_64, _T_65) @[rob.scala 45:51]
        node _T_67 = geq(UInt<3>("h4"), readPtr) @[rob.scala 45:39]
        node _T_68 = lt(UInt<3>("h4"), writePtr) @[rob.scala 45:59]
        node _T_69 = or(_T_67, _T_68) @[rob.scala 45:51]
        node _T_70 = geq(UInt<3>("h5"), readPtr) @[rob.scala 45:39]
        node _T_71 = lt(UInt<3>("h5"), writePtr) @[rob.scala 45:59]
        node _T_72 = or(_T_70, _T_71) @[rob.scala 45:51]
        node _T_73 = geq(UInt<3>("h6"), readPtr) @[rob.scala 45:39]
        node _T_74 = lt(UInt<3>("h6"), writePtr) @[rob.scala 45:59]
        node _T_75 = or(_T_73, _T_74) @[rob.scala 45:51]
        node _T_76 = geq(UInt<3>("h7"), readPtr) @[rob.scala 45:39]
        node _T_77 = lt(UInt<3>("h7"), writePtr) @[rob.scala 45:59]
        node _T_78 = or(_T_76, _T_77) @[rob.scala 45:51]
        node _T_79 = geq(UInt<4>("h8"), readPtr) @[rob.scala 45:39]
        node _T_80 = lt(UInt<4>("h8"), writePtr) @[rob.scala 45:59]
        node _T_81 = or(_T_79, _T_80) @[rob.scala 45:51]
        node _T_82 = geq(UInt<4>("h9"), readPtr) @[rob.scala 45:39]
        node _T_83 = lt(UInt<4>("h9"), writePtr) @[rob.scala 45:59]
        node _T_84 = or(_T_82, _T_83) @[rob.scala 45:51]
        node _T_85 = geq(UInt<4>("ha"), readPtr) @[rob.scala 45:39]
        node _T_86 = lt(UInt<4>("ha"), writePtr) @[rob.scala 45:59]
        node _T_87 = or(_T_85, _T_86) @[rob.scala 45:51]
        node _T_88 = geq(UInt<4>("hb"), readPtr) @[rob.scala 45:39]
        node _T_89 = lt(UInt<4>("hb"), writePtr) @[rob.scala 45:59]
        node _T_90 = or(_T_88, _T_89) @[rob.scala 45:51]
        node _T_91 = geq(UInt<4>("hc"), readPtr) @[rob.scala 45:39]
        node _T_92 = lt(UInt<4>("hc"), writePtr) @[rob.scala 45:59]
        node _T_93 = or(_T_91, _T_92) @[rob.scala 45:51]
        node _T_94 = geq(UInt<4>("hd"), readPtr) @[rob.scala 45:39]
        node _T_95 = lt(UInt<4>("hd"), writePtr) @[rob.scala 45:59]
        node _T_96 = or(_T_94, _T_95) @[rob.scala 45:51]
        node _T_97 = geq(UInt<4>("he"), readPtr) @[rob.scala 45:39]
        node _T_98 = lt(UInt<4>("he"), writePtr) @[rob.scala 45:59]
        node _T_99 = or(_T_97, _T_98) @[rob.scala 45:51]
        node _T_100 = geq(UInt<4>("hf"), readPtr) @[rob.scala 45:39]
        node _T_101 = lt(UInt<4>("hf"), writePtr) @[rob.scala 45:59]
        node _T_102 = or(_T_100, _T_101) @[rob.scala 45:51]
        debugFIFO[0].valid <= _T_57 @[rob.scala 47:54]
        debugFIFO[1].valid <= _T_60 @[rob.scala 47:54]
        debugFIFO[2].valid <= _T_63 @[rob.scala 47:54]
        debugFIFO[3].valid <= _T_66 @[rob.scala 47:54]
        debugFIFO[4].valid <= _T_69 @[rob.scala 47:54]
        debugFIFO[5].valid <= _T_72 @[rob.scala 47:54]
        debugFIFO[6].valid <= _T_75 @[rob.scala 47:54]
        debugFIFO[7].valid <= _T_78 @[rob.scala 47:54]
        debugFIFO[8].valid <= _T_81 @[rob.scala 47:54]
        debugFIFO[9].valid <= _T_84 @[rob.scala 47:54]
        debugFIFO[10].valid <= _T_87 @[rob.scala 47:54]
        debugFIFO[11].valid <= _T_90 @[rob.scala 47:54]
        debugFIFO[12].valid <= _T_93 @[rob.scala 47:54]
        debugFIFO[13].valid <= _T_96 @[rob.scala 47:54]
        debugFIFO[14].valid <= _T_99 @[rob.scala 47:54]
        debugFIFO[15].valid <= _T_102 @[rob.scala 47:54]
    else :
      when fullReg : @[rob.scala 49:25]
        debugFIFO[0].valid <= UInt<1>("h1") @[rob.scala 50:33]
        debugFIFO[1].valid <= UInt<1>("h1") @[rob.scala 50:33]
        debugFIFO[2].valid <= UInt<1>("h1") @[rob.scala 50:33]
        debugFIFO[3].valid <= UInt<1>("h1") @[rob.scala 50:33]
        debugFIFO[4].valid <= UInt<1>("h1") @[rob.scala 50:33]
        debugFIFO[5].valid <= UInt<1>("h1") @[rob.scala 50:33]
        debugFIFO[6].valid <= UInt<1>("h1") @[rob.scala 50:33]
        debugFIFO[7].valid <= UInt<1>("h1") @[rob.scala 50:33]
        debugFIFO[8].valid <= UInt<1>("h1") @[rob.scala 50:33]
        debugFIFO[9].valid <= UInt<1>("h1") @[rob.scala 50:33]
        debugFIFO[10].valid <= UInt<1>("h1") @[rob.scala 50:33]
        debugFIFO[11].valid <= UInt<1>("h1") @[rob.scala 50:33]
        debugFIFO[12].valid <= UInt<1>("h1") @[rob.scala 50:33]
        debugFIFO[13].valid <= UInt<1>("h1") @[rob.scala 50:33]
        debugFIFO[14].valid <= UInt<1>("h1") @[rob.scala 50:33]
        debugFIFO[15].valid <= UInt<1>("h1") @[rob.scala 50:33]
    node _debugFIFO_0_writeBackGPR_T = bits(debugFIFO[0].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_0_writeBackGPR_insType : UInt<3>
    debugFIFO_0_writeBackGPR_insType <= UInt<3>("h0")
    node _debugFIFO_0_writeBackGPR_T_1 = eq(UInt<6>("h37"), _debugFIFO_0_writeBackGPR_T) @[utils.scala 10:20]
    when _debugFIFO_0_writeBackGPR_T_1 : @[utils.scala 10:20]
      debugFIFO_0_writeBackGPR_insType <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_0_writeBackGPR_T_2 = eq(UInt<5>("h17"), _debugFIFO_0_writeBackGPR_T) @[utils.scala 10:20]
      when _debugFIFO_0_writeBackGPR_T_2 : @[utils.scala 10:20]
        debugFIFO_0_writeBackGPR_insType <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_0_writeBackGPR_T_3 = eq(UInt<7>("h6f"), _debugFIFO_0_writeBackGPR_T) @[utils.scala 10:20]
        when _debugFIFO_0_writeBackGPR_T_3 : @[utils.scala 10:20]
          debugFIFO_0_writeBackGPR_insType <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_0_writeBackGPR_T_4 = eq(UInt<7>("h67"), _debugFIFO_0_writeBackGPR_T) @[utils.scala 10:20]
          when _debugFIFO_0_writeBackGPR_T_4 : @[utils.scala 10:20]
            debugFIFO_0_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_0_writeBackGPR_T_5 = eq(UInt<7>("h63"), _debugFIFO_0_writeBackGPR_T) @[utils.scala 10:20]
            when _debugFIFO_0_writeBackGPR_T_5 : @[utils.scala 10:20]
              debugFIFO_0_writeBackGPR_insType <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_0_writeBackGPR_T_6 = eq(UInt<2>("h3"), _debugFIFO_0_writeBackGPR_T) @[utils.scala 10:20]
              when _debugFIFO_0_writeBackGPR_T_6 : @[utils.scala 10:20]
                debugFIFO_0_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_0_writeBackGPR_T_7 = eq(UInt<6>("h23"), _debugFIFO_0_writeBackGPR_T) @[utils.scala 10:20]
                when _debugFIFO_0_writeBackGPR_T_7 : @[utils.scala 10:20]
                  debugFIFO_0_writeBackGPR_insType <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_0_writeBackGPR_T_8 = eq(UInt<5>("h13"), _debugFIFO_0_writeBackGPR_T) @[utils.scala 10:20]
                  when _debugFIFO_0_writeBackGPR_T_8 : @[utils.scala 10:20]
                    debugFIFO_0_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_0_writeBackGPR_T_9 = eq(UInt<5>("h1b"), _debugFIFO_0_writeBackGPR_T) @[utils.scala 10:20]
                    when _debugFIFO_0_writeBackGPR_T_9 : @[utils.scala 10:20]
                      debugFIFO_0_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_0_writeBackGPR_T_10 = eq(UInt<6>("h33"), _debugFIFO_0_writeBackGPR_T) @[utils.scala 10:20]
                      when _debugFIFO_0_writeBackGPR_T_10 : @[utils.scala 10:20]
                        debugFIFO_0_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_0_writeBackGPR_T_11 = eq(UInt<6>("h3b"), _debugFIFO_0_writeBackGPR_T) @[utils.scala 10:20]
                        when _debugFIFO_0_writeBackGPR_T_11 : @[utils.scala 10:20]
                          debugFIFO_0_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_0_writeBackGPR_T_12 = eq(UInt<7>("h73"), _debugFIFO_0_writeBackGPR_T) @[utils.scala 10:20]
                          when _debugFIFO_0_writeBackGPR_T_12 : @[utils.scala 10:20]
                            debugFIFO_0_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_0_writeBackGPR_T_13 = eq(UInt<4>("hf"), _debugFIFO_0_writeBackGPR_T) @[utils.scala 10:20]
                            when _debugFIFO_0_writeBackGPR_T_13 : @[utils.scala 10:20]
                              debugFIFO_0_writeBackGPR_insType <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_0_writeBackGPR_T_14 = eq(UInt<6>("h2f"), _debugFIFO_0_writeBackGPR_T) @[utils.scala 10:20]
                              when _debugFIFO_0_writeBackGPR_T_14 : @[utils.scala 10:20]
                                debugFIFO_0_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_0_writeBackGPR_T_15 = eq(UInt<1>("h1"), debugFIFO_0_writeBackGPR_insType) @[rob.scala 52:141]
    node _debugFIFO_0_writeBackGPR_T_16 = bits(debugFIFO[0].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_0_writeBackGPR_insType_1 : UInt<3>
    debugFIFO_0_writeBackGPR_insType_1 <= UInt<3>("h0")
    node _debugFIFO_0_writeBackGPR_T_17 = eq(UInt<6>("h37"), _debugFIFO_0_writeBackGPR_T_16) @[utils.scala 10:20]
    when _debugFIFO_0_writeBackGPR_T_17 : @[utils.scala 10:20]
      debugFIFO_0_writeBackGPR_insType_1 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_0_writeBackGPR_T_18 = eq(UInt<5>("h17"), _debugFIFO_0_writeBackGPR_T_16) @[utils.scala 10:20]
      when _debugFIFO_0_writeBackGPR_T_18 : @[utils.scala 10:20]
        debugFIFO_0_writeBackGPR_insType_1 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_0_writeBackGPR_T_19 = eq(UInt<7>("h6f"), _debugFIFO_0_writeBackGPR_T_16) @[utils.scala 10:20]
        when _debugFIFO_0_writeBackGPR_T_19 : @[utils.scala 10:20]
          debugFIFO_0_writeBackGPR_insType_1 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_0_writeBackGPR_T_20 = eq(UInt<7>("h67"), _debugFIFO_0_writeBackGPR_T_16) @[utils.scala 10:20]
          when _debugFIFO_0_writeBackGPR_T_20 : @[utils.scala 10:20]
            debugFIFO_0_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_0_writeBackGPR_T_21 = eq(UInt<7>("h63"), _debugFIFO_0_writeBackGPR_T_16) @[utils.scala 10:20]
            when _debugFIFO_0_writeBackGPR_T_21 : @[utils.scala 10:20]
              debugFIFO_0_writeBackGPR_insType_1 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_0_writeBackGPR_T_22 = eq(UInt<2>("h3"), _debugFIFO_0_writeBackGPR_T_16) @[utils.scala 10:20]
              when _debugFIFO_0_writeBackGPR_T_22 : @[utils.scala 10:20]
                debugFIFO_0_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_0_writeBackGPR_T_23 = eq(UInt<6>("h23"), _debugFIFO_0_writeBackGPR_T_16) @[utils.scala 10:20]
                when _debugFIFO_0_writeBackGPR_T_23 : @[utils.scala 10:20]
                  debugFIFO_0_writeBackGPR_insType_1 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_0_writeBackGPR_T_24 = eq(UInt<5>("h13"), _debugFIFO_0_writeBackGPR_T_16) @[utils.scala 10:20]
                  when _debugFIFO_0_writeBackGPR_T_24 : @[utils.scala 10:20]
                    debugFIFO_0_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_0_writeBackGPR_T_25 = eq(UInt<5>("h1b"), _debugFIFO_0_writeBackGPR_T_16) @[utils.scala 10:20]
                    when _debugFIFO_0_writeBackGPR_T_25 : @[utils.scala 10:20]
                      debugFIFO_0_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_0_writeBackGPR_T_26 = eq(UInt<6>("h33"), _debugFIFO_0_writeBackGPR_T_16) @[utils.scala 10:20]
                      when _debugFIFO_0_writeBackGPR_T_26 : @[utils.scala 10:20]
                        debugFIFO_0_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_0_writeBackGPR_T_27 = eq(UInt<6>("h3b"), _debugFIFO_0_writeBackGPR_T_16) @[utils.scala 10:20]
                        when _debugFIFO_0_writeBackGPR_T_27 : @[utils.scala 10:20]
                          debugFIFO_0_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_0_writeBackGPR_T_28 = eq(UInt<7>("h73"), _debugFIFO_0_writeBackGPR_T_16) @[utils.scala 10:20]
                          when _debugFIFO_0_writeBackGPR_T_28 : @[utils.scala 10:20]
                            debugFIFO_0_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_0_writeBackGPR_T_29 = eq(UInt<4>("hf"), _debugFIFO_0_writeBackGPR_T_16) @[utils.scala 10:20]
                            when _debugFIFO_0_writeBackGPR_T_29 : @[utils.scala 10:20]
                              debugFIFO_0_writeBackGPR_insType_1 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_0_writeBackGPR_T_30 = eq(UInt<6>("h2f"), _debugFIFO_0_writeBackGPR_T_16) @[utils.scala 10:20]
                              when _debugFIFO_0_writeBackGPR_T_30 : @[utils.scala 10:20]
                                debugFIFO_0_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_0_writeBackGPR_T_31 = eq(UInt<1>("h0"), debugFIFO_0_writeBackGPR_insType_1) @[rob.scala 52:141]
    node _debugFIFO_0_writeBackGPR_T_32 = bits(debugFIFO[0].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_0_writeBackGPR_insType_2 : UInt<3>
    debugFIFO_0_writeBackGPR_insType_2 <= UInt<3>("h0")
    node _debugFIFO_0_writeBackGPR_T_33 = eq(UInt<6>("h37"), _debugFIFO_0_writeBackGPR_T_32) @[utils.scala 10:20]
    when _debugFIFO_0_writeBackGPR_T_33 : @[utils.scala 10:20]
      debugFIFO_0_writeBackGPR_insType_2 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_0_writeBackGPR_T_34 = eq(UInt<5>("h17"), _debugFIFO_0_writeBackGPR_T_32) @[utils.scala 10:20]
      when _debugFIFO_0_writeBackGPR_T_34 : @[utils.scala 10:20]
        debugFIFO_0_writeBackGPR_insType_2 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_0_writeBackGPR_T_35 = eq(UInt<7>("h6f"), _debugFIFO_0_writeBackGPR_T_32) @[utils.scala 10:20]
        when _debugFIFO_0_writeBackGPR_T_35 : @[utils.scala 10:20]
          debugFIFO_0_writeBackGPR_insType_2 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_0_writeBackGPR_T_36 = eq(UInt<7>("h67"), _debugFIFO_0_writeBackGPR_T_32) @[utils.scala 10:20]
          when _debugFIFO_0_writeBackGPR_T_36 : @[utils.scala 10:20]
            debugFIFO_0_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_0_writeBackGPR_T_37 = eq(UInt<7>("h63"), _debugFIFO_0_writeBackGPR_T_32) @[utils.scala 10:20]
            when _debugFIFO_0_writeBackGPR_T_37 : @[utils.scala 10:20]
              debugFIFO_0_writeBackGPR_insType_2 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_0_writeBackGPR_T_38 = eq(UInt<2>("h3"), _debugFIFO_0_writeBackGPR_T_32) @[utils.scala 10:20]
              when _debugFIFO_0_writeBackGPR_T_38 : @[utils.scala 10:20]
                debugFIFO_0_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_0_writeBackGPR_T_39 = eq(UInt<6>("h23"), _debugFIFO_0_writeBackGPR_T_32) @[utils.scala 10:20]
                when _debugFIFO_0_writeBackGPR_T_39 : @[utils.scala 10:20]
                  debugFIFO_0_writeBackGPR_insType_2 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_0_writeBackGPR_T_40 = eq(UInt<5>("h13"), _debugFIFO_0_writeBackGPR_T_32) @[utils.scala 10:20]
                  when _debugFIFO_0_writeBackGPR_T_40 : @[utils.scala 10:20]
                    debugFIFO_0_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_0_writeBackGPR_T_41 = eq(UInt<5>("h1b"), _debugFIFO_0_writeBackGPR_T_32) @[utils.scala 10:20]
                    when _debugFIFO_0_writeBackGPR_T_41 : @[utils.scala 10:20]
                      debugFIFO_0_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_0_writeBackGPR_T_42 = eq(UInt<6>("h33"), _debugFIFO_0_writeBackGPR_T_32) @[utils.scala 10:20]
                      when _debugFIFO_0_writeBackGPR_T_42 : @[utils.scala 10:20]
                        debugFIFO_0_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_0_writeBackGPR_T_43 = eq(UInt<6>("h3b"), _debugFIFO_0_writeBackGPR_T_32) @[utils.scala 10:20]
                        when _debugFIFO_0_writeBackGPR_T_43 : @[utils.scala 10:20]
                          debugFIFO_0_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_0_writeBackGPR_T_44 = eq(UInt<7>("h73"), _debugFIFO_0_writeBackGPR_T_32) @[utils.scala 10:20]
                          when _debugFIFO_0_writeBackGPR_T_44 : @[utils.scala 10:20]
                            debugFIFO_0_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_0_writeBackGPR_T_45 = eq(UInt<4>("hf"), _debugFIFO_0_writeBackGPR_T_32) @[utils.scala 10:20]
                            when _debugFIFO_0_writeBackGPR_T_45 : @[utils.scala 10:20]
                              debugFIFO_0_writeBackGPR_insType_2 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_0_writeBackGPR_T_46 = eq(UInt<6>("h2f"), _debugFIFO_0_writeBackGPR_T_32) @[utils.scala 10:20]
                              when _debugFIFO_0_writeBackGPR_T_46 : @[utils.scala 10:20]
                                debugFIFO_0_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_0_writeBackGPR_T_47 = eq(UInt<3>("h4"), debugFIFO_0_writeBackGPR_insType_2) @[rob.scala 52:141]
    node _debugFIFO_0_writeBackGPR_T_48 = bits(debugFIFO[0].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_0_writeBackGPR_insType_3 : UInt<3>
    debugFIFO_0_writeBackGPR_insType_3 <= UInt<3>("h0")
    node _debugFIFO_0_writeBackGPR_T_49 = eq(UInt<6>("h37"), _debugFIFO_0_writeBackGPR_T_48) @[utils.scala 10:20]
    when _debugFIFO_0_writeBackGPR_T_49 : @[utils.scala 10:20]
      debugFIFO_0_writeBackGPR_insType_3 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_0_writeBackGPR_T_50 = eq(UInt<5>("h17"), _debugFIFO_0_writeBackGPR_T_48) @[utils.scala 10:20]
      when _debugFIFO_0_writeBackGPR_T_50 : @[utils.scala 10:20]
        debugFIFO_0_writeBackGPR_insType_3 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_0_writeBackGPR_T_51 = eq(UInt<7>("h6f"), _debugFIFO_0_writeBackGPR_T_48) @[utils.scala 10:20]
        when _debugFIFO_0_writeBackGPR_T_51 : @[utils.scala 10:20]
          debugFIFO_0_writeBackGPR_insType_3 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_0_writeBackGPR_T_52 = eq(UInt<7>("h67"), _debugFIFO_0_writeBackGPR_T_48) @[utils.scala 10:20]
          when _debugFIFO_0_writeBackGPR_T_52 : @[utils.scala 10:20]
            debugFIFO_0_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_0_writeBackGPR_T_53 = eq(UInt<7>("h63"), _debugFIFO_0_writeBackGPR_T_48) @[utils.scala 10:20]
            when _debugFIFO_0_writeBackGPR_T_53 : @[utils.scala 10:20]
              debugFIFO_0_writeBackGPR_insType_3 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_0_writeBackGPR_T_54 = eq(UInt<2>("h3"), _debugFIFO_0_writeBackGPR_T_48) @[utils.scala 10:20]
              when _debugFIFO_0_writeBackGPR_T_54 : @[utils.scala 10:20]
                debugFIFO_0_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_0_writeBackGPR_T_55 = eq(UInt<6>("h23"), _debugFIFO_0_writeBackGPR_T_48) @[utils.scala 10:20]
                when _debugFIFO_0_writeBackGPR_T_55 : @[utils.scala 10:20]
                  debugFIFO_0_writeBackGPR_insType_3 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_0_writeBackGPR_T_56 = eq(UInt<5>("h13"), _debugFIFO_0_writeBackGPR_T_48) @[utils.scala 10:20]
                  when _debugFIFO_0_writeBackGPR_T_56 : @[utils.scala 10:20]
                    debugFIFO_0_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_0_writeBackGPR_T_57 = eq(UInt<5>("h1b"), _debugFIFO_0_writeBackGPR_T_48) @[utils.scala 10:20]
                    when _debugFIFO_0_writeBackGPR_T_57 : @[utils.scala 10:20]
                      debugFIFO_0_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_0_writeBackGPR_T_58 = eq(UInt<6>("h33"), _debugFIFO_0_writeBackGPR_T_48) @[utils.scala 10:20]
                      when _debugFIFO_0_writeBackGPR_T_58 : @[utils.scala 10:20]
                        debugFIFO_0_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_0_writeBackGPR_T_59 = eq(UInt<6>("h3b"), _debugFIFO_0_writeBackGPR_T_48) @[utils.scala 10:20]
                        when _debugFIFO_0_writeBackGPR_T_59 : @[utils.scala 10:20]
                          debugFIFO_0_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_0_writeBackGPR_T_60 = eq(UInt<7>("h73"), _debugFIFO_0_writeBackGPR_T_48) @[utils.scala 10:20]
                          when _debugFIFO_0_writeBackGPR_T_60 : @[utils.scala 10:20]
                            debugFIFO_0_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_0_writeBackGPR_T_61 = eq(UInt<4>("hf"), _debugFIFO_0_writeBackGPR_T_48) @[utils.scala 10:20]
                            when _debugFIFO_0_writeBackGPR_T_61 : @[utils.scala 10:20]
                              debugFIFO_0_writeBackGPR_insType_3 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_0_writeBackGPR_T_62 = eq(UInt<6>("h2f"), _debugFIFO_0_writeBackGPR_T_48) @[utils.scala 10:20]
                              when _debugFIFO_0_writeBackGPR_T_62 : @[utils.scala 10:20]
                                debugFIFO_0_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_0_writeBackGPR_T_63 = eq(UInt<3>("h5"), debugFIFO_0_writeBackGPR_insType_3) @[rob.scala 52:141]
    node _debugFIFO_0_writeBackGPR_T_64 = or(_debugFIFO_0_writeBackGPR_T_15, _debugFIFO_0_writeBackGPR_T_31) @[rob.scala 52:197]
    node _debugFIFO_0_writeBackGPR_T_65 = or(_debugFIFO_0_writeBackGPR_T_64, _debugFIFO_0_writeBackGPR_T_47) @[rob.scala 52:197]
    node _debugFIFO_0_writeBackGPR_T_66 = or(_debugFIFO_0_writeBackGPR_T_65, _debugFIFO_0_writeBackGPR_T_63) @[rob.scala 52:197]
    node _debugFIFO_0_writeBackGPR_T_67 = bits(debugFIFO[0].instruction, 11, 7) @[rob.scala 52:223]
    node _debugFIFO_0_writeBackGPR_T_68 = orr(_debugFIFO_0_writeBackGPR_T_67) @[rob.scala 52:231]
    node _debugFIFO_0_writeBackGPR_T_69 = and(_debugFIFO_0_writeBackGPR_T_66, _debugFIFO_0_writeBackGPR_T_68) @[rob.scala 52:203]
    node _debugFIFO_0_writeBackGPR_T_70 = and(_debugFIFO_0_writeBackGPR_T_69, debugFIFO[0].valid) @[rob.scala 52:235]
    debugFIFO[0].writeBackGPR <= _debugFIFO_0_writeBackGPR_T_70 @[rob.scala 52:52]
    node _debugFIFO_1_writeBackGPR_T = bits(debugFIFO[1].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_1_writeBackGPR_insType : UInt<3>
    debugFIFO_1_writeBackGPR_insType <= UInt<3>("h0")
    node _debugFIFO_1_writeBackGPR_T_1 = eq(UInt<6>("h37"), _debugFIFO_1_writeBackGPR_T) @[utils.scala 10:20]
    when _debugFIFO_1_writeBackGPR_T_1 : @[utils.scala 10:20]
      debugFIFO_1_writeBackGPR_insType <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_1_writeBackGPR_T_2 = eq(UInt<5>("h17"), _debugFIFO_1_writeBackGPR_T) @[utils.scala 10:20]
      when _debugFIFO_1_writeBackGPR_T_2 : @[utils.scala 10:20]
        debugFIFO_1_writeBackGPR_insType <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_1_writeBackGPR_T_3 = eq(UInt<7>("h6f"), _debugFIFO_1_writeBackGPR_T) @[utils.scala 10:20]
        when _debugFIFO_1_writeBackGPR_T_3 : @[utils.scala 10:20]
          debugFIFO_1_writeBackGPR_insType <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_1_writeBackGPR_T_4 = eq(UInt<7>("h67"), _debugFIFO_1_writeBackGPR_T) @[utils.scala 10:20]
          when _debugFIFO_1_writeBackGPR_T_4 : @[utils.scala 10:20]
            debugFIFO_1_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_1_writeBackGPR_T_5 = eq(UInt<7>("h63"), _debugFIFO_1_writeBackGPR_T) @[utils.scala 10:20]
            when _debugFIFO_1_writeBackGPR_T_5 : @[utils.scala 10:20]
              debugFIFO_1_writeBackGPR_insType <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_1_writeBackGPR_T_6 = eq(UInt<2>("h3"), _debugFIFO_1_writeBackGPR_T) @[utils.scala 10:20]
              when _debugFIFO_1_writeBackGPR_T_6 : @[utils.scala 10:20]
                debugFIFO_1_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_1_writeBackGPR_T_7 = eq(UInt<6>("h23"), _debugFIFO_1_writeBackGPR_T) @[utils.scala 10:20]
                when _debugFIFO_1_writeBackGPR_T_7 : @[utils.scala 10:20]
                  debugFIFO_1_writeBackGPR_insType <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_1_writeBackGPR_T_8 = eq(UInt<5>("h13"), _debugFIFO_1_writeBackGPR_T) @[utils.scala 10:20]
                  when _debugFIFO_1_writeBackGPR_T_8 : @[utils.scala 10:20]
                    debugFIFO_1_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_1_writeBackGPR_T_9 = eq(UInt<5>("h1b"), _debugFIFO_1_writeBackGPR_T) @[utils.scala 10:20]
                    when _debugFIFO_1_writeBackGPR_T_9 : @[utils.scala 10:20]
                      debugFIFO_1_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_1_writeBackGPR_T_10 = eq(UInt<6>("h33"), _debugFIFO_1_writeBackGPR_T) @[utils.scala 10:20]
                      when _debugFIFO_1_writeBackGPR_T_10 : @[utils.scala 10:20]
                        debugFIFO_1_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_1_writeBackGPR_T_11 = eq(UInt<6>("h3b"), _debugFIFO_1_writeBackGPR_T) @[utils.scala 10:20]
                        when _debugFIFO_1_writeBackGPR_T_11 : @[utils.scala 10:20]
                          debugFIFO_1_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_1_writeBackGPR_T_12 = eq(UInt<7>("h73"), _debugFIFO_1_writeBackGPR_T) @[utils.scala 10:20]
                          when _debugFIFO_1_writeBackGPR_T_12 : @[utils.scala 10:20]
                            debugFIFO_1_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_1_writeBackGPR_T_13 = eq(UInt<4>("hf"), _debugFIFO_1_writeBackGPR_T) @[utils.scala 10:20]
                            when _debugFIFO_1_writeBackGPR_T_13 : @[utils.scala 10:20]
                              debugFIFO_1_writeBackGPR_insType <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_1_writeBackGPR_T_14 = eq(UInt<6>("h2f"), _debugFIFO_1_writeBackGPR_T) @[utils.scala 10:20]
                              when _debugFIFO_1_writeBackGPR_T_14 : @[utils.scala 10:20]
                                debugFIFO_1_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_1_writeBackGPR_T_15 = eq(UInt<1>("h1"), debugFIFO_1_writeBackGPR_insType) @[rob.scala 52:141]
    node _debugFIFO_1_writeBackGPR_T_16 = bits(debugFIFO[1].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_1_writeBackGPR_insType_1 : UInt<3>
    debugFIFO_1_writeBackGPR_insType_1 <= UInt<3>("h0")
    node _debugFIFO_1_writeBackGPR_T_17 = eq(UInt<6>("h37"), _debugFIFO_1_writeBackGPR_T_16) @[utils.scala 10:20]
    when _debugFIFO_1_writeBackGPR_T_17 : @[utils.scala 10:20]
      debugFIFO_1_writeBackGPR_insType_1 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_1_writeBackGPR_T_18 = eq(UInt<5>("h17"), _debugFIFO_1_writeBackGPR_T_16) @[utils.scala 10:20]
      when _debugFIFO_1_writeBackGPR_T_18 : @[utils.scala 10:20]
        debugFIFO_1_writeBackGPR_insType_1 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_1_writeBackGPR_T_19 = eq(UInt<7>("h6f"), _debugFIFO_1_writeBackGPR_T_16) @[utils.scala 10:20]
        when _debugFIFO_1_writeBackGPR_T_19 : @[utils.scala 10:20]
          debugFIFO_1_writeBackGPR_insType_1 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_1_writeBackGPR_T_20 = eq(UInt<7>("h67"), _debugFIFO_1_writeBackGPR_T_16) @[utils.scala 10:20]
          when _debugFIFO_1_writeBackGPR_T_20 : @[utils.scala 10:20]
            debugFIFO_1_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_1_writeBackGPR_T_21 = eq(UInt<7>("h63"), _debugFIFO_1_writeBackGPR_T_16) @[utils.scala 10:20]
            when _debugFIFO_1_writeBackGPR_T_21 : @[utils.scala 10:20]
              debugFIFO_1_writeBackGPR_insType_1 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_1_writeBackGPR_T_22 = eq(UInt<2>("h3"), _debugFIFO_1_writeBackGPR_T_16) @[utils.scala 10:20]
              when _debugFIFO_1_writeBackGPR_T_22 : @[utils.scala 10:20]
                debugFIFO_1_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_1_writeBackGPR_T_23 = eq(UInt<6>("h23"), _debugFIFO_1_writeBackGPR_T_16) @[utils.scala 10:20]
                when _debugFIFO_1_writeBackGPR_T_23 : @[utils.scala 10:20]
                  debugFIFO_1_writeBackGPR_insType_1 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_1_writeBackGPR_T_24 = eq(UInt<5>("h13"), _debugFIFO_1_writeBackGPR_T_16) @[utils.scala 10:20]
                  when _debugFIFO_1_writeBackGPR_T_24 : @[utils.scala 10:20]
                    debugFIFO_1_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_1_writeBackGPR_T_25 = eq(UInt<5>("h1b"), _debugFIFO_1_writeBackGPR_T_16) @[utils.scala 10:20]
                    when _debugFIFO_1_writeBackGPR_T_25 : @[utils.scala 10:20]
                      debugFIFO_1_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_1_writeBackGPR_T_26 = eq(UInt<6>("h33"), _debugFIFO_1_writeBackGPR_T_16) @[utils.scala 10:20]
                      when _debugFIFO_1_writeBackGPR_T_26 : @[utils.scala 10:20]
                        debugFIFO_1_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_1_writeBackGPR_T_27 = eq(UInt<6>("h3b"), _debugFIFO_1_writeBackGPR_T_16) @[utils.scala 10:20]
                        when _debugFIFO_1_writeBackGPR_T_27 : @[utils.scala 10:20]
                          debugFIFO_1_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_1_writeBackGPR_T_28 = eq(UInt<7>("h73"), _debugFIFO_1_writeBackGPR_T_16) @[utils.scala 10:20]
                          when _debugFIFO_1_writeBackGPR_T_28 : @[utils.scala 10:20]
                            debugFIFO_1_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_1_writeBackGPR_T_29 = eq(UInt<4>("hf"), _debugFIFO_1_writeBackGPR_T_16) @[utils.scala 10:20]
                            when _debugFIFO_1_writeBackGPR_T_29 : @[utils.scala 10:20]
                              debugFIFO_1_writeBackGPR_insType_1 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_1_writeBackGPR_T_30 = eq(UInt<6>("h2f"), _debugFIFO_1_writeBackGPR_T_16) @[utils.scala 10:20]
                              when _debugFIFO_1_writeBackGPR_T_30 : @[utils.scala 10:20]
                                debugFIFO_1_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_1_writeBackGPR_T_31 = eq(UInt<1>("h0"), debugFIFO_1_writeBackGPR_insType_1) @[rob.scala 52:141]
    node _debugFIFO_1_writeBackGPR_T_32 = bits(debugFIFO[1].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_1_writeBackGPR_insType_2 : UInt<3>
    debugFIFO_1_writeBackGPR_insType_2 <= UInt<3>("h0")
    node _debugFIFO_1_writeBackGPR_T_33 = eq(UInt<6>("h37"), _debugFIFO_1_writeBackGPR_T_32) @[utils.scala 10:20]
    when _debugFIFO_1_writeBackGPR_T_33 : @[utils.scala 10:20]
      debugFIFO_1_writeBackGPR_insType_2 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_1_writeBackGPR_T_34 = eq(UInt<5>("h17"), _debugFIFO_1_writeBackGPR_T_32) @[utils.scala 10:20]
      when _debugFIFO_1_writeBackGPR_T_34 : @[utils.scala 10:20]
        debugFIFO_1_writeBackGPR_insType_2 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_1_writeBackGPR_T_35 = eq(UInt<7>("h6f"), _debugFIFO_1_writeBackGPR_T_32) @[utils.scala 10:20]
        when _debugFIFO_1_writeBackGPR_T_35 : @[utils.scala 10:20]
          debugFIFO_1_writeBackGPR_insType_2 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_1_writeBackGPR_T_36 = eq(UInt<7>("h67"), _debugFIFO_1_writeBackGPR_T_32) @[utils.scala 10:20]
          when _debugFIFO_1_writeBackGPR_T_36 : @[utils.scala 10:20]
            debugFIFO_1_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_1_writeBackGPR_T_37 = eq(UInt<7>("h63"), _debugFIFO_1_writeBackGPR_T_32) @[utils.scala 10:20]
            when _debugFIFO_1_writeBackGPR_T_37 : @[utils.scala 10:20]
              debugFIFO_1_writeBackGPR_insType_2 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_1_writeBackGPR_T_38 = eq(UInt<2>("h3"), _debugFIFO_1_writeBackGPR_T_32) @[utils.scala 10:20]
              when _debugFIFO_1_writeBackGPR_T_38 : @[utils.scala 10:20]
                debugFIFO_1_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_1_writeBackGPR_T_39 = eq(UInt<6>("h23"), _debugFIFO_1_writeBackGPR_T_32) @[utils.scala 10:20]
                when _debugFIFO_1_writeBackGPR_T_39 : @[utils.scala 10:20]
                  debugFIFO_1_writeBackGPR_insType_2 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_1_writeBackGPR_T_40 = eq(UInt<5>("h13"), _debugFIFO_1_writeBackGPR_T_32) @[utils.scala 10:20]
                  when _debugFIFO_1_writeBackGPR_T_40 : @[utils.scala 10:20]
                    debugFIFO_1_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_1_writeBackGPR_T_41 = eq(UInt<5>("h1b"), _debugFIFO_1_writeBackGPR_T_32) @[utils.scala 10:20]
                    when _debugFIFO_1_writeBackGPR_T_41 : @[utils.scala 10:20]
                      debugFIFO_1_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_1_writeBackGPR_T_42 = eq(UInt<6>("h33"), _debugFIFO_1_writeBackGPR_T_32) @[utils.scala 10:20]
                      when _debugFIFO_1_writeBackGPR_T_42 : @[utils.scala 10:20]
                        debugFIFO_1_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_1_writeBackGPR_T_43 = eq(UInt<6>("h3b"), _debugFIFO_1_writeBackGPR_T_32) @[utils.scala 10:20]
                        when _debugFIFO_1_writeBackGPR_T_43 : @[utils.scala 10:20]
                          debugFIFO_1_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_1_writeBackGPR_T_44 = eq(UInt<7>("h73"), _debugFIFO_1_writeBackGPR_T_32) @[utils.scala 10:20]
                          when _debugFIFO_1_writeBackGPR_T_44 : @[utils.scala 10:20]
                            debugFIFO_1_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_1_writeBackGPR_T_45 = eq(UInt<4>("hf"), _debugFIFO_1_writeBackGPR_T_32) @[utils.scala 10:20]
                            when _debugFIFO_1_writeBackGPR_T_45 : @[utils.scala 10:20]
                              debugFIFO_1_writeBackGPR_insType_2 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_1_writeBackGPR_T_46 = eq(UInt<6>("h2f"), _debugFIFO_1_writeBackGPR_T_32) @[utils.scala 10:20]
                              when _debugFIFO_1_writeBackGPR_T_46 : @[utils.scala 10:20]
                                debugFIFO_1_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_1_writeBackGPR_T_47 = eq(UInt<3>("h4"), debugFIFO_1_writeBackGPR_insType_2) @[rob.scala 52:141]
    node _debugFIFO_1_writeBackGPR_T_48 = bits(debugFIFO[1].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_1_writeBackGPR_insType_3 : UInt<3>
    debugFIFO_1_writeBackGPR_insType_3 <= UInt<3>("h0")
    node _debugFIFO_1_writeBackGPR_T_49 = eq(UInt<6>("h37"), _debugFIFO_1_writeBackGPR_T_48) @[utils.scala 10:20]
    when _debugFIFO_1_writeBackGPR_T_49 : @[utils.scala 10:20]
      debugFIFO_1_writeBackGPR_insType_3 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_1_writeBackGPR_T_50 = eq(UInt<5>("h17"), _debugFIFO_1_writeBackGPR_T_48) @[utils.scala 10:20]
      when _debugFIFO_1_writeBackGPR_T_50 : @[utils.scala 10:20]
        debugFIFO_1_writeBackGPR_insType_3 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_1_writeBackGPR_T_51 = eq(UInt<7>("h6f"), _debugFIFO_1_writeBackGPR_T_48) @[utils.scala 10:20]
        when _debugFIFO_1_writeBackGPR_T_51 : @[utils.scala 10:20]
          debugFIFO_1_writeBackGPR_insType_3 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_1_writeBackGPR_T_52 = eq(UInt<7>("h67"), _debugFIFO_1_writeBackGPR_T_48) @[utils.scala 10:20]
          when _debugFIFO_1_writeBackGPR_T_52 : @[utils.scala 10:20]
            debugFIFO_1_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_1_writeBackGPR_T_53 = eq(UInt<7>("h63"), _debugFIFO_1_writeBackGPR_T_48) @[utils.scala 10:20]
            when _debugFIFO_1_writeBackGPR_T_53 : @[utils.scala 10:20]
              debugFIFO_1_writeBackGPR_insType_3 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_1_writeBackGPR_T_54 = eq(UInt<2>("h3"), _debugFIFO_1_writeBackGPR_T_48) @[utils.scala 10:20]
              when _debugFIFO_1_writeBackGPR_T_54 : @[utils.scala 10:20]
                debugFIFO_1_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_1_writeBackGPR_T_55 = eq(UInt<6>("h23"), _debugFIFO_1_writeBackGPR_T_48) @[utils.scala 10:20]
                when _debugFIFO_1_writeBackGPR_T_55 : @[utils.scala 10:20]
                  debugFIFO_1_writeBackGPR_insType_3 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_1_writeBackGPR_T_56 = eq(UInt<5>("h13"), _debugFIFO_1_writeBackGPR_T_48) @[utils.scala 10:20]
                  when _debugFIFO_1_writeBackGPR_T_56 : @[utils.scala 10:20]
                    debugFIFO_1_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_1_writeBackGPR_T_57 = eq(UInt<5>("h1b"), _debugFIFO_1_writeBackGPR_T_48) @[utils.scala 10:20]
                    when _debugFIFO_1_writeBackGPR_T_57 : @[utils.scala 10:20]
                      debugFIFO_1_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_1_writeBackGPR_T_58 = eq(UInt<6>("h33"), _debugFIFO_1_writeBackGPR_T_48) @[utils.scala 10:20]
                      when _debugFIFO_1_writeBackGPR_T_58 : @[utils.scala 10:20]
                        debugFIFO_1_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_1_writeBackGPR_T_59 = eq(UInt<6>("h3b"), _debugFIFO_1_writeBackGPR_T_48) @[utils.scala 10:20]
                        when _debugFIFO_1_writeBackGPR_T_59 : @[utils.scala 10:20]
                          debugFIFO_1_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_1_writeBackGPR_T_60 = eq(UInt<7>("h73"), _debugFIFO_1_writeBackGPR_T_48) @[utils.scala 10:20]
                          when _debugFIFO_1_writeBackGPR_T_60 : @[utils.scala 10:20]
                            debugFIFO_1_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_1_writeBackGPR_T_61 = eq(UInt<4>("hf"), _debugFIFO_1_writeBackGPR_T_48) @[utils.scala 10:20]
                            when _debugFIFO_1_writeBackGPR_T_61 : @[utils.scala 10:20]
                              debugFIFO_1_writeBackGPR_insType_3 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_1_writeBackGPR_T_62 = eq(UInt<6>("h2f"), _debugFIFO_1_writeBackGPR_T_48) @[utils.scala 10:20]
                              when _debugFIFO_1_writeBackGPR_T_62 : @[utils.scala 10:20]
                                debugFIFO_1_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_1_writeBackGPR_T_63 = eq(UInt<3>("h5"), debugFIFO_1_writeBackGPR_insType_3) @[rob.scala 52:141]
    node _debugFIFO_1_writeBackGPR_T_64 = or(_debugFIFO_1_writeBackGPR_T_15, _debugFIFO_1_writeBackGPR_T_31) @[rob.scala 52:197]
    node _debugFIFO_1_writeBackGPR_T_65 = or(_debugFIFO_1_writeBackGPR_T_64, _debugFIFO_1_writeBackGPR_T_47) @[rob.scala 52:197]
    node _debugFIFO_1_writeBackGPR_T_66 = or(_debugFIFO_1_writeBackGPR_T_65, _debugFIFO_1_writeBackGPR_T_63) @[rob.scala 52:197]
    node _debugFIFO_1_writeBackGPR_T_67 = bits(debugFIFO[1].instruction, 11, 7) @[rob.scala 52:223]
    node _debugFIFO_1_writeBackGPR_T_68 = orr(_debugFIFO_1_writeBackGPR_T_67) @[rob.scala 52:231]
    node _debugFIFO_1_writeBackGPR_T_69 = and(_debugFIFO_1_writeBackGPR_T_66, _debugFIFO_1_writeBackGPR_T_68) @[rob.scala 52:203]
    node _debugFIFO_1_writeBackGPR_T_70 = and(_debugFIFO_1_writeBackGPR_T_69, debugFIFO[1].valid) @[rob.scala 52:235]
    debugFIFO[1].writeBackGPR <= _debugFIFO_1_writeBackGPR_T_70 @[rob.scala 52:52]
    node _debugFIFO_2_writeBackGPR_T = bits(debugFIFO[2].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_2_writeBackGPR_insType : UInt<3>
    debugFIFO_2_writeBackGPR_insType <= UInt<3>("h0")
    node _debugFIFO_2_writeBackGPR_T_1 = eq(UInt<6>("h37"), _debugFIFO_2_writeBackGPR_T) @[utils.scala 10:20]
    when _debugFIFO_2_writeBackGPR_T_1 : @[utils.scala 10:20]
      debugFIFO_2_writeBackGPR_insType <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_2_writeBackGPR_T_2 = eq(UInt<5>("h17"), _debugFIFO_2_writeBackGPR_T) @[utils.scala 10:20]
      when _debugFIFO_2_writeBackGPR_T_2 : @[utils.scala 10:20]
        debugFIFO_2_writeBackGPR_insType <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_2_writeBackGPR_T_3 = eq(UInt<7>("h6f"), _debugFIFO_2_writeBackGPR_T) @[utils.scala 10:20]
        when _debugFIFO_2_writeBackGPR_T_3 : @[utils.scala 10:20]
          debugFIFO_2_writeBackGPR_insType <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_2_writeBackGPR_T_4 = eq(UInt<7>("h67"), _debugFIFO_2_writeBackGPR_T) @[utils.scala 10:20]
          when _debugFIFO_2_writeBackGPR_T_4 : @[utils.scala 10:20]
            debugFIFO_2_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_2_writeBackGPR_T_5 = eq(UInt<7>("h63"), _debugFIFO_2_writeBackGPR_T) @[utils.scala 10:20]
            when _debugFIFO_2_writeBackGPR_T_5 : @[utils.scala 10:20]
              debugFIFO_2_writeBackGPR_insType <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_2_writeBackGPR_T_6 = eq(UInt<2>("h3"), _debugFIFO_2_writeBackGPR_T) @[utils.scala 10:20]
              when _debugFIFO_2_writeBackGPR_T_6 : @[utils.scala 10:20]
                debugFIFO_2_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_2_writeBackGPR_T_7 = eq(UInt<6>("h23"), _debugFIFO_2_writeBackGPR_T) @[utils.scala 10:20]
                when _debugFIFO_2_writeBackGPR_T_7 : @[utils.scala 10:20]
                  debugFIFO_2_writeBackGPR_insType <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_2_writeBackGPR_T_8 = eq(UInt<5>("h13"), _debugFIFO_2_writeBackGPR_T) @[utils.scala 10:20]
                  when _debugFIFO_2_writeBackGPR_T_8 : @[utils.scala 10:20]
                    debugFIFO_2_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_2_writeBackGPR_T_9 = eq(UInt<5>("h1b"), _debugFIFO_2_writeBackGPR_T) @[utils.scala 10:20]
                    when _debugFIFO_2_writeBackGPR_T_9 : @[utils.scala 10:20]
                      debugFIFO_2_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_2_writeBackGPR_T_10 = eq(UInt<6>("h33"), _debugFIFO_2_writeBackGPR_T) @[utils.scala 10:20]
                      when _debugFIFO_2_writeBackGPR_T_10 : @[utils.scala 10:20]
                        debugFIFO_2_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_2_writeBackGPR_T_11 = eq(UInt<6>("h3b"), _debugFIFO_2_writeBackGPR_T) @[utils.scala 10:20]
                        when _debugFIFO_2_writeBackGPR_T_11 : @[utils.scala 10:20]
                          debugFIFO_2_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_2_writeBackGPR_T_12 = eq(UInt<7>("h73"), _debugFIFO_2_writeBackGPR_T) @[utils.scala 10:20]
                          when _debugFIFO_2_writeBackGPR_T_12 : @[utils.scala 10:20]
                            debugFIFO_2_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_2_writeBackGPR_T_13 = eq(UInt<4>("hf"), _debugFIFO_2_writeBackGPR_T) @[utils.scala 10:20]
                            when _debugFIFO_2_writeBackGPR_T_13 : @[utils.scala 10:20]
                              debugFIFO_2_writeBackGPR_insType <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_2_writeBackGPR_T_14 = eq(UInt<6>("h2f"), _debugFIFO_2_writeBackGPR_T) @[utils.scala 10:20]
                              when _debugFIFO_2_writeBackGPR_T_14 : @[utils.scala 10:20]
                                debugFIFO_2_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_2_writeBackGPR_T_15 = eq(UInt<1>("h1"), debugFIFO_2_writeBackGPR_insType) @[rob.scala 52:141]
    node _debugFIFO_2_writeBackGPR_T_16 = bits(debugFIFO[2].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_2_writeBackGPR_insType_1 : UInt<3>
    debugFIFO_2_writeBackGPR_insType_1 <= UInt<3>("h0")
    node _debugFIFO_2_writeBackGPR_T_17 = eq(UInt<6>("h37"), _debugFIFO_2_writeBackGPR_T_16) @[utils.scala 10:20]
    when _debugFIFO_2_writeBackGPR_T_17 : @[utils.scala 10:20]
      debugFIFO_2_writeBackGPR_insType_1 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_2_writeBackGPR_T_18 = eq(UInt<5>("h17"), _debugFIFO_2_writeBackGPR_T_16) @[utils.scala 10:20]
      when _debugFIFO_2_writeBackGPR_T_18 : @[utils.scala 10:20]
        debugFIFO_2_writeBackGPR_insType_1 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_2_writeBackGPR_T_19 = eq(UInt<7>("h6f"), _debugFIFO_2_writeBackGPR_T_16) @[utils.scala 10:20]
        when _debugFIFO_2_writeBackGPR_T_19 : @[utils.scala 10:20]
          debugFIFO_2_writeBackGPR_insType_1 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_2_writeBackGPR_T_20 = eq(UInt<7>("h67"), _debugFIFO_2_writeBackGPR_T_16) @[utils.scala 10:20]
          when _debugFIFO_2_writeBackGPR_T_20 : @[utils.scala 10:20]
            debugFIFO_2_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_2_writeBackGPR_T_21 = eq(UInt<7>("h63"), _debugFIFO_2_writeBackGPR_T_16) @[utils.scala 10:20]
            when _debugFIFO_2_writeBackGPR_T_21 : @[utils.scala 10:20]
              debugFIFO_2_writeBackGPR_insType_1 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_2_writeBackGPR_T_22 = eq(UInt<2>("h3"), _debugFIFO_2_writeBackGPR_T_16) @[utils.scala 10:20]
              when _debugFIFO_2_writeBackGPR_T_22 : @[utils.scala 10:20]
                debugFIFO_2_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_2_writeBackGPR_T_23 = eq(UInt<6>("h23"), _debugFIFO_2_writeBackGPR_T_16) @[utils.scala 10:20]
                when _debugFIFO_2_writeBackGPR_T_23 : @[utils.scala 10:20]
                  debugFIFO_2_writeBackGPR_insType_1 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_2_writeBackGPR_T_24 = eq(UInt<5>("h13"), _debugFIFO_2_writeBackGPR_T_16) @[utils.scala 10:20]
                  when _debugFIFO_2_writeBackGPR_T_24 : @[utils.scala 10:20]
                    debugFIFO_2_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_2_writeBackGPR_T_25 = eq(UInt<5>("h1b"), _debugFIFO_2_writeBackGPR_T_16) @[utils.scala 10:20]
                    when _debugFIFO_2_writeBackGPR_T_25 : @[utils.scala 10:20]
                      debugFIFO_2_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_2_writeBackGPR_T_26 = eq(UInt<6>("h33"), _debugFIFO_2_writeBackGPR_T_16) @[utils.scala 10:20]
                      when _debugFIFO_2_writeBackGPR_T_26 : @[utils.scala 10:20]
                        debugFIFO_2_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_2_writeBackGPR_T_27 = eq(UInt<6>("h3b"), _debugFIFO_2_writeBackGPR_T_16) @[utils.scala 10:20]
                        when _debugFIFO_2_writeBackGPR_T_27 : @[utils.scala 10:20]
                          debugFIFO_2_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_2_writeBackGPR_T_28 = eq(UInt<7>("h73"), _debugFIFO_2_writeBackGPR_T_16) @[utils.scala 10:20]
                          when _debugFIFO_2_writeBackGPR_T_28 : @[utils.scala 10:20]
                            debugFIFO_2_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_2_writeBackGPR_T_29 = eq(UInt<4>("hf"), _debugFIFO_2_writeBackGPR_T_16) @[utils.scala 10:20]
                            when _debugFIFO_2_writeBackGPR_T_29 : @[utils.scala 10:20]
                              debugFIFO_2_writeBackGPR_insType_1 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_2_writeBackGPR_T_30 = eq(UInt<6>("h2f"), _debugFIFO_2_writeBackGPR_T_16) @[utils.scala 10:20]
                              when _debugFIFO_2_writeBackGPR_T_30 : @[utils.scala 10:20]
                                debugFIFO_2_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_2_writeBackGPR_T_31 = eq(UInt<1>("h0"), debugFIFO_2_writeBackGPR_insType_1) @[rob.scala 52:141]
    node _debugFIFO_2_writeBackGPR_T_32 = bits(debugFIFO[2].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_2_writeBackGPR_insType_2 : UInt<3>
    debugFIFO_2_writeBackGPR_insType_2 <= UInt<3>("h0")
    node _debugFIFO_2_writeBackGPR_T_33 = eq(UInt<6>("h37"), _debugFIFO_2_writeBackGPR_T_32) @[utils.scala 10:20]
    when _debugFIFO_2_writeBackGPR_T_33 : @[utils.scala 10:20]
      debugFIFO_2_writeBackGPR_insType_2 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_2_writeBackGPR_T_34 = eq(UInt<5>("h17"), _debugFIFO_2_writeBackGPR_T_32) @[utils.scala 10:20]
      when _debugFIFO_2_writeBackGPR_T_34 : @[utils.scala 10:20]
        debugFIFO_2_writeBackGPR_insType_2 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_2_writeBackGPR_T_35 = eq(UInt<7>("h6f"), _debugFIFO_2_writeBackGPR_T_32) @[utils.scala 10:20]
        when _debugFIFO_2_writeBackGPR_T_35 : @[utils.scala 10:20]
          debugFIFO_2_writeBackGPR_insType_2 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_2_writeBackGPR_T_36 = eq(UInt<7>("h67"), _debugFIFO_2_writeBackGPR_T_32) @[utils.scala 10:20]
          when _debugFIFO_2_writeBackGPR_T_36 : @[utils.scala 10:20]
            debugFIFO_2_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_2_writeBackGPR_T_37 = eq(UInt<7>("h63"), _debugFIFO_2_writeBackGPR_T_32) @[utils.scala 10:20]
            when _debugFIFO_2_writeBackGPR_T_37 : @[utils.scala 10:20]
              debugFIFO_2_writeBackGPR_insType_2 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_2_writeBackGPR_T_38 = eq(UInt<2>("h3"), _debugFIFO_2_writeBackGPR_T_32) @[utils.scala 10:20]
              when _debugFIFO_2_writeBackGPR_T_38 : @[utils.scala 10:20]
                debugFIFO_2_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_2_writeBackGPR_T_39 = eq(UInt<6>("h23"), _debugFIFO_2_writeBackGPR_T_32) @[utils.scala 10:20]
                when _debugFIFO_2_writeBackGPR_T_39 : @[utils.scala 10:20]
                  debugFIFO_2_writeBackGPR_insType_2 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_2_writeBackGPR_T_40 = eq(UInt<5>("h13"), _debugFIFO_2_writeBackGPR_T_32) @[utils.scala 10:20]
                  when _debugFIFO_2_writeBackGPR_T_40 : @[utils.scala 10:20]
                    debugFIFO_2_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_2_writeBackGPR_T_41 = eq(UInt<5>("h1b"), _debugFIFO_2_writeBackGPR_T_32) @[utils.scala 10:20]
                    when _debugFIFO_2_writeBackGPR_T_41 : @[utils.scala 10:20]
                      debugFIFO_2_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_2_writeBackGPR_T_42 = eq(UInt<6>("h33"), _debugFIFO_2_writeBackGPR_T_32) @[utils.scala 10:20]
                      when _debugFIFO_2_writeBackGPR_T_42 : @[utils.scala 10:20]
                        debugFIFO_2_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_2_writeBackGPR_T_43 = eq(UInt<6>("h3b"), _debugFIFO_2_writeBackGPR_T_32) @[utils.scala 10:20]
                        when _debugFIFO_2_writeBackGPR_T_43 : @[utils.scala 10:20]
                          debugFIFO_2_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_2_writeBackGPR_T_44 = eq(UInt<7>("h73"), _debugFIFO_2_writeBackGPR_T_32) @[utils.scala 10:20]
                          when _debugFIFO_2_writeBackGPR_T_44 : @[utils.scala 10:20]
                            debugFIFO_2_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_2_writeBackGPR_T_45 = eq(UInt<4>("hf"), _debugFIFO_2_writeBackGPR_T_32) @[utils.scala 10:20]
                            when _debugFIFO_2_writeBackGPR_T_45 : @[utils.scala 10:20]
                              debugFIFO_2_writeBackGPR_insType_2 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_2_writeBackGPR_T_46 = eq(UInt<6>("h2f"), _debugFIFO_2_writeBackGPR_T_32) @[utils.scala 10:20]
                              when _debugFIFO_2_writeBackGPR_T_46 : @[utils.scala 10:20]
                                debugFIFO_2_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_2_writeBackGPR_T_47 = eq(UInt<3>("h4"), debugFIFO_2_writeBackGPR_insType_2) @[rob.scala 52:141]
    node _debugFIFO_2_writeBackGPR_T_48 = bits(debugFIFO[2].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_2_writeBackGPR_insType_3 : UInt<3>
    debugFIFO_2_writeBackGPR_insType_3 <= UInt<3>("h0")
    node _debugFIFO_2_writeBackGPR_T_49 = eq(UInt<6>("h37"), _debugFIFO_2_writeBackGPR_T_48) @[utils.scala 10:20]
    when _debugFIFO_2_writeBackGPR_T_49 : @[utils.scala 10:20]
      debugFIFO_2_writeBackGPR_insType_3 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_2_writeBackGPR_T_50 = eq(UInt<5>("h17"), _debugFIFO_2_writeBackGPR_T_48) @[utils.scala 10:20]
      when _debugFIFO_2_writeBackGPR_T_50 : @[utils.scala 10:20]
        debugFIFO_2_writeBackGPR_insType_3 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_2_writeBackGPR_T_51 = eq(UInt<7>("h6f"), _debugFIFO_2_writeBackGPR_T_48) @[utils.scala 10:20]
        when _debugFIFO_2_writeBackGPR_T_51 : @[utils.scala 10:20]
          debugFIFO_2_writeBackGPR_insType_3 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_2_writeBackGPR_T_52 = eq(UInt<7>("h67"), _debugFIFO_2_writeBackGPR_T_48) @[utils.scala 10:20]
          when _debugFIFO_2_writeBackGPR_T_52 : @[utils.scala 10:20]
            debugFIFO_2_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_2_writeBackGPR_T_53 = eq(UInt<7>("h63"), _debugFIFO_2_writeBackGPR_T_48) @[utils.scala 10:20]
            when _debugFIFO_2_writeBackGPR_T_53 : @[utils.scala 10:20]
              debugFIFO_2_writeBackGPR_insType_3 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_2_writeBackGPR_T_54 = eq(UInt<2>("h3"), _debugFIFO_2_writeBackGPR_T_48) @[utils.scala 10:20]
              when _debugFIFO_2_writeBackGPR_T_54 : @[utils.scala 10:20]
                debugFIFO_2_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_2_writeBackGPR_T_55 = eq(UInt<6>("h23"), _debugFIFO_2_writeBackGPR_T_48) @[utils.scala 10:20]
                when _debugFIFO_2_writeBackGPR_T_55 : @[utils.scala 10:20]
                  debugFIFO_2_writeBackGPR_insType_3 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_2_writeBackGPR_T_56 = eq(UInt<5>("h13"), _debugFIFO_2_writeBackGPR_T_48) @[utils.scala 10:20]
                  when _debugFIFO_2_writeBackGPR_T_56 : @[utils.scala 10:20]
                    debugFIFO_2_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_2_writeBackGPR_T_57 = eq(UInt<5>("h1b"), _debugFIFO_2_writeBackGPR_T_48) @[utils.scala 10:20]
                    when _debugFIFO_2_writeBackGPR_T_57 : @[utils.scala 10:20]
                      debugFIFO_2_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_2_writeBackGPR_T_58 = eq(UInt<6>("h33"), _debugFIFO_2_writeBackGPR_T_48) @[utils.scala 10:20]
                      when _debugFIFO_2_writeBackGPR_T_58 : @[utils.scala 10:20]
                        debugFIFO_2_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_2_writeBackGPR_T_59 = eq(UInt<6>("h3b"), _debugFIFO_2_writeBackGPR_T_48) @[utils.scala 10:20]
                        when _debugFIFO_2_writeBackGPR_T_59 : @[utils.scala 10:20]
                          debugFIFO_2_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_2_writeBackGPR_T_60 = eq(UInt<7>("h73"), _debugFIFO_2_writeBackGPR_T_48) @[utils.scala 10:20]
                          when _debugFIFO_2_writeBackGPR_T_60 : @[utils.scala 10:20]
                            debugFIFO_2_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_2_writeBackGPR_T_61 = eq(UInt<4>("hf"), _debugFIFO_2_writeBackGPR_T_48) @[utils.scala 10:20]
                            when _debugFIFO_2_writeBackGPR_T_61 : @[utils.scala 10:20]
                              debugFIFO_2_writeBackGPR_insType_3 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_2_writeBackGPR_T_62 = eq(UInt<6>("h2f"), _debugFIFO_2_writeBackGPR_T_48) @[utils.scala 10:20]
                              when _debugFIFO_2_writeBackGPR_T_62 : @[utils.scala 10:20]
                                debugFIFO_2_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_2_writeBackGPR_T_63 = eq(UInt<3>("h5"), debugFIFO_2_writeBackGPR_insType_3) @[rob.scala 52:141]
    node _debugFIFO_2_writeBackGPR_T_64 = or(_debugFIFO_2_writeBackGPR_T_15, _debugFIFO_2_writeBackGPR_T_31) @[rob.scala 52:197]
    node _debugFIFO_2_writeBackGPR_T_65 = or(_debugFIFO_2_writeBackGPR_T_64, _debugFIFO_2_writeBackGPR_T_47) @[rob.scala 52:197]
    node _debugFIFO_2_writeBackGPR_T_66 = or(_debugFIFO_2_writeBackGPR_T_65, _debugFIFO_2_writeBackGPR_T_63) @[rob.scala 52:197]
    node _debugFIFO_2_writeBackGPR_T_67 = bits(debugFIFO[2].instruction, 11, 7) @[rob.scala 52:223]
    node _debugFIFO_2_writeBackGPR_T_68 = orr(_debugFIFO_2_writeBackGPR_T_67) @[rob.scala 52:231]
    node _debugFIFO_2_writeBackGPR_T_69 = and(_debugFIFO_2_writeBackGPR_T_66, _debugFIFO_2_writeBackGPR_T_68) @[rob.scala 52:203]
    node _debugFIFO_2_writeBackGPR_T_70 = and(_debugFIFO_2_writeBackGPR_T_69, debugFIFO[2].valid) @[rob.scala 52:235]
    debugFIFO[2].writeBackGPR <= _debugFIFO_2_writeBackGPR_T_70 @[rob.scala 52:52]
    node _debugFIFO_3_writeBackGPR_T = bits(debugFIFO[3].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_3_writeBackGPR_insType : UInt<3>
    debugFIFO_3_writeBackGPR_insType <= UInt<3>("h0")
    node _debugFIFO_3_writeBackGPR_T_1 = eq(UInt<6>("h37"), _debugFIFO_3_writeBackGPR_T) @[utils.scala 10:20]
    when _debugFIFO_3_writeBackGPR_T_1 : @[utils.scala 10:20]
      debugFIFO_3_writeBackGPR_insType <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_3_writeBackGPR_T_2 = eq(UInt<5>("h17"), _debugFIFO_3_writeBackGPR_T) @[utils.scala 10:20]
      when _debugFIFO_3_writeBackGPR_T_2 : @[utils.scala 10:20]
        debugFIFO_3_writeBackGPR_insType <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_3_writeBackGPR_T_3 = eq(UInt<7>("h6f"), _debugFIFO_3_writeBackGPR_T) @[utils.scala 10:20]
        when _debugFIFO_3_writeBackGPR_T_3 : @[utils.scala 10:20]
          debugFIFO_3_writeBackGPR_insType <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_3_writeBackGPR_T_4 = eq(UInt<7>("h67"), _debugFIFO_3_writeBackGPR_T) @[utils.scala 10:20]
          when _debugFIFO_3_writeBackGPR_T_4 : @[utils.scala 10:20]
            debugFIFO_3_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_3_writeBackGPR_T_5 = eq(UInt<7>("h63"), _debugFIFO_3_writeBackGPR_T) @[utils.scala 10:20]
            when _debugFIFO_3_writeBackGPR_T_5 : @[utils.scala 10:20]
              debugFIFO_3_writeBackGPR_insType <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_3_writeBackGPR_T_6 = eq(UInt<2>("h3"), _debugFIFO_3_writeBackGPR_T) @[utils.scala 10:20]
              when _debugFIFO_3_writeBackGPR_T_6 : @[utils.scala 10:20]
                debugFIFO_3_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_3_writeBackGPR_T_7 = eq(UInt<6>("h23"), _debugFIFO_3_writeBackGPR_T) @[utils.scala 10:20]
                when _debugFIFO_3_writeBackGPR_T_7 : @[utils.scala 10:20]
                  debugFIFO_3_writeBackGPR_insType <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_3_writeBackGPR_T_8 = eq(UInt<5>("h13"), _debugFIFO_3_writeBackGPR_T) @[utils.scala 10:20]
                  when _debugFIFO_3_writeBackGPR_T_8 : @[utils.scala 10:20]
                    debugFIFO_3_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_3_writeBackGPR_T_9 = eq(UInt<5>("h1b"), _debugFIFO_3_writeBackGPR_T) @[utils.scala 10:20]
                    when _debugFIFO_3_writeBackGPR_T_9 : @[utils.scala 10:20]
                      debugFIFO_3_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_3_writeBackGPR_T_10 = eq(UInt<6>("h33"), _debugFIFO_3_writeBackGPR_T) @[utils.scala 10:20]
                      when _debugFIFO_3_writeBackGPR_T_10 : @[utils.scala 10:20]
                        debugFIFO_3_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_3_writeBackGPR_T_11 = eq(UInt<6>("h3b"), _debugFIFO_3_writeBackGPR_T) @[utils.scala 10:20]
                        when _debugFIFO_3_writeBackGPR_T_11 : @[utils.scala 10:20]
                          debugFIFO_3_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_3_writeBackGPR_T_12 = eq(UInt<7>("h73"), _debugFIFO_3_writeBackGPR_T) @[utils.scala 10:20]
                          when _debugFIFO_3_writeBackGPR_T_12 : @[utils.scala 10:20]
                            debugFIFO_3_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_3_writeBackGPR_T_13 = eq(UInt<4>("hf"), _debugFIFO_3_writeBackGPR_T) @[utils.scala 10:20]
                            when _debugFIFO_3_writeBackGPR_T_13 : @[utils.scala 10:20]
                              debugFIFO_3_writeBackGPR_insType <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_3_writeBackGPR_T_14 = eq(UInt<6>("h2f"), _debugFIFO_3_writeBackGPR_T) @[utils.scala 10:20]
                              when _debugFIFO_3_writeBackGPR_T_14 : @[utils.scala 10:20]
                                debugFIFO_3_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_3_writeBackGPR_T_15 = eq(UInt<1>("h1"), debugFIFO_3_writeBackGPR_insType) @[rob.scala 52:141]
    node _debugFIFO_3_writeBackGPR_T_16 = bits(debugFIFO[3].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_3_writeBackGPR_insType_1 : UInt<3>
    debugFIFO_3_writeBackGPR_insType_1 <= UInt<3>("h0")
    node _debugFIFO_3_writeBackGPR_T_17 = eq(UInt<6>("h37"), _debugFIFO_3_writeBackGPR_T_16) @[utils.scala 10:20]
    when _debugFIFO_3_writeBackGPR_T_17 : @[utils.scala 10:20]
      debugFIFO_3_writeBackGPR_insType_1 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_3_writeBackGPR_T_18 = eq(UInt<5>("h17"), _debugFIFO_3_writeBackGPR_T_16) @[utils.scala 10:20]
      when _debugFIFO_3_writeBackGPR_T_18 : @[utils.scala 10:20]
        debugFIFO_3_writeBackGPR_insType_1 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_3_writeBackGPR_T_19 = eq(UInt<7>("h6f"), _debugFIFO_3_writeBackGPR_T_16) @[utils.scala 10:20]
        when _debugFIFO_3_writeBackGPR_T_19 : @[utils.scala 10:20]
          debugFIFO_3_writeBackGPR_insType_1 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_3_writeBackGPR_T_20 = eq(UInt<7>("h67"), _debugFIFO_3_writeBackGPR_T_16) @[utils.scala 10:20]
          when _debugFIFO_3_writeBackGPR_T_20 : @[utils.scala 10:20]
            debugFIFO_3_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_3_writeBackGPR_T_21 = eq(UInt<7>("h63"), _debugFIFO_3_writeBackGPR_T_16) @[utils.scala 10:20]
            when _debugFIFO_3_writeBackGPR_T_21 : @[utils.scala 10:20]
              debugFIFO_3_writeBackGPR_insType_1 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_3_writeBackGPR_T_22 = eq(UInt<2>("h3"), _debugFIFO_3_writeBackGPR_T_16) @[utils.scala 10:20]
              when _debugFIFO_3_writeBackGPR_T_22 : @[utils.scala 10:20]
                debugFIFO_3_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_3_writeBackGPR_T_23 = eq(UInt<6>("h23"), _debugFIFO_3_writeBackGPR_T_16) @[utils.scala 10:20]
                when _debugFIFO_3_writeBackGPR_T_23 : @[utils.scala 10:20]
                  debugFIFO_3_writeBackGPR_insType_1 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_3_writeBackGPR_T_24 = eq(UInt<5>("h13"), _debugFIFO_3_writeBackGPR_T_16) @[utils.scala 10:20]
                  when _debugFIFO_3_writeBackGPR_T_24 : @[utils.scala 10:20]
                    debugFIFO_3_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_3_writeBackGPR_T_25 = eq(UInt<5>("h1b"), _debugFIFO_3_writeBackGPR_T_16) @[utils.scala 10:20]
                    when _debugFIFO_3_writeBackGPR_T_25 : @[utils.scala 10:20]
                      debugFIFO_3_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_3_writeBackGPR_T_26 = eq(UInt<6>("h33"), _debugFIFO_3_writeBackGPR_T_16) @[utils.scala 10:20]
                      when _debugFIFO_3_writeBackGPR_T_26 : @[utils.scala 10:20]
                        debugFIFO_3_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_3_writeBackGPR_T_27 = eq(UInt<6>("h3b"), _debugFIFO_3_writeBackGPR_T_16) @[utils.scala 10:20]
                        when _debugFIFO_3_writeBackGPR_T_27 : @[utils.scala 10:20]
                          debugFIFO_3_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_3_writeBackGPR_T_28 = eq(UInt<7>("h73"), _debugFIFO_3_writeBackGPR_T_16) @[utils.scala 10:20]
                          when _debugFIFO_3_writeBackGPR_T_28 : @[utils.scala 10:20]
                            debugFIFO_3_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_3_writeBackGPR_T_29 = eq(UInt<4>("hf"), _debugFIFO_3_writeBackGPR_T_16) @[utils.scala 10:20]
                            when _debugFIFO_3_writeBackGPR_T_29 : @[utils.scala 10:20]
                              debugFIFO_3_writeBackGPR_insType_1 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_3_writeBackGPR_T_30 = eq(UInt<6>("h2f"), _debugFIFO_3_writeBackGPR_T_16) @[utils.scala 10:20]
                              when _debugFIFO_3_writeBackGPR_T_30 : @[utils.scala 10:20]
                                debugFIFO_3_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_3_writeBackGPR_T_31 = eq(UInt<1>("h0"), debugFIFO_3_writeBackGPR_insType_1) @[rob.scala 52:141]
    node _debugFIFO_3_writeBackGPR_T_32 = bits(debugFIFO[3].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_3_writeBackGPR_insType_2 : UInt<3>
    debugFIFO_3_writeBackGPR_insType_2 <= UInt<3>("h0")
    node _debugFIFO_3_writeBackGPR_T_33 = eq(UInt<6>("h37"), _debugFIFO_3_writeBackGPR_T_32) @[utils.scala 10:20]
    when _debugFIFO_3_writeBackGPR_T_33 : @[utils.scala 10:20]
      debugFIFO_3_writeBackGPR_insType_2 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_3_writeBackGPR_T_34 = eq(UInt<5>("h17"), _debugFIFO_3_writeBackGPR_T_32) @[utils.scala 10:20]
      when _debugFIFO_3_writeBackGPR_T_34 : @[utils.scala 10:20]
        debugFIFO_3_writeBackGPR_insType_2 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_3_writeBackGPR_T_35 = eq(UInt<7>("h6f"), _debugFIFO_3_writeBackGPR_T_32) @[utils.scala 10:20]
        when _debugFIFO_3_writeBackGPR_T_35 : @[utils.scala 10:20]
          debugFIFO_3_writeBackGPR_insType_2 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_3_writeBackGPR_T_36 = eq(UInt<7>("h67"), _debugFIFO_3_writeBackGPR_T_32) @[utils.scala 10:20]
          when _debugFIFO_3_writeBackGPR_T_36 : @[utils.scala 10:20]
            debugFIFO_3_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_3_writeBackGPR_T_37 = eq(UInt<7>("h63"), _debugFIFO_3_writeBackGPR_T_32) @[utils.scala 10:20]
            when _debugFIFO_3_writeBackGPR_T_37 : @[utils.scala 10:20]
              debugFIFO_3_writeBackGPR_insType_2 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_3_writeBackGPR_T_38 = eq(UInt<2>("h3"), _debugFIFO_3_writeBackGPR_T_32) @[utils.scala 10:20]
              when _debugFIFO_3_writeBackGPR_T_38 : @[utils.scala 10:20]
                debugFIFO_3_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_3_writeBackGPR_T_39 = eq(UInt<6>("h23"), _debugFIFO_3_writeBackGPR_T_32) @[utils.scala 10:20]
                when _debugFIFO_3_writeBackGPR_T_39 : @[utils.scala 10:20]
                  debugFIFO_3_writeBackGPR_insType_2 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_3_writeBackGPR_T_40 = eq(UInt<5>("h13"), _debugFIFO_3_writeBackGPR_T_32) @[utils.scala 10:20]
                  when _debugFIFO_3_writeBackGPR_T_40 : @[utils.scala 10:20]
                    debugFIFO_3_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_3_writeBackGPR_T_41 = eq(UInt<5>("h1b"), _debugFIFO_3_writeBackGPR_T_32) @[utils.scala 10:20]
                    when _debugFIFO_3_writeBackGPR_T_41 : @[utils.scala 10:20]
                      debugFIFO_3_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_3_writeBackGPR_T_42 = eq(UInt<6>("h33"), _debugFIFO_3_writeBackGPR_T_32) @[utils.scala 10:20]
                      when _debugFIFO_3_writeBackGPR_T_42 : @[utils.scala 10:20]
                        debugFIFO_3_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_3_writeBackGPR_T_43 = eq(UInt<6>("h3b"), _debugFIFO_3_writeBackGPR_T_32) @[utils.scala 10:20]
                        when _debugFIFO_3_writeBackGPR_T_43 : @[utils.scala 10:20]
                          debugFIFO_3_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_3_writeBackGPR_T_44 = eq(UInt<7>("h73"), _debugFIFO_3_writeBackGPR_T_32) @[utils.scala 10:20]
                          when _debugFIFO_3_writeBackGPR_T_44 : @[utils.scala 10:20]
                            debugFIFO_3_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_3_writeBackGPR_T_45 = eq(UInt<4>("hf"), _debugFIFO_3_writeBackGPR_T_32) @[utils.scala 10:20]
                            when _debugFIFO_3_writeBackGPR_T_45 : @[utils.scala 10:20]
                              debugFIFO_3_writeBackGPR_insType_2 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_3_writeBackGPR_T_46 = eq(UInt<6>("h2f"), _debugFIFO_3_writeBackGPR_T_32) @[utils.scala 10:20]
                              when _debugFIFO_3_writeBackGPR_T_46 : @[utils.scala 10:20]
                                debugFIFO_3_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_3_writeBackGPR_T_47 = eq(UInt<3>("h4"), debugFIFO_3_writeBackGPR_insType_2) @[rob.scala 52:141]
    node _debugFIFO_3_writeBackGPR_T_48 = bits(debugFIFO[3].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_3_writeBackGPR_insType_3 : UInt<3>
    debugFIFO_3_writeBackGPR_insType_3 <= UInt<3>("h0")
    node _debugFIFO_3_writeBackGPR_T_49 = eq(UInt<6>("h37"), _debugFIFO_3_writeBackGPR_T_48) @[utils.scala 10:20]
    when _debugFIFO_3_writeBackGPR_T_49 : @[utils.scala 10:20]
      debugFIFO_3_writeBackGPR_insType_3 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_3_writeBackGPR_T_50 = eq(UInt<5>("h17"), _debugFIFO_3_writeBackGPR_T_48) @[utils.scala 10:20]
      when _debugFIFO_3_writeBackGPR_T_50 : @[utils.scala 10:20]
        debugFIFO_3_writeBackGPR_insType_3 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_3_writeBackGPR_T_51 = eq(UInt<7>("h6f"), _debugFIFO_3_writeBackGPR_T_48) @[utils.scala 10:20]
        when _debugFIFO_3_writeBackGPR_T_51 : @[utils.scala 10:20]
          debugFIFO_3_writeBackGPR_insType_3 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_3_writeBackGPR_T_52 = eq(UInt<7>("h67"), _debugFIFO_3_writeBackGPR_T_48) @[utils.scala 10:20]
          when _debugFIFO_3_writeBackGPR_T_52 : @[utils.scala 10:20]
            debugFIFO_3_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_3_writeBackGPR_T_53 = eq(UInt<7>("h63"), _debugFIFO_3_writeBackGPR_T_48) @[utils.scala 10:20]
            when _debugFIFO_3_writeBackGPR_T_53 : @[utils.scala 10:20]
              debugFIFO_3_writeBackGPR_insType_3 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_3_writeBackGPR_T_54 = eq(UInt<2>("h3"), _debugFIFO_3_writeBackGPR_T_48) @[utils.scala 10:20]
              when _debugFIFO_3_writeBackGPR_T_54 : @[utils.scala 10:20]
                debugFIFO_3_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_3_writeBackGPR_T_55 = eq(UInt<6>("h23"), _debugFIFO_3_writeBackGPR_T_48) @[utils.scala 10:20]
                when _debugFIFO_3_writeBackGPR_T_55 : @[utils.scala 10:20]
                  debugFIFO_3_writeBackGPR_insType_3 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_3_writeBackGPR_T_56 = eq(UInt<5>("h13"), _debugFIFO_3_writeBackGPR_T_48) @[utils.scala 10:20]
                  when _debugFIFO_3_writeBackGPR_T_56 : @[utils.scala 10:20]
                    debugFIFO_3_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_3_writeBackGPR_T_57 = eq(UInt<5>("h1b"), _debugFIFO_3_writeBackGPR_T_48) @[utils.scala 10:20]
                    when _debugFIFO_3_writeBackGPR_T_57 : @[utils.scala 10:20]
                      debugFIFO_3_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_3_writeBackGPR_T_58 = eq(UInt<6>("h33"), _debugFIFO_3_writeBackGPR_T_48) @[utils.scala 10:20]
                      when _debugFIFO_3_writeBackGPR_T_58 : @[utils.scala 10:20]
                        debugFIFO_3_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_3_writeBackGPR_T_59 = eq(UInt<6>("h3b"), _debugFIFO_3_writeBackGPR_T_48) @[utils.scala 10:20]
                        when _debugFIFO_3_writeBackGPR_T_59 : @[utils.scala 10:20]
                          debugFIFO_3_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_3_writeBackGPR_T_60 = eq(UInt<7>("h73"), _debugFIFO_3_writeBackGPR_T_48) @[utils.scala 10:20]
                          when _debugFIFO_3_writeBackGPR_T_60 : @[utils.scala 10:20]
                            debugFIFO_3_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_3_writeBackGPR_T_61 = eq(UInt<4>("hf"), _debugFIFO_3_writeBackGPR_T_48) @[utils.scala 10:20]
                            when _debugFIFO_3_writeBackGPR_T_61 : @[utils.scala 10:20]
                              debugFIFO_3_writeBackGPR_insType_3 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_3_writeBackGPR_T_62 = eq(UInt<6>("h2f"), _debugFIFO_3_writeBackGPR_T_48) @[utils.scala 10:20]
                              when _debugFIFO_3_writeBackGPR_T_62 : @[utils.scala 10:20]
                                debugFIFO_3_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_3_writeBackGPR_T_63 = eq(UInt<3>("h5"), debugFIFO_3_writeBackGPR_insType_3) @[rob.scala 52:141]
    node _debugFIFO_3_writeBackGPR_T_64 = or(_debugFIFO_3_writeBackGPR_T_15, _debugFIFO_3_writeBackGPR_T_31) @[rob.scala 52:197]
    node _debugFIFO_3_writeBackGPR_T_65 = or(_debugFIFO_3_writeBackGPR_T_64, _debugFIFO_3_writeBackGPR_T_47) @[rob.scala 52:197]
    node _debugFIFO_3_writeBackGPR_T_66 = or(_debugFIFO_3_writeBackGPR_T_65, _debugFIFO_3_writeBackGPR_T_63) @[rob.scala 52:197]
    node _debugFIFO_3_writeBackGPR_T_67 = bits(debugFIFO[3].instruction, 11, 7) @[rob.scala 52:223]
    node _debugFIFO_3_writeBackGPR_T_68 = orr(_debugFIFO_3_writeBackGPR_T_67) @[rob.scala 52:231]
    node _debugFIFO_3_writeBackGPR_T_69 = and(_debugFIFO_3_writeBackGPR_T_66, _debugFIFO_3_writeBackGPR_T_68) @[rob.scala 52:203]
    node _debugFIFO_3_writeBackGPR_T_70 = and(_debugFIFO_3_writeBackGPR_T_69, debugFIFO[3].valid) @[rob.scala 52:235]
    debugFIFO[3].writeBackGPR <= _debugFIFO_3_writeBackGPR_T_70 @[rob.scala 52:52]
    node _debugFIFO_4_writeBackGPR_T = bits(debugFIFO[4].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_4_writeBackGPR_insType : UInt<3>
    debugFIFO_4_writeBackGPR_insType <= UInt<3>("h0")
    node _debugFIFO_4_writeBackGPR_T_1 = eq(UInt<6>("h37"), _debugFIFO_4_writeBackGPR_T) @[utils.scala 10:20]
    when _debugFIFO_4_writeBackGPR_T_1 : @[utils.scala 10:20]
      debugFIFO_4_writeBackGPR_insType <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_4_writeBackGPR_T_2 = eq(UInt<5>("h17"), _debugFIFO_4_writeBackGPR_T) @[utils.scala 10:20]
      when _debugFIFO_4_writeBackGPR_T_2 : @[utils.scala 10:20]
        debugFIFO_4_writeBackGPR_insType <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_4_writeBackGPR_T_3 = eq(UInt<7>("h6f"), _debugFIFO_4_writeBackGPR_T) @[utils.scala 10:20]
        when _debugFIFO_4_writeBackGPR_T_3 : @[utils.scala 10:20]
          debugFIFO_4_writeBackGPR_insType <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_4_writeBackGPR_T_4 = eq(UInt<7>("h67"), _debugFIFO_4_writeBackGPR_T) @[utils.scala 10:20]
          when _debugFIFO_4_writeBackGPR_T_4 : @[utils.scala 10:20]
            debugFIFO_4_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_4_writeBackGPR_T_5 = eq(UInt<7>("h63"), _debugFIFO_4_writeBackGPR_T) @[utils.scala 10:20]
            when _debugFIFO_4_writeBackGPR_T_5 : @[utils.scala 10:20]
              debugFIFO_4_writeBackGPR_insType <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_4_writeBackGPR_T_6 = eq(UInt<2>("h3"), _debugFIFO_4_writeBackGPR_T) @[utils.scala 10:20]
              when _debugFIFO_4_writeBackGPR_T_6 : @[utils.scala 10:20]
                debugFIFO_4_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_4_writeBackGPR_T_7 = eq(UInt<6>("h23"), _debugFIFO_4_writeBackGPR_T) @[utils.scala 10:20]
                when _debugFIFO_4_writeBackGPR_T_7 : @[utils.scala 10:20]
                  debugFIFO_4_writeBackGPR_insType <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_4_writeBackGPR_T_8 = eq(UInt<5>("h13"), _debugFIFO_4_writeBackGPR_T) @[utils.scala 10:20]
                  when _debugFIFO_4_writeBackGPR_T_8 : @[utils.scala 10:20]
                    debugFIFO_4_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_4_writeBackGPR_T_9 = eq(UInt<5>("h1b"), _debugFIFO_4_writeBackGPR_T) @[utils.scala 10:20]
                    when _debugFIFO_4_writeBackGPR_T_9 : @[utils.scala 10:20]
                      debugFIFO_4_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_4_writeBackGPR_T_10 = eq(UInt<6>("h33"), _debugFIFO_4_writeBackGPR_T) @[utils.scala 10:20]
                      when _debugFIFO_4_writeBackGPR_T_10 : @[utils.scala 10:20]
                        debugFIFO_4_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_4_writeBackGPR_T_11 = eq(UInt<6>("h3b"), _debugFIFO_4_writeBackGPR_T) @[utils.scala 10:20]
                        when _debugFIFO_4_writeBackGPR_T_11 : @[utils.scala 10:20]
                          debugFIFO_4_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_4_writeBackGPR_T_12 = eq(UInt<7>("h73"), _debugFIFO_4_writeBackGPR_T) @[utils.scala 10:20]
                          when _debugFIFO_4_writeBackGPR_T_12 : @[utils.scala 10:20]
                            debugFIFO_4_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_4_writeBackGPR_T_13 = eq(UInt<4>("hf"), _debugFIFO_4_writeBackGPR_T) @[utils.scala 10:20]
                            when _debugFIFO_4_writeBackGPR_T_13 : @[utils.scala 10:20]
                              debugFIFO_4_writeBackGPR_insType <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_4_writeBackGPR_T_14 = eq(UInt<6>("h2f"), _debugFIFO_4_writeBackGPR_T) @[utils.scala 10:20]
                              when _debugFIFO_4_writeBackGPR_T_14 : @[utils.scala 10:20]
                                debugFIFO_4_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_4_writeBackGPR_T_15 = eq(UInt<1>("h1"), debugFIFO_4_writeBackGPR_insType) @[rob.scala 52:141]
    node _debugFIFO_4_writeBackGPR_T_16 = bits(debugFIFO[4].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_4_writeBackGPR_insType_1 : UInt<3>
    debugFIFO_4_writeBackGPR_insType_1 <= UInt<3>("h0")
    node _debugFIFO_4_writeBackGPR_T_17 = eq(UInt<6>("h37"), _debugFIFO_4_writeBackGPR_T_16) @[utils.scala 10:20]
    when _debugFIFO_4_writeBackGPR_T_17 : @[utils.scala 10:20]
      debugFIFO_4_writeBackGPR_insType_1 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_4_writeBackGPR_T_18 = eq(UInt<5>("h17"), _debugFIFO_4_writeBackGPR_T_16) @[utils.scala 10:20]
      when _debugFIFO_4_writeBackGPR_T_18 : @[utils.scala 10:20]
        debugFIFO_4_writeBackGPR_insType_1 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_4_writeBackGPR_T_19 = eq(UInt<7>("h6f"), _debugFIFO_4_writeBackGPR_T_16) @[utils.scala 10:20]
        when _debugFIFO_4_writeBackGPR_T_19 : @[utils.scala 10:20]
          debugFIFO_4_writeBackGPR_insType_1 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_4_writeBackGPR_T_20 = eq(UInt<7>("h67"), _debugFIFO_4_writeBackGPR_T_16) @[utils.scala 10:20]
          when _debugFIFO_4_writeBackGPR_T_20 : @[utils.scala 10:20]
            debugFIFO_4_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_4_writeBackGPR_T_21 = eq(UInt<7>("h63"), _debugFIFO_4_writeBackGPR_T_16) @[utils.scala 10:20]
            when _debugFIFO_4_writeBackGPR_T_21 : @[utils.scala 10:20]
              debugFIFO_4_writeBackGPR_insType_1 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_4_writeBackGPR_T_22 = eq(UInt<2>("h3"), _debugFIFO_4_writeBackGPR_T_16) @[utils.scala 10:20]
              when _debugFIFO_4_writeBackGPR_T_22 : @[utils.scala 10:20]
                debugFIFO_4_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_4_writeBackGPR_T_23 = eq(UInt<6>("h23"), _debugFIFO_4_writeBackGPR_T_16) @[utils.scala 10:20]
                when _debugFIFO_4_writeBackGPR_T_23 : @[utils.scala 10:20]
                  debugFIFO_4_writeBackGPR_insType_1 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_4_writeBackGPR_T_24 = eq(UInt<5>("h13"), _debugFIFO_4_writeBackGPR_T_16) @[utils.scala 10:20]
                  when _debugFIFO_4_writeBackGPR_T_24 : @[utils.scala 10:20]
                    debugFIFO_4_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_4_writeBackGPR_T_25 = eq(UInt<5>("h1b"), _debugFIFO_4_writeBackGPR_T_16) @[utils.scala 10:20]
                    when _debugFIFO_4_writeBackGPR_T_25 : @[utils.scala 10:20]
                      debugFIFO_4_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_4_writeBackGPR_T_26 = eq(UInt<6>("h33"), _debugFIFO_4_writeBackGPR_T_16) @[utils.scala 10:20]
                      when _debugFIFO_4_writeBackGPR_T_26 : @[utils.scala 10:20]
                        debugFIFO_4_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_4_writeBackGPR_T_27 = eq(UInt<6>("h3b"), _debugFIFO_4_writeBackGPR_T_16) @[utils.scala 10:20]
                        when _debugFIFO_4_writeBackGPR_T_27 : @[utils.scala 10:20]
                          debugFIFO_4_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_4_writeBackGPR_T_28 = eq(UInt<7>("h73"), _debugFIFO_4_writeBackGPR_T_16) @[utils.scala 10:20]
                          when _debugFIFO_4_writeBackGPR_T_28 : @[utils.scala 10:20]
                            debugFIFO_4_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_4_writeBackGPR_T_29 = eq(UInt<4>("hf"), _debugFIFO_4_writeBackGPR_T_16) @[utils.scala 10:20]
                            when _debugFIFO_4_writeBackGPR_T_29 : @[utils.scala 10:20]
                              debugFIFO_4_writeBackGPR_insType_1 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_4_writeBackGPR_T_30 = eq(UInt<6>("h2f"), _debugFIFO_4_writeBackGPR_T_16) @[utils.scala 10:20]
                              when _debugFIFO_4_writeBackGPR_T_30 : @[utils.scala 10:20]
                                debugFIFO_4_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_4_writeBackGPR_T_31 = eq(UInt<1>("h0"), debugFIFO_4_writeBackGPR_insType_1) @[rob.scala 52:141]
    node _debugFIFO_4_writeBackGPR_T_32 = bits(debugFIFO[4].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_4_writeBackGPR_insType_2 : UInt<3>
    debugFIFO_4_writeBackGPR_insType_2 <= UInt<3>("h0")
    node _debugFIFO_4_writeBackGPR_T_33 = eq(UInt<6>("h37"), _debugFIFO_4_writeBackGPR_T_32) @[utils.scala 10:20]
    when _debugFIFO_4_writeBackGPR_T_33 : @[utils.scala 10:20]
      debugFIFO_4_writeBackGPR_insType_2 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_4_writeBackGPR_T_34 = eq(UInt<5>("h17"), _debugFIFO_4_writeBackGPR_T_32) @[utils.scala 10:20]
      when _debugFIFO_4_writeBackGPR_T_34 : @[utils.scala 10:20]
        debugFIFO_4_writeBackGPR_insType_2 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_4_writeBackGPR_T_35 = eq(UInt<7>("h6f"), _debugFIFO_4_writeBackGPR_T_32) @[utils.scala 10:20]
        when _debugFIFO_4_writeBackGPR_T_35 : @[utils.scala 10:20]
          debugFIFO_4_writeBackGPR_insType_2 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_4_writeBackGPR_T_36 = eq(UInt<7>("h67"), _debugFIFO_4_writeBackGPR_T_32) @[utils.scala 10:20]
          when _debugFIFO_4_writeBackGPR_T_36 : @[utils.scala 10:20]
            debugFIFO_4_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_4_writeBackGPR_T_37 = eq(UInt<7>("h63"), _debugFIFO_4_writeBackGPR_T_32) @[utils.scala 10:20]
            when _debugFIFO_4_writeBackGPR_T_37 : @[utils.scala 10:20]
              debugFIFO_4_writeBackGPR_insType_2 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_4_writeBackGPR_T_38 = eq(UInt<2>("h3"), _debugFIFO_4_writeBackGPR_T_32) @[utils.scala 10:20]
              when _debugFIFO_4_writeBackGPR_T_38 : @[utils.scala 10:20]
                debugFIFO_4_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_4_writeBackGPR_T_39 = eq(UInt<6>("h23"), _debugFIFO_4_writeBackGPR_T_32) @[utils.scala 10:20]
                when _debugFIFO_4_writeBackGPR_T_39 : @[utils.scala 10:20]
                  debugFIFO_4_writeBackGPR_insType_2 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_4_writeBackGPR_T_40 = eq(UInt<5>("h13"), _debugFIFO_4_writeBackGPR_T_32) @[utils.scala 10:20]
                  when _debugFIFO_4_writeBackGPR_T_40 : @[utils.scala 10:20]
                    debugFIFO_4_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_4_writeBackGPR_T_41 = eq(UInt<5>("h1b"), _debugFIFO_4_writeBackGPR_T_32) @[utils.scala 10:20]
                    when _debugFIFO_4_writeBackGPR_T_41 : @[utils.scala 10:20]
                      debugFIFO_4_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_4_writeBackGPR_T_42 = eq(UInt<6>("h33"), _debugFIFO_4_writeBackGPR_T_32) @[utils.scala 10:20]
                      when _debugFIFO_4_writeBackGPR_T_42 : @[utils.scala 10:20]
                        debugFIFO_4_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_4_writeBackGPR_T_43 = eq(UInt<6>("h3b"), _debugFIFO_4_writeBackGPR_T_32) @[utils.scala 10:20]
                        when _debugFIFO_4_writeBackGPR_T_43 : @[utils.scala 10:20]
                          debugFIFO_4_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_4_writeBackGPR_T_44 = eq(UInt<7>("h73"), _debugFIFO_4_writeBackGPR_T_32) @[utils.scala 10:20]
                          when _debugFIFO_4_writeBackGPR_T_44 : @[utils.scala 10:20]
                            debugFIFO_4_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_4_writeBackGPR_T_45 = eq(UInt<4>("hf"), _debugFIFO_4_writeBackGPR_T_32) @[utils.scala 10:20]
                            when _debugFIFO_4_writeBackGPR_T_45 : @[utils.scala 10:20]
                              debugFIFO_4_writeBackGPR_insType_2 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_4_writeBackGPR_T_46 = eq(UInt<6>("h2f"), _debugFIFO_4_writeBackGPR_T_32) @[utils.scala 10:20]
                              when _debugFIFO_4_writeBackGPR_T_46 : @[utils.scala 10:20]
                                debugFIFO_4_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_4_writeBackGPR_T_47 = eq(UInt<3>("h4"), debugFIFO_4_writeBackGPR_insType_2) @[rob.scala 52:141]
    node _debugFIFO_4_writeBackGPR_T_48 = bits(debugFIFO[4].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_4_writeBackGPR_insType_3 : UInt<3>
    debugFIFO_4_writeBackGPR_insType_3 <= UInt<3>("h0")
    node _debugFIFO_4_writeBackGPR_T_49 = eq(UInt<6>("h37"), _debugFIFO_4_writeBackGPR_T_48) @[utils.scala 10:20]
    when _debugFIFO_4_writeBackGPR_T_49 : @[utils.scala 10:20]
      debugFIFO_4_writeBackGPR_insType_3 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_4_writeBackGPR_T_50 = eq(UInt<5>("h17"), _debugFIFO_4_writeBackGPR_T_48) @[utils.scala 10:20]
      when _debugFIFO_4_writeBackGPR_T_50 : @[utils.scala 10:20]
        debugFIFO_4_writeBackGPR_insType_3 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_4_writeBackGPR_T_51 = eq(UInt<7>("h6f"), _debugFIFO_4_writeBackGPR_T_48) @[utils.scala 10:20]
        when _debugFIFO_4_writeBackGPR_T_51 : @[utils.scala 10:20]
          debugFIFO_4_writeBackGPR_insType_3 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_4_writeBackGPR_T_52 = eq(UInt<7>("h67"), _debugFIFO_4_writeBackGPR_T_48) @[utils.scala 10:20]
          when _debugFIFO_4_writeBackGPR_T_52 : @[utils.scala 10:20]
            debugFIFO_4_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_4_writeBackGPR_T_53 = eq(UInt<7>("h63"), _debugFIFO_4_writeBackGPR_T_48) @[utils.scala 10:20]
            when _debugFIFO_4_writeBackGPR_T_53 : @[utils.scala 10:20]
              debugFIFO_4_writeBackGPR_insType_3 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_4_writeBackGPR_T_54 = eq(UInt<2>("h3"), _debugFIFO_4_writeBackGPR_T_48) @[utils.scala 10:20]
              when _debugFIFO_4_writeBackGPR_T_54 : @[utils.scala 10:20]
                debugFIFO_4_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_4_writeBackGPR_T_55 = eq(UInt<6>("h23"), _debugFIFO_4_writeBackGPR_T_48) @[utils.scala 10:20]
                when _debugFIFO_4_writeBackGPR_T_55 : @[utils.scala 10:20]
                  debugFIFO_4_writeBackGPR_insType_3 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_4_writeBackGPR_T_56 = eq(UInt<5>("h13"), _debugFIFO_4_writeBackGPR_T_48) @[utils.scala 10:20]
                  when _debugFIFO_4_writeBackGPR_T_56 : @[utils.scala 10:20]
                    debugFIFO_4_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_4_writeBackGPR_T_57 = eq(UInt<5>("h1b"), _debugFIFO_4_writeBackGPR_T_48) @[utils.scala 10:20]
                    when _debugFIFO_4_writeBackGPR_T_57 : @[utils.scala 10:20]
                      debugFIFO_4_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_4_writeBackGPR_T_58 = eq(UInt<6>("h33"), _debugFIFO_4_writeBackGPR_T_48) @[utils.scala 10:20]
                      when _debugFIFO_4_writeBackGPR_T_58 : @[utils.scala 10:20]
                        debugFIFO_4_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_4_writeBackGPR_T_59 = eq(UInt<6>("h3b"), _debugFIFO_4_writeBackGPR_T_48) @[utils.scala 10:20]
                        when _debugFIFO_4_writeBackGPR_T_59 : @[utils.scala 10:20]
                          debugFIFO_4_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_4_writeBackGPR_T_60 = eq(UInt<7>("h73"), _debugFIFO_4_writeBackGPR_T_48) @[utils.scala 10:20]
                          when _debugFIFO_4_writeBackGPR_T_60 : @[utils.scala 10:20]
                            debugFIFO_4_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_4_writeBackGPR_T_61 = eq(UInt<4>("hf"), _debugFIFO_4_writeBackGPR_T_48) @[utils.scala 10:20]
                            when _debugFIFO_4_writeBackGPR_T_61 : @[utils.scala 10:20]
                              debugFIFO_4_writeBackGPR_insType_3 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_4_writeBackGPR_T_62 = eq(UInt<6>("h2f"), _debugFIFO_4_writeBackGPR_T_48) @[utils.scala 10:20]
                              when _debugFIFO_4_writeBackGPR_T_62 : @[utils.scala 10:20]
                                debugFIFO_4_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_4_writeBackGPR_T_63 = eq(UInt<3>("h5"), debugFIFO_4_writeBackGPR_insType_3) @[rob.scala 52:141]
    node _debugFIFO_4_writeBackGPR_T_64 = or(_debugFIFO_4_writeBackGPR_T_15, _debugFIFO_4_writeBackGPR_T_31) @[rob.scala 52:197]
    node _debugFIFO_4_writeBackGPR_T_65 = or(_debugFIFO_4_writeBackGPR_T_64, _debugFIFO_4_writeBackGPR_T_47) @[rob.scala 52:197]
    node _debugFIFO_4_writeBackGPR_T_66 = or(_debugFIFO_4_writeBackGPR_T_65, _debugFIFO_4_writeBackGPR_T_63) @[rob.scala 52:197]
    node _debugFIFO_4_writeBackGPR_T_67 = bits(debugFIFO[4].instruction, 11, 7) @[rob.scala 52:223]
    node _debugFIFO_4_writeBackGPR_T_68 = orr(_debugFIFO_4_writeBackGPR_T_67) @[rob.scala 52:231]
    node _debugFIFO_4_writeBackGPR_T_69 = and(_debugFIFO_4_writeBackGPR_T_66, _debugFIFO_4_writeBackGPR_T_68) @[rob.scala 52:203]
    node _debugFIFO_4_writeBackGPR_T_70 = and(_debugFIFO_4_writeBackGPR_T_69, debugFIFO[4].valid) @[rob.scala 52:235]
    debugFIFO[4].writeBackGPR <= _debugFIFO_4_writeBackGPR_T_70 @[rob.scala 52:52]
    node _debugFIFO_5_writeBackGPR_T = bits(debugFIFO[5].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_5_writeBackGPR_insType : UInt<3>
    debugFIFO_5_writeBackGPR_insType <= UInt<3>("h0")
    node _debugFIFO_5_writeBackGPR_T_1 = eq(UInt<6>("h37"), _debugFIFO_5_writeBackGPR_T) @[utils.scala 10:20]
    when _debugFIFO_5_writeBackGPR_T_1 : @[utils.scala 10:20]
      debugFIFO_5_writeBackGPR_insType <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_5_writeBackGPR_T_2 = eq(UInt<5>("h17"), _debugFIFO_5_writeBackGPR_T) @[utils.scala 10:20]
      when _debugFIFO_5_writeBackGPR_T_2 : @[utils.scala 10:20]
        debugFIFO_5_writeBackGPR_insType <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_5_writeBackGPR_T_3 = eq(UInt<7>("h6f"), _debugFIFO_5_writeBackGPR_T) @[utils.scala 10:20]
        when _debugFIFO_5_writeBackGPR_T_3 : @[utils.scala 10:20]
          debugFIFO_5_writeBackGPR_insType <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_5_writeBackGPR_T_4 = eq(UInt<7>("h67"), _debugFIFO_5_writeBackGPR_T) @[utils.scala 10:20]
          when _debugFIFO_5_writeBackGPR_T_4 : @[utils.scala 10:20]
            debugFIFO_5_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_5_writeBackGPR_T_5 = eq(UInt<7>("h63"), _debugFIFO_5_writeBackGPR_T) @[utils.scala 10:20]
            when _debugFIFO_5_writeBackGPR_T_5 : @[utils.scala 10:20]
              debugFIFO_5_writeBackGPR_insType <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_5_writeBackGPR_T_6 = eq(UInt<2>("h3"), _debugFIFO_5_writeBackGPR_T) @[utils.scala 10:20]
              when _debugFIFO_5_writeBackGPR_T_6 : @[utils.scala 10:20]
                debugFIFO_5_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_5_writeBackGPR_T_7 = eq(UInt<6>("h23"), _debugFIFO_5_writeBackGPR_T) @[utils.scala 10:20]
                when _debugFIFO_5_writeBackGPR_T_7 : @[utils.scala 10:20]
                  debugFIFO_5_writeBackGPR_insType <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_5_writeBackGPR_T_8 = eq(UInt<5>("h13"), _debugFIFO_5_writeBackGPR_T) @[utils.scala 10:20]
                  when _debugFIFO_5_writeBackGPR_T_8 : @[utils.scala 10:20]
                    debugFIFO_5_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_5_writeBackGPR_T_9 = eq(UInt<5>("h1b"), _debugFIFO_5_writeBackGPR_T) @[utils.scala 10:20]
                    when _debugFIFO_5_writeBackGPR_T_9 : @[utils.scala 10:20]
                      debugFIFO_5_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_5_writeBackGPR_T_10 = eq(UInt<6>("h33"), _debugFIFO_5_writeBackGPR_T) @[utils.scala 10:20]
                      when _debugFIFO_5_writeBackGPR_T_10 : @[utils.scala 10:20]
                        debugFIFO_5_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_5_writeBackGPR_T_11 = eq(UInt<6>("h3b"), _debugFIFO_5_writeBackGPR_T) @[utils.scala 10:20]
                        when _debugFIFO_5_writeBackGPR_T_11 : @[utils.scala 10:20]
                          debugFIFO_5_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_5_writeBackGPR_T_12 = eq(UInt<7>("h73"), _debugFIFO_5_writeBackGPR_T) @[utils.scala 10:20]
                          when _debugFIFO_5_writeBackGPR_T_12 : @[utils.scala 10:20]
                            debugFIFO_5_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_5_writeBackGPR_T_13 = eq(UInt<4>("hf"), _debugFIFO_5_writeBackGPR_T) @[utils.scala 10:20]
                            when _debugFIFO_5_writeBackGPR_T_13 : @[utils.scala 10:20]
                              debugFIFO_5_writeBackGPR_insType <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_5_writeBackGPR_T_14 = eq(UInt<6>("h2f"), _debugFIFO_5_writeBackGPR_T) @[utils.scala 10:20]
                              when _debugFIFO_5_writeBackGPR_T_14 : @[utils.scala 10:20]
                                debugFIFO_5_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_5_writeBackGPR_T_15 = eq(UInt<1>("h1"), debugFIFO_5_writeBackGPR_insType) @[rob.scala 52:141]
    node _debugFIFO_5_writeBackGPR_T_16 = bits(debugFIFO[5].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_5_writeBackGPR_insType_1 : UInt<3>
    debugFIFO_5_writeBackGPR_insType_1 <= UInt<3>("h0")
    node _debugFIFO_5_writeBackGPR_T_17 = eq(UInt<6>("h37"), _debugFIFO_5_writeBackGPR_T_16) @[utils.scala 10:20]
    when _debugFIFO_5_writeBackGPR_T_17 : @[utils.scala 10:20]
      debugFIFO_5_writeBackGPR_insType_1 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_5_writeBackGPR_T_18 = eq(UInt<5>("h17"), _debugFIFO_5_writeBackGPR_T_16) @[utils.scala 10:20]
      when _debugFIFO_5_writeBackGPR_T_18 : @[utils.scala 10:20]
        debugFIFO_5_writeBackGPR_insType_1 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_5_writeBackGPR_T_19 = eq(UInt<7>("h6f"), _debugFIFO_5_writeBackGPR_T_16) @[utils.scala 10:20]
        when _debugFIFO_5_writeBackGPR_T_19 : @[utils.scala 10:20]
          debugFIFO_5_writeBackGPR_insType_1 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_5_writeBackGPR_T_20 = eq(UInt<7>("h67"), _debugFIFO_5_writeBackGPR_T_16) @[utils.scala 10:20]
          when _debugFIFO_5_writeBackGPR_T_20 : @[utils.scala 10:20]
            debugFIFO_5_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_5_writeBackGPR_T_21 = eq(UInt<7>("h63"), _debugFIFO_5_writeBackGPR_T_16) @[utils.scala 10:20]
            when _debugFIFO_5_writeBackGPR_T_21 : @[utils.scala 10:20]
              debugFIFO_5_writeBackGPR_insType_1 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_5_writeBackGPR_T_22 = eq(UInt<2>("h3"), _debugFIFO_5_writeBackGPR_T_16) @[utils.scala 10:20]
              when _debugFIFO_5_writeBackGPR_T_22 : @[utils.scala 10:20]
                debugFIFO_5_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_5_writeBackGPR_T_23 = eq(UInt<6>("h23"), _debugFIFO_5_writeBackGPR_T_16) @[utils.scala 10:20]
                when _debugFIFO_5_writeBackGPR_T_23 : @[utils.scala 10:20]
                  debugFIFO_5_writeBackGPR_insType_1 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_5_writeBackGPR_T_24 = eq(UInt<5>("h13"), _debugFIFO_5_writeBackGPR_T_16) @[utils.scala 10:20]
                  when _debugFIFO_5_writeBackGPR_T_24 : @[utils.scala 10:20]
                    debugFIFO_5_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_5_writeBackGPR_T_25 = eq(UInt<5>("h1b"), _debugFIFO_5_writeBackGPR_T_16) @[utils.scala 10:20]
                    when _debugFIFO_5_writeBackGPR_T_25 : @[utils.scala 10:20]
                      debugFIFO_5_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_5_writeBackGPR_T_26 = eq(UInt<6>("h33"), _debugFIFO_5_writeBackGPR_T_16) @[utils.scala 10:20]
                      when _debugFIFO_5_writeBackGPR_T_26 : @[utils.scala 10:20]
                        debugFIFO_5_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_5_writeBackGPR_T_27 = eq(UInt<6>("h3b"), _debugFIFO_5_writeBackGPR_T_16) @[utils.scala 10:20]
                        when _debugFIFO_5_writeBackGPR_T_27 : @[utils.scala 10:20]
                          debugFIFO_5_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_5_writeBackGPR_T_28 = eq(UInt<7>("h73"), _debugFIFO_5_writeBackGPR_T_16) @[utils.scala 10:20]
                          when _debugFIFO_5_writeBackGPR_T_28 : @[utils.scala 10:20]
                            debugFIFO_5_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_5_writeBackGPR_T_29 = eq(UInt<4>("hf"), _debugFIFO_5_writeBackGPR_T_16) @[utils.scala 10:20]
                            when _debugFIFO_5_writeBackGPR_T_29 : @[utils.scala 10:20]
                              debugFIFO_5_writeBackGPR_insType_1 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_5_writeBackGPR_T_30 = eq(UInt<6>("h2f"), _debugFIFO_5_writeBackGPR_T_16) @[utils.scala 10:20]
                              when _debugFIFO_5_writeBackGPR_T_30 : @[utils.scala 10:20]
                                debugFIFO_5_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_5_writeBackGPR_T_31 = eq(UInt<1>("h0"), debugFIFO_5_writeBackGPR_insType_1) @[rob.scala 52:141]
    node _debugFIFO_5_writeBackGPR_T_32 = bits(debugFIFO[5].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_5_writeBackGPR_insType_2 : UInt<3>
    debugFIFO_5_writeBackGPR_insType_2 <= UInt<3>("h0")
    node _debugFIFO_5_writeBackGPR_T_33 = eq(UInt<6>("h37"), _debugFIFO_5_writeBackGPR_T_32) @[utils.scala 10:20]
    when _debugFIFO_5_writeBackGPR_T_33 : @[utils.scala 10:20]
      debugFIFO_5_writeBackGPR_insType_2 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_5_writeBackGPR_T_34 = eq(UInt<5>("h17"), _debugFIFO_5_writeBackGPR_T_32) @[utils.scala 10:20]
      when _debugFIFO_5_writeBackGPR_T_34 : @[utils.scala 10:20]
        debugFIFO_5_writeBackGPR_insType_2 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_5_writeBackGPR_T_35 = eq(UInt<7>("h6f"), _debugFIFO_5_writeBackGPR_T_32) @[utils.scala 10:20]
        when _debugFIFO_5_writeBackGPR_T_35 : @[utils.scala 10:20]
          debugFIFO_5_writeBackGPR_insType_2 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_5_writeBackGPR_T_36 = eq(UInt<7>("h67"), _debugFIFO_5_writeBackGPR_T_32) @[utils.scala 10:20]
          when _debugFIFO_5_writeBackGPR_T_36 : @[utils.scala 10:20]
            debugFIFO_5_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_5_writeBackGPR_T_37 = eq(UInt<7>("h63"), _debugFIFO_5_writeBackGPR_T_32) @[utils.scala 10:20]
            when _debugFIFO_5_writeBackGPR_T_37 : @[utils.scala 10:20]
              debugFIFO_5_writeBackGPR_insType_2 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_5_writeBackGPR_T_38 = eq(UInt<2>("h3"), _debugFIFO_5_writeBackGPR_T_32) @[utils.scala 10:20]
              when _debugFIFO_5_writeBackGPR_T_38 : @[utils.scala 10:20]
                debugFIFO_5_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_5_writeBackGPR_T_39 = eq(UInt<6>("h23"), _debugFIFO_5_writeBackGPR_T_32) @[utils.scala 10:20]
                when _debugFIFO_5_writeBackGPR_T_39 : @[utils.scala 10:20]
                  debugFIFO_5_writeBackGPR_insType_2 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_5_writeBackGPR_T_40 = eq(UInt<5>("h13"), _debugFIFO_5_writeBackGPR_T_32) @[utils.scala 10:20]
                  when _debugFIFO_5_writeBackGPR_T_40 : @[utils.scala 10:20]
                    debugFIFO_5_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_5_writeBackGPR_T_41 = eq(UInt<5>("h1b"), _debugFIFO_5_writeBackGPR_T_32) @[utils.scala 10:20]
                    when _debugFIFO_5_writeBackGPR_T_41 : @[utils.scala 10:20]
                      debugFIFO_5_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_5_writeBackGPR_T_42 = eq(UInt<6>("h33"), _debugFIFO_5_writeBackGPR_T_32) @[utils.scala 10:20]
                      when _debugFIFO_5_writeBackGPR_T_42 : @[utils.scala 10:20]
                        debugFIFO_5_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_5_writeBackGPR_T_43 = eq(UInt<6>("h3b"), _debugFIFO_5_writeBackGPR_T_32) @[utils.scala 10:20]
                        when _debugFIFO_5_writeBackGPR_T_43 : @[utils.scala 10:20]
                          debugFIFO_5_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_5_writeBackGPR_T_44 = eq(UInt<7>("h73"), _debugFIFO_5_writeBackGPR_T_32) @[utils.scala 10:20]
                          when _debugFIFO_5_writeBackGPR_T_44 : @[utils.scala 10:20]
                            debugFIFO_5_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_5_writeBackGPR_T_45 = eq(UInt<4>("hf"), _debugFIFO_5_writeBackGPR_T_32) @[utils.scala 10:20]
                            when _debugFIFO_5_writeBackGPR_T_45 : @[utils.scala 10:20]
                              debugFIFO_5_writeBackGPR_insType_2 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_5_writeBackGPR_T_46 = eq(UInt<6>("h2f"), _debugFIFO_5_writeBackGPR_T_32) @[utils.scala 10:20]
                              when _debugFIFO_5_writeBackGPR_T_46 : @[utils.scala 10:20]
                                debugFIFO_5_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_5_writeBackGPR_T_47 = eq(UInt<3>("h4"), debugFIFO_5_writeBackGPR_insType_2) @[rob.scala 52:141]
    node _debugFIFO_5_writeBackGPR_T_48 = bits(debugFIFO[5].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_5_writeBackGPR_insType_3 : UInt<3>
    debugFIFO_5_writeBackGPR_insType_3 <= UInt<3>("h0")
    node _debugFIFO_5_writeBackGPR_T_49 = eq(UInt<6>("h37"), _debugFIFO_5_writeBackGPR_T_48) @[utils.scala 10:20]
    when _debugFIFO_5_writeBackGPR_T_49 : @[utils.scala 10:20]
      debugFIFO_5_writeBackGPR_insType_3 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_5_writeBackGPR_T_50 = eq(UInt<5>("h17"), _debugFIFO_5_writeBackGPR_T_48) @[utils.scala 10:20]
      when _debugFIFO_5_writeBackGPR_T_50 : @[utils.scala 10:20]
        debugFIFO_5_writeBackGPR_insType_3 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_5_writeBackGPR_T_51 = eq(UInt<7>("h6f"), _debugFIFO_5_writeBackGPR_T_48) @[utils.scala 10:20]
        when _debugFIFO_5_writeBackGPR_T_51 : @[utils.scala 10:20]
          debugFIFO_5_writeBackGPR_insType_3 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_5_writeBackGPR_T_52 = eq(UInt<7>("h67"), _debugFIFO_5_writeBackGPR_T_48) @[utils.scala 10:20]
          when _debugFIFO_5_writeBackGPR_T_52 : @[utils.scala 10:20]
            debugFIFO_5_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_5_writeBackGPR_T_53 = eq(UInt<7>("h63"), _debugFIFO_5_writeBackGPR_T_48) @[utils.scala 10:20]
            when _debugFIFO_5_writeBackGPR_T_53 : @[utils.scala 10:20]
              debugFIFO_5_writeBackGPR_insType_3 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_5_writeBackGPR_T_54 = eq(UInt<2>("h3"), _debugFIFO_5_writeBackGPR_T_48) @[utils.scala 10:20]
              when _debugFIFO_5_writeBackGPR_T_54 : @[utils.scala 10:20]
                debugFIFO_5_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_5_writeBackGPR_T_55 = eq(UInt<6>("h23"), _debugFIFO_5_writeBackGPR_T_48) @[utils.scala 10:20]
                when _debugFIFO_5_writeBackGPR_T_55 : @[utils.scala 10:20]
                  debugFIFO_5_writeBackGPR_insType_3 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_5_writeBackGPR_T_56 = eq(UInt<5>("h13"), _debugFIFO_5_writeBackGPR_T_48) @[utils.scala 10:20]
                  when _debugFIFO_5_writeBackGPR_T_56 : @[utils.scala 10:20]
                    debugFIFO_5_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_5_writeBackGPR_T_57 = eq(UInt<5>("h1b"), _debugFIFO_5_writeBackGPR_T_48) @[utils.scala 10:20]
                    when _debugFIFO_5_writeBackGPR_T_57 : @[utils.scala 10:20]
                      debugFIFO_5_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_5_writeBackGPR_T_58 = eq(UInt<6>("h33"), _debugFIFO_5_writeBackGPR_T_48) @[utils.scala 10:20]
                      when _debugFIFO_5_writeBackGPR_T_58 : @[utils.scala 10:20]
                        debugFIFO_5_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_5_writeBackGPR_T_59 = eq(UInt<6>("h3b"), _debugFIFO_5_writeBackGPR_T_48) @[utils.scala 10:20]
                        when _debugFIFO_5_writeBackGPR_T_59 : @[utils.scala 10:20]
                          debugFIFO_5_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_5_writeBackGPR_T_60 = eq(UInt<7>("h73"), _debugFIFO_5_writeBackGPR_T_48) @[utils.scala 10:20]
                          when _debugFIFO_5_writeBackGPR_T_60 : @[utils.scala 10:20]
                            debugFIFO_5_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_5_writeBackGPR_T_61 = eq(UInt<4>("hf"), _debugFIFO_5_writeBackGPR_T_48) @[utils.scala 10:20]
                            when _debugFIFO_5_writeBackGPR_T_61 : @[utils.scala 10:20]
                              debugFIFO_5_writeBackGPR_insType_3 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_5_writeBackGPR_T_62 = eq(UInt<6>("h2f"), _debugFIFO_5_writeBackGPR_T_48) @[utils.scala 10:20]
                              when _debugFIFO_5_writeBackGPR_T_62 : @[utils.scala 10:20]
                                debugFIFO_5_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_5_writeBackGPR_T_63 = eq(UInt<3>("h5"), debugFIFO_5_writeBackGPR_insType_3) @[rob.scala 52:141]
    node _debugFIFO_5_writeBackGPR_T_64 = or(_debugFIFO_5_writeBackGPR_T_15, _debugFIFO_5_writeBackGPR_T_31) @[rob.scala 52:197]
    node _debugFIFO_5_writeBackGPR_T_65 = or(_debugFIFO_5_writeBackGPR_T_64, _debugFIFO_5_writeBackGPR_T_47) @[rob.scala 52:197]
    node _debugFIFO_5_writeBackGPR_T_66 = or(_debugFIFO_5_writeBackGPR_T_65, _debugFIFO_5_writeBackGPR_T_63) @[rob.scala 52:197]
    node _debugFIFO_5_writeBackGPR_T_67 = bits(debugFIFO[5].instruction, 11, 7) @[rob.scala 52:223]
    node _debugFIFO_5_writeBackGPR_T_68 = orr(_debugFIFO_5_writeBackGPR_T_67) @[rob.scala 52:231]
    node _debugFIFO_5_writeBackGPR_T_69 = and(_debugFIFO_5_writeBackGPR_T_66, _debugFIFO_5_writeBackGPR_T_68) @[rob.scala 52:203]
    node _debugFIFO_5_writeBackGPR_T_70 = and(_debugFIFO_5_writeBackGPR_T_69, debugFIFO[5].valid) @[rob.scala 52:235]
    debugFIFO[5].writeBackGPR <= _debugFIFO_5_writeBackGPR_T_70 @[rob.scala 52:52]
    node _debugFIFO_6_writeBackGPR_T = bits(debugFIFO[6].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_6_writeBackGPR_insType : UInt<3>
    debugFIFO_6_writeBackGPR_insType <= UInt<3>("h0")
    node _debugFIFO_6_writeBackGPR_T_1 = eq(UInt<6>("h37"), _debugFIFO_6_writeBackGPR_T) @[utils.scala 10:20]
    when _debugFIFO_6_writeBackGPR_T_1 : @[utils.scala 10:20]
      debugFIFO_6_writeBackGPR_insType <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_6_writeBackGPR_T_2 = eq(UInt<5>("h17"), _debugFIFO_6_writeBackGPR_T) @[utils.scala 10:20]
      when _debugFIFO_6_writeBackGPR_T_2 : @[utils.scala 10:20]
        debugFIFO_6_writeBackGPR_insType <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_6_writeBackGPR_T_3 = eq(UInt<7>("h6f"), _debugFIFO_6_writeBackGPR_T) @[utils.scala 10:20]
        when _debugFIFO_6_writeBackGPR_T_3 : @[utils.scala 10:20]
          debugFIFO_6_writeBackGPR_insType <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_6_writeBackGPR_T_4 = eq(UInt<7>("h67"), _debugFIFO_6_writeBackGPR_T) @[utils.scala 10:20]
          when _debugFIFO_6_writeBackGPR_T_4 : @[utils.scala 10:20]
            debugFIFO_6_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_6_writeBackGPR_T_5 = eq(UInt<7>("h63"), _debugFIFO_6_writeBackGPR_T) @[utils.scala 10:20]
            when _debugFIFO_6_writeBackGPR_T_5 : @[utils.scala 10:20]
              debugFIFO_6_writeBackGPR_insType <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_6_writeBackGPR_T_6 = eq(UInt<2>("h3"), _debugFIFO_6_writeBackGPR_T) @[utils.scala 10:20]
              when _debugFIFO_6_writeBackGPR_T_6 : @[utils.scala 10:20]
                debugFIFO_6_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_6_writeBackGPR_T_7 = eq(UInt<6>("h23"), _debugFIFO_6_writeBackGPR_T) @[utils.scala 10:20]
                when _debugFIFO_6_writeBackGPR_T_7 : @[utils.scala 10:20]
                  debugFIFO_6_writeBackGPR_insType <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_6_writeBackGPR_T_8 = eq(UInt<5>("h13"), _debugFIFO_6_writeBackGPR_T) @[utils.scala 10:20]
                  when _debugFIFO_6_writeBackGPR_T_8 : @[utils.scala 10:20]
                    debugFIFO_6_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_6_writeBackGPR_T_9 = eq(UInt<5>("h1b"), _debugFIFO_6_writeBackGPR_T) @[utils.scala 10:20]
                    when _debugFIFO_6_writeBackGPR_T_9 : @[utils.scala 10:20]
                      debugFIFO_6_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_6_writeBackGPR_T_10 = eq(UInt<6>("h33"), _debugFIFO_6_writeBackGPR_T) @[utils.scala 10:20]
                      when _debugFIFO_6_writeBackGPR_T_10 : @[utils.scala 10:20]
                        debugFIFO_6_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_6_writeBackGPR_T_11 = eq(UInt<6>("h3b"), _debugFIFO_6_writeBackGPR_T) @[utils.scala 10:20]
                        when _debugFIFO_6_writeBackGPR_T_11 : @[utils.scala 10:20]
                          debugFIFO_6_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_6_writeBackGPR_T_12 = eq(UInt<7>("h73"), _debugFIFO_6_writeBackGPR_T) @[utils.scala 10:20]
                          when _debugFIFO_6_writeBackGPR_T_12 : @[utils.scala 10:20]
                            debugFIFO_6_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_6_writeBackGPR_T_13 = eq(UInt<4>("hf"), _debugFIFO_6_writeBackGPR_T) @[utils.scala 10:20]
                            when _debugFIFO_6_writeBackGPR_T_13 : @[utils.scala 10:20]
                              debugFIFO_6_writeBackGPR_insType <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_6_writeBackGPR_T_14 = eq(UInt<6>("h2f"), _debugFIFO_6_writeBackGPR_T) @[utils.scala 10:20]
                              when _debugFIFO_6_writeBackGPR_T_14 : @[utils.scala 10:20]
                                debugFIFO_6_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_6_writeBackGPR_T_15 = eq(UInt<1>("h1"), debugFIFO_6_writeBackGPR_insType) @[rob.scala 52:141]
    node _debugFIFO_6_writeBackGPR_T_16 = bits(debugFIFO[6].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_6_writeBackGPR_insType_1 : UInt<3>
    debugFIFO_6_writeBackGPR_insType_1 <= UInt<3>("h0")
    node _debugFIFO_6_writeBackGPR_T_17 = eq(UInt<6>("h37"), _debugFIFO_6_writeBackGPR_T_16) @[utils.scala 10:20]
    when _debugFIFO_6_writeBackGPR_T_17 : @[utils.scala 10:20]
      debugFIFO_6_writeBackGPR_insType_1 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_6_writeBackGPR_T_18 = eq(UInt<5>("h17"), _debugFIFO_6_writeBackGPR_T_16) @[utils.scala 10:20]
      when _debugFIFO_6_writeBackGPR_T_18 : @[utils.scala 10:20]
        debugFIFO_6_writeBackGPR_insType_1 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_6_writeBackGPR_T_19 = eq(UInt<7>("h6f"), _debugFIFO_6_writeBackGPR_T_16) @[utils.scala 10:20]
        when _debugFIFO_6_writeBackGPR_T_19 : @[utils.scala 10:20]
          debugFIFO_6_writeBackGPR_insType_1 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_6_writeBackGPR_T_20 = eq(UInt<7>("h67"), _debugFIFO_6_writeBackGPR_T_16) @[utils.scala 10:20]
          when _debugFIFO_6_writeBackGPR_T_20 : @[utils.scala 10:20]
            debugFIFO_6_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_6_writeBackGPR_T_21 = eq(UInt<7>("h63"), _debugFIFO_6_writeBackGPR_T_16) @[utils.scala 10:20]
            when _debugFIFO_6_writeBackGPR_T_21 : @[utils.scala 10:20]
              debugFIFO_6_writeBackGPR_insType_1 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_6_writeBackGPR_T_22 = eq(UInt<2>("h3"), _debugFIFO_6_writeBackGPR_T_16) @[utils.scala 10:20]
              when _debugFIFO_6_writeBackGPR_T_22 : @[utils.scala 10:20]
                debugFIFO_6_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_6_writeBackGPR_T_23 = eq(UInt<6>("h23"), _debugFIFO_6_writeBackGPR_T_16) @[utils.scala 10:20]
                when _debugFIFO_6_writeBackGPR_T_23 : @[utils.scala 10:20]
                  debugFIFO_6_writeBackGPR_insType_1 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_6_writeBackGPR_T_24 = eq(UInt<5>("h13"), _debugFIFO_6_writeBackGPR_T_16) @[utils.scala 10:20]
                  when _debugFIFO_6_writeBackGPR_T_24 : @[utils.scala 10:20]
                    debugFIFO_6_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_6_writeBackGPR_T_25 = eq(UInt<5>("h1b"), _debugFIFO_6_writeBackGPR_T_16) @[utils.scala 10:20]
                    when _debugFIFO_6_writeBackGPR_T_25 : @[utils.scala 10:20]
                      debugFIFO_6_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_6_writeBackGPR_T_26 = eq(UInt<6>("h33"), _debugFIFO_6_writeBackGPR_T_16) @[utils.scala 10:20]
                      when _debugFIFO_6_writeBackGPR_T_26 : @[utils.scala 10:20]
                        debugFIFO_6_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_6_writeBackGPR_T_27 = eq(UInt<6>("h3b"), _debugFIFO_6_writeBackGPR_T_16) @[utils.scala 10:20]
                        when _debugFIFO_6_writeBackGPR_T_27 : @[utils.scala 10:20]
                          debugFIFO_6_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_6_writeBackGPR_T_28 = eq(UInt<7>("h73"), _debugFIFO_6_writeBackGPR_T_16) @[utils.scala 10:20]
                          when _debugFIFO_6_writeBackGPR_T_28 : @[utils.scala 10:20]
                            debugFIFO_6_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_6_writeBackGPR_T_29 = eq(UInt<4>("hf"), _debugFIFO_6_writeBackGPR_T_16) @[utils.scala 10:20]
                            when _debugFIFO_6_writeBackGPR_T_29 : @[utils.scala 10:20]
                              debugFIFO_6_writeBackGPR_insType_1 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_6_writeBackGPR_T_30 = eq(UInt<6>("h2f"), _debugFIFO_6_writeBackGPR_T_16) @[utils.scala 10:20]
                              when _debugFIFO_6_writeBackGPR_T_30 : @[utils.scala 10:20]
                                debugFIFO_6_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_6_writeBackGPR_T_31 = eq(UInt<1>("h0"), debugFIFO_6_writeBackGPR_insType_1) @[rob.scala 52:141]
    node _debugFIFO_6_writeBackGPR_T_32 = bits(debugFIFO[6].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_6_writeBackGPR_insType_2 : UInt<3>
    debugFIFO_6_writeBackGPR_insType_2 <= UInt<3>("h0")
    node _debugFIFO_6_writeBackGPR_T_33 = eq(UInt<6>("h37"), _debugFIFO_6_writeBackGPR_T_32) @[utils.scala 10:20]
    when _debugFIFO_6_writeBackGPR_T_33 : @[utils.scala 10:20]
      debugFIFO_6_writeBackGPR_insType_2 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_6_writeBackGPR_T_34 = eq(UInt<5>("h17"), _debugFIFO_6_writeBackGPR_T_32) @[utils.scala 10:20]
      when _debugFIFO_6_writeBackGPR_T_34 : @[utils.scala 10:20]
        debugFIFO_6_writeBackGPR_insType_2 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_6_writeBackGPR_T_35 = eq(UInt<7>("h6f"), _debugFIFO_6_writeBackGPR_T_32) @[utils.scala 10:20]
        when _debugFIFO_6_writeBackGPR_T_35 : @[utils.scala 10:20]
          debugFIFO_6_writeBackGPR_insType_2 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_6_writeBackGPR_T_36 = eq(UInt<7>("h67"), _debugFIFO_6_writeBackGPR_T_32) @[utils.scala 10:20]
          when _debugFIFO_6_writeBackGPR_T_36 : @[utils.scala 10:20]
            debugFIFO_6_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_6_writeBackGPR_T_37 = eq(UInt<7>("h63"), _debugFIFO_6_writeBackGPR_T_32) @[utils.scala 10:20]
            when _debugFIFO_6_writeBackGPR_T_37 : @[utils.scala 10:20]
              debugFIFO_6_writeBackGPR_insType_2 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_6_writeBackGPR_T_38 = eq(UInt<2>("h3"), _debugFIFO_6_writeBackGPR_T_32) @[utils.scala 10:20]
              when _debugFIFO_6_writeBackGPR_T_38 : @[utils.scala 10:20]
                debugFIFO_6_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_6_writeBackGPR_T_39 = eq(UInt<6>("h23"), _debugFIFO_6_writeBackGPR_T_32) @[utils.scala 10:20]
                when _debugFIFO_6_writeBackGPR_T_39 : @[utils.scala 10:20]
                  debugFIFO_6_writeBackGPR_insType_2 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_6_writeBackGPR_T_40 = eq(UInt<5>("h13"), _debugFIFO_6_writeBackGPR_T_32) @[utils.scala 10:20]
                  when _debugFIFO_6_writeBackGPR_T_40 : @[utils.scala 10:20]
                    debugFIFO_6_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_6_writeBackGPR_T_41 = eq(UInt<5>("h1b"), _debugFIFO_6_writeBackGPR_T_32) @[utils.scala 10:20]
                    when _debugFIFO_6_writeBackGPR_T_41 : @[utils.scala 10:20]
                      debugFIFO_6_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_6_writeBackGPR_T_42 = eq(UInt<6>("h33"), _debugFIFO_6_writeBackGPR_T_32) @[utils.scala 10:20]
                      when _debugFIFO_6_writeBackGPR_T_42 : @[utils.scala 10:20]
                        debugFIFO_6_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_6_writeBackGPR_T_43 = eq(UInt<6>("h3b"), _debugFIFO_6_writeBackGPR_T_32) @[utils.scala 10:20]
                        when _debugFIFO_6_writeBackGPR_T_43 : @[utils.scala 10:20]
                          debugFIFO_6_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_6_writeBackGPR_T_44 = eq(UInt<7>("h73"), _debugFIFO_6_writeBackGPR_T_32) @[utils.scala 10:20]
                          when _debugFIFO_6_writeBackGPR_T_44 : @[utils.scala 10:20]
                            debugFIFO_6_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_6_writeBackGPR_T_45 = eq(UInt<4>("hf"), _debugFIFO_6_writeBackGPR_T_32) @[utils.scala 10:20]
                            when _debugFIFO_6_writeBackGPR_T_45 : @[utils.scala 10:20]
                              debugFIFO_6_writeBackGPR_insType_2 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_6_writeBackGPR_T_46 = eq(UInt<6>("h2f"), _debugFIFO_6_writeBackGPR_T_32) @[utils.scala 10:20]
                              when _debugFIFO_6_writeBackGPR_T_46 : @[utils.scala 10:20]
                                debugFIFO_6_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_6_writeBackGPR_T_47 = eq(UInt<3>("h4"), debugFIFO_6_writeBackGPR_insType_2) @[rob.scala 52:141]
    node _debugFIFO_6_writeBackGPR_T_48 = bits(debugFIFO[6].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_6_writeBackGPR_insType_3 : UInt<3>
    debugFIFO_6_writeBackGPR_insType_3 <= UInt<3>("h0")
    node _debugFIFO_6_writeBackGPR_T_49 = eq(UInt<6>("h37"), _debugFIFO_6_writeBackGPR_T_48) @[utils.scala 10:20]
    when _debugFIFO_6_writeBackGPR_T_49 : @[utils.scala 10:20]
      debugFIFO_6_writeBackGPR_insType_3 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_6_writeBackGPR_T_50 = eq(UInt<5>("h17"), _debugFIFO_6_writeBackGPR_T_48) @[utils.scala 10:20]
      when _debugFIFO_6_writeBackGPR_T_50 : @[utils.scala 10:20]
        debugFIFO_6_writeBackGPR_insType_3 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_6_writeBackGPR_T_51 = eq(UInt<7>("h6f"), _debugFIFO_6_writeBackGPR_T_48) @[utils.scala 10:20]
        when _debugFIFO_6_writeBackGPR_T_51 : @[utils.scala 10:20]
          debugFIFO_6_writeBackGPR_insType_3 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_6_writeBackGPR_T_52 = eq(UInt<7>("h67"), _debugFIFO_6_writeBackGPR_T_48) @[utils.scala 10:20]
          when _debugFIFO_6_writeBackGPR_T_52 : @[utils.scala 10:20]
            debugFIFO_6_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_6_writeBackGPR_T_53 = eq(UInt<7>("h63"), _debugFIFO_6_writeBackGPR_T_48) @[utils.scala 10:20]
            when _debugFIFO_6_writeBackGPR_T_53 : @[utils.scala 10:20]
              debugFIFO_6_writeBackGPR_insType_3 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_6_writeBackGPR_T_54 = eq(UInt<2>("h3"), _debugFIFO_6_writeBackGPR_T_48) @[utils.scala 10:20]
              when _debugFIFO_6_writeBackGPR_T_54 : @[utils.scala 10:20]
                debugFIFO_6_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_6_writeBackGPR_T_55 = eq(UInt<6>("h23"), _debugFIFO_6_writeBackGPR_T_48) @[utils.scala 10:20]
                when _debugFIFO_6_writeBackGPR_T_55 : @[utils.scala 10:20]
                  debugFIFO_6_writeBackGPR_insType_3 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_6_writeBackGPR_T_56 = eq(UInt<5>("h13"), _debugFIFO_6_writeBackGPR_T_48) @[utils.scala 10:20]
                  when _debugFIFO_6_writeBackGPR_T_56 : @[utils.scala 10:20]
                    debugFIFO_6_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_6_writeBackGPR_T_57 = eq(UInt<5>("h1b"), _debugFIFO_6_writeBackGPR_T_48) @[utils.scala 10:20]
                    when _debugFIFO_6_writeBackGPR_T_57 : @[utils.scala 10:20]
                      debugFIFO_6_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_6_writeBackGPR_T_58 = eq(UInt<6>("h33"), _debugFIFO_6_writeBackGPR_T_48) @[utils.scala 10:20]
                      when _debugFIFO_6_writeBackGPR_T_58 : @[utils.scala 10:20]
                        debugFIFO_6_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_6_writeBackGPR_T_59 = eq(UInt<6>("h3b"), _debugFIFO_6_writeBackGPR_T_48) @[utils.scala 10:20]
                        when _debugFIFO_6_writeBackGPR_T_59 : @[utils.scala 10:20]
                          debugFIFO_6_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_6_writeBackGPR_T_60 = eq(UInt<7>("h73"), _debugFIFO_6_writeBackGPR_T_48) @[utils.scala 10:20]
                          when _debugFIFO_6_writeBackGPR_T_60 : @[utils.scala 10:20]
                            debugFIFO_6_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_6_writeBackGPR_T_61 = eq(UInt<4>("hf"), _debugFIFO_6_writeBackGPR_T_48) @[utils.scala 10:20]
                            when _debugFIFO_6_writeBackGPR_T_61 : @[utils.scala 10:20]
                              debugFIFO_6_writeBackGPR_insType_3 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_6_writeBackGPR_T_62 = eq(UInt<6>("h2f"), _debugFIFO_6_writeBackGPR_T_48) @[utils.scala 10:20]
                              when _debugFIFO_6_writeBackGPR_T_62 : @[utils.scala 10:20]
                                debugFIFO_6_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_6_writeBackGPR_T_63 = eq(UInt<3>("h5"), debugFIFO_6_writeBackGPR_insType_3) @[rob.scala 52:141]
    node _debugFIFO_6_writeBackGPR_T_64 = or(_debugFIFO_6_writeBackGPR_T_15, _debugFIFO_6_writeBackGPR_T_31) @[rob.scala 52:197]
    node _debugFIFO_6_writeBackGPR_T_65 = or(_debugFIFO_6_writeBackGPR_T_64, _debugFIFO_6_writeBackGPR_T_47) @[rob.scala 52:197]
    node _debugFIFO_6_writeBackGPR_T_66 = or(_debugFIFO_6_writeBackGPR_T_65, _debugFIFO_6_writeBackGPR_T_63) @[rob.scala 52:197]
    node _debugFIFO_6_writeBackGPR_T_67 = bits(debugFIFO[6].instruction, 11, 7) @[rob.scala 52:223]
    node _debugFIFO_6_writeBackGPR_T_68 = orr(_debugFIFO_6_writeBackGPR_T_67) @[rob.scala 52:231]
    node _debugFIFO_6_writeBackGPR_T_69 = and(_debugFIFO_6_writeBackGPR_T_66, _debugFIFO_6_writeBackGPR_T_68) @[rob.scala 52:203]
    node _debugFIFO_6_writeBackGPR_T_70 = and(_debugFIFO_6_writeBackGPR_T_69, debugFIFO[6].valid) @[rob.scala 52:235]
    debugFIFO[6].writeBackGPR <= _debugFIFO_6_writeBackGPR_T_70 @[rob.scala 52:52]
    node _debugFIFO_7_writeBackGPR_T = bits(debugFIFO[7].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_7_writeBackGPR_insType : UInt<3>
    debugFIFO_7_writeBackGPR_insType <= UInt<3>("h0")
    node _debugFIFO_7_writeBackGPR_T_1 = eq(UInt<6>("h37"), _debugFIFO_7_writeBackGPR_T) @[utils.scala 10:20]
    when _debugFIFO_7_writeBackGPR_T_1 : @[utils.scala 10:20]
      debugFIFO_7_writeBackGPR_insType <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_7_writeBackGPR_T_2 = eq(UInt<5>("h17"), _debugFIFO_7_writeBackGPR_T) @[utils.scala 10:20]
      when _debugFIFO_7_writeBackGPR_T_2 : @[utils.scala 10:20]
        debugFIFO_7_writeBackGPR_insType <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_7_writeBackGPR_T_3 = eq(UInt<7>("h6f"), _debugFIFO_7_writeBackGPR_T) @[utils.scala 10:20]
        when _debugFIFO_7_writeBackGPR_T_3 : @[utils.scala 10:20]
          debugFIFO_7_writeBackGPR_insType <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_7_writeBackGPR_T_4 = eq(UInt<7>("h67"), _debugFIFO_7_writeBackGPR_T) @[utils.scala 10:20]
          when _debugFIFO_7_writeBackGPR_T_4 : @[utils.scala 10:20]
            debugFIFO_7_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_7_writeBackGPR_T_5 = eq(UInt<7>("h63"), _debugFIFO_7_writeBackGPR_T) @[utils.scala 10:20]
            when _debugFIFO_7_writeBackGPR_T_5 : @[utils.scala 10:20]
              debugFIFO_7_writeBackGPR_insType <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_7_writeBackGPR_T_6 = eq(UInt<2>("h3"), _debugFIFO_7_writeBackGPR_T) @[utils.scala 10:20]
              when _debugFIFO_7_writeBackGPR_T_6 : @[utils.scala 10:20]
                debugFIFO_7_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_7_writeBackGPR_T_7 = eq(UInt<6>("h23"), _debugFIFO_7_writeBackGPR_T) @[utils.scala 10:20]
                when _debugFIFO_7_writeBackGPR_T_7 : @[utils.scala 10:20]
                  debugFIFO_7_writeBackGPR_insType <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_7_writeBackGPR_T_8 = eq(UInt<5>("h13"), _debugFIFO_7_writeBackGPR_T) @[utils.scala 10:20]
                  when _debugFIFO_7_writeBackGPR_T_8 : @[utils.scala 10:20]
                    debugFIFO_7_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_7_writeBackGPR_T_9 = eq(UInt<5>("h1b"), _debugFIFO_7_writeBackGPR_T) @[utils.scala 10:20]
                    when _debugFIFO_7_writeBackGPR_T_9 : @[utils.scala 10:20]
                      debugFIFO_7_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_7_writeBackGPR_T_10 = eq(UInt<6>("h33"), _debugFIFO_7_writeBackGPR_T) @[utils.scala 10:20]
                      when _debugFIFO_7_writeBackGPR_T_10 : @[utils.scala 10:20]
                        debugFIFO_7_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_7_writeBackGPR_T_11 = eq(UInt<6>("h3b"), _debugFIFO_7_writeBackGPR_T) @[utils.scala 10:20]
                        when _debugFIFO_7_writeBackGPR_T_11 : @[utils.scala 10:20]
                          debugFIFO_7_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_7_writeBackGPR_T_12 = eq(UInt<7>("h73"), _debugFIFO_7_writeBackGPR_T) @[utils.scala 10:20]
                          when _debugFIFO_7_writeBackGPR_T_12 : @[utils.scala 10:20]
                            debugFIFO_7_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_7_writeBackGPR_T_13 = eq(UInt<4>("hf"), _debugFIFO_7_writeBackGPR_T) @[utils.scala 10:20]
                            when _debugFIFO_7_writeBackGPR_T_13 : @[utils.scala 10:20]
                              debugFIFO_7_writeBackGPR_insType <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_7_writeBackGPR_T_14 = eq(UInt<6>("h2f"), _debugFIFO_7_writeBackGPR_T) @[utils.scala 10:20]
                              when _debugFIFO_7_writeBackGPR_T_14 : @[utils.scala 10:20]
                                debugFIFO_7_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_7_writeBackGPR_T_15 = eq(UInt<1>("h1"), debugFIFO_7_writeBackGPR_insType) @[rob.scala 52:141]
    node _debugFIFO_7_writeBackGPR_T_16 = bits(debugFIFO[7].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_7_writeBackGPR_insType_1 : UInt<3>
    debugFIFO_7_writeBackGPR_insType_1 <= UInt<3>("h0")
    node _debugFIFO_7_writeBackGPR_T_17 = eq(UInt<6>("h37"), _debugFIFO_7_writeBackGPR_T_16) @[utils.scala 10:20]
    when _debugFIFO_7_writeBackGPR_T_17 : @[utils.scala 10:20]
      debugFIFO_7_writeBackGPR_insType_1 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_7_writeBackGPR_T_18 = eq(UInt<5>("h17"), _debugFIFO_7_writeBackGPR_T_16) @[utils.scala 10:20]
      when _debugFIFO_7_writeBackGPR_T_18 : @[utils.scala 10:20]
        debugFIFO_7_writeBackGPR_insType_1 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_7_writeBackGPR_T_19 = eq(UInt<7>("h6f"), _debugFIFO_7_writeBackGPR_T_16) @[utils.scala 10:20]
        when _debugFIFO_7_writeBackGPR_T_19 : @[utils.scala 10:20]
          debugFIFO_7_writeBackGPR_insType_1 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_7_writeBackGPR_T_20 = eq(UInt<7>("h67"), _debugFIFO_7_writeBackGPR_T_16) @[utils.scala 10:20]
          when _debugFIFO_7_writeBackGPR_T_20 : @[utils.scala 10:20]
            debugFIFO_7_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_7_writeBackGPR_T_21 = eq(UInt<7>("h63"), _debugFIFO_7_writeBackGPR_T_16) @[utils.scala 10:20]
            when _debugFIFO_7_writeBackGPR_T_21 : @[utils.scala 10:20]
              debugFIFO_7_writeBackGPR_insType_1 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_7_writeBackGPR_T_22 = eq(UInt<2>("h3"), _debugFIFO_7_writeBackGPR_T_16) @[utils.scala 10:20]
              when _debugFIFO_7_writeBackGPR_T_22 : @[utils.scala 10:20]
                debugFIFO_7_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_7_writeBackGPR_T_23 = eq(UInt<6>("h23"), _debugFIFO_7_writeBackGPR_T_16) @[utils.scala 10:20]
                when _debugFIFO_7_writeBackGPR_T_23 : @[utils.scala 10:20]
                  debugFIFO_7_writeBackGPR_insType_1 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_7_writeBackGPR_T_24 = eq(UInt<5>("h13"), _debugFIFO_7_writeBackGPR_T_16) @[utils.scala 10:20]
                  when _debugFIFO_7_writeBackGPR_T_24 : @[utils.scala 10:20]
                    debugFIFO_7_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_7_writeBackGPR_T_25 = eq(UInt<5>("h1b"), _debugFIFO_7_writeBackGPR_T_16) @[utils.scala 10:20]
                    when _debugFIFO_7_writeBackGPR_T_25 : @[utils.scala 10:20]
                      debugFIFO_7_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_7_writeBackGPR_T_26 = eq(UInt<6>("h33"), _debugFIFO_7_writeBackGPR_T_16) @[utils.scala 10:20]
                      when _debugFIFO_7_writeBackGPR_T_26 : @[utils.scala 10:20]
                        debugFIFO_7_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_7_writeBackGPR_T_27 = eq(UInt<6>("h3b"), _debugFIFO_7_writeBackGPR_T_16) @[utils.scala 10:20]
                        when _debugFIFO_7_writeBackGPR_T_27 : @[utils.scala 10:20]
                          debugFIFO_7_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_7_writeBackGPR_T_28 = eq(UInt<7>("h73"), _debugFIFO_7_writeBackGPR_T_16) @[utils.scala 10:20]
                          when _debugFIFO_7_writeBackGPR_T_28 : @[utils.scala 10:20]
                            debugFIFO_7_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_7_writeBackGPR_T_29 = eq(UInt<4>("hf"), _debugFIFO_7_writeBackGPR_T_16) @[utils.scala 10:20]
                            when _debugFIFO_7_writeBackGPR_T_29 : @[utils.scala 10:20]
                              debugFIFO_7_writeBackGPR_insType_1 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_7_writeBackGPR_T_30 = eq(UInt<6>("h2f"), _debugFIFO_7_writeBackGPR_T_16) @[utils.scala 10:20]
                              when _debugFIFO_7_writeBackGPR_T_30 : @[utils.scala 10:20]
                                debugFIFO_7_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_7_writeBackGPR_T_31 = eq(UInt<1>("h0"), debugFIFO_7_writeBackGPR_insType_1) @[rob.scala 52:141]
    node _debugFIFO_7_writeBackGPR_T_32 = bits(debugFIFO[7].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_7_writeBackGPR_insType_2 : UInt<3>
    debugFIFO_7_writeBackGPR_insType_2 <= UInt<3>("h0")
    node _debugFIFO_7_writeBackGPR_T_33 = eq(UInt<6>("h37"), _debugFIFO_7_writeBackGPR_T_32) @[utils.scala 10:20]
    when _debugFIFO_7_writeBackGPR_T_33 : @[utils.scala 10:20]
      debugFIFO_7_writeBackGPR_insType_2 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_7_writeBackGPR_T_34 = eq(UInt<5>("h17"), _debugFIFO_7_writeBackGPR_T_32) @[utils.scala 10:20]
      when _debugFIFO_7_writeBackGPR_T_34 : @[utils.scala 10:20]
        debugFIFO_7_writeBackGPR_insType_2 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_7_writeBackGPR_T_35 = eq(UInt<7>("h6f"), _debugFIFO_7_writeBackGPR_T_32) @[utils.scala 10:20]
        when _debugFIFO_7_writeBackGPR_T_35 : @[utils.scala 10:20]
          debugFIFO_7_writeBackGPR_insType_2 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_7_writeBackGPR_T_36 = eq(UInt<7>("h67"), _debugFIFO_7_writeBackGPR_T_32) @[utils.scala 10:20]
          when _debugFIFO_7_writeBackGPR_T_36 : @[utils.scala 10:20]
            debugFIFO_7_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_7_writeBackGPR_T_37 = eq(UInt<7>("h63"), _debugFIFO_7_writeBackGPR_T_32) @[utils.scala 10:20]
            when _debugFIFO_7_writeBackGPR_T_37 : @[utils.scala 10:20]
              debugFIFO_7_writeBackGPR_insType_2 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_7_writeBackGPR_T_38 = eq(UInt<2>("h3"), _debugFIFO_7_writeBackGPR_T_32) @[utils.scala 10:20]
              when _debugFIFO_7_writeBackGPR_T_38 : @[utils.scala 10:20]
                debugFIFO_7_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_7_writeBackGPR_T_39 = eq(UInt<6>("h23"), _debugFIFO_7_writeBackGPR_T_32) @[utils.scala 10:20]
                when _debugFIFO_7_writeBackGPR_T_39 : @[utils.scala 10:20]
                  debugFIFO_7_writeBackGPR_insType_2 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_7_writeBackGPR_T_40 = eq(UInt<5>("h13"), _debugFIFO_7_writeBackGPR_T_32) @[utils.scala 10:20]
                  when _debugFIFO_7_writeBackGPR_T_40 : @[utils.scala 10:20]
                    debugFIFO_7_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_7_writeBackGPR_T_41 = eq(UInt<5>("h1b"), _debugFIFO_7_writeBackGPR_T_32) @[utils.scala 10:20]
                    when _debugFIFO_7_writeBackGPR_T_41 : @[utils.scala 10:20]
                      debugFIFO_7_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_7_writeBackGPR_T_42 = eq(UInt<6>("h33"), _debugFIFO_7_writeBackGPR_T_32) @[utils.scala 10:20]
                      when _debugFIFO_7_writeBackGPR_T_42 : @[utils.scala 10:20]
                        debugFIFO_7_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_7_writeBackGPR_T_43 = eq(UInt<6>("h3b"), _debugFIFO_7_writeBackGPR_T_32) @[utils.scala 10:20]
                        when _debugFIFO_7_writeBackGPR_T_43 : @[utils.scala 10:20]
                          debugFIFO_7_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_7_writeBackGPR_T_44 = eq(UInt<7>("h73"), _debugFIFO_7_writeBackGPR_T_32) @[utils.scala 10:20]
                          when _debugFIFO_7_writeBackGPR_T_44 : @[utils.scala 10:20]
                            debugFIFO_7_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_7_writeBackGPR_T_45 = eq(UInt<4>("hf"), _debugFIFO_7_writeBackGPR_T_32) @[utils.scala 10:20]
                            when _debugFIFO_7_writeBackGPR_T_45 : @[utils.scala 10:20]
                              debugFIFO_7_writeBackGPR_insType_2 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_7_writeBackGPR_T_46 = eq(UInt<6>("h2f"), _debugFIFO_7_writeBackGPR_T_32) @[utils.scala 10:20]
                              when _debugFIFO_7_writeBackGPR_T_46 : @[utils.scala 10:20]
                                debugFIFO_7_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_7_writeBackGPR_T_47 = eq(UInt<3>("h4"), debugFIFO_7_writeBackGPR_insType_2) @[rob.scala 52:141]
    node _debugFIFO_7_writeBackGPR_T_48 = bits(debugFIFO[7].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_7_writeBackGPR_insType_3 : UInt<3>
    debugFIFO_7_writeBackGPR_insType_3 <= UInt<3>("h0")
    node _debugFIFO_7_writeBackGPR_T_49 = eq(UInt<6>("h37"), _debugFIFO_7_writeBackGPR_T_48) @[utils.scala 10:20]
    when _debugFIFO_7_writeBackGPR_T_49 : @[utils.scala 10:20]
      debugFIFO_7_writeBackGPR_insType_3 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_7_writeBackGPR_T_50 = eq(UInt<5>("h17"), _debugFIFO_7_writeBackGPR_T_48) @[utils.scala 10:20]
      when _debugFIFO_7_writeBackGPR_T_50 : @[utils.scala 10:20]
        debugFIFO_7_writeBackGPR_insType_3 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_7_writeBackGPR_T_51 = eq(UInt<7>("h6f"), _debugFIFO_7_writeBackGPR_T_48) @[utils.scala 10:20]
        when _debugFIFO_7_writeBackGPR_T_51 : @[utils.scala 10:20]
          debugFIFO_7_writeBackGPR_insType_3 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_7_writeBackGPR_T_52 = eq(UInt<7>("h67"), _debugFIFO_7_writeBackGPR_T_48) @[utils.scala 10:20]
          when _debugFIFO_7_writeBackGPR_T_52 : @[utils.scala 10:20]
            debugFIFO_7_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_7_writeBackGPR_T_53 = eq(UInt<7>("h63"), _debugFIFO_7_writeBackGPR_T_48) @[utils.scala 10:20]
            when _debugFIFO_7_writeBackGPR_T_53 : @[utils.scala 10:20]
              debugFIFO_7_writeBackGPR_insType_3 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_7_writeBackGPR_T_54 = eq(UInt<2>("h3"), _debugFIFO_7_writeBackGPR_T_48) @[utils.scala 10:20]
              when _debugFIFO_7_writeBackGPR_T_54 : @[utils.scala 10:20]
                debugFIFO_7_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_7_writeBackGPR_T_55 = eq(UInt<6>("h23"), _debugFIFO_7_writeBackGPR_T_48) @[utils.scala 10:20]
                when _debugFIFO_7_writeBackGPR_T_55 : @[utils.scala 10:20]
                  debugFIFO_7_writeBackGPR_insType_3 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_7_writeBackGPR_T_56 = eq(UInt<5>("h13"), _debugFIFO_7_writeBackGPR_T_48) @[utils.scala 10:20]
                  when _debugFIFO_7_writeBackGPR_T_56 : @[utils.scala 10:20]
                    debugFIFO_7_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_7_writeBackGPR_T_57 = eq(UInt<5>("h1b"), _debugFIFO_7_writeBackGPR_T_48) @[utils.scala 10:20]
                    when _debugFIFO_7_writeBackGPR_T_57 : @[utils.scala 10:20]
                      debugFIFO_7_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_7_writeBackGPR_T_58 = eq(UInt<6>("h33"), _debugFIFO_7_writeBackGPR_T_48) @[utils.scala 10:20]
                      when _debugFIFO_7_writeBackGPR_T_58 : @[utils.scala 10:20]
                        debugFIFO_7_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_7_writeBackGPR_T_59 = eq(UInt<6>("h3b"), _debugFIFO_7_writeBackGPR_T_48) @[utils.scala 10:20]
                        when _debugFIFO_7_writeBackGPR_T_59 : @[utils.scala 10:20]
                          debugFIFO_7_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_7_writeBackGPR_T_60 = eq(UInt<7>("h73"), _debugFIFO_7_writeBackGPR_T_48) @[utils.scala 10:20]
                          when _debugFIFO_7_writeBackGPR_T_60 : @[utils.scala 10:20]
                            debugFIFO_7_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_7_writeBackGPR_T_61 = eq(UInt<4>("hf"), _debugFIFO_7_writeBackGPR_T_48) @[utils.scala 10:20]
                            when _debugFIFO_7_writeBackGPR_T_61 : @[utils.scala 10:20]
                              debugFIFO_7_writeBackGPR_insType_3 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_7_writeBackGPR_T_62 = eq(UInt<6>("h2f"), _debugFIFO_7_writeBackGPR_T_48) @[utils.scala 10:20]
                              when _debugFIFO_7_writeBackGPR_T_62 : @[utils.scala 10:20]
                                debugFIFO_7_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_7_writeBackGPR_T_63 = eq(UInt<3>("h5"), debugFIFO_7_writeBackGPR_insType_3) @[rob.scala 52:141]
    node _debugFIFO_7_writeBackGPR_T_64 = or(_debugFIFO_7_writeBackGPR_T_15, _debugFIFO_7_writeBackGPR_T_31) @[rob.scala 52:197]
    node _debugFIFO_7_writeBackGPR_T_65 = or(_debugFIFO_7_writeBackGPR_T_64, _debugFIFO_7_writeBackGPR_T_47) @[rob.scala 52:197]
    node _debugFIFO_7_writeBackGPR_T_66 = or(_debugFIFO_7_writeBackGPR_T_65, _debugFIFO_7_writeBackGPR_T_63) @[rob.scala 52:197]
    node _debugFIFO_7_writeBackGPR_T_67 = bits(debugFIFO[7].instruction, 11, 7) @[rob.scala 52:223]
    node _debugFIFO_7_writeBackGPR_T_68 = orr(_debugFIFO_7_writeBackGPR_T_67) @[rob.scala 52:231]
    node _debugFIFO_7_writeBackGPR_T_69 = and(_debugFIFO_7_writeBackGPR_T_66, _debugFIFO_7_writeBackGPR_T_68) @[rob.scala 52:203]
    node _debugFIFO_7_writeBackGPR_T_70 = and(_debugFIFO_7_writeBackGPR_T_69, debugFIFO[7].valid) @[rob.scala 52:235]
    debugFIFO[7].writeBackGPR <= _debugFIFO_7_writeBackGPR_T_70 @[rob.scala 52:52]
    node _debugFIFO_8_writeBackGPR_T = bits(debugFIFO[8].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_8_writeBackGPR_insType : UInt<3>
    debugFIFO_8_writeBackGPR_insType <= UInt<3>("h0")
    node _debugFIFO_8_writeBackGPR_T_1 = eq(UInt<6>("h37"), _debugFIFO_8_writeBackGPR_T) @[utils.scala 10:20]
    when _debugFIFO_8_writeBackGPR_T_1 : @[utils.scala 10:20]
      debugFIFO_8_writeBackGPR_insType <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_8_writeBackGPR_T_2 = eq(UInt<5>("h17"), _debugFIFO_8_writeBackGPR_T) @[utils.scala 10:20]
      when _debugFIFO_8_writeBackGPR_T_2 : @[utils.scala 10:20]
        debugFIFO_8_writeBackGPR_insType <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_8_writeBackGPR_T_3 = eq(UInt<7>("h6f"), _debugFIFO_8_writeBackGPR_T) @[utils.scala 10:20]
        when _debugFIFO_8_writeBackGPR_T_3 : @[utils.scala 10:20]
          debugFIFO_8_writeBackGPR_insType <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_8_writeBackGPR_T_4 = eq(UInt<7>("h67"), _debugFIFO_8_writeBackGPR_T) @[utils.scala 10:20]
          when _debugFIFO_8_writeBackGPR_T_4 : @[utils.scala 10:20]
            debugFIFO_8_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_8_writeBackGPR_T_5 = eq(UInt<7>("h63"), _debugFIFO_8_writeBackGPR_T) @[utils.scala 10:20]
            when _debugFIFO_8_writeBackGPR_T_5 : @[utils.scala 10:20]
              debugFIFO_8_writeBackGPR_insType <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_8_writeBackGPR_T_6 = eq(UInt<2>("h3"), _debugFIFO_8_writeBackGPR_T) @[utils.scala 10:20]
              when _debugFIFO_8_writeBackGPR_T_6 : @[utils.scala 10:20]
                debugFIFO_8_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_8_writeBackGPR_T_7 = eq(UInt<6>("h23"), _debugFIFO_8_writeBackGPR_T) @[utils.scala 10:20]
                when _debugFIFO_8_writeBackGPR_T_7 : @[utils.scala 10:20]
                  debugFIFO_8_writeBackGPR_insType <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_8_writeBackGPR_T_8 = eq(UInt<5>("h13"), _debugFIFO_8_writeBackGPR_T) @[utils.scala 10:20]
                  when _debugFIFO_8_writeBackGPR_T_8 : @[utils.scala 10:20]
                    debugFIFO_8_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_8_writeBackGPR_T_9 = eq(UInt<5>("h1b"), _debugFIFO_8_writeBackGPR_T) @[utils.scala 10:20]
                    when _debugFIFO_8_writeBackGPR_T_9 : @[utils.scala 10:20]
                      debugFIFO_8_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_8_writeBackGPR_T_10 = eq(UInt<6>("h33"), _debugFIFO_8_writeBackGPR_T) @[utils.scala 10:20]
                      when _debugFIFO_8_writeBackGPR_T_10 : @[utils.scala 10:20]
                        debugFIFO_8_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_8_writeBackGPR_T_11 = eq(UInt<6>("h3b"), _debugFIFO_8_writeBackGPR_T) @[utils.scala 10:20]
                        when _debugFIFO_8_writeBackGPR_T_11 : @[utils.scala 10:20]
                          debugFIFO_8_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_8_writeBackGPR_T_12 = eq(UInt<7>("h73"), _debugFIFO_8_writeBackGPR_T) @[utils.scala 10:20]
                          when _debugFIFO_8_writeBackGPR_T_12 : @[utils.scala 10:20]
                            debugFIFO_8_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_8_writeBackGPR_T_13 = eq(UInt<4>("hf"), _debugFIFO_8_writeBackGPR_T) @[utils.scala 10:20]
                            when _debugFIFO_8_writeBackGPR_T_13 : @[utils.scala 10:20]
                              debugFIFO_8_writeBackGPR_insType <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_8_writeBackGPR_T_14 = eq(UInt<6>("h2f"), _debugFIFO_8_writeBackGPR_T) @[utils.scala 10:20]
                              when _debugFIFO_8_writeBackGPR_T_14 : @[utils.scala 10:20]
                                debugFIFO_8_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_8_writeBackGPR_T_15 = eq(UInt<1>("h1"), debugFIFO_8_writeBackGPR_insType) @[rob.scala 52:141]
    node _debugFIFO_8_writeBackGPR_T_16 = bits(debugFIFO[8].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_8_writeBackGPR_insType_1 : UInt<3>
    debugFIFO_8_writeBackGPR_insType_1 <= UInt<3>("h0")
    node _debugFIFO_8_writeBackGPR_T_17 = eq(UInt<6>("h37"), _debugFIFO_8_writeBackGPR_T_16) @[utils.scala 10:20]
    when _debugFIFO_8_writeBackGPR_T_17 : @[utils.scala 10:20]
      debugFIFO_8_writeBackGPR_insType_1 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_8_writeBackGPR_T_18 = eq(UInt<5>("h17"), _debugFIFO_8_writeBackGPR_T_16) @[utils.scala 10:20]
      when _debugFIFO_8_writeBackGPR_T_18 : @[utils.scala 10:20]
        debugFIFO_8_writeBackGPR_insType_1 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_8_writeBackGPR_T_19 = eq(UInt<7>("h6f"), _debugFIFO_8_writeBackGPR_T_16) @[utils.scala 10:20]
        when _debugFIFO_8_writeBackGPR_T_19 : @[utils.scala 10:20]
          debugFIFO_8_writeBackGPR_insType_1 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_8_writeBackGPR_T_20 = eq(UInt<7>("h67"), _debugFIFO_8_writeBackGPR_T_16) @[utils.scala 10:20]
          when _debugFIFO_8_writeBackGPR_T_20 : @[utils.scala 10:20]
            debugFIFO_8_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_8_writeBackGPR_T_21 = eq(UInt<7>("h63"), _debugFIFO_8_writeBackGPR_T_16) @[utils.scala 10:20]
            when _debugFIFO_8_writeBackGPR_T_21 : @[utils.scala 10:20]
              debugFIFO_8_writeBackGPR_insType_1 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_8_writeBackGPR_T_22 = eq(UInt<2>("h3"), _debugFIFO_8_writeBackGPR_T_16) @[utils.scala 10:20]
              when _debugFIFO_8_writeBackGPR_T_22 : @[utils.scala 10:20]
                debugFIFO_8_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_8_writeBackGPR_T_23 = eq(UInt<6>("h23"), _debugFIFO_8_writeBackGPR_T_16) @[utils.scala 10:20]
                when _debugFIFO_8_writeBackGPR_T_23 : @[utils.scala 10:20]
                  debugFIFO_8_writeBackGPR_insType_1 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_8_writeBackGPR_T_24 = eq(UInt<5>("h13"), _debugFIFO_8_writeBackGPR_T_16) @[utils.scala 10:20]
                  when _debugFIFO_8_writeBackGPR_T_24 : @[utils.scala 10:20]
                    debugFIFO_8_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_8_writeBackGPR_T_25 = eq(UInt<5>("h1b"), _debugFIFO_8_writeBackGPR_T_16) @[utils.scala 10:20]
                    when _debugFIFO_8_writeBackGPR_T_25 : @[utils.scala 10:20]
                      debugFIFO_8_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_8_writeBackGPR_T_26 = eq(UInt<6>("h33"), _debugFIFO_8_writeBackGPR_T_16) @[utils.scala 10:20]
                      when _debugFIFO_8_writeBackGPR_T_26 : @[utils.scala 10:20]
                        debugFIFO_8_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_8_writeBackGPR_T_27 = eq(UInt<6>("h3b"), _debugFIFO_8_writeBackGPR_T_16) @[utils.scala 10:20]
                        when _debugFIFO_8_writeBackGPR_T_27 : @[utils.scala 10:20]
                          debugFIFO_8_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_8_writeBackGPR_T_28 = eq(UInt<7>("h73"), _debugFIFO_8_writeBackGPR_T_16) @[utils.scala 10:20]
                          when _debugFIFO_8_writeBackGPR_T_28 : @[utils.scala 10:20]
                            debugFIFO_8_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_8_writeBackGPR_T_29 = eq(UInt<4>("hf"), _debugFIFO_8_writeBackGPR_T_16) @[utils.scala 10:20]
                            when _debugFIFO_8_writeBackGPR_T_29 : @[utils.scala 10:20]
                              debugFIFO_8_writeBackGPR_insType_1 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_8_writeBackGPR_T_30 = eq(UInt<6>("h2f"), _debugFIFO_8_writeBackGPR_T_16) @[utils.scala 10:20]
                              when _debugFIFO_8_writeBackGPR_T_30 : @[utils.scala 10:20]
                                debugFIFO_8_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_8_writeBackGPR_T_31 = eq(UInt<1>("h0"), debugFIFO_8_writeBackGPR_insType_1) @[rob.scala 52:141]
    node _debugFIFO_8_writeBackGPR_T_32 = bits(debugFIFO[8].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_8_writeBackGPR_insType_2 : UInt<3>
    debugFIFO_8_writeBackGPR_insType_2 <= UInt<3>("h0")
    node _debugFIFO_8_writeBackGPR_T_33 = eq(UInt<6>("h37"), _debugFIFO_8_writeBackGPR_T_32) @[utils.scala 10:20]
    when _debugFIFO_8_writeBackGPR_T_33 : @[utils.scala 10:20]
      debugFIFO_8_writeBackGPR_insType_2 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_8_writeBackGPR_T_34 = eq(UInt<5>("h17"), _debugFIFO_8_writeBackGPR_T_32) @[utils.scala 10:20]
      when _debugFIFO_8_writeBackGPR_T_34 : @[utils.scala 10:20]
        debugFIFO_8_writeBackGPR_insType_2 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_8_writeBackGPR_T_35 = eq(UInt<7>("h6f"), _debugFIFO_8_writeBackGPR_T_32) @[utils.scala 10:20]
        when _debugFIFO_8_writeBackGPR_T_35 : @[utils.scala 10:20]
          debugFIFO_8_writeBackGPR_insType_2 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_8_writeBackGPR_T_36 = eq(UInt<7>("h67"), _debugFIFO_8_writeBackGPR_T_32) @[utils.scala 10:20]
          when _debugFIFO_8_writeBackGPR_T_36 : @[utils.scala 10:20]
            debugFIFO_8_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_8_writeBackGPR_T_37 = eq(UInt<7>("h63"), _debugFIFO_8_writeBackGPR_T_32) @[utils.scala 10:20]
            when _debugFIFO_8_writeBackGPR_T_37 : @[utils.scala 10:20]
              debugFIFO_8_writeBackGPR_insType_2 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_8_writeBackGPR_T_38 = eq(UInt<2>("h3"), _debugFIFO_8_writeBackGPR_T_32) @[utils.scala 10:20]
              when _debugFIFO_8_writeBackGPR_T_38 : @[utils.scala 10:20]
                debugFIFO_8_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_8_writeBackGPR_T_39 = eq(UInt<6>("h23"), _debugFIFO_8_writeBackGPR_T_32) @[utils.scala 10:20]
                when _debugFIFO_8_writeBackGPR_T_39 : @[utils.scala 10:20]
                  debugFIFO_8_writeBackGPR_insType_2 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_8_writeBackGPR_T_40 = eq(UInt<5>("h13"), _debugFIFO_8_writeBackGPR_T_32) @[utils.scala 10:20]
                  when _debugFIFO_8_writeBackGPR_T_40 : @[utils.scala 10:20]
                    debugFIFO_8_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_8_writeBackGPR_T_41 = eq(UInt<5>("h1b"), _debugFIFO_8_writeBackGPR_T_32) @[utils.scala 10:20]
                    when _debugFIFO_8_writeBackGPR_T_41 : @[utils.scala 10:20]
                      debugFIFO_8_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_8_writeBackGPR_T_42 = eq(UInt<6>("h33"), _debugFIFO_8_writeBackGPR_T_32) @[utils.scala 10:20]
                      when _debugFIFO_8_writeBackGPR_T_42 : @[utils.scala 10:20]
                        debugFIFO_8_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_8_writeBackGPR_T_43 = eq(UInt<6>("h3b"), _debugFIFO_8_writeBackGPR_T_32) @[utils.scala 10:20]
                        when _debugFIFO_8_writeBackGPR_T_43 : @[utils.scala 10:20]
                          debugFIFO_8_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_8_writeBackGPR_T_44 = eq(UInt<7>("h73"), _debugFIFO_8_writeBackGPR_T_32) @[utils.scala 10:20]
                          when _debugFIFO_8_writeBackGPR_T_44 : @[utils.scala 10:20]
                            debugFIFO_8_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_8_writeBackGPR_T_45 = eq(UInt<4>("hf"), _debugFIFO_8_writeBackGPR_T_32) @[utils.scala 10:20]
                            when _debugFIFO_8_writeBackGPR_T_45 : @[utils.scala 10:20]
                              debugFIFO_8_writeBackGPR_insType_2 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_8_writeBackGPR_T_46 = eq(UInt<6>("h2f"), _debugFIFO_8_writeBackGPR_T_32) @[utils.scala 10:20]
                              when _debugFIFO_8_writeBackGPR_T_46 : @[utils.scala 10:20]
                                debugFIFO_8_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_8_writeBackGPR_T_47 = eq(UInt<3>("h4"), debugFIFO_8_writeBackGPR_insType_2) @[rob.scala 52:141]
    node _debugFIFO_8_writeBackGPR_T_48 = bits(debugFIFO[8].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_8_writeBackGPR_insType_3 : UInt<3>
    debugFIFO_8_writeBackGPR_insType_3 <= UInt<3>("h0")
    node _debugFIFO_8_writeBackGPR_T_49 = eq(UInt<6>("h37"), _debugFIFO_8_writeBackGPR_T_48) @[utils.scala 10:20]
    when _debugFIFO_8_writeBackGPR_T_49 : @[utils.scala 10:20]
      debugFIFO_8_writeBackGPR_insType_3 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_8_writeBackGPR_T_50 = eq(UInt<5>("h17"), _debugFIFO_8_writeBackGPR_T_48) @[utils.scala 10:20]
      when _debugFIFO_8_writeBackGPR_T_50 : @[utils.scala 10:20]
        debugFIFO_8_writeBackGPR_insType_3 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_8_writeBackGPR_T_51 = eq(UInt<7>("h6f"), _debugFIFO_8_writeBackGPR_T_48) @[utils.scala 10:20]
        when _debugFIFO_8_writeBackGPR_T_51 : @[utils.scala 10:20]
          debugFIFO_8_writeBackGPR_insType_3 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_8_writeBackGPR_T_52 = eq(UInt<7>("h67"), _debugFIFO_8_writeBackGPR_T_48) @[utils.scala 10:20]
          when _debugFIFO_8_writeBackGPR_T_52 : @[utils.scala 10:20]
            debugFIFO_8_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_8_writeBackGPR_T_53 = eq(UInt<7>("h63"), _debugFIFO_8_writeBackGPR_T_48) @[utils.scala 10:20]
            when _debugFIFO_8_writeBackGPR_T_53 : @[utils.scala 10:20]
              debugFIFO_8_writeBackGPR_insType_3 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_8_writeBackGPR_T_54 = eq(UInt<2>("h3"), _debugFIFO_8_writeBackGPR_T_48) @[utils.scala 10:20]
              when _debugFIFO_8_writeBackGPR_T_54 : @[utils.scala 10:20]
                debugFIFO_8_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_8_writeBackGPR_T_55 = eq(UInt<6>("h23"), _debugFIFO_8_writeBackGPR_T_48) @[utils.scala 10:20]
                when _debugFIFO_8_writeBackGPR_T_55 : @[utils.scala 10:20]
                  debugFIFO_8_writeBackGPR_insType_3 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_8_writeBackGPR_T_56 = eq(UInt<5>("h13"), _debugFIFO_8_writeBackGPR_T_48) @[utils.scala 10:20]
                  when _debugFIFO_8_writeBackGPR_T_56 : @[utils.scala 10:20]
                    debugFIFO_8_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_8_writeBackGPR_T_57 = eq(UInt<5>("h1b"), _debugFIFO_8_writeBackGPR_T_48) @[utils.scala 10:20]
                    when _debugFIFO_8_writeBackGPR_T_57 : @[utils.scala 10:20]
                      debugFIFO_8_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_8_writeBackGPR_T_58 = eq(UInt<6>("h33"), _debugFIFO_8_writeBackGPR_T_48) @[utils.scala 10:20]
                      when _debugFIFO_8_writeBackGPR_T_58 : @[utils.scala 10:20]
                        debugFIFO_8_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_8_writeBackGPR_T_59 = eq(UInt<6>("h3b"), _debugFIFO_8_writeBackGPR_T_48) @[utils.scala 10:20]
                        when _debugFIFO_8_writeBackGPR_T_59 : @[utils.scala 10:20]
                          debugFIFO_8_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_8_writeBackGPR_T_60 = eq(UInt<7>("h73"), _debugFIFO_8_writeBackGPR_T_48) @[utils.scala 10:20]
                          when _debugFIFO_8_writeBackGPR_T_60 : @[utils.scala 10:20]
                            debugFIFO_8_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_8_writeBackGPR_T_61 = eq(UInt<4>("hf"), _debugFIFO_8_writeBackGPR_T_48) @[utils.scala 10:20]
                            when _debugFIFO_8_writeBackGPR_T_61 : @[utils.scala 10:20]
                              debugFIFO_8_writeBackGPR_insType_3 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_8_writeBackGPR_T_62 = eq(UInt<6>("h2f"), _debugFIFO_8_writeBackGPR_T_48) @[utils.scala 10:20]
                              when _debugFIFO_8_writeBackGPR_T_62 : @[utils.scala 10:20]
                                debugFIFO_8_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_8_writeBackGPR_T_63 = eq(UInt<3>("h5"), debugFIFO_8_writeBackGPR_insType_3) @[rob.scala 52:141]
    node _debugFIFO_8_writeBackGPR_T_64 = or(_debugFIFO_8_writeBackGPR_T_15, _debugFIFO_8_writeBackGPR_T_31) @[rob.scala 52:197]
    node _debugFIFO_8_writeBackGPR_T_65 = or(_debugFIFO_8_writeBackGPR_T_64, _debugFIFO_8_writeBackGPR_T_47) @[rob.scala 52:197]
    node _debugFIFO_8_writeBackGPR_T_66 = or(_debugFIFO_8_writeBackGPR_T_65, _debugFIFO_8_writeBackGPR_T_63) @[rob.scala 52:197]
    node _debugFIFO_8_writeBackGPR_T_67 = bits(debugFIFO[8].instruction, 11, 7) @[rob.scala 52:223]
    node _debugFIFO_8_writeBackGPR_T_68 = orr(_debugFIFO_8_writeBackGPR_T_67) @[rob.scala 52:231]
    node _debugFIFO_8_writeBackGPR_T_69 = and(_debugFIFO_8_writeBackGPR_T_66, _debugFIFO_8_writeBackGPR_T_68) @[rob.scala 52:203]
    node _debugFIFO_8_writeBackGPR_T_70 = and(_debugFIFO_8_writeBackGPR_T_69, debugFIFO[8].valid) @[rob.scala 52:235]
    debugFIFO[8].writeBackGPR <= _debugFIFO_8_writeBackGPR_T_70 @[rob.scala 52:52]
    node _debugFIFO_9_writeBackGPR_T = bits(debugFIFO[9].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_9_writeBackGPR_insType : UInt<3>
    debugFIFO_9_writeBackGPR_insType <= UInt<3>("h0")
    node _debugFIFO_9_writeBackGPR_T_1 = eq(UInt<6>("h37"), _debugFIFO_9_writeBackGPR_T) @[utils.scala 10:20]
    when _debugFIFO_9_writeBackGPR_T_1 : @[utils.scala 10:20]
      debugFIFO_9_writeBackGPR_insType <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_9_writeBackGPR_T_2 = eq(UInt<5>("h17"), _debugFIFO_9_writeBackGPR_T) @[utils.scala 10:20]
      when _debugFIFO_9_writeBackGPR_T_2 : @[utils.scala 10:20]
        debugFIFO_9_writeBackGPR_insType <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_9_writeBackGPR_T_3 = eq(UInt<7>("h6f"), _debugFIFO_9_writeBackGPR_T) @[utils.scala 10:20]
        when _debugFIFO_9_writeBackGPR_T_3 : @[utils.scala 10:20]
          debugFIFO_9_writeBackGPR_insType <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_9_writeBackGPR_T_4 = eq(UInt<7>("h67"), _debugFIFO_9_writeBackGPR_T) @[utils.scala 10:20]
          when _debugFIFO_9_writeBackGPR_T_4 : @[utils.scala 10:20]
            debugFIFO_9_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_9_writeBackGPR_T_5 = eq(UInt<7>("h63"), _debugFIFO_9_writeBackGPR_T) @[utils.scala 10:20]
            when _debugFIFO_9_writeBackGPR_T_5 : @[utils.scala 10:20]
              debugFIFO_9_writeBackGPR_insType <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_9_writeBackGPR_T_6 = eq(UInt<2>("h3"), _debugFIFO_9_writeBackGPR_T) @[utils.scala 10:20]
              when _debugFIFO_9_writeBackGPR_T_6 : @[utils.scala 10:20]
                debugFIFO_9_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_9_writeBackGPR_T_7 = eq(UInt<6>("h23"), _debugFIFO_9_writeBackGPR_T) @[utils.scala 10:20]
                when _debugFIFO_9_writeBackGPR_T_7 : @[utils.scala 10:20]
                  debugFIFO_9_writeBackGPR_insType <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_9_writeBackGPR_T_8 = eq(UInt<5>("h13"), _debugFIFO_9_writeBackGPR_T) @[utils.scala 10:20]
                  when _debugFIFO_9_writeBackGPR_T_8 : @[utils.scala 10:20]
                    debugFIFO_9_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_9_writeBackGPR_T_9 = eq(UInt<5>("h1b"), _debugFIFO_9_writeBackGPR_T) @[utils.scala 10:20]
                    when _debugFIFO_9_writeBackGPR_T_9 : @[utils.scala 10:20]
                      debugFIFO_9_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_9_writeBackGPR_T_10 = eq(UInt<6>("h33"), _debugFIFO_9_writeBackGPR_T) @[utils.scala 10:20]
                      when _debugFIFO_9_writeBackGPR_T_10 : @[utils.scala 10:20]
                        debugFIFO_9_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_9_writeBackGPR_T_11 = eq(UInt<6>("h3b"), _debugFIFO_9_writeBackGPR_T) @[utils.scala 10:20]
                        when _debugFIFO_9_writeBackGPR_T_11 : @[utils.scala 10:20]
                          debugFIFO_9_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_9_writeBackGPR_T_12 = eq(UInt<7>("h73"), _debugFIFO_9_writeBackGPR_T) @[utils.scala 10:20]
                          when _debugFIFO_9_writeBackGPR_T_12 : @[utils.scala 10:20]
                            debugFIFO_9_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_9_writeBackGPR_T_13 = eq(UInt<4>("hf"), _debugFIFO_9_writeBackGPR_T) @[utils.scala 10:20]
                            when _debugFIFO_9_writeBackGPR_T_13 : @[utils.scala 10:20]
                              debugFIFO_9_writeBackGPR_insType <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_9_writeBackGPR_T_14 = eq(UInt<6>("h2f"), _debugFIFO_9_writeBackGPR_T) @[utils.scala 10:20]
                              when _debugFIFO_9_writeBackGPR_T_14 : @[utils.scala 10:20]
                                debugFIFO_9_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_9_writeBackGPR_T_15 = eq(UInt<1>("h1"), debugFIFO_9_writeBackGPR_insType) @[rob.scala 52:141]
    node _debugFIFO_9_writeBackGPR_T_16 = bits(debugFIFO[9].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_9_writeBackGPR_insType_1 : UInt<3>
    debugFIFO_9_writeBackGPR_insType_1 <= UInt<3>("h0")
    node _debugFIFO_9_writeBackGPR_T_17 = eq(UInt<6>("h37"), _debugFIFO_9_writeBackGPR_T_16) @[utils.scala 10:20]
    when _debugFIFO_9_writeBackGPR_T_17 : @[utils.scala 10:20]
      debugFIFO_9_writeBackGPR_insType_1 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_9_writeBackGPR_T_18 = eq(UInt<5>("h17"), _debugFIFO_9_writeBackGPR_T_16) @[utils.scala 10:20]
      when _debugFIFO_9_writeBackGPR_T_18 : @[utils.scala 10:20]
        debugFIFO_9_writeBackGPR_insType_1 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_9_writeBackGPR_T_19 = eq(UInt<7>("h6f"), _debugFIFO_9_writeBackGPR_T_16) @[utils.scala 10:20]
        when _debugFIFO_9_writeBackGPR_T_19 : @[utils.scala 10:20]
          debugFIFO_9_writeBackGPR_insType_1 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_9_writeBackGPR_T_20 = eq(UInt<7>("h67"), _debugFIFO_9_writeBackGPR_T_16) @[utils.scala 10:20]
          when _debugFIFO_9_writeBackGPR_T_20 : @[utils.scala 10:20]
            debugFIFO_9_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_9_writeBackGPR_T_21 = eq(UInt<7>("h63"), _debugFIFO_9_writeBackGPR_T_16) @[utils.scala 10:20]
            when _debugFIFO_9_writeBackGPR_T_21 : @[utils.scala 10:20]
              debugFIFO_9_writeBackGPR_insType_1 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_9_writeBackGPR_T_22 = eq(UInt<2>("h3"), _debugFIFO_9_writeBackGPR_T_16) @[utils.scala 10:20]
              when _debugFIFO_9_writeBackGPR_T_22 : @[utils.scala 10:20]
                debugFIFO_9_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_9_writeBackGPR_T_23 = eq(UInt<6>("h23"), _debugFIFO_9_writeBackGPR_T_16) @[utils.scala 10:20]
                when _debugFIFO_9_writeBackGPR_T_23 : @[utils.scala 10:20]
                  debugFIFO_9_writeBackGPR_insType_1 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_9_writeBackGPR_T_24 = eq(UInt<5>("h13"), _debugFIFO_9_writeBackGPR_T_16) @[utils.scala 10:20]
                  when _debugFIFO_9_writeBackGPR_T_24 : @[utils.scala 10:20]
                    debugFIFO_9_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_9_writeBackGPR_T_25 = eq(UInt<5>("h1b"), _debugFIFO_9_writeBackGPR_T_16) @[utils.scala 10:20]
                    when _debugFIFO_9_writeBackGPR_T_25 : @[utils.scala 10:20]
                      debugFIFO_9_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_9_writeBackGPR_T_26 = eq(UInt<6>("h33"), _debugFIFO_9_writeBackGPR_T_16) @[utils.scala 10:20]
                      when _debugFIFO_9_writeBackGPR_T_26 : @[utils.scala 10:20]
                        debugFIFO_9_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_9_writeBackGPR_T_27 = eq(UInt<6>("h3b"), _debugFIFO_9_writeBackGPR_T_16) @[utils.scala 10:20]
                        when _debugFIFO_9_writeBackGPR_T_27 : @[utils.scala 10:20]
                          debugFIFO_9_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_9_writeBackGPR_T_28 = eq(UInt<7>("h73"), _debugFIFO_9_writeBackGPR_T_16) @[utils.scala 10:20]
                          when _debugFIFO_9_writeBackGPR_T_28 : @[utils.scala 10:20]
                            debugFIFO_9_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_9_writeBackGPR_T_29 = eq(UInt<4>("hf"), _debugFIFO_9_writeBackGPR_T_16) @[utils.scala 10:20]
                            when _debugFIFO_9_writeBackGPR_T_29 : @[utils.scala 10:20]
                              debugFIFO_9_writeBackGPR_insType_1 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_9_writeBackGPR_T_30 = eq(UInt<6>("h2f"), _debugFIFO_9_writeBackGPR_T_16) @[utils.scala 10:20]
                              when _debugFIFO_9_writeBackGPR_T_30 : @[utils.scala 10:20]
                                debugFIFO_9_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_9_writeBackGPR_T_31 = eq(UInt<1>("h0"), debugFIFO_9_writeBackGPR_insType_1) @[rob.scala 52:141]
    node _debugFIFO_9_writeBackGPR_T_32 = bits(debugFIFO[9].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_9_writeBackGPR_insType_2 : UInt<3>
    debugFIFO_9_writeBackGPR_insType_2 <= UInt<3>("h0")
    node _debugFIFO_9_writeBackGPR_T_33 = eq(UInt<6>("h37"), _debugFIFO_9_writeBackGPR_T_32) @[utils.scala 10:20]
    when _debugFIFO_9_writeBackGPR_T_33 : @[utils.scala 10:20]
      debugFIFO_9_writeBackGPR_insType_2 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_9_writeBackGPR_T_34 = eq(UInt<5>("h17"), _debugFIFO_9_writeBackGPR_T_32) @[utils.scala 10:20]
      when _debugFIFO_9_writeBackGPR_T_34 : @[utils.scala 10:20]
        debugFIFO_9_writeBackGPR_insType_2 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_9_writeBackGPR_T_35 = eq(UInt<7>("h6f"), _debugFIFO_9_writeBackGPR_T_32) @[utils.scala 10:20]
        when _debugFIFO_9_writeBackGPR_T_35 : @[utils.scala 10:20]
          debugFIFO_9_writeBackGPR_insType_2 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_9_writeBackGPR_T_36 = eq(UInt<7>("h67"), _debugFIFO_9_writeBackGPR_T_32) @[utils.scala 10:20]
          when _debugFIFO_9_writeBackGPR_T_36 : @[utils.scala 10:20]
            debugFIFO_9_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_9_writeBackGPR_T_37 = eq(UInt<7>("h63"), _debugFIFO_9_writeBackGPR_T_32) @[utils.scala 10:20]
            when _debugFIFO_9_writeBackGPR_T_37 : @[utils.scala 10:20]
              debugFIFO_9_writeBackGPR_insType_2 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_9_writeBackGPR_T_38 = eq(UInt<2>("h3"), _debugFIFO_9_writeBackGPR_T_32) @[utils.scala 10:20]
              when _debugFIFO_9_writeBackGPR_T_38 : @[utils.scala 10:20]
                debugFIFO_9_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_9_writeBackGPR_T_39 = eq(UInt<6>("h23"), _debugFIFO_9_writeBackGPR_T_32) @[utils.scala 10:20]
                when _debugFIFO_9_writeBackGPR_T_39 : @[utils.scala 10:20]
                  debugFIFO_9_writeBackGPR_insType_2 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_9_writeBackGPR_T_40 = eq(UInt<5>("h13"), _debugFIFO_9_writeBackGPR_T_32) @[utils.scala 10:20]
                  when _debugFIFO_9_writeBackGPR_T_40 : @[utils.scala 10:20]
                    debugFIFO_9_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_9_writeBackGPR_T_41 = eq(UInt<5>("h1b"), _debugFIFO_9_writeBackGPR_T_32) @[utils.scala 10:20]
                    when _debugFIFO_9_writeBackGPR_T_41 : @[utils.scala 10:20]
                      debugFIFO_9_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_9_writeBackGPR_T_42 = eq(UInt<6>("h33"), _debugFIFO_9_writeBackGPR_T_32) @[utils.scala 10:20]
                      when _debugFIFO_9_writeBackGPR_T_42 : @[utils.scala 10:20]
                        debugFIFO_9_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_9_writeBackGPR_T_43 = eq(UInt<6>("h3b"), _debugFIFO_9_writeBackGPR_T_32) @[utils.scala 10:20]
                        when _debugFIFO_9_writeBackGPR_T_43 : @[utils.scala 10:20]
                          debugFIFO_9_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_9_writeBackGPR_T_44 = eq(UInt<7>("h73"), _debugFIFO_9_writeBackGPR_T_32) @[utils.scala 10:20]
                          when _debugFIFO_9_writeBackGPR_T_44 : @[utils.scala 10:20]
                            debugFIFO_9_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_9_writeBackGPR_T_45 = eq(UInt<4>("hf"), _debugFIFO_9_writeBackGPR_T_32) @[utils.scala 10:20]
                            when _debugFIFO_9_writeBackGPR_T_45 : @[utils.scala 10:20]
                              debugFIFO_9_writeBackGPR_insType_2 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_9_writeBackGPR_T_46 = eq(UInt<6>("h2f"), _debugFIFO_9_writeBackGPR_T_32) @[utils.scala 10:20]
                              when _debugFIFO_9_writeBackGPR_T_46 : @[utils.scala 10:20]
                                debugFIFO_9_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_9_writeBackGPR_T_47 = eq(UInt<3>("h4"), debugFIFO_9_writeBackGPR_insType_2) @[rob.scala 52:141]
    node _debugFIFO_9_writeBackGPR_T_48 = bits(debugFIFO[9].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_9_writeBackGPR_insType_3 : UInt<3>
    debugFIFO_9_writeBackGPR_insType_3 <= UInt<3>("h0")
    node _debugFIFO_9_writeBackGPR_T_49 = eq(UInt<6>("h37"), _debugFIFO_9_writeBackGPR_T_48) @[utils.scala 10:20]
    when _debugFIFO_9_writeBackGPR_T_49 : @[utils.scala 10:20]
      debugFIFO_9_writeBackGPR_insType_3 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_9_writeBackGPR_T_50 = eq(UInt<5>("h17"), _debugFIFO_9_writeBackGPR_T_48) @[utils.scala 10:20]
      when _debugFIFO_9_writeBackGPR_T_50 : @[utils.scala 10:20]
        debugFIFO_9_writeBackGPR_insType_3 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_9_writeBackGPR_T_51 = eq(UInt<7>("h6f"), _debugFIFO_9_writeBackGPR_T_48) @[utils.scala 10:20]
        when _debugFIFO_9_writeBackGPR_T_51 : @[utils.scala 10:20]
          debugFIFO_9_writeBackGPR_insType_3 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_9_writeBackGPR_T_52 = eq(UInt<7>("h67"), _debugFIFO_9_writeBackGPR_T_48) @[utils.scala 10:20]
          when _debugFIFO_9_writeBackGPR_T_52 : @[utils.scala 10:20]
            debugFIFO_9_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_9_writeBackGPR_T_53 = eq(UInt<7>("h63"), _debugFIFO_9_writeBackGPR_T_48) @[utils.scala 10:20]
            when _debugFIFO_9_writeBackGPR_T_53 : @[utils.scala 10:20]
              debugFIFO_9_writeBackGPR_insType_3 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_9_writeBackGPR_T_54 = eq(UInt<2>("h3"), _debugFIFO_9_writeBackGPR_T_48) @[utils.scala 10:20]
              when _debugFIFO_9_writeBackGPR_T_54 : @[utils.scala 10:20]
                debugFIFO_9_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_9_writeBackGPR_T_55 = eq(UInt<6>("h23"), _debugFIFO_9_writeBackGPR_T_48) @[utils.scala 10:20]
                when _debugFIFO_9_writeBackGPR_T_55 : @[utils.scala 10:20]
                  debugFIFO_9_writeBackGPR_insType_3 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_9_writeBackGPR_T_56 = eq(UInt<5>("h13"), _debugFIFO_9_writeBackGPR_T_48) @[utils.scala 10:20]
                  when _debugFIFO_9_writeBackGPR_T_56 : @[utils.scala 10:20]
                    debugFIFO_9_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_9_writeBackGPR_T_57 = eq(UInt<5>("h1b"), _debugFIFO_9_writeBackGPR_T_48) @[utils.scala 10:20]
                    when _debugFIFO_9_writeBackGPR_T_57 : @[utils.scala 10:20]
                      debugFIFO_9_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_9_writeBackGPR_T_58 = eq(UInt<6>("h33"), _debugFIFO_9_writeBackGPR_T_48) @[utils.scala 10:20]
                      when _debugFIFO_9_writeBackGPR_T_58 : @[utils.scala 10:20]
                        debugFIFO_9_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_9_writeBackGPR_T_59 = eq(UInt<6>("h3b"), _debugFIFO_9_writeBackGPR_T_48) @[utils.scala 10:20]
                        when _debugFIFO_9_writeBackGPR_T_59 : @[utils.scala 10:20]
                          debugFIFO_9_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_9_writeBackGPR_T_60 = eq(UInt<7>("h73"), _debugFIFO_9_writeBackGPR_T_48) @[utils.scala 10:20]
                          when _debugFIFO_9_writeBackGPR_T_60 : @[utils.scala 10:20]
                            debugFIFO_9_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_9_writeBackGPR_T_61 = eq(UInt<4>("hf"), _debugFIFO_9_writeBackGPR_T_48) @[utils.scala 10:20]
                            when _debugFIFO_9_writeBackGPR_T_61 : @[utils.scala 10:20]
                              debugFIFO_9_writeBackGPR_insType_3 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_9_writeBackGPR_T_62 = eq(UInt<6>("h2f"), _debugFIFO_9_writeBackGPR_T_48) @[utils.scala 10:20]
                              when _debugFIFO_9_writeBackGPR_T_62 : @[utils.scala 10:20]
                                debugFIFO_9_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_9_writeBackGPR_T_63 = eq(UInt<3>("h5"), debugFIFO_9_writeBackGPR_insType_3) @[rob.scala 52:141]
    node _debugFIFO_9_writeBackGPR_T_64 = or(_debugFIFO_9_writeBackGPR_T_15, _debugFIFO_9_writeBackGPR_T_31) @[rob.scala 52:197]
    node _debugFIFO_9_writeBackGPR_T_65 = or(_debugFIFO_9_writeBackGPR_T_64, _debugFIFO_9_writeBackGPR_T_47) @[rob.scala 52:197]
    node _debugFIFO_9_writeBackGPR_T_66 = or(_debugFIFO_9_writeBackGPR_T_65, _debugFIFO_9_writeBackGPR_T_63) @[rob.scala 52:197]
    node _debugFIFO_9_writeBackGPR_T_67 = bits(debugFIFO[9].instruction, 11, 7) @[rob.scala 52:223]
    node _debugFIFO_9_writeBackGPR_T_68 = orr(_debugFIFO_9_writeBackGPR_T_67) @[rob.scala 52:231]
    node _debugFIFO_9_writeBackGPR_T_69 = and(_debugFIFO_9_writeBackGPR_T_66, _debugFIFO_9_writeBackGPR_T_68) @[rob.scala 52:203]
    node _debugFIFO_9_writeBackGPR_T_70 = and(_debugFIFO_9_writeBackGPR_T_69, debugFIFO[9].valid) @[rob.scala 52:235]
    debugFIFO[9].writeBackGPR <= _debugFIFO_9_writeBackGPR_T_70 @[rob.scala 52:52]
    node _debugFIFO_10_writeBackGPR_T = bits(debugFIFO[10].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_10_writeBackGPR_insType : UInt<3>
    debugFIFO_10_writeBackGPR_insType <= UInt<3>("h0")
    node _debugFIFO_10_writeBackGPR_T_1 = eq(UInt<6>("h37"), _debugFIFO_10_writeBackGPR_T) @[utils.scala 10:20]
    when _debugFIFO_10_writeBackGPR_T_1 : @[utils.scala 10:20]
      debugFIFO_10_writeBackGPR_insType <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_10_writeBackGPR_T_2 = eq(UInt<5>("h17"), _debugFIFO_10_writeBackGPR_T) @[utils.scala 10:20]
      when _debugFIFO_10_writeBackGPR_T_2 : @[utils.scala 10:20]
        debugFIFO_10_writeBackGPR_insType <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_10_writeBackGPR_T_3 = eq(UInt<7>("h6f"), _debugFIFO_10_writeBackGPR_T) @[utils.scala 10:20]
        when _debugFIFO_10_writeBackGPR_T_3 : @[utils.scala 10:20]
          debugFIFO_10_writeBackGPR_insType <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_10_writeBackGPR_T_4 = eq(UInt<7>("h67"), _debugFIFO_10_writeBackGPR_T) @[utils.scala 10:20]
          when _debugFIFO_10_writeBackGPR_T_4 : @[utils.scala 10:20]
            debugFIFO_10_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_10_writeBackGPR_T_5 = eq(UInt<7>("h63"), _debugFIFO_10_writeBackGPR_T) @[utils.scala 10:20]
            when _debugFIFO_10_writeBackGPR_T_5 : @[utils.scala 10:20]
              debugFIFO_10_writeBackGPR_insType <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_10_writeBackGPR_T_6 = eq(UInt<2>("h3"), _debugFIFO_10_writeBackGPR_T) @[utils.scala 10:20]
              when _debugFIFO_10_writeBackGPR_T_6 : @[utils.scala 10:20]
                debugFIFO_10_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_10_writeBackGPR_T_7 = eq(UInt<6>("h23"), _debugFIFO_10_writeBackGPR_T) @[utils.scala 10:20]
                when _debugFIFO_10_writeBackGPR_T_7 : @[utils.scala 10:20]
                  debugFIFO_10_writeBackGPR_insType <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_10_writeBackGPR_T_8 = eq(UInt<5>("h13"), _debugFIFO_10_writeBackGPR_T) @[utils.scala 10:20]
                  when _debugFIFO_10_writeBackGPR_T_8 : @[utils.scala 10:20]
                    debugFIFO_10_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_10_writeBackGPR_T_9 = eq(UInt<5>("h1b"), _debugFIFO_10_writeBackGPR_T) @[utils.scala 10:20]
                    when _debugFIFO_10_writeBackGPR_T_9 : @[utils.scala 10:20]
                      debugFIFO_10_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_10_writeBackGPR_T_10 = eq(UInt<6>("h33"), _debugFIFO_10_writeBackGPR_T) @[utils.scala 10:20]
                      when _debugFIFO_10_writeBackGPR_T_10 : @[utils.scala 10:20]
                        debugFIFO_10_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_10_writeBackGPR_T_11 = eq(UInt<6>("h3b"), _debugFIFO_10_writeBackGPR_T) @[utils.scala 10:20]
                        when _debugFIFO_10_writeBackGPR_T_11 : @[utils.scala 10:20]
                          debugFIFO_10_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_10_writeBackGPR_T_12 = eq(UInt<7>("h73"), _debugFIFO_10_writeBackGPR_T) @[utils.scala 10:20]
                          when _debugFIFO_10_writeBackGPR_T_12 : @[utils.scala 10:20]
                            debugFIFO_10_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_10_writeBackGPR_T_13 = eq(UInt<4>("hf"), _debugFIFO_10_writeBackGPR_T) @[utils.scala 10:20]
                            when _debugFIFO_10_writeBackGPR_T_13 : @[utils.scala 10:20]
                              debugFIFO_10_writeBackGPR_insType <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_10_writeBackGPR_T_14 = eq(UInt<6>("h2f"), _debugFIFO_10_writeBackGPR_T) @[utils.scala 10:20]
                              when _debugFIFO_10_writeBackGPR_T_14 : @[utils.scala 10:20]
                                debugFIFO_10_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_10_writeBackGPR_T_15 = eq(UInt<1>("h1"), debugFIFO_10_writeBackGPR_insType) @[rob.scala 52:141]
    node _debugFIFO_10_writeBackGPR_T_16 = bits(debugFIFO[10].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_10_writeBackGPR_insType_1 : UInt<3>
    debugFIFO_10_writeBackGPR_insType_1 <= UInt<3>("h0")
    node _debugFIFO_10_writeBackGPR_T_17 = eq(UInt<6>("h37"), _debugFIFO_10_writeBackGPR_T_16) @[utils.scala 10:20]
    when _debugFIFO_10_writeBackGPR_T_17 : @[utils.scala 10:20]
      debugFIFO_10_writeBackGPR_insType_1 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_10_writeBackGPR_T_18 = eq(UInt<5>("h17"), _debugFIFO_10_writeBackGPR_T_16) @[utils.scala 10:20]
      when _debugFIFO_10_writeBackGPR_T_18 : @[utils.scala 10:20]
        debugFIFO_10_writeBackGPR_insType_1 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_10_writeBackGPR_T_19 = eq(UInt<7>("h6f"), _debugFIFO_10_writeBackGPR_T_16) @[utils.scala 10:20]
        when _debugFIFO_10_writeBackGPR_T_19 : @[utils.scala 10:20]
          debugFIFO_10_writeBackGPR_insType_1 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_10_writeBackGPR_T_20 = eq(UInt<7>("h67"), _debugFIFO_10_writeBackGPR_T_16) @[utils.scala 10:20]
          when _debugFIFO_10_writeBackGPR_T_20 : @[utils.scala 10:20]
            debugFIFO_10_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_10_writeBackGPR_T_21 = eq(UInt<7>("h63"), _debugFIFO_10_writeBackGPR_T_16) @[utils.scala 10:20]
            when _debugFIFO_10_writeBackGPR_T_21 : @[utils.scala 10:20]
              debugFIFO_10_writeBackGPR_insType_1 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_10_writeBackGPR_T_22 = eq(UInt<2>("h3"), _debugFIFO_10_writeBackGPR_T_16) @[utils.scala 10:20]
              when _debugFIFO_10_writeBackGPR_T_22 : @[utils.scala 10:20]
                debugFIFO_10_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_10_writeBackGPR_T_23 = eq(UInt<6>("h23"), _debugFIFO_10_writeBackGPR_T_16) @[utils.scala 10:20]
                when _debugFIFO_10_writeBackGPR_T_23 : @[utils.scala 10:20]
                  debugFIFO_10_writeBackGPR_insType_1 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_10_writeBackGPR_T_24 = eq(UInt<5>("h13"), _debugFIFO_10_writeBackGPR_T_16) @[utils.scala 10:20]
                  when _debugFIFO_10_writeBackGPR_T_24 : @[utils.scala 10:20]
                    debugFIFO_10_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_10_writeBackGPR_T_25 = eq(UInt<5>("h1b"), _debugFIFO_10_writeBackGPR_T_16) @[utils.scala 10:20]
                    when _debugFIFO_10_writeBackGPR_T_25 : @[utils.scala 10:20]
                      debugFIFO_10_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_10_writeBackGPR_T_26 = eq(UInt<6>("h33"), _debugFIFO_10_writeBackGPR_T_16) @[utils.scala 10:20]
                      when _debugFIFO_10_writeBackGPR_T_26 : @[utils.scala 10:20]
                        debugFIFO_10_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_10_writeBackGPR_T_27 = eq(UInt<6>("h3b"), _debugFIFO_10_writeBackGPR_T_16) @[utils.scala 10:20]
                        when _debugFIFO_10_writeBackGPR_T_27 : @[utils.scala 10:20]
                          debugFIFO_10_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_10_writeBackGPR_T_28 = eq(UInt<7>("h73"), _debugFIFO_10_writeBackGPR_T_16) @[utils.scala 10:20]
                          when _debugFIFO_10_writeBackGPR_T_28 : @[utils.scala 10:20]
                            debugFIFO_10_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_10_writeBackGPR_T_29 = eq(UInt<4>("hf"), _debugFIFO_10_writeBackGPR_T_16) @[utils.scala 10:20]
                            when _debugFIFO_10_writeBackGPR_T_29 : @[utils.scala 10:20]
                              debugFIFO_10_writeBackGPR_insType_1 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_10_writeBackGPR_T_30 = eq(UInt<6>("h2f"), _debugFIFO_10_writeBackGPR_T_16) @[utils.scala 10:20]
                              when _debugFIFO_10_writeBackGPR_T_30 : @[utils.scala 10:20]
                                debugFIFO_10_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_10_writeBackGPR_T_31 = eq(UInt<1>("h0"), debugFIFO_10_writeBackGPR_insType_1) @[rob.scala 52:141]
    node _debugFIFO_10_writeBackGPR_T_32 = bits(debugFIFO[10].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_10_writeBackGPR_insType_2 : UInt<3>
    debugFIFO_10_writeBackGPR_insType_2 <= UInt<3>("h0")
    node _debugFIFO_10_writeBackGPR_T_33 = eq(UInt<6>("h37"), _debugFIFO_10_writeBackGPR_T_32) @[utils.scala 10:20]
    when _debugFIFO_10_writeBackGPR_T_33 : @[utils.scala 10:20]
      debugFIFO_10_writeBackGPR_insType_2 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_10_writeBackGPR_T_34 = eq(UInt<5>("h17"), _debugFIFO_10_writeBackGPR_T_32) @[utils.scala 10:20]
      when _debugFIFO_10_writeBackGPR_T_34 : @[utils.scala 10:20]
        debugFIFO_10_writeBackGPR_insType_2 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_10_writeBackGPR_T_35 = eq(UInt<7>("h6f"), _debugFIFO_10_writeBackGPR_T_32) @[utils.scala 10:20]
        when _debugFIFO_10_writeBackGPR_T_35 : @[utils.scala 10:20]
          debugFIFO_10_writeBackGPR_insType_2 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_10_writeBackGPR_T_36 = eq(UInt<7>("h67"), _debugFIFO_10_writeBackGPR_T_32) @[utils.scala 10:20]
          when _debugFIFO_10_writeBackGPR_T_36 : @[utils.scala 10:20]
            debugFIFO_10_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_10_writeBackGPR_T_37 = eq(UInt<7>("h63"), _debugFIFO_10_writeBackGPR_T_32) @[utils.scala 10:20]
            when _debugFIFO_10_writeBackGPR_T_37 : @[utils.scala 10:20]
              debugFIFO_10_writeBackGPR_insType_2 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_10_writeBackGPR_T_38 = eq(UInt<2>("h3"), _debugFIFO_10_writeBackGPR_T_32) @[utils.scala 10:20]
              when _debugFIFO_10_writeBackGPR_T_38 : @[utils.scala 10:20]
                debugFIFO_10_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_10_writeBackGPR_T_39 = eq(UInt<6>("h23"), _debugFIFO_10_writeBackGPR_T_32) @[utils.scala 10:20]
                when _debugFIFO_10_writeBackGPR_T_39 : @[utils.scala 10:20]
                  debugFIFO_10_writeBackGPR_insType_2 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_10_writeBackGPR_T_40 = eq(UInt<5>("h13"), _debugFIFO_10_writeBackGPR_T_32) @[utils.scala 10:20]
                  when _debugFIFO_10_writeBackGPR_T_40 : @[utils.scala 10:20]
                    debugFIFO_10_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_10_writeBackGPR_T_41 = eq(UInt<5>("h1b"), _debugFIFO_10_writeBackGPR_T_32) @[utils.scala 10:20]
                    when _debugFIFO_10_writeBackGPR_T_41 : @[utils.scala 10:20]
                      debugFIFO_10_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_10_writeBackGPR_T_42 = eq(UInt<6>("h33"), _debugFIFO_10_writeBackGPR_T_32) @[utils.scala 10:20]
                      when _debugFIFO_10_writeBackGPR_T_42 : @[utils.scala 10:20]
                        debugFIFO_10_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_10_writeBackGPR_T_43 = eq(UInt<6>("h3b"), _debugFIFO_10_writeBackGPR_T_32) @[utils.scala 10:20]
                        when _debugFIFO_10_writeBackGPR_T_43 : @[utils.scala 10:20]
                          debugFIFO_10_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_10_writeBackGPR_T_44 = eq(UInt<7>("h73"), _debugFIFO_10_writeBackGPR_T_32) @[utils.scala 10:20]
                          when _debugFIFO_10_writeBackGPR_T_44 : @[utils.scala 10:20]
                            debugFIFO_10_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_10_writeBackGPR_T_45 = eq(UInt<4>("hf"), _debugFIFO_10_writeBackGPR_T_32) @[utils.scala 10:20]
                            when _debugFIFO_10_writeBackGPR_T_45 : @[utils.scala 10:20]
                              debugFIFO_10_writeBackGPR_insType_2 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_10_writeBackGPR_T_46 = eq(UInt<6>("h2f"), _debugFIFO_10_writeBackGPR_T_32) @[utils.scala 10:20]
                              when _debugFIFO_10_writeBackGPR_T_46 : @[utils.scala 10:20]
                                debugFIFO_10_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_10_writeBackGPR_T_47 = eq(UInt<3>("h4"), debugFIFO_10_writeBackGPR_insType_2) @[rob.scala 52:141]
    node _debugFIFO_10_writeBackGPR_T_48 = bits(debugFIFO[10].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_10_writeBackGPR_insType_3 : UInt<3>
    debugFIFO_10_writeBackGPR_insType_3 <= UInt<3>("h0")
    node _debugFIFO_10_writeBackGPR_T_49 = eq(UInt<6>("h37"), _debugFIFO_10_writeBackGPR_T_48) @[utils.scala 10:20]
    when _debugFIFO_10_writeBackGPR_T_49 : @[utils.scala 10:20]
      debugFIFO_10_writeBackGPR_insType_3 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_10_writeBackGPR_T_50 = eq(UInt<5>("h17"), _debugFIFO_10_writeBackGPR_T_48) @[utils.scala 10:20]
      when _debugFIFO_10_writeBackGPR_T_50 : @[utils.scala 10:20]
        debugFIFO_10_writeBackGPR_insType_3 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_10_writeBackGPR_T_51 = eq(UInt<7>("h6f"), _debugFIFO_10_writeBackGPR_T_48) @[utils.scala 10:20]
        when _debugFIFO_10_writeBackGPR_T_51 : @[utils.scala 10:20]
          debugFIFO_10_writeBackGPR_insType_3 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_10_writeBackGPR_T_52 = eq(UInt<7>("h67"), _debugFIFO_10_writeBackGPR_T_48) @[utils.scala 10:20]
          when _debugFIFO_10_writeBackGPR_T_52 : @[utils.scala 10:20]
            debugFIFO_10_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_10_writeBackGPR_T_53 = eq(UInt<7>("h63"), _debugFIFO_10_writeBackGPR_T_48) @[utils.scala 10:20]
            when _debugFIFO_10_writeBackGPR_T_53 : @[utils.scala 10:20]
              debugFIFO_10_writeBackGPR_insType_3 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_10_writeBackGPR_T_54 = eq(UInt<2>("h3"), _debugFIFO_10_writeBackGPR_T_48) @[utils.scala 10:20]
              when _debugFIFO_10_writeBackGPR_T_54 : @[utils.scala 10:20]
                debugFIFO_10_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_10_writeBackGPR_T_55 = eq(UInt<6>("h23"), _debugFIFO_10_writeBackGPR_T_48) @[utils.scala 10:20]
                when _debugFIFO_10_writeBackGPR_T_55 : @[utils.scala 10:20]
                  debugFIFO_10_writeBackGPR_insType_3 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_10_writeBackGPR_T_56 = eq(UInt<5>("h13"), _debugFIFO_10_writeBackGPR_T_48) @[utils.scala 10:20]
                  when _debugFIFO_10_writeBackGPR_T_56 : @[utils.scala 10:20]
                    debugFIFO_10_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_10_writeBackGPR_T_57 = eq(UInt<5>("h1b"), _debugFIFO_10_writeBackGPR_T_48) @[utils.scala 10:20]
                    when _debugFIFO_10_writeBackGPR_T_57 : @[utils.scala 10:20]
                      debugFIFO_10_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_10_writeBackGPR_T_58 = eq(UInt<6>("h33"), _debugFIFO_10_writeBackGPR_T_48) @[utils.scala 10:20]
                      when _debugFIFO_10_writeBackGPR_T_58 : @[utils.scala 10:20]
                        debugFIFO_10_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_10_writeBackGPR_T_59 = eq(UInt<6>("h3b"), _debugFIFO_10_writeBackGPR_T_48) @[utils.scala 10:20]
                        when _debugFIFO_10_writeBackGPR_T_59 : @[utils.scala 10:20]
                          debugFIFO_10_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_10_writeBackGPR_T_60 = eq(UInt<7>("h73"), _debugFIFO_10_writeBackGPR_T_48) @[utils.scala 10:20]
                          when _debugFIFO_10_writeBackGPR_T_60 : @[utils.scala 10:20]
                            debugFIFO_10_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_10_writeBackGPR_T_61 = eq(UInt<4>("hf"), _debugFIFO_10_writeBackGPR_T_48) @[utils.scala 10:20]
                            when _debugFIFO_10_writeBackGPR_T_61 : @[utils.scala 10:20]
                              debugFIFO_10_writeBackGPR_insType_3 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_10_writeBackGPR_T_62 = eq(UInt<6>("h2f"), _debugFIFO_10_writeBackGPR_T_48) @[utils.scala 10:20]
                              when _debugFIFO_10_writeBackGPR_T_62 : @[utils.scala 10:20]
                                debugFIFO_10_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_10_writeBackGPR_T_63 = eq(UInt<3>("h5"), debugFIFO_10_writeBackGPR_insType_3) @[rob.scala 52:141]
    node _debugFIFO_10_writeBackGPR_T_64 = or(_debugFIFO_10_writeBackGPR_T_15, _debugFIFO_10_writeBackGPR_T_31) @[rob.scala 52:197]
    node _debugFIFO_10_writeBackGPR_T_65 = or(_debugFIFO_10_writeBackGPR_T_64, _debugFIFO_10_writeBackGPR_T_47) @[rob.scala 52:197]
    node _debugFIFO_10_writeBackGPR_T_66 = or(_debugFIFO_10_writeBackGPR_T_65, _debugFIFO_10_writeBackGPR_T_63) @[rob.scala 52:197]
    node _debugFIFO_10_writeBackGPR_T_67 = bits(debugFIFO[10].instruction, 11, 7) @[rob.scala 52:223]
    node _debugFIFO_10_writeBackGPR_T_68 = orr(_debugFIFO_10_writeBackGPR_T_67) @[rob.scala 52:231]
    node _debugFIFO_10_writeBackGPR_T_69 = and(_debugFIFO_10_writeBackGPR_T_66, _debugFIFO_10_writeBackGPR_T_68) @[rob.scala 52:203]
    node _debugFIFO_10_writeBackGPR_T_70 = and(_debugFIFO_10_writeBackGPR_T_69, debugFIFO[10].valid) @[rob.scala 52:235]
    debugFIFO[10].writeBackGPR <= _debugFIFO_10_writeBackGPR_T_70 @[rob.scala 52:52]
    node _debugFIFO_11_writeBackGPR_T = bits(debugFIFO[11].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_11_writeBackGPR_insType : UInt<3>
    debugFIFO_11_writeBackGPR_insType <= UInt<3>("h0")
    node _debugFIFO_11_writeBackGPR_T_1 = eq(UInt<6>("h37"), _debugFIFO_11_writeBackGPR_T) @[utils.scala 10:20]
    when _debugFIFO_11_writeBackGPR_T_1 : @[utils.scala 10:20]
      debugFIFO_11_writeBackGPR_insType <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_11_writeBackGPR_T_2 = eq(UInt<5>("h17"), _debugFIFO_11_writeBackGPR_T) @[utils.scala 10:20]
      when _debugFIFO_11_writeBackGPR_T_2 : @[utils.scala 10:20]
        debugFIFO_11_writeBackGPR_insType <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_11_writeBackGPR_T_3 = eq(UInt<7>("h6f"), _debugFIFO_11_writeBackGPR_T) @[utils.scala 10:20]
        when _debugFIFO_11_writeBackGPR_T_3 : @[utils.scala 10:20]
          debugFIFO_11_writeBackGPR_insType <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_11_writeBackGPR_T_4 = eq(UInt<7>("h67"), _debugFIFO_11_writeBackGPR_T) @[utils.scala 10:20]
          when _debugFIFO_11_writeBackGPR_T_4 : @[utils.scala 10:20]
            debugFIFO_11_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_11_writeBackGPR_T_5 = eq(UInt<7>("h63"), _debugFIFO_11_writeBackGPR_T) @[utils.scala 10:20]
            when _debugFIFO_11_writeBackGPR_T_5 : @[utils.scala 10:20]
              debugFIFO_11_writeBackGPR_insType <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_11_writeBackGPR_T_6 = eq(UInt<2>("h3"), _debugFIFO_11_writeBackGPR_T) @[utils.scala 10:20]
              when _debugFIFO_11_writeBackGPR_T_6 : @[utils.scala 10:20]
                debugFIFO_11_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_11_writeBackGPR_T_7 = eq(UInt<6>("h23"), _debugFIFO_11_writeBackGPR_T) @[utils.scala 10:20]
                when _debugFIFO_11_writeBackGPR_T_7 : @[utils.scala 10:20]
                  debugFIFO_11_writeBackGPR_insType <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_11_writeBackGPR_T_8 = eq(UInt<5>("h13"), _debugFIFO_11_writeBackGPR_T) @[utils.scala 10:20]
                  when _debugFIFO_11_writeBackGPR_T_8 : @[utils.scala 10:20]
                    debugFIFO_11_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_11_writeBackGPR_T_9 = eq(UInt<5>("h1b"), _debugFIFO_11_writeBackGPR_T) @[utils.scala 10:20]
                    when _debugFIFO_11_writeBackGPR_T_9 : @[utils.scala 10:20]
                      debugFIFO_11_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_11_writeBackGPR_T_10 = eq(UInt<6>("h33"), _debugFIFO_11_writeBackGPR_T) @[utils.scala 10:20]
                      when _debugFIFO_11_writeBackGPR_T_10 : @[utils.scala 10:20]
                        debugFIFO_11_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_11_writeBackGPR_T_11 = eq(UInt<6>("h3b"), _debugFIFO_11_writeBackGPR_T) @[utils.scala 10:20]
                        when _debugFIFO_11_writeBackGPR_T_11 : @[utils.scala 10:20]
                          debugFIFO_11_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_11_writeBackGPR_T_12 = eq(UInt<7>("h73"), _debugFIFO_11_writeBackGPR_T) @[utils.scala 10:20]
                          when _debugFIFO_11_writeBackGPR_T_12 : @[utils.scala 10:20]
                            debugFIFO_11_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_11_writeBackGPR_T_13 = eq(UInt<4>("hf"), _debugFIFO_11_writeBackGPR_T) @[utils.scala 10:20]
                            when _debugFIFO_11_writeBackGPR_T_13 : @[utils.scala 10:20]
                              debugFIFO_11_writeBackGPR_insType <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_11_writeBackGPR_T_14 = eq(UInt<6>("h2f"), _debugFIFO_11_writeBackGPR_T) @[utils.scala 10:20]
                              when _debugFIFO_11_writeBackGPR_T_14 : @[utils.scala 10:20]
                                debugFIFO_11_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_11_writeBackGPR_T_15 = eq(UInt<1>("h1"), debugFIFO_11_writeBackGPR_insType) @[rob.scala 52:141]
    node _debugFIFO_11_writeBackGPR_T_16 = bits(debugFIFO[11].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_11_writeBackGPR_insType_1 : UInt<3>
    debugFIFO_11_writeBackGPR_insType_1 <= UInt<3>("h0")
    node _debugFIFO_11_writeBackGPR_T_17 = eq(UInt<6>("h37"), _debugFIFO_11_writeBackGPR_T_16) @[utils.scala 10:20]
    when _debugFIFO_11_writeBackGPR_T_17 : @[utils.scala 10:20]
      debugFIFO_11_writeBackGPR_insType_1 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_11_writeBackGPR_T_18 = eq(UInt<5>("h17"), _debugFIFO_11_writeBackGPR_T_16) @[utils.scala 10:20]
      when _debugFIFO_11_writeBackGPR_T_18 : @[utils.scala 10:20]
        debugFIFO_11_writeBackGPR_insType_1 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_11_writeBackGPR_T_19 = eq(UInt<7>("h6f"), _debugFIFO_11_writeBackGPR_T_16) @[utils.scala 10:20]
        when _debugFIFO_11_writeBackGPR_T_19 : @[utils.scala 10:20]
          debugFIFO_11_writeBackGPR_insType_1 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_11_writeBackGPR_T_20 = eq(UInt<7>("h67"), _debugFIFO_11_writeBackGPR_T_16) @[utils.scala 10:20]
          when _debugFIFO_11_writeBackGPR_T_20 : @[utils.scala 10:20]
            debugFIFO_11_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_11_writeBackGPR_T_21 = eq(UInt<7>("h63"), _debugFIFO_11_writeBackGPR_T_16) @[utils.scala 10:20]
            when _debugFIFO_11_writeBackGPR_T_21 : @[utils.scala 10:20]
              debugFIFO_11_writeBackGPR_insType_1 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_11_writeBackGPR_T_22 = eq(UInt<2>("h3"), _debugFIFO_11_writeBackGPR_T_16) @[utils.scala 10:20]
              when _debugFIFO_11_writeBackGPR_T_22 : @[utils.scala 10:20]
                debugFIFO_11_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_11_writeBackGPR_T_23 = eq(UInt<6>("h23"), _debugFIFO_11_writeBackGPR_T_16) @[utils.scala 10:20]
                when _debugFIFO_11_writeBackGPR_T_23 : @[utils.scala 10:20]
                  debugFIFO_11_writeBackGPR_insType_1 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_11_writeBackGPR_T_24 = eq(UInt<5>("h13"), _debugFIFO_11_writeBackGPR_T_16) @[utils.scala 10:20]
                  when _debugFIFO_11_writeBackGPR_T_24 : @[utils.scala 10:20]
                    debugFIFO_11_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_11_writeBackGPR_T_25 = eq(UInt<5>("h1b"), _debugFIFO_11_writeBackGPR_T_16) @[utils.scala 10:20]
                    when _debugFIFO_11_writeBackGPR_T_25 : @[utils.scala 10:20]
                      debugFIFO_11_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_11_writeBackGPR_T_26 = eq(UInt<6>("h33"), _debugFIFO_11_writeBackGPR_T_16) @[utils.scala 10:20]
                      when _debugFIFO_11_writeBackGPR_T_26 : @[utils.scala 10:20]
                        debugFIFO_11_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_11_writeBackGPR_T_27 = eq(UInt<6>("h3b"), _debugFIFO_11_writeBackGPR_T_16) @[utils.scala 10:20]
                        when _debugFIFO_11_writeBackGPR_T_27 : @[utils.scala 10:20]
                          debugFIFO_11_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_11_writeBackGPR_T_28 = eq(UInt<7>("h73"), _debugFIFO_11_writeBackGPR_T_16) @[utils.scala 10:20]
                          when _debugFIFO_11_writeBackGPR_T_28 : @[utils.scala 10:20]
                            debugFIFO_11_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_11_writeBackGPR_T_29 = eq(UInt<4>("hf"), _debugFIFO_11_writeBackGPR_T_16) @[utils.scala 10:20]
                            when _debugFIFO_11_writeBackGPR_T_29 : @[utils.scala 10:20]
                              debugFIFO_11_writeBackGPR_insType_1 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_11_writeBackGPR_T_30 = eq(UInt<6>("h2f"), _debugFIFO_11_writeBackGPR_T_16) @[utils.scala 10:20]
                              when _debugFIFO_11_writeBackGPR_T_30 : @[utils.scala 10:20]
                                debugFIFO_11_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_11_writeBackGPR_T_31 = eq(UInt<1>("h0"), debugFIFO_11_writeBackGPR_insType_1) @[rob.scala 52:141]
    node _debugFIFO_11_writeBackGPR_T_32 = bits(debugFIFO[11].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_11_writeBackGPR_insType_2 : UInt<3>
    debugFIFO_11_writeBackGPR_insType_2 <= UInt<3>("h0")
    node _debugFIFO_11_writeBackGPR_T_33 = eq(UInt<6>("h37"), _debugFIFO_11_writeBackGPR_T_32) @[utils.scala 10:20]
    when _debugFIFO_11_writeBackGPR_T_33 : @[utils.scala 10:20]
      debugFIFO_11_writeBackGPR_insType_2 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_11_writeBackGPR_T_34 = eq(UInt<5>("h17"), _debugFIFO_11_writeBackGPR_T_32) @[utils.scala 10:20]
      when _debugFIFO_11_writeBackGPR_T_34 : @[utils.scala 10:20]
        debugFIFO_11_writeBackGPR_insType_2 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_11_writeBackGPR_T_35 = eq(UInt<7>("h6f"), _debugFIFO_11_writeBackGPR_T_32) @[utils.scala 10:20]
        when _debugFIFO_11_writeBackGPR_T_35 : @[utils.scala 10:20]
          debugFIFO_11_writeBackGPR_insType_2 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_11_writeBackGPR_T_36 = eq(UInt<7>("h67"), _debugFIFO_11_writeBackGPR_T_32) @[utils.scala 10:20]
          when _debugFIFO_11_writeBackGPR_T_36 : @[utils.scala 10:20]
            debugFIFO_11_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_11_writeBackGPR_T_37 = eq(UInt<7>("h63"), _debugFIFO_11_writeBackGPR_T_32) @[utils.scala 10:20]
            when _debugFIFO_11_writeBackGPR_T_37 : @[utils.scala 10:20]
              debugFIFO_11_writeBackGPR_insType_2 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_11_writeBackGPR_T_38 = eq(UInt<2>("h3"), _debugFIFO_11_writeBackGPR_T_32) @[utils.scala 10:20]
              when _debugFIFO_11_writeBackGPR_T_38 : @[utils.scala 10:20]
                debugFIFO_11_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_11_writeBackGPR_T_39 = eq(UInt<6>("h23"), _debugFIFO_11_writeBackGPR_T_32) @[utils.scala 10:20]
                when _debugFIFO_11_writeBackGPR_T_39 : @[utils.scala 10:20]
                  debugFIFO_11_writeBackGPR_insType_2 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_11_writeBackGPR_T_40 = eq(UInt<5>("h13"), _debugFIFO_11_writeBackGPR_T_32) @[utils.scala 10:20]
                  when _debugFIFO_11_writeBackGPR_T_40 : @[utils.scala 10:20]
                    debugFIFO_11_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_11_writeBackGPR_T_41 = eq(UInt<5>("h1b"), _debugFIFO_11_writeBackGPR_T_32) @[utils.scala 10:20]
                    when _debugFIFO_11_writeBackGPR_T_41 : @[utils.scala 10:20]
                      debugFIFO_11_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_11_writeBackGPR_T_42 = eq(UInt<6>("h33"), _debugFIFO_11_writeBackGPR_T_32) @[utils.scala 10:20]
                      when _debugFIFO_11_writeBackGPR_T_42 : @[utils.scala 10:20]
                        debugFIFO_11_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_11_writeBackGPR_T_43 = eq(UInt<6>("h3b"), _debugFIFO_11_writeBackGPR_T_32) @[utils.scala 10:20]
                        when _debugFIFO_11_writeBackGPR_T_43 : @[utils.scala 10:20]
                          debugFIFO_11_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_11_writeBackGPR_T_44 = eq(UInt<7>("h73"), _debugFIFO_11_writeBackGPR_T_32) @[utils.scala 10:20]
                          when _debugFIFO_11_writeBackGPR_T_44 : @[utils.scala 10:20]
                            debugFIFO_11_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_11_writeBackGPR_T_45 = eq(UInt<4>("hf"), _debugFIFO_11_writeBackGPR_T_32) @[utils.scala 10:20]
                            when _debugFIFO_11_writeBackGPR_T_45 : @[utils.scala 10:20]
                              debugFIFO_11_writeBackGPR_insType_2 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_11_writeBackGPR_T_46 = eq(UInt<6>("h2f"), _debugFIFO_11_writeBackGPR_T_32) @[utils.scala 10:20]
                              when _debugFIFO_11_writeBackGPR_T_46 : @[utils.scala 10:20]
                                debugFIFO_11_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_11_writeBackGPR_T_47 = eq(UInt<3>("h4"), debugFIFO_11_writeBackGPR_insType_2) @[rob.scala 52:141]
    node _debugFIFO_11_writeBackGPR_T_48 = bits(debugFIFO[11].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_11_writeBackGPR_insType_3 : UInt<3>
    debugFIFO_11_writeBackGPR_insType_3 <= UInt<3>("h0")
    node _debugFIFO_11_writeBackGPR_T_49 = eq(UInt<6>("h37"), _debugFIFO_11_writeBackGPR_T_48) @[utils.scala 10:20]
    when _debugFIFO_11_writeBackGPR_T_49 : @[utils.scala 10:20]
      debugFIFO_11_writeBackGPR_insType_3 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_11_writeBackGPR_T_50 = eq(UInt<5>("h17"), _debugFIFO_11_writeBackGPR_T_48) @[utils.scala 10:20]
      when _debugFIFO_11_writeBackGPR_T_50 : @[utils.scala 10:20]
        debugFIFO_11_writeBackGPR_insType_3 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_11_writeBackGPR_T_51 = eq(UInt<7>("h6f"), _debugFIFO_11_writeBackGPR_T_48) @[utils.scala 10:20]
        when _debugFIFO_11_writeBackGPR_T_51 : @[utils.scala 10:20]
          debugFIFO_11_writeBackGPR_insType_3 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_11_writeBackGPR_T_52 = eq(UInt<7>("h67"), _debugFIFO_11_writeBackGPR_T_48) @[utils.scala 10:20]
          when _debugFIFO_11_writeBackGPR_T_52 : @[utils.scala 10:20]
            debugFIFO_11_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_11_writeBackGPR_T_53 = eq(UInt<7>("h63"), _debugFIFO_11_writeBackGPR_T_48) @[utils.scala 10:20]
            when _debugFIFO_11_writeBackGPR_T_53 : @[utils.scala 10:20]
              debugFIFO_11_writeBackGPR_insType_3 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_11_writeBackGPR_T_54 = eq(UInt<2>("h3"), _debugFIFO_11_writeBackGPR_T_48) @[utils.scala 10:20]
              when _debugFIFO_11_writeBackGPR_T_54 : @[utils.scala 10:20]
                debugFIFO_11_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_11_writeBackGPR_T_55 = eq(UInt<6>("h23"), _debugFIFO_11_writeBackGPR_T_48) @[utils.scala 10:20]
                when _debugFIFO_11_writeBackGPR_T_55 : @[utils.scala 10:20]
                  debugFIFO_11_writeBackGPR_insType_3 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_11_writeBackGPR_T_56 = eq(UInt<5>("h13"), _debugFIFO_11_writeBackGPR_T_48) @[utils.scala 10:20]
                  when _debugFIFO_11_writeBackGPR_T_56 : @[utils.scala 10:20]
                    debugFIFO_11_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_11_writeBackGPR_T_57 = eq(UInt<5>("h1b"), _debugFIFO_11_writeBackGPR_T_48) @[utils.scala 10:20]
                    when _debugFIFO_11_writeBackGPR_T_57 : @[utils.scala 10:20]
                      debugFIFO_11_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_11_writeBackGPR_T_58 = eq(UInt<6>("h33"), _debugFIFO_11_writeBackGPR_T_48) @[utils.scala 10:20]
                      when _debugFIFO_11_writeBackGPR_T_58 : @[utils.scala 10:20]
                        debugFIFO_11_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_11_writeBackGPR_T_59 = eq(UInt<6>("h3b"), _debugFIFO_11_writeBackGPR_T_48) @[utils.scala 10:20]
                        when _debugFIFO_11_writeBackGPR_T_59 : @[utils.scala 10:20]
                          debugFIFO_11_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_11_writeBackGPR_T_60 = eq(UInt<7>("h73"), _debugFIFO_11_writeBackGPR_T_48) @[utils.scala 10:20]
                          when _debugFIFO_11_writeBackGPR_T_60 : @[utils.scala 10:20]
                            debugFIFO_11_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_11_writeBackGPR_T_61 = eq(UInt<4>("hf"), _debugFIFO_11_writeBackGPR_T_48) @[utils.scala 10:20]
                            when _debugFIFO_11_writeBackGPR_T_61 : @[utils.scala 10:20]
                              debugFIFO_11_writeBackGPR_insType_3 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_11_writeBackGPR_T_62 = eq(UInt<6>("h2f"), _debugFIFO_11_writeBackGPR_T_48) @[utils.scala 10:20]
                              when _debugFIFO_11_writeBackGPR_T_62 : @[utils.scala 10:20]
                                debugFIFO_11_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_11_writeBackGPR_T_63 = eq(UInt<3>("h5"), debugFIFO_11_writeBackGPR_insType_3) @[rob.scala 52:141]
    node _debugFIFO_11_writeBackGPR_T_64 = or(_debugFIFO_11_writeBackGPR_T_15, _debugFIFO_11_writeBackGPR_T_31) @[rob.scala 52:197]
    node _debugFIFO_11_writeBackGPR_T_65 = or(_debugFIFO_11_writeBackGPR_T_64, _debugFIFO_11_writeBackGPR_T_47) @[rob.scala 52:197]
    node _debugFIFO_11_writeBackGPR_T_66 = or(_debugFIFO_11_writeBackGPR_T_65, _debugFIFO_11_writeBackGPR_T_63) @[rob.scala 52:197]
    node _debugFIFO_11_writeBackGPR_T_67 = bits(debugFIFO[11].instruction, 11, 7) @[rob.scala 52:223]
    node _debugFIFO_11_writeBackGPR_T_68 = orr(_debugFIFO_11_writeBackGPR_T_67) @[rob.scala 52:231]
    node _debugFIFO_11_writeBackGPR_T_69 = and(_debugFIFO_11_writeBackGPR_T_66, _debugFIFO_11_writeBackGPR_T_68) @[rob.scala 52:203]
    node _debugFIFO_11_writeBackGPR_T_70 = and(_debugFIFO_11_writeBackGPR_T_69, debugFIFO[11].valid) @[rob.scala 52:235]
    debugFIFO[11].writeBackGPR <= _debugFIFO_11_writeBackGPR_T_70 @[rob.scala 52:52]
    node _debugFIFO_12_writeBackGPR_T = bits(debugFIFO[12].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_12_writeBackGPR_insType : UInt<3>
    debugFIFO_12_writeBackGPR_insType <= UInt<3>("h0")
    node _debugFIFO_12_writeBackGPR_T_1 = eq(UInt<6>("h37"), _debugFIFO_12_writeBackGPR_T) @[utils.scala 10:20]
    when _debugFIFO_12_writeBackGPR_T_1 : @[utils.scala 10:20]
      debugFIFO_12_writeBackGPR_insType <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_12_writeBackGPR_T_2 = eq(UInt<5>("h17"), _debugFIFO_12_writeBackGPR_T) @[utils.scala 10:20]
      when _debugFIFO_12_writeBackGPR_T_2 : @[utils.scala 10:20]
        debugFIFO_12_writeBackGPR_insType <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_12_writeBackGPR_T_3 = eq(UInt<7>("h6f"), _debugFIFO_12_writeBackGPR_T) @[utils.scala 10:20]
        when _debugFIFO_12_writeBackGPR_T_3 : @[utils.scala 10:20]
          debugFIFO_12_writeBackGPR_insType <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_12_writeBackGPR_T_4 = eq(UInt<7>("h67"), _debugFIFO_12_writeBackGPR_T) @[utils.scala 10:20]
          when _debugFIFO_12_writeBackGPR_T_4 : @[utils.scala 10:20]
            debugFIFO_12_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_12_writeBackGPR_T_5 = eq(UInt<7>("h63"), _debugFIFO_12_writeBackGPR_T) @[utils.scala 10:20]
            when _debugFIFO_12_writeBackGPR_T_5 : @[utils.scala 10:20]
              debugFIFO_12_writeBackGPR_insType <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_12_writeBackGPR_T_6 = eq(UInt<2>("h3"), _debugFIFO_12_writeBackGPR_T) @[utils.scala 10:20]
              when _debugFIFO_12_writeBackGPR_T_6 : @[utils.scala 10:20]
                debugFIFO_12_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_12_writeBackGPR_T_7 = eq(UInt<6>("h23"), _debugFIFO_12_writeBackGPR_T) @[utils.scala 10:20]
                when _debugFIFO_12_writeBackGPR_T_7 : @[utils.scala 10:20]
                  debugFIFO_12_writeBackGPR_insType <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_12_writeBackGPR_T_8 = eq(UInt<5>("h13"), _debugFIFO_12_writeBackGPR_T) @[utils.scala 10:20]
                  when _debugFIFO_12_writeBackGPR_T_8 : @[utils.scala 10:20]
                    debugFIFO_12_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_12_writeBackGPR_T_9 = eq(UInt<5>("h1b"), _debugFIFO_12_writeBackGPR_T) @[utils.scala 10:20]
                    when _debugFIFO_12_writeBackGPR_T_9 : @[utils.scala 10:20]
                      debugFIFO_12_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_12_writeBackGPR_T_10 = eq(UInt<6>("h33"), _debugFIFO_12_writeBackGPR_T) @[utils.scala 10:20]
                      when _debugFIFO_12_writeBackGPR_T_10 : @[utils.scala 10:20]
                        debugFIFO_12_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_12_writeBackGPR_T_11 = eq(UInt<6>("h3b"), _debugFIFO_12_writeBackGPR_T) @[utils.scala 10:20]
                        when _debugFIFO_12_writeBackGPR_T_11 : @[utils.scala 10:20]
                          debugFIFO_12_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_12_writeBackGPR_T_12 = eq(UInt<7>("h73"), _debugFIFO_12_writeBackGPR_T) @[utils.scala 10:20]
                          when _debugFIFO_12_writeBackGPR_T_12 : @[utils.scala 10:20]
                            debugFIFO_12_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_12_writeBackGPR_T_13 = eq(UInt<4>("hf"), _debugFIFO_12_writeBackGPR_T) @[utils.scala 10:20]
                            when _debugFIFO_12_writeBackGPR_T_13 : @[utils.scala 10:20]
                              debugFIFO_12_writeBackGPR_insType <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_12_writeBackGPR_T_14 = eq(UInt<6>("h2f"), _debugFIFO_12_writeBackGPR_T) @[utils.scala 10:20]
                              when _debugFIFO_12_writeBackGPR_T_14 : @[utils.scala 10:20]
                                debugFIFO_12_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_12_writeBackGPR_T_15 = eq(UInt<1>("h1"), debugFIFO_12_writeBackGPR_insType) @[rob.scala 52:141]
    node _debugFIFO_12_writeBackGPR_T_16 = bits(debugFIFO[12].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_12_writeBackGPR_insType_1 : UInt<3>
    debugFIFO_12_writeBackGPR_insType_1 <= UInt<3>("h0")
    node _debugFIFO_12_writeBackGPR_T_17 = eq(UInt<6>("h37"), _debugFIFO_12_writeBackGPR_T_16) @[utils.scala 10:20]
    when _debugFIFO_12_writeBackGPR_T_17 : @[utils.scala 10:20]
      debugFIFO_12_writeBackGPR_insType_1 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_12_writeBackGPR_T_18 = eq(UInt<5>("h17"), _debugFIFO_12_writeBackGPR_T_16) @[utils.scala 10:20]
      when _debugFIFO_12_writeBackGPR_T_18 : @[utils.scala 10:20]
        debugFIFO_12_writeBackGPR_insType_1 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_12_writeBackGPR_T_19 = eq(UInt<7>("h6f"), _debugFIFO_12_writeBackGPR_T_16) @[utils.scala 10:20]
        when _debugFIFO_12_writeBackGPR_T_19 : @[utils.scala 10:20]
          debugFIFO_12_writeBackGPR_insType_1 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_12_writeBackGPR_T_20 = eq(UInt<7>("h67"), _debugFIFO_12_writeBackGPR_T_16) @[utils.scala 10:20]
          when _debugFIFO_12_writeBackGPR_T_20 : @[utils.scala 10:20]
            debugFIFO_12_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_12_writeBackGPR_T_21 = eq(UInt<7>("h63"), _debugFIFO_12_writeBackGPR_T_16) @[utils.scala 10:20]
            when _debugFIFO_12_writeBackGPR_T_21 : @[utils.scala 10:20]
              debugFIFO_12_writeBackGPR_insType_1 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_12_writeBackGPR_T_22 = eq(UInt<2>("h3"), _debugFIFO_12_writeBackGPR_T_16) @[utils.scala 10:20]
              when _debugFIFO_12_writeBackGPR_T_22 : @[utils.scala 10:20]
                debugFIFO_12_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_12_writeBackGPR_T_23 = eq(UInt<6>("h23"), _debugFIFO_12_writeBackGPR_T_16) @[utils.scala 10:20]
                when _debugFIFO_12_writeBackGPR_T_23 : @[utils.scala 10:20]
                  debugFIFO_12_writeBackGPR_insType_1 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_12_writeBackGPR_T_24 = eq(UInt<5>("h13"), _debugFIFO_12_writeBackGPR_T_16) @[utils.scala 10:20]
                  when _debugFIFO_12_writeBackGPR_T_24 : @[utils.scala 10:20]
                    debugFIFO_12_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_12_writeBackGPR_T_25 = eq(UInt<5>("h1b"), _debugFIFO_12_writeBackGPR_T_16) @[utils.scala 10:20]
                    when _debugFIFO_12_writeBackGPR_T_25 : @[utils.scala 10:20]
                      debugFIFO_12_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_12_writeBackGPR_T_26 = eq(UInt<6>("h33"), _debugFIFO_12_writeBackGPR_T_16) @[utils.scala 10:20]
                      when _debugFIFO_12_writeBackGPR_T_26 : @[utils.scala 10:20]
                        debugFIFO_12_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_12_writeBackGPR_T_27 = eq(UInt<6>("h3b"), _debugFIFO_12_writeBackGPR_T_16) @[utils.scala 10:20]
                        when _debugFIFO_12_writeBackGPR_T_27 : @[utils.scala 10:20]
                          debugFIFO_12_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_12_writeBackGPR_T_28 = eq(UInt<7>("h73"), _debugFIFO_12_writeBackGPR_T_16) @[utils.scala 10:20]
                          when _debugFIFO_12_writeBackGPR_T_28 : @[utils.scala 10:20]
                            debugFIFO_12_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_12_writeBackGPR_T_29 = eq(UInt<4>("hf"), _debugFIFO_12_writeBackGPR_T_16) @[utils.scala 10:20]
                            when _debugFIFO_12_writeBackGPR_T_29 : @[utils.scala 10:20]
                              debugFIFO_12_writeBackGPR_insType_1 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_12_writeBackGPR_T_30 = eq(UInt<6>("h2f"), _debugFIFO_12_writeBackGPR_T_16) @[utils.scala 10:20]
                              when _debugFIFO_12_writeBackGPR_T_30 : @[utils.scala 10:20]
                                debugFIFO_12_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_12_writeBackGPR_T_31 = eq(UInt<1>("h0"), debugFIFO_12_writeBackGPR_insType_1) @[rob.scala 52:141]
    node _debugFIFO_12_writeBackGPR_T_32 = bits(debugFIFO[12].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_12_writeBackGPR_insType_2 : UInt<3>
    debugFIFO_12_writeBackGPR_insType_2 <= UInt<3>("h0")
    node _debugFIFO_12_writeBackGPR_T_33 = eq(UInt<6>("h37"), _debugFIFO_12_writeBackGPR_T_32) @[utils.scala 10:20]
    when _debugFIFO_12_writeBackGPR_T_33 : @[utils.scala 10:20]
      debugFIFO_12_writeBackGPR_insType_2 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_12_writeBackGPR_T_34 = eq(UInt<5>("h17"), _debugFIFO_12_writeBackGPR_T_32) @[utils.scala 10:20]
      when _debugFIFO_12_writeBackGPR_T_34 : @[utils.scala 10:20]
        debugFIFO_12_writeBackGPR_insType_2 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_12_writeBackGPR_T_35 = eq(UInt<7>("h6f"), _debugFIFO_12_writeBackGPR_T_32) @[utils.scala 10:20]
        when _debugFIFO_12_writeBackGPR_T_35 : @[utils.scala 10:20]
          debugFIFO_12_writeBackGPR_insType_2 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_12_writeBackGPR_T_36 = eq(UInt<7>("h67"), _debugFIFO_12_writeBackGPR_T_32) @[utils.scala 10:20]
          when _debugFIFO_12_writeBackGPR_T_36 : @[utils.scala 10:20]
            debugFIFO_12_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_12_writeBackGPR_T_37 = eq(UInt<7>("h63"), _debugFIFO_12_writeBackGPR_T_32) @[utils.scala 10:20]
            when _debugFIFO_12_writeBackGPR_T_37 : @[utils.scala 10:20]
              debugFIFO_12_writeBackGPR_insType_2 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_12_writeBackGPR_T_38 = eq(UInt<2>("h3"), _debugFIFO_12_writeBackGPR_T_32) @[utils.scala 10:20]
              when _debugFIFO_12_writeBackGPR_T_38 : @[utils.scala 10:20]
                debugFIFO_12_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_12_writeBackGPR_T_39 = eq(UInt<6>("h23"), _debugFIFO_12_writeBackGPR_T_32) @[utils.scala 10:20]
                when _debugFIFO_12_writeBackGPR_T_39 : @[utils.scala 10:20]
                  debugFIFO_12_writeBackGPR_insType_2 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_12_writeBackGPR_T_40 = eq(UInt<5>("h13"), _debugFIFO_12_writeBackGPR_T_32) @[utils.scala 10:20]
                  when _debugFIFO_12_writeBackGPR_T_40 : @[utils.scala 10:20]
                    debugFIFO_12_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_12_writeBackGPR_T_41 = eq(UInt<5>("h1b"), _debugFIFO_12_writeBackGPR_T_32) @[utils.scala 10:20]
                    when _debugFIFO_12_writeBackGPR_T_41 : @[utils.scala 10:20]
                      debugFIFO_12_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_12_writeBackGPR_T_42 = eq(UInt<6>("h33"), _debugFIFO_12_writeBackGPR_T_32) @[utils.scala 10:20]
                      when _debugFIFO_12_writeBackGPR_T_42 : @[utils.scala 10:20]
                        debugFIFO_12_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_12_writeBackGPR_T_43 = eq(UInt<6>("h3b"), _debugFIFO_12_writeBackGPR_T_32) @[utils.scala 10:20]
                        when _debugFIFO_12_writeBackGPR_T_43 : @[utils.scala 10:20]
                          debugFIFO_12_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_12_writeBackGPR_T_44 = eq(UInt<7>("h73"), _debugFIFO_12_writeBackGPR_T_32) @[utils.scala 10:20]
                          when _debugFIFO_12_writeBackGPR_T_44 : @[utils.scala 10:20]
                            debugFIFO_12_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_12_writeBackGPR_T_45 = eq(UInt<4>("hf"), _debugFIFO_12_writeBackGPR_T_32) @[utils.scala 10:20]
                            when _debugFIFO_12_writeBackGPR_T_45 : @[utils.scala 10:20]
                              debugFIFO_12_writeBackGPR_insType_2 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_12_writeBackGPR_T_46 = eq(UInt<6>("h2f"), _debugFIFO_12_writeBackGPR_T_32) @[utils.scala 10:20]
                              when _debugFIFO_12_writeBackGPR_T_46 : @[utils.scala 10:20]
                                debugFIFO_12_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_12_writeBackGPR_T_47 = eq(UInt<3>("h4"), debugFIFO_12_writeBackGPR_insType_2) @[rob.scala 52:141]
    node _debugFIFO_12_writeBackGPR_T_48 = bits(debugFIFO[12].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_12_writeBackGPR_insType_3 : UInt<3>
    debugFIFO_12_writeBackGPR_insType_3 <= UInt<3>("h0")
    node _debugFIFO_12_writeBackGPR_T_49 = eq(UInt<6>("h37"), _debugFIFO_12_writeBackGPR_T_48) @[utils.scala 10:20]
    when _debugFIFO_12_writeBackGPR_T_49 : @[utils.scala 10:20]
      debugFIFO_12_writeBackGPR_insType_3 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_12_writeBackGPR_T_50 = eq(UInt<5>("h17"), _debugFIFO_12_writeBackGPR_T_48) @[utils.scala 10:20]
      when _debugFIFO_12_writeBackGPR_T_50 : @[utils.scala 10:20]
        debugFIFO_12_writeBackGPR_insType_3 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_12_writeBackGPR_T_51 = eq(UInt<7>("h6f"), _debugFIFO_12_writeBackGPR_T_48) @[utils.scala 10:20]
        when _debugFIFO_12_writeBackGPR_T_51 : @[utils.scala 10:20]
          debugFIFO_12_writeBackGPR_insType_3 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_12_writeBackGPR_T_52 = eq(UInt<7>("h67"), _debugFIFO_12_writeBackGPR_T_48) @[utils.scala 10:20]
          when _debugFIFO_12_writeBackGPR_T_52 : @[utils.scala 10:20]
            debugFIFO_12_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_12_writeBackGPR_T_53 = eq(UInt<7>("h63"), _debugFIFO_12_writeBackGPR_T_48) @[utils.scala 10:20]
            when _debugFIFO_12_writeBackGPR_T_53 : @[utils.scala 10:20]
              debugFIFO_12_writeBackGPR_insType_3 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_12_writeBackGPR_T_54 = eq(UInt<2>("h3"), _debugFIFO_12_writeBackGPR_T_48) @[utils.scala 10:20]
              when _debugFIFO_12_writeBackGPR_T_54 : @[utils.scala 10:20]
                debugFIFO_12_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_12_writeBackGPR_T_55 = eq(UInt<6>("h23"), _debugFIFO_12_writeBackGPR_T_48) @[utils.scala 10:20]
                when _debugFIFO_12_writeBackGPR_T_55 : @[utils.scala 10:20]
                  debugFIFO_12_writeBackGPR_insType_3 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_12_writeBackGPR_T_56 = eq(UInt<5>("h13"), _debugFIFO_12_writeBackGPR_T_48) @[utils.scala 10:20]
                  when _debugFIFO_12_writeBackGPR_T_56 : @[utils.scala 10:20]
                    debugFIFO_12_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_12_writeBackGPR_T_57 = eq(UInt<5>("h1b"), _debugFIFO_12_writeBackGPR_T_48) @[utils.scala 10:20]
                    when _debugFIFO_12_writeBackGPR_T_57 : @[utils.scala 10:20]
                      debugFIFO_12_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_12_writeBackGPR_T_58 = eq(UInt<6>("h33"), _debugFIFO_12_writeBackGPR_T_48) @[utils.scala 10:20]
                      when _debugFIFO_12_writeBackGPR_T_58 : @[utils.scala 10:20]
                        debugFIFO_12_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_12_writeBackGPR_T_59 = eq(UInt<6>("h3b"), _debugFIFO_12_writeBackGPR_T_48) @[utils.scala 10:20]
                        when _debugFIFO_12_writeBackGPR_T_59 : @[utils.scala 10:20]
                          debugFIFO_12_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_12_writeBackGPR_T_60 = eq(UInt<7>("h73"), _debugFIFO_12_writeBackGPR_T_48) @[utils.scala 10:20]
                          when _debugFIFO_12_writeBackGPR_T_60 : @[utils.scala 10:20]
                            debugFIFO_12_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_12_writeBackGPR_T_61 = eq(UInt<4>("hf"), _debugFIFO_12_writeBackGPR_T_48) @[utils.scala 10:20]
                            when _debugFIFO_12_writeBackGPR_T_61 : @[utils.scala 10:20]
                              debugFIFO_12_writeBackGPR_insType_3 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_12_writeBackGPR_T_62 = eq(UInt<6>("h2f"), _debugFIFO_12_writeBackGPR_T_48) @[utils.scala 10:20]
                              when _debugFIFO_12_writeBackGPR_T_62 : @[utils.scala 10:20]
                                debugFIFO_12_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_12_writeBackGPR_T_63 = eq(UInt<3>("h5"), debugFIFO_12_writeBackGPR_insType_3) @[rob.scala 52:141]
    node _debugFIFO_12_writeBackGPR_T_64 = or(_debugFIFO_12_writeBackGPR_T_15, _debugFIFO_12_writeBackGPR_T_31) @[rob.scala 52:197]
    node _debugFIFO_12_writeBackGPR_T_65 = or(_debugFIFO_12_writeBackGPR_T_64, _debugFIFO_12_writeBackGPR_T_47) @[rob.scala 52:197]
    node _debugFIFO_12_writeBackGPR_T_66 = or(_debugFIFO_12_writeBackGPR_T_65, _debugFIFO_12_writeBackGPR_T_63) @[rob.scala 52:197]
    node _debugFIFO_12_writeBackGPR_T_67 = bits(debugFIFO[12].instruction, 11, 7) @[rob.scala 52:223]
    node _debugFIFO_12_writeBackGPR_T_68 = orr(_debugFIFO_12_writeBackGPR_T_67) @[rob.scala 52:231]
    node _debugFIFO_12_writeBackGPR_T_69 = and(_debugFIFO_12_writeBackGPR_T_66, _debugFIFO_12_writeBackGPR_T_68) @[rob.scala 52:203]
    node _debugFIFO_12_writeBackGPR_T_70 = and(_debugFIFO_12_writeBackGPR_T_69, debugFIFO[12].valid) @[rob.scala 52:235]
    debugFIFO[12].writeBackGPR <= _debugFIFO_12_writeBackGPR_T_70 @[rob.scala 52:52]
    node _debugFIFO_13_writeBackGPR_T = bits(debugFIFO[13].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_13_writeBackGPR_insType : UInt<3>
    debugFIFO_13_writeBackGPR_insType <= UInt<3>("h0")
    node _debugFIFO_13_writeBackGPR_T_1 = eq(UInt<6>("h37"), _debugFIFO_13_writeBackGPR_T) @[utils.scala 10:20]
    when _debugFIFO_13_writeBackGPR_T_1 : @[utils.scala 10:20]
      debugFIFO_13_writeBackGPR_insType <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_13_writeBackGPR_T_2 = eq(UInt<5>("h17"), _debugFIFO_13_writeBackGPR_T) @[utils.scala 10:20]
      when _debugFIFO_13_writeBackGPR_T_2 : @[utils.scala 10:20]
        debugFIFO_13_writeBackGPR_insType <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_13_writeBackGPR_T_3 = eq(UInt<7>("h6f"), _debugFIFO_13_writeBackGPR_T) @[utils.scala 10:20]
        when _debugFIFO_13_writeBackGPR_T_3 : @[utils.scala 10:20]
          debugFIFO_13_writeBackGPR_insType <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_13_writeBackGPR_T_4 = eq(UInt<7>("h67"), _debugFIFO_13_writeBackGPR_T) @[utils.scala 10:20]
          when _debugFIFO_13_writeBackGPR_T_4 : @[utils.scala 10:20]
            debugFIFO_13_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_13_writeBackGPR_T_5 = eq(UInt<7>("h63"), _debugFIFO_13_writeBackGPR_T) @[utils.scala 10:20]
            when _debugFIFO_13_writeBackGPR_T_5 : @[utils.scala 10:20]
              debugFIFO_13_writeBackGPR_insType <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_13_writeBackGPR_T_6 = eq(UInt<2>("h3"), _debugFIFO_13_writeBackGPR_T) @[utils.scala 10:20]
              when _debugFIFO_13_writeBackGPR_T_6 : @[utils.scala 10:20]
                debugFIFO_13_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_13_writeBackGPR_T_7 = eq(UInt<6>("h23"), _debugFIFO_13_writeBackGPR_T) @[utils.scala 10:20]
                when _debugFIFO_13_writeBackGPR_T_7 : @[utils.scala 10:20]
                  debugFIFO_13_writeBackGPR_insType <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_13_writeBackGPR_T_8 = eq(UInt<5>("h13"), _debugFIFO_13_writeBackGPR_T) @[utils.scala 10:20]
                  when _debugFIFO_13_writeBackGPR_T_8 : @[utils.scala 10:20]
                    debugFIFO_13_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_13_writeBackGPR_T_9 = eq(UInt<5>("h1b"), _debugFIFO_13_writeBackGPR_T) @[utils.scala 10:20]
                    when _debugFIFO_13_writeBackGPR_T_9 : @[utils.scala 10:20]
                      debugFIFO_13_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_13_writeBackGPR_T_10 = eq(UInt<6>("h33"), _debugFIFO_13_writeBackGPR_T) @[utils.scala 10:20]
                      when _debugFIFO_13_writeBackGPR_T_10 : @[utils.scala 10:20]
                        debugFIFO_13_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_13_writeBackGPR_T_11 = eq(UInt<6>("h3b"), _debugFIFO_13_writeBackGPR_T) @[utils.scala 10:20]
                        when _debugFIFO_13_writeBackGPR_T_11 : @[utils.scala 10:20]
                          debugFIFO_13_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_13_writeBackGPR_T_12 = eq(UInt<7>("h73"), _debugFIFO_13_writeBackGPR_T) @[utils.scala 10:20]
                          when _debugFIFO_13_writeBackGPR_T_12 : @[utils.scala 10:20]
                            debugFIFO_13_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_13_writeBackGPR_T_13 = eq(UInt<4>("hf"), _debugFIFO_13_writeBackGPR_T) @[utils.scala 10:20]
                            when _debugFIFO_13_writeBackGPR_T_13 : @[utils.scala 10:20]
                              debugFIFO_13_writeBackGPR_insType <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_13_writeBackGPR_T_14 = eq(UInt<6>("h2f"), _debugFIFO_13_writeBackGPR_T) @[utils.scala 10:20]
                              when _debugFIFO_13_writeBackGPR_T_14 : @[utils.scala 10:20]
                                debugFIFO_13_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_13_writeBackGPR_T_15 = eq(UInt<1>("h1"), debugFIFO_13_writeBackGPR_insType) @[rob.scala 52:141]
    node _debugFIFO_13_writeBackGPR_T_16 = bits(debugFIFO[13].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_13_writeBackGPR_insType_1 : UInt<3>
    debugFIFO_13_writeBackGPR_insType_1 <= UInt<3>("h0")
    node _debugFIFO_13_writeBackGPR_T_17 = eq(UInt<6>("h37"), _debugFIFO_13_writeBackGPR_T_16) @[utils.scala 10:20]
    when _debugFIFO_13_writeBackGPR_T_17 : @[utils.scala 10:20]
      debugFIFO_13_writeBackGPR_insType_1 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_13_writeBackGPR_T_18 = eq(UInt<5>("h17"), _debugFIFO_13_writeBackGPR_T_16) @[utils.scala 10:20]
      when _debugFIFO_13_writeBackGPR_T_18 : @[utils.scala 10:20]
        debugFIFO_13_writeBackGPR_insType_1 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_13_writeBackGPR_T_19 = eq(UInt<7>("h6f"), _debugFIFO_13_writeBackGPR_T_16) @[utils.scala 10:20]
        when _debugFIFO_13_writeBackGPR_T_19 : @[utils.scala 10:20]
          debugFIFO_13_writeBackGPR_insType_1 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_13_writeBackGPR_T_20 = eq(UInt<7>("h67"), _debugFIFO_13_writeBackGPR_T_16) @[utils.scala 10:20]
          when _debugFIFO_13_writeBackGPR_T_20 : @[utils.scala 10:20]
            debugFIFO_13_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_13_writeBackGPR_T_21 = eq(UInt<7>("h63"), _debugFIFO_13_writeBackGPR_T_16) @[utils.scala 10:20]
            when _debugFIFO_13_writeBackGPR_T_21 : @[utils.scala 10:20]
              debugFIFO_13_writeBackGPR_insType_1 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_13_writeBackGPR_T_22 = eq(UInt<2>("h3"), _debugFIFO_13_writeBackGPR_T_16) @[utils.scala 10:20]
              when _debugFIFO_13_writeBackGPR_T_22 : @[utils.scala 10:20]
                debugFIFO_13_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_13_writeBackGPR_T_23 = eq(UInt<6>("h23"), _debugFIFO_13_writeBackGPR_T_16) @[utils.scala 10:20]
                when _debugFIFO_13_writeBackGPR_T_23 : @[utils.scala 10:20]
                  debugFIFO_13_writeBackGPR_insType_1 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_13_writeBackGPR_T_24 = eq(UInt<5>("h13"), _debugFIFO_13_writeBackGPR_T_16) @[utils.scala 10:20]
                  when _debugFIFO_13_writeBackGPR_T_24 : @[utils.scala 10:20]
                    debugFIFO_13_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_13_writeBackGPR_T_25 = eq(UInt<5>("h1b"), _debugFIFO_13_writeBackGPR_T_16) @[utils.scala 10:20]
                    when _debugFIFO_13_writeBackGPR_T_25 : @[utils.scala 10:20]
                      debugFIFO_13_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_13_writeBackGPR_T_26 = eq(UInt<6>("h33"), _debugFIFO_13_writeBackGPR_T_16) @[utils.scala 10:20]
                      when _debugFIFO_13_writeBackGPR_T_26 : @[utils.scala 10:20]
                        debugFIFO_13_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_13_writeBackGPR_T_27 = eq(UInt<6>("h3b"), _debugFIFO_13_writeBackGPR_T_16) @[utils.scala 10:20]
                        when _debugFIFO_13_writeBackGPR_T_27 : @[utils.scala 10:20]
                          debugFIFO_13_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_13_writeBackGPR_T_28 = eq(UInt<7>("h73"), _debugFIFO_13_writeBackGPR_T_16) @[utils.scala 10:20]
                          when _debugFIFO_13_writeBackGPR_T_28 : @[utils.scala 10:20]
                            debugFIFO_13_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_13_writeBackGPR_T_29 = eq(UInt<4>("hf"), _debugFIFO_13_writeBackGPR_T_16) @[utils.scala 10:20]
                            when _debugFIFO_13_writeBackGPR_T_29 : @[utils.scala 10:20]
                              debugFIFO_13_writeBackGPR_insType_1 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_13_writeBackGPR_T_30 = eq(UInt<6>("h2f"), _debugFIFO_13_writeBackGPR_T_16) @[utils.scala 10:20]
                              when _debugFIFO_13_writeBackGPR_T_30 : @[utils.scala 10:20]
                                debugFIFO_13_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_13_writeBackGPR_T_31 = eq(UInt<1>("h0"), debugFIFO_13_writeBackGPR_insType_1) @[rob.scala 52:141]
    node _debugFIFO_13_writeBackGPR_T_32 = bits(debugFIFO[13].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_13_writeBackGPR_insType_2 : UInt<3>
    debugFIFO_13_writeBackGPR_insType_2 <= UInt<3>("h0")
    node _debugFIFO_13_writeBackGPR_T_33 = eq(UInt<6>("h37"), _debugFIFO_13_writeBackGPR_T_32) @[utils.scala 10:20]
    when _debugFIFO_13_writeBackGPR_T_33 : @[utils.scala 10:20]
      debugFIFO_13_writeBackGPR_insType_2 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_13_writeBackGPR_T_34 = eq(UInt<5>("h17"), _debugFIFO_13_writeBackGPR_T_32) @[utils.scala 10:20]
      when _debugFIFO_13_writeBackGPR_T_34 : @[utils.scala 10:20]
        debugFIFO_13_writeBackGPR_insType_2 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_13_writeBackGPR_T_35 = eq(UInt<7>("h6f"), _debugFIFO_13_writeBackGPR_T_32) @[utils.scala 10:20]
        when _debugFIFO_13_writeBackGPR_T_35 : @[utils.scala 10:20]
          debugFIFO_13_writeBackGPR_insType_2 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_13_writeBackGPR_T_36 = eq(UInt<7>("h67"), _debugFIFO_13_writeBackGPR_T_32) @[utils.scala 10:20]
          when _debugFIFO_13_writeBackGPR_T_36 : @[utils.scala 10:20]
            debugFIFO_13_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_13_writeBackGPR_T_37 = eq(UInt<7>("h63"), _debugFIFO_13_writeBackGPR_T_32) @[utils.scala 10:20]
            when _debugFIFO_13_writeBackGPR_T_37 : @[utils.scala 10:20]
              debugFIFO_13_writeBackGPR_insType_2 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_13_writeBackGPR_T_38 = eq(UInt<2>("h3"), _debugFIFO_13_writeBackGPR_T_32) @[utils.scala 10:20]
              when _debugFIFO_13_writeBackGPR_T_38 : @[utils.scala 10:20]
                debugFIFO_13_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_13_writeBackGPR_T_39 = eq(UInt<6>("h23"), _debugFIFO_13_writeBackGPR_T_32) @[utils.scala 10:20]
                when _debugFIFO_13_writeBackGPR_T_39 : @[utils.scala 10:20]
                  debugFIFO_13_writeBackGPR_insType_2 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_13_writeBackGPR_T_40 = eq(UInt<5>("h13"), _debugFIFO_13_writeBackGPR_T_32) @[utils.scala 10:20]
                  when _debugFIFO_13_writeBackGPR_T_40 : @[utils.scala 10:20]
                    debugFIFO_13_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_13_writeBackGPR_T_41 = eq(UInt<5>("h1b"), _debugFIFO_13_writeBackGPR_T_32) @[utils.scala 10:20]
                    when _debugFIFO_13_writeBackGPR_T_41 : @[utils.scala 10:20]
                      debugFIFO_13_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_13_writeBackGPR_T_42 = eq(UInt<6>("h33"), _debugFIFO_13_writeBackGPR_T_32) @[utils.scala 10:20]
                      when _debugFIFO_13_writeBackGPR_T_42 : @[utils.scala 10:20]
                        debugFIFO_13_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_13_writeBackGPR_T_43 = eq(UInt<6>("h3b"), _debugFIFO_13_writeBackGPR_T_32) @[utils.scala 10:20]
                        when _debugFIFO_13_writeBackGPR_T_43 : @[utils.scala 10:20]
                          debugFIFO_13_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_13_writeBackGPR_T_44 = eq(UInt<7>("h73"), _debugFIFO_13_writeBackGPR_T_32) @[utils.scala 10:20]
                          when _debugFIFO_13_writeBackGPR_T_44 : @[utils.scala 10:20]
                            debugFIFO_13_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_13_writeBackGPR_T_45 = eq(UInt<4>("hf"), _debugFIFO_13_writeBackGPR_T_32) @[utils.scala 10:20]
                            when _debugFIFO_13_writeBackGPR_T_45 : @[utils.scala 10:20]
                              debugFIFO_13_writeBackGPR_insType_2 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_13_writeBackGPR_T_46 = eq(UInt<6>("h2f"), _debugFIFO_13_writeBackGPR_T_32) @[utils.scala 10:20]
                              when _debugFIFO_13_writeBackGPR_T_46 : @[utils.scala 10:20]
                                debugFIFO_13_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_13_writeBackGPR_T_47 = eq(UInt<3>("h4"), debugFIFO_13_writeBackGPR_insType_2) @[rob.scala 52:141]
    node _debugFIFO_13_writeBackGPR_T_48 = bits(debugFIFO[13].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_13_writeBackGPR_insType_3 : UInt<3>
    debugFIFO_13_writeBackGPR_insType_3 <= UInt<3>("h0")
    node _debugFIFO_13_writeBackGPR_T_49 = eq(UInt<6>("h37"), _debugFIFO_13_writeBackGPR_T_48) @[utils.scala 10:20]
    when _debugFIFO_13_writeBackGPR_T_49 : @[utils.scala 10:20]
      debugFIFO_13_writeBackGPR_insType_3 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_13_writeBackGPR_T_50 = eq(UInt<5>("h17"), _debugFIFO_13_writeBackGPR_T_48) @[utils.scala 10:20]
      when _debugFIFO_13_writeBackGPR_T_50 : @[utils.scala 10:20]
        debugFIFO_13_writeBackGPR_insType_3 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_13_writeBackGPR_T_51 = eq(UInt<7>("h6f"), _debugFIFO_13_writeBackGPR_T_48) @[utils.scala 10:20]
        when _debugFIFO_13_writeBackGPR_T_51 : @[utils.scala 10:20]
          debugFIFO_13_writeBackGPR_insType_3 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_13_writeBackGPR_T_52 = eq(UInt<7>("h67"), _debugFIFO_13_writeBackGPR_T_48) @[utils.scala 10:20]
          when _debugFIFO_13_writeBackGPR_T_52 : @[utils.scala 10:20]
            debugFIFO_13_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_13_writeBackGPR_T_53 = eq(UInt<7>("h63"), _debugFIFO_13_writeBackGPR_T_48) @[utils.scala 10:20]
            when _debugFIFO_13_writeBackGPR_T_53 : @[utils.scala 10:20]
              debugFIFO_13_writeBackGPR_insType_3 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_13_writeBackGPR_T_54 = eq(UInt<2>("h3"), _debugFIFO_13_writeBackGPR_T_48) @[utils.scala 10:20]
              when _debugFIFO_13_writeBackGPR_T_54 : @[utils.scala 10:20]
                debugFIFO_13_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_13_writeBackGPR_T_55 = eq(UInt<6>("h23"), _debugFIFO_13_writeBackGPR_T_48) @[utils.scala 10:20]
                when _debugFIFO_13_writeBackGPR_T_55 : @[utils.scala 10:20]
                  debugFIFO_13_writeBackGPR_insType_3 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_13_writeBackGPR_T_56 = eq(UInt<5>("h13"), _debugFIFO_13_writeBackGPR_T_48) @[utils.scala 10:20]
                  when _debugFIFO_13_writeBackGPR_T_56 : @[utils.scala 10:20]
                    debugFIFO_13_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_13_writeBackGPR_T_57 = eq(UInt<5>("h1b"), _debugFIFO_13_writeBackGPR_T_48) @[utils.scala 10:20]
                    when _debugFIFO_13_writeBackGPR_T_57 : @[utils.scala 10:20]
                      debugFIFO_13_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_13_writeBackGPR_T_58 = eq(UInt<6>("h33"), _debugFIFO_13_writeBackGPR_T_48) @[utils.scala 10:20]
                      when _debugFIFO_13_writeBackGPR_T_58 : @[utils.scala 10:20]
                        debugFIFO_13_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_13_writeBackGPR_T_59 = eq(UInt<6>("h3b"), _debugFIFO_13_writeBackGPR_T_48) @[utils.scala 10:20]
                        when _debugFIFO_13_writeBackGPR_T_59 : @[utils.scala 10:20]
                          debugFIFO_13_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_13_writeBackGPR_T_60 = eq(UInt<7>("h73"), _debugFIFO_13_writeBackGPR_T_48) @[utils.scala 10:20]
                          when _debugFIFO_13_writeBackGPR_T_60 : @[utils.scala 10:20]
                            debugFIFO_13_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_13_writeBackGPR_T_61 = eq(UInt<4>("hf"), _debugFIFO_13_writeBackGPR_T_48) @[utils.scala 10:20]
                            when _debugFIFO_13_writeBackGPR_T_61 : @[utils.scala 10:20]
                              debugFIFO_13_writeBackGPR_insType_3 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_13_writeBackGPR_T_62 = eq(UInt<6>("h2f"), _debugFIFO_13_writeBackGPR_T_48) @[utils.scala 10:20]
                              when _debugFIFO_13_writeBackGPR_T_62 : @[utils.scala 10:20]
                                debugFIFO_13_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_13_writeBackGPR_T_63 = eq(UInt<3>("h5"), debugFIFO_13_writeBackGPR_insType_3) @[rob.scala 52:141]
    node _debugFIFO_13_writeBackGPR_T_64 = or(_debugFIFO_13_writeBackGPR_T_15, _debugFIFO_13_writeBackGPR_T_31) @[rob.scala 52:197]
    node _debugFIFO_13_writeBackGPR_T_65 = or(_debugFIFO_13_writeBackGPR_T_64, _debugFIFO_13_writeBackGPR_T_47) @[rob.scala 52:197]
    node _debugFIFO_13_writeBackGPR_T_66 = or(_debugFIFO_13_writeBackGPR_T_65, _debugFIFO_13_writeBackGPR_T_63) @[rob.scala 52:197]
    node _debugFIFO_13_writeBackGPR_T_67 = bits(debugFIFO[13].instruction, 11, 7) @[rob.scala 52:223]
    node _debugFIFO_13_writeBackGPR_T_68 = orr(_debugFIFO_13_writeBackGPR_T_67) @[rob.scala 52:231]
    node _debugFIFO_13_writeBackGPR_T_69 = and(_debugFIFO_13_writeBackGPR_T_66, _debugFIFO_13_writeBackGPR_T_68) @[rob.scala 52:203]
    node _debugFIFO_13_writeBackGPR_T_70 = and(_debugFIFO_13_writeBackGPR_T_69, debugFIFO[13].valid) @[rob.scala 52:235]
    debugFIFO[13].writeBackGPR <= _debugFIFO_13_writeBackGPR_T_70 @[rob.scala 52:52]
    node _debugFIFO_14_writeBackGPR_T = bits(debugFIFO[14].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_14_writeBackGPR_insType : UInt<3>
    debugFIFO_14_writeBackGPR_insType <= UInt<3>("h0")
    node _debugFIFO_14_writeBackGPR_T_1 = eq(UInt<6>("h37"), _debugFIFO_14_writeBackGPR_T) @[utils.scala 10:20]
    when _debugFIFO_14_writeBackGPR_T_1 : @[utils.scala 10:20]
      debugFIFO_14_writeBackGPR_insType <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_14_writeBackGPR_T_2 = eq(UInt<5>("h17"), _debugFIFO_14_writeBackGPR_T) @[utils.scala 10:20]
      when _debugFIFO_14_writeBackGPR_T_2 : @[utils.scala 10:20]
        debugFIFO_14_writeBackGPR_insType <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_14_writeBackGPR_T_3 = eq(UInt<7>("h6f"), _debugFIFO_14_writeBackGPR_T) @[utils.scala 10:20]
        when _debugFIFO_14_writeBackGPR_T_3 : @[utils.scala 10:20]
          debugFIFO_14_writeBackGPR_insType <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_14_writeBackGPR_T_4 = eq(UInt<7>("h67"), _debugFIFO_14_writeBackGPR_T) @[utils.scala 10:20]
          when _debugFIFO_14_writeBackGPR_T_4 : @[utils.scala 10:20]
            debugFIFO_14_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_14_writeBackGPR_T_5 = eq(UInt<7>("h63"), _debugFIFO_14_writeBackGPR_T) @[utils.scala 10:20]
            when _debugFIFO_14_writeBackGPR_T_5 : @[utils.scala 10:20]
              debugFIFO_14_writeBackGPR_insType <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_14_writeBackGPR_T_6 = eq(UInt<2>("h3"), _debugFIFO_14_writeBackGPR_T) @[utils.scala 10:20]
              when _debugFIFO_14_writeBackGPR_T_6 : @[utils.scala 10:20]
                debugFIFO_14_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_14_writeBackGPR_T_7 = eq(UInt<6>("h23"), _debugFIFO_14_writeBackGPR_T) @[utils.scala 10:20]
                when _debugFIFO_14_writeBackGPR_T_7 : @[utils.scala 10:20]
                  debugFIFO_14_writeBackGPR_insType <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_14_writeBackGPR_T_8 = eq(UInt<5>("h13"), _debugFIFO_14_writeBackGPR_T) @[utils.scala 10:20]
                  when _debugFIFO_14_writeBackGPR_T_8 : @[utils.scala 10:20]
                    debugFIFO_14_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_14_writeBackGPR_T_9 = eq(UInt<5>("h1b"), _debugFIFO_14_writeBackGPR_T) @[utils.scala 10:20]
                    when _debugFIFO_14_writeBackGPR_T_9 : @[utils.scala 10:20]
                      debugFIFO_14_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_14_writeBackGPR_T_10 = eq(UInt<6>("h33"), _debugFIFO_14_writeBackGPR_T) @[utils.scala 10:20]
                      when _debugFIFO_14_writeBackGPR_T_10 : @[utils.scala 10:20]
                        debugFIFO_14_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_14_writeBackGPR_T_11 = eq(UInt<6>("h3b"), _debugFIFO_14_writeBackGPR_T) @[utils.scala 10:20]
                        when _debugFIFO_14_writeBackGPR_T_11 : @[utils.scala 10:20]
                          debugFIFO_14_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_14_writeBackGPR_T_12 = eq(UInt<7>("h73"), _debugFIFO_14_writeBackGPR_T) @[utils.scala 10:20]
                          when _debugFIFO_14_writeBackGPR_T_12 : @[utils.scala 10:20]
                            debugFIFO_14_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_14_writeBackGPR_T_13 = eq(UInt<4>("hf"), _debugFIFO_14_writeBackGPR_T) @[utils.scala 10:20]
                            when _debugFIFO_14_writeBackGPR_T_13 : @[utils.scala 10:20]
                              debugFIFO_14_writeBackGPR_insType <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_14_writeBackGPR_T_14 = eq(UInt<6>("h2f"), _debugFIFO_14_writeBackGPR_T) @[utils.scala 10:20]
                              when _debugFIFO_14_writeBackGPR_T_14 : @[utils.scala 10:20]
                                debugFIFO_14_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_14_writeBackGPR_T_15 = eq(UInt<1>("h1"), debugFIFO_14_writeBackGPR_insType) @[rob.scala 52:141]
    node _debugFIFO_14_writeBackGPR_T_16 = bits(debugFIFO[14].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_14_writeBackGPR_insType_1 : UInt<3>
    debugFIFO_14_writeBackGPR_insType_1 <= UInt<3>("h0")
    node _debugFIFO_14_writeBackGPR_T_17 = eq(UInt<6>("h37"), _debugFIFO_14_writeBackGPR_T_16) @[utils.scala 10:20]
    when _debugFIFO_14_writeBackGPR_T_17 : @[utils.scala 10:20]
      debugFIFO_14_writeBackGPR_insType_1 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_14_writeBackGPR_T_18 = eq(UInt<5>("h17"), _debugFIFO_14_writeBackGPR_T_16) @[utils.scala 10:20]
      when _debugFIFO_14_writeBackGPR_T_18 : @[utils.scala 10:20]
        debugFIFO_14_writeBackGPR_insType_1 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_14_writeBackGPR_T_19 = eq(UInt<7>("h6f"), _debugFIFO_14_writeBackGPR_T_16) @[utils.scala 10:20]
        when _debugFIFO_14_writeBackGPR_T_19 : @[utils.scala 10:20]
          debugFIFO_14_writeBackGPR_insType_1 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_14_writeBackGPR_T_20 = eq(UInt<7>("h67"), _debugFIFO_14_writeBackGPR_T_16) @[utils.scala 10:20]
          when _debugFIFO_14_writeBackGPR_T_20 : @[utils.scala 10:20]
            debugFIFO_14_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_14_writeBackGPR_T_21 = eq(UInt<7>("h63"), _debugFIFO_14_writeBackGPR_T_16) @[utils.scala 10:20]
            when _debugFIFO_14_writeBackGPR_T_21 : @[utils.scala 10:20]
              debugFIFO_14_writeBackGPR_insType_1 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_14_writeBackGPR_T_22 = eq(UInt<2>("h3"), _debugFIFO_14_writeBackGPR_T_16) @[utils.scala 10:20]
              when _debugFIFO_14_writeBackGPR_T_22 : @[utils.scala 10:20]
                debugFIFO_14_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_14_writeBackGPR_T_23 = eq(UInt<6>("h23"), _debugFIFO_14_writeBackGPR_T_16) @[utils.scala 10:20]
                when _debugFIFO_14_writeBackGPR_T_23 : @[utils.scala 10:20]
                  debugFIFO_14_writeBackGPR_insType_1 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_14_writeBackGPR_T_24 = eq(UInt<5>("h13"), _debugFIFO_14_writeBackGPR_T_16) @[utils.scala 10:20]
                  when _debugFIFO_14_writeBackGPR_T_24 : @[utils.scala 10:20]
                    debugFIFO_14_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_14_writeBackGPR_T_25 = eq(UInt<5>("h1b"), _debugFIFO_14_writeBackGPR_T_16) @[utils.scala 10:20]
                    when _debugFIFO_14_writeBackGPR_T_25 : @[utils.scala 10:20]
                      debugFIFO_14_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_14_writeBackGPR_T_26 = eq(UInt<6>("h33"), _debugFIFO_14_writeBackGPR_T_16) @[utils.scala 10:20]
                      when _debugFIFO_14_writeBackGPR_T_26 : @[utils.scala 10:20]
                        debugFIFO_14_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_14_writeBackGPR_T_27 = eq(UInt<6>("h3b"), _debugFIFO_14_writeBackGPR_T_16) @[utils.scala 10:20]
                        when _debugFIFO_14_writeBackGPR_T_27 : @[utils.scala 10:20]
                          debugFIFO_14_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_14_writeBackGPR_T_28 = eq(UInt<7>("h73"), _debugFIFO_14_writeBackGPR_T_16) @[utils.scala 10:20]
                          when _debugFIFO_14_writeBackGPR_T_28 : @[utils.scala 10:20]
                            debugFIFO_14_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_14_writeBackGPR_T_29 = eq(UInt<4>("hf"), _debugFIFO_14_writeBackGPR_T_16) @[utils.scala 10:20]
                            when _debugFIFO_14_writeBackGPR_T_29 : @[utils.scala 10:20]
                              debugFIFO_14_writeBackGPR_insType_1 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_14_writeBackGPR_T_30 = eq(UInt<6>("h2f"), _debugFIFO_14_writeBackGPR_T_16) @[utils.scala 10:20]
                              when _debugFIFO_14_writeBackGPR_T_30 : @[utils.scala 10:20]
                                debugFIFO_14_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_14_writeBackGPR_T_31 = eq(UInt<1>("h0"), debugFIFO_14_writeBackGPR_insType_1) @[rob.scala 52:141]
    node _debugFIFO_14_writeBackGPR_T_32 = bits(debugFIFO[14].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_14_writeBackGPR_insType_2 : UInt<3>
    debugFIFO_14_writeBackGPR_insType_2 <= UInt<3>("h0")
    node _debugFIFO_14_writeBackGPR_T_33 = eq(UInt<6>("h37"), _debugFIFO_14_writeBackGPR_T_32) @[utils.scala 10:20]
    when _debugFIFO_14_writeBackGPR_T_33 : @[utils.scala 10:20]
      debugFIFO_14_writeBackGPR_insType_2 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_14_writeBackGPR_T_34 = eq(UInt<5>("h17"), _debugFIFO_14_writeBackGPR_T_32) @[utils.scala 10:20]
      when _debugFIFO_14_writeBackGPR_T_34 : @[utils.scala 10:20]
        debugFIFO_14_writeBackGPR_insType_2 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_14_writeBackGPR_T_35 = eq(UInt<7>("h6f"), _debugFIFO_14_writeBackGPR_T_32) @[utils.scala 10:20]
        when _debugFIFO_14_writeBackGPR_T_35 : @[utils.scala 10:20]
          debugFIFO_14_writeBackGPR_insType_2 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_14_writeBackGPR_T_36 = eq(UInt<7>("h67"), _debugFIFO_14_writeBackGPR_T_32) @[utils.scala 10:20]
          when _debugFIFO_14_writeBackGPR_T_36 : @[utils.scala 10:20]
            debugFIFO_14_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_14_writeBackGPR_T_37 = eq(UInt<7>("h63"), _debugFIFO_14_writeBackGPR_T_32) @[utils.scala 10:20]
            when _debugFIFO_14_writeBackGPR_T_37 : @[utils.scala 10:20]
              debugFIFO_14_writeBackGPR_insType_2 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_14_writeBackGPR_T_38 = eq(UInt<2>("h3"), _debugFIFO_14_writeBackGPR_T_32) @[utils.scala 10:20]
              when _debugFIFO_14_writeBackGPR_T_38 : @[utils.scala 10:20]
                debugFIFO_14_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_14_writeBackGPR_T_39 = eq(UInt<6>("h23"), _debugFIFO_14_writeBackGPR_T_32) @[utils.scala 10:20]
                when _debugFIFO_14_writeBackGPR_T_39 : @[utils.scala 10:20]
                  debugFIFO_14_writeBackGPR_insType_2 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_14_writeBackGPR_T_40 = eq(UInt<5>("h13"), _debugFIFO_14_writeBackGPR_T_32) @[utils.scala 10:20]
                  when _debugFIFO_14_writeBackGPR_T_40 : @[utils.scala 10:20]
                    debugFIFO_14_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_14_writeBackGPR_T_41 = eq(UInt<5>("h1b"), _debugFIFO_14_writeBackGPR_T_32) @[utils.scala 10:20]
                    when _debugFIFO_14_writeBackGPR_T_41 : @[utils.scala 10:20]
                      debugFIFO_14_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_14_writeBackGPR_T_42 = eq(UInt<6>("h33"), _debugFIFO_14_writeBackGPR_T_32) @[utils.scala 10:20]
                      when _debugFIFO_14_writeBackGPR_T_42 : @[utils.scala 10:20]
                        debugFIFO_14_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_14_writeBackGPR_T_43 = eq(UInt<6>("h3b"), _debugFIFO_14_writeBackGPR_T_32) @[utils.scala 10:20]
                        when _debugFIFO_14_writeBackGPR_T_43 : @[utils.scala 10:20]
                          debugFIFO_14_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_14_writeBackGPR_T_44 = eq(UInt<7>("h73"), _debugFIFO_14_writeBackGPR_T_32) @[utils.scala 10:20]
                          when _debugFIFO_14_writeBackGPR_T_44 : @[utils.scala 10:20]
                            debugFIFO_14_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_14_writeBackGPR_T_45 = eq(UInt<4>("hf"), _debugFIFO_14_writeBackGPR_T_32) @[utils.scala 10:20]
                            when _debugFIFO_14_writeBackGPR_T_45 : @[utils.scala 10:20]
                              debugFIFO_14_writeBackGPR_insType_2 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_14_writeBackGPR_T_46 = eq(UInt<6>("h2f"), _debugFIFO_14_writeBackGPR_T_32) @[utils.scala 10:20]
                              when _debugFIFO_14_writeBackGPR_T_46 : @[utils.scala 10:20]
                                debugFIFO_14_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_14_writeBackGPR_T_47 = eq(UInt<3>("h4"), debugFIFO_14_writeBackGPR_insType_2) @[rob.scala 52:141]
    node _debugFIFO_14_writeBackGPR_T_48 = bits(debugFIFO[14].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_14_writeBackGPR_insType_3 : UInt<3>
    debugFIFO_14_writeBackGPR_insType_3 <= UInt<3>("h0")
    node _debugFIFO_14_writeBackGPR_T_49 = eq(UInt<6>("h37"), _debugFIFO_14_writeBackGPR_T_48) @[utils.scala 10:20]
    when _debugFIFO_14_writeBackGPR_T_49 : @[utils.scala 10:20]
      debugFIFO_14_writeBackGPR_insType_3 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_14_writeBackGPR_T_50 = eq(UInt<5>("h17"), _debugFIFO_14_writeBackGPR_T_48) @[utils.scala 10:20]
      when _debugFIFO_14_writeBackGPR_T_50 : @[utils.scala 10:20]
        debugFIFO_14_writeBackGPR_insType_3 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_14_writeBackGPR_T_51 = eq(UInt<7>("h6f"), _debugFIFO_14_writeBackGPR_T_48) @[utils.scala 10:20]
        when _debugFIFO_14_writeBackGPR_T_51 : @[utils.scala 10:20]
          debugFIFO_14_writeBackGPR_insType_3 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_14_writeBackGPR_T_52 = eq(UInt<7>("h67"), _debugFIFO_14_writeBackGPR_T_48) @[utils.scala 10:20]
          when _debugFIFO_14_writeBackGPR_T_52 : @[utils.scala 10:20]
            debugFIFO_14_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_14_writeBackGPR_T_53 = eq(UInt<7>("h63"), _debugFIFO_14_writeBackGPR_T_48) @[utils.scala 10:20]
            when _debugFIFO_14_writeBackGPR_T_53 : @[utils.scala 10:20]
              debugFIFO_14_writeBackGPR_insType_3 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_14_writeBackGPR_T_54 = eq(UInt<2>("h3"), _debugFIFO_14_writeBackGPR_T_48) @[utils.scala 10:20]
              when _debugFIFO_14_writeBackGPR_T_54 : @[utils.scala 10:20]
                debugFIFO_14_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_14_writeBackGPR_T_55 = eq(UInt<6>("h23"), _debugFIFO_14_writeBackGPR_T_48) @[utils.scala 10:20]
                when _debugFIFO_14_writeBackGPR_T_55 : @[utils.scala 10:20]
                  debugFIFO_14_writeBackGPR_insType_3 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_14_writeBackGPR_T_56 = eq(UInt<5>("h13"), _debugFIFO_14_writeBackGPR_T_48) @[utils.scala 10:20]
                  when _debugFIFO_14_writeBackGPR_T_56 : @[utils.scala 10:20]
                    debugFIFO_14_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_14_writeBackGPR_T_57 = eq(UInt<5>("h1b"), _debugFIFO_14_writeBackGPR_T_48) @[utils.scala 10:20]
                    when _debugFIFO_14_writeBackGPR_T_57 : @[utils.scala 10:20]
                      debugFIFO_14_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_14_writeBackGPR_T_58 = eq(UInt<6>("h33"), _debugFIFO_14_writeBackGPR_T_48) @[utils.scala 10:20]
                      when _debugFIFO_14_writeBackGPR_T_58 : @[utils.scala 10:20]
                        debugFIFO_14_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_14_writeBackGPR_T_59 = eq(UInt<6>("h3b"), _debugFIFO_14_writeBackGPR_T_48) @[utils.scala 10:20]
                        when _debugFIFO_14_writeBackGPR_T_59 : @[utils.scala 10:20]
                          debugFIFO_14_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_14_writeBackGPR_T_60 = eq(UInt<7>("h73"), _debugFIFO_14_writeBackGPR_T_48) @[utils.scala 10:20]
                          when _debugFIFO_14_writeBackGPR_T_60 : @[utils.scala 10:20]
                            debugFIFO_14_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_14_writeBackGPR_T_61 = eq(UInt<4>("hf"), _debugFIFO_14_writeBackGPR_T_48) @[utils.scala 10:20]
                            when _debugFIFO_14_writeBackGPR_T_61 : @[utils.scala 10:20]
                              debugFIFO_14_writeBackGPR_insType_3 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_14_writeBackGPR_T_62 = eq(UInt<6>("h2f"), _debugFIFO_14_writeBackGPR_T_48) @[utils.scala 10:20]
                              when _debugFIFO_14_writeBackGPR_T_62 : @[utils.scala 10:20]
                                debugFIFO_14_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_14_writeBackGPR_T_63 = eq(UInt<3>("h5"), debugFIFO_14_writeBackGPR_insType_3) @[rob.scala 52:141]
    node _debugFIFO_14_writeBackGPR_T_64 = or(_debugFIFO_14_writeBackGPR_T_15, _debugFIFO_14_writeBackGPR_T_31) @[rob.scala 52:197]
    node _debugFIFO_14_writeBackGPR_T_65 = or(_debugFIFO_14_writeBackGPR_T_64, _debugFIFO_14_writeBackGPR_T_47) @[rob.scala 52:197]
    node _debugFIFO_14_writeBackGPR_T_66 = or(_debugFIFO_14_writeBackGPR_T_65, _debugFIFO_14_writeBackGPR_T_63) @[rob.scala 52:197]
    node _debugFIFO_14_writeBackGPR_T_67 = bits(debugFIFO[14].instruction, 11, 7) @[rob.scala 52:223]
    node _debugFIFO_14_writeBackGPR_T_68 = orr(_debugFIFO_14_writeBackGPR_T_67) @[rob.scala 52:231]
    node _debugFIFO_14_writeBackGPR_T_69 = and(_debugFIFO_14_writeBackGPR_T_66, _debugFIFO_14_writeBackGPR_T_68) @[rob.scala 52:203]
    node _debugFIFO_14_writeBackGPR_T_70 = and(_debugFIFO_14_writeBackGPR_T_69, debugFIFO[14].valid) @[rob.scala 52:235]
    debugFIFO[14].writeBackGPR <= _debugFIFO_14_writeBackGPR_T_70 @[rob.scala 52:52]
    node _debugFIFO_15_writeBackGPR_T = bits(debugFIFO[15].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_15_writeBackGPR_insType : UInt<3>
    debugFIFO_15_writeBackGPR_insType <= UInt<3>("h0")
    node _debugFIFO_15_writeBackGPR_T_1 = eq(UInt<6>("h37"), _debugFIFO_15_writeBackGPR_T) @[utils.scala 10:20]
    when _debugFIFO_15_writeBackGPR_T_1 : @[utils.scala 10:20]
      debugFIFO_15_writeBackGPR_insType <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_15_writeBackGPR_T_2 = eq(UInt<5>("h17"), _debugFIFO_15_writeBackGPR_T) @[utils.scala 10:20]
      when _debugFIFO_15_writeBackGPR_T_2 : @[utils.scala 10:20]
        debugFIFO_15_writeBackGPR_insType <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_15_writeBackGPR_T_3 = eq(UInt<7>("h6f"), _debugFIFO_15_writeBackGPR_T) @[utils.scala 10:20]
        when _debugFIFO_15_writeBackGPR_T_3 : @[utils.scala 10:20]
          debugFIFO_15_writeBackGPR_insType <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_15_writeBackGPR_T_4 = eq(UInt<7>("h67"), _debugFIFO_15_writeBackGPR_T) @[utils.scala 10:20]
          when _debugFIFO_15_writeBackGPR_T_4 : @[utils.scala 10:20]
            debugFIFO_15_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_15_writeBackGPR_T_5 = eq(UInt<7>("h63"), _debugFIFO_15_writeBackGPR_T) @[utils.scala 10:20]
            when _debugFIFO_15_writeBackGPR_T_5 : @[utils.scala 10:20]
              debugFIFO_15_writeBackGPR_insType <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_15_writeBackGPR_T_6 = eq(UInt<2>("h3"), _debugFIFO_15_writeBackGPR_T) @[utils.scala 10:20]
              when _debugFIFO_15_writeBackGPR_T_6 : @[utils.scala 10:20]
                debugFIFO_15_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_15_writeBackGPR_T_7 = eq(UInt<6>("h23"), _debugFIFO_15_writeBackGPR_T) @[utils.scala 10:20]
                when _debugFIFO_15_writeBackGPR_T_7 : @[utils.scala 10:20]
                  debugFIFO_15_writeBackGPR_insType <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_15_writeBackGPR_T_8 = eq(UInt<5>("h13"), _debugFIFO_15_writeBackGPR_T) @[utils.scala 10:20]
                  when _debugFIFO_15_writeBackGPR_T_8 : @[utils.scala 10:20]
                    debugFIFO_15_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_15_writeBackGPR_T_9 = eq(UInt<5>("h1b"), _debugFIFO_15_writeBackGPR_T) @[utils.scala 10:20]
                    when _debugFIFO_15_writeBackGPR_T_9 : @[utils.scala 10:20]
                      debugFIFO_15_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_15_writeBackGPR_T_10 = eq(UInt<6>("h33"), _debugFIFO_15_writeBackGPR_T) @[utils.scala 10:20]
                      when _debugFIFO_15_writeBackGPR_T_10 : @[utils.scala 10:20]
                        debugFIFO_15_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_15_writeBackGPR_T_11 = eq(UInt<6>("h3b"), _debugFIFO_15_writeBackGPR_T) @[utils.scala 10:20]
                        when _debugFIFO_15_writeBackGPR_T_11 : @[utils.scala 10:20]
                          debugFIFO_15_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_15_writeBackGPR_T_12 = eq(UInt<7>("h73"), _debugFIFO_15_writeBackGPR_T) @[utils.scala 10:20]
                          when _debugFIFO_15_writeBackGPR_T_12 : @[utils.scala 10:20]
                            debugFIFO_15_writeBackGPR_insType <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_15_writeBackGPR_T_13 = eq(UInt<4>("hf"), _debugFIFO_15_writeBackGPR_T) @[utils.scala 10:20]
                            when _debugFIFO_15_writeBackGPR_T_13 : @[utils.scala 10:20]
                              debugFIFO_15_writeBackGPR_insType <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_15_writeBackGPR_T_14 = eq(UInt<6>("h2f"), _debugFIFO_15_writeBackGPR_T) @[utils.scala 10:20]
                              when _debugFIFO_15_writeBackGPR_T_14 : @[utils.scala 10:20]
                                debugFIFO_15_writeBackGPR_insType <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_15_writeBackGPR_T_15 = eq(UInt<1>("h1"), debugFIFO_15_writeBackGPR_insType) @[rob.scala 52:141]
    node _debugFIFO_15_writeBackGPR_T_16 = bits(debugFIFO[15].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_15_writeBackGPR_insType_1 : UInt<3>
    debugFIFO_15_writeBackGPR_insType_1 <= UInt<3>("h0")
    node _debugFIFO_15_writeBackGPR_T_17 = eq(UInt<6>("h37"), _debugFIFO_15_writeBackGPR_T_16) @[utils.scala 10:20]
    when _debugFIFO_15_writeBackGPR_T_17 : @[utils.scala 10:20]
      debugFIFO_15_writeBackGPR_insType_1 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_15_writeBackGPR_T_18 = eq(UInt<5>("h17"), _debugFIFO_15_writeBackGPR_T_16) @[utils.scala 10:20]
      when _debugFIFO_15_writeBackGPR_T_18 : @[utils.scala 10:20]
        debugFIFO_15_writeBackGPR_insType_1 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_15_writeBackGPR_T_19 = eq(UInt<7>("h6f"), _debugFIFO_15_writeBackGPR_T_16) @[utils.scala 10:20]
        when _debugFIFO_15_writeBackGPR_T_19 : @[utils.scala 10:20]
          debugFIFO_15_writeBackGPR_insType_1 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_15_writeBackGPR_T_20 = eq(UInt<7>("h67"), _debugFIFO_15_writeBackGPR_T_16) @[utils.scala 10:20]
          when _debugFIFO_15_writeBackGPR_T_20 : @[utils.scala 10:20]
            debugFIFO_15_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_15_writeBackGPR_T_21 = eq(UInt<7>("h63"), _debugFIFO_15_writeBackGPR_T_16) @[utils.scala 10:20]
            when _debugFIFO_15_writeBackGPR_T_21 : @[utils.scala 10:20]
              debugFIFO_15_writeBackGPR_insType_1 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_15_writeBackGPR_T_22 = eq(UInt<2>("h3"), _debugFIFO_15_writeBackGPR_T_16) @[utils.scala 10:20]
              when _debugFIFO_15_writeBackGPR_T_22 : @[utils.scala 10:20]
                debugFIFO_15_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_15_writeBackGPR_T_23 = eq(UInt<6>("h23"), _debugFIFO_15_writeBackGPR_T_16) @[utils.scala 10:20]
                when _debugFIFO_15_writeBackGPR_T_23 : @[utils.scala 10:20]
                  debugFIFO_15_writeBackGPR_insType_1 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_15_writeBackGPR_T_24 = eq(UInt<5>("h13"), _debugFIFO_15_writeBackGPR_T_16) @[utils.scala 10:20]
                  when _debugFIFO_15_writeBackGPR_T_24 : @[utils.scala 10:20]
                    debugFIFO_15_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_15_writeBackGPR_T_25 = eq(UInt<5>("h1b"), _debugFIFO_15_writeBackGPR_T_16) @[utils.scala 10:20]
                    when _debugFIFO_15_writeBackGPR_T_25 : @[utils.scala 10:20]
                      debugFIFO_15_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_15_writeBackGPR_T_26 = eq(UInt<6>("h33"), _debugFIFO_15_writeBackGPR_T_16) @[utils.scala 10:20]
                      when _debugFIFO_15_writeBackGPR_T_26 : @[utils.scala 10:20]
                        debugFIFO_15_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_15_writeBackGPR_T_27 = eq(UInt<6>("h3b"), _debugFIFO_15_writeBackGPR_T_16) @[utils.scala 10:20]
                        when _debugFIFO_15_writeBackGPR_T_27 : @[utils.scala 10:20]
                          debugFIFO_15_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_15_writeBackGPR_T_28 = eq(UInt<7>("h73"), _debugFIFO_15_writeBackGPR_T_16) @[utils.scala 10:20]
                          when _debugFIFO_15_writeBackGPR_T_28 : @[utils.scala 10:20]
                            debugFIFO_15_writeBackGPR_insType_1 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_15_writeBackGPR_T_29 = eq(UInt<4>("hf"), _debugFIFO_15_writeBackGPR_T_16) @[utils.scala 10:20]
                            when _debugFIFO_15_writeBackGPR_T_29 : @[utils.scala 10:20]
                              debugFIFO_15_writeBackGPR_insType_1 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_15_writeBackGPR_T_30 = eq(UInt<6>("h2f"), _debugFIFO_15_writeBackGPR_T_16) @[utils.scala 10:20]
                              when _debugFIFO_15_writeBackGPR_T_30 : @[utils.scala 10:20]
                                debugFIFO_15_writeBackGPR_insType_1 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_15_writeBackGPR_T_31 = eq(UInt<1>("h0"), debugFIFO_15_writeBackGPR_insType_1) @[rob.scala 52:141]
    node _debugFIFO_15_writeBackGPR_T_32 = bits(debugFIFO[15].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_15_writeBackGPR_insType_2 : UInt<3>
    debugFIFO_15_writeBackGPR_insType_2 <= UInt<3>("h0")
    node _debugFIFO_15_writeBackGPR_T_33 = eq(UInt<6>("h37"), _debugFIFO_15_writeBackGPR_T_32) @[utils.scala 10:20]
    when _debugFIFO_15_writeBackGPR_T_33 : @[utils.scala 10:20]
      debugFIFO_15_writeBackGPR_insType_2 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_15_writeBackGPR_T_34 = eq(UInt<5>("h17"), _debugFIFO_15_writeBackGPR_T_32) @[utils.scala 10:20]
      when _debugFIFO_15_writeBackGPR_T_34 : @[utils.scala 10:20]
        debugFIFO_15_writeBackGPR_insType_2 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_15_writeBackGPR_T_35 = eq(UInt<7>("h6f"), _debugFIFO_15_writeBackGPR_T_32) @[utils.scala 10:20]
        when _debugFIFO_15_writeBackGPR_T_35 : @[utils.scala 10:20]
          debugFIFO_15_writeBackGPR_insType_2 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_15_writeBackGPR_T_36 = eq(UInt<7>("h67"), _debugFIFO_15_writeBackGPR_T_32) @[utils.scala 10:20]
          when _debugFIFO_15_writeBackGPR_T_36 : @[utils.scala 10:20]
            debugFIFO_15_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_15_writeBackGPR_T_37 = eq(UInt<7>("h63"), _debugFIFO_15_writeBackGPR_T_32) @[utils.scala 10:20]
            when _debugFIFO_15_writeBackGPR_T_37 : @[utils.scala 10:20]
              debugFIFO_15_writeBackGPR_insType_2 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_15_writeBackGPR_T_38 = eq(UInt<2>("h3"), _debugFIFO_15_writeBackGPR_T_32) @[utils.scala 10:20]
              when _debugFIFO_15_writeBackGPR_T_38 : @[utils.scala 10:20]
                debugFIFO_15_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_15_writeBackGPR_T_39 = eq(UInt<6>("h23"), _debugFIFO_15_writeBackGPR_T_32) @[utils.scala 10:20]
                when _debugFIFO_15_writeBackGPR_T_39 : @[utils.scala 10:20]
                  debugFIFO_15_writeBackGPR_insType_2 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_15_writeBackGPR_T_40 = eq(UInt<5>("h13"), _debugFIFO_15_writeBackGPR_T_32) @[utils.scala 10:20]
                  when _debugFIFO_15_writeBackGPR_T_40 : @[utils.scala 10:20]
                    debugFIFO_15_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_15_writeBackGPR_T_41 = eq(UInt<5>("h1b"), _debugFIFO_15_writeBackGPR_T_32) @[utils.scala 10:20]
                    when _debugFIFO_15_writeBackGPR_T_41 : @[utils.scala 10:20]
                      debugFIFO_15_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_15_writeBackGPR_T_42 = eq(UInt<6>("h33"), _debugFIFO_15_writeBackGPR_T_32) @[utils.scala 10:20]
                      when _debugFIFO_15_writeBackGPR_T_42 : @[utils.scala 10:20]
                        debugFIFO_15_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_15_writeBackGPR_T_43 = eq(UInt<6>("h3b"), _debugFIFO_15_writeBackGPR_T_32) @[utils.scala 10:20]
                        when _debugFIFO_15_writeBackGPR_T_43 : @[utils.scala 10:20]
                          debugFIFO_15_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_15_writeBackGPR_T_44 = eq(UInt<7>("h73"), _debugFIFO_15_writeBackGPR_T_32) @[utils.scala 10:20]
                          when _debugFIFO_15_writeBackGPR_T_44 : @[utils.scala 10:20]
                            debugFIFO_15_writeBackGPR_insType_2 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_15_writeBackGPR_T_45 = eq(UInt<4>("hf"), _debugFIFO_15_writeBackGPR_T_32) @[utils.scala 10:20]
                            when _debugFIFO_15_writeBackGPR_T_45 : @[utils.scala 10:20]
                              debugFIFO_15_writeBackGPR_insType_2 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_15_writeBackGPR_T_46 = eq(UInt<6>("h2f"), _debugFIFO_15_writeBackGPR_T_32) @[utils.scala 10:20]
                              when _debugFIFO_15_writeBackGPR_T_46 : @[utils.scala 10:20]
                                debugFIFO_15_writeBackGPR_insType_2 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_15_writeBackGPR_T_47 = eq(UInt<3>("h4"), debugFIFO_15_writeBackGPR_insType_2) @[rob.scala 52:141]
    node _debugFIFO_15_writeBackGPR_T_48 = bits(debugFIFO[15].instruction, 6, 0) @[rob.scala 52:179]
    wire debugFIFO_15_writeBackGPR_insType_3 : UInt<3>
    debugFIFO_15_writeBackGPR_insType_3 <= UInt<3>("h0")
    node _debugFIFO_15_writeBackGPR_T_49 = eq(UInt<6>("h37"), _debugFIFO_15_writeBackGPR_T_48) @[utils.scala 10:20]
    when _debugFIFO_15_writeBackGPR_T_49 : @[utils.scala 10:20]
      debugFIFO_15_writeBackGPR_insType_3 <= UInt<3>("h4") @[utils.scala 12:17]
    else :
      node _debugFIFO_15_writeBackGPR_T_50 = eq(UInt<5>("h17"), _debugFIFO_15_writeBackGPR_T_48) @[utils.scala 10:20]
      when _debugFIFO_15_writeBackGPR_T_50 : @[utils.scala 10:20]
        debugFIFO_15_writeBackGPR_insType_3 <= UInt<3>("h4") @[utils.scala 15:17]
      else :
        node _debugFIFO_15_writeBackGPR_T_51 = eq(UInt<7>("h6f"), _debugFIFO_15_writeBackGPR_T_48) @[utils.scala 10:20]
        when _debugFIFO_15_writeBackGPR_T_51 : @[utils.scala 10:20]
          debugFIFO_15_writeBackGPR_insType_3 <= UInt<3>("h5") @[utils.scala 18:17]
        else :
          node _debugFIFO_15_writeBackGPR_T_52 = eq(UInt<7>("h67"), _debugFIFO_15_writeBackGPR_T_48) @[utils.scala 10:20]
          when _debugFIFO_15_writeBackGPR_T_52 : @[utils.scala 10:20]
            debugFIFO_15_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 21:17]
          else :
            node _debugFIFO_15_writeBackGPR_T_53 = eq(UInt<7>("h63"), _debugFIFO_15_writeBackGPR_T_48) @[utils.scala 10:20]
            when _debugFIFO_15_writeBackGPR_T_53 : @[utils.scala 10:20]
              debugFIFO_15_writeBackGPR_insType_3 <= UInt<2>("h3") @[utils.scala 24:17]
            else :
              node _debugFIFO_15_writeBackGPR_T_54 = eq(UInt<2>("h3"), _debugFIFO_15_writeBackGPR_T_48) @[utils.scala 10:20]
              when _debugFIFO_15_writeBackGPR_T_54 : @[utils.scala 10:20]
                debugFIFO_15_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 27:17]
              else :
                node _debugFIFO_15_writeBackGPR_T_55 = eq(UInt<6>("h23"), _debugFIFO_15_writeBackGPR_T_48) @[utils.scala 10:20]
                when _debugFIFO_15_writeBackGPR_T_55 : @[utils.scala 10:20]
                  debugFIFO_15_writeBackGPR_insType_3 <= UInt<2>("h2") @[utils.scala 30:17]
                else :
                  node _debugFIFO_15_writeBackGPR_T_56 = eq(UInt<5>("h13"), _debugFIFO_15_writeBackGPR_T_48) @[utils.scala 10:20]
                  when _debugFIFO_15_writeBackGPR_T_56 : @[utils.scala 10:20]
                    debugFIFO_15_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 33:17]
                  else :
                    node _debugFIFO_15_writeBackGPR_T_57 = eq(UInt<5>("h1b"), _debugFIFO_15_writeBackGPR_T_48) @[utils.scala 10:20]
                    when _debugFIFO_15_writeBackGPR_T_57 : @[utils.scala 10:20]
                      debugFIFO_15_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 36:17]
                    else :
                      node _debugFIFO_15_writeBackGPR_T_58 = eq(UInt<6>("h33"), _debugFIFO_15_writeBackGPR_T_48) @[utils.scala 10:20]
                      when _debugFIFO_15_writeBackGPR_T_58 : @[utils.scala 10:20]
                        debugFIFO_15_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 39:17]
                      else :
                        node _debugFIFO_15_writeBackGPR_T_59 = eq(UInt<6>("h3b"), _debugFIFO_15_writeBackGPR_T_48) @[utils.scala 10:20]
                        when _debugFIFO_15_writeBackGPR_T_59 : @[utils.scala 10:20]
                          debugFIFO_15_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 42:17]
                        else :
                          node _debugFIFO_15_writeBackGPR_T_60 = eq(UInt<7>("h73"), _debugFIFO_15_writeBackGPR_T_48) @[utils.scala 10:20]
                          when _debugFIFO_15_writeBackGPR_T_60 : @[utils.scala 10:20]
                            debugFIFO_15_writeBackGPR_insType_3 <= UInt<1>("h1") @[utils.scala 45:17]
                          else :
                            node _debugFIFO_15_writeBackGPR_T_61 = eq(UInt<4>("hf"), _debugFIFO_15_writeBackGPR_T_48) @[utils.scala 10:20]
                            when _debugFIFO_15_writeBackGPR_T_61 : @[utils.scala 10:20]
                              debugFIFO_15_writeBackGPR_insType_3 <= UInt<3>("h6") @[utils.scala 48:17]
                            else :
                              node _debugFIFO_15_writeBackGPR_T_62 = eq(UInt<6>("h2f"), _debugFIFO_15_writeBackGPR_T_48) @[utils.scala 10:20]
                              when _debugFIFO_15_writeBackGPR_T_62 : @[utils.scala 10:20]
                                debugFIFO_15_writeBackGPR_insType_3 <= UInt<1>("h0") @[utils.scala 51:17]
    node _debugFIFO_15_writeBackGPR_T_63 = eq(UInt<3>("h5"), debugFIFO_15_writeBackGPR_insType_3) @[rob.scala 52:141]
    node _debugFIFO_15_writeBackGPR_T_64 = or(_debugFIFO_15_writeBackGPR_T_15, _debugFIFO_15_writeBackGPR_T_31) @[rob.scala 52:197]
    node _debugFIFO_15_writeBackGPR_T_65 = or(_debugFIFO_15_writeBackGPR_T_64, _debugFIFO_15_writeBackGPR_T_47) @[rob.scala 52:197]
    node _debugFIFO_15_writeBackGPR_T_66 = or(_debugFIFO_15_writeBackGPR_T_65, _debugFIFO_15_writeBackGPR_T_63) @[rob.scala 52:197]
    node _debugFIFO_15_writeBackGPR_T_67 = bits(debugFIFO[15].instruction, 11, 7) @[rob.scala 52:223]
    node _debugFIFO_15_writeBackGPR_T_68 = orr(_debugFIFO_15_writeBackGPR_T_67) @[rob.scala 52:231]
    node _debugFIFO_15_writeBackGPR_T_69 = and(_debugFIFO_15_writeBackGPR_T_66, _debugFIFO_15_writeBackGPR_T_68) @[rob.scala 52:203]
    node _debugFIFO_15_writeBackGPR_T_70 = and(_debugFIFO_15_writeBackGPR_T_69, debugFIFO[15].valid) @[rob.scala 52:235]
    debugFIFO[15].writeBackGPR <= _debugFIFO_15_writeBackGPR_T_70 @[rob.scala 52:52]
    debugFIFOOut <= debugFIFO @[rob.scala 55:18]
    node _allocatedPRFCount_T = add(debugFIFO[0].writeBackGPR, debugFIFO[1].writeBackGPR) @[rob.scala 58:72]
    node _allocatedPRFCount_T_1 = add(_allocatedPRFCount_T, debugFIFO[2].writeBackGPR) @[rob.scala 58:72]
    node _allocatedPRFCount_T_2 = add(_allocatedPRFCount_T_1, debugFIFO[3].writeBackGPR) @[rob.scala 58:72]
    node _allocatedPRFCount_T_3 = add(_allocatedPRFCount_T_2, debugFIFO[4].writeBackGPR) @[rob.scala 58:72]
    node _allocatedPRFCount_T_4 = add(_allocatedPRFCount_T_3, debugFIFO[5].writeBackGPR) @[rob.scala 58:72]
    node _allocatedPRFCount_T_5 = add(_allocatedPRFCount_T_4, debugFIFO[6].writeBackGPR) @[rob.scala 58:72]
    node _allocatedPRFCount_T_6 = add(_allocatedPRFCount_T_5, debugFIFO[7].writeBackGPR) @[rob.scala 58:72]
    node _allocatedPRFCount_T_7 = add(_allocatedPRFCount_T_6, debugFIFO[8].writeBackGPR) @[rob.scala 58:72]
    node _allocatedPRFCount_T_8 = add(_allocatedPRFCount_T_7, debugFIFO[9].writeBackGPR) @[rob.scala 58:72]
    node _allocatedPRFCount_T_9 = add(_allocatedPRFCount_T_8, debugFIFO[10].writeBackGPR) @[rob.scala 58:72]
    node _allocatedPRFCount_T_10 = add(_allocatedPRFCount_T_9, debugFIFO[11].writeBackGPR) @[rob.scala 58:72]
    node _allocatedPRFCount_T_11 = add(_allocatedPRFCount_T_10, debugFIFO[12].writeBackGPR) @[rob.scala 58:72]
    node _allocatedPRFCount_T_12 = add(_allocatedPRFCount_T_11, debugFIFO[13].writeBackGPR) @[rob.scala 58:72]
    node _allocatedPRFCount_T_13 = add(_allocatedPRFCount_T_12, debugFIFO[14].writeBackGPR) @[rob.scala 58:72]
    node _allocatedPRFCount_T_14 = add(_allocatedPRFCount_T_13, debugFIFO[15].writeBackGPR) @[rob.scala 58:72]
    allocatedPRFCount <= _allocatedPRFCount_T_14 @[rob.scala 58:23]

  module rob_Anon_3 :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<130>}, deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<130>}}
    input modify : UInt<1>
    input modifyVal : UInt<4>
    output writeports : { flip valid : UInt<1>, flip data : UInt<130>, flip addr : UInt<4>}[5]
    output allocatedAddr : UInt<4>
    output robAddrRelease : UInt<4>

    wire incrRead : UInt<1>
    incrRead <= UInt<1>("h0")
    wire incrWrite : UInt<1>
    incrWrite <= UInt<1>("h0")
    reg readPtr : UInt<4>, clock with :
      reset => (reset, UInt<4>("h0")) @[Fifo.scala 75:25]
    node _nextRead_T = eq(readPtr, UInt<4>("hf")) @[Fifo.scala 76:30]
    node _nextRead_T_1 = add(readPtr, UInt<1>("h1")) @[Fifo.scala 76:61]
    node _nextRead_T_2 = tail(_nextRead_T_1, 1) @[Fifo.scala 76:61]
    node nextRead = mux(_nextRead_T, UInt<1>("h0"), _nextRead_T_2) @[Fifo.scala 76:21]
    when incrRead : @[Fifo.scala 77:19]
      readPtr <= nextRead @[Fifo.scala 78:13]
    reg writePtr : UInt<4>, clock with :
      reset => (reset, UInt<4>("h0")) @[Fifo.scala 81:25]
    node _nextWrite_T = eq(writePtr, UInt<4>("hf")) @[Fifo.scala 82:32]
    node _nextWrite_T_1 = add(writePtr, UInt<1>("h1")) @[Fifo.scala 82:65]
    node _nextWrite_T_2 = tail(_nextWrite_T_1, 1) @[Fifo.scala 82:65]
    node nextWrite = mux(_nextWrite_T, UInt<1>("h0"), _nextWrite_T_2) @[Fifo.scala 82:22]
    reg fullReg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Fifo.scala 84:24]
    cmem memReg : UInt<130> [16] @[Fifo.scala 86:19]
    reg emptyReg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h1")) @[Fifo.scala 89:25]
    node _nextval_T = eq(modifyVal, UInt<4>("hf")) @[Fifo.scala 91:31]
    node _nextval_T_1 = add(modifyVal, UInt<1>("h1")) @[Fifo.scala 91:65]
    node _nextval_T_2 = tail(_nextval_T_1, 1) @[Fifo.scala 91:65]
    node nextval = mux(_nextval_T, UInt<1>("h0"), _nextval_T_2) @[Fifo.scala 91:20]
    when modify : @[Fifo.scala 93:16]
      writePtr <= nextval @[Fifo.scala 95:14]
      node _emptyReg_T = eq(nextval, readPtr) @[Fifo.scala 97:25]
      emptyReg <= _emptyReg_T @[Fifo.scala 97:14]
    else :
      when incrWrite : @[Fifo.scala 98:24]
        writePtr <= nextWrite @[Fifo.scala 99:14]
    node _T = and(io.deq.ready, io.deq.valid) @[Fifo.scala 105:21]
    node _T_1 = and(_T, io.enq.valid) @[Fifo.scala 105:37]
    node _T_2 = and(_T_1, io.enq.ready) @[Fifo.scala 105:53]
    when _T_2 : @[Fifo.scala 105:70]
      infer mport MPORT = memReg[writePtr], clock @[Fifo.scala 106:11]
      MPORT <= io.enq.bits @[Fifo.scala 106:22]
      incrWrite <= UInt<1>("h1") @[Fifo.scala 107:15]
      incrRead <= UInt<1>("h1") @[Fifo.scala 108:14]
    else :
      node _T_3 = and(io.enq.valid, io.enq.ready) @[Fifo.scala 109:27]
      when _T_3 : @[Fifo.scala 109:44]
        infer mport MPORT_1 = memReg[writePtr], clock @[Fifo.scala 110:11]
        MPORT_1 <= io.enq.bits @[Fifo.scala 110:22]
        emptyReg <= UInt<1>("h0") @[Fifo.scala 111:14]
        node _fullReg_T = eq(nextWrite, readPtr) @[Fifo.scala 112:26]
        fullReg <= _fullReg_T @[Fifo.scala 112:13]
        incrWrite <= UInt<1>("h1") @[Fifo.scala 113:15]
      else :
        node _T_4 = and(io.deq.ready, io.deq.valid) @[Fifo.scala 114:27]
        when _T_4 : @[Fifo.scala 114:44]
          fullReg <= UInt<1>("h0") @[Fifo.scala 115:13]
          node _emptyReg_T_1 = eq(nextRead, writePtr) @[Fifo.scala 116:26]
          emptyReg <= _emptyReg_T_1 @[Fifo.scala 116:14]
          incrRead <= UInt<1>("h1") @[Fifo.scala 117:14]
    infer mport io_deq_bits_MPORT = memReg[readPtr], clock @[Fifo.scala 120:24]
    io.deq.bits <= io_deq_bits_MPORT @[Fifo.scala 120:15]
    node _io_enq_ready_T = eq(fullReg, UInt<1>("h0")) @[Fifo.scala 121:20]
    node _io_enq_ready_T_1 = and(io.deq.valid, io.deq.ready) @[Fifo.scala 121:45]
    node _io_enq_ready_T_2 = or(_io_enq_ready_T, _io_enq_ready_T_1) @[Fifo.scala 121:29]
    node _io_enq_ready_T_3 = eq(modify, UInt<1>("h0")) @[Fifo.scala 121:64]
    node _io_enq_ready_T_4 = and(_io_enq_ready_T_2, _io_enq_ready_T_3) @[Fifo.scala 121:62]
    io.enq.ready <= _io_enq_ready_T_4 @[Fifo.scala 121:16]
    node _io_deq_valid_T = eq(emptyReg, UInt<1>("h0")) @[Fifo.scala 122:19]
    node _io_deq_valid_T_1 = eq(modify, UInt<1>("h0")) @[Fifo.scala 122:31]
    node _io_deq_valid_T_2 = and(_io_deq_valid_T, _io_deq_valid_T_1) @[Fifo.scala 122:29]
    io.deq.valid <= _io_deq_valid_T_2 @[Fifo.scala 122:16]
    when writeports[0].valid : @[Fifo.scala 138:31]
      infer mport MPORT_2 = memReg[writeports[0].addr], clock @[Fifo.scala 139:13]
      MPORT_2 <= writeports[0].data @[Fifo.scala 139:34]
    when writeports[1].valid : @[Fifo.scala 138:31]
      infer mport MPORT_3 = memReg[writeports[1].addr], clock @[Fifo.scala 139:13]
      MPORT_3 <= writeports[1].data @[Fifo.scala 139:34]
    when writeports[2].valid : @[Fifo.scala 138:31]
      infer mport MPORT_4 = memReg[writeports[2].addr], clock @[Fifo.scala 139:13]
      MPORT_4 <= writeports[2].data @[Fifo.scala 139:34]
    when writeports[3].valid : @[Fifo.scala 138:31]
      infer mport MPORT_5 = memReg[writeports[3].addr], clock @[Fifo.scala 139:13]
      MPORT_5 <= writeports[3].data @[Fifo.scala 139:34]
    when writeports[4].valid : @[Fifo.scala 138:31]
      infer mport MPORT_6 = memReg[writeports[4].addr], clock @[Fifo.scala 139:13]
      MPORT_6 <= writeports[4].data @[Fifo.scala 139:34]
    allocatedAddr <= writePtr @[Fifo.scala 145:17]
    robAddrRelease <= readPtr @[rob.scala 63:20]

  module rob_1 :
    input clock : Clock
    input reset : Reset
    output allocate : { ready : UInt<1>, flip fired : UInt<1>, flip pc : UInt<64>, flip instruction : UInt<32>, flip prfDest : UInt<6>, robAddr : UInt<4>, flip isReady : UInt<1>}
    output commit : { ready : UInt<1>, flip fired : UInt<1>, prfDest : UInt<6>, pc : UInt<64>, instruction : UInt<32>, exceptionOccurred : UInt<1>, mcause : UInt<64>, mtval : UInt<64>, isStore : UInt<1>, is_fence : UInt<1>, robAddr : UInt<4>}
    output branch : { flip valid : UInt<1>, flip pass : UInt<1>, flip robAddr : UInt<4>}
    output execPorts : { flip robAddr : UInt<4>, flip exceptionOccurred : UInt<1>, flip mcause : UInt<64>, flip mtval : UInt<64>, flip valid : UInt<1>}[4]
    output debugFIFOOut : { valid : UInt<1>, instruction : UInt<32>, prfDest : UInt<6>, pc : UInt<64>, writeBackGPR : UInt<1>}[16]
    output allocatedPRFCount : UInt<16>
    output robAddrRelease : UInt<4>

    inst fifo of rob_Anon_2 @[rob.scala 24:20]
    fifo.clock <= clock
    fifo.reset <= reset
    inst results of rob_Anon_3 @[rob.scala 61:23]
    results.clock <= clock
    results.reset <= reset
    node _allocate_ready_T = and(fifo.io.enq.ready, results.io.enq.ready) @[rob.scala 67:39]
    allocate.ready <= _allocate_ready_T @[rob.scala 67:18]
    node _fifo_data_T = cat(allocate.instruction, allocate.prfDest) @[Cat.scala 33:92]
    node fifo_data = cat(allocate.pc, _fifo_data_T) @[Cat.scala 33:92]
    node resultsdata = cat(UInt<129>("h0"), allocate.isReady) @[Cat.scala 33:92]
    fifo.io.enq.bits <= fifo_data @[rob.scala 70:20]
    results.io.enq.bits <= resultsdata @[rob.scala 71:23]
    allocate.robAddr <= results.allocatedAddr @[rob.scala 72:20]
    when allocate.fired : @[rob.scala 73:23]
      fifo.io.enq.valid <= UInt<1>("h1") @[rob.scala 74:23]
      results.io.enq.valid <= UInt<1>("h1") @[rob.scala 75:26]
    else :
      fifo.io.enq.valid <= UInt<1>("h0") @[rob.scala 77:23]
      results.io.enq.valid <= UInt<1>("h0") @[rob.scala 78:26]
    node _is_fence_T = bits(commit.instruction, 6, 0) @[rob.scala 81:36]
    node is_fence = eq(_is_fence_T, UInt<4>("hf")) @[rob.scala 81:42]
    node _commit_ready_T = bits(results.io.deq.bits, 0, 0) @[rob.scala 84:39]
    node _commit_ready_T_1 = or(_commit_ready_T, is_fence) @[rob.scala 84:43]
    node _commit_ready_T_2 = or(_commit_ready_T_1, commit.isStore) @[rob.scala 84:54]
    node _commit_ready_T_3 = and(_commit_ready_T_2, fifo.io.deq.valid) @[rob.scala 84:72]
    node _commit_ready_T_4 = and(_commit_ready_T_3, results.io.deq.valid) @[rob.scala 84:92]
    commit.ready <= _commit_ready_T_4 @[rob.scala 84:16]
    node _commit_mcause_T = bits(results.io.deq.bits, 64, 1) @[rob.scala 85:39]
    commit.mcause <= _commit_mcause_T @[rob.scala 85:17]
    node _commit_mtval_T = bits(results.io.deq.bits, 128, 65) @[rob.scala 86:38]
    commit.mtval <= _commit_mtval_T @[rob.scala 86:16]
    node _commit_exceptionOccurred_T = bits(results.io.deq.bits, 129, 129) @[rob.scala 87:50]
    commit.exceptionOccurred <= _commit_exceptionOccurred_T @[rob.scala 87:28]
    node _commit_prfDest_T = bits(fifo.io.deq.bits, 5, 0) @[rob.scala 88:37]
    commit.prfDest <= _commit_prfDest_T @[rob.scala 88:18]
    node _commit_instruction_T = bits(fifo.io.deq.bits, 37, 6) @[rob.scala 89:41]
    commit.instruction <= _commit_instruction_T @[rob.scala 89:22]
    node _commit_pc_T = bits(fifo.io.deq.bits, 101, 38) @[rob.scala 90:32]
    commit.pc <= _commit_pc_T @[rob.scala 90:13]
    commit.is_fence <= is_fence @[rob.scala 91:19]
    commit.robAddr <= results.robAddrRelease @[rob.scala 92:18]
    when commit.fired : @[rob.scala 94:22]
      fifo.io.deq.ready <= UInt<1>("h1") @[rob.scala 95:23]
      results.io.deq.ready <= UInt<1>("h1") @[rob.scala 96:26]
    else :
      fifo.io.deq.ready <= UInt<1>("h0") @[rob.scala 98:23]
      results.io.deq.ready <= UInt<1>("h0") @[rob.scala 99:26]
    node _commit_isStore_T = bits(fifo.io.deq.bits, 12, 6) @[rob.scala 102:37]
    node _commit_isStore_T_1 = eq(_commit_isStore_T, UInt<6>("h23")) @[rob.scala 102:44]
    commit.isStore <= _commit_isStore_T_1 @[rob.scala 102:18]
    node _fifo_modify_T = eq(branch.pass, UInt<1>("h0")) @[rob.scala 105:33]
    node _fifo_modify_T_1 = and(branch.valid, _fifo_modify_T) @[rob.scala 105:31]
    fifo.modify <= _fifo_modify_T_1 @[rob.scala 105:15]
    fifo.modifyVal <= branch.robAddr @[rob.scala 106:18]
    node _results_modify_T = eq(branch.pass, UInt<1>("h0")) @[rob.scala 107:36]
    node _results_modify_T_1 = and(branch.valid, _results_modify_T) @[rob.scala 107:34]
    results.modify <= _results_modify_T_1 @[rob.scala 107:18]
    results.modifyVal <= branch.robAddr @[rob.scala 108:21]
    results.writeports[4].valid <= branch.valid @[rob.scala 109:43]
    results.writeports[4].addr <= branch.robAddr @[rob.scala 110:42]
    node _results_writeports_4_data_T = cat(UInt<129>("h0"), UInt<1>("h1")) @[Cat.scala 33:92]
    results.writeports[4].data <= _results_writeports_4_data_T @[rob.scala 111:42]
    node _writeval_T = cat(execPorts[0].mcause, UInt<1>("h1")) @[Cat.scala 33:92]
    node _writeval_T_1 = cat(execPorts[0].mtval, _writeval_T) @[Cat.scala 33:92]
    node writeval = cat(execPorts[0].exceptionOccurred, _writeval_T_1) @[Cat.scala 33:92]
    results.writeports[0].valid <= execPorts[0].valid @[rob.scala 117:33]
    results.writeports[0].data <= writeval @[rob.scala 118:32]
    results.writeports[0].addr <= execPorts[0].robAddr @[rob.scala 119:32]
    node _writeval_T_2 = cat(execPorts[1].mcause, UInt<1>("h1")) @[Cat.scala 33:92]
    node _writeval_T_3 = cat(execPorts[1].mtval, _writeval_T_2) @[Cat.scala 33:92]
    node writeval_1 = cat(execPorts[1].exceptionOccurred, _writeval_T_3) @[Cat.scala 33:92]
    results.writeports[1].valid <= execPorts[1].valid @[rob.scala 117:33]
    results.writeports[1].data <= writeval_1 @[rob.scala 118:32]
    results.writeports[1].addr <= execPorts[1].robAddr @[rob.scala 119:32]
    node _writeval_T_4 = cat(execPorts[2].mcause, UInt<1>("h1")) @[Cat.scala 33:92]
    node _writeval_T_5 = cat(execPorts[2].mtval, _writeval_T_4) @[Cat.scala 33:92]
    node writeval_2 = cat(execPorts[2].exceptionOccurred, _writeval_T_5) @[Cat.scala 33:92]
    results.writeports[2].valid <= execPorts[2].valid @[rob.scala 117:33]
    results.writeports[2].data <= writeval_2 @[rob.scala 118:32]
    results.writeports[2].addr <= execPorts[2].robAddr @[rob.scala 119:32]
    node _writeval_T_6 = cat(execPorts[3].mcause, UInt<1>("h1")) @[Cat.scala 33:92]
    node _writeval_T_7 = cat(execPorts[3].mtval, _writeval_T_6) @[Cat.scala 33:92]
    node writeval_3 = cat(execPorts[3].exceptionOccurred, _writeval_T_7) @[Cat.scala 33:92]
    results.writeports[3].valid <= execPorts[3].valid @[rob.scala 117:33]
    results.writeports[3].data <= writeval_3 @[rob.scala 118:32]
    results.writeports[3].addr <= execPorts[3].robAddr @[rob.scala 119:32]
    node _T = and(commit.exceptionOccurred, commit.fired) @[rob.scala 123:33]
    when _T : @[rob.scala 123:49]
      results.reset <= UInt<1>("h1") @[rob.scala 124:19]
      fifo.reset <= UInt<1>("h1") @[rob.scala 125:16]
    debugFIFOOut <= fifo.debugFIFOOut @[rob.scala 131:16]
    allocatedPRFCount <= fifo.allocatedPRFCount @[rob.scala 134:21]
    robAddrRelease <= results.robAddrRelease @[rob.scala 137:18]
    node _T_1 = eq(commit.fired, UInt<1>("h0")) @[rob.scala 142:24]
    node _T_2 = and(commit.ready, _T_1) @[rob.scala 142:21]
    when _T_2 : @[rob.scala 142:39]
      allocate.ready <= UInt<1>("h0") @[rob.scala 142:56]

  module scheduler_1 :
    input clock : Clock
    input reset : Reset
    output allocate : { ready : UInt<1>, flip fired : UInt<1>, flip instruction : UInt<32>, flip branchMask : UInt<5>, flip rs1 : { ready : UInt<1>, prfAddr : UInt<6>}, flip rs2 : { ready : UInt<1>, prfAddr : UInt<6>}, flip prfDest : UInt<6>, flip robAddr : UInt<4>}
    output release : { ready : UInt<1>, flip fired : UInt<1>, instruction : UInt<32>, branchMask : UInt<5>, rs1prfAddr : UInt<6>, rs2prfAddr : UInt<6>, prfDest : UInt<6>, robAddr : UInt<4>}
    input wakeUpExt : { valid : UInt<1>, prfAddr : UInt<6>}[2]
    input branchOps : { valid : UInt<1>, branchMask : UInt<5>, passed : UInt<1>}
    input memoryReady : UInt<1>
    input multuplyAndDivideReady : UInt<1>
    output instrRetired : { valid : UInt<1>, prfAddr : UInt<6>}

    wire _queue_WIRE : { opcodeMeta : { isBranch : UInt<1>, isMemAccess : UInt<1>, isM : UInt<1>}, valid : UInt<1>, instruction : UInt<32>, branchMask : UInt<5>, rs1 : { ready : UInt<1>, prfAddr : UInt<6>}, rs2 : { ready : UInt<1>, prfAddr : UInt<6>}, prfDest : UInt<6>, robAddr : UInt<4>}[8] @[scheduler.scala 26:30]
    _queue_WIRE[0].robAddr is invalid @[scheduler.scala 26:30]
    _queue_WIRE[0].prfDest is invalid @[scheduler.scala 26:30]
    _queue_WIRE[0].rs2.prfAddr is invalid @[scheduler.scala 26:30]
    _queue_WIRE[0].rs2.ready is invalid @[scheduler.scala 26:30]
    _queue_WIRE[0].rs1.prfAddr is invalid @[scheduler.scala 26:30]
    _queue_WIRE[0].rs1.ready is invalid @[scheduler.scala 26:30]
    _queue_WIRE[0].branchMask is invalid @[scheduler.scala 26:30]
    _queue_WIRE[0].instruction is invalid @[scheduler.scala 26:30]
    _queue_WIRE[0].valid <= UInt<1>("h0") @[scheduler.scala 26:30]
    _queue_WIRE[0].opcodeMeta.isM is invalid @[scheduler.scala 26:30]
    _queue_WIRE[0].opcodeMeta.isMemAccess is invalid @[scheduler.scala 26:30]
    _queue_WIRE[0].opcodeMeta.isBranch is invalid @[scheduler.scala 26:30]
    _queue_WIRE[1].robAddr is invalid @[scheduler.scala 26:30]
    _queue_WIRE[1].prfDest is invalid @[scheduler.scala 26:30]
    _queue_WIRE[1].rs2.prfAddr is invalid @[scheduler.scala 26:30]
    _queue_WIRE[1].rs2.ready is invalid @[scheduler.scala 26:30]
    _queue_WIRE[1].rs1.prfAddr is invalid @[scheduler.scala 26:30]
    _queue_WIRE[1].rs1.ready is invalid @[scheduler.scala 26:30]
    _queue_WIRE[1].branchMask is invalid @[scheduler.scala 26:30]
    _queue_WIRE[1].instruction is invalid @[scheduler.scala 26:30]
    _queue_WIRE[1].valid <= UInt<1>("h0") @[scheduler.scala 26:30]
    _queue_WIRE[1].opcodeMeta.isM is invalid @[scheduler.scala 26:30]
    _queue_WIRE[1].opcodeMeta.isMemAccess is invalid @[scheduler.scala 26:30]
    _queue_WIRE[1].opcodeMeta.isBranch is invalid @[scheduler.scala 26:30]
    _queue_WIRE[2].robAddr is invalid @[scheduler.scala 26:30]
    _queue_WIRE[2].prfDest is invalid @[scheduler.scala 26:30]
    _queue_WIRE[2].rs2.prfAddr is invalid @[scheduler.scala 26:30]
    _queue_WIRE[2].rs2.ready is invalid @[scheduler.scala 26:30]
    _queue_WIRE[2].rs1.prfAddr is invalid @[scheduler.scala 26:30]
    _queue_WIRE[2].rs1.ready is invalid @[scheduler.scala 26:30]
    _queue_WIRE[2].branchMask is invalid @[scheduler.scala 26:30]
    _queue_WIRE[2].instruction is invalid @[scheduler.scala 26:30]
    _queue_WIRE[2].valid <= UInt<1>("h0") @[scheduler.scala 26:30]
    _queue_WIRE[2].opcodeMeta.isM is invalid @[scheduler.scala 26:30]
    _queue_WIRE[2].opcodeMeta.isMemAccess is invalid @[scheduler.scala 26:30]
    _queue_WIRE[2].opcodeMeta.isBranch is invalid @[scheduler.scala 26:30]
    _queue_WIRE[3].robAddr is invalid @[scheduler.scala 26:30]
    _queue_WIRE[3].prfDest is invalid @[scheduler.scala 26:30]
    _queue_WIRE[3].rs2.prfAddr is invalid @[scheduler.scala 26:30]
    _queue_WIRE[3].rs2.ready is invalid @[scheduler.scala 26:30]
    _queue_WIRE[3].rs1.prfAddr is invalid @[scheduler.scala 26:30]
    _queue_WIRE[3].rs1.ready is invalid @[scheduler.scala 26:30]
    _queue_WIRE[3].branchMask is invalid @[scheduler.scala 26:30]
    _queue_WIRE[3].instruction is invalid @[scheduler.scala 26:30]
    _queue_WIRE[3].valid <= UInt<1>("h0") @[scheduler.scala 26:30]
    _queue_WIRE[3].opcodeMeta.isM is invalid @[scheduler.scala 26:30]
    _queue_WIRE[3].opcodeMeta.isMemAccess is invalid @[scheduler.scala 26:30]
    _queue_WIRE[3].opcodeMeta.isBranch is invalid @[scheduler.scala 26:30]
    _queue_WIRE[4].robAddr is invalid @[scheduler.scala 26:30]
    _queue_WIRE[4].prfDest is invalid @[scheduler.scala 26:30]
    _queue_WIRE[4].rs2.prfAddr is invalid @[scheduler.scala 26:30]
    _queue_WIRE[4].rs2.ready is invalid @[scheduler.scala 26:30]
    _queue_WIRE[4].rs1.prfAddr is invalid @[scheduler.scala 26:30]
    _queue_WIRE[4].rs1.ready is invalid @[scheduler.scala 26:30]
    _queue_WIRE[4].branchMask is invalid @[scheduler.scala 26:30]
    _queue_WIRE[4].instruction is invalid @[scheduler.scala 26:30]
    _queue_WIRE[4].valid <= UInt<1>("h0") @[scheduler.scala 26:30]
    _queue_WIRE[4].opcodeMeta.isM is invalid @[scheduler.scala 26:30]
    _queue_WIRE[4].opcodeMeta.isMemAccess is invalid @[scheduler.scala 26:30]
    _queue_WIRE[4].opcodeMeta.isBranch is invalid @[scheduler.scala 26:30]
    _queue_WIRE[5].robAddr is invalid @[scheduler.scala 26:30]
    _queue_WIRE[5].prfDest is invalid @[scheduler.scala 26:30]
    _queue_WIRE[5].rs2.prfAddr is invalid @[scheduler.scala 26:30]
    _queue_WIRE[5].rs2.ready is invalid @[scheduler.scala 26:30]
    _queue_WIRE[5].rs1.prfAddr is invalid @[scheduler.scala 26:30]
    _queue_WIRE[5].rs1.ready is invalid @[scheduler.scala 26:30]
    _queue_WIRE[5].branchMask is invalid @[scheduler.scala 26:30]
    _queue_WIRE[5].instruction is invalid @[scheduler.scala 26:30]
    _queue_WIRE[5].valid <= UInt<1>("h0") @[scheduler.scala 26:30]
    _queue_WIRE[5].opcodeMeta.isM is invalid @[scheduler.scala 26:30]
    _queue_WIRE[5].opcodeMeta.isMemAccess is invalid @[scheduler.scala 26:30]
    _queue_WIRE[5].opcodeMeta.isBranch is invalid @[scheduler.scala 26:30]
    _queue_WIRE[6].robAddr is invalid @[scheduler.scala 26:30]
    _queue_WIRE[6].prfDest is invalid @[scheduler.scala 26:30]
    _queue_WIRE[6].rs2.prfAddr is invalid @[scheduler.scala 26:30]
    _queue_WIRE[6].rs2.ready is invalid @[scheduler.scala 26:30]
    _queue_WIRE[6].rs1.prfAddr is invalid @[scheduler.scala 26:30]
    _queue_WIRE[6].rs1.ready is invalid @[scheduler.scala 26:30]
    _queue_WIRE[6].branchMask is invalid @[scheduler.scala 26:30]
    _queue_WIRE[6].instruction is invalid @[scheduler.scala 26:30]
    _queue_WIRE[6].valid <= UInt<1>("h0") @[scheduler.scala 26:30]
    _queue_WIRE[6].opcodeMeta.isM is invalid @[scheduler.scala 26:30]
    _queue_WIRE[6].opcodeMeta.isMemAccess is invalid @[scheduler.scala 26:30]
    _queue_WIRE[6].opcodeMeta.isBranch is invalid @[scheduler.scala 26:30]
    _queue_WIRE[7].robAddr is invalid @[scheduler.scala 26:30]
    _queue_WIRE[7].prfDest is invalid @[scheduler.scala 26:30]
    _queue_WIRE[7].rs2.prfAddr is invalid @[scheduler.scala 26:30]
    _queue_WIRE[7].rs2.ready is invalid @[scheduler.scala 26:30]
    _queue_WIRE[7].rs1.prfAddr is invalid @[scheduler.scala 26:30]
    _queue_WIRE[7].rs1.ready is invalid @[scheduler.scala 26:30]
    _queue_WIRE[7].branchMask is invalid @[scheduler.scala 26:30]
    _queue_WIRE[7].instruction is invalid @[scheduler.scala 26:30]
    _queue_WIRE[7].valid <= UInt<1>("h0") @[scheduler.scala 26:30]
    _queue_WIRE[7].opcodeMeta.isM is invalid @[scheduler.scala 26:30]
    _queue_WIRE[7].opcodeMeta.isMemAccess is invalid @[scheduler.scala 26:30]
    _queue_WIRE[7].opcodeMeta.isBranch is invalid @[scheduler.scala 26:30]
    reg queue : { opcodeMeta : { isBranch : UInt<1>, isMemAccess : UInt<1>, isM : UInt<1>}, valid : UInt<1>, instruction : UInt<32>, branchMask : UInt<5>, rs1 : { ready : UInt<1>, prfAddr : UInt<6>}, rs2 : { ready : UInt<1>, prfAddr : UInt<6>}, prfDest : UInt<6>, robAddr : UInt<4>}[8], clock with :
      reset => (reset, _queue_WIRE) @[scheduler.scala 26:22]
    node _readyVector_T = and(queue[0].valid, queue[0].rs1.ready) @[scheduler.scala 51:20]
    node _readyVector_T_1 = and(_readyVector_T, queue[0].rs2.ready) @[scheduler.scala 51:42]
    node _readyVector_T_2 = eq(queue[0].opcodeMeta.isBranch, UInt<1>("h0")) @[scheduler.scala 52:6]
    node _readyVector_T_3 = or(_readyVector_T_2, UInt<1>("h1")) @[scheduler.scala 52:36]
    node _readyVector_T_4 = and(_readyVector_T_1, _readyVector_T_3) @[scheduler.scala 51:64]
    node _readyVector_T_5 = eq(queue[0].opcodeMeta.isMemAccess, UInt<1>("h0")) @[scheduler.scala 53:6]
    node _readyVector_T_6 = and(UInt<1>("h1"), memoryReady) @[scheduler.scala 53:157]
    node _readyVector_T_7 = or(_readyVector_T_5, _readyVector_T_6) @[scheduler.scala 53:39]
    node _readyVector_T_8 = and(_readyVector_T_4, _readyVector_T_7) @[scheduler.scala 52:151]
    node _readyVector_T_9 = eq(queue[0].opcodeMeta.isM, UInt<1>("h0")) @[scheduler.scala 54:6]
    node _readyVector_T_10 = or(_readyVector_T_9, multuplyAndDivideReady) @[scheduler.scala 54:31]
    node _readyVector_T_11 = and(_readyVector_T_8, _readyVector_T_10) @[scheduler.scala 53:174]
    node _readyVector_T_12 = and(queue[1].valid, queue[1].rs1.ready) @[scheduler.scala 51:20]
    node _readyVector_T_13 = and(_readyVector_T_12, queue[1].rs2.ready) @[scheduler.scala 51:42]
    node _readyVector_T_14 = eq(queue[1].opcodeMeta.isBranch, UInt<1>("h0")) @[scheduler.scala 52:6]
    node _readyVector_T_15 = and(queue[0].valid, queue[0].opcodeMeta.isBranch) @[scheduler.scala 52:101]
    node _readyVector_T_16 = eq(_readyVector_T_15, UInt<1>("h0")) @[scheduler.scala 52:64]
    node _readyVector_T_17 = or(_readyVector_T_14, _readyVector_T_16) @[scheduler.scala 52:36]
    node _readyVector_T_18 = and(_readyVector_T_13, _readyVector_T_17) @[scheduler.scala 51:64]
    node _readyVector_T_19 = eq(queue[1].opcodeMeta.isMemAccess, UInt<1>("h0")) @[scheduler.scala 53:6]
    node _readyVector_T_20 = and(queue[0].valid, queue[0].opcodeMeta.isMemAccess) @[scheduler.scala 53:105]
    node _readyVector_T_21 = eq(_readyVector_T_20, UInt<1>("h0")) @[scheduler.scala 53:68]
    node _readyVector_T_22 = and(_readyVector_T_21, memoryReady) @[scheduler.scala 53:157]
    node _readyVector_T_23 = or(_readyVector_T_19, _readyVector_T_22) @[scheduler.scala 53:39]
    node _readyVector_T_24 = and(_readyVector_T_18, _readyVector_T_23) @[scheduler.scala 52:151]
    node _readyVector_T_25 = eq(queue[1].opcodeMeta.isM, UInt<1>("h0")) @[scheduler.scala 54:6]
    node _readyVector_T_26 = or(_readyVector_T_25, multuplyAndDivideReady) @[scheduler.scala 54:31]
    node _readyVector_T_27 = and(_readyVector_T_24, _readyVector_T_26) @[scheduler.scala 53:174]
    node _readyVector_T_28 = and(queue[2].valid, queue[2].rs1.ready) @[scheduler.scala 51:20]
    node _readyVector_T_29 = and(_readyVector_T_28, queue[2].rs2.ready) @[scheduler.scala 51:42]
    node _readyVector_T_30 = eq(queue[2].opcodeMeta.isBranch, UInt<1>("h0")) @[scheduler.scala 52:6]
    node _readyVector_T_31 = and(queue[0].valid, queue[0].opcodeMeta.isBranch) @[scheduler.scala 52:101]
    node _readyVector_T_32 = and(queue[1].valid, queue[1].opcodeMeta.isBranch) @[scheduler.scala 52:101]
    node _readyVector_T_33 = or(_readyVector_T_31, _readyVector_T_32) @[scheduler.scala 52:143]
    node _readyVector_T_34 = eq(_readyVector_T_33, UInt<1>("h0")) @[scheduler.scala 52:64]
    node _readyVector_T_35 = or(_readyVector_T_30, _readyVector_T_34) @[scheduler.scala 52:36]
    node _readyVector_T_36 = and(_readyVector_T_29, _readyVector_T_35) @[scheduler.scala 51:64]
    node _readyVector_T_37 = eq(queue[2].opcodeMeta.isMemAccess, UInt<1>("h0")) @[scheduler.scala 53:6]
    node _readyVector_T_38 = and(queue[0].valid, queue[0].opcodeMeta.isMemAccess) @[scheduler.scala 53:105]
    node _readyVector_T_39 = and(queue[1].valid, queue[1].opcodeMeta.isMemAccess) @[scheduler.scala 53:105]
    node _readyVector_T_40 = or(_readyVector_T_38, _readyVector_T_39) @[scheduler.scala 53:150]
    node _readyVector_T_41 = eq(_readyVector_T_40, UInt<1>("h0")) @[scheduler.scala 53:68]
    node _readyVector_T_42 = and(_readyVector_T_41, memoryReady) @[scheduler.scala 53:157]
    node _readyVector_T_43 = or(_readyVector_T_37, _readyVector_T_42) @[scheduler.scala 53:39]
    node _readyVector_T_44 = and(_readyVector_T_36, _readyVector_T_43) @[scheduler.scala 52:151]
    node _readyVector_T_45 = eq(queue[2].opcodeMeta.isM, UInt<1>("h0")) @[scheduler.scala 54:6]
    node _readyVector_T_46 = or(_readyVector_T_45, multuplyAndDivideReady) @[scheduler.scala 54:31]
    node _readyVector_T_47 = and(_readyVector_T_44, _readyVector_T_46) @[scheduler.scala 53:174]
    node _readyVector_T_48 = and(queue[3].valid, queue[3].rs1.ready) @[scheduler.scala 51:20]
    node _readyVector_T_49 = and(_readyVector_T_48, queue[3].rs2.ready) @[scheduler.scala 51:42]
    node _readyVector_T_50 = eq(queue[3].opcodeMeta.isBranch, UInt<1>("h0")) @[scheduler.scala 52:6]
    node _readyVector_T_51 = and(queue[0].valid, queue[0].opcodeMeta.isBranch) @[scheduler.scala 52:101]
    node _readyVector_T_52 = and(queue[1].valid, queue[1].opcodeMeta.isBranch) @[scheduler.scala 52:101]
    node _readyVector_T_53 = and(queue[2].valid, queue[2].opcodeMeta.isBranch) @[scheduler.scala 52:101]
    node _readyVector_T_54 = or(_readyVector_T_51, _readyVector_T_52) @[scheduler.scala 52:143]
    node _readyVector_T_55 = or(_readyVector_T_54, _readyVector_T_53) @[scheduler.scala 52:143]
    node _readyVector_T_56 = eq(_readyVector_T_55, UInt<1>("h0")) @[scheduler.scala 52:64]
    node _readyVector_T_57 = or(_readyVector_T_50, _readyVector_T_56) @[scheduler.scala 52:36]
    node _readyVector_T_58 = and(_readyVector_T_49, _readyVector_T_57) @[scheduler.scala 51:64]
    node _readyVector_T_59 = eq(queue[3].opcodeMeta.isMemAccess, UInt<1>("h0")) @[scheduler.scala 53:6]
    node _readyVector_T_60 = and(queue[0].valid, queue[0].opcodeMeta.isMemAccess) @[scheduler.scala 53:105]
    node _readyVector_T_61 = and(queue[1].valid, queue[1].opcodeMeta.isMemAccess) @[scheduler.scala 53:105]
    node _readyVector_T_62 = and(queue[2].valid, queue[2].opcodeMeta.isMemAccess) @[scheduler.scala 53:105]
    node _readyVector_T_63 = or(_readyVector_T_60, _readyVector_T_61) @[scheduler.scala 53:150]
    node _readyVector_T_64 = or(_readyVector_T_63, _readyVector_T_62) @[scheduler.scala 53:150]
    node _readyVector_T_65 = eq(_readyVector_T_64, UInt<1>("h0")) @[scheduler.scala 53:68]
    node _readyVector_T_66 = and(_readyVector_T_65, memoryReady) @[scheduler.scala 53:157]
    node _readyVector_T_67 = or(_readyVector_T_59, _readyVector_T_66) @[scheduler.scala 53:39]
    node _readyVector_T_68 = and(_readyVector_T_58, _readyVector_T_67) @[scheduler.scala 52:151]
    node _readyVector_T_69 = eq(queue[3].opcodeMeta.isM, UInt<1>("h0")) @[scheduler.scala 54:6]
    node _readyVector_T_70 = or(_readyVector_T_69, multuplyAndDivideReady) @[scheduler.scala 54:31]
    node _readyVector_T_71 = and(_readyVector_T_68, _readyVector_T_70) @[scheduler.scala 53:174]
    node _readyVector_T_72 = and(queue[4].valid, queue[4].rs1.ready) @[scheduler.scala 51:20]
    node _readyVector_T_73 = and(_readyVector_T_72, queue[4].rs2.ready) @[scheduler.scala 51:42]
    node _readyVector_T_74 = eq(queue[4].opcodeMeta.isBranch, UInt<1>("h0")) @[scheduler.scala 52:6]
    node _readyVector_T_75 = and(queue[0].valid, queue[0].opcodeMeta.isBranch) @[scheduler.scala 52:101]
    node _readyVector_T_76 = and(queue[1].valid, queue[1].opcodeMeta.isBranch) @[scheduler.scala 52:101]
    node _readyVector_T_77 = and(queue[2].valid, queue[2].opcodeMeta.isBranch) @[scheduler.scala 52:101]
    node _readyVector_T_78 = and(queue[3].valid, queue[3].opcodeMeta.isBranch) @[scheduler.scala 52:101]
    node _readyVector_T_79 = or(_readyVector_T_75, _readyVector_T_76) @[scheduler.scala 52:143]
    node _readyVector_T_80 = or(_readyVector_T_79, _readyVector_T_77) @[scheduler.scala 52:143]
    node _readyVector_T_81 = or(_readyVector_T_80, _readyVector_T_78) @[scheduler.scala 52:143]
    node _readyVector_T_82 = eq(_readyVector_T_81, UInt<1>("h0")) @[scheduler.scala 52:64]
    node _readyVector_T_83 = or(_readyVector_T_74, _readyVector_T_82) @[scheduler.scala 52:36]
    node _readyVector_T_84 = and(_readyVector_T_73, _readyVector_T_83) @[scheduler.scala 51:64]
    node _readyVector_T_85 = eq(queue[4].opcodeMeta.isMemAccess, UInt<1>("h0")) @[scheduler.scala 53:6]
    node _readyVector_T_86 = and(queue[0].valid, queue[0].opcodeMeta.isMemAccess) @[scheduler.scala 53:105]
    node _readyVector_T_87 = and(queue[1].valid, queue[1].opcodeMeta.isMemAccess) @[scheduler.scala 53:105]
    node _readyVector_T_88 = and(queue[2].valid, queue[2].opcodeMeta.isMemAccess) @[scheduler.scala 53:105]
    node _readyVector_T_89 = and(queue[3].valid, queue[3].opcodeMeta.isMemAccess) @[scheduler.scala 53:105]
    node _readyVector_T_90 = or(_readyVector_T_86, _readyVector_T_87) @[scheduler.scala 53:150]
    node _readyVector_T_91 = or(_readyVector_T_90, _readyVector_T_88) @[scheduler.scala 53:150]
    node _readyVector_T_92 = or(_readyVector_T_91, _readyVector_T_89) @[scheduler.scala 53:150]
    node _readyVector_T_93 = eq(_readyVector_T_92, UInt<1>("h0")) @[scheduler.scala 53:68]
    node _readyVector_T_94 = and(_readyVector_T_93, memoryReady) @[scheduler.scala 53:157]
    node _readyVector_T_95 = or(_readyVector_T_85, _readyVector_T_94) @[scheduler.scala 53:39]
    node _readyVector_T_96 = and(_readyVector_T_84, _readyVector_T_95) @[scheduler.scala 52:151]
    node _readyVector_T_97 = eq(queue[4].opcodeMeta.isM, UInt<1>("h0")) @[scheduler.scala 54:6]
    node _readyVector_T_98 = or(_readyVector_T_97, multuplyAndDivideReady) @[scheduler.scala 54:31]
    node _readyVector_T_99 = and(_readyVector_T_96, _readyVector_T_98) @[scheduler.scala 53:174]
    node _readyVector_T_100 = and(queue[5].valid, queue[5].rs1.ready) @[scheduler.scala 51:20]
    node _readyVector_T_101 = and(_readyVector_T_100, queue[5].rs2.ready) @[scheduler.scala 51:42]
    node _readyVector_T_102 = eq(queue[5].opcodeMeta.isBranch, UInt<1>("h0")) @[scheduler.scala 52:6]
    node _readyVector_T_103 = and(queue[0].valid, queue[0].opcodeMeta.isBranch) @[scheduler.scala 52:101]
    node _readyVector_T_104 = and(queue[1].valid, queue[1].opcodeMeta.isBranch) @[scheduler.scala 52:101]
    node _readyVector_T_105 = and(queue[2].valid, queue[2].opcodeMeta.isBranch) @[scheduler.scala 52:101]
    node _readyVector_T_106 = and(queue[3].valid, queue[3].opcodeMeta.isBranch) @[scheduler.scala 52:101]
    node _readyVector_T_107 = and(queue[4].valid, queue[4].opcodeMeta.isBranch) @[scheduler.scala 52:101]
    node _readyVector_T_108 = or(_readyVector_T_103, _readyVector_T_104) @[scheduler.scala 52:143]
    node _readyVector_T_109 = or(_readyVector_T_108, _readyVector_T_105) @[scheduler.scala 52:143]
    node _readyVector_T_110 = or(_readyVector_T_109, _readyVector_T_106) @[scheduler.scala 52:143]
    node _readyVector_T_111 = or(_readyVector_T_110, _readyVector_T_107) @[scheduler.scala 52:143]
    node _readyVector_T_112 = eq(_readyVector_T_111, UInt<1>("h0")) @[scheduler.scala 52:64]
    node _readyVector_T_113 = or(_readyVector_T_102, _readyVector_T_112) @[scheduler.scala 52:36]
    node _readyVector_T_114 = and(_readyVector_T_101, _readyVector_T_113) @[scheduler.scala 51:64]
    node _readyVector_T_115 = eq(queue[5].opcodeMeta.isMemAccess, UInt<1>("h0")) @[scheduler.scala 53:6]
    node _readyVector_T_116 = and(queue[0].valid, queue[0].opcodeMeta.isMemAccess) @[scheduler.scala 53:105]
    node _readyVector_T_117 = and(queue[1].valid, queue[1].opcodeMeta.isMemAccess) @[scheduler.scala 53:105]
    node _readyVector_T_118 = and(queue[2].valid, queue[2].opcodeMeta.isMemAccess) @[scheduler.scala 53:105]
    node _readyVector_T_119 = and(queue[3].valid, queue[3].opcodeMeta.isMemAccess) @[scheduler.scala 53:105]
    node _readyVector_T_120 = and(queue[4].valid, queue[4].opcodeMeta.isMemAccess) @[scheduler.scala 53:105]
    node _readyVector_T_121 = or(_readyVector_T_116, _readyVector_T_117) @[scheduler.scala 53:150]
    node _readyVector_T_122 = or(_readyVector_T_121, _readyVector_T_118) @[scheduler.scala 53:150]
    node _readyVector_T_123 = or(_readyVector_T_122, _readyVector_T_119) @[scheduler.scala 53:150]
    node _readyVector_T_124 = or(_readyVector_T_123, _readyVector_T_120) @[scheduler.scala 53:150]
    node _readyVector_T_125 = eq(_readyVector_T_124, UInt<1>("h0")) @[scheduler.scala 53:68]
    node _readyVector_T_126 = and(_readyVector_T_125, memoryReady) @[scheduler.scala 53:157]
    node _readyVector_T_127 = or(_readyVector_T_115, _readyVector_T_126) @[scheduler.scala 53:39]
    node _readyVector_T_128 = and(_readyVector_T_114, _readyVector_T_127) @[scheduler.scala 52:151]
    node _readyVector_T_129 = eq(queue[5].opcodeMeta.isM, UInt<1>("h0")) @[scheduler.scala 54:6]
    node _readyVector_T_130 = or(_readyVector_T_129, multuplyAndDivideReady) @[scheduler.scala 54:31]
    node _readyVector_T_131 = and(_readyVector_T_128, _readyVector_T_130) @[scheduler.scala 53:174]
    node _readyVector_T_132 = and(queue[6].valid, queue[6].rs1.ready) @[scheduler.scala 51:20]
    node _readyVector_T_133 = and(_readyVector_T_132, queue[6].rs2.ready) @[scheduler.scala 51:42]
    node _readyVector_T_134 = eq(queue[6].opcodeMeta.isBranch, UInt<1>("h0")) @[scheduler.scala 52:6]
    node _readyVector_T_135 = and(queue[0].valid, queue[0].opcodeMeta.isBranch) @[scheduler.scala 52:101]
    node _readyVector_T_136 = and(queue[1].valid, queue[1].opcodeMeta.isBranch) @[scheduler.scala 52:101]
    node _readyVector_T_137 = and(queue[2].valid, queue[2].opcodeMeta.isBranch) @[scheduler.scala 52:101]
    node _readyVector_T_138 = and(queue[3].valid, queue[3].opcodeMeta.isBranch) @[scheduler.scala 52:101]
    node _readyVector_T_139 = and(queue[4].valid, queue[4].opcodeMeta.isBranch) @[scheduler.scala 52:101]
    node _readyVector_T_140 = and(queue[5].valid, queue[5].opcodeMeta.isBranch) @[scheduler.scala 52:101]
    node _readyVector_T_141 = or(_readyVector_T_135, _readyVector_T_136) @[scheduler.scala 52:143]
    node _readyVector_T_142 = or(_readyVector_T_141, _readyVector_T_137) @[scheduler.scala 52:143]
    node _readyVector_T_143 = or(_readyVector_T_142, _readyVector_T_138) @[scheduler.scala 52:143]
    node _readyVector_T_144 = or(_readyVector_T_143, _readyVector_T_139) @[scheduler.scala 52:143]
    node _readyVector_T_145 = or(_readyVector_T_144, _readyVector_T_140) @[scheduler.scala 52:143]
    node _readyVector_T_146 = eq(_readyVector_T_145, UInt<1>("h0")) @[scheduler.scala 52:64]
    node _readyVector_T_147 = or(_readyVector_T_134, _readyVector_T_146) @[scheduler.scala 52:36]
    node _readyVector_T_148 = and(_readyVector_T_133, _readyVector_T_147) @[scheduler.scala 51:64]
    node _readyVector_T_149 = eq(queue[6].opcodeMeta.isMemAccess, UInt<1>("h0")) @[scheduler.scala 53:6]
    node _readyVector_T_150 = and(queue[0].valid, queue[0].opcodeMeta.isMemAccess) @[scheduler.scala 53:105]
    node _readyVector_T_151 = and(queue[1].valid, queue[1].opcodeMeta.isMemAccess) @[scheduler.scala 53:105]
    node _readyVector_T_152 = and(queue[2].valid, queue[2].opcodeMeta.isMemAccess) @[scheduler.scala 53:105]
    node _readyVector_T_153 = and(queue[3].valid, queue[3].opcodeMeta.isMemAccess) @[scheduler.scala 53:105]
    node _readyVector_T_154 = and(queue[4].valid, queue[4].opcodeMeta.isMemAccess) @[scheduler.scala 53:105]
    node _readyVector_T_155 = and(queue[5].valid, queue[5].opcodeMeta.isMemAccess) @[scheduler.scala 53:105]
    node _readyVector_T_156 = or(_readyVector_T_150, _readyVector_T_151) @[scheduler.scala 53:150]
    node _readyVector_T_157 = or(_readyVector_T_156, _readyVector_T_152) @[scheduler.scala 53:150]
    node _readyVector_T_158 = or(_readyVector_T_157, _readyVector_T_153) @[scheduler.scala 53:150]
    node _readyVector_T_159 = or(_readyVector_T_158, _readyVector_T_154) @[scheduler.scala 53:150]
    node _readyVector_T_160 = or(_readyVector_T_159, _readyVector_T_155) @[scheduler.scala 53:150]
    node _readyVector_T_161 = eq(_readyVector_T_160, UInt<1>("h0")) @[scheduler.scala 53:68]
    node _readyVector_T_162 = and(_readyVector_T_161, memoryReady) @[scheduler.scala 53:157]
    node _readyVector_T_163 = or(_readyVector_T_149, _readyVector_T_162) @[scheduler.scala 53:39]
    node _readyVector_T_164 = and(_readyVector_T_148, _readyVector_T_163) @[scheduler.scala 52:151]
    node _readyVector_T_165 = eq(queue[6].opcodeMeta.isM, UInt<1>("h0")) @[scheduler.scala 54:6]
    node _readyVector_T_166 = or(_readyVector_T_165, multuplyAndDivideReady) @[scheduler.scala 54:31]
    node _readyVector_T_167 = and(_readyVector_T_164, _readyVector_T_166) @[scheduler.scala 53:174]
    node _readyVector_T_168 = and(queue[7].valid, queue[7].rs1.ready) @[scheduler.scala 51:20]
    node _readyVector_T_169 = and(_readyVector_T_168, queue[7].rs2.ready) @[scheduler.scala 51:42]
    node _readyVector_T_170 = eq(queue[7].opcodeMeta.isBranch, UInt<1>("h0")) @[scheduler.scala 52:6]
    node _readyVector_T_171 = and(queue[0].valid, queue[0].opcodeMeta.isBranch) @[scheduler.scala 52:101]
    node _readyVector_T_172 = and(queue[1].valid, queue[1].opcodeMeta.isBranch) @[scheduler.scala 52:101]
    node _readyVector_T_173 = and(queue[2].valid, queue[2].opcodeMeta.isBranch) @[scheduler.scala 52:101]
    node _readyVector_T_174 = and(queue[3].valid, queue[3].opcodeMeta.isBranch) @[scheduler.scala 52:101]
    node _readyVector_T_175 = and(queue[4].valid, queue[4].opcodeMeta.isBranch) @[scheduler.scala 52:101]
    node _readyVector_T_176 = and(queue[5].valid, queue[5].opcodeMeta.isBranch) @[scheduler.scala 52:101]
    node _readyVector_T_177 = and(queue[6].valid, queue[6].opcodeMeta.isBranch) @[scheduler.scala 52:101]
    node _readyVector_T_178 = or(_readyVector_T_171, _readyVector_T_172) @[scheduler.scala 52:143]
    node _readyVector_T_179 = or(_readyVector_T_178, _readyVector_T_173) @[scheduler.scala 52:143]
    node _readyVector_T_180 = or(_readyVector_T_179, _readyVector_T_174) @[scheduler.scala 52:143]
    node _readyVector_T_181 = or(_readyVector_T_180, _readyVector_T_175) @[scheduler.scala 52:143]
    node _readyVector_T_182 = or(_readyVector_T_181, _readyVector_T_176) @[scheduler.scala 52:143]
    node _readyVector_T_183 = or(_readyVector_T_182, _readyVector_T_177) @[scheduler.scala 52:143]
    node _readyVector_T_184 = eq(_readyVector_T_183, UInt<1>("h0")) @[scheduler.scala 52:64]
    node _readyVector_T_185 = or(_readyVector_T_170, _readyVector_T_184) @[scheduler.scala 52:36]
    node _readyVector_T_186 = and(_readyVector_T_169, _readyVector_T_185) @[scheduler.scala 51:64]
    node _readyVector_T_187 = eq(queue[7].opcodeMeta.isMemAccess, UInt<1>("h0")) @[scheduler.scala 53:6]
    node _readyVector_T_188 = and(queue[0].valid, queue[0].opcodeMeta.isMemAccess) @[scheduler.scala 53:105]
    node _readyVector_T_189 = and(queue[1].valid, queue[1].opcodeMeta.isMemAccess) @[scheduler.scala 53:105]
    node _readyVector_T_190 = and(queue[2].valid, queue[2].opcodeMeta.isMemAccess) @[scheduler.scala 53:105]
    node _readyVector_T_191 = and(queue[3].valid, queue[3].opcodeMeta.isMemAccess) @[scheduler.scala 53:105]
    node _readyVector_T_192 = and(queue[4].valid, queue[4].opcodeMeta.isMemAccess) @[scheduler.scala 53:105]
    node _readyVector_T_193 = and(queue[5].valid, queue[5].opcodeMeta.isMemAccess) @[scheduler.scala 53:105]
    node _readyVector_T_194 = and(queue[6].valid, queue[6].opcodeMeta.isMemAccess) @[scheduler.scala 53:105]
    node _readyVector_T_195 = or(_readyVector_T_188, _readyVector_T_189) @[scheduler.scala 53:150]
    node _readyVector_T_196 = or(_readyVector_T_195, _readyVector_T_190) @[scheduler.scala 53:150]
    node _readyVector_T_197 = or(_readyVector_T_196, _readyVector_T_191) @[scheduler.scala 53:150]
    node _readyVector_T_198 = or(_readyVector_T_197, _readyVector_T_192) @[scheduler.scala 53:150]
    node _readyVector_T_199 = or(_readyVector_T_198, _readyVector_T_193) @[scheduler.scala 53:150]
    node _readyVector_T_200 = or(_readyVector_T_199, _readyVector_T_194) @[scheduler.scala 53:150]
    node _readyVector_T_201 = eq(_readyVector_T_200, UInt<1>("h0")) @[scheduler.scala 53:68]
    node _readyVector_T_202 = and(_readyVector_T_201, memoryReady) @[scheduler.scala 53:157]
    node _readyVector_T_203 = or(_readyVector_T_187, _readyVector_T_202) @[scheduler.scala 53:39]
    node _readyVector_T_204 = and(_readyVector_T_186, _readyVector_T_203) @[scheduler.scala 52:151]
    node _readyVector_T_205 = eq(queue[7].opcodeMeta.isM, UInt<1>("h0")) @[scheduler.scala 54:6]
    node _readyVector_T_206 = or(_readyVector_T_205, multuplyAndDivideReady) @[scheduler.scala 54:31]
    node _readyVector_T_207 = and(_readyVector_T_204, _readyVector_T_206) @[scheduler.scala 53:174]
    node readyVector_lo_lo = cat(_readyVector_T_27, _readyVector_T_11) @[Cat.scala 33:92]
    node readyVector_lo_hi = cat(_readyVector_T_71, _readyVector_T_47) @[Cat.scala 33:92]
    node readyVector_lo = cat(readyVector_lo_hi, readyVector_lo_lo) @[Cat.scala 33:92]
    node readyVector_hi_lo = cat(_readyVector_T_131, _readyVector_T_99) @[Cat.scala 33:92]
    node readyVector_hi_hi = cat(_readyVector_T_207, _readyVector_T_167) @[Cat.scala 33:92]
    node readyVector_hi = cat(readyVector_hi_hi, readyVector_hi_lo) @[Cat.scala 33:92]
    node readyVector = cat(readyVector_hi, readyVector_lo) @[Cat.scala 33:92]
    node _dequeuedIndex_T = bits(readyVector, 0, 0) @[scheduler.scala 57:83]
    node _dequeuedIndex_T_1 = bits(_dequeuedIndex_T, 0, 0) @[scheduler.scala 57:87]
    node _dequeuedIndex_T_2 = bits(readyVector, 1, 1) @[scheduler.scala 57:83]
    node _dequeuedIndex_T_3 = bits(_dequeuedIndex_T_2, 0, 0) @[scheduler.scala 57:87]
    node _dequeuedIndex_T_4 = bits(readyVector, 2, 2) @[scheduler.scala 57:83]
    node _dequeuedIndex_T_5 = bits(_dequeuedIndex_T_4, 0, 0) @[scheduler.scala 57:87]
    node _dequeuedIndex_T_6 = bits(readyVector, 3, 3) @[scheduler.scala 57:83]
    node _dequeuedIndex_T_7 = bits(_dequeuedIndex_T_6, 0, 0) @[scheduler.scala 57:87]
    node _dequeuedIndex_T_8 = bits(readyVector, 4, 4) @[scheduler.scala 57:83]
    node _dequeuedIndex_T_9 = bits(_dequeuedIndex_T_8, 0, 0) @[scheduler.scala 57:87]
    node _dequeuedIndex_T_10 = bits(readyVector, 5, 5) @[scheduler.scala 57:83]
    node _dequeuedIndex_T_11 = bits(_dequeuedIndex_T_10, 0, 0) @[scheduler.scala 57:87]
    node _dequeuedIndex_T_12 = bits(readyVector, 6, 6) @[scheduler.scala 57:83]
    node _dequeuedIndex_T_13 = bits(_dequeuedIndex_T_12, 0, 0) @[scheduler.scala 57:87]
    node _dequeuedIndex_T_14 = bits(readyVector, 7, 7) @[scheduler.scala 57:83]
    node _dequeuedIndex_T_15 = bits(_dequeuedIndex_T_14, 0, 0) @[scheduler.scala 57:87]
    node _dequeuedIndex_T_16 = mux(_dequeuedIndex_T_15, UInt<3>("h7"), UInt<1>("h0")) @[Mux.scala 101:16]
    node _dequeuedIndex_T_17 = mux(_dequeuedIndex_T_13, UInt<3>("h6"), _dequeuedIndex_T_16) @[Mux.scala 101:16]
    node _dequeuedIndex_T_18 = mux(_dequeuedIndex_T_11, UInt<3>("h5"), _dequeuedIndex_T_17) @[Mux.scala 101:16]
    node _dequeuedIndex_T_19 = mux(_dequeuedIndex_T_9, UInt<3>("h4"), _dequeuedIndex_T_18) @[Mux.scala 101:16]
    node _dequeuedIndex_T_20 = mux(_dequeuedIndex_T_7, UInt<2>("h3"), _dequeuedIndex_T_19) @[Mux.scala 101:16]
    node _dequeuedIndex_T_21 = mux(_dequeuedIndex_T_5, UInt<2>("h2"), _dequeuedIndex_T_20) @[Mux.scala 101:16]
    node _dequeuedIndex_T_22 = mux(_dequeuedIndex_T_3, UInt<1>("h1"), _dequeuedIndex_T_21) @[Mux.scala 101:16]
    node dequeuedIndex = mux(_dequeuedIndex_T_1, UInt<1>("h0"), _dequeuedIndex_T_22) @[Mux.scala 101:16]
    node _dequeued_T = bits(readyVector, 0, 0) @[scheduler.scala 58:101]
    node _dequeued_T_1 = bits(_dequeued_T, 0, 0) @[scheduler.scala 58:105]
    node _dequeued_T_2 = bits(readyVector, 1, 1) @[scheduler.scala 58:101]
    node _dequeued_T_3 = bits(_dequeued_T_2, 0, 0) @[scheduler.scala 58:105]
    node _dequeued_T_4 = bits(readyVector, 2, 2) @[scheduler.scala 58:101]
    node _dequeued_T_5 = bits(_dequeued_T_4, 0, 0) @[scheduler.scala 58:105]
    node _dequeued_T_6 = bits(readyVector, 3, 3) @[scheduler.scala 58:101]
    node _dequeued_T_7 = bits(_dequeued_T_6, 0, 0) @[scheduler.scala 58:105]
    node _dequeued_T_8 = bits(readyVector, 4, 4) @[scheduler.scala 58:101]
    node _dequeued_T_9 = bits(_dequeued_T_8, 0, 0) @[scheduler.scala 58:105]
    node _dequeued_T_10 = bits(readyVector, 5, 5) @[scheduler.scala 58:101]
    node _dequeued_T_11 = bits(_dequeued_T_10, 0, 0) @[scheduler.scala 58:105]
    node _dequeued_T_12 = bits(readyVector, 6, 6) @[scheduler.scala 58:101]
    node _dequeued_T_13 = bits(_dequeued_T_12, 0, 0) @[scheduler.scala 58:105]
    node _dequeued_T_14 = mux(_dequeued_T_13, queue[6], queue[7]) @[Mux.scala 101:16]
    node _dequeued_T_15 = mux(_dequeued_T_11, queue[5], _dequeued_T_14) @[Mux.scala 101:16]
    node _dequeued_T_16 = mux(_dequeued_T_9, queue[4], _dequeued_T_15) @[Mux.scala 101:16]
    node _dequeued_T_17 = mux(_dequeued_T_7, queue[3], _dequeued_T_16) @[Mux.scala 101:16]
    node _dequeued_T_18 = mux(_dequeued_T_5, queue[2], _dequeued_T_17) @[Mux.scala 101:16]
    node _dequeued_T_19 = mux(_dequeued_T_3, queue[1], _dequeued_T_18) @[Mux.scala 101:16]
    node dequeued = mux(_dequeued_T_1, queue[0], _dequeued_T_19) @[Mux.scala 101:16]
    wire _releasedBuffer_WIRE : { valid : UInt<1>, instruction : UInt<32>, branchMask : UInt<5>, rs1prfAddr : UInt<6>, rs2prfAddr : UInt<6>, prfDest : UInt<6>, robAddr : UInt<4>}
    _releasedBuffer_WIRE.robAddr is invalid
    _releasedBuffer_WIRE.prfDest is invalid
    _releasedBuffer_WIRE.rs2prfAddr is invalid
    _releasedBuffer_WIRE.rs1prfAddr is invalid
    _releasedBuffer_WIRE.branchMask is invalid
    _releasedBuffer_WIRE.instruction is invalid
    _releasedBuffer_WIRE.valid <= UInt<1>("h0")
    reg releasedBuffer : { valid : UInt<1>, instruction : UInt<32>, branchMask : UInt<5>, rs1prfAddr : UInt<6>, rs2prfAddr : UInt<6>, prfDest : UInt<6>, robAddr : UInt<4>}, clock with :
      reset => (reset, _releasedBuffer_WIRE) @[scheduler.scala 59:31]
    node _dequeue_T = eq(releasedBuffer.valid, UInt<1>("h0")) @[scheduler.scala 70:17]
    node dequeue = or(_dequeue_T, release.fired) @[scheduler.scala 70:39]
    wire tempQueue_0 : { opcodeMeta : { isBranch : UInt<1>, isMemAccess : UInt<1>, isM : UInt<1>}, valid : UInt<1>, instruction : UInt<32>, branchMask : UInt<5>, rs1 : { ready : UInt<1>, prfAddr : UInt<6>}, rs2 : { ready : UInt<1>, prfAddr : UInt<6>}, prfDest : UInt<6>, robAddr : UInt<4>} @[scheduler.scala 72:51]
    wire tempQueue_1 : { opcodeMeta : { isBranch : UInt<1>, isMemAccess : UInt<1>, isM : UInt<1>}, valid : UInt<1>, instruction : UInt<32>, branchMask : UInt<5>, rs1 : { ready : UInt<1>, prfAddr : UInt<6>}, rs2 : { ready : UInt<1>, prfAddr : UInt<6>}, prfDest : UInt<6>, robAddr : UInt<4>} @[scheduler.scala 72:51]
    wire tempQueue_2 : { opcodeMeta : { isBranch : UInt<1>, isMemAccess : UInt<1>, isM : UInt<1>}, valid : UInt<1>, instruction : UInt<32>, branchMask : UInt<5>, rs1 : { ready : UInt<1>, prfAddr : UInt<6>}, rs2 : { ready : UInt<1>, prfAddr : UInt<6>}, prfDest : UInt<6>, robAddr : UInt<4>} @[scheduler.scala 72:51]
    wire tempQueue_3 : { opcodeMeta : { isBranch : UInt<1>, isMemAccess : UInt<1>, isM : UInt<1>}, valid : UInt<1>, instruction : UInt<32>, branchMask : UInt<5>, rs1 : { ready : UInt<1>, prfAddr : UInt<6>}, rs2 : { ready : UInt<1>, prfAddr : UInt<6>}, prfDest : UInt<6>, robAddr : UInt<4>} @[scheduler.scala 72:51]
    wire tempQueue_4 : { opcodeMeta : { isBranch : UInt<1>, isMemAccess : UInt<1>, isM : UInt<1>}, valid : UInt<1>, instruction : UInt<32>, branchMask : UInt<5>, rs1 : { ready : UInt<1>, prfAddr : UInt<6>}, rs2 : { ready : UInt<1>, prfAddr : UInt<6>}, prfDest : UInt<6>, robAddr : UInt<4>} @[scheduler.scala 72:51]
    wire tempQueue_5 : { opcodeMeta : { isBranch : UInt<1>, isMemAccess : UInt<1>, isM : UInt<1>}, valid : UInt<1>, instruction : UInt<32>, branchMask : UInt<5>, rs1 : { ready : UInt<1>, prfAddr : UInt<6>}, rs2 : { ready : UInt<1>, prfAddr : UInt<6>}, prfDest : UInt<6>, robAddr : UInt<4>} @[scheduler.scala 72:51]
    wire tempQueue_6 : { opcodeMeta : { isBranch : UInt<1>, isMemAccess : UInt<1>, isM : UInt<1>}, valid : UInt<1>, instruction : UInt<32>, branchMask : UInt<5>, rs1 : { ready : UInt<1>, prfAddr : UInt<6>}, rs2 : { ready : UInt<1>, prfAddr : UInt<6>}, prfDest : UInt<6>, robAddr : UInt<4>} @[scheduler.scala 72:51]
    wire tempQueue_7 : { opcodeMeta : { isBranch : UInt<1>, isMemAccess : UInt<1>, isM : UInt<1>}, valid : UInt<1>, instruction : UInt<32>, branchMask : UInt<5>, rs1 : { ready : UInt<1>, prfAddr : UInt<6>}, rs2 : { ready : UInt<1>, prfAddr : UInt<6>}, prfDest : UInt<6>, robAddr : UInt<4>} @[scheduler.scala 72:51]
    wire tempQueue_8 : { opcodeMeta : { isBranch : UInt<1>, isMemAccess : UInt<1>, isM : UInt<1>}, valid : UInt<1>, instruction : UInt<32>, branchMask : UInt<5>, rs1 : { ready : UInt<1>, prfAddr : UInt<6>}, rs2 : { ready : UInt<1>, prfAddr : UInt<6>}, prfDest : UInt<6>, robAddr : UInt<4>} @[scheduler.scala 72:51]
    tempQueue_0 <= queue[0] @[scheduler.scala 73:76]
    tempQueue_1 <= queue[1] @[scheduler.scala 73:76]
    tempQueue_2 <= queue[2] @[scheduler.scala 73:76]
    tempQueue_3 <= queue[3] @[scheduler.scala 73:76]
    tempQueue_4 <= queue[4] @[scheduler.scala 73:76]
    tempQueue_5 <= queue[5] @[scheduler.scala 73:76]
    tempQueue_6 <= queue[6] @[scheduler.scala 73:76]
    tempQueue_7 <= queue[7] @[scheduler.scala 73:76]
    tempQueue_8.valid <= allocate.fired @[scheduler.scala 74:36]
    tempQueue_8.branchMask <= allocate.branchMask @[scheduler.scala 75:41]
    wire tempQueue_8_opcodeMeta_meta : { isBranch : UInt<1>, isMemAccess : UInt<1>, isM : UInt<1>} @[scheduler.scala 77:20]
    node _tempQueue_8_opcodeMeta_meta_isM_T = bits(allocate.instruction, 6, 2) @[scheduler.scala 78:38]
    node _tempQueue_8_opcodeMeta_meta_isM_T_1 = and(_tempQueue_8_opcodeMeta_meta_isM_T, UInt<5>("h1d")) @[scheduler.scala 78:44]
    node _tempQueue_8_opcodeMeta_meta_isM_T_2 = eq(UInt<4>("hc"), _tempQueue_8_opcodeMeta_meta_isM_T_1) @[scheduler.scala 78:44]
    node _tempQueue_8_opcodeMeta_meta_isM_T_3 = bits(allocate.instruction, 25, 25) @[scheduler.scala 78:89]
    node _tempQueue_8_opcodeMeta_meta_isM_T_4 = bits(_tempQueue_8_opcodeMeta_meta_isM_T_3, 0, 0) @[scheduler.scala 78:94]
    node _tempQueue_8_opcodeMeta_meta_isM_T_5 = and(_tempQueue_8_opcodeMeta_meta_isM_T_2, _tempQueue_8_opcodeMeta_meta_isM_T_4) @[scheduler.scala 78:66]
    tempQueue_8_opcodeMeta_meta.isM <= _tempQueue_8_opcodeMeta_meta_isM_T_5 @[scheduler.scala 78:14]
    node _tempQueue_8_opcodeMeta_meta_isMemAccess_T = bits(allocate.instruction, 6, 6) @[scheduler.scala 79:46]
    node _tempQueue_8_opcodeMeta_meta_isMemAccess_T_1 = bits(_tempQueue_8_opcodeMeta_meta_isMemAccess_T, 0, 0) @[scheduler.scala 79:50]
    node _tempQueue_8_opcodeMeta_meta_isMemAccess_T_2 = eq(_tempQueue_8_opcodeMeta_meta_isMemAccess_T_1, UInt<1>("h0")) @[scheduler.scala 79:25]
    node _tempQueue_8_opcodeMeta_meta_isMemAccess_T_3 = bits(allocate.instruction, 4, 4) @[scheduler.scala 79:81]
    node _tempQueue_8_opcodeMeta_meta_isMemAccess_T_4 = bits(_tempQueue_8_opcodeMeta_meta_isMemAccess_T_3, 0, 0) @[scheduler.scala 79:85]
    node _tempQueue_8_opcodeMeta_meta_isMemAccess_T_5 = eq(_tempQueue_8_opcodeMeta_meta_isMemAccess_T_4, UInt<1>("h0")) @[scheduler.scala 79:60]
    node _tempQueue_8_opcodeMeta_meta_isMemAccess_T_6 = and(_tempQueue_8_opcodeMeta_meta_isMemAccess_T_2, _tempQueue_8_opcodeMeta_meta_isMemAccess_T_5) @[scheduler.scala 79:57]
    node _tempQueue_8_opcodeMeta_meta_isMemAccess_T_7 = bits(allocate.instruction, 6, 2) @[scheduler.scala 79:116]
    node _tempQueue_8_opcodeMeta_meta_isMemAccess_T_8 = and(_tempQueue_8_opcodeMeta_meta_isMemAccess_T_7, UInt<5>("h1f")) @[scheduler.scala 79:122]
    node _tempQueue_8_opcodeMeta_meta_isMemAccess_T_9 = eq(UInt<2>("h3"), _tempQueue_8_opcodeMeta_meta_isMemAccess_T_8) @[scheduler.scala 79:122]
    node _tempQueue_8_opcodeMeta_meta_isMemAccess_T_10 = eq(_tempQueue_8_opcodeMeta_meta_isMemAccess_T_9, UInt<1>("h0")) @[scheduler.scala 79:122]
    node _tempQueue_8_opcodeMeta_meta_isMemAccess_T_11 = and(_tempQueue_8_opcodeMeta_meta_isMemAccess_T_6, _tempQueue_8_opcodeMeta_meta_isMemAccess_T_10) @[scheduler.scala 79:92]
    tempQueue_8_opcodeMeta_meta.isMemAccess <= _tempQueue_8_opcodeMeta_meta_isMemAccess_T_11 @[scheduler.scala 79:22]
    node _tempQueue_8_opcodeMeta_meta_isBranch_T = bits(allocate.instruction, 6, 5) @[scheduler.scala 80:42]
    node _tempQueue_8_opcodeMeta_meta_isBranch_T_1 = eq(_tempQueue_8_opcodeMeta_meta_isBranch_T, UInt<2>("h3")) @[scheduler.scala 80:48]
    tempQueue_8_opcodeMeta_meta.isBranch <= _tempQueue_8_opcodeMeta_meta_isBranch_T_1 @[scheduler.scala 80:19]
    tempQueue_8.opcodeMeta <= tempQueue_8_opcodeMeta_meta @[scheduler.scala 76:41]
    tempQueue_8.prfDest <= allocate.prfDest @[scheduler.scala 83:38]
    tempQueue_8.robAddr <= allocate.robAddr @[scheduler.scala 84:38]
    tempQueue_8.rs1 <= allocate.rs1 @[scheduler.scala 85:34]
    tempQueue_8.rs2 <= allocate.rs2 @[scheduler.scala 86:34]
    tempQueue_8.instruction <= allocate.instruction @[scheduler.scala 87:42]
    node _T = and(allocate.fired, tempQueue_8.opcodeMeta.isMemAccess) @[scheduler.scala 89:23]
    when _T : @[scheduler.scala 89:77]
      tempQueue_8.rs2.ready <= UInt<1>("h1") @[scheduler.scala 89:116]
    wire updatedEntries_0 : { opcodeMeta : { isBranch : UInt<1>, isMemAccess : UInt<1>, isM : UInt<1>}, valid : UInt<1>, instruction : UInt<32>, branchMask : UInt<5>, rs1 : { ready : UInt<1>, prfAddr : UInt<6>}, rs2 : { ready : UInt<1>, prfAddr : UInt<6>}, prfDest : UInt<6>, robAddr : UInt<4>} @[scheduler.scala 91:56]
    wire updatedEntries_1 : { opcodeMeta : { isBranch : UInt<1>, isMemAccess : UInt<1>, isM : UInt<1>}, valid : UInt<1>, instruction : UInt<32>, branchMask : UInt<5>, rs1 : { ready : UInt<1>, prfAddr : UInt<6>}, rs2 : { ready : UInt<1>, prfAddr : UInt<6>}, prfDest : UInt<6>, robAddr : UInt<4>} @[scheduler.scala 91:56]
    wire updatedEntries_2 : { opcodeMeta : { isBranch : UInt<1>, isMemAccess : UInt<1>, isM : UInt<1>}, valid : UInt<1>, instruction : UInt<32>, branchMask : UInt<5>, rs1 : { ready : UInt<1>, prfAddr : UInt<6>}, rs2 : { ready : UInt<1>, prfAddr : UInt<6>}, prfDest : UInt<6>, robAddr : UInt<4>} @[scheduler.scala 91:56]
    wire updatedEntries_3 : { opcodeMeta : { isBranch : UInt<1>, isMemAccess : UInt<1>, isM : UInt<1>}, valid : UInt<1>, instruction : UInt<32>, branchMask : UInt<5>, rs1 : { ready : UInt<1>, prfAddr : UInt<6>}, rs2 : { ready : UInt<1>, prfAddr : UInt<6>}, prfDest : UInt<6>, robAddr : UInt<4>} @[scheduler.scala 91:56]
    wire updatedEntries_4 : { opcodeMeta : { isBranch : UInt<1>, isMemAccess : UInt<1>, isM : UInt<1>}, valid : UInt<1>, instruction : UInt<32>, branchMask : UInt<5>, rs1 : { ready : UInt<1>, prfAddr : UInt<6>}, rs2 : { ready : UInt<1>, prfAddr : UInt<6>}, prfDest : UInt<6>, robAddr : UInt<4>} @[scheduler.scala 91:56]
    wire updatedEntries_5 : { opcodeMeta : { isBranch : UInt<1>, isMemAccess : UInt<1>, isM : UInt<1>}, valid : UInt<1>, instruction : UInt<32>, branchMask : UInt<5>, rs1 : { ready : UInt<1>, prfAddr : UInt<6>}, rs2 : { ready : UInt<1>, prfAddr : UInt<6>}, prfDest : UInt<6>, robAddr : UInt<4>} @[scheduler.scala 91:56]
    wire updatedEntries_6 : { opcodeMeta : { isBranch : UInt<1>, isMemAccess : UInt<1>, isM : UInt<1>}, valid : UInt<1>, instruction : UInt<32>, branchMask : UInt<5>, rs1 : { ready : UInt<1>, prfAddr : UInt<6>}, rs2 : { ready : UInt<1>, prfAddr : UInt<6>}, prfDest : UInt<6>, robAddr : UInt<4>} @[scheduler.scala 91:56]
    wire updatedEntries_7 : { opcodeMeta : { isBranch : UInt<1>, isMemAccess : UInt<1>, isM : UInt<1>}, valid : UInt<1>, instruction : UInt<32>, branchMask : UInt<5>, rs1 : { ready : UInt<1>, prfAddr : UInt<6>}, rs2 : { ready : UInt<1>, prfAddr : UInt<6>}, prfDest : UInt<6>, robAddr : UInt<4>} @[scheduler.scala 91:56]
    wire updatedEntries_8 : { opcodeMeta : { isBranch : UInt<1>, isMemAccess : UInt<1>, isM : UInt<1>}, valid : UInt<1>, instruction : UInt<32>, branchMask : UInt<5>, rs1 : { ready : UInt<1>, prfAddr : UInt<6>}, rs2 : { ready : UInt<1>, prfAddr : UInt<6>}, prfDest : UInt<6>, robAddr : UInt<4>} @[scheduler.scala 91:56]
    updatedEntries_0 <= tempQueue_0 @[scheduler.scala 92:81]
    updatedEntries_1 <= tempQueue_1 @[scheduler.scala 92:81]
    updatedEntries_2 <= tempQueue_2 @[scheduler.scala 92:81]
    updatedEntries_3 <= tempQueue_3 @[scheduler.scala 92:81]
    updatedEntries_4 <= tempQueue_4 @[scheduler.scala 92:81]
    updatedEntries_5 <= tempQueue_5 @[scheduler.scala 92:81]
    updatedEntries_6 <= tempQueue_6 @[scheduler.scala 92:81]
    updatedEntries_7 <= tempQueue_7 @[scheduler.scala 92:81]
    updatedEntries_8 <= tempQueue_8 @[scheduler.scala 92:81]
    wire wakeUpInt : { valid : UInt<1>, prfAddr : UInt<6>} @[scheduler.scala 94:23]
    node _wakeUpInt_valid_T = bits(dequeued.instruction, 6, 2) @[scheduler.scala 95:43]
    node _wakeUpInt_valid_T_1 = and(_wakeUpInt_valid_T, UInt<5>("h15")) @[scheduler.scala 95:49]
    node _wakeUpInt_valid_T_2 = eq(UInt<3>("h4"), _wakeUpInt_valid_T_1) @[scheduler.scala 95:49]
    node _wakeUpInt_valid_T_3 = eq(dequeued.opcodeMeta.isM, UInt<1>("h0")) @[scheduler.scala 95:74]
    node _wakeUpInt_valid_T_4 = and(_wakeUpInt_valid_T_2, _wakeUpInt_valid_T_3) @[scheduler.scala 95:71]
    node _wakeUpInt_valid_T_5 = and(_wakeUpInt_valid_T_4, dequeue) @[scheduler.scala 95:99]
    node _wakeUpInt_valid_T_6 = orr(readyVector) @[scheduler.scala 95:125]
    node _wakeUpInt_valid_T_7 = and(_wakeUpInt_valid_T_5, _wakeUpInt_valid_T_6) @[scheduler.scala 95:110]
    node _wakeUpInt_valid_T_8 = bits(dequeued.instruction, 11, 7) @[scheduler.scala 95:152]
    node _wakeUpInt_valid_T_9 = orr(_wakeUpInt_valid_T_8) @[scheduler.scala 95:160]
    node _wakeUpInt_valid_T_10 = and(_wakeUpInt_valid_T_7, _wakeUpInt_valid_T_9) @[scheduler.scala 95:129]
    wakeUpInt.valid <= _wakeUpInt_valid_T_10 @[scheduler.scala 95:19]
    wakeUpInt.prfAddr <= dequeued.prfDest @[scheduler.scala 96:21]
    node _updatedEntries_0_rs1_ready_T = eq(wakeUpExt[0].prfAddr, tempQueue_0.rs1.prfAddr) @[scheduler.scala 98:173]
    node _updatedEntries_0_rs1_ready_T_1 = and(wakeUpExt[0].valid, _updatedEntries_0_rs1_ready_T) @[scheduler.scala 98:159]
    node _updatedEntries_0_rs1_ready_T_2 = eq(wakeUpExt[1].prfAddr, tempQueue_0.rs1.prfAddr) @[scheduler.scala 98:173]
    node _updatedEntries_0_rs1_ready_T_3 = and(wakeUpExt[1].valid, _updatedEntries_0_rs1_ready_T_2) @[scheduler.scala 98:159]
    node _updatedEntries_0_rs1_ready_T_4 = eq(wakeUpInt.prfAddr, tempQueue_0.rs1.prfAddr) @[scheduler.scala 98:173]
    node _updatedEntries_0_rs1_ready_T_5 = and(wakeUpInt.valid, _updatedEntries_0_rs1_ready_T_4) @[scheduler.scala 98:159]
    node _updatedEntries_0_rs1_ready_T_6 = or(_updatedEntries_0_rs1_ready_T_1, _updatedEntries_0_rs1_ready_T_3) @[scheduler.scala 98:209]
    node _updatedEntries_0_rs1_ready_T_7 = or(_updatedEntries_0_rs1_ready_T_6, _updatedEntries_0_rs1_ready_T_5) @[scheduler.scala 98:209]
    node _updatedEntries_0_rs1_ready_T_8 = or(tempQueue_0.rs1.ready, _updatedEntries_0_rs1_ready_T_7) @[scheduler.scala 98:132]
    node _updatedEntries_0_rs1_ready_T_9 = and(tempQueue_0.valid, _updatedEntries_0_rs1_ready_T_8) @[scheduler.scala 98:109]
    updatedEntries_0.rs1.ready <= _updatedEntries_0_rs1_ready_T_9 @[scheduler.scala 98:91]
    node _updatedEntries_1_rs1_ready_T = eq(wakeUpExt[0].prfAddr, tempQueue_1.rs1.prfAddr) @[scheduler.scala 98:173]
    node _updatedEntries_1_rs1_ready_T_1 = and(wakeUpExt[0].valid, _updatedEntries_1_rs1_ready_T) @[scheduler.scala 98:159]
    node _updatedEntries_1_rs1_ready_T_2 = eq(wakeUpExt[1].prfAddr, tempQueue_1.rs1.prfAddr) @[scheduler.scala 98:173]
    node _updatedEntries_1_rs1_ready_T_3 = and(wakeUpExt[1].valid, _updatedEntries_1_rs1_ready_T_2) @[scheduler.scala 98:159]
    node _updatedEntries_1_rs1_ready_T_4 = eq(wakeUpInt.prfAddr, tempQueue_1.rs1.prfAddr) @[scheduler.scala 98:173]
    node _updatedEntries_1_rs1_ready_T_5 = and(wakeUpInt.valid, _updatedEntries_1_rs1_ready_T_4) @[scheduler.scala 98:159]
    node _updatedEntries_1_rs1_ready_T_6 = or(_updatedEntries_1_rs1_ready_T_1, _updatedEntries_1_rs1_ready_T_3) @[scheduler.scala 98:209]
    node _updatedEntries_1_rs1_ready_T_7 = or(_updatedEntries_1_rs1_ready_T_6, _updatedEntries_1_rs1_ready_T_5) @[scheduler.scala 98:209]
    node _updatedEntries_1_rs1_ready_T_8 = or(tempQueue_1.rs1.ready, _updatedEntries_1_rs1_ready_T_7) @[scheduler.scala 98:132]
    node _updatedEntries_1_rs1_ready_T_9 = and(tempQueue_1.valid, _updatedEntries_1_rs1_ready_T_8) @[scheduler.scala 98:109]
    updatedEntries_1.rs1.ready <= _updatedEntries_1_rs1_ready_T_9 @[scheduler.scala 98:91]
    node _updatedEntries_2_rs1_ready_T = eq(wakeUpExt[0].prfAddr, tempQueue_2.rs1.prfAddr) @[scheduler.scala 98:173]
    node _updatedEntries_2_rs1_ready_T_1 = and(wakeUpExt[0].valid, _updatedEntries_2_rs1_ready_T) @[scheduler.scala 98:159]
    node _updatedEntries_2_rs1_ready_T_2 = eq(wakeUpExt[1].prfAddr, tempQueue_2.rs1.prfAddr) @[scheduler.scala 98:173]
    node _updatedEntries_2_rs1_ready_T_3 = and(wakeUpExt[1].valid, _updatedEntries_2_rs1_ready_T_2) @[scheduler.scala 98:159]
    node _updatedEntries_2_rs1_ready_T_4 = eq(wakeUpInt.prfAddr, tempQueue_2.rs1.prfAddr) @[scheduler.scala 98:173]
    node _updatedEntries_2_rs1_ready_T_5 = and(wakeUpInt.valid, _updatedEntries_2_rs1_ready_T_4) @[scheduler.scala 98:159]
    node _updatedEntries_2_rs1_ready_T_6 = or(_updatedEntries_2_rs1_ready_T_1, _updatedEntries_2_rs1_ready_T_3) @[scheduler.scala 98:209]
    node _updatedEntries_2_rs1_ready_T_7 = or(_updatedEntries_2_rs1_ready_T_6, _updatedEntries_2_rs1_ready_T_5) @[scheduler.scala 98:209]
    node _updatedEntries_2_rs1_ready_T_8 = or(tempQueue_2.rs1.ready, _updatedEntries_2_rs1_ready_T_7) @[scheduler.scala 98:132]
    node _updatedEntries_2_rs1_ready_T_9 = and(tempQueue_2.valid, _updatedEntries_2_rs1_ready_T_8) @[scheduler.scala 98:109]
    updatedEntries_2.rs1.ready <= _updatedEntries_2_rs1_ready_T_9 @[scheduler.scala 98:91]
    node _updatedEntries_3_rs1_ready_T = eq(wakeUpExt[0].prfAddr, tempQueue_3.rs1.prfAddr) @[scheduler.scala 98:173]
    node _updatedEntries_3_rs1_ready_T_1 = and(wakeUpExt[0].valid, _updatedEntries_3_rs1_ready_T) @[scheduler.scala 98:159]
    node _updatedEntries_3_rs1_ready_T_2 = eq(wakeUpExt[1].prfAddr, tempQueue_3.rs1.prfAddr) @[scheduler.scala 98:173]
    node _updatedEntries_3_rs1_ready_T_3 = and(wakeUpExt[1].valid, _updatedEntries_3_rs1_ready_T_2) @[scheduler.scala 98:159]
    node _updatedEntries_3_rs1_ready_T_4 = eq(wakeUpInt.prfAddr, tempQueue_3.rs1.prfAddr) @[scheduler.scala 98:173]
    node _updatedEntries_3_rs1_ready_T_5 = and(wakeUpInt.valid, _updatedEntries_3_rs1_ready_T_4) @[scheduler.scala 98:159]
    node _updatedEntries_3_rs1_ready_T_6 = or(_updatedEntries_3_rs1_ready_T_1, _updatedEntries_3_rs1_ready_T_3) @[scheduler.scala 98:209]
    node _updatedEntries_3_rs1_ready_T_7 = or(_updatedEntries_3_rs1_ready_T_6, _updatedEntries_3_rs1_ready_T_5) @[scheduler.scala 98:209]
    node _updatedEntries_3_rs1_ready_T_8 = or(tempQueue_3.rs1.ready, _updatedEntries_3_rs1_ready_T_7) @[scheduler.scala 98:132]
    node _updatedEntries_3_rs1_ready_T_9 = and(tempQueue_3.valid, _updatedEntries_3_rs1_ready_T_8) @[scheduler.scala 98:109]
    updatedEntries_3.rs1.ready <= _updatedEntries_3_rs1_ready_T_9 @[scheduler.scala 98:91]
    node _updatedEntries_4_rs1_ready_T = eq(wakeUpExt[0].prfAddr, tempQueue_4.rs1.prfAddr) @[scheduler.scala 98:173]
    node _updatedEntries_4_rs1_ready_T_1 = and(wakeUpExt[0].valid, _updatedEntries_4_rs1_ready_T) @[scheduler.scala 98:159]
    node _updatedEntries_4_rs1_ready_T_2 = eq(wakeUpExt[1].prfAddr, tempQueue_4.rs1.prfAddr) @[scheduler.scala 98:173]
    node _updatedEntries_4_rs1_ready_T_3 = and(wakeUpExt[1].valid, _updatedEntries_4_rs1_ready_T_2) @[scheduler.scala 98:159]
    node _updatedEntries_4_rs1_ready_T_4 = eq(wakeUpInt.prfAddr, tempQueue_4.rs1.prfAddr) @[scheduler.scala 98:173]
    node _updatedEntries_4_rs1_ready_T_5 = and(wakeUpInt.valid, _updatedEntries_4_rs1_ready_T_4) @[scheduler.scala 98:159]
    node _updatedEntries_4_rs1_ready_T_6 = or(_updatedEntries_4_rs1_ready_T_1, _updatedEntries_4_rs1_ready_T_3) @[scheduler.scala 98:209]
    node _updatedEntries_4_rs1_ready_T_7 = or(_updatedEntries_4_rs1_ready_T_6, _updatedEntries_4_rs1_ready_T_5) @[scheduler.scala 98:209]
    node _updatedEntries_4_rs1_ready_T_8 = or(tempQueue_4.rs1.ready, _updatedEntries_4_rs1_ready_T_7) @[scheduler.scala 98:132]
    node _updatedEntries_4_rs1_ready_T_9 = and(tempQueue_4.valid, _updatedEntries_4_rs1_ready_T_8) @[scheduler.scala 98:109]
    updatedEntries_4.rs1.ready <= _updatedEntries_4_rs1_ready_T_9 @[scheduler.scala 98:91]
    node _updatedEntries_5_rs1_ready_T = eq(wakeUpExt[0].prfAddr, tempQueue_5.rs1.prfAddr) @[scheduler.scala 98:173]
    node _updatedEntries_5_rs1_ready_T_1 = and(wakeUpExt[0].valid, _updatedEntries_5_rs1_ready_T) @[scheduler.scala 98:159]
    node _updatedEntries_5_rs1_ready_T_2 = eq(wakeUpExt[1].prfAddr, tempQueue_5.rs1.prfAddr) @[scheduler.scala 98:173]
    node _updatedEntries_5_rs1_ready_T_3 = and(wakeUpExt[1].valid, _updatedEntries_5_rs1_ready_T_2) @[scheduler.scala 98:159]
    node _updatedEntries_5_rs1_ready_T_4 = eq(wakeUpInt.prfAddr, tempQueue_5.rs1.prfAddr) @[scheduler.scala 98:173]
    node _updatedEntries_5_rs1_ready_T_5 = and(wakeUpInt.valid, _updatedEntries_5_rs1_ready_T_4) @[scheduler.scala 98:159]
    node _updatedEntries_5_rs1_ready_T_6 = or(_updatedEntries_5_rs1_ready_T_1, _updatedEntries_5_rs1_ready_T_3) @[scheduler.scala 98:209]
    node _updatedEntries_5_rs1_ready_T_7 = or(_updatedEntries_5_rs1_ready_T_6, _updatedEntries_5_rs1_ready_T_5) @[scheduler.scala 98:209]
    node _updatedEntries_5_rs1_ready_T_8 = or(tempQueue_5.rs1.ready, _updatedEntries_5_rs1_ready_T_7) @[scheduler.scala 98:132]
    node _updatedEntries_5_rs1_ready_T_9 = and(tempQueue_5.valid, _updatedEntries_5_rs1_ready_T_8) @[scheduler.scala 98:109]
    updatedEntries_5.rs1.ready <= _updatedEntries_5_rs1_ready_T_9 @[scheduler.scala 98:91]
    node _updatedEntries_6_rs1_ready_T = eq(wakeUpExt[0].prfAddr, tempQueue_6.rs1.prfAddr) @[scheduler.scala 98:173]
    node _updatedEntries_6_rs1_ready_T_1 = and(wakeUpExt[0].valid, _updatedEntries_6_rs1_ready_T) @[scheduler.scala 98:159]
    node _updatedEntries_6_rs1_ready_T_2 = eq(wakeUpExt[1].prfAddr, tempQueue_6.rs1.prfAddr) @[scheduler.scala 98:173]
    node _updatedEntries_6_rs1_ready_T_3 = and(wakeUpExt[1].valid, _updatedEntries_6_rs1_ready_T_2) @[scheduler.scala 98:159]
    node _updatedEntries_6_rs1_ready_T_4 = eq(wakeUpInt.prfAddr, tempQueue_6.rs1.prfAddr) @[scheduler.scala 98:173]
    node _updatedEntries_6_rs1_ready_T_5 = and(wakeUpInt.valid, _updatedEntries_6_rs1_ready_T_4) @[scheduler.scala 98:159]
    node _updatedEntries_6_rs1_ready_T_6 = or(_updatedEntries_6_rs1_ready_T_1, _updatedEntries_6_rs1_ready_T_3) @[scheduler.scala 98:209]
    node _updatedEntries_6_rs1_ready_T_7 = or(_updatedEntries_6_rs1_ready_T_6, _updatedEntries_6_rs1_ready_T_5) @[scheduler.scala 98:209]
    node _updatedEntries_6_rs1_ready_T_8 = or(tempQueue_6.rs1.ready, _updatedEntries_6_rs1_ready_T_7) @[scheduler.scala 98:132]
    node _updatedEntries_6_rs1_ready_T_9 = and(tempQueue_6.valid, _updatedEntries_6_rs1_ready_T_8) @[scheduler.scala 98:109]
    updatedEntries_6.rs1.ready <= _updatedEntries_6_rs1_ready_T_9 @[scheduler.scala 98:91]
    node _updatedEntries_7_rs1_ready_T = eq(wakeUpExt[0].prfAddr, tempQueue_7.rs1.prfAddr) @[scheduler.scala 98:173]
    node _updatedEntries_7_rs1_ready_T_1 = and(wakeUpExt[0].valid, _updatedEntries_7_rs1_ready_T) @[scheduler.scala 98:159]
    node _updatedEntries_7_rs1_ready_T_2 = eq(wakeUpExt[1].prfAddr, tempQueue_7.rs1.prfAddr) @[scheduler.scala 98:173]
    node _updatedEntries_7_rs1_ready_T_3 = and(wakeUpExt[1].valid, _updatedEntries_7_rs1_ready_T_2) @[scheduler.scala 98:159]
    node _updatedEntries_7_rs1_ready_T_4 = eq(wakeUpInt.prfAddr, tempQueue_7.rs1.prfAddr) @[scheduler.scala 98:173]
    node _updatedEntries_7_rs1_ready_T_5 = and(wakeUpInt.valid, _updatedEntries_7_rs1_ready_T_4) @[scheduler.scala 98:159]
    node _updatedEntries_7_rs1_ready_T_6 = or(_updatedEntries_7_rs1_ready_T_1, _updatedEntries_7_rs1_ready_T_3) @[scheduler.scala 98:209]
    node _updatedEntries_7_rs1_ready_T_7 = or(_updatedEntries_7_rs1_ready_T_6, _updatedEntries_7_rs1_ready_T_5) @[scheduler.scala 98:209]
    node _updatedEntries_7_rs1_ready_T_8 = or(tempQueue_7.rs1.ready, _updatedEntries_7_rs1_ready_T_7) @[scheduler.scala 98:132]
    node _updatedEntries_7_rs1_ready_T_9 = and(tempQueue_7.valid, _updatedEntries_7_rs1_ready_T_8) @[scheduler.scala 98:109]
    updatedEntries_7.rs1.ready <= _updatedEntries_7_rs1_ready_T_9 @[scheduler.scala 98:91]
    node _updatedEntries_8_rs1_ready_T = eq(wakeUpExt[0].prfAddr, tempQueue_8.rs1.prfAddr) @[scheduler.scala 98:173]
    node _updatedEntries_8_rs1_ready_T_1 = and(wakeUpExt[0].valid, _updatedEntries_8_rs1_ready_T) @[scheduler.scala 98:159]
    node _updatedEntries_8_rs1_ready_T_2 = eq(wakeUpExt[1].prfAddr, tempQueue_8.rs1.prfAddr) @[scheduler.scala 98:173]
    node _updatedEntries_8_rs1_ready_T_3 = and(wakeUpExt[1].valid, _updatedEntries_8_rs1_ready_T_2) @[scheduler.scala 98:159]
    node _updatedEntries_8_rs1_ready_T_4 = eq(wakeUpInt.prfAddr, tempQueue_8.rs1.prfAddr) @[scheduler.scala 98:173]
    node _updatedEntries_8_rs1_ready_T_5 = and(wakeUpInt.valid, _updatedEntries_8_rs1_ready_T_4) @[scheduler.scala 98:159]
    node _updatedEntries_8_rs1_ready_T_6 = or(_updatedEntries_8_rs1_ready_T_1, _updatedEntries_8_rs1_ready_T_3) @[scheduler.scala 98:209]
    node _updatedEntries_8_rs1_ready_T_7 = or(_updatedEntries_8_rs1_ready_T_6, _updatedEntries_8_rs1_ready_T_5) @[scheduler.scala 98:209]
    node _updatedEntries_8_rs1_ready_T_8 = or(tempQueue_8.rs1.ready, _updatedEntries_8_rs1_ready_T_7) @[scheduler.scala 98:132]
    node _updatedEntries_8_rs1_ready_T_9 = and(tempQueue_8.valid, _updatedEntries_8_rs1_ready_T_8) @[scheduler.scala 98:109]
    updatedEntries_8.rs1.ready <= _updatedEntries_8_rs1_ready_T_9 @[scheduler.scala 98:91]
    reg instrRetired_REG : { valid : UInt<1>, prfAddr : UInt<6>}, clock with :
      reset => (UInt<1>("h0"), instrRetired_REG) @[scheduler.scala 101:26]
    instrRetired_REG <= wakeUpInt @[scheduler.scala 101:26]
    instrRetired <= instrRetired_REG @[scheduler.scala 101:16]
    node _updatedEntries_0_rs2_ready_T = eq(wakeUpExt[0].prfAddr, tempQueue_0.rs2.prfAddr) @[scheduler.scala 104:106]
    node _updatedEntries_0_rs2_ready_T_1 = and(wakeUpExt[0].valid, _updatedEntries_0_rs2_ready_T) @[scheduler.scala 104:92]
    node _updatedEntries_0_rs2_ready_T_2 = eq(wakeUpExt[1].prfAddr, tempQueue_0.rs2.prfAddr) @[scheduler.scala 104:106]
    node _updatedEntries_0_rs2_ready_T_3 = and(wakeUpExt[1].valid, _updatedEntries_0_rs2_ready_T_2) @[scheduler.scala 104:92]
    node _updatedEntries_0_rs2_ready_T_4 = eq(wakeUpInt.prfAddr, tempQueue_0.rs2.prfAddr) @[scheduler.scala 104:106]
    node _updatedEntries_0_rs2_ready_T_5 = and(wakeUpInt.valid, _updatedEntries_0_rs2_ready_T_4) @[scheduler.scala 104:92]
    node _updatedEntries_0_rs2_ready_T_6 = or(_updatedEntries_0_rs2_ready_T_1, _updatedEntries_0_rs2_ready_T_3) @[scheduler.scala 104:142]
    node _updatedEntries_0_rs2_ready_T_7 = or(_updatedEntries_0_rs2_ready_T_6, _updatedEntries_0_rs2_ready_T_5) @[scheduler.scala 104:142]
    node _updatedEntries_0_rs2_ready_T_8 = or(tempQueue_0.rs2.ready, _updatedEntries_0_rs2_ready_T_7) @[scheduler.scala 104:65]
    node _updatedEntries_0_rs2_ready_T_9 = and(tempQueue_0.valid, _updatedEntries_0_rs2_ready_T_8) @[scheduler.scala 104:42]
    updatedEntries_0.rs2.ready <= _updatedEntries_0_rs2_ready_T_9 @[scheduler.scala 104:24]
    node _updatedEntries_1_rs2_ready_T = eq(wakeUpExt[0].prfAddr, tempQueue_1.rs2.prfAddr) @[scheduler.scala 104:106]
    node _updatedEntries_1_rs2_ready_T_1 = and(wakeUpExt[0].valid, _updatedEntries_1_rs2_ready_T) @[scheduler.scala 104:92]
    node _updatedEntries_1_rs2_ready_T_2 = eq(wakeUpExt[1].prfAddr, tempQueue_1.rs2.prfAddr) @[scheduler.scala 104:106]
    node _updatedEntries_1_rs2_ready_T_3 = and(wakeUpExt[1].valid, _updatedEntries_1_rs2_ready_T_2) @[scheduler.scala 104:92]
    node _updatedEntries_1_rs2_ready_T_4 = eq(wakeUpInt.prfAddr, tempQueue_1.rs2.prfAddr) @[scheduler.scala 104:106]
    node _updatedEntries_1_rs2_ready_T_5 = and(wakeUpInt.valid, _updatedEntries_1_rs2_ready_T_4) @[scheduler.scala 104:92]
    node _updatedEntries_1_rs2_ready_T_6 = or(_updatedEntries_1_rs2_ready_T_1, _updatedEntries_1_rs2_ready_T_3) @[scheduler.scala 104:142]
    node _updatedEntries_1_rs2_ready_T_7 = or(_updatedEntries_1_rs2_ready_T_6, _updatedEntries_1_rs2_ready_T_5) @[scheduler.scala 104:142]
    node _updatedEntries_1_rs2_ready_T_8 = or(tempQueue_1.rs2.ready, _updatedEntries_1_rs2_ready_T_7) @[scheduler.scala 104:65]
    node _updatedEntries_1_rs2_ready_T_9 = and(tempQueue_1.valid, _updatedEntries_1_rs2_ready_T_8) @[scheduler.scala 104:42]
    updatedEntries_1.rs2.ready <= _updatedEntries_1_rs2_ready_T_9 @[scheduler.scala 104:24]
    node _updatedEntries_2_rs2_ready_T = eq(wakeUpExt[0].prfAddr, tempQueue_2.rs2.prfAddr) @[scheduler.scala 104:106]
    node _updatedEntries_2_rs2_ready_T_1 = and(wakeUpExt[0].valid, _updatedEntries_2_rs2_ready_T) @[scheduler.scala 104:92]
    node _updatedEntries_2_rs2_ready_T_2 = eq(wakeUpExt[1].prfAddr, tempQueue_2.rs2.prfAddr) @[scheduler.scala 104:106]
    node _updatedEntries_2_rs2_ready_T_3 = and(wakeUpExt[1].valid, _updatedEntries_2_rs2_ready_T_2) @[scheduler.scala 104:92]
    node _updatedEntries_2_rs2_ready_T_4 = eq(wakeUpInt.prfAddr, tempQueue_2.rs2.prfAddr) @[scheduler.scala 104:106]
    node _updatedEntries_2_rs2_ready_T_5 = and(wakeUpInt.valid, _updatedEntries_2_rs2_ready_T_4) @[scheduler.scala 104:92]
    node _updatedEntries_2_rs2_ready_T_6 = or(_updatedEntries_2_rs2_ready_T_1, _updatedEntries_2_rs2_ready_T_3) @[scheduler.scala 104:142]
    node _updatedEntries_2_rs2_ready_T_7 = or(_updatedEntries_2_rs2_ready_T_6, _updatedEntries_2_rs2_ready_T_5) @[scheduler.scala 104:142]
    node _updatedEntries_2_rs2_ready_T_8 = or(tempQueue_2.rs2.ready, _updatedEntries_2_rs2_ready_T_7) @[scheduler.scala 104:65]
    node _updatedEntries_2_rs2_ready_T_9 = and(tempQueue_2.valid, _updatedEntries_2_rs2_ready_T_8) @[scheduler.scala 104:42]
    updatedEntries_2.rs2.ready <= _updatedEntries_2_rs2_ready_T_9 @[scheduler.scala 104:24]
    node _updatedEntries_3_rs2_ready_T = eq(wakeUpExt[0].prfAddr, tempQueue_3.rs2.prfAddr) @[scheduler.scala 104:106]
    node _updatedEntries_3_rs2_ready_T_1 = and(wakeUpExt[0].valid, _updatedEntries_3_rs2_ready_T) @[scheduler.scala 104:92]
    node _updatedEntries_3_rs2_ready_T_2 = eq(wakeUpExt[1].prfAddr, tempQueue_3.rs2.prfAddr) @[scheduler.scala 104:106]
    node _updatedEntries_3_rs2_ready_T_3 = and(wakeUpExt[1].valid, _updatedEntries_3_rs2_ready_T_2) @[scheduler.scala 104:92]
    node _updatedEntries_3_rs2_ready_T_4 = eq(wakeUpInt.prfAddr, tempQueue_3.rs2.prfAddr) @[scheduler.scala 104:106]
    node _updatedEntries_3_rs2_ready_T_5 = and(wakeUpInt.valid, _updatedEntries_3_rs2_ready_T_4) @[scheduler.scala 104:92]
    node _updatedEntries_3_rs2_ready_T_6 = or(_updatedEntries_3_rs2_ready_T_1, _updatedEntries_3_rs2_ready_T_3) @[scheduler.scala 104:142]
    node _updatedEntries_3_rs2_ready_T_7 = or(_updatedEntries_3_rs2_ready_T_6, _updatedEntries_3_rs2_ready_T_5) @[scheduler.scala 104:142]
    node _updatedEntries_3_rs2_ready_T_8 = or(tempQueue_3.rs2.ready, _updatedEntries_3_rs2_ready_T_7) @[scheduler.scala 104:65]
    node _updatedEntries_3_rs2_ready_T_9 = and(tempQueue_3.valid, _updatedEntries_3_rs2_ready_T_8) @[scheduler.scala 104:42]
    updatedEntries_3.rs2.ready <= _updatedEntries_3_rs2_ready_T_9 @[scheduler.scala 104:24]
    node _updatedEntries_4_rs2_ready_T = eq(wakeUpExt[0].prfAddr, tempQueue_4.rs2.prfAddr) @[scheduler.scala 104:106]
    node _updatedEntries_4_rs2_ready_T_1 = and(wakeUpExt[0].valid, _updatedEntries_4_rs2_ready_T) @[scheduler.scala 104:92]
    node _updatedEntries_4_rs2_ready_T_2 = eq(wakeUpExt[1].prfAddr, tempQueue_4.rs2.prfAddr) @[scheduler.scala 104:106]
    node _updatedEntries_4_rs2_ready_T_3 = and(wakeUpExt[1].valid, _updatedEntries_4_rs2_ready_T_2) @[scheduler.scala 104:92]
    node _updatedEntries_4_rs2_ready_T_4 = eq(wakeUpInt.prfAddr, tempQueue_4.rs2.prfAddr) @[scheduler.scala 104:106]
    node _updatedEntries_4_rs2_ready_T_5 = and(wakeUpInt.valid, _updatedEntries_4_rs2_ready_T_4) @[scheduler.scala 104:92]
    node _updatedEntries_4_rs2_ready_T_6 = or(_updatedEntries_4_rs2_ready_T_1, _updatedEntries_4_rs2_ready_T_3) @[scheduler.scala 104:142]
    node _updatedEntries_4_rs2_ready_T_7 = or(_updatedEntries_4_rs2_ready_T_6, _updatedEntries_4_rs2_ready_T_5) @[scheduler.scala 104:142]
    node _updatedEntries_4_rs2_ready_T_8 = or(tempQueue_4.rs2.ready, _updatedEntries_4_rs2_ready_T_7) @[scheduler.scala 104:65]
    node _updatedEntries_4_rs2_ready_T_9 = and(tempQueue_4.valid, _updatedEntries_4_rs2_ready_T_8) @[scheduler.scala 104:42]
    updatedEntries_4.rs2.ready <= _updatedEntries_4_rs2_ready_T_9 @[scheduler.scala 104:24]
    node _updatedEntries_5_rs2_ready_T = eq(wakeUpExt[0].prfAddr, tempQueue_5.rs2.prfAddr) @[scheduler.scala 104:106]
    node _updatedEntries_5_rs2_ready_T_1 = and(wakeUpExt[0].valid, _updatedEntries_5_rs2_ready_T) @[scheduler.scala 104:92]
    node _updatedEntries_5_rs2_ready_T_2 = eq(wakeUpExt[1].prfAddr, tempQueue_5.rs2.prfAddr) @[scheduler.scala 104:106]
    node _updatedEntries_5_rs2_ready_T_3 = and(wakeUpExt[1].valid, _updatedEntries_5_rs2_ready_T_2) @[scheduler.scala 104:92]
    node _updatedEntries_5_rs2_ready_T_4 = eq(wakeUpInt.prfAddr, tempQueue_5.rs2.prfAddr) @[scheduler.scala 104:106]
    node _updatedEntries_5_rs2_ready_T_5 = and(wakeUpInt.valid, _updatedEntries_5_rs2_ready_T_4) @[scheduler.scala 104:92]
    node _updatedEntries_5_rs2_ready_T_6 = or(_updatedEntries_5_rs2_ready_T_1, _updatedEntries_5_rs2_ready_T_3) @[scheduler.scala 104:142]
    node _updatedEntries_5_rs2_ready_T_7 = or(_updatedEntries_5_rs2_ready_T_6, _updatedEntries_5_rs2_ready_T_5) @[scheduler.scala 104:142]
    node _updatedEntries_5_rs2_ready_T_8 = or(tempQueue_5.rs2.ready, _updatedEntries_5_rs2_ready_T_7) @[scheduler.scala 104:65]
    node _updatedEntries_5_rs2_ready_T_9 = and(tempQueue_5.valid, _updatedEntries_5_rs2_ready_T_8) @[scheduler.scala 104:42]
    updatedEntries_5.rs2.ready <= _updatedEntries_5_rs2_ready_T_9 @[scheduler.scala 104:24]
    node _updatedEntries_6_rs2_ready_T = eq(wakeUpExt[0].prfAddr, tempQueue_6.rs2.prfAddr) @[scheduler.scala 104:106]
    node _updatedEntries_6_rs2_ready_T_1 = and(wakeUpExt[0].valid, _updatedEntries_6_rs2_ready_T) @[scheduler.scala 104:92]
    node _updatedEntries_6_rs2_ready_T_2 = eq(wakeUpExt[1].prfAddr, tempQueue_6.rs2.prfAddr) @[scheduler.scala 104:106]
    node _updatedEntries_6_rs2_ready_T_3 = and(wakeUpExt[1].valid, _updatedEntries_6_rs2_ready_T_2) @[scheduler.scala 104:92]
    node _updatedEntries_6_rs2_ready_T_4 = eq(wakeUpInt.prfAddr, tempQueue_6.rs2.prfAddr) @[scheduler.scala 104:106]
    node _updatedEntries_6_rs2_ready_T_5 = and(wakeUpInt.valid, _updatedEntries_6_rs2_ready_T_4) @[scheduler.scala 104:92]
    node _updatedEntries_6_rs2_ready_T_6 = or(_updatedEntries_6_rs2_ready_T_1, _updatedEntries_6_rs2_ready_T_3) @[scheduler.scala 104:142]
    node _updatedEntries_6_rs2_ready_T_7 = or(_updatedEntries_6_rs2_ready_T_6, _updatedEntries_6_rs2_ready_T_5) @[scheduler.scala 104:142]
    node _updatedEntries_6_rs2_ready_T_8 = or(tempQueue_6.rs2.ready, _updatedEntries_6_rs2_ready_T_7) @[scheduler.scala 104:65]
    node _updatedEntries_6_rs2_ready_T_9 = and(tempQueue_6.valid, _updatedEntries_6_rs2_ready_T_8) @[scheduler.scala 104:42]
    updatedEntries_6.rs2.ready <= _updatedEntries_6_rs2_ready_T_9 @[scheduler.scala 104:24]
    node _updatedEntries_7_rs2_ready_T = eq(wakeUpExt[0].prfAddr, tempQueue_7.rs2.prfAddr) @[scheduler.scala 104:106]
    node _updatedEntries_7_rs2_ready_T_1 = and(wakeUpExt[0].valid, _updatedEntries_7_rs2_ready_T) @[scheduler.scala 104:92]
    node _updatedEntries_7_rs2_ready_T_2 = eq(wakeUpExt[1].prfAddr, tempQueue_7.rs2.prfAddr) @[scheduler.scala 104:106]
    node _updatedEntries_7_rs2_ready_T_3 = and(wakeUpExt[1].valid, _updatedEntries_7_rs2_ready_T_2) @[scheduler.scala 104:92]
    node _updatedEntries_7_rs2_ready_T_4 = eq(wakeUpInt.prfAddr, tempQueue_7.rs2.prfAddr) @[scheduler.scala 104:106]
    node _updatedEntries_7_rs2_ready_T_5 = and(wakeUpInt.valid, _updatedEntries_7_rs2_ready_T_4) @[scheduler.scala 104:92]
    node _updatedEntries_7_rs2_ready_T_6 = or(_updatedEntries_7_rs2_ready_T_1, _updatedEntries_7_rs2_ready_T_3) @[scheduler.scala 104:142]
    node _updatedEntries_7_rs2_ready_T_7 = or(_updatedEntries_7_rs2_ready_T_6, _updatedEntries_7_rs2_ready_T_5) @[scheduler.scala 104:142]
    node _updatedEntries_7_rs2_ready_T_8 = or(tempQueue_7.rs2.ready, _updatedEntries_7_rs2_ready_T_7) @[scheduler.scala 104:65]
    node _updatedEntries_7_rs2_ready_T_9 = and(tempQueue_7.valid, _updatedEntries_7_rs2_ready_T_8) @[scheduler.scala 104:42]
    updatedEntries_7.rs2.ready <= _updatedEntries_7_rs2_ready_T_9 @[scheduler.scala 104:24]
    node _updatedEntries_8_rs2_ready_T = eq(wakeUpExt[0].prfAddr, tempQueue_8.rs2.prfAddr) @[scheduler.scala 104:106]
    node _updatedEntries_8_rs2_ready_T_1 = and(wakeUpExt[0].valid, _updatedEntries_8_rs2_ready_T) @[scheduler.scala 104:92]
    node _updatedEntries_8_rs2_ready_T_2 = eq(wakeUpExt[1].prfAddr, tempQueue_8.rs2.prfAddr) @[scheduler.scala 104:106]
    node _updatedEntries_8_rs2_ready_T_3 = and(wakeUpExt[1].valid, _updatedEntries_8_rs2_ready_T_2) @[scheduler.scala 104:92]
    node _updatedEntries_8_rs2_ready_T_4 = eq(wakeUpInt.prfAddr, tempQueue_8.rs2.prfAddr) @[scheduler.scala 104:106]
    node _updatedEntries_8_rs2_ready_T_5 = and(wakeUpInt.valid, _updatedEntries_8_rs2_ready_T_4) @[scheduler.scala 104:92]
    node _updatedEntries_8_rs2_ready_T_6 = or(_updatedEntries_8_rs2_ready_T_1, _updatedEntries_8_rs2_ready_T_3) @[scheduler.scala 104:142]
    node _updatedEntries_8_rs2_ready_T_7 = or(_updatedEntries_8_rs2_ready_T_6, _updatedEntries_8_rs2_ready_T_5) @[scheduler.scala 104:142]
    node _updatedEntries_8_rs2_ready_T_8 = or(tempQueue_8.rs2.ready, _updatedEntries_8_rs2_ready_T_7) @[scheduler.scala 104:65]
    node _updatedEntries_8_rs2_ready_T_9 = and(tempQueue_8.valid, _updatedEntries_8_rs2_ready_T_8) @[scheduler.scala 104:42]
    updatedEntries_8.rs2.ready <= _updatedEntries_8_rs2_ready_T_9 @[scheduler.scala 104:24]
    when branchOps.valid : @[scheduler.scala 108:27]
      node _T_1 = and(tempQueue_0.branchMask, branchOps.branchMask) @[scheduler.scala 109:53]
      node _T_2 = orr(_T_1) @[scheduler.scala 109:77]
      node _T_3 = and(branchOps.passed, _T_2) @[scheduler.scala 109:29]
      when _T_3 : @[scheduler.scala 109:82]
        node _updatedEntries_0_branchMask_T = xor(tempQueue_0.branchMask, branchOps.branchMask) @[scheduler.scala 109:127]
        updatedEntries_0.branchMask <= _updatedEntries_0_branchMask_T @[scheduler.scala 109:104]
      else :
        node _updatedEntries_0_valid_T = and(tempQueue_0.branchMask, branchOps.branchMask) @[scheduler.scala 110:78]
        node _updatedEntries_0_valid_T_1 = orr(_updatedEntries_0_valid_T) @[scheduler.scala 110:102]
        node _updatedEntries_0_valid_T_2 = eq(_updatedEntries_0_valid_T_1, UInt<1>("h0")) @[scheduler.scala 110:56]
        node _updatedEntries_0_valid_T_3 = and(tempQueue_0.valid, _updatedEntries_0_valid_T_2) @[scheduler.scala 110:53]
        updatedEntries_0.valid <= _updatedEntries_0_valid_T_3 @[scheduler.scala 110:35]
    when branchOps.valid : @[scheduler.scala 108:27]
      node _T_4 = and(tempQueue_1.branchMask, branchOps.branchMask) @[scheduler.scala 109:53]
      node _T_5 = orr(_T_4) @[scheduler.scala 109:77]
      node _T_6 = and(branchOps.passed, _T_5) @[scheduler.scala 109:29]
      when _T_6 : @[scheduler.scala 109:82]
        node _updatedEntries_1_branchMask_T = xor(tempQueue_1.branchMask, branchOps.branchMask) @[scheduler.scala 109:127]
        updatedEntries_1.branchMask <= _updatedEntries_1_branchMask_T @[scheduler.scala 109:104]
      else :
        node _updatedEntries_1_valid_T = and(tempQueue_1.branchMask, branchOps.branchMask) @[scheduler.scala 110:78]
        node _updatedEntries_1_valid_T_1 = orr(_updatedEntries_1_valid_T) @[scheduler.scala 110:102]
        node _updatedEntries_1_valid_T_2 = eq(_updatedEntries_1_valid_T_1, UInt<1>("h0")) @[scheduler.scala 110:56]
        node _updatedEntries_1_valid_T_3 = and(tempQueue_1.valid, _updatedEntries_1_valid_T_2) @[scheduler.scala 110:53]
        updatedEntries_1.valid <= _updatedEntries_1_valid_T_3 @[scheduler.scala 110:35]
    when branchOps.valid : @[scheduler.scala 108:27]
      node _T_7 = and(tempQueue_2.branchMask, branchOps.branchMask) @[scheduler.scala 109:53]
      node _T_8 = orr(_T_7) @[scheduler.scala 109:77]
      node _T_9 = and(branchOps.passed, _T_8) @[scheduler.scala 109:29]
      when _T_9 : @[scheduler.scala 109:82]
        node _updatedEntries_2_branchMask_T = xor(tempQueue_2.branchMask, branchOps.branchMask) @[scheduler.scala 109:127]
        updatedEntries_2.branchMask <= _updatedEntries_2_branchMask_T @[scheduler.scala 109:104]
      else :
        node _updatedEntries_2_valid_T = and(tempQueue_2.branchMask, branchOps.branchMask) @[scheduler.scala 110:78]
        node _updatedEntries_2_valid_T_1 = orr(_updatedEntries_2_valid_T) @[scheduler.scala 110:102]
        node _updatedEntries_2_valid_T_2 = eq(_updatedEntries_2_valid_T_1, UInt<1>("h0")) @[scheduler.scala 110:56]
        node _updatedEntries_2_valid_T_3 = and(tempQueue_2.valid, _updatedEntries_2_valid_T_2) @[scheduler.scala 110:53]
        updatedEntries_2.valid <= _updatedEntries_2_valid_T_3 @[scheduler.scala 110:35]
    when branchOps.valid : @[scheduler.scala 108:27]
      node _T_10 = and(tempQueue_3.branchMask, branchOps.branchMask) @[scheduler.scala 109:53]
      node _T_11 = orr(_T_10) @[scheduler.scala 109:77]
      node _T_12 = and(branchOps.passed, _T_11) @[scheduler.scala 109:29]
      when _T_12 : @[scheduler.scala 109:82]
        node _updatedEntries_3_branchMask_T = xor(tempQueue_3.branchMask, branchOps.branchMask) @[scheduler.scala 109:127]
        updatedEntries_3.branchMask <= _updatedEntries_3_branchMask_T @[scheduler.scala 109:104]
      else :
        node _updatedEntries_3_valid_T = and(tempQueue_3.branchMask, branchOps.branchMask) @[scheduler.scala 110:78]
        node _updatedEntries_3_valid_T_1 = orr(_updatedEntries_3_valid_T) @[scheduler.scala 110:102]
        node _updatedEntries_3_valid_T_2 = eq(_updatedEntries_3_valid_T_1, UInt<1>("h0")) @[scheduler.scala 110:56]
        node _updatedEntries_3_valid_T_3 = and(tempQueue_3.valid, _updatedEntries_3_valid_T_2) @[scheduler.scala 110:53]
        updatedEntries_3.valid <= _updatedEntries_3_valid_T_3 @[scheduler.scala 110:35]
    when branchOps.valid : @[scheduler.scala 108:27]
      node _T_13 = and(tempQueue_4.branchMask, branchOps.branchMask) @[scheduler.scala 109:53]
      node _T_14 = orr(_T_13) @[scheduler.scala 109:77]
      node _T_15 = and(branchOps.passed, _T_14) @[scheduler.scala 109:29]
      when _T_15 : @[scheduler.scala 109:82]
        node _updatedEntries_4_branchMask_T = xor(tempQueue_4.branchMask, branchOps.branchMask) @[scheduler.scala 109:127]
        updatedEntries_4.branchMask <= _updatedEntries_4_branchMask_T @[scheduler.scala 109:104]
      else :
        node _updatedEntries_4_valid_T = and(tempQueue_4.branchMask, branchOps.branchMask) @[scheduler.scala 110:78]
        node _updatedEntries_4_valid_T_1 = orr(_updatedEntries_4_valid_T) @[scheduler.scala 110:102]
        node _updatedEntries_4_valid_T_2 = eq(_updatedEntries_4_valid_T_1, UInt<1>("h0")) @[scheduler.scala 110:56]
        node _updatedEntries_4_valid_T_3 = and(tempQueue_4.valid, _updatedEntries_4_valid_T_2) @[scheduler.scala 110:53]
        updatedEntries_4.valid <= _updatedEntries_4_valid_T_3 @[scheduler.scala 110:35]
    when branchOps.valid : @[scheduler.scala 108:27]
      node _T_16 = and(tempQueue_5.branchMask, branchOps.branchMask) @[scheduler.scala 109:53]
      node _T_17 = orr(_T_16) @[scheduler.scala 109:77]
      node _T_18 = and(branchOps.passed, _T_17) @[scheduler.scala 109:29]
      when _T_18 : @[scheduler.scala 109:82]
        node _updatedEntries_5_branchMask_T = xor(tempQueue_5.branchMask, branchOps.branchMask) @[scheduler.scala 109:127]
        updatedEntries_5.branchMask <= _updatedEntries_5_branchMask_T @[scheduler.scala 109:104]
      else :
        node _updatedEntries_5_valid_T = and(tempQueue_5.branchMask, branchOps.branchMask) @[scheduler.scala 110:78]
        node _updatedEntries_5_valid_T_1 = orr(_updatedEntries_5_valid_T) @[scheduler.scala 110:102]
        node _updatedEntries_5_valid_T_2 = eq(_updatedEntries_5_valid_T_1, UInt<1>("h0")) @[scheduler.scala 110:56]
        node _updatedEntries_5_valid_T_3 = and(tempQueue_5.valid, _updatedEntries_5_valid_T_2) @[scheduler.scala 110:53]
        updatedEntries_5.valid <= _updatedEntries_5_valid_T_3 @[scheduler.scala 110:35]
    when branchOps.valid : @[scheduler.scala 108:27]
      node _T_19 = and(tempQueue_6.branchMask, branchOps.branchMask) @[scheduler.scala 109:53]
      node _T_20 = orr(_T_19) @[scheduler.scala 109:77]
      node _T_21 = and(branchOps.passed, _T_20) @[scheduler.scala 109:29]
      when _T_21 : @[scheduler.scala 109:82]
        node _updatedEntries_6_branchMask_T = xor(tempQueue_6.branchMask, branchOps.branchMask) @[scheduler.scala 109:127]
        updatedEntries_6.branchMask <= _updatedEntries_6_branchMask_T @[scheduler.scala 109:104]
      else :
        node _updatedEntries_6_valid_T = and(tempQueue_6.branchMask, branchOps.branchMask) @[scheduler.scala 110:78]
        node _updatedEntries_6_valid_T_1 = orr(_updatedEntries_6_valid_T) @[scheduler.scala 110:102]
        node _updatedEntries_6_valid_T_2 = eq(_updatedEntries_6_valid_T_1, UInt<1>("h0")) @[scheduler.scala 110:56]
        node _updatedEntries_6_valid_T_3 = and(tempQueue_6.valid, _updatedEntries_6_valid_T_2) @[scheduler.scala 110:53]
        updatedEntries_6.valid <= _updatedEntries_6_valid_T_3 @[scheduler.scala 110:35]
    when branchOps.valid : @[scheduler.scala 108:27]
      node _T_22 = and(tempQueue_7.branchMask, branchOps.branchMask) @[scheduler.scala 109:53]
      node _T_23 = orr(_T_22) @[scheduler.scala 109:77]
      node _T_24 = and(branchOps.passed, _T_23) @[scheduler.scala 109:29]
      when _T_24 : @[scheduler.scala 109:82]
        node _updatedEntries_7_branchMask_T = xor(tempQueue_7.branchMask, branchOps.branchMask) @[scheduler.scala 109:127]
        updatedEntries_7.branchMask <= _updatedEntries_7_branchMask_T @[scheduler.scala 109:104]
      else :
        node _updatedEntries_7_valid_T = and(tempQueue_7.branchMask, branchOps.branchMask) @[scheduler.scala 110:78]
        node _updatedEntries_7_valid_T_1 = orr(_updatedEntries_7_valid_T) @[scheduler.scala 110:102]
        node _updatedEntries_7_valid_T_2 = eq(_updatedEntries_7_valid_T_1, UInt<1>("h0")) @[scheduler.scala 110:56]
        node _updatedEntries_7_valid_T_3 = and(tempQueue_7.valid, _updatedEntries_7_valid_T_2) @[scheduler.scala 110:53]
        updatedEntries_7.valid <= _updatedEntries_7_valid_T_3 @[scheduler.scala 110:35]
    when branchOps.valid : @[scheduler.scala 108:27]
      node _T_25 = and(tempQueue_8.branchMask, branchOps.branchMask) @[scheduler.scala 109:53]
      node _T_26 = orr(_T_25) @[scheduler.scala 109:77]
      node _T_27 = and(branchOps.passed, _T_26) @[scheduler.scala 109:29]
      when _T_27 : @[scheduler.scala 109:82]
        node _updatedEntries_8_branchMask_T = xor(tempQueue_8.branchMask, branchOps.branchMask) @[scheduler.scala 109:127]
        updatedEntries_8.branchMask <= _updatedEntries_8_branchMask_T @[scheduler.scala 109:104]
      else :
        node _updatedEntries_8_valid_T = and(tempQueue_8.branchMask, branchOps.branchMask) @[scheduler.scala 110:78]
        node _updatedEntries_8_valid_T_1 = orr(_updatedEntries_8_valid_T) @[scheduler.scala 110:102]
        node _updatedEntries_8_valid_T_2 = eq(_updatedEntries_8_valid_T_1, UInt<1>("h0")) @[scheduler.scala 110:56]
        node _updatedEntries_8_valid_T_3 = and(tempQueue_8.valid, _updatedEntries_8_valid_T_2) @[scheduler.scala 110:53]
        updatedEntries_8.valid <= _updatedEntries_8_valid_T_3 @[scheduler.scala 110:35]
    node _T_28 = orr(readyVector) @[scheduler.scala 114:31]
    node _T_29 = and(dequeue, _T_28) @[scheduler.scala 114:16]
    when _T_29 : @[scheduler.scala 114:36]
      node _T_30 = eq(UInt<1>("h0"), dequeuedIndex) @[scheduler.scala 114:87]
      when _T_30 : @[scheduler.scala 114:106]
        updatedEntries_0.valid <= UInt<1>("h0") @[scheduler.scala 114:132]
      node _T_31 = eq(UInt<1>("h1"), dequeuedIndex) @[scheduler.scala 114:87]
      when _T_31 : @[scheduler.scala 114:106]
        updatedEntries_1.valid <= UInt<1>("h0") @[scheduler.scala 114:132]
      node _T_32 = eq(UInt<2>("h2"), dequeuedIndex) @[scheduler.scala 114:87]
      when _T_32 : @[scheduler.scala 114:106]
        updatedEntries_2.valid <= UInt<1>("h0") @[scheduler.scala 114:132]
      node _T_33 = eq(UInt<2>("h3"), dequeuedIndex) @[scheduler.scala 114:87]
      when _T_33 : @[scheduler.scala 114:106]
        updatedEntries_3.valid <= UInt<1>("h0") @[scheduler.scala 114:132]
      node _T_34 = eq(UInt<3>("h4"), dequeuedIndex) @[scheduler.scala 114:87]
      when _T_34 : @[scheduler.scala 114:106]
        updatedEntries_4.valid <= UInt<1>("h0") @[scheduler.scala 114:132]
      node _T_35 = eq(UInt<3>("h5"), dequeuedIndex) @[scheduler.scala 114:87]
      when _T_35 : @[scheduler.scala 114:106]
        updatedEntries_5.valid <= UInt<1>("h0") @[scheduler.scala 114:132]
      node _T_36 = eq(UInt<3>("h6"), dequeuedIndex) @[scheduler.scala 114:87]
      when _T_36 : @[scheduler.scala 114:106]
        updatedEntries_6.valid <= UInt<1>("h0") @[scheduler.scala 114:132]
      node _T_37 = eq(UInt<3>("h7"), dequeuedIndex) @[scheduler.scala 114:87]
      when _T_37 : @[scheduler.scala 114:106]
        updatedEntries_7.valid <= UInt<1>("h0") @[scheduler.scala 114:132]
    node _newQueue_T = eq(queue[0].valid, UInt<1>("h0")) @[scheduler.scala 116:61]
    node _newQueue_T_1 = bits(readyVector, 0, 0) @[scheduler.scala 116:142]
    node _newQueue_T_2 = orr(_newQueue_T_1) @[scheduler.scala 116:148]
    node _newQueue_T_3 = and(dequeue, _newQueue_T_2) @[scheduler.scala 116:128]
    node _newQueue_T_4 = or(_newQueue_T, _newQueue_T_3) @[scheduler.scala 116:116]
    node _newQueue_T_5 = mux(_newQueue_T_4, updatedEntries_1, updatedEntries_0) @[scheduler.scala 116:60]
    node _newQueue_T_6 = and(queue[0].valid, queue[1].valid) @[scheduler.scala 116:110]
    node _newQueue_T_7 = eq(_newQueue_T_6, UInt<1>("h0")) @[scheduler.scala 116:61]
    node _newQueue_T_8 = bits(readyVector, 1, 0) @[scheduler.scala 116:142]
    node _newQueue_T_9 = orr(_newQueue_T_8) @[scheduler.scala 116:148]
    node _newQueue_T_10 = and(dequeue, _newQueue_T_9) @[scheduler.scala 116:128]
    node _newQueue_T_11 = or(_newQueue_T_7, _newQueue_T_10) @[scheduler.scala 116:116]
    node _newQueue_T_12 = mux(_newQueue_T_11, updatedEntries_2, updatedEntries_1) @[scheduler.scala 116:60]
    node _newQueue_T_13 = and(queue[0].valid, queue[1].valid) @[scheduler.scala 116:110]
    node _newQueue_T_14 = and(_newQueue_T_13, queue[2].valid) @[scheduler.scala 116:110]
    node _newQueue_T_15 = eq(_newQueue_T_14, UInt<1>("h0")) @[scheduler.scala 116:61]
    node _newQueue_T_16 = bits(readyVector, 2, 0) @[scheduler.scala 116:142]
    node _newQueue_T_17 = orr(_newQueue_T_16) @[scheduler.scala 116:148]
    node _newQueue_T_18 = and(dequeue, _newQueue_T_17) @[scheduler.scala 116:128]
    node _newQueue_T_19 = or(_newQueue_T_15, _newQueue_T_18) @[scheduler.scala 116:116]
    node _newQueue_T_20 = mux(_newQueue_T_19, updatedEntries_3, updatedEntries_2) @[scheduler.scala 116:60]
    node _newQueue_T_21 = and(queue[0].valid, queue[1].valid) @[scheduler.scala 116:110]
    node _newQueue_T_22 = and(_newQueue_T_21, queue[2].valid) @[scheduler.scala 116:110]
    node _newQueue_T_23 = and(_newQueue_T_22, queue[3].valid) @[scheduler.scala 116:110]
    node _newQueue_T_24 = eq(_newQueue_T_23, UInt<1>("h0")) @[scheduler.scala 116:61]
    node _newQueue_T_25 = bits(readyVector, 3, 0) @[scheduler.scala 116:142]
    node _newQueue_T_26 = orr(_newQueue_T_25) @[scheduler.scala 116:148]
    node _newQueue_T_27 = and(dequeue, _newQueue_T_26) @[scheduler.scala 116:128]
    node _newQueue_T_28 = or(_newQueue_T_24, _newQueue_T_27) @[scheduler.scala 116:116]
    node _newQueue_T_29 = mux(_newQueue_T_28, updatedEntries_4, updatedEntries_3) @[scheduler.scala 116:60]
    node _newQueue_T_30 = and(queue[0].valid, queue[1].valid) @[scheduler.scala 116:110]
    node _newQueue_T_31 = and(_newQueue_T_30, queue[2].valid) @[scheduler.scala 116:110]
    node _newQueue_T_32 = and(_newQueue_T_31, queue[3].valid) @[scheduler.scala 116:110]
    node _newQueue_T_33 = and(_newQueue_T_32, queue[4].valid) @[scheduler.scala 116:110]
    node _newQueue_T_34 = eq(_newQueue_T_33, UInt<1>("h0")) @[scheduler.scala 116:61]
    node _newQueue_T_35 = bits(readyVector, 4, 0) @[scheduler.scala 116:142]
    node _newQueue_T_36 = orr(_newQueue_T_35) @[scheduler.scala 116:148]
    node _newQueue_T_37 = and(dequeue, _newQueue_T_36) @[scheduler.scala 116:128]
    node _newQueue_T_38 = or(_newQueue_T_34, _newQueue_T_37) @[scheduler.scala 116:116]
    node _newQueue_T_39 = mux(_newQueue_T_38, updatedEntries_5, updatedEntries_4) @[scheduler.scala 116:60]
    node _newQueue_T_40 = and(queue[0].valid, queue[1].valid) @[scheduler.scala 116:110]
    node _newQueue_T_41 = and(_newQueue_T_40, queue[2].valid) @[scheduler.scala 116:110]
    node _newQueue_T_42 = and(_newQueue_T_41, queue[3].valid) @[scheduler.scala 116:110]
    node _newQueue_T_43 = and(_newQueue_T_42, queue[4].valid) @[scheduler.scala 116:110]
    node _newQueue_T_44 = and(_newQueue_T_43, queue[5].valid) @[scheduler.scala 116:110]
    node _newQueue_T_45 = eq(_newQueue_T_44, UInt<1>("h0")) @[scheduler.scala 116:61]
    node _newQueue_T_46 = bits(readyVector, 5, 0) @[scheduler.scala 116:142]
    node _newQueue_T_47 = orr(_newQueue_T_46) @[scheduler.scala 116:148]
    node _newQueue_T_48 = and(dequeue, _newQueue_T_47) @[scheduler.scala 116:128]
    node _newQueue_T_49 = or(_newQueue_T_45, _newQueue_T_48) @[scheduler.scala 116:116]
    node _newQueue_T_50 = mux(_newQueue_T_49, updatedEntries_6, updatedEntries_5) @[scheduler.scala 116:60]
    node _newQueue_T_51 = and(queue[0].valid, queue[1].valid) @[scheduler.scala 116:110]
    node _newQueue_T_52 = and(_newQueue_T_51, queue[2].valid) @[scheduler.scala 116:110]
    node _newQueue_T_53 = and(_newQueue_T_52, queue[3].valid) @[scheduler.scala 116:110]
    node _newQueue_T_54 = and(_newQueue_T_53, queue[4].valid) @[scheduler.scala 116:110]
    node _newQueue_T_55 = and(_newQueue_T_54, queue[5].valid) @[scheduler.scala 116:110]
    node _newQueue_T_56 = and(_newQueue_T_55, queue[6].valid) @[scheduler.scala 116:110]
    node _newQueue_T_57 = eq(_newQueue_T_56, UInt<1>("h0")) @[scheduler.scala 116:61]
    node _newQueue_T_58 = bits(readyVector, 6, 0) @[scheduler.scala 116:142]
    node _newQueue_T_59 = orr(_newQueue_T_58) @[scheduler.scala 116:148]
    node _newQueue_T_60 = and(dequeue, _newQueue_T_59) @[scheduler.scala 116:128]
    node _newQueue_T_61 = or(_newQueue_T_57, _newQueue_T_60) @[scheduler.scala 116:116]
    node _newQueue_T_62 = mux(_newQueue_T_61, updatedEntries_7, updatedEntries_6) @[scheduler.scala 116:60]
    node _newQueue_T_63 = and(queue[0].valid, queue[1].valid) @[scheduler.scala 116:110]
    node _newQueue_T_64 = and(_newQueue_T_63, queue[2].valid) @[scheduler.scala 116:110]
    node _newQueue_T_65 = and(_newQueue_T_64, queue[3].valid) @[scheduler.scala 116:110]
    node _newQueue_T_66 = and(_newQueue_T_65, queue[4].valid) @[scheduler.scala 116:110]
    node _newQueue_T_67 = and(_newQueue_T_66, queue[5].valid) @[scheduler.scala 116:110]
    node _newQueue_T_68 = and(_newQueue_T_67, queue[6].valid) @[scheduler.scala 116:110]
    node _newQueue_T_69 = and(_newQueue_T_68, queue[7].valid) @[scheduler.scala 116:110]
    node _newQueue_T_70 = eq(_newQueue_T_69, UInt<1>("h0")) @[scheduler.scala 116:61]
    node _newQueue_T_71 = bits(readyVector, 7, 0) @[scheduler.scala 116:142]
    node _newQueue_T_72 = orr(_newQueue_T_71) @[scheduler.scala 116:148]
    node _newQueue_T_73 = and(dequeue, _newQueue_T_72) @[scheduler.scala 116:128]
    node _newQueue_T_74 = or(_newQueue_T_70, _newQueue_T_73) @[scheduler.scala 116:116]
    node _newQueue_T_75 = mux(_newQueue_T_74, updatedEntries_8, updatedEntries_7) @[scheduler.scala 116:60]
    wire newQueue : { opcodeMeta : { isBranch : UInt<1>, isMemAccess : UInt<1>, isM : UInt<1>}, valid : UInt<1>, instruction : UInt<32>, branchMask : UInt<5>, rs1 : { ready : UInt<1>, prfAddr : UInt<6>}, rs2 : { ready : UInt<1>, prfAddr : UInt<6>}, prfDest : UInt<6>, robAddr : UInt<4>}[8] @[scheduler.scala 116:51]
    newQueue[0] <= _newQueue_T_5 @[scheduler.scala 116:51]
    newQueue[1] <= _newQueue_T_12 @[scheduler.scala 116:51]
    newQueue[2] <= _newQueue_T_20 @[scheduler.scala 116:51]
    newQueue[3] <= _newQueue_T_29 @[scheduler.scala 116:51]
    newQueue[4] <= _newQueue_T_39 @[scheduler.scala 116:51]
    newQueue[5] <= _newQueue_T_50 @[scheduler.scala 116:51]
    newQueue[6] <= _newQueue_T_62 @[scheduler.scala 116:51]
    newQueue[7] <= _newQueue_T_75 @[scheduler.scala 116:51]
    node _oldestMemMask_T = and(newQueue[0].valid, newQueue[0].opcodeMeta.isMemAccess) @[scheduler.scala 117:66]
    node _oldestMemMask_T_1 = mux(_oldestMemMask_T, newQueue[0].rs2.prfAddr, UInt<1>("h0")) @[scheduler.scala 117:57]
    node _oldestMemMask_T_2 = and(newQueue[1].valid, newQueue[1].opcodeMeta.isMemAccess) @[scheduler.scala 117:66]
    node _oldestMemMask_T_3 = mux(_oldestMemMask_T_2, newQueue[1].rs2.prfAddr, UInt<1>("h0")) @[scheduler.scala 117:57]
    node _oldestMemMask_T_4 = and(newQueue[2].valid, newQueue[2].opcodeMeta.isMemAccess) @[scheduler.scala 117:66]
    node _oldestMemMask_T_5 = mux(_oldestMemMask_T_4, newQueue[2].rs2.prfAddr, UInt<1>("h0")) @[scheduler.scala 117:57]
    node _oldestMemMask_T_6 = and(newQueue[3].valid, newQueue[3].opcodeMeta.isMemAccess) @[scheduler.scala 117:66]
    node _oldestMemMask_T_7 = mux(_oldestMemMask_T_6, newQueue[3].rs2.prfAddr, UInt<1>("h0")) @[scheduler.scala 117:57]
    node _oldestMemMask_T_8 = and(newQueue[4].valid, newQueue[4].opcodeMeta.isMemAccess) @[scheduler.scala 117:66]
    node _oldestMemMask_T_9 = mux(_oldestMemMask_T_8, newQueue[4].rs2.prfAddr, UInt<1>("h0")) @[scheduler.scala 117:57]
    node _oldestMemMask_T_10 = and(newQueue[5].valid, newQueue[5].opcodeMeta.isMemAccess) @[scheduler.scala 117:66]
    node _oldestMemMask_T_11 = mux(_oldestMemMask_T_10, newQueue[5].rs2.prfAddr, UInt<1>("h0")) @[scheduler.scala 117:57]
    node _oldestMemMask_T_12 = and(newQueue[6].valid, newQueue[6].opcodeMeta.isMemAccess) @[scheduler.scala 117:66]
    node _oldestMemMask_T_13 = mux(_oldestMemMask_T_12, newQueue[6].rs2.prfAddr, UInt<1>("h0")) @[scheduler.scala 117:57]
    node _oldestMemMask_T_14 = or(_oldestMemMask_T_1, _oldestMemMask_T_3) @[scheduler.scala 117:125]
    node _oldestMemMask_T_15 = or(_oldestMemMask_T_14, _oldestMemMask_T_5) @[scheduler.scala 117:125]
    node _oldestMemMask_T_16 = or(_oldestMemMask_T_15, _oldestMemMask_T_7) @[scheduler.scala 117:125]
    node _oldestMemMask_T_17 = or(_oldestMemMask_T_16, _oldestMemMask_T_9) @[scheduler.scala 117:125]
    node _oldestMemMask_T_18 = or(_oldestMemMask_T_17, _oldestMemMask_T_11) @[scheduler.scala 117:125]
    node oldestMemMask = or(_oldestMemMask_T_18, _oldestMemMask_T_13) @[scheduler.scala 117:125]
    node _newMask_T = bits(oldestMemMask, 0, 0) @[scheduler.scala 118:93]
    node _newMask_T_1 = bits(_newMask_T, 0, 0) @[scheduler.scala 118:97]
    node _newMask_T_2 = eq(_newMask_T_1, UInt<1>("h0")) @[scheduler.scala 118:79]
    node _newMask_T_3 = bits(oldestMemMask, 1, 1) @[scheduler.scala 118:93]
    node _newMask_T_4 = bits(_newMask_T_3, 0, 0) @[scheduler.scala 118:97]
    node _newMask_T_5 = eq(_newMask_T_4, UInt<1>("h0")) @[scheduler.scala 118:79]
    node _newMask_T_6 = bits(oldestMemMask, 2, 2) @[scheduler.scala 118:93]
    node _newMask_T_7 = bits(_newMask_T_6, 0, 0) @[scheduler.scala 118:97]
    node _newMask_T_8 = eq(_newMask_T_7, UInt<1>("h0")) @[scheduler.scala 118:79]
    node _newMask_T_9 = bits(oldestMemMask, 3, 3) @[scheduler.scala 118:93]
    node _newMask_T_10 = bits(_newMask_T_9, 0, 0) @[scheduler.scala 118:97]
    node _newMask_T_11 = eq(_newMask_T_10, UInt<1>("h0")) @[scheduler.scala 118:79]
    node _newMask_T_12 = bits(oldestMemMask, 4, 4) @[scheduler.scala 118:93]
    node _newMask_T_13 = bits(_newMask_T_12, 0, 0) @[scheduler.scala 118:97]
    node _newMask_T_14 = eq(_newMask_T_13, UInt<1>("h0")) @[scheduler.scala 118:79]
    node _newMask_T_15 = bits(oldestMemMask, 5, 5) @[scheduler.scala 118:93]
    node _newMask_T_16 = bits(_newMask_T_15, 0, 0) @[scheduler.scala 118:97]
    node _newMask_T_17 = eq(_newMask_T_16, UInt<1>("h0")) @[scheduler.scala 118:79]
    node _newMask_T_18 = mux(_newMask_T_17, UInt<6>("h20"), UInt<1>("h0")) @[Mux.scala 101:16]
    node _newMask_T_19 = mux(_newMask_T_14, UInt<5>("h10"), _newMask_T_18) @[Mux.scala 101:16]
    node _newMask_T_20 = mux(_newMask_T_11, UInt<4>("h8"), _newMask_T_19) @[Mux.scala 101:16]
    node _newMask_T_21 = mux(_newMask_T_8, UInt<3>("h4"), _newMask_T_20) @[Mux.scala 101:16]
    node _newMask_T_22 = mux(_newMask_T_5, UInt<2>("h2"), _newMask_T_21) @[Mux.scala 101:16]
    node _newMask_T_23 = mux(_newMask_T_2, UInt<1>("h1"), _newMask_T_22) @[Mux.scala 101:16]
    node newMask = or(oldestMemMask, _newMask_T_23) @[scheduler.scala 118:31]
    reg haveMemMasks : UInt<1>, clock with :
      reset => (reset, UInt<1>("h1")) @[scheduler.scala 119:29]
    when haveMemMasks : @[scheduler.scala 120:22]
      node _haveMemMasks_T = andr(newMask) @[scheduler.scala 120:49]
      node _haveMemMasks_T_1 = eq(_haveMemMasks_T, UInt<1>("h0")) @[scheduler.scala 120:40]
      node _haveMemMasks_T_2 = eq(newQueue[7].valid, UInt<1>("h0")) @[scheduler.scala 120:57]
      node _haveMemMasks_T_3 = or(_haveMemMasks_T_1, _haveMemMasks_T_2) @[scheduler.scala 120:54]
      node _haveMemMasks_T_4 = eq(newQueue[7].opcodeMeta.isMemAccess, UInt<1>("h0")) @[scheduler.scala 120:95]
      node _haveMemMasks_T_5 = or(_haveMemMasks_T_3, _haveMemMasks_T_4) @[scheduler.scala 120:92]
      haveMemMasks <= _haveMemMasks_T_5 @[scheduler.scala 120:37]
    else :
      node _haveMemMasks_T_6 = andr(newMask) @[scheduler.scala 121:41]
      node _haveMemMasks_T_7 = eq(_haveMemMasks_T_6, UInt<1>("h0")) @[scheduler.scala 121:32]
      haveMemMasks <= _haveMemMasks_T_7 @[scheduler.scala 121:29]
    queue[0] <= newQueue[0] @[scheduler.scala 123:64]
    queue[1] <= newQueue[1] @[scheduler.scala 123:64]
    queue[2] <= newQueue[2] @[scheduler.scala 123:64]
    queue[3] <= newQueue[3] @[scheduler.scala 123:64]
    queue[4] <= newQueue[4] @[scheduler.scala 123:64]
    queue[5] <= newQueue[5] @[scheduler.scala 123:64]
    queue[6] <= newQueue[6] @[scheduler.scala 123:64]
    queue[7] <= newQueue[7] @[scheduler.scala 123:64]
    release.branchMask <= releasedBuffer.branchMask @[scheduler.scala 127:22]
    release.instruction <= releasedBuffer.instruction @[scheduler.scala 128:23]
    release.prfDest <= releasedBuffer.prfDest @[scheduler.scala 129:19]
    release.robAddr <= releasedBuffer.robAddr @[scheduler.scala 130:19]
    release.rs1prfAddr <= releasedBuffer.rs1prfAddr @[scheduler.scala 131:22]
    release.rs2prfAddr <= releasedBuffer.rs2prfAddr @[scheduler.scala 132:22]
    release.ready <= releasedBuffer.valid @[scheduler.scala 133:17]
    node _allocate_ready_T = and(queue[0].valid, queue[1].valid) @[scheduler.scala 134:50]
    node _allocate_ready_T_1 = and(_allocate_ready_T, queue[2].valid) @[scheduler.scala 134:50]
    node _allocate_ready_T_2 = and(_allocate_ready_T_1, queue[3].valid) @[scheduler.scala 134:50]
    node _allocate_ready_T_3 = and(_allocate_ready_T_2, queue[4].valid) @[scheduler.scala 134:50]
    node _allocate_ready_T_4 = and(_allocate_ready_T_3, queue[5].valid) @[scheduler.scala 134:50]
    node _allocate_ready_T_5 = and(_allocate_ready_T_4, queue[6].valid) @[scheduler.scala 134:50]
    node _allocate_ready_T_6 = and(_allocate_ready_T_5, queue[7].valid) @[scheduler.scala 134:50]
    node _allocate_ready_T_7 = eq(_allocate_ready_T_6, UInt<1>("h0")) @[scheduler.scala 134:21]
    allocate.ready <= _allocate_ready_T_7 @[scheduler.scala 134:18]
    when dequeue : @[scheduler.scala 136:17]
      node _releasedBuffer_branchMask_T = and(branchOps.branchMask, dequeued.branchMask) @[scheduler.scala 137:79]
      node _releasedBuffer_branchMask_T_1 = orr(_releasedBuffer_branchMask_T) @[scheduler.scala 137:102]
      node _releasedBuffer_branchMask_T_2 = and(branchOps.valid, _releasedBuffer_branchMask_T_1) @[scheduler.scala 137:54]
      node _releasedBuffer_branchMask_T_3 = and(_releasedBuffer_branchMask_T_2, branchOps.passed) @[scheduler.scala 137:106]
      node _releasedBuffer_branchMask_T_4 = xor(dequeued.branchMask, branchOps.branchMask) @[scheduler.scala 137:147]
      node _releasedBuffer_branchMask_T_5 = mux(_releasedBuffer_branchMask_T_3, _releasedBuffer_branchMask_T_4, dequeued.branchMask) @[scheduler.scala 137:37]
      releasedBuffer.branchMask <= _releasedBuffer_branchMask_T_5 @[scheduler.scala 137:31]
      releasedBuffer.instruction <= dequeued.instruction @[scheduler.scala 138:32]
      releasedBuffer.prfDest <= dequeued.prfDest @[scheduler.scala 139:28]
      releasedBuffer.robAddr <= dequeued.robAddr @[scheduler.scala 140:28]
      releasedBuffer.rs1prfAddr <= dequeued.rs1.prfAddr @[scheduler.scala 141:31]
      releasedBuffer.rs2prfAddr <= dequeued.rs2.prfAddr @[scheduler.scala 142:31]
      node _releasedBuffer_valid_T = eq(branchOps.valid, UInt<1>("h0")) @[scheduler.scala 143:48]
      node _releasedBuffer_valid_T_1 = and(dequeued.branchMask, branchOps.branchMask) @[scheduler.scala 143:90]
      node _releasedBuffer_valid_T_2 = orr(_releasedBuffer_valid_T_1) @[scheduler.scala 143:114]
      node _releasedBuffer_valid_T_3 = eq(_releasedBuffer_valid_T_2, UInt<1>("h0")) @[scheduler.scala 143:68]
      node _releasedBuffer_valid_T_4 = or(_releasedBuffer_valid_T, _releasedBuffer_valid_T_3) @[scheduler.scala 143:65]
      node _releasedBuffer_valid_T_5 = or(_releasedBuffer_valid_T_4, branchOps.passed) @[scheduler.scala 143:118]
      node _releasedBuffer_valid_T_6 = and(dequeued.valid, _releasedBuffer_valid_T_5) @[scheduler.scala 143:44]
      node _releasedBuffer_valid_T_7 = orr(readyVector) @[scheduler.scala 143:154]
      node _releasedBuffer_valid_T_8 = and(_releasedBuffer_valid_T_6, _releasedBuffer_valid_T_7) @[scheduler.scala 143:139]
      releasedBuffer.valid <= _releasedBuffer_valid_T_8 @[scheduler.scala 143:26]
    else :
      when branchOps.valid : @[scheduler.scala 144:31]
        node _releasedBuffer_branchMask_T_6 = xor(releasedBuffer.branchMask, branchOps.branchMask) @[scheduler.scala 145:60]
        releasedBuffer.branchMask <= _releasedBuffer_branchMask_T_6 @[scheduler.scala 145:31]
        node _releasedBuffer_valid_T_9 = eq(branchOps.valid, UInt<1>("h0")) @[scheduler.scala 146:54]
        node _releasedBuffer_valid_T_10 = and(releasedBuffer.branchMask, branchOps.branchMask) @[scheduler.scala 146:102]
        node _releasedBuffer_valid_T_11 = orr(_releasedBuffer_valid_T_10) @[scheduler.scala 146:126]
        node _releasedBuffer_valid_T_12 = eq(_releasedBuffer_valid_T_11, UInt<1>("h0")) @[scheduler.scala 146:74]
        node _releasedBuffer_valid_T_13 = or(_releasedBuffer_valid_T_9, _releasedBuffer_valid_T_12) @[scheduler.scala 146:71]
        node _releasedBuffer_valid_T_14 = or(_releasedBuffer_valid_T_13, branchOps.passed) @[scheduler.scala 146:130]
        node _releasedBuffer_valid_T_15 = and(releasedBuffer.valid, _releasedBuffer_valid_T_14) @[scheduler.scala 146:50]
        releasedBuffer.valid <= _releasedBuffer_valid_T_15 @[scheduler.scala 146:26]

  module Scheduler_1 :
    input clock : Clock
    input reset : Reset
    output requestIn : { flip valid : UInt<1>, flip address : UInt<32>, flip instruction : UInt<32>, flip branchMask : UInt<5>, flip robAddr : UInt<4>, flip prfDest : UInt<6>}
    output canAllocate : UInt<1>
    input requestOut : { flip valid : UInt<1>, flip address : UInt<32>, flip instruction : UInt<32>, flip branchMask : UInt<5>, flip robAddr : UInt<4>, flip prfDest : UInt<6>}
    input canAccept : UInt<1>
    output isEmpty : UInt<1>
    output branchOps : { flip valid : UInt<1>, flip branchMask : UInt<5>, flip passed : UInt<1>}

    requestOut.valid <= UInt<1>("h0") @[scheduler.scala 16:20]
    canAllocate <= UInt<1>("h0") @[scheduler.scala 17:15]
    requestOut.valid <= UInt<1>("h0") @[scheduler.scala 18:20]
    requestOut.address <= UInt<1>("h0") @[scheduler.scala 19:22]
    requestOut.instruction <= UInt<1>("h0") @[scheduler.scala 20:26]
    requestOut.branchMask <= UInt<1>("h0") @[scheduler.scala 21:25]
    requestOut.robAddr <= UInt<1>("h0") @[scheduler.scala 22:22]
    requestOut.prfDest <= UInt<1>("h0") @[scheduler.scala 23:22]
    isEmpty <= UInt<1>("h0") @[scheduler.scala 24:11]
    reg memReg : { valid : UInt<1>, address : UInt<32>, instruction : UInt<32>, branchMask : UInt<5>, robAddr : UInt<4>, prfDest : UInt<6>, branchValid : UInt<1>}[8], clock with :
      reset => (UInt<1>("h0"), memReg) @[scheduler.scala 45:19]
    wire incrRead : UInt<1>
    incrRead <= UInt<1>("h0")
    wire incrWrite : UInt<1>
    incrWrite <= UInt<1>("h0")
    reg readPtr : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[scheduler.scala 28:25]
    node _nextVal_T = eq(readPtr, UInt<3>("h7")) @[scheduler.scala 29:30]
    node _nextVal_T_1 = add(readPtr, UInt<1>("h1")) @[scheduler.scala 29:59]
    node _nextVal_T_2 = tail(_nextVal_T_1, 1) @[scheduler.scala 29:59]
    node nextRead = mux(_nextVal_T, UInt<1>("h0"), _nextVal_T_2) @[scheduler.scala 29:22]
    when incrRead : @[scheduler.scala 30:17]
      readPtr <= nextRead @[scheduler.scala 31:14]
    reg writePtr : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[scheduler.scala 28:25]
    node _nextVal_T_3 = eq(writePtr, UInt<3>("h7")) @[scheduler.scala 29:30]
    node _nextVal_T_4 = add(writePtr, UInt<1>("h1")) @[scheduler.scala 29:59]
    node _nextVal_T_5 = tail(_nextVal_T_4, 1) @[scheduler.scala 29:59]
    node nextWrite = mux(_nextVal_T_3, UInt<1>("h0"), _nextVal_T_5) @[scheduler.scala 29:22]
    when incrWrite : @[scheduler.scala 30:17]
      writePtr <= nextWrite @[scheduler.scala 31:14]
    reg emptyReg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h1")) @[scheduler.scala 52:25]
    reg fullReg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[scheduler.scala 53:24]
    node op = cat(requestIn.valid, canAccept) @[scheduler.scala 55:28]
    wire doWrite : UInt<1>
    doWrite <= UInt<1>("h0")
    node _T = eq(UInt<1>("h0"), op) @[scheduler.scala 57:15]
    when _T : @[scheduler.scala 57:15]
      skip
    else :
      node _T_1 = eq(UInt<1>("h1"), op) @[scheduler.scala 57:15]
      when _T_1 : @[scheduler.scala 57:15]
        node _T_2 = eq(emptyReg, UInt<1>("h0")) @[scheduler.scala 60:13]
        when _T_2 : @[scheduler.scala 60:26]
          fullReg <= UInt<1>("h0") @[scheduler.scala 61:17]
          node _emptyReg_T = eq(nextRead, writePtr) @[scheduler.scala 62:30]
          emptyReg <= _emptyReg_T @[scheduler.scala 62:18]
          incrRead <= UInt<1>("h1") @[scheduler.scala 63:18]
      else :
        node _T_3 = eq(UInt<2>("h2"), op) @[scheduler.scala 57:15]
        when _T_3 : @[scheduler.scala 57:15]
          node _T_4 = eq(fullReg, UInt<1>("h0")) @[scheduler.scala 67:13]
          when _T_4 : @[scheduler.scala 67:25]
            doWrite <= UInt<1>("h1") @[scheduler.scala 68:17]
            emptyReg <= UInt<1>("h0") @[scheduler.scala 69:18]
            node _fullReg_T = eq(nextWrite, readPtr) @[scheduler.scala 70:30]
            fullReg <= _fullReg_T @[scheduler.scala 70:17]
            incrWrite <= UInt<1>("h1") @[scheduler.scala 71:19]
        else :
          node _T_5 = eq(UInt<2>("h3"), op) @[scheduler.scala 57:15]
          when _T_5 : @[scheduler.scala 57:15]
            node _T_6 = eq(fullReg, UInt<1>("h0")) @[scheduler.scala 75:13]
            when _T_6 : @[scheduler.scala 75:25]
              doWrite <= UInt<1>("h1") @[scheduler.scala 76:17]
              emptyReg <= UInt<1>("h0") @[scheduler.scala 77:18]
              when emptyReg : @[scheduler.scala 78:26]
                fullReg <= UInt<1>("h0") @[scheduler.scala 79:19]
              else :
                node _fullReg_T_1 = eq(nextWrite, nextRead) @[scheduler.scala 81:32]
                fullReg <= _fullReg_T_1 @[scheduler.scala 81:19]
              incrWrite <= UInt<1>("h1") @[scheduler.scala 83:19]
            node _T_7 = eq(emptyReg, UInt<1>("h0")) @[scheduler.scala 85:13]
            when _T_7 : @[scheduler.scala 85:26]
              fullReg <= UInt<1>("h0") @[scheduler.scala 86:17]
              when fullReg : @[scheduler.scala 87:23]
                emptyReg <= UInt<1>("h0") @[scheduler.scala 88:18]
              else :
                node _emptyReg_T_1 = eq(nextRead, nextWrite) @[scheduler.scala 90:30]
                emptyReg <= _emptyReg_T_1 @[scheduler.scala 90:18]
              incrRead <= UInt<1>("h1") @[scheduler.scala 92:18]
    when doWrite : @[scheduler.scala 96:19]
      memReg[writePtr].valid <= requestIn.valid @[scheduler.scala 97:28]
      memReg[writePtr].address <= requestIn.address @[scheduler.scala 98:30]
      memReg[writePtr].instruction <= requestIn.instruction @[scheduler.scala 99:34]
      memReg[writePtr].robAddr <= requestIn.robAddr @[scheduler.scala 100:30]
      memReg[writePtr].prfDest <= requestIn.prfDest @[scheduler.scala 101:30]
      when branchOps.valid : @[scheduler.scala 102:26]
        when branchOps.passed : @[scheduler.scala 103:29]
          node _T_8 = and(requestIn.branchMask, branchOps.branchMask) @[scheduler.scala 104:36]
          node _T_9 = orr(_T_8) @[scheduler.scala 104:60]
          when _T_9 : @[scheduler.scala 104:64]
            node _memReg_branchMask_T = xor(requestIn.branchMask, branchOps.branchMask) @[scheduler.scala 105:63]
            memReg[writePtr].branchMask <= _memReg_branchMask_T @[scheduler.scala 105:39]
          else :
            memReg[writePtr].branchMask <= requestIn.branchMask @[scheduler.scala 107:39]
          memReg[writePtr].branchValid <= UInt<1>("h1") @[scheduler.scala 109:38]
        else :
          memReg[writePtr].branchMask <= requestIn.branchMask @[scheduler.scala 111:37]
          memReg[writePtr].branchValid <= UInt<1>("h0") @[scheduler.scala 112:38]
      else :
        memReg[writePtr].branchMask <= requestIn.branchMask @[scheduler.scala 115:35]
        memReg[writePtr].branchValid <= UInt<1>("h1") @[scheduler.scala 116:36]
    requestOut.valid <= memReg[readPtr].valid @[scheduler.scala 119:20]
    requestOut.address <= memReg[readPtr].address @[scheduler.scala 120:22]
    requestOut.instruction <= memReg[readPtr].instruction @[scheduler.scala 121:26]
    requestOut.branchMask <= memReg[readPtr].branchMask @[scheduler.scala 122:25]
    requestOut.robAddr <= memReg[readPtr].robAddr @[scheduler.scala 123:22]
    requestOut.prfDest <= memReg[readPtr].prfDest @[scheduler.scala 124:22]
    node _startPointer_T = add(readPtr, UInt<1>("h1")) @[scheduler.scala 126:45]
    node _startPointer_T_1 = tail(_startPointer_T, 1) @[scheduler.scala 126:45]
    node startPointer = mux(canAccept, _startPointer_T_1, readPtr) @[scheduler.scala 126:25]
    node _endPointer_T = sub(writePtr, UInt<1>("h1")) @[scheduler.scala 127:29]
    node endPointer = tail(_endPointer_T, 1) @[scheduler.scala 127:29]
    when branchOps.valid : @[scheduler.scala 128:25]
      node _T_10 = leq(startPointer, UInt<1>("h0")) @[scheduler.scala 130:25]
      node _T_11 = leq(UInt<1>("h0"), endPointer) @[scheduler.scala 130:39]
      node _T_12 = or(_T_10, _T_11) @[scheduler.scala 130:32]
      when _T_12 : @[scheduler.scala 130:53]
        when branchOps.passed : @[scheduler.scala 131:31]
          node _T_13 = and(memReg[0].branchMask, branchOps.branchMask) @[scheduler.scala 132:38]
          node _T_14 = orr(_T_13) @[scheduler.scala 132:62]
          when _T_14 : @[scheduler.scala 132:66]
            node _memReg_0_branchMask_T = xor(memReg[0].branchMask, branchOps.branchMask) @[scheduler.scala 133:58]
            memReg[0].branchMask <= _memReg_0_branchMask_T @[scheduler.scala 133:34]
        else :
          node _T_15 = and(memReg[0].branchMask, branchOps.branchMask) @[scheduler.scala 136:38]
          node _T_16 = orr(_T_15) @[scheduler.scala 136:62]
          when _T_16 : @[scheduler.scala 136:66]
            memReg[0].branchValid <= UInt<1>("h0") @[scheduler.scala 137:35]
      node _T_17 = leq(startPointer, UInt<1>("h1")) @[scheduler.scala 130:25]
      node _T_18 = leq(UInt<1>("h1"), endPointer) @[scheduler.scala 130:39]
      node _T_19 = or(_T_17, _T_18) @[scheduler.scala 130:32]
      when _T_19 : @[scheduler.scala 130:53]
        when branchOps.passed : @[scheduler.scala 131:31]
          node _T_20 = and(memReg[1].branchMask, branchOps.branchMask) @[scheduler.scala 132:38]
          node _T_21 = orr(_T_20) @[scheduler.scala 132:62]
          when _T_21 : @[scheduler.scala 132:66]
            node _memReg_1_branchMask_T = xor(memReg[1].branchMask, branchOps.branchMask) @[scheduler.scala 133:58]
            memReg[1].branchMask <= _memReg_1_branchMask_T @[scheduler.scala 133:34]
        else :
          node _T_22 = and(memReg[1].branchMask, branchOps.branchMask) @[scheduler.scala 136:38]
          node _T_23 = orr(_T_22) @[scheduler.scala 136:62]
          when _T_23 : @[scheduler.scala 136:66]
            memReg[1].branchValid <= UInt<1>("h0") @[scheduler.scala 137:35]
      node _T_24 = leq(startPointer, UInt<2>("h2")) @[scheduler.scala 130:25]
      node _T_25 = leq(UInt<2>("h2"), endPointer) @[scheduler.scala 130:39]
      node _T_26 = or(_T_24, _T_25) @[scheduler.scala 130:32]
      when _T_26 : @[scheduler.scala 130:53]
        when branchOps.passed : @[scheduler.scala 131:31]
          node _T_27 = and(memReg[2].branchMask, branchOps.branchMask) @[scheduler.scala 132:38]
          node _T_28 = orr(_T_27) @[scheduler.scala 132:62]
          when _T_28 : @[scheduler.scala 132:66]
            node _memReg_2_branchMask_T = xor(memReg[2].branchMask, branchOps.branchMask) @[scheduler.scala 133:58]
            memReg[2].branchMask <= _memReg_2_branchMask_T @[scheduler.scala 133:34]
        else :
          node _T_29 = and(memReg[2].branchMask, branchOps.branchMask) @[scheduler.scala 136:38]
          node _T_30 = orr(_T_29) @[scheduler.scala 136:62]
          when _T_30 : @[scheduler.scala 136:66]
            memReg[2].branchValid <= UInt<1>("h0") @[scheduler.scala 137:35]
      node _T_31 = leq(startPointer, UInt<2>("h3")) @[scheduler.scala 130:25]
      node _T_32 = leq(UInt<2>("h3"), endPointer) @[scheduler.scala 130:39]
      node _T_33 = or(_T_31, _T_32) @[scheduler.scala 130:32]
      when _T_33 : @[scheduler.scala 130:53]
        when branchOps.passed : @[scheduler.scala 131:31]
          node _T_34 = and(memReg[3].branchMask, branchOps.branchMask) @[scheduler.scala 132:38]
          node _T_35 = orr(_T_34) @[scheduler.scala 132:62]
          when _T_35 : @[scheduler.scala 132:66]
            node _memReg_3_branchMask_T = xor(memReg[3].branchMask, branchOps.branchMask) @[scheduler.scala 133:58]
            memReg[3].branchMask <= _memReg_3_branchMask_T @[scheduler.scala 133:34]
        else :
          node _T_36 = and(memReg[3].branchMask, branchOps.branchMask) @[scheduler.scala 136:38]
          node _T_37 = orr(_T_36) @[scheduler.scala 136:62]
          when _T_37 : @[scheduler.scala 136:66]
            memReg[3].branchValid <= UInt<1>("h0") @[scheduler.scala 137:35]
      node _T_38 = leq(startPointer, UInt<3>("h4")) @[scheduler.scala 130:25]
      node _T_39 = leq(UInt<3>("h4"), endPointer) @[scheduler.scala 130:39]
      node _T_40 = or(_T_38, _T_39) @[scheduler.scala 130:32]
      when _T_40 : @[scheduler.scala 130:53]
        when branchOps.passed : @[scheduler.scala 131:31]
          node _T_41 = and(memReg[4].branchMask, branchOps.branchMask) @[scheduler.scala 132:38]
          node _T_42 = orr(_T_41) @[scheduler.scala 132:62]
          when _T_42 : @[scheduler.scala 132:66]
            node _memReg_4_branchMask_T = xor(memReg[4].branchMask, branchOps.branchMask) @[scheduler.scala 133:58]
            memReg[4].branchMask <= _memReg_4_branchMask_T @[scheduler.scala 133:34]
        else :
          node _T_43 = and(memReg[4].branchMask, branchOps.branchMask) @[scheduler.scala 136:38]
          node _T_44 = orr(_T_43) @[scheduler.scala 136:62]
          when _T_44 : @[scheduler.scala 136:66]
            memReg[4].branchValid <= UInt<1>("h0") @[scheduler.scala 137:35]
      node _T_45 = leq(startPointer, UInt<3>("h5")) @[scheduler.scala 130:25]
      node _T_46 = leq(UInt<3>("h5"), endPointer) @[scheduler.scala 130:39]
      node _T_47 = or(_T_45, _T_46) @[scheduler.scala 130:32]
      when _T_47 : @[scheduler.scala 130:53]
        when branchOps.passed : @[scheduler.scala 131:31]
          node _T_48 = and(memReg[5].branchMask, branchOps.branchMask) @[scheduler.scala 132:38]
          node _T_49 = orr(_T_48) @[scheduler.scala 132:62]
          when _T_49 : @[scheduler.scala 132:66]
            node _memReg_5_branchMask_T = xor(memReg[5].branchMask, branchOps.branchMask) @[scheduler.scala 133:58]
            memReg[5].branchMask <= _memReg_5_branchMask_T @[scheduler.scala 133:34]
        else :
          node _T_50 = and(memReg[5].branchMask, branchOps.branchMask) @[scheduler.scala 136:38]
          node _T_51 = orr(_T_50) @[scheduler.scala 136:62]
          when _T_51 : @[scheduler.scala 136:66]
            memReg[5].branchValid <= UInt<1>("h0") @[scheduler.scala 137:35]
      node _T_52 = leq(startPointer, UInt<3>("h6")) @[scheduler.scala 130:25]
      node _T_53 = leq(UInt<3>("h6"), endPointer) @[scheduler.scala 130:39]
      node _T_54 = or(_T_52, _T_53) @[scheduler.scala 130:32]
      when _T_54 : @[scheduler.scala 130:53]
        when branchOps.passed : @[scheduler.scala 131:31]
          node _T_55 = and(memReg[6].branchMask, branchOps.branchMask) @[scheduler.scala 132:38]
          node _T_56 = orr(_T_55) @[scheduler.scala 132:62]
          when _T_56 : @[scheduler.scala 132:66]
            node _memReg_6_branchMask_T = xor(memReg[6].branchMask, branchOps.branchMask) @[scheduler.scala 133:58]
            memReg[6].branchMask <= _memReg_6_branchMask_T @[scheduler.scala 133:34]
        else :
          node _T_57 = and(memReg[6].branchMask, branchOps.branchMask) @[scheduler.scala 136:38]
          node _T_58 = orr(_T_57) @[scheduler.scala 136:62]
          when _T_58 : @[scheduler.scala 136:66]
            memReg[6].branchValid <= UInt<1>("h0") @[scheduler.scala 137:35]
      node _T_59 = leq(startPointer, UInt<3>("h7")) @[scheduler.scala 130:25]
      node _T_60 = leq(UInt<3>("h7"), endPointer) @[scheduler.scala 130:39]
      node _T_61 = or(_T_59, _T_60) @[scheduler.scala 130:32]
      when _T_61 : @[scheduler.scala 130:53]
        when branchOps.passed : @[scheduler.scala 131:31]
          node _T_62 = and(memReg[7].branchMask, branchOps.branchMask) @[scheduler.scala 132:38]
          node _T_63 = orr(_T_62) @[scheduler.scala 132:62]
          when _T_63 : @[scheduler.scala 132:66]
            node _memReg_7_branchMask_T = xor(memReg[7].branchMask, branchOps.branchMask) @[scheduler.scala 133:58]
            memReg[7].branchMask <= _memReg_7_branchMask_T @[scheduler.scala 133:34]
        else :
          node _T_64 = and(memReg[7].branchMask, branchOps.branchMask) @[scheduler.scala 136:38]
          node _T_65 = orr(_T_64) @[scheduler.scala 136:62]
          when _T_65 : @[scheduler.scala 136:66]
            memReg[7].branchValid <= UInt<1>("h0") @[scheduler.scala 137:35]
    node _canAllocate_T = sub(writePtr, readPtr) @[scheduler.scala 144:29]
    node _canAllocate_T_1 = tail(_canAllocate_T, 1) @[scheduler.scala 144:29]
    node _canAllocate_T_2 = gt(_canAllocate_T_1, UInt<2>("h3")) @[scheduler.scala 144:39]
    node _canAllocate_T_3 = eq(_canAllocate_T_2, UInt<1>("h0")) @[scheduler.scala 144:18]
    canAllocate <= _canAllocate_T_3 @[scheduler.scala 144:15]
    node _requestOut_valid_T = eq(emptyReg, UInt<1>("h0")) @[scheduler.scala 145:23]
    node _requestOut_valid_T_1 = and(_requestOut_valid_T, memReg[readPtr].branchValid) @[scheduler.scala 145:33]
    requestOut.valid <= _requestOut_valid_T_1 @[scheduler.scala 145:20]
    isEmpty <= emptyReg @[scheduler.scala 146:11]

  module CacheGenModule_5 :
    input clock : Clock
    input reset : Reset
    input requestAddr : UInt<7>
    output readData : UInt<512>
    input writeData : UInt<512>
    input writeEn : UInt<1>

    smem mem : UInt<512> [128] @[utils.scala 28:24]
    wire _readData_WIRE : UInt @[utils.scala 30:23]
    _readData_WIRE is invalid @[utils.scala 30:23]
    when UInt<1>("h1") : @[utils.scala 30:23]
      _readData_WIRE <= requestAddr @[utils.scala 30:23]
      node _readData_T = or(_readData_WIRE, UInt<7>("h0")) @[utils.scala 30:23]
      node _readData_T_1 = bits(_readData_T, 6, 0) @[utils.scala 30:23]
      read mport readData_MPORT = mem[_readData_T_1], clock @[utils.scala 30:23]
    readData <= readData_MPORT @[utils.scala 30:12]
    when writeEn : @[utils.scala 31:16]
      write mport MPORT = mem[requestAddr], clock
      MPORT <= writeData

  module CacheGenModule_6 :
    input clock : Clock
    input reset : Reset
    input requestAddr : UInt<7>
    output readData : UInt<512>
    input writeData : UInt<512>
    input writeEn : UInt<1>

    smem mem : UInt<512> [128] @[utils.scala 28:24]
    wire _readData_WIRE : UInt @[utils.scala 30:23]
    _readData_WIRE is invalid @[utils.scala 30:23]
    when UInt<1>("h1") : @[utils.scala 30:23]
      _readData_WIRE <= requestAddr @[utils.scala 30:23]
      node _readData_T = or(_readData_WIRE, UInt<7>("h0")) @[utils.scala 30:23]
      node _readData_T_1 = bits(_readData_T, 6, 0) @[utils.scala 30:23]
      read mport readData_MPORT = mem[_readData_T_1], clock @[utils.scala 30:23]
    readData <= readData_MPORT @[utils.scala 30:12]
    when writeEn : @[utils.scala 31:16]
      write mport MPORT = mem[requestAddr], clock
      MPORT <= writeData

  module CacheGenModule_7 :
    input clock : Clock
    input reset : Reset
    input requestAddr : UInt<7>
    output readData : UInt<512>
    input writeData : UInt<512>
    input writeEn : UInt<1>

    smem mem : UInt<512> [128] @[utils.scala 28:24]
    wire _readData_WIRE : UInt @[utils.scala 30:23]
    _readData_WIRE is invalid @[utils.scala 30:23]
    when UInt<1>("h1") : @[utils.scala 30:23]
      _readData_WIRE <= requestAddr @[utils.scala 30:23]
      node _readData_T = or(_readData_WIRE, UInt<7>("h0")) @[utils.scala 30:23]
      node _readData_T_1 = bits(_readData_T, 6, 0) @[utils.scala 30:23]
      read mport readData_MPORT = mem[_readData_T_1], clock @[utils.scala 30:23]
    readData <= readData_MPORT @[utils.scala 30:12]
    when writeEn : @[utils.scala 31:16]
      write mport MPORT = mem[requestAddr], clock
      MPORT <= writeData

  module CacheGenModule_8 :
    input clock : Clock
    input reset : Reset
    input requestAddr : UInt<7>
    output readData : UInt<512>
    input writeData : UInt<512>
    input writeEn : UInt<1>

    smem mem : UInt<512> [128] @[utils.scala 28:24]
    wire _readData_WIRE : UInt @[utils.scala 30:23]
    _readData_WIRE is invalid @[utils.scala 30:23]
    when UInt<1>("h1") : @[utils.scala 30:23]
      _readData_WIRE <= requestAddr @[utils.scala 30:23]
      node _readData_T = or(_readData_WIRE, UInt<7>("h0")) @[utils.scala 30:23]
      node _readData_T_1 = bits(_readData_T, 6, 0) @[utils.scala 30:23]
      read mport readData_MPORT = mem[_readData_T_1], clock @[utils.scala 30:23]
    readData <= readData_MPORT @[utils.scala 30:12]
    when writeEn : @[utils.scala 31:16]
      write mport MPORT = mem[requestAddr], clock
      MPORT <= writeData

  module CacheGenModule_9 :
    input clock : Clock
    input reset : Reset
    input requestAddr : UInt<7>
    output readData : UInt<96>
    input writeData : UInt<96>
    input writeEn : UInt<1>

    smem mem : UInt<96> [128] @[utils.scala 28:24]
    wire _readData_WIRE : UInt @[utils.scala 30:23]
    _readData_WIRE is invalid @[utils.scala 30:23]
    when UInt<1>("h1") : @[utils.scala 30:23]
      _readData_WIRE <= requestAddr @[utils.scala 30:23]
      node _readData_T = or(_readData_WIRE, UInt<7>("h0")) @[utils.scala 30:23]
      node _readData_T_1 = bits(_readData_T, 6, 0) @[utils.scala 30:23]
      read mport readData_MPORT = mem[_readData_T_1], clock @[utils.scala 30:23]
    readData <= readData_MPORT @[utils.scala 30:12]
    when writeEn : @[utils.scala 31:16]
      write mport MPORT = mem[requestAddr], clock
      MPORT <= writeData

  module CounterModule_6 :
    input clock : Clock
    input reset : Reset
    output count : UInt<2>
    input incrm : UInt<1>

    reg cntReg : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[utils.scala 15:23]
    node _cntReg_T = eq(cntReg, UInt<2>("h2")) @[utils.scala 16:33]
    node _cntReg_T_1 = and(incrm, _cntReg_T) @[utils.scala 16:23]
    node _cntReg_T_2 = add(cntReg, UInt<1>("h1")) @[utils.scala 17:35]
    node _cntReg_T_3 = tail(_cntReg_T_2, 1) @[utils.scala 17:35]
    node _cntReg_T_4 = mux(incrm, _cntReg_T_3, cntReg) @[utils.scala 17:20]
    node _cntReg_T_5 = mux(_cntReg_T_1, UInt<1>("h0"), _cntReg_T_4) @[utils.scala 16:16]
    cntReg <= _cntReg_T_5 @[utils.scala 16:10]
    count <= cntReg @[utils.scala 19:9]

  module MaxPeriodFibonacciLFSR_1 :
    input clock : Clock
    input reset : Reset
    output io : { flip seed : { valid : UInt<1>, bits : UInt<1>[2]}, flip increment : UInt<1>, out : UInt<1>[2]}

    wire _state_WIRE : UInt<1>[2] @[PRNG.scala 46:28]
    _state_WIRE[0] <= UInt<1>("h1") @[PRNG.scala 46:28]
    _state_WIRE[1] <= UInt<1>("h0") @[PRNG.scala 46:28]
    reg state : UInt<1>[2], clock with :
      reset => (reset, _state_WIRE) @[PRNG.scala 55:49]
    when io.increment : @[PRNG.scala 69:22]
      node _T = xor(state[1], state[0]) @[LFSR.scala 15:41]
      state[0] <= _T @[PRNG.scala 70:11]
      state[1] <= state[0] @[PRNG.scala 70:11]
    when io.seed.valid : @[PRNG.scala 73:22]
      state[0] <= io.seed.bits[0] @[PRNG.scala 74:11]
      state[1] <= io.seed.bits[1] @[PRNG.scala 74:11]
    io.out <= state @[PRNG.scala 78:10]

  module commitFifo_1 :
    input clock : Clock
    input reset : Reset
    output dataIn : { flip valid : UInt<1>, flip addr : UInt<32>}
    input dataOut : { flip valid : UInt<1>, flip addr : UInt<32>}
    input canAccept : UInt<1>
    output isEmpty : UInt<1>
    output isFull : UInt<1>
    input invalidateAddr : UInt<32>
    input invalidateEnable : UInt<1>

    dataOut.valid <= UInt<1>("h0") @[commitFifo.scala 26:17]
    dataOut.addr <= UInt<1>("h0") @[commitFifo.scala 27:16]
    isEmpty <= UInt<1>("h0") @[commitFifo.scala 29:11]
    reg memReg : { valid : UInt<1>, addr : UInt<32>}[8], clock with :
      reset => (UInt<1>("h0"), memReg) @[commitFifo.scala 45:19]
    wire incrRead : UInt<1>
    incrRead <= UInt<1>("h0")
    wire incrWrite : UInt<1>
    incrWrite <= UInt<1>("h0")
    reg readPtr : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[commitFifo.scala 32:25]
    node _nextVal_T = eq(readPtr, UInt<3>("h7")) @[commitFifo.scala 33:30]
    node _nextVal_T_1 = add(readPtr, UInt<1>("h1")) @[commitFifo.scala 33:59]
    node _nextVal_T_2 = tail(_nextVal_T_1, 1) @[commitFifo.scala 33:59]
    node nextRead = mux(_nextVal_T, UInt<1>("h0"), _nextVal_T_2) @[commitFifo.scala 33:22]
    when incrRead : @[commitFifo.scala 34:17]
      readPtr <= nextRead @[commitFifo.scala 35:14]
    reg writePtr : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[commitFifo.scala 32:25]
    node _nextVal_T_3 = eq(writePtr, UInt<3>("h7")) @[commitFifo.scala 33:30]
    node _nextVal_T_4 = add(writePtr, UInt<1>("h1")) @[commitFifo.scala 33:59]
    node _nextVal_T_5 = tail(_nextVal_T_4, 1) @[commitFifo.scala 33:59]
    node nextWrite = mux(_nextVal_T_3, UInt<1>("h0"), _nextVal_T_5) @[commitFifo.scala 33:22]
    when incrWrite : @[commitFifo.scala 34:17]
      writePtr <= nextWrite @[commitFifo.scala 35:14]
    reg emptyReg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h1")) @[commitFifo.scala 52:25]
    reg fullReg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[commitFifo.scala 53:24]
    node op = cat(dataIn.valid, canAccept) @[commitFifo.scala 55:25]
    wire doWrite : UInt<1>
    doWrite <= UInt<1>("h0")
    node _T = eq(UInt<1>("h0"), op) @[commitFifo.scala 57:15]
    when _T : @[commitFifo.scala 57:15]
      skip
    else :
      node _T_1 = eq(UInt<1>("h1"), op) @[commitFifo.scala 57:15]
      when _T_1 : @[commitFifo.scala 57:15]
        node _T_2 = eq(emptyReg, UInt<1>("h0")) @[commitFifo.scala 60:13]
        when _T_2 : @[commitFifo.scala 60:26]
          fullReg <= UInt<1>("h0") @[commitFifo.scala 61:17]
          node _emptyReg_T = eq(nextRead, writePtr) @[commitFifo.scala 62:30]
          emptyReg <= _emptyReg_T @[commitFifo.scala 62:18]
          incrRead <= UInt<1>("h1") @[commitFifo.scala 63:18]
      else :
        node _T_3 = eq(UInt<2>("h2"), op) @[commitFifo.scala 57:15]
        when _T_3 : @[commitFifo.scala 57:15]
          node _T_4 = eq(fullReg, UInt<1>("h0")) @[commitFifo.scala 67:13]
          when _T_4 : @[commitFifo.scala 67:25]
            doWrite <= UInt<1>("h1") @[commitFifo.scala 68:17]
            emptyReg <= UInt<1>("h0") @[commitFifo.scala 69:18]
            node _fullReg_T = eq(nextWrite, readPtr) @[commitFifo.scala 70:30]
            fullReg <= _fullReg_T @[commitFifo.scala 70:17]
            incrWrite <= UInt<1>("h1") @[commitFifo.scala 71:19]
        else :
          node _T_5 = eq(UInt<2>("h3"), op) @[commitFifo.scala 57:15]
          when _T_5 : @[commitFifo.scala 57:15]
            node _T_6 = eq(fullReg, UInt<1>("h0")) @[commitFifo.scala 75:13]
            when _T_6 : @[commitFifo.scala 75:25]
              doWrite <= UInt<1>("h1") @[commitFifo.scala 76:17]
              emptyReg <= UInt<1>("h0") @[commitFifo.scala 77:18]
              when emptyReg : @[commitFifo.scala 78:26]
                fullReg <= UInt<1>("h0") @[commitFifo.scala 79:19]
              else :
                node _fullReg_T_1 = eq(nextWrite, nextRead) @[commitFifo.scala 81:32]
                fullReg <= _fullReg_T_1 @[commitFifo.scala 81:19]
              incrWrite <= UInt<1>("h1") @[commitFifo.scala 83:19]
            node _T_7 = eq(emptyReg, UInt<1>("h0")) @[commitFifo.scala 85:13]
            when _T_7 : @[commitFifo.scala 85:26]
              fullReg <= UInt<1>("h0") @[commitFifo.scala 86:17]
              when fullReg : @[commitFifo.scala 87:23]
                emptyReg <= UInt<1>("h0") @[commitFifo.scala 88:18]
              else :
                node _emptyReg_T_1 = eq(nextRead, nextWrite) @[commitFifo.scala 90:30]
                emptyReg <= _emptyReg_T_1 @[commitFifo.scala 90:18]
              incrRead <= UInt<1>("h1") @[commitFifo.scala 92:18]
    when doWrite : @[commitFifo.scala 97:19]
      memReg[writePtr].addr <= dataIn.addr @[commitFifo.scala 98:22]
      memReg[writePtr].valid <= dataIn.valid @[commitFifo.scala 98:22]
    dataOut.addr <= memReg[readPtr].addr @[commitFifo.scala 100:11]
    dataOut.valid <= memReg[readPtr].valid @[commitFifo.scala 100:11]
    when invalidateEnable : @[commitFifo.scala 104:26]
      node _T_8 = eq(memReg[0].addr, invalidateAddr) @[commitFifo.scala 106:27]
      when _T_8 : @[commitFifo.scala 106:47]
        memReg[0].valid <= UInt<1>("h0") @[commitFifo.scala 107:25]
      node _T_9 = eq(memReg[1].addr, invalidateAddr) @[commitFifo.scala 106:27]
      when _T_9 : @[commitFifo.scala 106:47]
        memReg[1].valid <= UInt<1>("h0") @[commitFifo.scala 107:25]
      node _T_10 = eq(memReg[2].addr, invalidateAddr) @[commitFifo.scala 106:27]
      when _T_10 : @[commitFifo.scala 106:47]
        memReg[2].valid <= UInt<1>("h0") @[commitFifo.scala 107:25]
      node _T_11 = eq(memReg[3].addr, invalidateAddr) @[commitFifo.scala 106:27]
      when _T_11 : @[commitFifo.scala 106:47]
        memReg[3].valid <= UInt<1>("h0") @[commitFifo.scala 107:25]
      node _T_12 = eq(memReg[4].addr, invalidateAddr) @[commitFifo.scala 106:27]
      when _T_12 : @[commitFifo.scala 106:47]
        memReg[4].valid <= UInt<1>("h0") @[commitFifo.scala 107:25]
      node _T_13 = eq(memReg[5].addr, invalidateAddr) @[commitFifo.scala 106:27]
      when _T_13 : @[commitFifo.scala 106:47]
        memReg[5].valid <= UInt<1>("h0") @[commitFifo.scala 107:25]
      node _T_14 = eq(memReg[6].addr, invalidateAddr) @[commitFifo.scala 106:27]
      when _T_14 : @[commitFifo.scala 106:47]
        memReg[6].valid <= UInt<1>("h0") @[commitFifo.scala 107:25]
      node _T_15 = eq(memReg[7].addr, invalidateAddr) @[commitFifo.scala 106:27]
      when _T_15 : @[commitFifo.scala 106:47]
        memReg[7].valid <= UInt<1>("h0") @[commitFifo.scala 107:25]
    isEmpty <= emptyReg @[commitFifo.scala 112:11]
    isFull <= fullReg @[commitFifo.scala 113:10]

  module cacheLookup_1 :
    input clock : Clock
    input reset : Reset
    output cacheRequest : { flip instruction : UInt<32>, ready : UInt<1>, flip valid : UInt<1>, accepted : UInt<1>, flip writeEn : UInt<1>, flip address : UInt<32>}
    input coherencyRequest : { flip ready : UInt<1>, valid : UInt<1>, flip accepted : UInt<1>, address : UInt<32>, dataReq : UInt<1>, invalidateReq : UInt<1>}
    input loadData : { flip ready : UInt<1>, valid : UInt<1>, data : UInt<512>, response : UInt<2>}
    input memoryRequest : { ready : UInt<1>, flip valid : UInt<1>, flip writeEn : UInt<1>, flip address : UInt<32>, flip data : UInt<512>, flip instruction : UInt<32>, flip isUnique : UInt<1>, flip isClean : UInt<1>}
    output responseOut : { flip ready : UInt<1>, valid : UInt<1>, data : UInt<64>, response : UInt<2>}
    output storeDataIn : { flip valid : UInt<1>, flip data : UInt<64>, ready : UInt<1>}
    input branchFail : UInt<1>
    output loadCommit : { flip ready : UInt<1>, valid : UInt<1>, state : UInt<1>}
    input coherencyReceived : UInt<1>
    output isAtomicsInOperation : UInt<1>

    cacheRequest.ready <= UInt<1>("h0") @[cacheLookup.scala 22:22]
    cacheRequest.accepted <= UInt<1>("h0") @[cacheLookup.scala 23:25]
    loadData.ready <= UInt<1>("h0") @[cacheLookup.scala 25:18]
    memoryRequest.valid <= UInt<1>("h0") @[cacheLookup.scala 27:23]
    memoryRequest.writeEn <= UInt<1>("h0") @[cacheLookup.scala 28:25]
    memoryRequest.address <= UInt<1>("h0") @[cacheLookup.scala 29:25]
    memoryRequest.data <= UInt<1>("h0") @[cacheLookup.scala 30:22]
    memoryRequest.isUnique <= UInt<1>("h0") @[cacheLookup.scala 31:26]
    memoryRequest.isClean <= UInt<1>("h0") @[cacheLookup.scala 32:25]
    memoryRequest.instruction <= UInt<1>("h0") @[cacheLookup.scala 33:29]
    responseOut.valid <= UInt<1>("h0") @[cacheLookup.scala 35:21]
    responseOut.data <= UInt<1>("h0") @[cacheLookup.scala 36:20]
    responseOut.response <= UInt<1>("h0") @[cacheLookup.scala 37:24]
    storeDataIn.ready <= UInt<1>("h0") @[cacheLookup.scala 39:21]
    coherencyRequest.ready <= UInt<1>("h0") @[cacheLookup.scala 41:26]
    coherencyRequest.accepted <= UInt<1>("h0") @[cacheLookup.scala 42:29]
    loadCommit.valid <= UInt<1>("h0") @[cacheLookup.scala 44:20]
    loadCommit.state <= UInt<1>("h0") @[cacheLookup.scala 45:20]
    wire isLoadWire : UInt<1>
    isLoadWire <= UInt<1>("h0")
    wire isStoreWire : UInt<1>
    isStoreWire <= UInt<1>("h0")
    wire isCoherentWire : UInt<1>
    isCoherentWire <= UInt<1>("h0")
    wire isAtomicsWire : UInt<1>
    isAtomicsWire <= UInt<1>("h0")
    wire isLRWire : UInt<1>
    isLRWire <= UInt<1>("h0")
    wire isSCWire : UInt<1>
    isSCWire <= UInt<1>("h0")
    wire freeInputBuffer : UInt<1>
    freeInputBuffer <= UInt<1>("h0")
    wire commitFIFOFull : UInt<1>
    commitFIFOFull <= UInt<1>("h0")
    wire atomicsInOperationWire : UInt<1>
    atomicsInOperationWire <= UInt<1>("h0")
    wire _inputBuffer_WIRE : { address : UInt<32>, writeEn : UInt<1>, instruction : UInt<32>, dataReq : UInt<1>, invalidateReq : UInt<1>}
    _inputBuffer_WIRE.invalidateReq <= UInt<1>("h0")
    _inputBuffer_WIRE.dataReq <= UInt<1>("h0")
    _inputBuffer_WIRE.instruction <= UInt<1>("h0")
    _inputBuffer_WIRE.writeEn <= UInt<1>("h0")
    _inputBuffer_WIRE.address <= UInt<1>("h0")
    reg inputBuffer : { address : UInt<32>, writeEn : UInt<1>, instruction : UInt<32>, dataReq : UInt<1>, invalidateReq : UInt<1>}, clock with :
      reset => (reset, _inputBuffer_WIRE) @[cacheLookup.scala 62:28]
    reg inputBufferState : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[cacheLookup.scala 77:33]
    node _T = eq(UInt<2>("h0"), inputBufferState) @[cacheLookup.scala 79:27]
    when _T : @[cacheLookup.scala 79:27]
      node _cacheRequest_ready_T = eq(commitFIFOFull, UInt<1>("h0")) @[cacheLookup.scala 81:29]
      cacheRequest.ready <= _cacheRequest_ready_T @[cacheLookup.scala 81:26]
      node _coherencyRequest_ready_T = eq(atomicsInOperationWire, UInt<1>("h0")) @[cacheLookup.scala 82:43]
      node _coherencyRequest_ready_T_1 = and(UInt<1>("h1"), _coherencyRequest_ready_T) @[cacheLookup.scala 82:40]
      coherencyRequest.ready <= _coherencyRequest_ready_T_1 @[cacheLookup.scala 82:30]
      node _T_1 = and(cacheRequest.valid, atomicsInOperationWire) @[cacheLookup.scala 83:31]
      when _T_1 : @[cacheLookup.scala 83:57]
        inputBuffer.address <= cacheRequest.address @[cacheLookup.scala 84:29]
        inputBuffer.writeEn <= cacheRequest.writeEn @[cacheLookup.scala 85:29]
        inputBuffer.instruction <= cacheRequest.instruction @[cacheLookup.scala 86:33]
      else :
        when coherencyRequest.valid : @[cacheLookup.scala 87:42]
          inputBuffer.address <= coherencyRequest.address @[cacheLookup.scala 88:29]
          inputBuffer.dataReq <= coherencyRequest.dataReq @[cacheLookup.scala 89:29]
          inputBuffer.invalidateReq <= coherencyRequest.invalidateReq @[cacheLookup.scala 90:35]
        else :
          node _T_2 = eq(commitFIFOFull, UInt<1>("h0")) @[cacheLookup.scala 91:41]
          node _T_3 = and(cacheRequest.valid, _T_2) @[cacheLookup.scala 91:38]
          node _T_4 = eq(coherencyReceived, UInt<1>("h0")) @[cacheLookup.scala 91:60]
          node _T_5 = and(_T_3, _T_4) @[cacheLookup.scala 91:57]
          when _T_5 : @[cacheLookup.scala 91:79]
            inputBuffer.address <= cacheRequest.address @[cacheLookup.scala 92:29]
            inputBuffer.writeEn <= cacheRequest.writeEn @[cacheLookup.scala 93:29]
            inputBuffer.instruction <= cacheRequest.instruction @[cacheLookup.scala 94:33]
      node _T_6 = and(cacheRequest.valid, atomicsInOperationWire) @[cacheLookup.scala 96:31]
      when _T_6 : @[cacheLookup.scala 96:57]
        inputBufferState <= UInt<2>("h1") @[cacheLookup.scala 97:26]
      else :
        when coherencyRequest.valid : @[cacheLookup.scala 98:42]
          inputBufferState <= UInt<2>("h2") @[cacheLookup.scala 99:26]
        else :
          node _T_7 = eq(coherencyRequest.valid, UInt<1>("h0")) @[cacheLookup.scala 100:42]
          node _T_8 = and(cacheRequest.valid, _T_7) @[cacheLookup.scala 100:39]
          node _T_9 = eq(coherencyReceived, UInt<1>("h0")) @[cacheLookup.scala 100:69]
          node _T_10 = and(_T_8, _T_9) @[cacheLookup.scala 100:66]
          when _T_10 : @[cacheLookup.scala 100:88]
            node _inputBufferState_T = eq(commitFIFOFull, UInt<1>("h0")) @[cacheLookup.scala 101:33]
            node _inputBufferState_T_1 = mux(_inputBufferState_T, UInt<2>("h1"), UInt<2>("h0")) @[cacheLookup.scala 101:32]
            inputBufferState <= _inputBufferState_T_1 @[cacheLookup.scala 101:26]
          else :
            inputBufferState <= UInt<2>("h0") @[cacheLookup.scala 103:26]
    else :
      node _T_11 = eq(UInt<2>("h1"), inputBufferState) @[cacheLookup.scala 79:27]
      when _T_11 : @[cacheLookup.scala 79:27]
        node _cacheRequest_accepted_T = eq(freeInputBuffer, UInt<1>("h0")) @[cacheLookup.scala 107:32]
        cacheRequest.accepted <= _cacheRequest_accepted_T @[cacheLookup.scala 107:29]
        node _inputBufferState_T_2 = mux(freeInputBuffer, UInt<2>("h0"), UInt<2>("h1")) @[cacheLookup.scala 108:30]
        inputBufferState <= _inputBufferState_T_2 @[cacheLookup.scala 108:24]
      else :
        node _T_12 = eq(UInt<2>("h2"), inputBufferState) @[cacheLookup.scala 79:27]
        when _T_12 : @[cacheLookup.scala 79:27]
          node _coherencyRequest_accepted_T = eq(freeInputBuffer, UInt<1>("h0")) @[cacheLookup.scala 111:36]
          coherencyRequest.accepted <= _coherencyRequest_accepted_T @[cacheLookup.scala 111:33]
          node _inputBufferState_T_3 = mux(freeInputBuffer, UInt<2>("h0"), UInt<2>("h2")) @[cacheLookup.scala 112:30]
          inputBufferState <= _inputBufferState_T_3 @[cacheLookup.scala 112:24]
    node _T_13 = neq(inputBufferState, UInt<2>("h0")) @[cacheLookup.scala 116:25]
    when _T_13 : @[cacheLookup.scala 116:35]
      node _isLoadWire_T = eq(inputBuffer.writeEn, UInt<1>("h0")) @[cacheLookup.scala 118:20]
      node _isLoadWire_T_1 = bits(inputBuffer.instruction, 1, 0) @[cacheLookup.scala 118:67]
      node _isLoadWire_T_2 = eq(_isLoadWire_T_1, UInt<2>("h3")) @[cacheLookup.scala 118:73]
      node _isLoadWire_T_3 = and(_isLoadWire_T, _isLoadWire_T_2) @[cacheLookup.scala 118:41]
      isLoadWire <= _isLoadWire_T_3 @[cacheLookup.scala 118:16]
      node _isStoreWire_T = bits(inputBuffer.instruction, 1, 0) @[cacheLookup.scala 119:67]
      node _isStoreWire_T_1 = eq(_isStoreWire_T, UInt<2>("h3")) @[cacheLookup.scala 119:73]
      node _isStoreWire_T_2 = and(inputBuffer.writeEn, _isStoreWire_T_1) @[cacheLookup.scala 119:41]
      isStoreWire <= _isStoreWire_T_2 @[cacheLookup.scala 119:17]
      node _isAtomicsWire_T = bits(inputBuffer.instruction, 6, 0) @[cacheLookup.scala 120:46]
      node _isAtomicsWire_T_1 = eq(_isAtomicsWire_T, UInt<6>("h2f")) @[cacheLookup.scala 120:52]
      isAtomicsWire <= _isAtomicsWire_T_1 @[cacheLookup.scala 120:19]
      node _isLRWire_T = bits(inputBuffer.instruction, 31, 27) @[cacheLookup.scala 121:40]
      node _isLRWire_T_1 = eq(_isLRWire_T, UInt<2>("h2")) @[cacheLookup.scala 121:48]
      node _isLRWire_T_2 = and(_isLRWire_T_1, isAtomicsWire) @[cacheLookup.scala 121:63]
      isLRWire <= _isLRWire_T_2 @[cacheLookup.scala 121:14]
      node _isSCWire_T = bits(inputBuffer.instruction, 31, 27) @[cacheLookup.scala 122:40]
      node _isSCWire_T_1 = eq(_isSCWire_T, UInt<2>("h3")) @[cacheLookup.scala 122:48]
      node _isSCWire_T_2 = and(_isSCWire_T_1, isAtomicsWire) @[cacheLookup.scala 122:63]
      isSCWire <= _isSCWire_T_2 @[cacheLookup.scala 122:14]
    node _isCoherentWire_T = eq(inputBufferState, UInt<2>("h2")) @[cacheLookup.scala 125:39]
    isCoherentWire <= _isCoherentWire_T @[cacheLookup.scala 125:18]
    reg branchFailReg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[cacheLookup.scala 128:30]
    when branchFail : @[cacheLookup.scala 129:19]
      branchFailReg <= branchFail @[cacheLookup.scala 130:19]
    node _T_14 = eq(inputBufferState, UInt<2>("h0")) @[cacheLookup.scala 132:25]
    node _T_15 = and(_T_14, branchFailReg) @[cacheLookup.scala 132:35]
    when _T_15 : @[cacheLookup.scala 132:52]
      branchFailReg <= UInt<1>("h0") @[cacheLookup.scala 133:19]
    node isBranchFailWire = or(branchFail, branchFailReg) @[cacheLookup.scala 135:37]
    wire _storeDataBuffer_WIRE : { valid : UInt<1>, data : UInt<64>}
    _storeDataBuffer_WIRE.data <= UInt<1>("h0")
    _storeDataBuffer_WIRE.valid <= UInt<1>("h0")
    reg storeDataBuffer : { valid : UInt<1>, data : UInt<64>}, clock with :
      reset => (reset, _storeDataBuffer_WIRE) @[cacheLookup.scala 138:32]
    reg storeDataBufferState : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[cacheLookup.scala 145:37]
    node _T_16 = eq(UInt<2>("h0"), storeDataBufferState) @[cacheLookup.scala 146:31]
    when _T_16 : @[cacheLookup.scala 146:31]
      when storeDataIn.valid : @[cacheLookup.scala 148:30]
        storeDataBuffer.data <= storeDataIn.data @[cacheLookup.scala 149:30]
      node _storeDataBufferState_T = mux(storeDataIn.valid, UInt<2>("h1"), UInt<2>("h0")) @[cacheLookup.scala 151:34]
      storeDataBufferState <= _storeDataBufferState_T @[cacheLookup.scala 151:28]
    else :
      node _T_17 = eq(UInt<2>("h1"), storeDataBufferState) @[cacheLookup.scala 146:31]
      when _T_17 : @[cacheLookup.scala 146:31]
        node _storeDataBufferState_T_1 = mux(freeInputBuffer, UInt<2>("h0"), UInt<2>("h1")) @[cacheLookup.scala 154:34]
        storeDataBufferState <= _storeDataBufferState_T_1 @[cacheLookup.scala 154:28]
    wire _reservationRegister_WIRE : { address : UInt<32>, reserved : UInt<1>, size : UInt<1>}
    _reservationRegister_WIRE.size <= UInt<1>("h0")
    _reservationRegister_WIRE.reserved <= UInt<1>("h0")
    _reservationRegister_WIRE.address <= UInt<1>("h0")
    reg reservationRegister : { address : UInt<32>, reserved : UInt<1>, size : UInt<1>}, clock with :
      reset => (reset, _reservationRegister_WIRE) @[cacheLookup.scala 159:36]
    reg atomicsInOperationReg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[cacheLookup.scala 171:38]
    node _T_18 = eq(atomicsInOperationReg, UInt<1>("h0")) @[cacheLookup.scala 172:8]
    when _T_18 : @[cacheLookup.scala 172:31]
      node _atomicsInOperationReg_T = and(isAtomicsWire, isLoadWire) @[cacheLookup.scala 173:44]
      node _atomicsInOperationReg_T_1 = eq(isLRWire, UInt<1>("h0")) @[cacheLookup.scala 173:61]
      node _atomicsInOperationReg_T_2 = and(_atomicsInOperationReg_T, _atomicsInOperationReg_T_1) @[cacheLookup.scala 173:58]
      atomicsInOperationReg <= _atomicsInOperationReg_T_2 @[cacheLookup.scala 173:27]
    else :
      node _atomicsInOperationReg_T_3 = and(isAtomicsWire, isStoreWire) @[cacheLookup.scala 175:68]
      node _atomicsInOperationReg_T_4 = eq(isSCWire, UInt<1>("h0")) @[cacheLookup.scala 175:86]
      node _atomicsInOperationReg_T_5 = and(_atomicsInOperationReg_T_3, _atomicsInOperationReg_T_4) @[cacheLookup.scala 175:83]
      node _atomicsInOperationReg_T_6 = and(freeInputBuffer, _atomicsInOperationReg_T_5) @[cacheLookup.scala 175:50]
      node _atomicsInOperationReg_T_7 = mux(_atomicsInOperationReg_T_6, UInt<1>("h0"), atomicsInOperationReg) @[cacheLookup.scala 175:33]
      atomicsInOperationReg <= _atomicsInOperationReg_T_7 @[cacheLookup.scala 175:27]
    atomicsInOperationWire <= atomicsInOperationReg @[cacheLookup.scala 177:26]
    isAtomicsInOperation <= atomicsInOperationWire @[cacheLookup.scala 178:24]
    inst dataBRAM_0 of CacheGenModule_5 @[cacheLookup.scala 186:39]
    dataBRAM_0.clock <= clock
    dataBRAM_0.reset <= reset
    inst dataBRAM_1 of CacheGenModule_6 @[cacheLookup.scala 186:39]
    dataBRAM_1.clock <= clock
    dataBRAM_1.reset <= reset
    inst dataBRAM_2 of CacheGenModule_7 @[cacheLookup.scala 186:39]
    dataBRAM_2.clock <= clock
    dataBRAM_2.reset <= reset
    inst dataBRAM_3 of CacheGenModule_8 @[cacheLookup.scala 186:39]
    dataBRAM_3.clock <= clock
    dataBRAM_3.reset <= reset
    dataBRAM_0.requestAddr <= UInt<1>("h0") @[cacheLookup.scala 192:22]
    dataBRAM_0.writeData <= UInt<1>("h0") @[cacheLookup.scala 193:20]
    dataBRAM_0.writeEn <= UInt<1>("h0") @[cacheLookup.scala 194:19]
    dataBRAM_1.requestAddr <= UInt<1>("h0") @[cacheLookup.scala 192:22]
    dataBRAM_1.writeData <= UInt<1>("h0") @[cacheLookup.scala 193:20]
    dataBRAM_1.writeEn <= UInt<1>("h0") @[cacheLookup.scala 194:19]
    dataBRAM_2.requestAddr <= UInt<1>("h0") @[cacheLookup.scala 192:22]
    dataBRAM_2.writeData <= UInt<1>("h0") @[cacheLookup.scala 193:20]
    dataBRAM_2.writeEn <= UInt<1>("h0") @[cacheLookup.scala 194:19]
    dataBRAM_3.requestAddr <= UInt<1>("h0") @[cacheLookup.scala 192:22]
    dataBRAM_3.writeData <= UInt<1>("h0") @[cacheLookup.scala 193:20]
    dataBRAM_3.writeEn <= UInt<1>("h0") @[cacheLookup.scala 194:19]
    wire dataBRAMVec_bundle : { readData : UInt<512>, writeEn : UInt<1>, writeData : UInt<512>, requestAddr : UInt<7>} @[cacheLookup.scala 198:22]
    dataBRAMVec_bundle.readData <= UInt<1>("h0") @[cacheLookup.scala 204:21]
    dataBRAMVec_bundle.writeEn <= UInt<1>("h0") @[cacheLookup.scala 205:20]
    dataBRAMVec_bundle.writeData <= UInt<1>("h0") @[cacheLookup.scala 206:22]
    dataBRAMVec_bundle.requestAddr <= UInt<1>("h0") @[cacheLookup.scala 207:24]
    wire dataBRAMVec_bundle_1 : { readData : UInt<512>, writeEn : UInt<1>, writeData : UInt<512>, requestAddr : UInt<7>} @[cacheLookup.scala 198:22]
    dataBRAMVec_bundle_1.readData <= UInt<1>("h0") @[cacheLookup.scala 204:21]
    dataBRAMVec_bundle_1.writeEn <= UInt<1>("h0") @[cacheLookup.scala 205:20]
    dataBRAMVec_bundle_1.writeData <= UInt<1>("h0") @[cacheLookup.scala 206:22]
    dataBRAMVec_bundle_1.requestAddr <= UInt<1>("h0") @[cacheLookup.scala 207:24]
    wire dataBRAMVec_bundle_2 : { readData : UInt<512>, writeEn : UInt<1>, writeData : UInt<512>, requestAddr : UInt<7>} @[cacheLookup.scala 198:22]
    dataBRAMVec_bundle_2.readData <= UInt<1>("h0") @[cacheLookup.scala 204:21]
    dataBRAMVec_bundle_2.writeEn <= UInt<1>("h0") @[cacheLookup.scala 205:20]
    dataBRAMVec_bundle_2.writeData <= UInt<1>("h0") @[cacheLookup.scala 206:22]
    dataBRAMVec_bundle_2.requestAddr <= UInt<1>("h0") @[cacheLookup.scala 207:24]
    wire dataBRAMVec_bundle_3 : { readData : UInt<512>, writeEn : UInt<1>, writeData : UInt<512>, requestAddr : UInt<7>} @[cacheLookup.scala 198:22]
    dataBRAMVec_bundle_3.readData <= UInt<1>("h0") @[cacheLookup.scala 204:21]
    dataBRAMVec_bundle_3.writeEn <= UInt<1>("h0") @[cacheLookup.scala 205:20]
    dataBRAMVec_bundle_3.writeData <= UInt<1>("h0") @[cacheLookup.scala 206:22]
    dataBRAMVec_bundle_3.requestAddr <= UInt<1>("h0") @[cacheLookup.scala 207:24]
    wire dataBRAMVec : { readData : UInt<512>, writeEn : UInt<1>, writeData : UInt<512>, requestAddr : UInt<7>}[4] @[cacheLookup.scala 197:28]
    dataBRAMVec[0] <= dataBRAMVec_bundle @[cacheLookup.scala 197:28]
    dataBRAMVec[1] <= dataBRAMVec_bundle_1 @[cacheLookup.scala 197:28]
    dataBRAMVec[2] <= dataBRAMVec_bundle_2 @[cacheLookup.scala 197:28]
    dataBRAMVec[3] <= dataBRAMVec_bundle_3 @[cacheLookup.scala 197:28]
    dataBRAMVec[0].readData <= dataBRAM_0.readData @[cacheLookup.scala 213:18]
    dataBRAM_0.writeEn <= dataBRAMVec[0].writeEn @[cacheLookup.scala 214:18]
    dataBRAM_0.writeData <= dataBRAMVec[0].writeData @[cacheLookup.scala 215:20]
    dataBRAM_0.requestAddr <= dataBRAMVec[0].requestAddr @[cacheLookup.scala 216:22]
    dataBRAMVec[1].readData <= dataBRAM_1.readData @[cacheLookup.scala 213:18]
    dataBRAM_1.writeEn <= dataBRAMVec[1].writeEn @[cacheLookup.scala 214:18]
    dataBRAM_1.writeData <= dataBRAMVec[1].writeData @[cacheLookup.scala 215:20]
    dataBRAM_1.requestAddr <= dataBRAMVec[1].requestAddr @[cacheLookup.scala 216:22]
    dataBRAMVec[2].readData <= dataBRAM_2.readData @[cacheLookup.scala 213:18]
    dataBRAM_2.writeEn <= dataBRAMVec[2].writeEn @[cacheLookup.scala 214:18]
    dataBRAM_2.writeData <= dataBRAMVec[2].writeData @[cacheLookup.scala 215:20]
    dataBRAM_2.requestAddr <= dataBRAMVec[2].requestAddr @[cacheLookup.scala 216:22]
    dataBRAMVec[3].readData <= dataBRAM_3.readData @[cacheLookup.scala 213:18]
    dataBRAM_3.writeEn <= dataBRAMVec[3].writeEn @[cacheLookup.scala 214:18]
    dataBRAM_3.writeData <= dataBRAMVec[3].writeData @[cacheLookup.scala 215:20]
    dataBRAM_3.requestAddr <= dataBRAMVec[3].requestAddr @[cacheLookup.scala 216:22]
    inst tagBRAM of CacheGenModule_9 @[cacheLookup.scala 229:23]
    tagBRAM.clock <= clock
    tagBRAM.reset <= reset
    tagBRAM.requestAddr <= UInt<1>("h0") @[cacheLookup.scala 234:23]
    tagBRAM.writeData <= UInt<1>("h0") @[cacheLookup.scala 235:21]
    tagBRAM.writeEn <= UInt<1>("h0") @[cacheLookup.scala 236:20]
    reg cacheState : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[cacheLookup.scala 240:27]
    node _requestValidWire_T = neq(inputBufferState, UInt<2>("h0")) @[cacheLookup.scala 242:44]
    node _requestValidWire_T_1 = eq(freeInputBuffer, UInt<1>("h0")) @[cacheLookup.scala 242:58]
    node requestValidWire = and(_requestValidWire_T, _requestValidWire_T_1) @[cacheLookup.scala 242:55]
    inst delayCounter of CounterModule_6 @[cacheLookup.scala 244:28]
    delayCounter.clock <= clock
    delayCounter.reset <= reset
    delayCounter.incrm <= UInt<1>("h0") @[cacheLookup.scala 245:22]
    delayCounter.reset <= UInt<1>("h0") @[cacheLookup.scala 246:22]
    node _dataBRAMVec_0_requestAddr_T = bits(inputBuffer.address, 12, 6) @[cacheLookup.scala 252:44]
    dataBRAMVec[0].requestAddr <= _dataBRAMVec_0_requestAddr_T @[cacheLookup.scala 252:22]
    node _dataBRAMVec_1_requestAddr_T = bits(inputBuffer.address, 12, 6) @[cacheLookup.scala 252:44]
    dataBRAMVec[1].requestAddr <= _dataBRAMVec_1_requestAddr_T @[cacheLookup.scala 252:22]
    node _dataBRAMVec_2_requestAddr_T = bits(inputBuffer.address, 12, 6) @[cacheLookup.scala 252:44]
    dataBRAMVec[2].requestAddr <= _dataBRAMVec_2_requestAddr_T @[cacheLookup.scala 252:22]
    node _dataBRAMVec_3_requestAddr_T = bits(inputBuffer.address, 12, 6) @[cacheLookup.scala 252:44]
    dataBRAMVec[3].requestAddr <= _dataBRAMVec_3_requestAddr_T @[cacheLookup.scala 252:22]
    node _tagBRAM_requestAddr_T = bits(inputBuffer.address, 12, 6) @[cacheLookup.scala 254:45]
    tagBRAM.requestAddr <= _tagBRAM_requestAddr_T @[cacheLookup.scala 254:23]
    wire _matchFoundReg_WIRE : UInt<1>[4] @[cacheLookup.scala 256:38]
    _matchFoundReg_WIRE[0] <= UInt<1>("h0") @[cacheLookup.scala 256:38]
    _matchFoundReg_WIRE[1] <= UInt<1>("h0") @[cacheLookup.scala 256:38]
    _matchFoundReg_WIRE[2] <= UInt<1>("h0") @[cacheLookup.scala 256:38]
    _matchFoundReg_WIRE[3] <= UInt<1>("h0") @[cacheLookup.scala 256:38]
    reg matchFoundReg : UInt<1>[4], clock with :
      reset => (reset, _matchFoundReg_WIRE) @[cacheLookup.scala 256:30]
    wire resultWire : UInt<64>
    resultWire <= UInt<64>("h0")
    reg receivedCacheLine : UInt<512>, clock with :
      reset => (reset, UInt<512>("h0")) @[cacheLookup.scala 260:34]
    reg receivedResponse : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[cacheLookup.scala 261:33]
    reg writeBackCacheLine : UInt<512>, clock with :
      reset => (reset, UInt<512>("h0")) @[cacheLookup.scala 263:35]
    inst lfsr_prng of MaxPeriodFibonacciLFSR_1 @[PRNG.scala 91:22]
    lfsr_prng.clock <= clock
    lfsr_prng.reset <= reset
    lfsr_prng.io.seed.valid <= UInt<1>("h0") @[PRNG.scala 92:24]
    lfsr_prng.io.seed.bits[0] is invalid @[PRNG.scala 93:23]
    lfsr_prng.io.seed.bits[1] is invalid @[PRNG.scala 93:23]
    lfsr_prng.io.increment <= UInt<1>("h1") @[PRNG.scala 94:23]
    node lfsr = cat(lfsr_prng.io.out[1], lfsr_prng.io.out[0]) @[PRNG.scala 95:17]
    node randomValue = rem(lfsr, UInt<3>("h4")) @[cacheLookup.scala 267:26]
    node _T_19 = eq(UInt<3>("h0"), cacheState) @[cacheLookup.scala 269:21]
    when _T_19 : @[cacheLookup.scala 269:21]
      delayCounter.reset <= UInt<1>("h1") @[cacheLookup.scala 271:26]
      node _cacheState_T = eq(isBranchFailWire, UInt<1>("h0")) @[cacheLookup.scala 272:45]
      node _cacheState_T_1 = and(requestValidWire, _cacheState_T) @[cacheLookup.scala 272:42]
      node _cacheState_T_2 = eq(commitFIFOFull, UInt<1>("h0")) @[cacheLookup.scala 272:68]
      node _cacheState_T_3 = and(_cacheState_T_1, _cacheState_T_2) @[cacheLookup.scala 272:65]
      node _cacheState_T_4 = mux(_cacheState_T_3, UInt<3>("h1"), UInt<3>("h0")) @[cacheLookup.scala 272:24]
      cacheState <= _cacheState_T_4 @[cacheLookup.scala 272:18]
    else :
      node _T_20 = eq(UInt<3>("h1"), cacheState) @[cacheLookup.scala 269:21]
      when _T_20 : @[cacheLookup.scala 269:21]
        node _countCompleteWire_T = sub(UInt<2>("h2"), UInt<1>("h1")) @[cacheLookup.scala 275:62]
        node _countCompleteWire_T_1 = tail(_countCompleteWire_T, 1) @[cacheLookup.scala 275:62]
        node countCompleteWire = eq(delayCounter.count, _countCompleteWire_T_1) @[cacheLookup.scala 275:50]
        node _delayCounter_incrm_T = eq(countCompleteWire, UInt<1>("h0")) @[cacheLookup.scala 276:29]
        delayCounter.incrm <= _delayCounter_incrm_T @[cacheLookup.scala 276:26]
        when countCompleteWire : @[cacheLookup.scala 278:31]
          node _tagChunks_T = bits(tagBRAM.readData, 23, 0) @[cacheLookup.scala 281:27]
          node _tagChunks_T_1 = bits(tagBRAM.readData, 47, 24) @[cacheLookup.scala 281:27]
          node _tagChunks_T_2 = bits(tagBRAM.readData, 71, 48) @[cacheLookup.scala 281:27]
          node _tagChunks_T_3 = bits(tagBRAM.readData, 95, 72) @[cacheLookup.scala 281:27]
          wire tagChunks : UInt<24>[4] @[cacheLookup.scala 280:32]
          tagChunks[0] <= _tagChunks_T @[cacheLookup.scala 280:32]
          tagChunks[1] <= _tagChunks_T_1 @[cacheLookup.scala 280:32]
          tagChunks[2] <= _tagChunks_T_2 @[cacheLookup.scala 280:32]
          tagChunks[3] <= _tagChunks_T_3 @[cacheLookup.scala 280:32]
          wire _matchFoundVec_WIRE : UInt<1>[4] @[cacheLookup.scala 284:48]
          _matchFoundVec_WIRE[0] <= UInt<1>("h0") @[cacheLookup.scala 284:48]
          _matchFoundVec_WIRE[1] <= UInt<1>("h0") @[cacheLookup.scala 284:48]
          _matchFoundVec_WIRE[2] <= UInt<1>("h0") @[cacheLookup.scala 284:48]
          _matchFoundVec_WIRE[3] <= UInt<1>("h0") @[cacheLookup.scala 284:48]
          wire matchFoundVec : UInt<1>[4]
          matchFoundVec <= _matchFoundVec_WIRE
          node _matchFoundVec_0_T = bits(tagChunks[0], 18, 0) @[cacheLookup.scala 286:44]
          node _matchFoundVec_0_T_1 = bits(inputBuffer.address, 31, 13) @[cacheLookup.scala 287:52]
          node _matchFoundVec_0_T_2 = eq(_matchFoundVec_0_T, _matchFoundVec_0_T_1) @[cacheLookup.scala 287:29]
          matchFoundVec[0] <= _matchFoundVec_0_T_2 @[cacheLookup.scala 286:28]
          node _matchFoundVec_1_T = bits(tagChunks[1], 18, 0) @[cacheLookup.scala 286:44]
          node _matchFoundVec_1_T_1 = bits(inputBuffer.address, 31, 13) @[cacheLookup.scala 287:52]
          node _matchFoundVec_1_T_2 = eq(_matchFoundVec_1_T, _matchFoundVec_1_T_1) @[cacheLookup.scala 287:29]
          matchFoundVec[1] <= _matchFoundVec_1_T_2 @[cacheLookup.scala 286:28]
          node _matchFoundVec_2_T = bits(tagChunks[2], 18, 0) @[cacheLookup.scala 286:44]
          node _matchFoundVec_2_T_1 = bits(inputBuffer.address, 31, 13) @[cacheLookup.scala 287:52]
          node _matchFoundVec_2_T_2 = eq(_matchFoundVec_2_T, _matchFoundVec_2_T_1) @[cacheLookup.scala 287:29]
          matchFoundVec[2] <= _matchFoundVec_2_T_2 @[cacheLookup.scala 286:28]
          node _matchFoundVec_3_T = bits(tagChunks[3], 18, 0) @[cacheLookup.scala 286:44]
          node _matchFoundVec_3_T_1 = bits(inputBuffer.address, 31, 13) @[cacheLookup.scala 287:52]
          node _matchFoundVec_3_T_2 = eq(_matchFoundVec_3_T, _matchFoundVec_3_T_1) @[cacheLookup.scala 287:29]
          matchFoundVec[3] <= _matchFoundVec_3_T_2 @[cacheLookup.scala 286:28]
          node _hitTagWire_T = mux(matchFoundVec[2], UInt<2>("h2"), UInt<2>("h3")) @[Mux.scala 47:70]
          node _hitTagWire_T_1 = mux(matchFoundVec[1], UInt<1>("h1"), _hitTagWire_T) @[Mux.scala 47:70]
          node _hitTagWire_T_2 = mux(matchFoundVec[0], UInt<1>("h0"), _hitTagWire_T_1) @[Mux.scala 47:70]
          wire hitTagWire : UInt
          hitTagWire <= _hitTagWire_T_2
          node _validBitWire_T = or(hitTagWire, UInt<2>("h0"))
          node _validBitWire_T_1 = bits(_validBitWire_T, 1, 0)
          node _validBitWire_T_2 = bits(tagChunks[_validBitWire_T_1], 19, 19) @[cacheLookup.scala 290:58]
          wire validBitWire : UInt<1>
          validBitWire <= _validBitWire_T_2
          node _shareBitWire_T = or(hitTagWire, UInt<2>("h0"))
          node _shareBitWire_T_1 = bits(_shareBitWire_T, 1, 0)
          node _shareBitWire_T_2 = bits(tagChunks[_shareBitWire_T_1], 21, 21) @[cacheLookup.scala 291:58]
          wire shareBitWire : UInt<1>
          shareBitWire <= _shareBitWire_T_2
          node _isMissWire_T = or(matchFoundVec[0], matchFoundVec[1]) @[cacheLookup.scala 292:51]
          node _isMissWire_T_1 = or(_isMissWire_T, matchFoundVec[2]) @[cacheLookup.scala 292:51]
          node _isMissWire_T_2 = or(_isMissWire_T_1, matchFoundVec[3]) @[cacheLookup.scala 292:51]
          node _isMissWire_T_3 = and(_isMissWire_T_2, validBitWire) @[cacheLookup.scala 292:56]
          node isMissWire = eq(_isMissWire_T_3, UInt<1>("h0")) @[cacheLookup.scala 292:26]
          matchFoundReg <= matchFoundVec @[cacheLookup.scala 294:23]
          when isCoherentWire : @[cacheLookup.scala 296:29]
            cacheState <= UInt<3>("h6") @[cacheLookup.scala 297:22]
          else :
            when isMissWire : @[cacheLookup.scala 299:27]
              cacheState <= UInt<3>("h4") @[cacheLookup.scala 300:24]
            else :
              when isLoadWire : @[cacheLookup.scala 302:29]
                cacheState <= UInt<3>("h2") @[cacheLookup.scala 303:26]
              else :
                when shareBitWire : @[cacheLookup.scala 305:33]
                  cacheState <= UInt<3>("h4") @[cacheLookup.scala 306:28]
                else :
                  node _cacheState_T_5 = mux(isSCWire, UInt<3>("h2"), UInt<3>("h3")) @[cacheLookup.scala 308:34]
                  cacheState <= _cacheState_T_5 @[cacheLookup.scala 308:28]
      else :
        node _T_21 = eq(UInt<3>("h2"), cacheState) @[cacheLookup.scala 269:21]
        when _T_21 : @[cacheLookup.scala 269:21]
          node _tagChunks_T_4 = bits(tagBRAM.readData, 23, 0) @[cacheLookup.scala 318:25]
          node _tagChunks_T_5 = bits(tagBRAM.readData, 47, 24) @[cacheLookup.scala 318:25]
          node _tagChunks_T_6 = bits(tagBRAM.readData, 71, 48) @[cacheLookup.scala 318:25]
          node _tagChunks_T_7 = bits(tagBRAM.readData, 95, 72) @[cacheLookup.scala 318:25]
          wire tagChunks_1 : UInt<24>[4] @[cacheLookup.scala 317:30]
          tagChunks_1[0] <= _tagChunks_T_4 @[cacheLookup.scala 317:30]
          tagChunks_1[1] <= _tagChunks_T_5 @[cacheLookup.scala 317:30]
          tagChunks_1[2] <= _tagChunks_T_6 @[cacheLookup.scala 317:30]
          tagChunks_1[3] <= _tagChunks_T_7 @[cacheLookup.scala 317:30]
          node _hitTagWire_T_3 = mux(matchFoundReg[2], UInt<2>("h2"), UInt<2>("h3")) @[Mux.scala 47:70]
          node _hitTagWire_T_4 = mux(matchFoundReg[1], UInt<1>("h1"), _hitTagWire_T_3) @[Mux.scala 47:70]
          node _hitTagWire_T_5 = mux(matchFoundReg[0], UInt<1>("h0"), _hitTagWire_T_4) @[Mux.scala 47:70]
          wire hitTagWire_1 : UInt
          hitTagWire_1 <= _hitTagWire_T_5
          node _validBitWire_T_3 = or(hitTagWire_1, UInt<2>("h0"))
          node _validBitWire_T_4 = bits(_validBitWire_T_3, 1, 0)
          node _validBitWire_T_5 = bits(tagChunks_1[_validBitWire_T_4], 19, 19) @[cacheLookup.scala 321:56]
          wire validBitWire_1 : UInt<1>
          validBitWire_1 <= _validBitWire_T_5
          node _isMissWire_T_4 = or(matchFoundReg[0], matchFoundReg[1]) @[cacheLookup.scala 322:49]
          node _isMissWire_T_5 = or(_isMissWire_T_4, matchFoundReg[2]) @[cacheLookup.scala 322:49]
          node _isMissWire_T_6 = or(_isMissWire_T_5, matchFoundReg[3]) @[cacheLookup.scala 322:49]
          node _isMissWire_T_7 = and(_isMissWire_T_6, validBitWire_1) @[cacheLookup.scala 322:54]
          node isMissWire_1 = eq(_isMissWire_T_7, UInt<1>("h0")) @[cacheLookup.scala 322:24]
          when isLRWire : @[cacheLookup.scala 324:21]
            reservationRegister.address <= inputBuffer.address @[cacheLookup.scala 325:37]
            reservationRegister.reserved <= UInt<1>("h1") @[cacheLookup.scala 326:38]
            node _reservationRegister_size_T = bits(inputBuffer.instruction, 12, 12) @[cacheLookup.scala 327:60]
            reservationRegister.size <= _reservationRegister_size_T @[cacheLookup.scala 327:34]
          node _cacheLineChoosen_T = mux(matchFoundReg[2], UInt<2>("h2"), UInt<2>("h3")) @[Mux.scala 47:70]
          node _cacheLineChoosen_T_1 = mux(matchFoundReg[1], UInt<1>("h1"), _cacheLineChoosen_T) @[Mux.scala 47:70]
          node _cacheLineChoosen_T_2 = mux(matchFoundReg[0], UInt<1>("h0"), _cacheLineChoosen_T_1) @[Mux.scala 47:70]
          node cacheLineChoosen = mux(isMissWire_1, receivedCacheLine, dataBRAMVec[_cacheLineChoosen_T_2].readData) @[cacheLookup.scala 331:33]
          node _doubleWordChunks_T = bits(cacheLineChoosen, 63, 0) @[cacheLookup.scala 335:25]
          node _doubleWordChunks_T_1 = bits(cacheLineChoosen, 127, 64) @[cacheLookup.scala 335:25]
          node _doubleWordChunks_T_2 = bits(cacheLineChoosen, 191, 128) @[cacheLookup.scala 335:25]
          node _doubleWordChunks_T_3 = bits(cacheLineChoosen, 255, 192) @[cacheLookup.scala 335:25]
          node _doubleWordChunks_T_4 = bits(cacheLineChoosen, 319, 256) @[cacheLookup.scala 335:25]
          node _doubleWordChunks_T_5 = bits(cacheLineChoosen, 383, 320) @[cacheLookup.scala 335:25]
          node _doubleWordChunks_T_6 = bits(cacheLineChoosen, 447, 384) @[cacheLookup.scala 335:25]
          node _doubleWordChunks_T_7 = bits(cacheLineChoosen, 511, 448) @[cacheLookup.scala 335:25]
          wire doubleWordChunks : UInt<64>[8] @[cacheLookup.scala 334:37]
          doubleWordChunks[0] <= _doubleWordChunks_T @[cacheLookup.scala 334:37]
          doubleWordChunks[1] <= _doubleWordChunks_T_1 @[cacheLookup.scala 334:37]
          doubleWordChunks[2] <= _doubleWordChunks_T_2 @[cacheLookup.scala 334:37]
          doubleWordChunks[3] <= _doubleWordChunks_T_3 @[cacheLookup.scala 334:37]
          doubleWordChunks[4] <= _doubleWordChunks_T_4 @[cacheLookup.scala 334:37]
          doubleWordChunks[5] <= _doubleWordChunks_T_5 @[cacheLookup.scala 334:37]
          doubleWordChunks[6] <= _doubleWordChunks_T_6 @[cacheLookup.scala 334:37]
          doubleWordChunks[7] <= _doubleWordChunks_T_7 @[cacheLookup.scala 334:37]
          node _doubleWordChoosen_T = bits(inputBuffer.address, 5, 3) @[cacheLookup.scala 337:67]
          node _shiftAmount_T = bits(inputBuffer.instruction, 13, 12) @[cacheLookup.scala 338:56]
          node shiftAmount = dshl(UInt<1>("h1"), _shiftAmount_T) @[cacheLookup.scala 338:30]
          node _section_T = mul(UInt<4>("h8"), shiftAmount) @[cacheLookup.scala 339:33]
          node _section_T_1 = dshl(UInt<1>("h1"), _section_T) @[cacheLookup.scala 339:26]
          node _section_T_2 = sub(_section_T_1, UInt<1>("h1")) @[cacheLookup.scala 339:48]
          node section = tail(_section_T_2, 1) @[cacheLookup.scala 339:48]
          node _byteChunks_T = bits(doubleWordChunks[_doubleWordChoosen_T], 7, 0) @[cacheLookup.scala 341:26]
          node _byteChunks_T_1 = bits(doubleWordChunks[_doubleWordChoosen_T], 15, 8) @[cacheLookup.scala 341:26]
          node _byteChunks_T_2 = bits(doubleWordChunks[_doubleWordChoosen_T], 23, 16) @[cacheLookup.scala 341:26]
          node _byteChunks_T_3 = bits(doubleWordChunks[_doubleWordChoosen_T], 31, 24) @[cacheLookup.scala 341:26]
          node _byteChunks_T_4 = bits(doubleWordChunks[_doubleWordChoosen_T], 39, 32) @[cacheLookup.scala 341:26]
          node _byteChunks_T_5 = bits(doubleWordChunks[_doubleWordChoosen_T], 47, 40) @[cacheLookup.scala 341:26]
          node _byteChunks_T_6 = bits(doubleWordChunks[_doubleWordChoosen_T], 55, 48) @[cacheLookup.scala 341:26]
          node _byteChunks_T_7 = bits(doubleWordChunks[_doubleWordChoosen_T], 63, 56) @[cacheLookup.scala 341:26]
          wire byteChunks : UInt<8>[8] @[cacheLookup.scala 340:31]
          byteChunks[0] <= _byteChunks_T @[cacheLookup.scala 340:31]
          byteChunks[1] <= _byteChunks_T_1 @[cacheLookup.scala 340:31]
          byteChunks[2] <= _byteChunks_T_2 @[cacheLookup.scala 340:31]
          byteChunks[3] <= _byteChunks_T_3 @[cacheLookup.scala 340:31]
          byteChunks[4] <= _byteChunks_T_4 @[cacheLookup.scala 340:31]
          byteChunks[5] <= _byteChunks_T_5 @[cacheLookup.scala 340:31]
          byteChunks[6] <= _byteChunks_T_6 @[cacheLookup.scala 340:31]
          byteChunks[7] <= _byteChunks_T_7 @[cacheLookup.scala 340:31]
          node _byteChoosed_T = bits(inputBuffer.address, 2, 0) @[cacheLookup.scala 343:59]
          node _halfwordChoosed_T = bits(inputBuffer.address, 2, 1) @[cacheLookup.scala 344:69]
          node _halfwordChoosed_T_1 = mul(UInt<2>("h2"), _halfwordChoosed_T) @[cacheLookup.scala 344:48]
          node _halfwordChoosed_T_2 = add(_halfwordChoosed_T_1, UInt<1>("h1")) @[cacheLookup.scala 344:75]
          node _halfwordChoosed_T_3 = tail(_halfwordChoosed_T_2, 1) @[cacheLookup.scala 344:75]
          node _halfwordChoosed_T_4 = bits(_halfwordChoosed_T_3, 2, 0)
          node _halfwordChoosed_T_5 = bits(inputBuffer.address, 2, 1) @[cacheLookup.scala 344:118]
          node _halfwordChoosed_T_6 = mul(UInt<2>("h2"), _halfwordChoosed_T_5) @[cacheLookup.scala 344:97]
          node _halfwordChoosed_T_7 = bits(_halfwordChoosed_T_6, 2, 0)
          node halfwordChoosed = cat(byteChunks[_halfwordChoosed_T_4], byteChunks[_halfwordChoosed_T_7]) @[Cat.scala 33:92]
          node _wordChoosed_T = bits(inputBuffer.address, 2, 2) @[cacheLookup.scala 345:69]
          node _wordChoosed_T_1 = mul(UInt<3>("h4"), _wordChoosed_T) @[cacheLookup.scala 345:48]
          node _wordChoosed_T_2 = add(_wordChoosed_T_1, UInt<2>("h3")) @[cacheLookup.scala 345:73]
          node _wordChoosed_T_3 = tail(_wordChoosed_T_2, 1) @[cacheLookup.scala 345:73]
          node _wordChoosed_T_4 = bits(_wordChoosed_T_3, 2, 0)
          node _wordChoosed_T_5 = bits(inputBuffer.address, 2, 2) @[cacheLookup.scala 345:116]
          node _wordChoosed_T_6 = mul(UInt<3>("h4"), _wordChoosed_T_5) @[cacheLookup.scala 345:95]
          node _wordChoosed_T_7 = add(_wordChoosed_T_6, UInt<2>("h2")) @[cacheLookup.scala 345:120]
          node _wordChoosed_T_8 = tail(_wordChoosed_T_7, 1) @[cacheLookup.scala 345:120]
          node _wordChoosed_T_9 = bits(_wordChoosed_T_8, 2, 0)
          node _wordChoosed_T_10 = bits(inputBuffer.address, 2, 2) @[cacheLookup.scala 346:69]
          node _wordChoosed_T_11 = mul(UInt<3>("h4"), _wordChoosed_T_10) @[cacheLookup.scala 346:48]
          node _wordChoosed_T_12 = add(_wordChoosed_T_11, UInt<1>("h1")) @[cacheLookup.scala 346:73]
          node _wordChoosed_T_13 = tail(_wordChoosed_T_12, 1) @[cacheLookup.scala 346:73]
          node _wordChoosed_T_14 = bits(_wordChoosed_T_13, 2, 0)
          node _wordChoosed_T_15 = bits(inputBuffer.address, 2, 2) @[cacheLookup.scala 346:116]
          node _wordChoosed_T_16 = mul(UInt<3>("h4"), _wordChoosed_T_15) @[cacheLookup.scala 346:95]
          node _wordChoosed_T_17 = bits(_wordChoosed_T_16, 2, 0)
          node wordChoosed_lo = cat(byteChunks[_wordChoosed_T_14], byteChunks[_wordChoosed_T_17]) @[Cat.scala 33:92]
          node wordChoosed_hi = cat(byteChunks[_wordChoosed_T_4], byteChunks[_wordChoosed_T_9]) @[Cat.scala 33:92]
          node wordChoosed = cat(wordChoosed_hi, wordChoosed_lo) @[Cat.scala 33:92]
          node _T_22 = bits(inputBuffer.instruction, 13, 12) @[cacheLookup.scala 348:37]
          node _T_23 = eq(UInt<1>("h0"), _T_22) @[cacheLookup.scala 348:46]
          when _T_23 : @[cacheLookup.scala 348:46]
            node _resultWire_T = bits(inputBuffer.instruction, 14, 14) @[cacheLookup.scala 349:62]
            node _resultWire_T_1 = bits(byteChunks[_byteChoosed_T], 7, 7) @[cacheLookup.scala 350:75]
            node _resultWire_T_2 = bits(_resultWire_T_1, 0, 0) @[Bitwise.scala 77:15]
            node _resultWire_T_3 = mux(_resultWire_T_2, UInt<56>("hffffffffffffff"), UInt<56>("h0")) @[Bitwise.scala 77:12]
            node _resultWire_T_4 = cat(_resultWire_T_3, byteChunks[_byteChoosed_T]) @[Cat.scala 33:92]
            node _resultWire_T_5 = mux(_resultWire_T, byteChunks[_byteChoosed_T], _resultWire_T_4) @[cacheLookup.scala 349:38]
            resultWire <= _resultWire_T_5 @[cacheLookup.scala 349:32]
          else :
            node _T_24 = eq(UInt<1>("h1"), _T_22) @[cacheLookup.scala 348:46]
            when _T_24 : @[cacheLookup.scala 348:46]
              node _resultWire_T_6 = bits(inputBuffer.instruction, 14, 14) @[cacheLookup.scala 351:62]
              node _resultWire_T_7 = bits(halfwordChoosed, 15, 15) @[cacheLookup.scala 352:79]
              node _resultWire_T_8 = bits(_resultWire_T_7, 0, 0) @[Bitwise.scala 77:15]
              node _resultWire_T_9 = mux(_resultWire_T_8, UInt<48>("hffffffffffff"), UInt<48>("h0")) @[Bitwise.scala 77:12]
              node _resultWire_T_10 = cat(_resultWire_T_9, halfwordChoosed) @[Cat.scala 33:92]
              node _resultWire_T_11 = mux(_resultWire_T_6, halfwordChoosed, _resultWire_T_10) @[cacheLookup.scala 351:38]
              resultWire <= _resultWire_T_11 @[cacheLookup.scala 351:32]
            else :
              node _T_25 = eq(UInt<2>("h2"), _T_22) @[cacheLookup.scala 348:46]
              when _T_25 : @[cacheLookup.scala 348:46]
                node _resultWire_T_12 = bits(inputBuffer.instruction, 14, 14) @[cacheLookup.scala 353:62]
                node _resultWire_T_13 = bits(wordChoosed, 31, 31) @[cacheLookup.scala 354:75]
                node _resultWire_T_14 = bits(_resultWire_T_13, 0, 0) @[Bitwise.scala 77:15]
                node _resultWire_T_15 = mux(_resultWire_T_14, UInt<32>("hffffffff"), UInt<32>("h0")) @[Bitwise.scala 77:12]
                node _resultWire_T_16 = cat(_resultWire_T_15, wordChoosed) @[Cat.scala 33:92]
                node _resultWire_T_17 = mux(_resultWire_T_12, wordChoosed, _resultWire_T_16) @[cacheLookup.scala 353:38]
                resultWire <= _resultWire_T_17 @[cacheLookup.scala 353:32]
              else :
                node _T_26 = eq(UInt<2>("h3"), _T_22) @[cacheLookup.scala 348:46]
                when _T_26 : @[cacheLookup.scala 348:46]
                  node _resultWire_T_18 = bits(inputBuffer.instruction, 14, 14) @[cacheLookup.scala 355:62]
                  node _resultWire_T_19 = mux(_resultWire_T_18, UInt<1>("h0"), doubleWordChunks[_doubleWordChoosen_T]) @[cacheLookup.scala 355:38]
                  resultWire <= _resultWire_T_19 @[cacheLookup.scala 355:32]
          when isSCWire : @[cacheLookup.scala 358:21]
            node _resultWire_T_20 = mux(reservationRegister.reserved, UInt<1>("h0"), UInt<1>("h1")) @[cacheLookup.scala 359:26]
            resultWire <= _resultWire_T_20 @[cacheLookup.scala 359:20]
          when responseOut.ready : @[cacheLookup.scala 362:30]
            node _cacheState_T_6 = eq(reservationRegister.reserved, UInt<1>("h0")) @[cacheLookup.scala 363:39]
            node _cacheState_T_7 = and(isSCWire, _cacheState_T_6) @[cacheLookup.scala 363:36]
            node _cacheState_T_8 = mux(_cacheState_T_7, UInt<3>("h0"), UInt<3>("h3")) @[cacheLookup.scala 363:26]
            cacheState <= _cacheState_T_8 @[cacheLookup.scala 363:20]
          else :
            cacheState <= UInt<3>("h2") @[cacheLookup.scala 365:20]
        else :
          node _T_27 = eq(UInt<3>("h3"), cacheState) @[cacheLookup.scala 269:21]
          when _T_27 : @[cacheLookup.scala 269:21]
            node _tagChunks_T_8 = bits(tagBRAM.readData, 23, 0) @[cacheLookup.scala 371:25]
            node _tagChunks_T_9 = bits(tagBRAM.readData, 47, 24) @[cacheLookup.scala 371:25]
            node _tagChunks_T_10 = bits(tagBRAM.readData, 71, 48) @[cacheLookup.scala 371:25]
            node _tagChunks_T_11 = bits(tagBRAM.readData, 95, 72) @[cacheLookup.scala 371:25]
            wire tagChunks_2 : UInt<24>[4] @[cacheLookup.scala 370:30]
            tagChunks_2[0] <= _tagChunks_T_8 @[cacheLookup.scala 370:30]
            tagChunks_2[1] <= _tagChunks_T_9 @[cacheLookup.scala 370:30]
            tagChunks_2[2] <= _tagChunks_T_10 @[cacheLookup.scala 370:30]
            tagChunks_2[3] <= _tagChunks_T_11 @[cacheLookup.scala 370:30]
            node _newtagChunks_T = bits(tagBRAM.readData, 23, 0) @[cacheLookup.scala 374:25]
            node _newtagChunks_T_1 = bits(tagBRAM.readData, 47, 24) @[cacheLookup.scala 374:25]
            node _newtagChunks_T_2 = bits(tagBRAM.readData, 71, 48) @[cacheLookup.scala 374:25]
            node _newtagChunks_T_3 = bits(tagBRAM.readData, 95, 72) @[cacheLookup.scala 374:25]
            wire newtagChunks : UInt<24>[4] @[cacheLookup.scala 373:33]
            newtagChunks[0] <= _newtagChunks_T @[cacheLookup.scala 373:33]
            newtagChunks[1] <= _newtagChunks_T_1 @[cacheLookup.scala 373:33]
            newtagChunks[2] <= _newtagChunks_T_2 @[cacheLookup.scala 373:33]
            newtagChunks[3] <= _newtagChunks_T_3 @[cacheLookup.scala 373:33]
            node _hitTagWire_T_6 = mux(matchFoundReg[2], UInt<2>("h2"), UInt<2>("h3")) @[Mux.scala 47:70]
            node _hitTagWire_T_7 = mux(matchFoundReg[1], UInt<1>("h1"), _hitTagWire_T_6) @[Mux.scala 47:70]
            node _hitTagWire_T_8 = mux(matchFoundReg[0], UInt<1>("h0"), _hitTagWire_T_7) @[Mux.scala 47:70]
            wire hitTagWire_2 : UInt
            hitTagWire_2 <= _hitTagWire_T_8
            node _addrWire_T = or(hitTagWire_2, UInt<2>("h0"))
            node _addrWire_T_1 = bits(_addrWire_T, 1, 0)
            node _addrWire_T_2 = bits(tagChunks_2[_addrWire_T_1], 18, 0) @[cacheLookup.scala 378:52]
            wire addrWire : UInt
            addrWire <= _addrWire_T_2
            node _validBitWire_T_6 = or(hitTagWire_2, UInt<2>("h0"))
            node _validBitWire_T_7 = bits(_validBitWire_T_6, 1, 0)
            node _validBitWire_T_8 = bits(tagChunks_2[_validBitWire_T_7], 19, 19) @[cacheLookup.scala 379:56]
            wire validBitWire_2 : UInt<1>
            validBitWire_2 <= _validBitWire_T_8
            node _dirtyBitWire_T = or(hitTagWire_2, UInt<2>("h0"))
            node _dirtyBitWire_T_1 = bits(_dirtyBitWire_T, 1, 0)
            node _dirtyBitWire_T_2 = bits(tagChunks_2[_dirtyBitWire_T_1], 20, 20) @[cacheLookup.scala 380:56]
            wire dirtyBitWire : UInt<1>
            dirtyBitWire <= _dirtyBitWire_T_2
            node _shareBitWire_T_3 = or(hitTagWire_2, UInt<2>("h0"))
            node _shareBitWire_T_4 = bits(_shareBitWire_T_3, 1, 0)
            node _shareBitWire_T_5 = bits(tagChunks_2[_shareBitWire_T_4], 21, 21) @[cacheLookup.scala 381:56]
            wire shareBitWire_1 : UInt<1>
            shareBitWire_1 <= _shareBitWire_T_5
            node _PLRUBitWire_T = or(hitTagWire_2, UInt<2>("h0"))
            node _PLRUBitWire_T_1 = bits(_PLRUBitWire_T, 1, 0)
            node _PLRUBitWire_T_2 = bits(tagChunks_2[_PLRUBitWire_T_1], 22, 22) @[cacheLookup.scala 382:55]
            wire PLRUBitWire : UInt<1>
            PLRUBitWire <= _PLRUBitWire_T_2
            node _isMissWire_T_8 = or(matchFoundReg[0], matchFoundReg[1]) @[cacheLookup.scala 384:49]
            node _isMissWire_T_9 = or(_isMissWire_T_8, matchFoundReg[2]) @[cacheLookup.scala 384:49]
            node _isMissWire_T_10 = or(_isMissWire_T_9, matchFoundReg[3]) @[cacheLookup.scala 384:49]
            node _isMissWire_T_11 = and(_isMissWire_T_10, validBitWire_2) @[cacheLookup.scala 384:54]
            node isMissWire_2 = eq(_isMissWire_T_11, UInt<1>("h0")) @[cacheLookup.scala 384:24]
            node _permissionMiss_T = eq(isMissWire_2, UInt<1>("h0")) @[cacheLookup.scala 385:28]
            node permissionMiss = and(_permissionMiss_T, shareBitWire_1) @[cacheLookup.scala 385:40]
            node _newAddrWire_T = or(hitTagWire_2, UInt<2>("h0"))
            node _newAddrWire_T_1 = bits(_newAddrWire_T, 1, 0)
            node _newAddrWire_T_2 = bits(tagChunks_2[_newAddrWire_T_1], 18, 0) @[cacheLookup.scala 388:56]
            wire newAddrWire : UInt
            newAddrWire <= _newAddrWire_T_2
            node _newValidBitWire_T = or(hitTagWire_2, UInt<2>("h0"))
            node _newValidBitWire_T_1 = bits(_newValidBitWire_T, 1, 0)
            node _newValidBitWire_T_2 = bits(tagChunks_2[_newValidBitWire_T_1], 19, 19) @[cacheLookup.scala 389:60]
            wire newValidBitWire : UInt<1>
            newValidBitWire <= _newValidBitWire_T_2
            node _newDirtyBitWire_T = or(hitTagWire_2, UInt<2>("h0"))
            node _newDirtyBitWire_T_1 = bits(_newDirtyBitWire_T, 1, 0)
            node _newDirtyBitWire_T_2 = bits(tagChunks_2[_newDirtyBitWire_T_1], 20, 20) @[cacheLookup.scala 390:60]
            wire newDirtyBitWire : UInt<1>
            newDirtyBitWire <= _newDirtyBitWire_T_2
            node _newShareBitWire_T = or(hitTagWire_2, UInt<2>("h0"))
            node _newShareBitWire_T_1 = bits(_newShareBitWire_T, 1, 0)
            node _newShareBitWire_T_2 = bits(tagChunks_2[_newShareBitWire_T_1], 21, 21) @[cacheLookup.scala 391:60]
            wire newShareBitWire : UInt<1>
            newShareBitWire <= _newShareBitWire_T_2
            node _newPLRUBitWire_T = or(hitTagWire_2, UInt<2>("h0"))
            node _newPLRUBitWire_T_1 = bits(_newPLRUBitWire_T, 1, 0)
            node _newPLRUBitWire_T_2 = bits(tagChunks_2[_newPLRUBitWire_T_1], 22, 22) @[cacheLookup.scala 392:59]
            wire newPLRUBitWire : UInt<1>
            newPLRUBitWire <= _newPLRUBitWire_T_2
            node _cacheLineChoosen_T_3 = mux(matchFoundReg[2], UInt<2>("h2"), UInt<2>("h3")) @[Mux.scala 47:70]
            node _cacheLineChoosen_T_4 = mux(matchFoundReg[1], UInt<1>("h1"), _cacheLineChoosen_T_3) @[Mux.scala 47:70]
            node _cacheLineChoosen_T_5 = mux(matchFoundReg[0], UInt<1>("h0"), _cacheLineChoosen_T_4) @[Mux.scala 47:70]
            node cacheLineChoosen_1 = mux(isMissWire_2, receivedCacheLine, dataBRAMVec[_cacheLineChoosen_T_5].readData) @[cacheLookup.scala 395:33]
            node _storeChunks_T = bits(cacheLineChoosen_1, 31, 0) @[cacheLookup.scala 397:25]
            node _storeChunks_T_1 = bits(cacheLineChoosen_1, 63, 32) @[cacheLookup.scala 397:25]
            node _storeChunks_T_2 = bits(cacheLineChoosen_1, 95, 64) @[cacheLookup.scala 397:25]
            node _storeChunks_T_3 = bits(cacheLineChoosen_1, 127, 96) @[cacheLookup.scala 397:25]
            node _storeChunks_T_4 = bits(cacheLineChoosen_1, 159, 128) @[cacheLookup.scala 397:25]
            node _storeChunks_T_5 = bits(cacheLineChoosen_1, 191, 160) @[cacheLookup.scala 397:25]
            node _storeChunks_T_6 = bits(cacheLineChoosen_1, 223, 192) @[cacheLookup.scala 397:25]
            node _storeChunks_T_7 = bits(cacheLineChoosen_1, 255, 224) @[cacheLookup.scala 397:25]
            node _storeChunks_T_8 = bits(cacheLineChoosen_1, 287, 256) @[cacheLookup.scala 397:25]
            node _storeChunks_T_9 = bits(cacheLineChoosen_1, 319, 288) @[cacheLookup.scala 397:25]
            node _storeChunks_T_10 = bits(cacheLineChoosen_1, 351, 320) @[cacheLookup.scala 397:25]
            node _storeChunks_T_11 = bits(cacheLineChoosen_1, 383, 352) @[cacheLookup.scala 397:25]
            node _storeChunks_T_12 = bits(cacheLineChoosen_1, 415, 384) @[cacheLookup.scala 397:25]
            node _storeChunks_T_13 = bits(cacheLineChoosen_1, 447, 416) @[cacheLookup.scala 397:25]
            node _storeChunks_T_14 = bits(cacheLineChoosen_1, 479, 448) @[cacheLookup.scala 397:25]
            node _storeChunks_T_15 = bits(cacheLineChoosen_1, 511, 480) @[cacheLookup.scala 397:25]
            wire storeChunks : UInt<32>[16] @[cacheLookup.scala 396:32]
            storeChunks[0] <= _storeChunks_T @[cacheLookup.scala 396:32]
            storeChunks[1] <= _storeChunks_T_1 @[cacheLookup.scala 396:32]
            storeChunks[2] <= _storeChunks_T_2 @[cacheLookup.scala 396:32]
            storeChunks[3] <= _storeChunks_T_3 @[cacheLookup.scala 396:32]
            storeChunks[4] <= _storeChunks_T_4 @[cacheLookup.scala 396:32]
            storeChunks[5] <= _storeChunks_T_5 @[cacheLookup.scala 396:32]
            storeChunks[6] <= _storeChunks_T_6 @[cacheLookup.scala 396:32]
            storeChunks[7] <= _storeChunks_T_7 @[cacheLookup.scala 396:32]
            storeChunks[8] <= _storeChunks_T_8 @[cacheLookup.scala 396:32]
            storeChunks[9] <= _storeChunks_T_9 @[cacheLookup.scala 396:32]
            storeChunks[10] <= _storeChunks_T_10 @[cacheLookup.scala 396:32]
            storeChunks[11] <= _storeChunks_T_11 @[cacheLookup.scala 396:32]
            storeChunks[12] <= _storeChunks_T_12 @[cacheLookup.scala 396:32]
            storeChunks[13] <= _storeChunks_T_13 @[cacheLookup.scala 396:32]
            storeChunks[14] <= _storeChunks_T_14 @[cacheLookup.scala 396:32]
            storeChunks[15] <= _storeChunks_T_15 @[cacheLookup.scala 396:32]
            node _newstoreChunks_T = bits(cacheLineChoosen_1, 31, 0) @[cacheLookup.scala 400:25]
            node _newstoreChunks_T_1 = bits(cacheLineChoosen_1, 63, 32) @[cacheLookup.scala 400:25]
            node _newstoreChunks_T_2 = bits(cacheLineChoosen_1, 95, 64) @[cacheLookup.scala 400:25]
            node _newstoreChunks_T_3 = bits(cacheLineChoosen_1, 127, 96) @[cacheLookup.scala 400:25]
            node _newstoreChunks_T_4 = bits(cacheLineChoosen_1, 159, 128) @[cacheLookup.scala 400:25]
            node _newstoreChunks_T_5 = bits(cacheLineChoosen_1, 191, 160) @[cacheLookup.scala 400:25]
            node _newstoreChunks_T_6 = bits(cacheLineChoosen_1, 223, 192) @[cacheLookup.scala 400:25]
            node _newstoreChunks_T_7 = bits(cacheLineChoosen_1, 255, 224) @[cacheLookup.scala 400:25]
            node _newstoreChunks_T_8 = bits(cacheLineChoosen_1, 287, 256) @[cacheLookup.scala 400:25]
            node _newstoreChunks_T_9 = bits(cacheLineChoosen_1, 319, 288) @[cacheLookup.scala 400:25]
            node _newstoreChunks_T_10 = bits(cacheLineChoosen_1, 351, 320) @[cacheLookup.scala 400:25]
            node _newstoreChunks_T_11 = bits(cacheLineChoosen_1, 383, 352) @[cacheLookup.scala 400:25]
            node _newstoreChunks_T_12 = bits(cacheLineChoosen_1, 415, 384) @[cacheLookup.scala 400:25]
            node _newstoreChunks_T_13 = bits(cacheLineChoosen_1, 447, 416) @[cacheLookup.scala 400:25]
            node _newstoreChunks_T_14 = bits(cacheLineChoosen_1, 479, 448) @[cacheLookup.scala 400:25]
            node _newstoreChunks_T_15 = bits(cacheLineChoosen_1, 511, 480) @[cacheLookup.scala 400:25]
            wire newstoreChunks : UInt<32>[16] @[cacheLookup.scala 399:35]
            newstoreChunks[0] <= _newstoreChunks_T @[cacheLookup.scala 399:35]
            newstoreChunks[1] <= _newstoreChunks_T_1 @[cacheLookup.scala 399:35]
            newstoreChunks[2] <= _newstoreChunks_T_2 @[cacheLookup.scala 399:35]
            newstoreChunks[3] <= _newstoreChunks_T_3 @[cacheLookup.scala 399:35]
            newstoreChunks[4] <= _newstoreChunks_T_4 @[cacheLookup.scala 399:35]
            newstoreChunks[5] <= _newstoreChunks_T_5 @[cacheLookup.scala 399:35]
            newstoreChunks[6] <= _newstoreChunks_T_6 @[cacheLookup.scala 399:35]
            newstoreChunks[7] <= _newstoreChunks_T_7 @[cacheLookup.scala 399:35]
            newstoreChunks[8] <= _newstoreChunks_T_8 @[cacheLookup.scala 399:35]
            newstoreChunks[9] <= _newstoreChunks_T_9 @[cacheLookup.scala 399:35]
            newstoreChunks[10] <= _newstoreChunks_T_10 @[cacheLookup.scala 399:35]
            newstoreChunks[11] <= _newstoreChunks_T_11 @[cacheLookup.scala 399:35]
            newstoreChunks[12] <= _newstoreChunks_T_12 @[cacheLookup.scala 399:35]
            newstoreChunks[13] <= _newstoreChunks_T_13 @[cacheLookup.scala 399:35]
            newstoreChunks[14] <= _newstoreChunks_T_14 @[cacheLookup.scala 399:35]
            newstoreChunks[15] <= _newstoreChunks_T_15 @[cacheLookup.scala 399:35]
            node _wordStore_T = bits(inputBuffer.address, 5, 2) @[cacheLookup.scala 402:54]
            node _doubleWordStore_T = bits(inputBuffer.address, 5, 2) @[cacheLookup.scala 403:64]
            node _doubleWordStore_T_1 = add(_doubleWordStore_T, UInt<1>("h1")) @[cacheLookup.scala 403:69]
            node _doubleWordStore_T_2 = tail(_doubleWordStore_T_1, 1) @[cacheLookup.scala 403:69]
            node _doubleWordStore_T_3 = bits(inputBuffer.address, 5, 2) @[cacheLookup.scala 403:107]
            node doubleWordStore = cat(storeChunks[_doubleWordStore_T_2], storeChunks[_doubleWordStore_T_3]) @[Cat.scala 33:92]
            node _storeByteChunks_T = bits(doubleWordStore, 7, 0) @[cacheLookup.scala 404:69]
            node _storeByteChunks_T_1 = bits(doubleWordStore, 15, 8) @[cacheLookup.scala 404:69]
            node _storeByteChunks_T_2 = bits(doubleWordStore, 23, 16) @[cacheLookup.scala 404:69]
            node _storeByteChunks_T_3 = bits(doubleWordStore, 31, 24) @[cacheLookup.scala 404:69]
            node _storeByteChunks_T_4 = bits(doubleWordStore, 39, 32) @[cacheLookup.scala 404:69]
            node _storeByteChunks_T_5 = bits(doubleWordStore, 47, 40) @[cacheLookup.scala 404:69]
            node _storeByteChunks_T_6 = bits(doubleWordStore, 55, 48) @[cacheLookup.scala 404:69]
            node _storeByteChunks_T_7 = bits(doubleWordStore, 63, 56) @[cacheLookup.scala 404:69]
            wire storeByteChunks : UInt<8>[8] @[cacheLookup.scala 404:48]
            storeByteChunks[0] <= _storeByteChunks_T @[cacheLookup.scala 404:48]
            storeByteChunks[1] <= _storeByteChunks_T_1 @[cacheLookup.scala 404:48]
            storeByteChunks[2] <= _storeByteChunks_T_2 @[cacheLookup.scala 404:48]
            storeByteChunks[3] <= _storeByteChunks_T_3 @[cacheLookup.scala 404:48]
            storeByteChunks[4] <= _storeByteChunks_T_4 @[cacheLookup.scala 404:48]
            storeByteChunks[5] <= _storeByteChunks_T_5 @[cacheLookup.scala 404:48]
            storeByteChunks[6] <= _storeByteChunks_T_6 @[cacheLookup.scala 404:48]
            storeByteChunks[7] <= _storeByteChunks_T_7 @[cacheLookup.scala 404:48]
            wire result32 : UInt<32>
            result32 <= UInt<32>("h0")
            wire result64 : UInt<64>
            result64 <= UInt<64>("h0")
            node _PLRUSetWire_T = bits(tagChunks_2[0], 22, 22) @[cacheLookup.scala 410:70]
            node _PLRUSetWire_T_1 = bits(tagChunks_2[1], 22, 22) @[cacheLookup.scala 410:70]
            node _PLRUSetWire_T_2 = bits(tagChunks_2[2], 22, 22) @[cacheLookup.scala 410:70]
            node _PLRUSetWire_T_3 = bits(tagChunks_2[3], 22, 22) @[cacheLookup.scala 410:70]
            wire _PLRUSetWire_WIRE : UInt<1>[4] @[cacheLookup.scala 410:41]
            _PLRUSetWire_WIRE[0] <= _PLRUSetWire_T @[cacheLookup.scala 410:41]
            _PLRUSetWire_WIRE[1] <= _PLRUSetWire_T_1 @[cacheLookup.scala 410:41]
            _PLRUSetWire_WIRE[2] <= _PLRUSetWire_T_2 @[cacheLookup.scala 410:41]
            _PLRUSetWire_WIRE[3] <= _PLRUSetWire_T_3 @[cacheLookup.scala 410:41]
            wire PLRUSetWire : UInt<1>[4]
            PLRUSetWire <= _PLRUSetWire_WIRE
            node flippedPLRUSetWire_lo = cat(PLRUSetWire[1], PLRUSetWire[0]) @[cacheLookup.scala 411:45]
            node flippedPLRUSetWire_hi = cat(PLRUSetWire[3], PLRUSetWire[2]) @[cacheLookup.scala 411:45]
            node _flippedPLRUSetWire_T = cat(flippedPLRUSetWire_hi, flippedPLRUSetWire_lo) @[cacheLookup.scala 411:45]
            node flippedPLRUSetWire = not(_flippedPLRUSetWire_T) @[cacheLookup.scala 411:32]
            node _replacingset_T = bits(flippedPLRUSetWire, 0, 0) @[OneHot.scala 47:45]
            node _replacingset_T_1 = bits(flippedPLRUSetWire, 1, 1) @[OneHot.scala 47:45]
            node _replacingset_T_2 = bits(flippedPLRUSetWire, 2, 2) @[OneHot.scala 47:45]
            node _replacingset_T_3 = bits(flippedPLRUSetWire, 3, 3) @[OneHot.scala 47:45]
            node _replacingset_T_4 = mux(_replacingset_T_2, UInt<2>("h2"), UInt<2>("h3")) @[Mux.scala 47:70]
            node _replacingset_T_5 = mux(_replacingset_T_1, UInt<1>("h1"), _replacingset_T_4) @[Mux.scala 47:70]
            node replacingset = mux(_replacingset_T, UInt<1>("h0"), _replacingset_T_5) @[Mux.scala 47:70]
            when isLoadWire : @[cacheLookup.scala 414:23]
              node _newPLRUBitWire_T_3 = and(PLRUSetWire[0], PLRUSetWire[1]) @[cacheLookup.scala 415:52]
              node _newPLRUBitWire_T_4 = and(_newPLRUBitWire_T_3, PLRUSetWire[2]) @[cacheLookup.scala 415:52]
              node _newPLRUBitWire_T_5 = and(_newPLRUBitWire_T_4, PLRUSetWire[3]) @[cacheLookup.scala 415:52]
              node _newPLRUBitWire_T_6 = mux(_newPLRUBitWire_T_5, UInt<1>("h0"), UInt<1>("h1")) @[cacheLookup.scala 415:30]
              newPLRUBitWire <= _newPLRUBitWire_T_6 @[cacheLookup.scala 415:24]
              when isMissWire_2 : @[cacheLookup.scala 416:25]
                newValidBitWire <= UInt<1>("h1") @[cacheLookup.scala 417:27]
                node _newShareBitWire_T_3 = bits(receivedResponse, 1, 1) @[cacheLookup.scala 418:46]
                newShareBitWire <= _newShareBitWire_T_3 @[cacheLookup.scala 418:27]
                node _newDirtyBitWire_T_3 = bits(receivedResponse, 0, 0) @[cacheLookup.scala 419:46]
                newDirtyBitWire <= _newDirtyBitWire_T_3 @[cacheLookup.scala 419:27]
                node _newAddrWire_T_3 = bits(inputBuffer.address, 31, 13) @[cacheLookup.scala 420:45]
                newAddrWire <= _newAddrWire_T_3 @[cacheLookup.scala 420:23]
                node _storeChunks_0_T = bits(receivedCacheLine, 31, 0) @[cacheLookup.scala 422:48]
                storeChunks[0] <= _storeChunks_0_T @[cacheLookup.scala 422:28]
                node _storeChunks_1_T = bits(receivedCacheLine, 63, 32) @[cacheLookup.scala 422:48]
                storeChunks[1] <= _storeChunks_1_T @[cacheLookup.scala 422:28]
                node _storeChunks_2_T = bits(receivedCacheLine, 95, 64) @[cacheLookup.scala 422:48]
                storeChunks[2] <= _storeChunks_2_T @[cacheLookup.scala 422:28]
                node _storeChunks_3_T = bits(receivedCacheLine, 127, 96) @[cacheLookup.scala 422:48]
                storeChunks[3] <= _storeChunks_3_T @[cacheLookup.scala 422:28]
                node _storeChunks_4_T = bits(receivedCacheLine, 159, 128) @[cacheLookup.scala 422:48]
                storeChunks[4] <= _storeChunks_4_T @[cacheLookup.scala 422:28]
                node _storeChunks_5_T = bits(receivedCacheLine, 191, 160) @[cacheLookup.scala 422:48]
                storeChunks[5] <= _storeChunks_5_T @[cacheLookup.scala 422:28]
                node _storeChunks_6_T = bits(receivedCacheLine, 223, 192) @[cacheLookup.scala 422:48]
                storeChunks[6] <= _storeChunks_6_T @[cacheLookup.scala 422:28]
                node _storeChunks_7_T = bits(receivedCacheLine, 255, 224) @[cacheLookup.scala 422:48]
                storeChunks[7] <= _storeChunks_7_T @[cacheLookup.scala 422:28]
                node _storeChunks_8_T = bits(receivedCacheLine, 287, 256) @[cacheLookup.scala 422:48]
                storeChunks[8] <= _storeChunks_8_T @[cacheLookup.scala 422:28]
                node _storeChunks_9_T = bits(receivedCacheLine, 319, 288) @[cacheLookup.scala 422:48]
                storeChunks[9] <= _storeChunks_9_T @[cacheLookup.scala 422:28]
                node _storeChunks_10_T = bits(receivedCacheLine, 351, 320) @[cacheLookup.scala 422:48]
                storeChunks[10] <= _storeChunks_10_T @[cacheLookup.scala 422:28]
                node _storeChunks_11_T = bits(receivedCacheLine, 383, 352) @[cacheLookup.scala 422:48]
                storeChunks[11] <= _storeChunks_11_T @[cacheLookup.scala 422:28]
                node _storeChunks_12_T = bits(receivedCacheLine, 415, 384) @[cacheLookup.scala 422:48]
                storeChunks[12] <= _storeChunks_12_T @[cacheLookup.scala 422:28]
                node _storeChunks_13_T = bits(receivedCacheLine, 447, 416) @[cacheLookup.scala 422:48]
                storeChunks[13] <= _storeChunks_13_T @[cacheLookup.scala 422:28]
                node _storeChunks_14_T = bits(receivedCacheLine, 479, 448) @[cacheLookup.scala 422:48]
                storeChunks[14] <= _storeChunks_14_T @[cacheLookup.scala 422:28]
                node _storeChunks_15_T = bits(receivedCacheLine, 511, 480) @[cacheLookup.scala 422:48]
                storeChunks[15] <= _storeChunks_15_T @[cacheLookup.scala 422:28]
            when isStoreWire : @[cacheLookup.scala 426:24]
              newDirtyBitWire <= UInt<1>("h1") @[cacheLookup.scala 427:25]
              node _newPLRUBitWire_T_7 = and(PLRUSetWire[0], PLRUSetWire[1]) @[cacheLookup.scala 428:52]
              node _newPLRUBitWire_T_8 = and(_newPLRUBitWire_T_7, PLRUSetWire[2]) @[cacheLookup.scala 428:52]
              node _newPLRUBitWire_T_9 = and(_newPLRUBitWire_T_8, PLRUSetWire[3]) @[cacheLookup.scala 428:52]
              node _newPLRUBitWire_T_10 = mux(_newPLRUBitWire_T_9, UInt<1>("h0"), UInt<1>("h1")) @[cacheLookup.scala 428:30]
              newPLRUBitWire <= _newPLRUBitWire_T_10 @[cacheLookup.scala 428:24]
              when isMissWire_2 : @[cacheLookup.scala 429:25]
                newValidBitWire <= UInt<1>("h1") @[cacheLookup.scala 430:27]
                node _newShareBitWire_T_4 = bits(receivedResponse, 1, 1) @[cacheLookup.scala 431:46]
                newShareBitWire <= _newShareBitWire_T_4 @[cacheLookup.scala 431:27]
                node _newAddrWire_T_4 = bits(inputBuffer.address, 31, 13) @[cacheLookup.scala 432:45]
                newAddrWire <= _newAddrWire_T_4 @[cacheLookup.scala 432:23]
                node _storeChunks_0_T_1 = bits(receivedCacheLine, 31, 0) @[cacheLookup.scala 434:48]
                storeChunks[0] <= _storeChunks_0_T_1 @[cacheLookup.scala 434:28]
                node _storeChunks_1_T_1 = bits(receivedCacheLine, 63, 32) @[cacheLookup.scala 434:48]
                storeChunks[1] <= _storeChunks_1_T_1 @[cacheLookup.scala 434:28]
                node _storeChunks_2_T_1 = bits(receivedCacheLine, 95, 64) @[cacheLookup.scala 434:48]
                storeChunks[2] <= _storeChunks_2_T_1 @[cacheLookup.scala 434:28]
                node _storeChunks_3_T_1 = bits(receivedCacheLine, 127, 96) @[cacheLookup.scala 434:48]
                storeChunks[3] <= _storeChunks_3_T_1 @[cacheLookup.scala 434:28]
                node _storeChunks_4_T_1 = bits(receivedCacheLine, 159, 128) @[cacheLookup.scala 434:48]
                storeChunks[4] <= _storeChunks_4_T_1 @[cacheLookup.scala 434:28]
                node _storeChunks_5_T_1 = bits(receivedCacheLine, 191, 160) @[cacheLookup.scala 434:48]
                storeChunks[5] <= _storeChunks_5_T_1 @[cacheLookup.scala 434:28]
                node _storeChunks_6_T_1 = bits(receivedCacheLine, 223, 192) @[cacheLookup.scala 434:48]
                storeChunks[6] <= _storeChunks_6_T_1 @[cacheLookup.scala 434:28]
                node _storeChunks_7_T_1 = bits(receivedCacheLine, 255, 224) @[cacheLookup.scala 434:48]
                storeChunks[7] <= _storeChunks_7_T_1 @[cacheLookup.scala 434:28]
                node _storeChunks_8_T_1 = bits(receivedCacheLine, 287, 256) @[cacheLookup.scala 434:48]
                storeChunks[8] <= _storeChunks_8_T_1 @[cacheLookup.scala 434:28]
                node _storeChunks_9_T_1 = bits(receivedCacheLine, 319, 288) @[cacheLookup.scala 434:48]
                storeChunks[9] <= _storeChunks_9_T_1 @[cacheLookup.scala 434:28]
                node _storeChunks_10_T_1 = bits(receivedCacheLine, 351, 320) @[cacheLookup.scala 434:48]
                storeChunks[10] <= _storeChunks_10_T_1 @[cacheLookup.scala 434:28]
                node _storeChunks_11_T_1 = bits(receivedCacheLine, 383, 352) @[cacheLookup.scala 434:48]
                storeChunks[11] <= _storeChunks_11_T_1 @[cacheLookup.scala 434:28]
                node _storeChunks_12_T_1 = bits(receivedCacheLine, 415, 384) @[cacheLookup.scala 434:48]
                storeChunks[12] <= _storeChunks_12_T_1 @[cacheLookup.scala 434:28]
                node _storeChunks_13_T_1 = bits(receivedCacheLine, 447, 416) @[cacheLookup.scala 434:48]
                storeChunks[13] <= _storeChunks_13_T_1 @[cacheLookup.scala 434:28]
                node _storeChunks_14_T_1 = bits(receivedCacheLine, 479, 448) @[cacheLookup.scala 434:48]
                storeChunks[14] <= _storeChunks_14_T_1 @[cacheLookup.scala 434:28]
                node _storeChunks_15_T_1 = bits(receivedCacheLine, 511, 480) @[cacheLookup.scala 434:48]
                storeChunks[15] <= _storeChunks_15_T_1 @[cacheLookup.scala 434:28]
              else :
                newValidBitWire <= UInt<1>("h1") @[cacheLookup.scala 437:27]
                node _newShareBitWire_T_5 = bits(receivedResponse, 1, 1) @[cacheLookup.scala 438:46]
                newShareBitWire <= _newShareBitWire_T_5 @[cacheLookup.scala 438:27]
                node _newAddrWire_T_5 = bits(inputBuffer.address, 31, 13) @[cacheLookup.scala 439:45]
                newAddrWire <= _newAddrWire_T_5 @[cacheLookup.scala 439:23]
              when isAtomicsWire : @[cacheLookup.scala 441:28]
                node _T_28 = bits(inputBuffer.address, 14, 12) @[cacheLookup.scala 442:35]
                node _T_29 = eq(_T_28, UInt<2>("h2")) @[cacheLookup.scala 442:43]
                when _T_29 : @[cacheLookup.scala 442:56]
                  node _T_30 = bits(inputBuffer.instruction, 31, 27) @[cacheLookup.scala 443:43]
                  node _T_31 = eq(UInt<1>("h1"), _T_30) @[cacheLookup.scala 443:51]
                  when _T_31 : @[cacheLookup.scala 443:51]
                    node _result32_T = bits(storeDataBuffer.data, 31, 0) @[cacheLookup.scala 444:62]
                    result32 <= _result32_T @[cacheLookup.scala 444:39]
                  else :
                    node _T_32 = eq(UInt<1>("h0"), _T_30) @[cacheLookup.scala 443:51]
                    when _T_32 : @[cacheLookup.scala 443:51]
                      node _result32_T_1 = bits(storeDataBuffer.data, 31, 0) @[cacheLookup.scala 445:74]
                      node _result32_T_2 = add(storeChunks[_wordStore_T], _result32_T_1) @[cacheLookup.scala 445:52]
                      node _result32_T_3 = tail(_result32_T_2, 1) @[cacheLookup.scala 445:52]
                      result32 <= _result32_T_3 @[cacheLookup.scala 445:39]
                    else :
                      node _T_33 = eq(UInt<3>("h4"), _T_30) @[cacheLookup.scala 443:51]
                      when _T_33 : @[cacheLookup.scala 443:51]
                        node _result32_T_4 = bits(storeDataBuffer.data, 31, 0) @[cacheLookup.scala 446:74]
                        node _result32_T_5 = xor(storeChunks[_wordStore_T], _result32_T_4) @[cacheLookup.scala 446:52]
                        result32 <= _result32_T_5 @[cacheLookup.scala 446:39]
                      else :
                        node _T_34 = eq(UInt<4>("hc"), _T_30) @[cacheLookup.scala 443:51]
                        when _T_34 : @[cacheLookup.scala 443:51]
                          node _result32_T_6 = bits(storeDataBuffer.data, 31, 0) @[cacheLookup.scala 447:74]
                          node _result32_T_7 = and(storeChunks[_wordStore_T], _result32_T_6) @[cacheLookup.scala 447:52]
                          result32 <= _result32_T_7 @[cacheLookup.scala 447:39]
                        else :
                          node _T_35 = eq(UInt<4>("h8"), _T_30) @[cacheLookup.scala 443:51]
                          when _T_35 : @[cacheLookup.scala 443:51]
                            node _result32_T_8 = bits(storeDataBuffer.data, 31, 0) @[cacheLookup.scala 448:74]
                            node _result32_T_9 = or(storeChunks[_wordStore_T], _result32_T_8) @[cacheLookup.scala 448:52]
                            result32 <= _result32_T_9 @[cacheLookup.scala 448:39]
                          else :
                            node _T_36 = eq(UInt<5>("h10"), _T_30) @[cacheLookup.scala 443:51]
                            when _T_36 : @[cacheLookup.scala 443:51]
                              node _result32_T_10 = asSInt(storeChunks[_wordStore_T]) @[cacheLookup.scala 449:56]
                              node _result32_T_11 = bits(storeDataBuffer.data, 31, 0) @[cacheLookup.scala 449:85]
                              node _result32_T_12 = asSInt(_result32_T_11) @[cacheLookup.scala 449:92]
                              node _result32_T_13 = lt(_result32_T_10, _result32_T_12) @[cacheLookup.scala 449:63]
                              node _result32_T_14 = bits(storeDataBuffer.data, 31, 0) @[cacheLookup.scala 449:131]
                              node _result32_T_15 = mux(_result32_T_13, storeChunks[_wordStore_T], _result32_T_14) @[cacheLookup.scala 449:45]
                              result32 <= _result32_T_15 @[cacheLookup.scala 449:39]
                            else :
                              node _T_37 = eq(UInt<5>("h14"), _T_30) @[cacheLookup.scala 443:51]
                              when _T_37 : @[cacheLookup.scala 443:51]
                                node _result32_T_16 = asSInt(storeChunks[_wordStore_T]) @[cacheLookup.scala 450:56]
                                node _result32_T_17 = bits(storeDataBuffer.data, 31, 0) @[cacheLookup.scala 450:85]
                                node _result32_T_18 = asSInt(_result32_T_17) @[cacheLookup.scala 450:92]
                                node _result32_T_19 = gt(_result32_T_16, _result32_T_18) @[cacheLookup.scala 450:63]
                                node _result32_T_20 = bits(storeDataBuffer.data, 31, 0) @[cacheLookup.scala 450:131]
                                node _result32_T_21 = mux(_result32_T_19, storeChunks[_wordStore_T], _result32_T_20) @[cacheLookup.scala 450:45]
                                result32 <= _result32_T_21 @[cacheLookup.scala 450:39]
                              else :
                                node _T_38 = eq(UInt<5>("h18"), _T_30) @[cacheLookup.scala 443:51]
                                when _T_38 : @[cacheLookup.scala 443:51]
                                  node _result32_T_22 = bits(storeDataBuffer.data, 31, 0) @[cacheLookup.scala 451:78]
                                  node _result32_T_23 = lt(storeChunks[_wordStore_T], _result32_T_22) @[cacheLookup.scala 451:56]
                                  node _result32_T_24 = bits(storeDataBuffer.data, 31, 0) @[cacheLookup.scala 451:117]
                                  node _result32_T_25 = mux(_result32_T_23, storeChunks[_wordStore_T], _result32_T_24) @[cacheLookup.scala 451:45]
                                  result32 <= _result32_T_25 @[cacheLookup.scala 451:39]
                                else :
                                  node _T_39 = eq(UInt<5>("h1c"), _T_30) @[cacheLookup.scala 443:51]
                                  when _T_39 : @[cacheLookup.scala 443:51]
                                    node _result32_T_26 = bits(storeDataBuffer.data, 31, 0) @[cacheLookup.scala 452:78]
                                    node _result32_T_27 = lt(storeChunks[_wordStore_T], _result32_T_26) @[cacheLookup.scala 452:56]
                                    node _result32_T_28 = bits(storeDataBuffer.data, 31, 0) @[cacheLookup.scala 452:117]
                                    node _result32_T_29 = mux(_result32_T_27, storeChunks[_wordStore_T], _result32_T_28) @[cacheLookup.scala 452:45]
                                    result32 <= _result32_T_29 @[cacheLookup.scala 452:39]
                  node _T_40 = bits(inputBuffer.address, 5, 2) @[cacheLookup.scala 454:47]
                  newstoreChunks[_T_40] <= result32 @[cacheLookup.scala 454:54]
                node _T_41 = bits(inputBuffer.address, 14, 12) @[cacheLookup.scala 456:35]
                node _T_42 = eq(_T_41, UInt<2>("h3")) @[cacheLookup.scala 456:43]
                when _T_42 : @[cacheLookup.scala 456:56]
                  node _T_43 = bits(inputBuffer.instruction, 31, 27) @[cacheLookup.scala 457:43]
                  node _T_44 = eq(UInt<1>("h1"), _T_43) @[cacheLookup.scala 457:51]
                  when _T_44 : @[cacheLookup.scala 457:51]
                    result64 <= storeDataBuffer.data @[cacheLookup.scala 458:39]
                  else :
                    node _T_45 = eq(UInt<1>("h0"), _T_43) @[cacheLookup.scala 457:51]
                    when _T_45 : @[cacheLookup.scala 457:51]
                      node _result64_T = add(doubleWordStore, storeDataBuffer.data) @[cacheLookup.scala 459:58]
                      node _result64_T_1 = tail(_result64_T, 1) @[cacheLookup.scala 459:58]
                      result64 <= _result64_T_1 @[cacheLookup.scala 459:39]
                    else :
                      node _T_46 = eq(UInt<3>("h4"), _T_43) @[cacheLookup.scala 457:51]
                      when _T_46 : @[cacheLookup.scala 457:51]
                        node _result64_T_2 = xor(doubleWordStore, storeDataBuffer.data) @[cacheLookup.scala 460:58]
                        result64 <= _result64_T_2 @[cacheLookup.scala 460:39]
                      else :
                        node _T_47 = eq(UInt<4>("hc"), _T_43) @[cacheLookup.scala 457:51]
                        when _T_47 : @[cacheLookup.scala 457:51]
                          node _result64_T_3 = and(doubleWordStore, storeDataBuffer.data) @[cacheLookup.scala 461:58]
                          result64 <= _result64_T_3 @[cacheLookup.scala 461:39]
                        else :
                          node _T_48 = eq(UInt<4>("h8"), _T_43) @[cacheLookup.scala 457:51]
                          when _T_48 : @[cacheLookup.scala 457:51]
                            node _result64_T_4 = or(doubleWordStore, storeDataBuffer.data) @[cacheLookup.scala 462:58]
                            result64 <= _result64_T_4 @[cacheLookup.scala 462:39]
                          else :
                            node _T_49 = eq(UInt<5>("h10"), _T_43) @[cacheLookup.scala 457:51]
                            when _T_49 : @[cacheLookup.scala 457:51]
                              node _result64_T_5 = asSInt(doubleWordStore) @[cacheLookup.scala 463:62]
                              node _result64_T_6 = asSInt(storeDataBuffer.data) @[cacheLookup.scala 463:92]
                              node _result64_T_7 = lt(_result64_T_5, _result64_T_6) @[cacheLookup.scala 463:69]
                              node _result64_T_8 = mux(_result64_T_7, doubleWordStore, storeDataBuffer.data) @[cacheLookup.scala 463:45]
                              result64 <= _result64_T_8 @[cacheLookup.scala 463:39]
                            else :
                              node _T_50 = eq(UInt<5>("h14"), _T_43) @[cacheLookup.scala 457:51]
                              when _T_50 : @[cacheLookup.scala 457:51]
                                node _result64_T_9 = asSInt(doubleWordStore) @[cacheLookup.scala 464:62]
                                node _result64_T_10 = asSInt(storeDataBuffer.data) @[cacheLookup.scala 464:92]
                                node _result64_T_11 = gt(_result64_T_9, _result64_T_10) @[cacheLookup.scala 464:69]
                                node _result64_T_12 = mux(_result64_T_11, doubleWordStore, storeDataBuffer.data) @[cacheLookup.scala 464:45]
                                result64 <= _result64_T_12 @[cacheLookup.scala 464:39]
                              else :
                                node _T_51 = eq(UInt<5>("h18"), _T_43) @[cacheLookup.scala 457:51]
                                when _T_51 : @[cacheLookup.scala 457:51]
                                  node _result64_T_13 = lt(doubleWordStore, storeDataBuffer.data) @[cacheLookup.scala 465:62]
                                  node _result64_T_14 = mux(_result64_T_13, doubleWordStore, storeDataBuffer.data) @[cacheLookup.scala 465:45]
                                  result64 <= _result64_T_14 @[cacheLookup.scala 465:39]
                                else :
                                  node _T_52 = eq(UInt<5>("h1c"), _T_43) @[cacheLookup.scala 457:51]
                                  when _T_52 : @[cacheLookup.scala 457:51]
                                    node _result64_T_15 = lt(doubleWordStore, storeDataBuffer.data) @[cacheLookup.scala 466:62]
                                    node _result64_T_16 = mux(_result64_T_15, doubleWordStore, storeDataBuffer.data) @[cacheLookup.scala 466:45]
                                    result64 <= _result64_T_16 @[cacheLookup.scala 466:39]
                  node _T_53 = bits(inputBuffer.address, 5, 2) @[cacheLookup.scala 468:47]
                  node _newstoreChunks_T_16 = bits(result64, 31, 0) @[cacheLookup.scala 468:65]
                  newstoreChunks[_T_53] <= _newstoreChunks_T_16 @[cacheLookup.scala 468:54]
                  node _T_54 = bits(inputBuffer.address, 5, 2) @[cacheLookup.scala 469:47]
                  node _T_55 = add(_T_54, UInt<1>("h1")) @[cacheLookup.scala 469:53]
                  node _T_56 = tail(_T_55, 1) @[cacheLookup.scala 469:53]
                  node _newstoreChunks_T_17 = bits(result64, 63, 32) @[cacheLookup.scala 469:71]
                  newstoreChunks[_T_56] <= _newstoreChunks_T_17 @[cacheLookup.scala 469:60]
              else :
                node _T_57 = eq(permissionMiss, UInt<1>("h0")) @[cacheLookup.scala 472:16]
                when _T_57 : @[cacheLookup.scala 472:32]
                  node _T_58 = bits(inputBuffer.instruction, 13, 12) @[cacheLookup.scala 473:43]
                  node _T_59 = eq(UInt<1>("h0"), _T_58) @[cacheLookup.scala 473:51]
                  when _T_59 : @[cacheLookup.scala 473:51]
                    node _storeByteChunks_0_T = bits(storeDataBuffer.data, 7, 0) @[cacheLookup.scala 474:93]
                    storeByteChunks[UInt<1>("h0")] <= _storeByteChunks_0_T @[cacheLookup.scala 474:70]
                  else :
                    node _T_60 = eq(UInt<1>("h1"), _T_58) @[cacheLookup.scala 473:51]
                    when _T_60 : @[cacheLookup.scala 473:51]
                      node _storeByteChunks_0_T_1 = bits(storeDataBuffer.data, 7, 0) @[cacheLookup.scala 475:93]
                      storeByteChunks[UInt<1>("h0")] <= _storeByteChunks_0_T_1 @[cacheLookup.scala 475:70]
                      node _storeByteChunks_1_T = bits(storeDataBuffer.data, 15, 8) @[cacheLookup.scala 475:93]
                      storeByteChunks[UInt<1>("h1")] <= _storeByteChunks_1_T @[cacheLookup.scala 475:70]
                    else :
                      node _T_61 = eq(UInt<2>("h2"), _T_58) @[cacheLookup.scala 473:51]
                      when _T_61 : @[cacheLookup.scala 473:51]
                        node _storeByteChunks_0_T_2 = bits(storeDataBuffer.data, 7, 0) @[cacheLookup.scala 476:93]
                        storeByteChunks[UInt<1>("h0")] <= _storeByteChunks_0_T_2 @[cacheLookup.scala 476:70]
                        node _storeByteChunks_1_T_1 = bits(storeDataBuffer.data, 15, 8) @[cacheLookup.scala 476:93]
                        storeByteChunks[UInt<1>("h1")] <= _storeByteChunks_1_T_1 @[cacheLookup.scala 476:70]
                        node _storeByteChunks_2_T = bits(storeDataBuffer.data, 23, 16) @[cacheLookup.scala 476:93]
                        storeByteChunks[UInt<2>("h2")] <= _storeByteChunks_2_T @[cacheLookup.scala 476:70]
                        node _storeByteChunks_3_T = bits(storeDataBuffer.data, 31, 24) @[cacheLookup.scala 476:93]
                        storeByteChunks[UInt<2>("h3")] <= _storeByteChunks_3_T @[cacheLookup.scala 476:70]
                      else :
                        node _T_62 = eq(UInt<2>("h3"), _T_58) @[cacheLookup.scala 473:51]
                        when _T_62 : @[cacheLookup.scala 473:51]
                          node _storeByteChunks_0_T_3 = bits(storeDataBuffer.data, 7, 0) @[cacheLookup.scala 477:93]
                          storeByteChunks[UInt<1>("h0")] <= _storeByteChunks_0_T_3 @[cacheLookup.scala 477:70]
                          node _storeByteChunks_1_T_2 = bits(storeDataBuffer.data, 15, 8) @[cacheLookup.scala 477:93]
                          storeByteChunks[UInt<1>("h1")] <= _storeByteChunks_1_T_2 @[cacheLookup.scala 477:70]
                          node _storeByteChunks_2_T_1 = bits(storeDataBuffer.data, 23, 16) @[cacheLookup.scala 477:93]
                          storeByteChunks[UInt<2>("h2")] <= _storeByteChunks_2_T_1 @[cacheLookup.scala 477:70]
                          node _storeByteChunks_3_T_1 = bits(storeDataBuffer.data, 31, 24) @[cacheLookup.scala 477:93]
                          storeByteChunks[UInt<2>("h3")] <= _storeByteChunks_3_T_1 @[cacheLookup.scala 477:70]
                          node _storeByteChunks_4_T = bits(storeDataBuffer.data, 39, 32) @[cacheLookup.scala 477:93]
                          storeByteChunks[UInt<3>("h4")] <= _storeByteChunks_4_T @[cacheLookup.scala 477:70]
                          node _storeByteChunks_5_T = bits(storeDataBuffer.data, 47, 40) @[cacheLookup.scala 477:93]
                          storeByteChunks[UInt<3>("h5")] <= _storeByteChunks_5_T @[cacheLookup.scala 477:70]
                          node _storeByteChunks_6_T = bits(storeDataBuffer.data, 55, 48) @[cacheLookup.scala 477:93]
                          storeByteChunks[UInt<3>("h6")] <= _storeByteChunks_6_T @[cacheLookup.scala 477:70]
                          node _storeByteChunks_7_T = bits(storeDataBuffer.data, 63, 56) @[cacheLookup.scala 477:93]
                          storeByteChunks[UInt<3>("h7")] <= _storeByteChunks_7_T @[cacheLookup.scala 477:70]
                  node _T_63 = bits(inputBuffer.address, 5, 2) @[cacheLookup.scala 479:47]
                  node newstoreChunks_lo = cat(storeByteChunks[1], storeByteChunks[0]) @[Cat.scala 33:92]
                  node newstoreChunks_hi = cat(storeByteChunks[3], storeByteChunks[2]) @[Cat.scala 33:92]
                  node _newstoreChunks_T_18 = cat(newstoreChunks_hi, newstoreChunks_lo) @[Cat.scala 33:92]
                  newstoreChunks[_T_63] <= _newstoreChunks_T_18 @[cacheLookup.scala 479:55]
                  node _T_64 = bits(inputBuffer.address, 5, 2) @[cacheLookup.scala 480:47]
                  node _T_65 = add(_T_64, UInt<1>("h1")) @[cacheLookup.scala 480:54]
                  node _T_66 = tail(_T_65, 1) @[cacheLookup.scala 480:54]
                  node newstoreChunks_lo_1 = cat(storeByteChunks[5], storeByteChunks[4]) @[Cat.scala 33:92]
                  node newstoreChunks_hi_1 = cat(storeByteChunks[7], storeByteChunks[6]) @[Cat.scala 33:92]
                  node _newstoreChunks_T_19 = cat(newstoreChunks_hi_1, newstoreChunks_lo_1) @[Cat.scala 33:92]
                  newstoreChunks[_T_66] <= _newstoreChunks_T_19 @[cacheLookup.scala 480:61]
              when reservationRegister.reserved : @[cacheLookup.scala 485:43]
                node _T_67 = eq(UInt<1>("h0"), reservationRegister.size) @[cacheLookup.scala 486:43]
                when _T_67 : @[cacheLookup.scala 486:43]
                  node _reservationRegister_reserved_T = bits(reservationRegister.address, 31, 2) @[cacheLookup.scala 487:83]
                  node _reservationRegister_reserved_T_1 = bits(inputBuffer.address, 31, 2) @[cacheLookup.scala 487:126]
                  node _reservationRegister_reserved_T_2 = eq(_reservationRegister_reserved_T, _reservationRegister_reserved_T_1) @[cacheLookup.scala 487:102]
                  node _reservationRegister_reserved_T_3 = eq(_reservationRegister_reserved_T_2, UInt<1>("h0")) @[cacheLookup.scala 487:53]
                  reservationRegister.reserved <= _reservationRegister_reserved_T_3 @[cacheLookup.scala 487:50]
                else :
                  node _T_68 = eq(UInt<1>("h1"), reservationRegister.size) @[cacheLookup.scala 486:43]
                  when _T_68 : @[cacheLookup.scala 486:43]
                    node _reservationRegister_reserved_T_4 = bits(reservationRegister.address, 31, 3) @[cacheLookup.scala 488:83]
                    node _reservationRegister_reserved_T_5 = bits(inputBuffer.address, 31, 3) @[cacheLookup.scala 488:126]
                    node _reservationRegister_reserved_T_6 = eq(_reservationRegister_reserved_T_4, _reservationRegister_reserved_T_5) @[cacheLookup.scala 488:102]
                    node _reservationRegister_reserved_T_7 = eq(_reservationRegister_reserved_T_6, UInt<1>("h0")) @[cacheLookup.scala 488:53]
                    reservationRegister.reserved <= _reservationRegister_reserved_T_7 @[cacheLookup.scala 488:50]
              when isSCWire : @[cacheLookup.scala 491:23]
                reservationRegister.reserved <= UInt<1>("h0") @[cacheLookup.scala 492:40]
            when isCoherentWire : @[cacheLookup.scala 495:27]
              when inputBuffer.invalidateReq : @[cacheLookup.scala 496:40]
                newValidBitWire <= UInt<1>("h0") @[cacheLookup.scala 497:27]
                newPLRUBitWire <= UInt<1>("h0") @[cacheLookup.scala 498:26]
                newShareBitWire <= UInt<1>("h0") @[cacheLookup.scala 499:27]
                newDirtyBitWire <= UInt<1>("h0") @[cacheLookup.scala 500:27]
              else :
                node _newShareBitWire_T_6 = or(hitTagWire_2, UInt<2>("h0"))
                node _newShareBitWire_T_7 = bits(_newShareBitWire_T_6, 1, 0)
                node _newShareBitWire_T_8 = bits(tagChunks_2[_newShareBitWire_T_7], 21, 21) @[cacheLookup.scala 502:81]
                node _newShareBitWire_T_9 = mux(inputBuffer.dataReq, UInt<1>("h1"), _newShareBitWire_T_8) @[cacheLookup.scala 502:33]
                newShareBitWire <= _newShareBitWire_T_9 @[cacheLookup.scala 502:27]
              when reservationRegister.reserved : @[cacheLookup.scala 504:43]
                node _T_69 = eq(UInt<1>("h0"), reservationRegister.size) @[cacheLookup.scala 505:43]
                when _T_69 : @[cacheLookup.scala 505:43]
                  node _reservationRegister_reserved_T_8 = bits(reservationRegister.address, 31, 2) @[cacheLookup.scala 506:83]
                  node _reservationRegister_reserved_T_9 = bits(inputBuffer.address, 31, 2) @[cacheLookup.scala 506:126]
                  node _reservationRegister_reserved_T_10 = eq(_reservationRegister_reserved_T_8, _reservationRegister_reserved_T_9) @[cacheLookup.scala 506:102]
                  node _reservationRegister_reserved_T_11 = eq(_reservationRegister_reserved_T_10, UInt<1>("h0")) @[cacheLookup.scala 506:53]
                  reservationRegister.reserved <= _reservationRegister_reserved_T_11 @[cacheLookup.scala 506:50]
                else :
                  node _T_70 = eq(UInt<1>("h1"), reservationRegister.size) @[cacheLookup.scala 505:43]
                  when _T_70 : @[cacheLookup.scala 505:43]
                    node _reservationRegister_reserved_T_12 = bits(reservationRegister.address, 31, 3) @[cacheLookup.scala 507:83]
                    node _reservationRegister_reserved_T_13 = bits(inputBuffer.address, 31, 3) @[cacheLookup.scala 507:126]
                    node _reservationRegister_reserved_T_14 = eq(_reservationRegister_reserved_T_12, _reservationRegister_reserved_T_13) @[cacheLookup.scala 507:102]
                    node _reservationRegister_reserved_T_15 = eq(_reservationRegister_reserved_T_14, UInt<1>("h0")) @[cacheLookup.scala 507:53]
                    reservationRegister.reserved <= _reservationRegister_reserved_T_15 @[cacheLookup.scala 507:50]
            node updatingSet = mux(isMissWire_2, replacingset, hitTagWire_2) @[cacheLookup.scala 512:28]
            reg tagBRAM_writeEn_REG : UInt<1>, clock with :
              reset => (UInt<1>("h0"), tagBRAM_writeEn_REG) @[cacheLookup.scala 514:33]
            tagBRAM_writeEn_REG <= UInt<1>("h1") @[cacheLookup.scala 514:33]
            tagBRAM.writeEn <= tagBRAM_writeEn_REG @[cacheLookup.scala 514:23]
            node _T_71 = and(PLRUSetWire[0], PLRUSetWire[1]) @[cacheLookup.scala 515:33]
            node _T_72 = and(_T_71, PLRUSetWire[2]) @[cacheLookup.scala 515:33]
            node _T_73 = and(_T_72, PLRUSetWire[3]) @[cacheLookup.scala 515:33]
            when _T_73 : @[cacheLookup.scala 515:38]
              node _newtagChunks_0_T = shl(UInt<1>("h1"), 22) @[cacheLookup.scala 517:51]
              node _newtagChunks_0_T_1 = not(_newtagChunks_0_T) @[cacheLookup.scala 517:45]
              node _newtagChunks_0_T_2 = and(tagChunks_2[0], _newtagChunks_0_T_1) @[cacheLookup.scala 517:43]
              newtagChunks[0] <= _newtagChunks_0_T_2 @[cacheLookup.scala 517:27]
              node _newtagChunks_1_T = shl(UInt<1>("h1"), 22) @[cacheLookup.scala 517:51]
              node _newtagChunks_1_T_1 = not(_newtagChunks_1_T) @[cacheLookup.scala 517:45]
              node _newtagChunks_1_T_2 = and(tagChunks_2[1], _newtagChunks_1_T_1) @[cacheLookup.scala 517:43]
              newtagChunks[1] <= _newtagChunks_1_T_2 @[cacheLookup.scala 517:27]
              node _newtagChunks_2_T = shl(UInt<1>("h1"), 22) @[cacheLookup.scala 517:51]
              node _newtagChunks_2_T_1 = not(_newtagChunks_2_T) @[cacheLookup.scala 517:45]
              node _newtagChunks_2_T_2 = and(tagChunks_2[2], _newtagChunks_2_T_1) @[cacheLookup.scala 517:43]
              newtagChunks[2] <= _newtagChunks_2_T_2 @[cacheLookup.scala 517:27]
              node _newtagChunks_3_T = shl(UInt<1>("h1"), 22) @[cacheLookup.scala 517:51]
              node _newtagChunks_3_T_1 = not(_newtagChunks_3_T) @[cacheLookup.scala 517:45]
              node _newtagChunks_3_T_2 = and(tagChunks_2[3], _newtagChunks_3_T_1) @[cacheLookup.scala 517:43]
              newtagChunks[3] <= _newtagChunks_3_T_2 @[cacheLookup.scala 517:27]
            node _T_74 = or(updatingSet, UInt<2>("h0"))
            node _T_75 = bits(_T_74, 1, 0)
            node _newtagChunks_T_4 = or(updatingSet, UInt<2>("h0"))
            node _newtagChunks_T_5 = bits(_newtagChunks_T_4, 1, 0)
            node _newtagChunks_T_6 = bits(tagChunks_2[_newtagChunks_T_5], 23, 23) @[cacheLookup.scala 520:62]
            node newtagChunks_lo_hi = cat(newDirtyBitWire, newValidBitWire) @[Cat.scala 33:92]
            node newtagChunks_lo = cat(newtagChunks_lo_hi, newAddrWire) @[Cat.scala 33:92]
            node newtagChunks_hi_hi = cat(_newtagChunks_T_6, newPLRUBitWire) @[Cat.scala 33:92]
            node newtagChunks_hi = cat(newtagChunks_hi_hi, newShareBitWire) @[Cat.scala 33:92]
            node _newtagChunks_T_7 = cat(newtagChunks_hi, newtagChunks_lo) @[Cat.scala 33:92]
            newtagChunks[_T_75] <= _newtagChunks_T_7 @[cacheLookup.scala 520:33]
            node _tagBRAM_writeData_T = cat(newtagChunks[3], newtagChunks[2]) @[Cat.scala 33:92]
            node _tagBRAM_writeData_T_1 = cat(_tagBRAM_writeData_T, newtagChunks[1]) @[Cat.scala 33:92]
            node _tagBRAM_writeData_T_2 = cat(_tagBRAM_writeData_T_1, newtagChunks[0]) @[Cat.scala 33:92]
            tagBRAM.writeData <= _tagBRAM_writeData_T_2 @[cacheLookup.scala 522:25]
            node _T_76 = or(updatingSet, UInt<2>("h0"))
            node _T_77 = bits(_T_76, 1, 0)
            node _dataBRAMVec_writeEn_T = or(isMissWire_2, isStoreWire) @[cacheLookup.scala 524:54]
            dataBRAMVec[_T_77].writeEn <= _dataBRAMVec_writeEn_T @[cacheLookup.scala 524:40]
            node _T_78 = or(updatingSet, UInt<2>("h0"))
            node _T_79 = bits(_T_78, 1, 0)
            node _dataBRAMVec_writeData_T = cat(newstoreChunks[15], newstoreChunks[14]) @[Cat.scala 33:92]
            node _dataBRAMVec_writeData_T_1 = cat(_dataBRAMVec_writeData_T, newstoreChunks[13]) @[Cat.scala 33:92]
            node _dataBRAMVec_writeData_T_2 = cat(_dataBRAMVec_writeData_T_1, newstoreChunks[12]) @[Cat.scala 33:92]
            node _dataBRAMVec_writeData_T_3 = cat(_dataBRAMVec_writeData_T_2, newstoreChunks[11]) @[Cat.scala 33:92]
            node _dataBRAMVec_writeData_T_4 = cat(_dataBRAMVec_writeData_T_3, newstoreChunks[10]) @[Cat.scala 33:92]
            node _dataBRAMVec_writeData_T_5 = cat(_dataBRAMVec_writeData_T_4, newstoreChunks[9]) @[Cat.scala 33:92]
            node _dataBRAMVec_writeData_T_6 = cat(_dataBRAMVec_writeData_T_5, newstoreChunks[8]) @[Cat.scala 33:92]
            node _dataBRAMVec_writeData_T_7 = cat(_dataBRAMVec_writeData_T_6, newstoreChunks[7]) @[Cat.scala 33:92]
            node _dataBRAMVec_writeData_T_8 = cat(_dataBRAMVec_writeData_T_7, newstoreChunks[6]) @[Cat.scala 33:92]
            node _dataBRAMVec_writeData_T_9 = cat(_dataBRAMVec_writeData_T_8, newstoreChunks[5]) @[Cat.scala 33:92]
            node _dataBRAMVec_writeData_T_10 = cat(_dataBRAMVec_writeData_T_9, newstoreChunks[4]) @[Cat.scala 33:92]
            node _dataBRAMVec_writeData_T_11 = cat(_dataBRAMVec_writeData_T_10, newstoreChunks[3]) @[Cat.scala 33:92]
            node _dataBRAMVec_writeData_T_12 = cat(_dataBRAMVec_writeData_T_11, newstoreChunks[2]) @[Cat.scala 33:92]
            node _dataBRAMVec_writeData_T_13 = cat(_dataBRAMVec_writeData_T_12, newstoreChunks[1]) @[Cat.scala 33:92]
            node _dataBRAMVec_writeData_T_14 = cat(_dataBRAMVec_writeData_T_13, newstoreChunks[0]) @[Cat.scala 33:92]
            dataBRAMVec[_T_79].writeData <= _dataBRAMVec_writeData_T_14 @[cacheLookup.scala 525:42]
            node _writeBackCacheLine_T = or(hitTagWire_2, UInt<2>("h0"))
            node _writeBackCacheLine_T_1 = bits(_writeBackCacheLine_T, 1, 0)
            writeBackCacheLine <= dataBRAMVec[_writeBackCacheLine_T_1].readData @[cacheLookup.scala 527:26]
            node _T_80 = eq(isBranchFailWire, UInt<1>("h0")) @[cacheLookup.scala 529:12]
            when _T_80 : @[cacheLookup.scala 529:30]
              node _T_81 = eq(isCoherentWire, UInt<1>("h0")) @[cacheLookup.scala 531:14]
              when _T_81 : @[cacheLookup.scala 531:30]
                node _cacheState_T_9 = and(isMissWire_2, dirtyBitWire) @[cacheLookup.scala 533:40]
                node _cacheState_T_10 = mux(_cacheState_T_9, UInt<3>("h7"), UInt<3>("h0")) @[cacheLookup.scala 533:28]
                cacheState <= _cacheState_T_10 @[cacheLookup.scala 533:22]
              else :
                cacheState <= UInt<3>("h0") @[cacheLookup.scala 535:22]
            else :
              cacheState <= UInt<3>("h0") @[cacheLookup.scala 538:20]
          else :
            node _T_82 = eq(UInt<3>("h4"), cacheState) @[cacheLookup.scala 269:21]
            when _T_82 : @[cacheLookup.scala 269:21]
              node _tagChunks_T_12 = bits(tagBRAM.readData, 23, 0) @[cacheLookup.scala 543:25]
              node _tagChunks_T_13 = bits(tagBRAM.readData, 47, 24) @[cacheLookup.scala 543:25]
              node _tagChunks_T_14 = bits(tagBRAM.readData, 71, 48) @[cacheLookup.scala 543:25]
              node _tagChunks_T_15 = bits(tagBRAM.readData, 95, 72) @[cacheLookup.scala 543:25]
              wire tagChunks_3 : UInt<24>[4] @[cacheLookup.scala 542:30]
              tagChunks_3[0] <= _tagChunks_T_12 @[cacheLookup.scala 542:30]
              tagChunks_3[1] <= _tagChunks_T_13 @[cacheLookup.scala 542:30]
              tagChunks_3[2] <= _tagChunks_T_14 @[cacheLookup.scala 542:30]
              tagChunks_3[3] <= _tagChunks_T_15 @[cacheLookup.scala 542:30]
              node _hitTagWire_T_9 = mux(matchFoundReg[2], UInt<2>("h2"), UInt<2>("h3")) @[Mux.scala 47:70]
              node _hitTagWire_T_10 = mux(matchFoundReg[1], UInt<1>("h1"), _hitTagWire_T_9) @[Mux.scala 47:70]
              node _hitTagWire_T_11 = mux(matchFoundReg[0], UInt<1>("h0"), _hitTagWire_T_10) @[Mux.scala 47:70]
              wire hitTagWire_3 : UInt
              hitTagWire_3 <= _hitTagWire_T_11
              node _validBitWire_T_9 = or(hitTagWire_3, UInt<2>("h0"))
              node _validBitWire_T_10 = bits(_validBitWire_T_9, 1, 0)
              node _validBitWire_T_11 = bits(tagChunks_3[_validBitWire_T_10], 19, 19) @[cacheLookup.scala 547:56]
              wire validBitWire_3 : UInt<1>
              validBitWire_3 <= _validBitWire_T_11
              node _isMissWire_T_12 = or(matchFoundReg[0], matchFoundReg[1]) @[cacheLookup.scala 548:49]
              node _isMissWire_T_13 = or(_isMissWire_T_12, matchFoundReg[2]) @[cacheLookup.scala 548:49]
              node _isMissWire_T_14 = or(_isMissWire_T_13, matchFoundReg[3]) @[cacheLookup.scala 548:49]
              node _isMissWire_T_15 = and(_isMissWire_T_14, validBitWire_3) @[cacheLookup.scala 548:54]
              node isMissWire_3 = eq(_isMissWire_T_15, UInt<1>("h0")) @[cacheLookup.scala 548:24]
              memoryRequest.valid <= UInt<1>("h1") @[cacheLookup.scala 550:27]
              memoryRequest.address <= inputBuffer.address @[cacheLookup.scala 551:29]
              memoryRequest.data <= UInt<1>("h0") @[cacheLookup.scala 552:26]
              memoryRequest.writeEn <= UInt<1>("h0") @[cacheLookup.scala 553:29]
              when isLoadWire : @[cacheLookup.scala 554:23]
                memoryRequest.isUnique <= UInt<1>("h0") @[cacheLookup.scala 556:32]
                memoryRequest.isClean <= UInt<1>("h0") @[cacheLookup.scala 557:31]
              when isStoreWire : @[cacheLookup.scala 559:24]
                when isMissWire_3 : @[cacheLookup.scala 560:25]
                  memoryRequest.isUnique <= UInt<1>("h1") @[cacheLookup.scala 562:34]
                  memoryRequest.isClean <= UInt<1>("h0") @[cacheLookup.scala 563:33]
                else :
                  memoryRequest.isUnique <= UInt<1>("h1") @[cacheLookup.scala 566:34]
                  memoryRequest.isClean <= UInt<1>("h1") @[cacheLookup.scala 567:33]
              node _T_83 = eq(isBranchFailWire, UInt<1>("h0")) @[cacheLookup.scala 571:12]
              when _T_83 : @[cacheLookup.scala 571:30]
                node _cacheState_T_11 = mux(memoryRequest.ready, UInt<3>("h5"), UInt<3>("h4")) @[cacheLookup.scala 572:26]
                cacheState <= _cacheState_T_11 @[cacheLookup.scala 572:20]
              else :
                cacheState <= UInt<3>("h0") @[cacheLookup.scala 574:20]
            else :
              node _T_84 = eq(UInt<3>("h5"), cacheState) @[cacheLookup.scala 269:21]
              when _T_84 : @[cacheLookup.scala 269:21]
                loadData.ready <= UInt<1>("h1") @[cacheLookup.scala 578:22]
                when loadData.valid : @[cacheLookup.scala 579:27]
                  receivedCacheLine <= loadData.data @[cacheLookup.scala 580:27]
                  receivedResponse <= loadData.response @[cacheLookup.scala 581:26]
                node _T_85 = eq(atomicsInOperationWire, UInt<1>("h0")) @[cacheLookup.scala 584:33]
                node _T_86 = and(coherencyReceived, _T_85) @[cacheLookup.scala 584:30]
                when _T_86 : @[cacheLookup.scala 584:57]
                  cacheState <= UInt<3>("h0") @[cacheLookup.scala 585:20]
                else :
                  when loadData.valid : @[cacheLookup.scala 587:29]
                    when isStoreWire : @[cacheLookup.scala 588:28]
                      node _cacheState_T_12 = mux(isBranchFailWire, UInt<3>("h0"), UInt<3>("h3")) @[cacheLookup.scala 589:30]
                      cacheState <= _cacheState_T_12 @[cacheLookup.scala 589:24]
                    else :
                      node _cacheState_T_13 = mux(isBranchFailWire, UInt<3>("h0"), UInt<3>("h2")) @[cacheLookup.scala 591:30]
                      cacheState <= _cacheState_T_13 @[cacheLookup.scala 591:24]
                  else :
                    cacheState <= UInt<3>("h5") @[cacheLookup.scala 594:22]
              else :
                node _T_87 = eq(UInt<3>("h6"), cacheState) @[cacheLookup.scala 269:21]
                when _T_87 : @[cacheLookup.scala 269:21]
                  node _tagChunks_T_16 = bits(tagBRAM.readData, 23, 0) @[cacheLookup.scala 600:25]
                  node _tagChunks_T_17 = bits(tagBRAM.readData, 47, 24) @[cacheLookup.scala 600:25]
                  node _tagChunks_T_18 = bits(tagBRAM.readData, 71, 48) @[cacheLookup.scala 600:25]
                  node _tagChunks_T_19 = bits(tagBRAM.readData, 95, 72) @[cacheLookup.scala 600:25]
                  wire tagChunks_4 : UInt<24>[4] @[cacheLookup.scala 599:30]
                  tagChunks_4[0] <= _tagChunks_T_16 @[cacheLookup.scala 599:30]
                  tagChunks_4[1] <= _tagChunks_T_17 @[cacheLookup.scala 599:30]
                  tagChunks_4[2] <= _tagChunks_T_18 @[cacheLookup.scala 599:30]
                  tagChunks_4[3] <= _tagChunks_T_19 @[cacheLookup.scala 599:30]
                  node _hitTagWire_T_12 = mux(matchFoundReg[2], UInt<2>("h2"), UInt<2>("h3")) @[Mux.scala 47:70]
                  node _hitTagWire_T_13 = mux(matchFoundReg[1], UInt<1>("h1"), _hitTagWire_T_12) @[Mux.scala 47:70]
                  node _hitTagWire_T_14 = mux(matchFoundReg[0], UInt<1>("h0"), _hitTagWire_T_13) @[Mux.scala 47:70]
                  wire hitTagWire_4 : UInt
                  hitTagWire_4 <= _hitTagWire_T_14
                  node _newAddrWire_T_6 = or(hitTagWire_4, UInt<2>("h0"))
                  node _newAddrWire_T_7 = bits(_newAddrWire_T_6, 1, 0)
                  node _newAddrWire_T_8 = bits(tagChunks_4[_newAddrWire_T_7], 18, 0) @[cacheLookup.scala 604:55]
                  wire newAddrWire_1 : UInt
                  newAddrWire_1 <= _newAddrWire_T_8
                  node _validBitWire_T_12 = or(hitTagWire_4, UInt<2>("h0"))
                  node _validBitWire_T_13 = bits(_validBitWire_T_12, 1, 0)
                  node _validBitWire_T_14 = bits(tagChunks_4[_validBitWire_T_13], 19, 19) @[cacheLookup.scala 605:56]
                  wire validBitWire_4 : UInt<1>
                  validBitWire_4 <= _validBitWire_T_14
                  node _dirtyBitWire_T_3 = or(hitTagWire_4, UInt<2>("h0"))
                  node _dirtyBitWire_T_4 = bits(_dirtyBitWire_T_3, 1, 0)
                  node _dirtyBitWire_T_5 = bits(tagChunks_4[_dirtyBitWire_T_4], 20, 20) @[cacheLookup.scala 606:56]
                  wire dirtyBitWire_1 : UInt<1>
                  dirtyBitWire_1 <= _dirtyBitWire_T_5
                  node _shareBitWire_T_6 = or(hitTagWire_4, UInt<2>("h0"))
                  node _shareBitWire_T_7 = bits(_shareBitWire_T_6, 1, 0)
                  node _shareBitWire_T_8 = bits(tagChunks_4[_shareBitWire_T_7], 21, 21) @[cacheLookup.scala 607:56]
                  wire shareBitWire_2 : UInt<1>
                  shareBitWire_2 <= _shareBitWire_T_8
                  node _isMissWire_T_16 = or(matchFoundReg[0], matchFoundReg[1]) @[cacheLookup.scala 609:49]
                  node _isMissWire_T_17 = or(_isMissWire_T_16, matchFoundReg[2]) @[cacheLookup.scala 609:49]
                  node _isMissWire_T_18 = or(_isMissWire_T_17, matchFoundReg[3]) @[cacheLookup.scala 609:49]
                  node _isMissWire_T_19 = and(_isMissWire_T_18, validBitWire_4) @[cacheLookup.scala 609:54]
                  node isMissWire_4 = eq(_isMissWire_T_19, UInt<1>("h0")) @[cacheLookup.scala 609:24]
                  memoryRequest.valid <= UInt<1>("h1") @[cacheLookup.scala 611:27]
                  memoryRequest.address <= UInt<1>("h0") @[cacheLookup.scala 612:29]
                  when isMissWire_4 : @[cacheLookup.scala 614:23]
                    memoryRequest.writeEn <= UInt<1>("h0") @[cacheLookup.scala 615:31]
                    memoryRequest.data <= UInt<1>("h0") @[cacheLookup.scala 616:28]
                  else :
                    when inputBuffer.dataReq : @[cacheLookup.scala 618:34]
                      memoryRequest.writeEn <= UInt<1>("h1") @[cacheLookup.scala 619:33]
                      node _memoryRequest_data_T = or(hitTagWire_4, UInt<2>("h0"))
                      node _memoryRequest_data_T_1 = bits(_memoryRequest_data_T, 1, 0)
                      memoryRequest.data <= dataBRAMVec[_memoryRequest_data_T_1].readData @[cacheLookup.scala 620:30]
                      node _memoryRequest_isClean_T = eq(dirtyBitWire_1, UInt<1>("h0")) @[cacheLookup.scala 621:67]
                      node _memoryRequest_isClean_T_1 = mux(inputBuffer.invalidateReq, _memoryRequest_isClean_T, UInt<1>("h1")) @[cacheLookup.scala 621:39]
                      memoryRequest.isClean <= _memoryRequest_isClean_T_1 @[cacheLookup.scala 621:33]
                      node _memoryRequest_isUnique_T = eq(shareBitWire_2, UInt<1>("h0")) @[cacheLookup.scala 622:37]
                      memoryRequest.isUnique <= _memoryRequest_isUnique_T @[cacheLookup.scala 622:34]
                    else :
                      memoryRequest.data <= UInt<1>("h0") @[cacheLookup.scala 624:30]
                  when memoryRequest.ready : @[cacheLookup.scala 628:32]
                    when isMissWire_4 : @[cacheLookup.scala 629:25]
                      cacheState <= UInt<3>("h0") @[cacheLookup.scala 630:21]
                    else :
                      cacheState <= UInt<3>("h3") @[cacheLookup.scala 632:22]
                  else :
                    cacheState <= UInt<3>("h7") @[cacheLookup.scala 635:20]
                else :
                  node _T_88 = eq(UInt<3>("h7"), cacheState) @[cacheLookup.scala 269:21]
                  when _T_88 : @[cacheLookup.scala 269:21]
                    memoryRequest.valid <= UInt<1>("h1") @[cacheLookup.scala 639:27]
                    memoryRequest.address <= inputBuffer.address @[cacheLookup.scala 640:29]
                    memoryRequest.writeEn <= UInt<1>("h1") @[cacheLookup.scala 641:29]
                    node _hitTagWire_T_15 = mux(matchFoundReg[2], UInt<2>("h2"), UInt<2>("h3")) @[Mux.scala 47:70]
                    node _hitTagWire_T_16 = mux(matchFoundReg[1], UInt<1>("h1"), _hitTagWire_T_15) @[Mux.scala 47:70]
                    node _hitTagWire_T_17 = mux(matchFoundReg[0], UInt<1>("h0"), _hitTagWire_T_16) @[Mux.scala 47:70]
                    wire hitTagWire_5 : UInt
                    hitTagWire_5 <= _hitTagWire_T_17
                    memoryRequest.isUnique <= UInt<1>("h0") @[cacheLookup.scala 643:30]
                    memoryRequest.data <= writeBackCacheLine @[cacheLookup.scala 645:26]
                    memoryRequest.isClean <= UInt<1>("h0") @[cacheLookup.scala 646:29]
                    node _cacheState_T_14 = mux(memoryRequest.ready, UInt<3>("h0"), UInt<3>("h7")) @[cacheLookup.scala 648:24]
                    cacheState <= _cacheState_T_14 @[cacheLookup.scala 648:18]
    reg priorCacheState : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[cacheLookup.scala 653:32]
    node _T_89 = neq(priorCacheState, cacheState) @[cacheLookup.scala 654:24]
    when _T_89 : @[cacheLookup.scala 654:39]
      node _T_90 = eq(cacheState, UInt<3>("h0")) @[cacheLookup.scala 655:21]
      when _T_90 : @[cacheLookup.scala 655:30]
        priorCacheState <= UInt<3>("h0") @[cacheLookup.scala 656:23]
        freeInputBuffer <= UInt<1>("h1") @[cacheLookup.scala 657:23]
      else :
        priorCacheState <= cacheState @[cacheLookup.scala 659:23]
    else :
      node _T_91 = eq(cacheState, UInt<3>("h0")) @[cacheLookup.scala 662:21]
      when _T_91 : @[cacheLookup.scala 662:30]
        freeInputBuffer <= isBranchFailWire @[cacheLookup.scala 663:23]
    responseOut.data <= resultWire @[cacheLookup.scala 668:20]
    node _T_92 = eq(cacheState, UInt<3>("h2")) @[cacheLookup.scala 669:19]
    when _T_92 : @[cacheLookup.scala 669:31]
      node _responseOut_valid_T = eq(isBranchFailWire, UInt<1>("h0")) @[cacheLookup.scala 670:47]
      node _responseOut_valid_T_1 = and(responseOut.ready, _responseOut_valid_T) @[cacheLookup.scala 670:44]
      responseOut.valid <= _responseOut_valid_T_1 @[cacheLookup.scala 670:23]
    inst commitFifo of commitFifo_1 @[cacheLookup.scala 674:26]
    commitFifo.clock <= clock
    commitFifo.reset <= reset
    commitFifo.dataIn.addr <= UInt<1>("h0") @[cacheLookup.scala 676:26]
    commitFifo.dataIn.valid <= UInt<1>("h0") @[cacheLookup.scala 677:27]
    commitFifo.canAccept <= UInt<1>("h0") @[cacheLookup.scala 678:24]
    commitFifo.invalidateAddr <= UInt<1>("h0") @[cacheLookup.scala 679:29]
    commitFifo.invalidateEnable <= UInt<1>("h0") @[cacheLookup.scala 680:31]
    commitFIFOFull <= commitFifo.isFull @[cacheLookup.scala 681:18]
    node _T_93 = eq(isAtomicsWire, UInt<1>("h0")) @[cacheLookup.scala 683:22]
    node _T_94 = and(isLoadWire, _T_93) @[cacheLookup.scala 683:19]
    node _T_95 = eq(cacheState, UInt<3>("h3")) @[cacheLookup.scala 683:51]
    node _T_96 = and(_T_94, _T_95) @[cacheLookup.scala 683:37]
    when _T_96 : @[cacheLookup.scala 683:62]
      commitFifo.dataIn.addr <= inputBuffer.address @[cacheLookup.scala 684:28]
      commitFifo.dataIn.valid <= UInt<1>("h1") @[cacheLookup.scala 685:29]
    node _T_97 = eq(cacheState, UInt<3>("h0")) @[cacheLookup.scala 687:37]
    node _T_98 = and(isCoherentWire, _T_97) @[cacheLookup.scala 687:23]
    when _T_98 : @[cacheLookup.scala 687:46]
      commitFifo.invalidateAddr <= inputBuffer.address @[cacheLookup.scala 688:31]
      commitFifo.invalidateEnable <= UInt<1>("h1") @[cacheLookup.scala 689:33]
    when loadCommit.ready : @[cacheLookup.scala 691:25]
      commitFifo.canAccept <= UInt<1>("h1") @[cacheLookup.scala 692:26]
      loadCommit.state <= commitFifo.dataOut.valid @[cacheLookup.scala 693:22]
      node _loadCommit_valid_T = eq(commitFifo.isEmpty, UInt<1>("h0")) @[cacheLookup.scala 694:25]
      loadCommit.valid <= _loadCommit_valid_T @[cacheLookup.scala 694:22]

  module CounterModule_7 :
    input clock : Clock
    input reset : Reset
    output count : UInt<1>
    input incrm : UInt<1>

    reg cntReg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[utils.scala 15:23]
    node _cntReg_T = eq(cntReg, UInt<1>("h1")) @[utils.scala 16:33]
    node _cntReg_T_1 = and(incrm, _cntReg_T) @[utils.scala 16:23]
    node _cntReg_T_2 = add(cntReg, UInt<1>("h1")) @[utils.scala 17:35]
    node _cntReg_T_3 = tail(_cntReg_T_2, 1) @[utils.scala 17:35]
    node _cntReg_T_4 = mux(incrm, _cntReg_T_3, cntReg) @[utils.scala 17:20]
    node _cntReg_T_5 = mux(_cntReg_T_1, UInt<1>("h0"), _cntReg_T_4) @[utils.scala 16:16]
    cntReg <= _cntReg_T_5 @[utils.scala 16:10]
    count <= cntReg @[utils.scala 19:9]

  module CounterModule_8 :
    input clock : Clock
    input reset : Reset
    output count : UInt<1>
    input incrm : UInt<1>

    reg cntReg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[utils.scala 15:23]
    node _cntReg_T = eq(cntReg, UInt<1>("h1")) @[utils.scala 16:33]
    node _cntReg_T_1 = and(incrm, _cntReg_T) @[utils.scala 16:23]
    node _cntReg_T_2 = add(cntReg, UInt<1>("h1")) @[utils.scala 17:35]
    node _cntReg_T_3 = tail(_cntReg_T_2, 1) @[utils.scala 17:35]
    node _cntReg_T_4 = mux(incrm, _cntReg_T_3, cntReg) @[utils.scala 17:20]
    node _cntReg_T_5 = mux(_cntReg_T_1, UInt<1>("h0"), _cntReg_T_4) @[utils.scala 16:16]
    cntReg <= _cntReg_T_5 @[utils.scala 16:10]
    count <= cntReg @[utils.scala 19:9]

  module AXIUnit_1 :
    input clock : Clock
    input reset : Reset
    output request : { ready : UInt<1>, flip valid : UInt<1>, flip writeEn : UInt<1>, flip address : UInt<32>, flip data : UInt<64>, flip instruction : UInt<32>}
    output loadData : { flip ready : UInt<1>, valid : UInt<1>, data : UInt<64>, response : UInt<2>}
    output bus : { AWID : UInt<2>, AWADDR : UInt<32>, AWLEN : UInt<8>, AWSIZE : UInt<3>, AWBURST : UInt<2>, AWLOCK : UInt<1>, AWCACHE : UInt<4>, AWPROT : UInt<3>, AWQOS : UInt<4>, AWVALID : UInt<1>, flip AWREADY : UInt<1>, WDATA : UInt<32>, WSTRB : UInt<4>, WLAST : UInt<1>, WVALID : UInt<1>, flip WREADY : UInt<1>, flip BID : UInt<2>, flip BRESP : UInt<2>, flip BVALID : UInt<1>, BREADY : UInt<1>, ARID : UInt<2>, ARADDR : UInt<32>, ARLEN : UInt<8>, ARSIZE : UInt<3>, ARBURST : UInt<2>, ARLOCK : UInt<1>, ARCACHE : UInt<4>, ARPROT : UInt<3>, ARQOS : UInt<4>, ARVALID : UInt<1>, flip ARREADY : UInt<1>, flip RID : UInt<2>, flip RDATA : UInt<32>, flip RRESP : UInt<2>, flip RLAST : UInt<1>, flip RVALID : UInt<1>, RREADY : UInt<1>}

    request.ready <= UInt<1>("h0") @[AXIUnit.scala 34:17]
    loadData.data <= UInt<1>("h0") @[AXIUnit.scala 35:17]
    loadData.valid <= UInt<1>("h0") @[AXIUnit.scala 36:18]
    loadData.response <= UInt<1>("h0") @[AXIUnit.scala 37:21]
    bus.AWID <= UInt<1>("h1") @[AXIUnit.scala 40:12]
    bus.AWADDR <= UInt<1>("h0") @[AXIUnit.scala 41:14]
    bus.AWLEN <= UInt<1>("h0") @[AXIUnit.scala 42:13]
    bus.AWSIZE <= UInt<1>("h0") @[AXIUnit.scala 43:14]
    bus.AWBURST <= UInt<1>("h0") @[AXIUnit.scala 44:15]
    bus.AWLOCK <= UInt<1>("h0") @[AXIUnit.scala 45:14]
    bus.AWCACHE <= UInt<1>("h0") @[AXIUnit.scala 46:15]
    bus.AWPROT <= UInt<1>("h0") @[AXIUnit.scala 47:14]
    bus.AWQOS <= UInt<1>("h0") @[AXIUnit.scala 48:13]
    bus.AWVALID <= UInt<1>("h0") @[AXIUnit.scala 49:15]
    bus.WDATA <= UInt<1>("h0") @[AXIUnit.scala 51:13]
    bus.WSTRB <= UInt<1>("h0") @[AXIUnit.scala 52:13]
    bus.WLAST <= UInt<1>("h0") @[AXIUnit.scala 53:13]
    bus.WVALID <= UInt<1>("h0") @[AXIUnit.scala 54:14]
    bus.BREADY <= UInt<1>("h0") @[AXIUnit.scala 56:14]
    bus.ARID <= UInt<1>("h1") @[AXIUnit.scala 58:12]
    bus.ARADDR <= UInt<1>("h0") @[AXIUnit.scala 59:14]
    bus.ARLEN <= UInt<1>("h0") @[AXIUnit.scala 60:13]
    bus.ARSIZE <= UInt<1>("h0") @[AXIUnit.scala 61:14]
    bus.ARBURST <= UInt<1>("h0") @[AXIUnit.scala 62:15]
    bus.ARLOCK <= UInt<1>("h0") @[AXIUnit.scala 63:14]
    bus.ARCACHE <= UInt<1>("h0") @[AXIUnit.scala 64:15]
    bus.ARPROT <= UInt<1>("h0") @[AXIUnit.scala 65:14]
    bus.ARQOS <= UInt<1>("h0") @[AXIUnit.scala 66:13]
    bus.ARVALID <= UInt<1>("h0") @[AXIUnit.scala 67:15]
    bus.RREADY <= UInt<1>("h0") @[AXIUnit.scala 69:14]
    wire readComplete : UInt<1>
    readComplete <= UInt<1>("h0")
    wire writeComplete : UInt<1>
    writeComplete <= UInt<1>("h0")
    wire _inputBuffer_WIRE : { writeEn : UInt<1>, address : UInt<32>, instruction : UInt<32>}
    _inputBuffer_WIRE.instruction <= UInt<1>("h0")
    _inputBuffer_WIRE.address <= UInt<1>("h0")
    _inputBuffer_WIRE.writeEn <= UInt<1>("h0")
    reg inputBuffer : { writeEn : UInt<1>, address : UInt<32>, instruction : UInt<32>}, clock with :
      reset => (reset, _inputBuffer_WIRE) @[AXIUnit.scala 75:28]
    reg inputBufferState : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[AXIUnit.scala 86:33]
    node _T = eq(UInt<2>("h0"), inputBufferState) @[AXIUnit.scala 87:27]
    when _T : @[AXIUnit.scala 87:27]
      request.ready <= UInt<1>("h1") @[AXIUnit.scala 89:21]
      when request.valid : @[AXIUnit.scala 90:26]
        inputBuffer.writeEn <= request.writeEn @[AXIUnit.scala 91:29]
        inputBuffer.address <= request.address @[AXIUnit.scala 92:29]
        inputBuffer.instruction <= request.instruction @[AXIUnit.scala 93:33]
      node _inputBufferState_T = mux(request.writeEn, UInt<2>("h2"), UInt<2>("h1")) @[AXIUnit.scala 97:32]
      node _inputBufferState_T_1 = mux(request.valid, _inputBufferState_T, UInt<2>("h0")) @[AXIUnit.scala 96:30]
      inputBufferState <= _inputBufferState_T_1 @[AXIUnit.scala 96:24]
    else :
      node _T_1 = eq(UInt<2>("h1"), inputBufferState) @[AXIUnit.scala 87:27]
      when _T_1 : @[AXIUnit.scala 87:27]
        node _inputBufferState_T_2 = mux(readComplete, UInt<2>("h0"), UInt<2>("h1")) @[AXIUnit.scala 101:30]
        inputBufferState <= _inputBufferState_T_2 @[AXIUnit.scala 101:24]
      else :
        node _T_2 = eq(UInt<2>("h2"), inputBufferState) @[AXIUnit.scala 87:27]
        when _T_2 : @[AXIUnit.scala 87:27]
          node _inputBufferState_T_3 = mux(writeComplete, UInt<2>("h0"), UInt<2>("h2")) @[AXIUnit.scala 104:30]
          inputBufferState <= _inputBufferState_T_3 @[AXIUnit.scala 104:24]
    reg dataReg : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[AXIUnit.scala 109:26]
    node _dataReg_T = mux(request.valid, request.data, dataReg) @[AXIUnit.scala 110:19]
    dataReg <= _dataReg_T @[AXIUnit.scala 110:13]
    reg readAXIState : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[AXIUnit.scala 116:31]
    wire _readDataVec_WIRE : UInt<32>[2] @[AXIUnit.scala 117:38]
    _readDataVec_WIRE[0] <= UInt<32>("h0") @[AXIUnit.scala 117:38]
    _readDataVec_WIRE[1] <= UInt<32>("h0") @[AXIUnit.scala 117:38]
    reg readDataVec : UInt<32>[2], clock with :
      reset => (reset, _readDataVec_WIRE) @[AXIUnit.scala 117:30]
    reg responseValid : UInt<1>, clock with :
      reset => (reset, UInt<1>("h1")) @[AXIUnit.scala 118:32]
    inst readCounter of CounterModule_7 @[AXIUnit.scala 119:29]
    readCounter.clock <= clock
    readCounter.reset <= reset
    readCounter.incrm <= UInt<1>("h0") @[AXIUnit.scala 120:23]
    node _T_3 = eq(UInt<2>("h0"), readAXIState) @[AXIUnit.scala 121:26]
    when _T_3 : @[AXIUnit.scala 121:26]
      node _readAXIState_T = eq(inputBufferState, UInt<2>("h1")) @[AXIUnit.scala 123:46]
      node _readAXIState_T_1 = mux(_readAXIState_T, UInt<2>("h1"), UInt<2>("h0")) @[AXIUnit.scala 123:28]
      readAXIState <= _readAXIState_T_1 @[AXIUnit.scala 123:22]
    else :
      node _T_4 = eq(UInt<2>("h1"), readAXIState) @[AXIUnit.scala 121:26]
      when _T_4 : @[AXIUnit.scala 121:26]
        node sizeByIns = bits(inputBuffer.instruction, 13, 12) @[AXIUnit.scala 126:48]
        node _sizePerBeat_T = dshl(UInt<1>("h1"), sizeByIns) @[AXIUnit.scala 127:32]
        node sizePerBeat = mul(_sizePerBeat_T, UInt<4>("h8")) @[AXIUnit.scala 127:46]
        bus.ARVALID <= UInt<1>("h1") @[AXIUnit.scala 129:21]
        bus.ARID <= UInt<1>("h1") @[AXIUnit.scala 130:18]
        bus.ARADDR <= inputBuffer.address @[AXIUnit.scala 131:20]
        node _bus_ARLEN_T = add(sizePerBeat, UInt<6>("h20")) @[AXIUnit.scala 132:36]
        node _bus_ARLEN_T_1 = tail(_bus_ARLEN_T, 1) @[AXIUnit.scala 132:36]
        node _bus_ARLEN_T_2 = sub(_bus_ARLEN_T_1, UInt<1>("h1")) @[AXIUnit.scala 132:49]
        node _bus_ARLEN_T_3 = tail(_bus_ARLEN_T_2, 1) @[AXIUnit.scala 132:49]
        node _bus_ARLEN_T_4 = div(_bus_ARLEN_T_3, UInt<6>("h20")) @[AXIUnit.scala 132:56]
        node _bus_ARLEN_T_5 = sub(_bus_ARLEN_T_4, UInt<1>("h1")) @[AXIUnit.scala 132:70]
        node _bus_ARLEN_T_6 = tail(_bus_ARLEN_T_5, 1) @[AXIUnit.scala 132:70]
        bus.ARLEN <= _bus_ARLEN_T_6 @[AXIUnit.scala 132:19]
        node _bus_ARSIZE_T = leq(sizePerBeat, UInt<6>("h20")) @[AXIUnit.scala 133:39]
        node _bus_ARSIZE_T_1 = div(UInt<6>("h20"), UInt<4>("h8")) @[AXIUnit.scala 133:81]
        node bus_ARSIZE_hi = bits(_bus_ARSIZE_T_1, 5, 4) @[CircuitMath.scala 33:17]
        node bus_ARSIZE_lo = bits(_bus_ARSIZE_T_1, 3, 0) @[CircuitMath.scala 34:17]
        node bus_ARSIZE_useHi = orr(bus_ARSIZE_hi) @[CircuitMath.scala 35:22]
        node _bus_ARSIZE_T_2 = bits(bus_ARSIZE_hi, 1, 1) @[CircuitMath.scala 28:8]
        node _bus_ARSIZE_T_3 = bits(bus_ARSIZE_lo, 3, 3) @[CircuitMath.scala 30:12]
        node _bus_ARSIZE_T_4 = bits(bus_ARSIZE_lo, 2, 2) @[CircuitMath.scala 30:12]
        node _bus_ARSIZE_T_5 = bits(bus_ARSIZE_lo, 1, 1) @[CircuitMath.scala 28:8]
        node _bus_ARSIZE_T_6 = mux(_bus_ARSIZE_T_4, UInt<2>("h2"), _bus_ARSIZE_T_5) @[CircuitMath.scala 30:10]
        node _bus_ARSIZE_T_7 = mux(_bus_ARSIZE_T_3, UInt<2>("h3"), _bus_ARSIZE_T_6) @[CircuitMath.scala 30:10]
        node _bus_ARSIZE_T_8 = mux(bus_ARSIZE_useHi, _bus_ARSIZE_T_2, _bus_ARSIZE_T_7) @[CircuitMath.scala 36:21]
        node _bus_ARSIZE_T_9 = cat(bus_ARSIZE_useHi, _bus_ARSIZE_T_8) @[Cat.scala 33:92]
        node _bus_ARSIZE_T_10 = mux(_bus_ARSIZE_T, sizeByIns, _bus_ARSIZE_T_9) @[AXIUnit.scala 133:26]
        bus.ARSIZE <= _bus_ARSIZE_T_10 @[AXIUnit.scala 133:20]
        bus.ARBURST <= UInt<1>("h1") @[AXIUnit.scala 134:21]
        bus.ARLOCK <= UInt<1>("h0") @[AXIUnit.scala 135:20]
        bus.ARCACHE <= UInt<1>("h0") @[AXIUnit.scala 136:21]
        bus.ARPROT <= UInt<2>("h2") @[AXIUnit.scala 137:20]
        bus.ARQOS <= UInt<1>("h0") @[AXIUnit.scala 138:19]
        readCounter.reset <= UInt<1>("h1") @[AXIUnit.scala 140:27]
        node _readAXIState_T_2 = mux(bus.ARREADY, UInt<2>("h2"), UInt<2>("h1")) @[AXIUnit.scala 142:28]
        readAXIState <= _readAXIState_T_2 @[AXIUnit.scala 142:22]
      else :
        node _T_5 = eq(UInt<2>("h2"), readAXIState) @[AXIUnit.scala 121:26]
        when _T_5 : @[AXIUnit.scala 121:26]
          bus.RREADY <= UInt<1>("h1") @[AXIUnit.scala 145:20]
          node _T_6 = eq(bus.RID, UInt<1>("h1")) @[AXIUnit.scala 146:35]
          node _T_7 = and(bus.RVALID, _T_6) @[AXIUnit.scala 146:25]
          when _T_7 : @[AXIUnit.scala 146:44]
            readCounter.incrm <= UInt<1>("h1") @[AXIUnit.scala 147:29]
            readDataVec[readCounter.count] <= bus.RDATA @[AXIUnit.scala 148:42]
            node _responseValid_T = eq(bus.RRESP, UInt<1>("h0")) @[AXIUnit.scala 149:42]
            node _responseValid_T_1 = mux(_responseValid_T, responseValid, UInt<1>("h0")) @[AXIUnit.scala 149:31]
            responseValid <= _responseValid_T_1 @[AXIUnit.scala 149:25]
          node _readAXIState_T_3 = and(bus.RLAST, bus.RVALID) @[AXIUnit.scala 152:39]
          node _readAXIState_T_4 = mux(responseValid, UInt<2>("h3"), UInt<2>("h1")) @[AXIUnit.scala 153:26]
          node _readAXIState_T_5 = mux(_readAXIState_T_3, _readAXIState_T_4, UInt<2>("h2")) @[AXIUnit.scala 152:28]
          readAXIState <= _readAXIState_T_5 @[AXIUnit.scala 152:22]
        else :
          node _T_8 = eq(UInt<2>("h3"), readAXIState) @[AXIUnit.scala 121:26]
          when _T_8 : @[AXIUnit.scala 121:26]
            readComplete <= loadData.ready @[AXIUnit.scala 157:22]
            node doubleWordChoosen = cat(readDataVec[1], readDataVec[0]) @[Cat.scala 33:92]
            node _shiftAmount_T = bits(inputBuffer.instruction, 13, 12) @[AXIUnit.scala 160:58]
            node shiftAmount = dshl(UInt<1>("h1"), _shiftAmount_T) @[AXIUnit.scala 160:32]
            node _section_T = mul(UInt<4>("h8"), shiftAmount) @[AXIUnit.scala 161:35]
            node _section_T_1 = dshl(UInt<1>("h1"), _section_T) @[AXIUnit.scala 161:28]
            node _section_T_2 = sub(_section_T_1, UInt<1>("h1")) @[AXIUnit.scala 161:50]
            node section = tail(_section_T_2, 1) @[AXIUnit.scala 161:50]
            node _byteChunks_T = bits(doubleWordChoosen, 7, 0) @[AXIUnit.scala 163:28]
            node _byteChunks_T_1 = bits(doubleWordChoosen, 15, 8) @[AXIUnit.scala 163:28]
            node _byteChunks_T_2 = bits(doubleWordChoosen, 23, 16) @[AXIUnit.scala 163:28]
            node _byteChunks_T_3 = bits(doubleWordChoosen, 31, 24) @[AXIUnit.scala 163:28]
            node _byteChunks_T_4 = bits(doubleWordChoosen, 39, 32) @[AXIUnit.scala 163:28]
            node _byteChunks_T_5 = bits(doubleWordChoosen, 47, 40) @[AXIUnit.scala 163:28]
            node _byteChunks_T_6 = bits(doubleWordChoosen, 55, 48) @[AXIUnit.scala 163:28]
            node _byteChunks_T_7 = bits(doubleWordChoosen, 63, 56) @[AXIUnit.scala 163:28]
            wire byteChunks : UInt<8>[8] @[AXIUnit.scala 162:33]
            byteChunks[0] <= _byteChunks_T @[AXIUnit.scala 162:33]
            byteChunks[1] <= _byteChunks_T_1 @[AXIUnit.scala 162:33]
            byteChunks[2] <= _byteChunks_T_2 @[AXIUnit.scala 162:33]
            byteChunks[3] <= _byteChunks_T_3 @[AXIUnit.scala 162:33]
            byteChunks[4] <= _byteChunks_T_4 @[AXIUnit.scala 162:33]
            byteChunks[5] <= _byteChunks_T_5 @[AXIUnit.scala 162:33]
            byteChunks[6] <= _byteChunks_T_6 @[AXIUnit.scala 162:33]
            byteChunks[7] <= _byteChunks_T_7 @[AXIUnit.scala 162:33]
            node _byteChoosed_T = bits(inputBuffer.address, 2, 0) @[AXIUnit.scala 165:61]
            node _halfwordChoosed_T = bits(inputBuffer.address, 2, 1) @[AXIUnit.scala 166:71]
            node _halfwordChoosed_T_1 = mul(UInt<2>("h2"), _halfwordChoosed_T) @[AXIUnit.scala 166:50]
            node _halfwordChoosed_T_2 = add(_halfwordChoosed_T_1, UInt<1>("h1")) @[AXIUnit.scala 166:77]
            node _halfwordChoosed_T_3 = tail(_halfwordChoosed_T_2, 1) @[AXIUnit.scala 166:77]
            node _halfwordChoosed_T_4 = bits(_halfwordChoosed_T_3, 2, 0)
            node _halfwordChoosed_T_5 = bits(inputBuffer.address, 2, 1) @[AXIUnit.scala 166:120]
            node _halfwordChoosed_T_6 = mul(UInt<2>("h2"), _halfwordChoosed_T_5) @[AXIUnit.scala 166:99]
            node _halfwordChoosed_T_7 = bits(_halfwordChoosed_T_6, 2, 0)
            node halfwordChoosed = cat(byteChunks[_halfwordChoosed_T_4], byteChunks[_halfwordChoosed_T_7]) @[Cat.scala 33:92]
            node _wordChoosed_T = bits(inputBuffer.address, 2, 2) @[AXIUnit.scala 167:71]
            node _wordChoosed_T_1 = mul(UInt<2>("h2"), _wordChoosed_T) @[AXIUnit.scala 167:50]
            node _wordChoosed_T_2 = add(_wordChoosed_T_1, UInt<2>("h3")) @[AXIUnit.scala 167:75]
            node _wordChoosed_T_3 = tail(_wordChoosed_T_2, 1) @[AXIUnit.scala 167:75]
            node _wordChoosed_T_4 = bits(inputBuffer.address, 2, 2) @[AXIUnit.scala 167:118]
            node _wordChoosed_T_5 = mul(UInt<2>("h2"), _wordChoosed_T_4) @[AXIUnit.scala 167:97]
            node _wordChoosed_T_6 = add(_wordChoosed_T_5, UInt<2>("h2")) @[AXIUnit.scala 167:122]
            node _wordChoosed_T_7 = tail(_wordChoosed_T_6, 1) @[AXIUnit.scala 167:122]
            node _wordChoosed_T_8 = bits(inputBuffer.address, 2, 2) @[AXIUnit.scala 168:71]
            node _wordChoosed_T_9 = mul(UInt<2>("h2"), _wordChoosed_T_8) @[AXIUnit.scala 168:50]
            node _wordChoosed_T_10 = add(_wordChoosed_T_9, UInt<1>("h1")) @[AXIUnit.scala 168:75]
            node _wordChoosed_T_11 = tail(_wordChoosed_T_10, 1) @[AXIUnit.scala 168:75]
            node _wordChoosed_T_12 = bits(inputBuffer.address, 2, 2) @[AXIUnit.scala 168:118]
            node _wordChoosed_T_13 = mul(UInt<2>("h2"), _wordChoosed_T_12) @[AXIUnit.scala 168:97]
            node wordChoosed_lo = cat(byteChunks[_wordChoosed_T_11], byteChunks[_wordChoosed_T_13]) @[Cat.scala 33:92]
            node wordChoosed_hi = cat(byteChunks[_wordChoosed_T_3], byteChunks[_wordChoosed_T_7]) @[Cat.scala 33:92]
            node wordChoosed = cat(wordChoosed_hi, wordChoosed_lo) @[Cat.scala 33:92]
            node _T_9 = bits(inputBuffer.instruction, 13, 12) @[AXIUnit.scala 169:39]
            node _T_10 = eq(UInt<1>("h0"), _T_9) @[AXIUnit.scala 169:48]
            when _T_10 : @[AXIUnit.scala 169:48]
              node _loadData_data_T = bits(inputBuffer.instruction, 14, 14) @[AXIUnit.scala 170:67]
              node _loadData_data_T_1 = bits(byteChunks[_byteChoosed_T], 7, 7) @[AXIUnit.scala 171:77]
              node _loadData_data_T_2 = bits(_loadData_data_T_1, 0, 0) @[Bitwise.scala 77:15]
              node _loadData_data_T_3 = mux(_loadData_data_T_2, UInt<56>("hffffffffffffff"), UInt<56>("h0")) @[Bitwise.scala 77:12]
              node _loadData_data_T_4 = cat(_loadData_data_T_3, byteChunks[_byteChoosed_T]) @[Cat.scala 33:92]
              node _loadData_data_T_5 = mux(_loadData_data_T, byteChunks[_byteChoosed_T], _loadData_data_T_4) @[AXIUnit.scala 170:43]
              loadData.data <= _loadData_data_T_5 @[AXIUnit.scala 170:37]
            else :
              node _T_11 = eq(UInt<1>("h1"), _T_9) @[AXIUnit.scala 169:48]
              when _T_11 : @[AXIUnit.scala 169:48]
                node _loadData_data_T_6 = bits(inputBuffer.instruction, 14, 14) @[AXIUnit.scala 172:67]
                node _loadData_data_T_7 = bits(halfwordChoosed, 15, 15) @[AXIUnit.scala 173:81]
                node _loadData_data_T_8 = bits(_loadData_data_T_7, 0, 0) @[Bitwise.scala 77:15]
                node _loadData_data_T_9 = mux(_loadData_data_T_8, UInt<48>("hffffffffffff"), UInt<48>("h0")) @[Bitwise.scala 77:12]
                node _loadData_data_T_10 = cat(_loadData_data_T_9, halfwordChoosed) @[Cat.scala 33:92]
                node _loadData_data_T_11 = mux(_loadData_data_T_6, halfwordChoosed, _loadData_data_T_10) @[AXIUnit.scala 172:43]
                loadData.data <= _loadData_data_T_11 @[AXIUnit.scala 172:37]
              else :
                node _T_12 = eq(UInt<2>("h2"), _T_9) @[AXIUnit.scala 169:48]
                when _T_12 : @[AXIUnit.scala 169:48]
                  node _loadData_data_T_12 = bits(inputBuffer.instruction, 14, 14) @[AXIUnit.scala 174:67]
                  node _loadData_data_T_13 = bits(wordChoosed, 31, 31) @[AXIUnit.scala 175:77]
                  node _loadData_data_T_14 = bits(_loadData_data_T_13, 0, 0) @[Bitwise.scala 77:15]
                  node _loadData_data_T_15 = mux(_loadData_data_T_14, UInt<32>("hffffffff"), UInt<32>("h0")) @[Bitwise.scala 77:12]
                  node _loadData_data_T_16 = cat(_loadData_data_T_15, wordChoosed) @[Cat.scala 33:92]
                  node _loadData_data_T_17 = mux(_loadData_data_T_12, wordChoosed, _loadData_data_T_16) @[AXIUnit.scala 174:43]
                  loadData.data <= _loadData_data_T_17 @[AXIUnit.scala 174:37]
                else :
                  node _T_13 = eq(UInt<2>("h3"), _T_9) @[AXIUnit.scala 169:48]
                  when _T_13 : @[AXIUnit.scala 169:48]
                    node _loadData_data_T_18 = bits(inputBuffer.instruction, 14, 14) @[AXIUnit.scala 176:67]
                    node _loadData_data_T_19 = mux(_loadData_data_T_18, UInt<1>("h0"), doubleWordChoosen) @[AXIUnit.scala 176:43]
                    loadData.data <= _loadData_data_T_19 @[AXIUnit.scala 176:37]
            loadData.valid <= UInt<1>("h1") @[AXIUnit.scala 180:24]
            node _readAXIState_T_6 = mux(loadData.ready, UInt<2>("h0"), UInt<2>("h3")) @[AXIUnit.scala 181:28]
            readAXIState <= _readAXIState_T_6 @[AXIUnit.scala 181:22]
    reg writeAXIState : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[AXIUnit.scala 185:32]
    inst writeCounter of CounterModule_8 @[AXIUnit.scala 186:30]
    writeCounter.clock <= clock
    writeCounter.reset <= reset
    writeCounter.incrm <= UInt<1>("h0") @[AXIUnit.scala 187:24]
    node _T_14 = eq(UInt<2>("h0"), writeAXIState) @[AXIUnit.scala 188:27]
    when _T_14 : @[AXIUnit.scala 188:27]
      node _writeAXIState_T = eq(inputBufferState, UInt<2>("h2")) @[AXIUnit.scala 190:49]
      node _writeAXIState_T_1 = mux(_writeAXIState_T, UInt<2>("h1"), UInt<2>("h0")) @[AXIUnit.scala 190:31]
      writeAXIState <= _writeAXIState_T_1 @[AXIUnit.scala 190:25]
    else :
      node _T_15 = eq(UInt<2>("h1"), writeAXIState) @[AXIUnit.scala 188:27]
      when _T_15 : @[AXIUnit.scala 188:27]
        node sizeByIns_1 = bits(inputBuffer.instruction, 13, 12) @[AXIUnit.scala 193:48]
        node _sizePerBeat_T_1 = dshl(UInt<1>("h1"), sizeByIns_1) @[AXIUnit.scala 194:32]
        node sizePerBeat_1 = mul(_sizePerBeat_T_1, UInt<4>("h8")) @[AXIUnit.scala 194:46]
        bus.AWVALID <= UInt<1>("h1") @[AXIUnit.scala 196:21]
        bus.AWID <= UInt<1>("h1") @[AXIUnit.scala 197:18]
        bus.AWADDR <= inputBuffer.address @[AXIUnit.scala 198:20]
        node _bus_ARLEN_T_7 = add(sizePerBeat_1, UInt<6>("h20")) @[AXIUnit.scala 199:36]
        node _bus_ARLEN_T_8 = tail(_bus_ARLEN_T_7, 1) @[AXIUnit.scala 199:36]
        node _bus_ARLEN_T_9 = sub(_bus_ARLEN_T_8, UInt<1>("h1")) @[AXIUnit.scala 199:49]
        node _bus_ARLEN_T_10 = tail(_bus_ARLEN_T_9, 1) @[AXIUnit.scala 199:49]
        node _bus_ARLEN_T_11 = div(_bus_ARLEN_T_10, UInt<6>("h20")) @[AXIUnit.scala 199:56]
        node _bus_ARLEN_T_12 = sub(_bus_ARLEN_T_11, UInt<1>("h1")) @[AXIUnit.scala 199:70]
        node _bus_ARLEN_T_13 = tail(_bus_ARLEN_T_12, 1) @[AXIUnit.scala 199:70]
        bus.ARLEN <= _bus_ARLEN_T_13 @[AXIUnit.scala 199:19]
        node _bus_ARSIZE_T_11 = leq(sizePerBeat_1, UInt<6>("h20")) @[AXIUnit.scala 200:39]
        node _bus_ARSIZE_T_12 = div(UInt<6>("h20"), UInt<4>("h8")) @[AXIUnit.scala 200:81]
        node bus_ARSIZE_hi_1 = bits(_bus_ARSIZE_T_12, 5, 4) @[CircuitMath.scala 33:17]
        node bus_ARSIZE_lo_1 = bits(_bus_ARSIZE_T_12, 3, 0) @[CircuitMath.scala 34:17]
        node bus_ARSIZE_useHi_1 = orr(bus_ARSIZE_hi_1) @[CircuitMath.scala 35:22]
        node _bus_ARSIZE_T_13 = bits(bus_ARSIZE_hi_1, 1, 1) @[CircuitMath.scala 28:8]
        node _bus_ARSIZE_T_14 = bits(bus_ARSIZE_lo_1, 3, 3) @[CircuitMath.scala 30:12]
        node _bus_ARSIZE_T_15 = bits(bus_ARSIZE_lo_1, 2, 2) @[CircuitMath.scala 30:12]
        node _bus_ARSIZE_T_16 = bits(bus_ARSIZE_lo_1, 1, 1) @[CircuitMath.scala 28:8]
        node _bus_ARSIZE_T_17 = mux(_bus_ARSIZE_T_15, UInt<2>("h2"), _bus_ARSIZE_T_16) @[CircuitMath.scala 30:10]
        node _bus_ARSIZE_T_18 = mux(_bus_ARSIZE_T_14, UInt<2>("h3"), _bus_ARSIZE_T_17) @[CircuitMath.scala 30:10]
        node _bus_ARSIZE_T_19 = mux(bus_ARSIZE_useHi_1, _bus_ARSIZE_T_13, _bus_ARSIZE_T_18) @[CircuitMath.scala 36:21]
        node _bus_ARSIZE_T_20 = cat(bus_ARSIZE_useHi_1, _bus_ARSIZE_T_19) @[Cat.scala 33:92]
        node _bus_ARSIZE_T_21 = mux(_bus_ARSIZE_T_11, sizeByIns_1, _bus_ARSIZE_T_20) @[AXIUnit.scala 200:26]
        bus.ARSIZE <= _bus_ARSIZE_T_21 @[AXIUnit.scala 200:20]
        bus.AWBURST <= UInt<1>("h1") @[AXIUnit.scala 201:21]
        bus.AWLOCK <= UInt<1>("h0") @[AXIUnit.scala 202:20]
        bus.AWCACHE <= UInt<1>("h0") @[AXIUnit.scala 203:21]
        bus.AWPROT <= UInt<2>("h2") @[AXIUnit.scala 204:20]
        bus.AWQOS <= UInt<1>("h0") @[AXIUnit.scala 205:19]
        bus.WVALID <= UInt<1>("h1") @[AXIUnit.scala 207:20]
        node _bus_WSTRB_T = dshl(UInt<1>("h1"), bus.ARSIZE) @[AXIUnit.scala 208:36]
        node _bus_WSTRB_T_1 = dshl(UInt<1>("h1"), _bus_WSTRB_T) @[AXIUnit.scala 208:28]
        node _bus_WSTRB_T_2 = sub(_bus_WSTRB_T_1, UInt<1>("h1")) @[AXIUnit.scala 208:52]
        node _bus_WSTRB_T_3 = tail(_bus_WSTRB_T_2, 1) @[AXIUnit.scala 208:52]
        bus.WSTRB <= _bus_WSTRB_T_3 @[AXIUnit.scala 208:19]
        node _bus_WLAST_T = eq(writeCounter.count, bus.ARLEN) @[AXIUnit.scala 209:41]
        bus.WLAST <= _bus_WLAST_T @[AXIUnit.scala 209:19]
        node _writeChunks_T = bits(dataReg, 31, 0) @[AXIUnit.scala 213:18]
        node _writeChunks_T_1 = bits(dataReg, 63, 32) @[AXIUnit.scala 213:18]
        wire writeChunks : UInt<32>[2] @[AXIUnit.scala 212:34]
        writeChunks[0] <= _writeChunks_T @[AXIUnit.scala 212:34]
        writeChunks[1] <= _writeChunks_T_1 @[AXIUnit.scala 212:34]
        when bus.WREADY : @[AXIUnit.scala 215:25]
          bus.WDATA <= writeChunks[writeCounter.count] @[AXIUnit.scala 216:21]
          writeCounter.incrm <= UInt<1>("h1") @[AXIUnit.scala 217:30]
        node _writeAXIState_T_2 = mux(bus.WLAST, UInt<2>("h2"), UInt<2>("h1")) @[AXIUnit.scala 220:29]
        writeAXIState <= _writeAXIState_T_2 @[AXIUnit.scala 220:23]
      else :
        node _T_16 = eq(UInt<2>("h2"), writeAXIState) @[AXIUnit.scala 188:27]
        when _T_16 : @[AXIUnit.scala 188:27]
          bus.BREADY <= UInt<1>("h1") @[AXIUnit.scala 223:20]
          node _writeComplete_T = eq(bus.BID, UInt<1>("h1")) @[AXIUnit.scala 224:48]
          node _writeComplete_T_1 = and(bus.BVALID, _writeComplete_T) @[AXIUnit.scala 224:37]
          node _writeComplete_T_2 = eq(bus.BRESP, UInt<1>("h0")) @[AXIUnit.scala 224:70]
          node _writeComplete_T_3 = and(_writeComplete_T_1, _writeComplete_T_2) @[AXIUnit.scala 224:57]
          writeComplete <= _writeComplete_T_3 @[AXIUnit.scala 224:23]
          node _writeAXIState_T_3 = eq(bus.BID, UInt<1>("h1")) @[AXIUnit.scala 226:53]
          node _writeAXIState_T_4 = and(bus.BVALID, _writeAXIState_T_3) @[AXIUnit.scala 226:41]
          node _writeAXIState_T_5 = eq(bus.BRESP, UInt<1>("h0")) @[AXIUnit.scala 227:41]
          node _writeAXIState_T_6 = mux(_writeAXIState_T_5, UInt<2>("h0"), UInt<2>("h1")) @[AXIUnit.scala 227:30]
          node _writeAXIState_T_7 = mux(_writeAXIState_T_4, _writeAXIState_T_6, UInt<2>("h2")) @[AXIUnit.scala 226:29]
          writeAXIState <= _writeAXIState_T_7 @[AXIUnit.scala 226:23]
        else :
          node _T_17 = eq(UInt<2>("h3"), writeAXIState) @[AXIUnit.scala 188:27]
          when _T_17 : @[AXIUnit.scala 188:27]
            writeAXIState <= UInt<2>("h0") @[AXIUnit.scala 231:23]

  module writeDataInFifo_1 :
    input clock : Clock
    input reset : Reset
    output dataIn : { flip valid : UInt<1>, flip data : UInt<64>}
    input dataOut : { flip valid : UInt<1>, flip data : UInt<64>}
    input canAccept : UInt<1>
    output isEmpty : UInt<1>

    dataOut.valid <= UInt<1>("h0") @[writeDataInFifo.scala 17:17]
    dataOut.data <= UInt<1>("h0") @[writeDataInFifo.scala 18:16]
    isEmpty <= UInt<1>("h0") @[writeDataInFifo.scala 20:11]
    reg memReg : { valid : UInt<1>, data : UInt<64>}[8], clock with :
      reset => (UInt<1>("h0"), memReg) @[writeDataInFifo.scala 36:19]
    wire incrRead : UInt<1>
    incrRead <= UInt<1>("h0")
    wire incrWrite : UInt<1>
    incrWrite <= UInt<1>("h0")
    reg readPtr : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[writeDataInFifo.scala 23:25]
    node _nextVal_T = eq(readPtr, UInt<3>("h7")) @[writeDataInFifo.scala 24:30]
    node _nextVal_T_1 = add(readPtr, UInt<1>("h1")) @[writeDataInFifo.scala 24:59]
    node _nextVal_T_2 = tail(_nextVal_T_1, 1) @[writeDataInFifo.scala 24:59]
    node nextRead = mux(_nextVal_T, UInt<1>("h0"), _nextVal_T_2) @[writeDataInFifo.scala 24:22]
    when incrRead : @[writeDataInFifo.scala 25:17]
      readPtr <= nextRead @[writeDataInFifo.scala 26:14]
    reg writePtr : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[writeDataInFifo.scala 23:25]
    node _nextVal_T_3 = eq(writePtr, UInt<3>("h7")) @[writeDataInFifo.scala 24:30]
    node _nextVal_T_4 = add(writePtr, UInt<1>("h1")) @[writeDataInFifo.scala 24:59]
    node _nextVal_T_5 = tail(_nextVal_T_4, 1) @[writeDataInFifo.scala 24:59]
    node nextWrite = mux(_nextVal_T_3, UInt<1>("h0"), _nextVal_T_5) @[writeDataInFifo.scala 24:22]
    when incrWrite : @[writeDataInFifo.scala 25:17]
      writePtr <= nextWrite @[writeDataInFifo.scala 26:14]
    reg emptyReg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h1")) @[writeDataInFifo.scala 43:25]
    reg fullReg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[writeDataInFifo.scala 44:24]
    node op = cat(dataIn.valid, canAccept) @[writeDataInFifo.scala 46:25]
    wire doWrite : UInt<1>
    doWrite <= UInt<1>("h0")
    node _T = eq(UInt<1>("h0"), op) @[writeDataInFifo.scala 48:15]
    when _T : @[writeDataInFifo.scala 48:15]
      skip
    else :
      node _T_1 = eq(UInt<1>("h1"), op) @[writeDataInFifo.scala 48:15]
      when _T_1 : @[writeDataInFifo.scala 48:15]
        node _T_2 = eq(emptyReg, UInt<1>("h0")) @[writeDataInFifo.scala 51:13]
        when _T_2 : @[writeDataInFifo.scala 51:26]
          fullReg <= UInt<1>("h0") @[writeDataInFifo.scala 52:17]
          node _emptyReg_T = eq(nextRead, writePtr) @[writeDataInFifo.scala 53:30]
          emptyReg <= _emptyReg_T @[writeDataInFifo.scala 53:18]
          incrRead <= UInt<1>("h1") @[writeDataInFifo.scala 54:18]
      else :
        node _T_3 = eq(UInt<2>("h2"), op) @[writeDataInFifo.scala 48:15]
        when _T_3 : @[writeDataInFifo.scala 48:15]
          node _T_4 = eq(fullReg, UInt<1>("h0")) @[writeDataInFifo.scala 58:13]
          when _T_4 : @[writeDataInFifo.scala 58:25]
            doWrite <= UInt<1>("h1") @[writeDataInFifo.scala 59:17]
            emptyReg <= UInt<1>("h0") @[writeDataInFifo.scala 60:18]
            node _fullReg_T = eq(nextWrite, readPtr) @[writeDataInFifo.scala 61:30]
            fullReg <= _fullReg_T @[writeDataInFifo.scala 61:17]
            incrWrite <= UInt<1>("h1") @[writeDataInFifo.scala 62:19]
        else :
          node _T_5 = eq(UInt<2>("h3"), op) @[writeDataInFifo.scala 48:15]
          when _T_5 : @[writeDataInFifo.scala 48:15]
            node _T_6 = eq(fullReg, UInt<1>("h0")) @[writeDataInFifo.scala 66:13]
            when _T_6 : @[writeDataInFifo.scala 66:25]
              doWrite <= UInt<1>("h1") @[writeDataInFifo.scala 67:17]
              emptyReg <= UInt<1>("h0") @[writeDataInFifo.scala 68:18]
              when emptyReg : @[writeDataInFifo.scala 69:26]
                fullReg <= UInt<1>("h0") @[writeDataInFifo.scala 70:19]
              else :
                node _fullReg_T_1 = eq(nextWrite, nextRead) @[writeDataInFifo.scala 72:32]
                fullReg <= _fullReg_T_1 @[writeDataInFifo.scala 72:19]
              incrWrite <= UInt<1>("h1") @[writeDataInFifo.scala 74:19]
            node _T_7 = eq(emptyReg, UInt<1>("h0")) @[writeDataInFifo.scala 76:13]
            when _T_7 : @[writeDataInFifo.scala 76:26]
              fullReg <= UInt<1>("h0") @[writeDataInFifo.scala 77:17]
              when fullReg : @[writeDataInFifo.scala 78:23]
                emptyReg <= UInt<1>("h0") @[writeDataInFifo.scala 79:18]
              else :
                node _emptyReg_T_1 = eq(nextRead, nextWrite) @[writeDataInFifo.scala 81:30]
                emptyReg <= _emptyReg_T_1 @[writeDataInFifo.scala 81:18]
              incrRead <= UInt<1>("h1") @[writeDataInFifo.scala 83:18]
    when doWrite : @[writeDataInFifo.scala 87:19]
      memReg[writePtr].data <= dataIn.data @[writeDataInFifo.scala 88:22]
      memReg[writePtr].valid <= dataIn.valid @[writeDataInFifo.scala 88:22]
    dataOut.data <= memReg[readPtr].data @[writeDataInFifo.scala 90:11]
    dataOut.valid <= memReg[readPtr].valid @[writeDataInFifo.scala 90:11]
    node _dataOut_valid_T = eq(emptyReg, UInt<1>("h0")) @[writeDataInFifo.scala 92:20]
    dataOut.valid <= _dataOut_valid_T @[writeDataInFifo.scala 92:17]
    isEmpty <= emptyReg @[writeDataInFifo.scala 93:11]

  module CounterModule_9 :
    input clock : Clock
    input reset : Reset
    output count : UInt<3>
    input incrm : UInt<1>

    reg cntReg : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[utils.scala 15:23]
    node _cntReg_T = eq(cntReg, UInt<3>("h7")) @[utils.scala 16:33]
    node _cntReg_T_1 = and(incrm, _cntReg_T) @[utils.scala 16:23]
    node _cntReg_T_2 = add(cntReg, UInt<1>("h1")) @[utils.scala 17:35]
    node _cntReg_T_3 = tail(_cntReg_T_2, 1) @[utils.scala 17:35]
    node _cntReg_T_4 = mux(incrm, _cntReg_T_3, cntReg) @[utils.scala 17:20]
    node _cntReg_T_5 = mux(_cntReg_T_1, UInt<1>("h0"), _cntReg_T_4) @[utils.scala 16:16]
    cntReg <= _cntReg_T_5 @[utils.scala 16:10]
    count <= cntReg @[utils.scala 19:9]

  module CounterModule_10 :
    input clock : Clock
    input reset : Reset
    output count : UInt<3>
    input incrm : UInt<1>

    reg cntReg : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[utils.scala 15:23]
    node _cntReg_T = eq(cntReg, UInt<3>("h7")) @[utils.scala 16:33]
    node _cntReg_T_1 = and(incrm, _cntReg_T) @[utils.scala 16:23]
    node _cntReg_T_2 = add(cntReg, UInt<1>("h1")) @[utils.scala 17:35]
    node _cntReg_T_3 = tail(_cntReg_T_2, 1) @[utils.scala 17:35]
    node _cntReg_T_4 = mux(incrm, _cntReg_T_3, cntReg) @[utils.scala 17:20]
    node _cntReg_T_5 = mux(_cntReg_T_1, UInt<1>("h0"), _cntReg_T_4) @[utils.scala 16:16]
    cntReg <= _cntReg_T_5 @[utils.scala 16:10]
    count <= cntReg @[utils.scala 19:9]

  module CounterModule_11 :
    input clock : Clock
    input reset : Reset
    output count : UInt<3>
    input incrm : UInt<1>

    reg cntReg : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[utils.scala 15:23]
    node _cntReg_T = eq(cntReg, UInt<3>("h7")) @[utils.scala 16:33]
    node _cntReg_T_1 = and(incrm, _cntReg_T) @[utils.scala 16:23]
    node _cntReg_T_2 = add(cntReg, UInt<1>("h1")) @[utils.scala 17:35]
    node _cntReg_T_3 = tail(_cntReg_T_2, 1) @[utils.scala 17:35]
    node _cntReg_T_4 = mux(incrm, _cntReg_T_3, cntReg) @[utils.scala 17:20]
    node _cntReg_T_5 = mux(_cntReg_T_1, UInt<1>("h0"), _cntReg_T_4) @[utils.scala 16:16]
    cntReg <= _cntReg_T_5 @[utils.scala 16:10]
    count <= cntReg @[utils.scala 19:9]

  module ACEUnit_1 :
    input clock : Clock
    input reset : Reset
    output request : { ready : UInt<1>, flip valid : UInt<1>, flip writeEn : UInt<1>, flip address : UInt<32>, flip data : UInt<512>, flip instruction : UInt<32>, flip isUnique : UInt<1>, flip isClean : UInt<1>}
    output loadData : { flip ready : UInt<1>, valid : UInt<1>, data : UInt<512>, response : UInt<2>}
    output coherencyRequest : { flip ready : UInt<1>, valid : UInt<1>, flip accepted : UInt<1>, address : UInt<32>, dataReq : UInt<1>, invalidateReq : UInt<1>}
    output bus : { AWID : UInt<2>, AWADDR : UInt<32>, AWLEN : UInt<8>, AWSIZE : UInt<3>, AWBURST : UInt<2>, AWLOCK : UInt<1>, AWCACHE : UInt<4>, AWPROT : UInt<3>, AWQOS : UInt<4>, AWVALID : UInt<1>, flip AWREADY : UInt<1>, WDATA : UInt<64>, WSTRB : UInt<8>, WLAST : UInt<1>, WVALID : UInt<1>, flip WREADY : UInt<1>, flip BID : UInt<2>, flip BRESP : UInt<2>, flip BVALID : UInt<1>, BREADY : UInt<1>, ARID : UInt<2>, ARADDR : UInt<32>, ARLEN : UInt<8>, ARSIZE : UInt<3>, ARBURST : UInt<2>, ARLOCK : UInt<1>, ARCACHE : UInt<4>, ARPROT : UInt<3>, ARQOS : UInt<4>, ARVALID : UInt<1>, flip ARREADY : UInt<1>, flip RID : UInt<2>, flip RDATA : UInt<64>, flip RLAST : UInt<1>, flip RVALID : UInt<1>, RREADY : UInt<1>, AWDOMAIN : UInt<2>, AWSNOOP : UInt<3>, AWBAR : UInt<2>, ARDOMAIN : UInt<2>, ARSNOOP : UInt<4>, ARBAR : UInt<2>, flip RRESP : UInt<4>, flip ACVALID : UInt<1>, ACREADY : UInt<1>, flip ACADDR : UInt<32>, flip ACSNOOP : UInt<4>, flip ACPROT : UInt<3>, CRVALID : UInt<1>, flip CRREADY : UInt<1>, CRRESP : UInt<5>, CDVALID : UInt<1>, flip CDREADY : UInt<1>, CDDATA : UInt<64>, CDLAST : UInt<1>}
    input setFence : UInt<1>
    output coherencyReceived : UInt<1>
    input isAtomicsInOperation : UInt<1>

    request.ready <= UInt<1>("h0") @[ACEUnit.scala 38:17]
    loadData.data <= UInt<1>("h0") @[ACEUnit.scala 39:17]
    loadData.valid <= UInt<1>("h0") @[ACEUnit.scala 40:18]
    loadData.response <= UInt<1>("h0") @[ACEUnit.scala 41:21]
    coherencyRequest.valid <= UInt<1>("h0") @[ACEUnit.scala 43:26]
    coherencyRequest.address <= UInt<1>("h0") @[ACEUnit.scala 44:28]
    coherencyRequest.dataReq <= UInt<1>("h0") @[ACEUnit.scala 45:28]
    coherencyRequest.invalidateReq <= UInt<1>("h0") @[ACEUnit.scala 46:34]
    bus.AWID <= UInt<2>("h2") @[ACEUnit.scala 49:12]
    bus.AWADDR <= UInt<1>("h0") @[ACEUnit.scala 50:14]
    bus.AWLEN <= UInt<1>("h0") @[ACEUnit.scala 51:13]
    bus.AWSIZE <= UInt<1>("h0") @[ACEUnit.scala 52:14]
    bus.AWBURST <= UInt<1>("h0") @[ACEUnit.scala 53:15]
    bus.AWLOCK <= UInt<1>("h0") @[ACEUnit.scala 54:14]
    bus.AWCACHE <= UInt<1>("h0") @[ACEUnit.scala 55:15]
    bus.AWPROT <= UInt<1>("h0") @[ACEUnit.scala 56:14]
    bus.AWQOS <= UInt<1>("h0") @[ACEUnit.scala 57:13]
    bus.AWVALID <= UInt<1>("h0") @[ACEUnit.scala 58:15]
    bus.WDATA <= UInt<1>("h0") @[ACEUnit.scala 60:13]
    bus.WSTRB <= UInt<1>("h0") @[ACEUnit.scala 61:13]
    bus.WLAST <= UInt<1>("h0") @[ACEUnit.scala 62:13]
    bus.WVALID <= UInt<1>("h0") @[ACEUnit.scala 63:14]
    bus.BREADY <= UInt<1>("h0") @[ACEUnit.scala 65:14]
    bus.ARID <= UInt<2>("h2") @[ACEUnit.scala 67:12]
    bus.ARADDR <= UInt<1>("h0") @[ACEUnit.scala 68:14]
    bus.ARLEN <= UInt<1>("h0") @[ACEUnit.scala 69:13]
    bus.ARSIZE <= UInt<1>("h0") @[ACEUnit.scala 70:14]
    bus.ARBURST <= UInt<1>("h0") @[ACEUnit.scala 71:15]
    bus.ARLOCK <= UInt<1>("h0") @[ACEUnit.scala 72:14]
    bus.ARCACHE <= UInt<1>("h0") @[ACEUnit.scala 73:15]
    bus.ARPROT <= UInt<1>("h0") @[ACEUnit.scala 74:14]
    bus.ARQOS <= UInt<1>("h0") @[ACEUnit.scala 75:13]
    bus.ARVALID <= UInt<1>("h0") @[ACEUnit.scala 76:15]
    bus.RREADY <= UInt<1>("h0") @[ACEUnit.scala 78:14]
    bus.AWDOMAIN <= UInt<1>("h0") @[ACEUnit.scala 81:16]
    bus.AWSNOOP <= UInt<1>("h0") @[ACEUnit.scala 82:15]
    bus.AWBAR <= UInt<1>("h0") @[ACEUnit.scala 83:13]
    bus.ARDOMAIN <= UInt<1>("h0") @[ACEUnit.scala 85:16]
    bus.ARSNOOP <= UInt<1>("h0") @[ACEUnit.scala 86:15]
    bus.ARBAR <= UInt<1>("h0") @[ACEUnit.scala 87:13]
    bus.ACREADY <= UInt<1>("h0") @[ACEUnit.scala 89:15]
    bus.CRVALID <= UInt<1>("h0") @[ACEUnit.scala 91:15]
    bus.CRRESP <= UInt<1>("h0") @[ACEUnit.scala 92:14]
    bus.CDVALID <= UInt<1>("h0") @[ACEUnit.scala 94:15]
    bus.CDDATA <= UInt<1>("h0") @[ACEUnit.scala 95:14]
    bus.CDLAST <= UInt<1>("h0") @[ACEUnit.scala 96:14]
    wire readComplete : UInt<1>
    readComplete <= UInt<1>("h0")
    wire writeComplete : UInt<1>
    writeComplete <= UInt<1>("h0")
    wire coherentComplete : UInt<1>
    coherentComplete <= UInt<1>("h0")
    wire coherencyReceivedWire : UInt<1>
    coherencyReceivedWire <= UInt<1>("h0")
    coherencyReceived <= coherencyReceivedWire @[ACEUnit.scala 105:21]
    wire _inputBuffer_WIRE : { writeEn : UInt<1>, address : UInt<32>, isUnique : UInt<1>, isClean : UInt<1>, snoop : UInt<4>}
    _inputBuffer_WIRE.snoop <= UInt<1>("h0")
    _inputBuffer_WIRE.isClean <= UInt<1>("h0")
    _inputBuffer_WIRE.isUnique <= UInt<1>("h0")
    _inputBuffer_WIRE.address <= UInt<1>("h0")
    _inputBuffer_WIRE.writeEn <= UInt<1>("h0")
    reg inputBuffer : { writeEn : UInt<1>, address : UInt<32>, isUnique : UInt<1>, isClean : UInt<1>, snoop : UInt<4>}, clock with :
      reset => (reset, _inputBuffer_WIRE) @[ACEUnit.scala 108:28]
    reg fenceReadBarrierSend : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[ACEUnit.scala 122:37]
    reg fenceWriteBarrierSend : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[ACEUnit.scala 123:38]
    reg inputBufferState : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[ACEUnit.scala 126:33]
    node _T = eq(UInt<3>("h0"), inputBufferState) @[ACEUnit.scala 127:27]
    when _T : @[ACEUnit.scala 127:27]
      node _coherencyReceivedWire_T = eq(bus.ACPROT, UInt<2>("h2")) @[ACEUnit.scala 129:58]
      node _coherencyReceivedWire_T_1 = and(bus.ACVALID, _coherencyReceivedWire_T) @[ACEUnit.scala 129:44]
      coherencyReceivedWire <= _coherencyReceivedWire_T_1 @[ACEUnit.scala 129:29]
      request.ready <= UInt<1>("h1") @[ACEUnit.scala 130:21]
      node _bus_ACREADY_T = eq(setFence, UInt<1>("h0")) @[ACEUnit.scala 131:48]
      node _bus_ACREADY_T_1 = and(coherencyRequest.ready, _bus_ACREADY_T) @[ACEUnit.scala 131:45]
      bus.ACREADY <= _bus_ACREADY_T_1 @[ACEUnit.scala 131:19]
      node _T_1 = eq(bus.ACPROT, UInt<2>("h2")) @[ACEUnit.scala 132:38]
      node _T_2 = and(bus.ACVALID, _T_1) @[ACEUnit.scala 132:24]
      when _T_2 : @[ACEUnit.scala 132:55]
        inputBuffer.address <= bus.ACADDR @[ACEUnit.scala 133:29]
        inputBuffer.snoop <= bus.ACSNOOP @[ACEUnit.scala 134:27]
        coherencyRequest.valid <= bus.ACVALID @[ACEUnit.scala 135:32]
        coherencyRequest.address <= bus.ACADDR @[ACEUnit.scala 136:34]
        node _coherencyRequest_invalidateReq_T = eq(bus.ACSNOOP, UInt<4>("h9")) @[ACEUnit.scala 137:56]
        node _coherencyRequest_invalidateReq_T_1 = eq(bus.ACSNOOP, UInt<3>("h7")) @[ACEUnit.scala 137:87]
        node _coherencyRequest_invalidateReq_T_2 = or(_coherencyRequest_invalidateReq_T, _coherencyRequest_invalidateReq_T_1) @[ACEUnit.scala 137:71]
        coherencyRequest.invalidateReq <= _coherencyRequest_invalidateReq_T_2 @[ACEUnit.scala 137:40]
        node _coherencyRequest_dataReq_T = eq(bus.ACSNOOP, UInt<1>("h1")) @[ACEUnit.scala 138:50]
        node _coherencyRequest_dataReq_T_1 = eq(bus.ACSNOOP, UInt<3>("h7")) @[ACEUnit.scala 138:81]
        node _coherencyRequest_dataReq_T_2 = or(_coherencyRequest_dataReq_T, _coherencyRequest_dataReq_T_1) @[ACEUnit.scala 138:65]
        coherencyRequest.dataReq <= _coherencyRequest_dataReq_T_2 @[ACEUnit.scala 138:34]
      else :
        when request.valid : @[ACEUnit.scala 139:34]
          inputBuffer.writeEn <= request.writeEn @[ACEUnit.scala 140:29]
          inputBuffer.address <= request.address @[ACEUnit.scala 141:29]
          inputBuffer.isClean <= request.isClean @[ACEUnit.scala 142:29]
          inputBuffer.isUnique <= request.isUnique @[ACEUnit.scala 143:30]
      when setFence : @[ACEUnit.scala 145:21]
        inputBufferState <= UInt<3>("h4") @[ACEUnit.scala 146:26]
      else :
        when bus.ACVALID : @[ACEUnit.scala 147:31]
          when isAtomicsInOperation : @[ACEUnit.scala 148:35]
            node _inputBufferState_T = mux(request.writeEn, UInt<3>("h2"), UInt<3>("h1")) @[ACEUnit.scala 150:34]
            node _inputBufferState_T_1 = mux(request.valid, _inputBufferState_T, UInt<3>("h0")) @[ACEUnit.scala 149:34]
            inputBufferState <= _inputBufferState_T_1 @[ACEUnit.scala 149:28]
          else :
            node _inputBufferState_T_2 = mux(coherencyRequest.ready, UInt<3>("h3"), UInt<3>("h0")) @[ACEUnit.scala 153:34]
            inputBufferState <= _inputBufferState_T_2 @[ACEUnit.scala 153:28]
        else :
          node _inputBufferState_T_3 = mux(request.writeEn, UInt<3>("h2"), UInt<3>("h1")) @[ACEUnit.scala 157:34]
          node _inputBufferState_T_4 = mux(request.valid, _inputBufferState_T_3, UInt<3>("h0")) @[ACEUnit.scala 156:32]
          inputBufferState <= _inputBufferState_T_4 @[ACEUnit.scala 156:26]
    else :
      node _T_3 = eq(UInt<3>("h1"), inputBufferState) @[ACEUnit.scala 127:27]
      when _T_3 : @[ACEUnit.scala 127:27]
        node _coherencyReceivedWire_T_2 = eq(bus.ACPROT, UInt<2>("h2")) @[ACEUnit.scala 162:58]
        node _coherencyReceivedWire_T_3 = and(bus.ACVALID, _coherencyReceivedWire_T_2) @[ACEUnit.scala 162:44]
        coherencyReceivedWire <= _coherencyReceivedWire_T_3 @[ACEUnit.scala 162:29]
        node _inputBufferState_T_5 = mux(readComplete, UInt<3>("h0"), UInt<3>("h1")) @[ACEUnit.scala 163:30]
        inputBufferState <= _inputBufferState_T_5 @[ACEUnit.scala 163:24]
      else :
        node _T_4 = eq(UInt<3>("h2"), inputBufferState) @[ACEUnit.scala 127:27]
        when _T_4 : @[ACEUnit.scala 127:27]
          node _inputBufferState_T_6 = mux(writeComplete, UInt<3>("h0"), UInt<3>("h2")) @[ACEUnit.scala 166:30]
          inputBufferState <= _inputBufferState_T_6 @[ACEUnit.scala 166:24]
        else :
          node _T_5 = eq(UInt<3>("h3"), inputBufferState) @[ACEUnit.scala 127:27]
          when _T_5 : @[ACEUnit.scala 127:27]
            node _inputBufferState_T_7 = mux(coherentComplete, UInt<3>("h0"), UInt<3>("h3")) @[ACEUnit.scala 169:30]
            inputBufferState <= _inputBufferState_T_7 @[ACEUnit.scala 169:24]
          else :
            node _T_6 = eq(UInt<3>("h4"), inputBufferState) @[ACEUnit.scala 127:27]
            when _T_6 : @[ACEUnit.scala 127:27]
              bus.AWID <= UInt<2>("h2") @[ACEUnit.scala 172:16]
              bus.AWADDR <= UInt<1>("h0") @[ACEUnit.scala 173:18]
              bus.AWLEN <= UInt<1>("h0") @[ACEUnit.scala 174:17]
              bus.AWSIZE <= UInt<2>("h3") @[ACEUnit.scala 175:18]
              bus.AWBURST <= UInt<1>("h1") @[ACEUnit.scala 176:19]
              bus.AWLOCK <= UInt<1>("h0") @[ACEUnit.scala 177:18]
              bus.AWCACHE <= UInt<2>("h3") @[ACEUnit.scala 178:19]
              bus.AWPROT <= UInt<2>("h2") @[ACEUnit.scala 179:18]
              bus.AWQOS <= UInt<1>("h0") @[ACEUnit.scala 180:17]
              node _bus_AWVALID_T = eq(fenceWriteBarrierSend, UInt<1>("h0")) @[ACEUnit.scala 181:22]
              bus.AWVALID <= _bus_AWVALID_T @[ACEUnit.scala 181:19]
              bus.AWSNOOP <= UInt<1>("h0") @[ACEUnit.scala 182:19]
              bus.AWDOMAIN <= UInt<2>("h2") @[ACEUnit.scala 183:20]
              bus.AWBAR <= UInt<1>("h1") @[ACEUnit.scala 184:17]
              bus.ARID <= UInt<2>("h2") @[ACEUnit.scala 186:16]
              bus.ARADDR <= UInt<1>("h0") @[ACEUnit.scala 187:18]
              bus.ARLEN <= UInt<1>("h0") @[ACEUnit.scala 188:17]
              bus.ARSIZE <= UInt<2>("h3") @[ACEUnit.scala 189:18]
              bus.ARBURST <= UInt<1>("h1") @[ACEUnit.scala 190:19]
              bus.ARLOCK <= UInt<1>("h0") @[ACEUnit.scala 191:18]
              bus.ARCACHE <= UInt<2>("h3") @[ACEUnit.scala 192:19]
              bus.ARPROT <= UInt<2>("h2") @[ACEUnit.scala 193:18]
              bus.ARQOS <= UInt<1>("h0") @[ACEUnit.scala 194:17]
              node _bus_ARVALID_T = eq(fenceReadBarrierSend, UInt<1>("h0")) @[ACEUnit.scala 195:22]
              bus.ARVALID <= _bus_ARVALID_T @[ACEUnit.scala 195:19]
              bus.ARSNOOP <= UInt<1>("h0") @[ACEUnit.scala 196:19]
              bus.ARDOMAIN <= UInt<2>("h2") @[ACEUnit.scala 197:20]
              bus.ARBAR <= UInt<1>("h1") @[ACEUnit.scala 198:17]
              when bus.ARREADY : @[ACEUnit.scala 200:24]
                fenceReadBarrierSend <= UInt<1>("h1") @[ACEUnit.scala 201:30]
              when bus.AWREADY : @[ACEUnit.scala 203:24]
                fenceWriteBarrierSend <= UInt<1>("h1") @[ACEUnit.scala 204:31]
              node _inputBufferState_T_8 = and(fenceReadBarrierSend, fenceWriteBarrierSend) @[ACEUnit.scala 207:52]
              node _inputBufferState_T_9 = mux(_inputBufferState_T_8, UInt<3>("h0"), UInt<3>("h4")) @[ACEUnit.scala 207:30]
              inputBufferState <= _inputBufferState_T_9 @[ACEUnit.scala 207:24]
    reg dataReg : UInt<512>, clock with :
      reset => (reset, UInt<512>("h0")) @[ACEUnit.scala 212:24]
    node _dataReg_T = mux(request.valid, request.data, dataReg) @[ACEUnit.scala 213:17]
    dataReg <= _dataReg_T @[ACEUnit.scala 213:11]
    reg responseReg : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[ACEUnit.scala 215:28]
    reg readAXIState : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[ACEUnit.scala 222:29]
    wire _readDataVec_WIRE : UInt<64>[8] @[ACEUnit.scala 223:36]
    _readDataVec_WIRE[0] <= UInt<64>("h0") @[ACEUnit.scala 223:36]
    _readDataVec_WIRE[1] <= UInt<64>("h0") @[ACEUnit.scala 223:36]
    _readDataVec_WIRE[2] <= UInt<64>("h0") @[ACEUnit.scala 223:36]
    _readDataVec_WIRE[3] <= UInt<64>("h0") @[ACEUnit.scala 223:36]
    _readDataVec_WIRE[4] <= UInt<64>("h0") @[ACEUnit.scala 223:36]
    _readDataVec_WIRE[5] <= UInt<64>("h0") @[ACEUnit.scala 223:36]
    _readDataVec_WIRE[6] <= UInt<64>("h0") @[ACEUnit.scala 223:36]
    _readDataVec_WIRE[7] <= UInt<64>("h0") @[ACEUnit.scala 223:36]
    reg readDataVec : UInt<64>[8], clock with :
      reset => (reset, _readDataVec_WIRE) @[ACEUnit.scala 223:28]
    reg responseValid : UInt<1>, clock with :
      reset => (reset, UInt<1>("h1")) @[ACEUnit.scala 224:30]
    inst readCounter of CounterModule_9 @[ACEUnit.scala 225:27]
    readCounter.clock <= clock
    readCounter.reset <= reset
    readCounter.incrm <= UInt<1>("h0") @[ACEUnit.scala 226:21]
    node _T_7 = eq(UInt<2>("h0"), readAXIState) @[ACEUnit.scala 227:24]
    when _T_7 : @[ACEUnit.scala 227:24]
      node _T_8 = eq(isAtomicsInOperation, UInt<1>("h0")) @[ACEUnit.scala 229:37]
      node _T_9 = and(coherencyReceivedWire, _T_8) @[ACEUnit.scala 229:34]
      when _T_9 : @[ACEUnit.scala 229:59]
        readComplete <= UInt<1>("h1") @[ACEUnit.scala 230:22]
        readAXIState <= UInt<2>("h0") @[ACEUnit.scala 231:22]
      node _readAXIState_T = eq(inputBufferState, UInt<3>("h1")) @[ACEUnit.scala 233:44]
      node _readAXIState_T_1 = mux(_readAXIState_T, UInt<2>("h1"), UInt<2>("h0")) @[ACEUnit.scala 233:26]
      readAXIState <= _readAXIState_T_1 @[ACEUnit.scala 233:20]
    else :
      node _T_10 = eq(UInt<2>("h1"), readAXIState) @[ACEUnit.scala 227:24]
      when _T_10 : @[ACEUnit.scala 227:24]
        bus.ARVALID <= UInt<1>("h1") @[ACEUnit.scala 236:19]
        bus.ARID <= UInt<2>("h2") @[ACEUnit.scala 237:16]
        bus.ARADDR <= inputBuffer.address @[ACEUnit.scala 238:18]
        bus.ARLEN <= UInt<3>("h7") @[ACEUnit.scala 239:17]
        bus.ARSIZE <= UInt<2>("h3") @[ACEUnit.scala 240:18]
        bus.ARBURST <= UInt<1>("h1") @[ACEUnit.scala 241:19]
        bus.ARLOCK <= UInt<1>("h0") @[ACEUnit.scala 242:18]
        bus.ARCACHE <= UInt<4>("hf") @[ACEUnit.scala 243:19]
        bus.ARPROT <= UInt<2>("h2") @[ACEUnit.scala 244:18]
        bus.ARQOS <= UInt<1>("h0") @[ACEUnit.scala 245:17]
        bus.ARDOMAIN <= UInt<2>("h2") @[ACEUnit.scala 247:20]
        bus.ARSNOOP <= UInt<1>("h1") @[ACEUnit.scala 248:19]
        node _T_11 = cat(inputBuffer.isClean, inputBuffer.isUnique) @[Cat.scala 33:92]
        node _T_12 = eq(UInt<1>("h0"), _T_11) @[ACEUnit.scala 249:61]
        when _T_12 : @[ACEUnit.scala 249:61]
          bus.ARSNOOP <= UInt<1>("h1") @[ACEUnit.scala 250:34]
        else :
          node _T_13 = eq(UInt<1>("h1"), _T_11) @[ACEUnit.scala 249:61]
          when _T_13 : @[ACEUnit.scala 249:61]
            bus.ARSNOOP <= UInt<3>("h7") @[ACEUnit.scala 251:34]
          else :
            node _T_14 = eq(UInt<2>("h3"), _T_11) @[ACEUnit.scala 249:61]
            when _T_14 : @[ACEUnit.scala 249:61]
              bus.ARSNOOP <= UInt<4>("hb") @[ACEUnit.scala 252:34]
        bus.ARBAR <= UInt<1>("h0") @[ACEUnit.scala 254:17]
        readCounter.reset <= UInt<1>("h1") @[ACEUnit.scala 256:25]
        when coherencyReceivedWire : @[ACEUnit.scala 257:34]
          readAXIState <= UInt<2>("h0") @[ACEUnit.scala 258:22]
        else :
          node _readAXIState_T_2 = mux(bus.ARREADY, UInt<2>("h2"), UInt<2>("h1")) @[ACEUnit.scala 260:28]
          readAXIState <= _readAXIState_T_2 @[ACEUnit.scala 260:22]
      else :
        node _T_15 = eq(UInt<2>("h2"), readAXIState) @[ACEUnit.scala 227:24]
        when _T_15 : @[ACEUnit.scala 227:24]
          bus.RREADY <= UInt<1>("h1") @[ACEUnit.scala 264:18]
          node _isCleanUniqueWire_T = cat(inputBuffer.isClean, inputBuffer.isUnique) @[Cat.scala 33:92]
          node isCleanUniqueWire = eq(_isCleanUniqueWire_T, UInt<2>("h3")) @[ACEUnit.scala 265:78]
          when isCleanUniqueWire : @[ACEUnit.scala 266:30]
            node _responseReg_T = bits(bus.RRESP, 3, 2) @[ACEUnit.scala 267:33]
            responseReg <= _responseReg_T @[ACEUnit.scala 267:21]
            node _responseValid_T = bits(bus.RRESP, 1, 0) @[ACEUnit.scala 268:39]
            node _responseValid_T_1 = eq(_responseValid_T, UInt<1>("h0")) @[ACEUnit.scala 268:45]
            node _responseValid_T_2 = mux(_responseValid_T_1, responseValid, UInt<1>("h0")) @[ACEUnit.scala 268:29]
            responseValid <= _responseValid_T_2 @[ACEUnit.scala 268:23]
          else :
            node _T_16 = eq(bus.RID, UInt<2>("h2")) @[ACEUnit.scala 270:35]
            node _T_17 = and(bus.RVALID, _T_16) @[ACEUnit.scala 270:25]
            when _T_17 : @[ACEUnit.scala 270:44]
              readCounter.incrm <= UInt<1>("h1") @[ACEUnit.scala 271:29]
              readDataVec[readCounter.count] <= bus.RDATA @[ACEUnit.scala 272:42]
              node _responseValid_T_3 = bits(bus.RRESP, 1, 0) @[ACEUnit.scala 273:41]
              node _responseValid_T_4 = eq(_responseValid_T_3, UInt<1>("h0")) @[ACEUnit.scala 273:47]
              node _responseValid_T_5 = mux(_responseValid_T_4, responseValid, UInt<1>("h0")) @[ACEUnit.scala 273:31]
              responseValid <= _responseValid_T_5 @[ACEUnit.scala 273:25]
              node _responseReg_T_1 = bits(bus.RRESP, 3, 2) @[ACEUnit.scala 274:35]
              responseReg <= _responseReg_T_1 @[ACEUnit.scala 274:23]
          when isCleanUniqueWire : @[ACEUnit.scala 277:30]
            when coherencyReceivedWire : @[ACEUnit.scala 278:36]
              readAXIState <= UInt<2>("h0") @[ACEUnit.scala 279:24]
            else :
              node _readAXIState_T_3 = eq(bus.RID, UInt<2>("h2")) @[ACEUnit.scala 281:52]
              node _readAXIState_T_4 = and(bus.RVALID, _readAXIState_T_3) @[ACEUnit.scala 281:42]
              node _readAXIState_T_5 = mux(responseValid, UInt<2>("h3"), UInt<2>("h1")) @[ACEUnit.scala 282:30]
              node _readAXIState_T_6 = mux(_readAXIState_T_4, _readAXIState_T_5, UInt<2>("h2")) @[ACEUnit.scala 281:30]
              readAXIState <= _readAXIState_T_6 @[ACEUnit.scala 281:24]
          else :
            when coherencyReceivedWire : @[ACEUnit.scala 287:36]
              readAXIState <= UInt<2>("h0") @[ACEUnit.scala 288:24]
            else :
              node _readAXIState_T_7 = and(bus.RLAST, bus.RVALID) @[ACEUnit.scala 290:41]
              node _readAXIState_T_8 = mux(responseValid, UInt<2>("h3"), UInt<2>("h1")) @[ACEUnit.scala 291:30]
              node _readAXIState_T_9 = mux(_readAXIState_T_7, _readAXIState_T_8, UInt<2>("h2")) @[ACEUnit.scala 290:30]
              readAXIState <= _readAXIState_T_9 @[ACEUnit.scala 290:24]
        else :
          node _T_18 = eq(UInt<2>("h3"), readAXIState) @[ACEUnit.scala 227:24]
          when _T_18 : @[ACEUnit.scala 227:24]
            node _T_19 = eq(isAtomicsInOperation, UInt<1>("h0")) @[ACEUnit.scala 299:37]
            node _T_20 = and(coherencyReceivedWire, _T_19) @[ACEUnit.scala 299:34]
            when _T_20 : @[ACEUnit.scala 299:59]
              readComplete <= UInt<1>("h1") @[ACEUnit.scala 300:22]
              readAXIState <= UInt<2>("h0") @[ACEUnit.scala 301:22]
            else :
              node _isCleanUniqueWire_T_1 = cat(inputBuffer.isClean, inputBuffer.isUnique) @[Cat.scala 33:92]
              node isCleanUniqueWire_1 = eq(_isCleanUniqueWire_T_1, UInt<2>("h3")) @[ACEUnit.scala 303:80]
              readComplete <= loadData.ready @[ACEUnit.scala 304:22]
              loadData.valid <= UInt<1>("h1") @[ACEUnit.scala 305:24]
              node loadData_data_lo_lo = cat(readDataVec[1], readDataVec[0]) @[Cat.scala 33:92]
              node loadData_data_lo_hi = cat(readDataVec[3], readDataVec[2]) @[Cat.scala 33:92]
              node loadData_data_lo = cat(loadData_data_lo_hi, loadData_data_lo_lo) @[Cat.scala 33:92]
              node loadData_data_hi_lo = cat(readDataVec[5], readDataVec[4]) @[Cat.scala 33:92]
              node loadData_data_hi_hi = cat(readDataVec[7], readDataVec[6]) @[Cat.scala 33:92]
              node loadData_data_hi = cat(loadData_data_hi_hi, loadData_data_hi_lo) @[Cat.scala 33:92]
              node _loadData_data_T = cat(loadData_data_hi, loadData_data_lo) @[Cat.scala 33:92]
              node _loadData_data_T_1 = mux(isCleanUniqueWire_1, UInt<1>("h0"), _loadData_data_T) @[ACEUnit.scala 306:29]
              loadData.data <= _loadData_data_T_1 @[ACEUnit.scala 306:23]
              loadData.response <= responseReg @[ACEUnit.scala 307:27]
              node _readAXIState_T_10 = mux(loadData.ready, UInt<2>("h0"), UInt<2>("h3")) @[ACEUnit.scala 308:28]
              readAXIState <= _readAXIState_T_10 @[ACEUnit.scala 308:22]
    reg writeAXIState : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[ACEUnit.scala 314:30]
    inst writeCounter of CounterModule_10 @[ACEUnit.scala 315:28]
    writeCounter.clock <= clock
    writeCounter.reset <= reset
    writeCounter.incrm <= UInt<1>("h0") @[ACEUnit.scala 316:22]
    node _T_21 = eq(UInt<2>("h0"), writeAXIState) @[ACEUnit.scala 317:25]
    when _T_21 : @[ACEUnit.scala 317:25]
      node _writeAXIState_T = eq(inputBufferState, UInt<3>("h2")) @[ACEUnit.scala 319:47]
      node _writeAXIState_T_1 = mux(_writeAXIState_T, UInt<2>("h1"), UInt<2>("h0")) @[ACEUnit.scala 319:29]
      writeAXIState <= _writeAXIState_T_1 @[ACEUnit.scala 319:23]
    else :
      node _T_22 = eq(UInt<2>("h1"), writeAXIState) @[ACEUnit.scala 317:25]
      when _T_22 : @[ACEUnit.scala 317:25]
        bus.AWVALID <= UInt<1>("h1") @[ACEUnit.scala 322:19]
        bus.AWID <= UInt<2>("h2") @[ACEUnit.scala 323:16]
        bus.AWADDR <= inputBuffer.address @[ACEUnit.scala 324:18]
        bus.AWLEN <= UInt<3>("h7") @[ACEUnit.scala 325:17]
        bus.AWSIZE <= UInt<2>("h3") @[ACEUnit.scala 326:18]
        bus.AWBURST <= UInt<1>("h1") @[ACEUnit.scala 327:19]
        bus.AWLOCK <= UInt<1>("h0") @[ACEUnit.scala 328:18]
        bus.AWCACHE <= UInt<4>("hf") @[ACEUnit.scala 329:19]
        bus.AWPROT <= UInt<2>("h2") @[ACEUnit.scala 330:18]
        bus.AWQOS <= UInt<1>("h0") @[ACEUnit.scala 331:17]
        bus.AWDOMAIN <= UInt<2>("h2") @[ACEUnit.scala 333:20]
        bus.AWSNOOP <= UInt<2>("h3") @[ACEUnit.scala 334:19]
        bus.WVALID <= UInt<1>("h1") @[ACEUnit.scala 336:18]
        node _bus_WSTRB_T = mux(UInt<1>("h1"), UInt<8>("hff"), UInt<8>("h0")) @[Bitwise.scala 77:12]
        bus.WSTRB <= _bus_WSTRB_T @[ACEUnit.scala 337:17]
        node _bus_WLAST_T = eq(writeCounter.count, UInt<3>("h7")) @[ACEUnit.scala 338:39]
        bus.WLAST <= _bus_WLAST_T @[ACEUnit.scala 338:17]
        node _writeChunks_T = bits(dataReg, 63, 0) @[ACEUnit.scala 342:16]
        node _writeChunks_T_1 = bits(dataReg, 127, 64) @[ACEUnit.scala 342:16]
        node _writeChunks_T_2 = bits(dataReg, 191, 128) @[ACEUnit.scala 342:16]
        node _writeChunks_T_3 = bits(dataReg, 255, 192) @[ACEUnit.scala 342:16]
        node _writeChunks_T_4 = bits(dataReg, 319, 256) @[ACEUnit.scala 342:16]
        node _writeChunks_T_5 = bits(dataReg, 383, 320) @[ACEUnit.scala 342:16]
        node _writeChunks_T_6 = bits(dataReg, 447, 384) @[ACEUnit.scala 342:16]
        node _writeChunks_T_7 = bits(dataReg, 511, 448) @[ACEUnit.scala 342:16]
        wire writeChunks : UInt<64>[8] @[ACEUnit.scala 341:32]
        writeChunks[0] <= _writeChunks_T @[ACEUnit.scala 341:32]
        writeChunks[1] <= _writeChunks_T_1 @[ACEUnit.scala 341:32]
        writeChunks[2] <= _writeChunks_T_2 @[ACEUnit.scala 341:32]
        writeChunks[3] <= _writeChunks_T_3 @[ACEUnit.scala 341:32]
        writeChunks[4] <= _writeChunks_T_4 @[ACEUnit.scala 341:32]
        writeChunks[5] <= _writeChunks_T_5 @[ACEUnit.scala 341:32]
        writeChunks[6] <= _writeChunks_T_6 @[ACEUnit.scala 341:32]
        writeChunks[7] <= _writeChunks_T_7 @[ACEUnit.scala 341:32]
        when bus.WREADY : @[ACEUnit.scala 344:23]
          bus.WDATA <= writeChunks[writeCounter.count] @[ACEUnit.scala 345:19]
          writeCounter.incrm <= UInt<1>("h1") @[ACEUnit.scala 346:28]
        node _writeAXIState_T_2 = mux(bus.WLAST, UInt<2>("h2"), UInt<2>("h1")) @[ACEUnit.scala 349:27]
        writeAXIState <= _writeAXIState_T_2 @[ACEUnit.scala 349:21]
      else :
        node _T_23 = eq(UInt<2>("h2"), writeAXIState) @[ACEUnit.scala 317:25]
        when _T_23 : @[ACEUnit.scala 317:25]
          bus.BREADY <= UInt<1>("h1") @[ACEUnit.scala 352:18]
          node _writeComplete_T = eq(bus.BID, UInt<2>("h2")) @[ACEUnit.scala 353:46]
          node _writeComplete_T_1 = and(bus.BVALID, _writeComplete_T) @[ACEUnit.scala 353:35]
          node _writeComplete_T_2 = eq(bus.BRESP, UInt<1>("h0")) @[ACEUnit.scala 353:68]
          node _writeComplete_T_3 = and(_writeComplete_T_1, _writeComplete_T_2) @[ACEUnit.scala 353:55]
          writeComplete <= _writeComplete_T_3 @[ACEUnit.scala 353:21]
          node _writeAXIState_T_3 = eq(bus.BID, UInt<2>("h2")) @[ACEUnit.scala 355:51]
          node _writeAXIState_T_4 = and(bus.BVALID, _writeAXIState_T_3) @[ACEUnit.scala 355:39]
          node _writeAXIState_T_5 = eq(bus.BRESP, UInt<1>("h0")) @[ACEUnit.scala 356:39]
          node _writeAXIState_T_6 = mux(_writeAXIState_T_5, UInt<2>("h0"), UInt<2>("h1")) @[ACEUnit.scala 356:28]
          node _writeAXIState_T_7 = mux(_writeAXIState_T_4, _writeAXIState_T_6, UInt<2>("h2")) @[ACEUnit.scala 355:27]
          writeAXIState <= _writeAXIState_T_7 @[ACEUnit.scala 355:21]
        else :
          node _T_24 = eq(UInt<2>("h3"), writeAXIState) @[ACEUnit.scala 317:25]
          when _T_24 : @[ACEUnit.scala 317:25]
            writeAXIState <= UInt<2>("h0") @[ACEUnit.scala 360:21]
    reg responseValidReg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[ACEUnit.scala 365:33]
    reg coherentAXIState : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[ACEUnit.scala 366:33]
    inst coherentCounter of CounterModule_11 @[ACEUnit.scala 367:31]
    coherentCounter.clock <= clock
    coherentCounter.reset <= reset
    coherentCounter.incrm <= UInt<1>("h0") @[ACEUnit.scala 368:25]
    node _T_25 = eq(UInt<2>("h0"), coherentAXIState) @[ACEUnit.scala 369:27]
    when _T_25 : @[ACEUnit.scala 369:27]
      node _coherencyRequest_valid_T = eq(inputBufferState, UInt<3>("h3")) @[ACEUnit.scala 371:50]
      coherencyRequest.valid <= _coherencyRequest_valid_T @[ACEUnit.scala 371:30]
      coherencyRequest.address <= inputBuffer.address @[ACEUnit.scala 372:32]
      node _coherencyRequest_invalidateReq_T_3 = eq(inputBuffer.snoop, UInt<4>("h9")) @[ACEUnit.scala 373:60]
      node _coherencyRequest_invalidateReq_T_4 = eq(inputBuffer.snoop, UInt<3>("h7")) @[ACEUnit.scala 373:97]
      node _coherencyRequest_invalidateReq_T_5 = or(_coherencyRequest_invalidateReq_T_3, _coherencyRequest_invalidateReq_T_4) @[ACEUnit.scala 373:75]
      coherencyRequest.invalidateReq <= _coherencyRequest_invalidateReq_T_5 @[ACEUnit.scala 373:38]
      node _coherencyRequest_dataReq_T_3 = eq(inputBuffer.snoop, UInt<1>("h1")) @[ACEUnit.scala 374:54]
      node _coherencyRequest_dataReq_T_4 = eq(inputBuffer.snoop, UInt<3>("h7")) @[ACEUnit.scala 374:91]
      node _coherencyRequest_dataReq_T_5 = or(_coherencyRequest_dataReq_T_3, _coherencyRequest_dataReq_T_4) @[ACEUnit.scala 374:69]
      coherencyRequest.dataReq <= _coherencyRequest_dataReq_T_5 @[ACEUnit.scala 374:32]
      node _coherentAXIState_T = mux(coherencyRequest.accepted, UInt<2>("h1"), UInt<2>("h0")) @[ACEUnit.scala 376:30]
      coherentAXIState <= _coherentAXIState_T @[ACEUnit.scala 376:24]
    else :
      node _T_26 = eq(UInt<2>("h1"), coherentAXIState) @[ACEUnit.scala 369:27]
      when _T_26 : @[ACEUnit.scala 369:27]
        request.ready <= UInt<1>("h1") @[ACEUnit.scala 379:21]
        when request.valid : @[ACEUnit.scala 380:27]
          responseValidReg <= request.writeEn @[ACEUnit.scala 381:26]
          dataReg <= request.data @[ACEUnit.scala 382:17]
          node _responseReg_T_2 = cat(request.isUnique, request.isClean) @[Cat.scala 33:92]
          responseReg <= _responseReg_T_2 @[ACEUnit.scala 383:21]
        node _coherentAXIState_T_1 = mux(request.valid, UInt<2>("h2"), UInt<2>("h1")) @[ACEUnit.scala 386:30]
        coherentAXIState <= _coherentAXIState_T_1 @[ACEUnit.scala 386:24]
      else :
        node _T_27 = eq(UInt<2>("h2"), coherentAXIState) @[ACEUnit.scala 369:27]
        when _T_27 : @[ACEUnit.scala 369:27]
          bus.CRVALID <= UInt<1>("h1") @[ACEUnit.scala 389:19]
          node _bus_CRRESP_T = bits(responseReg, 1, 1) @[ACEUnit.scala 390:69]
          node _bus_CRRESP_T_1 = eq(_bus_CRRESP_T, UInt<1>("h0")) @[ACEUnit.scala 390:57]
          node _bus_CRRESP_T_2 = bits(responseReg, 0, 0) @[ACEUnit.scala 390:86]
          node _bus_CRRESP_T_3 = eq(_bus_CRRESP_T_2, UInt<1>("h0")) @[ACEUnit.scala 390:74]
          node bus_CRRESP_lo = cat(UInt<1>("h0"), responseValidReg) @[Cat.scala 33:92]
          node bus_CRRESP_hi_hi = cat(UInt<1>("h0"), _bus_CRRESP_T_1) @[Cat.scala 33:92]
          node bus_CRRESP_hi = cat(bus_CRRESP_hi_hi, _bus_CRRESP_T_3) @[Cat.scala 33:92]
          node _bus_CRRESP_T_4 = cat(bus_CRRESP_hi, bus_CRRESP_lo) @[Cat.scala 33:92]
          node _bus_CRRESP_T_5 = mux(responseValidReg, _bus_CRRESP_T_4, UInt<1>("h0")) @[ACEUnit.scala 390:24]
          bus.CRRESP <= _bus_CRRESP_T_5 @[ACEUnit.scala 390:18]
          when bus.CRREADY : @[ACEUnit.scala 392:24]
            node _coherentComplete_T = eq(responseValidReg, UInt<1>("h0")) @[ACEUnit.scala 393:29]
            coherentComplete <= _coherentComplete_T @[ACEUnit.scala 393:26]
            node _coherentAXIState_T_2 = mux(responseValidReg, UInt<2>("h3"), UInt<2>("h0")) @[ACEUnit.scala 394:32]
            coherentAXIState <= _coherentAXIState_T_2 @[ACEUnit.scala 394:26]
          else :
            coherentAXIState <= UInt<2>("h2") @[ACEUnit.scala 396:26]
        else :
          node _T_28 = eq(UInt<2>("h3"), coherentAXIState) @[ACEUnit.scala 369:27]
          when _T_28 : @[ACEUnit.scala 369:27]
            bus.CDVALID <= UInt<1>("h1") @[ACEUnit.scala 400:19]
            node _writeChunks_T_8 = bits(dataReg, 63, 0) @[ACEUnit.scala 404:16]
            node _writeChunks_T_9 = bits(dataReg, 127, 64) @[ACEUnit.scala 404:16]
            node _writeChunks_T_10 = bits(dataReg, 191, 128) @[ACEUnit.scala 404:16]
            node _writeChunks_T_11 = bits(dataReg, 255, 192) @[ACEUnit.scala 404:16]
            node _writeChunks_T_12 = bits(dataReg, 319, 256) @[ACEUnit.scala 404:16]
            node _writeChunks_T_13 = bits(dataReg, 383, 320) @[ACEUnit.scala 404:16]
            node _writeChunks_T_14 = bits(dataReg, 447, 384) @[ACEUnit.scala 404:16]
            node _writeChunks_T_15 = bits(dataReg, 511, 448) @[ACEUnit.scala 404:16]
            wire writeChunks_1 : UInt<64>[8] @[ACEUnit.scala 403:32]
            writeChunks_1[0] <= _writeChunks_T_8 @[ACEUnit.scala 403:32]
            writeChunks_1[1] <= _writeChunks_T_9 @[ACEUnit.scala 403:32]
            writeChunks_1[2] <= _writeChunks_T_10 @[ACEUnit.scala 403:32]
            writeChunks_1[3] <= _writeChunks_T_11 @[ACEUnit.scala 403:32]
            writeChunks_1[4] <= _writeChunks_T_12 @[ACEUnit.scala 403:32]
            writeChunks_1[5] <= _writeChunks_T_13 @[ACEUnit.scala 403:32]
            writeChunks_1[6] <= _writeChunks_T_14 @[ACEUnit.scala 403:32]
            writeChunks_1[7] <= _writeChunks_T_15 @[ACEUnit.scala 403:32]
            when bus.CDREADY : @[ACEUnit.scala 407:24]
              bus.CDDATA <= writeChunks_1[coherentCounter.count] @[ACEUnit.scala 408:20]
              coherentCounter.incrm <= UInt<1>("h1") @[ACEUnit.scala 409:31]
            node _bus_CDLAST_T = eq(coherentCounter.count, UInt<3>("h7")) @[ACEUnit.scala 411:43]
            bus.CDLAST <= _bus_CDLAST_T @[ACEUnit.scala 411:18]
            node _coherentComplete_T_1 = and(bus.CDLAST, bus.CDREADY) @[ACEUnit.scala 413:38]
            coherentComplete <= _coherentComplete_T_1 @[ACEUnit.scala 413:24]
            node _coherentAXIState_T_3 = and(bus.CDLAST, bus.CDREADY) @[ACEUnit.scala 415:42]
            node _coherentAXIState_T_4 = mux(_coherentAXIState_T_3, UInt<2>("h0"), UInt<2>("h3")) @[ACEUnit.scala 415:30]
            coherentAXIState <= _coherentAXIState_T_4 @[ACEUnit.scala 415:24]

  module core_Anon_3 :
    input clock : Clock
    input reset : Reset
    output request : { flip valid : UInt<1>, flip address : UInt<32>, flip instruction : UInt<32>, flip branchMask : UInt<5>, flip robAddr : UInt<4>, flip prfDest : UInt<6>}
    output dPort : { AWID : UInt<2>, AWADDR : UInt<32>, AWLEN : UInt<8>, AWSIZE : UInt<3>, AWBURST : UInt<2>, AWLOCK : UInt<1>, AWCACHE : UInt<4>, AWPROT : UInt<3>, AWQOS : UInt<4>, AWVALID : UInt<1>, flip AWREADY : UInt<1>, WDATA : UInt<64>, WSTRB : UInt<8>, WLAST : UInt<1>, WVALID : UInt<1>, flip WREADY : UInt<1>, flip BID : UInt<2>, flip BRESP : UInt<2>, flip BVALID : UInt<1>, BREADY : UInt<1>, ARID : UInt<2>, ARADDR : UInt<32>, ARLEN : UInt<8>, ARSIZE : UInt<3>, ARBURST : UInt<2>, ARLOCK : UInt<1>, ARCACHE : UInt<4>, ARPROT : UInt<3>, ARQOS : UInt<4>, ARVALID : UInt<1>, flip ARREADY : UInt<1>, flip RID : UInt<2>, flip RDATA : UInt<64>, flip RLAST : UInt<1>, flip RVALID : UInt<1>, RREADY : UInt<1>, AWDOMAIN : UInt<2>, AWSNOOP : UInt<3>, AWBAR : UInt<2>, ARDOMAIN : UInt<2>, ARSNOOP : UInt<4>, ARBAR : UInt<2>, flip RRESP : UInt<4>, flip ACVALID : UInt<1>, ACREADY : UInt<1>, flip ACADDR : UInt<32>, flip ACSNOOP : UInt<4>, flip ACPROT : UInt<3>, CRVALID : UInt<1>, flip CRREADY : UInt<1>, CRRESP : UInt<5>, CDVALID : UInt<1>, flip CDREADY : UInt<1>, CDDATA : UInt<64>, CDLAST : UInt<1>}
    output peripheral : { AWID : UInt<2>, AWADDR : UInt<32>, AWLEN : UInt<8>, AWSIZE : UInt<3>, AWBURST : UInt<2>, AWLOCK : UInt<1>, AWCACHE : UInt<4>, AWPROT : UInt<3>, AWQOS : UInt<4>, AWVALID : UInt<1>, flip AWREADY : UInt<1>, WDATA : UInt<32>, WSTRB : UInt<4>, WLAST : UInt<1>, WVALID : UInt<1>, flip WREADY : UInt<1>, flip BID : UInt<2>, flip BRESP : UInt<2>, flip BVALID : UInt<1>, BREADY : UInt<1>, ARID : UInt<2>, ARADDR : UInt<32>, ARLEN : UInt<8>, ARSIZE : UInt<3>, ARBURST : UInt<2>, ARLOCK : UInt<1>, ARCACHE : UInt<4>, ARPROT : UInt<3>, ARQOS : UInt<4>, ARVALID : UInt<1>, flip ARREADY : UInt<1>, flip RID : UInt<2>, flip RDATA : UInt<32>, flip RRESP : UInt<2>, flip RLAST : UInt<1>, flip RVALID : UInt<1>, RREADY : UInt<1>}
    output responseOut : { valid : UInt<1>, prfDest : UInt<6>, robAddr : UInt<4>, result : UInt<64>, instruction : UInt<32>}
    output canAllocate : UInt<1>
    output writeDataIn : { flip valid : UInt<1>, flip data : UInt<64>}
    input initiateFence : UInt<1>
    output fenceInstructions : { ready : UInt<1>, flip fired : UInt<1>}
    output writeCommit : { ready : UInt<1>, flip fired : UInt<1>}
    output branchOps : { flip valid : UInt<1>, flip branchMask : UInt<5>, flip passed : UInt<1>}
    output loadCommit : { flip ready : UInt<1>, valid : UInt<1>, state : UInt<1>}
    output decrCounter : UInt<1>
    output writeToMemoryPendingOut : UInt<32>

    canAllocate <= UInt<1>("h0") @[CacheModule.scala 33:15]
    responseOut.valid <= UInt<1>("h0") @[CacheModule.scala 35:21]
    responseOut.prfDest <= UInt<1>("h0") @[CacheModule.scala 36:23]
    responseOut.robAddr <= UInt<1>("h0") @[CacheModule.scala 37:23]
    responseOut.result <= UInt<1>("h0") @[CacheModule.scala 38:22]
    responseOut.instruction <= UInt<1>("h0") @[CacheModule.scala 39:27]
    fenceInstructions.ready <= UInt<1>("h0") @[CacheModule.scala 41:27]
    writeCommit.ready <= UInt<1>("h0") @[CacheModule.scala 42:21]
    inst requestScheduler of Scheduler_1 @[CacheModule.scala 44:32]
    requestScheduler.clock <= clock
    requestScheduler.reset <= reset
    inst cacheLookup of cacheLookup_1 @[CacheModule.scala 45:27]
    cacheLookup.clock <= clock
    cacheLookup.reset <= reset
    inst peripheralAXIUnit of AXIUnit_1 @[CacheModule.scala 46:33]
    peripheralAXIUnit.clock <= clock
    peripheralAXIUnit.reset <= reset
    inst writeDataInFifo of writeDataInFifo_1 @[CacheModule.scala 54:31]
    writeDataInFifo.clock <= clock
    writeDataInFifo.reset <= reset
    inst memoryAXIUnit of ACEUnit_1 @[CacheModule.scala 55:29]
    memoryAXIUnit.clock <= clock
    memoryAXIUnit.reset <= reset
    requestScheduler.canAccept <= UInt<1>("h0") @[CacheModule.scala 64:30]
    writeDataInFifo.canAccept <= UInt<1>("h0") @[CacheModule.scala 65:29]
    cacheLookup.storeDataIn.data <= UInt<1>("h0") @[CacheModule.scala 67:32]
    cacheLookup.storeDataIn.valid <= UInt<1>("h0") @[CacheModule.scala 68:33]
    cacheLookup.responseOut.ready <= UInt<1>("h0") @[CacheModule.scala 70:33]
    cacheLookup.cacheRequest.writeEn <= UInt<1>("h0") @[CacheModule.scala 71:36]
    cacheLookup.cacheRequest.instruction <= UInt<1>("h0") @[CacheModule.scala 72:40]
    cacheLookup.cacheRequest.valid <= UInt<1>("h0") @[CacheModule.scala 73:34]
    cacheLookup.cacheRequest.address <= UInt<1>("h0") @[CacheModule.scala 74:36]
    cacheLookup.branchFail <= UInt<1>("h0") @[CacheModule.scala 75:26]
    peripheralAXIUnit.request.valid <= UInt<1>("h0") @[CacheModule.scala 78:35]
    peripheralAXIUnit.request.writeEn <= UInt<1>("h0") @[CacheModule.scala 79:37]
    peripheralAXIUnit.request.address <= UInt<1>("h0") @[CacheModule.scala 80:37]
    peripheralAXIUnit.request.data <= UInt<1>("h0") @[CacheModule.scala 81:34]
    peripheralAXIUnit.request.instruction <= UInt<1>("h0") @[CacheModule.scala 82:41]
    peripheralAXIUnit.loadData.ready <= UInt<1>("h0") @[CacheModule.scala 83:36]
    requestScheduler.requestIn.prfDest <= request.prfDest @[CacheModule.scala 85:30]
    requestScheduler.requestIn.robAddr <= request.robAddr @[CacheModule.scala 85:30]
    requestScheduler.requestIn.branchMask <= request.branchMask @[CacheModule.scala 85:30]
    requestScheduler.requestIn.instruction <= request.instruction @[CacheModule.scala 85:30]
    requestScheduler.requestIn.address <= request.address @[CacheModule.scala 85:30]
    requestScheduler.requestIn.valid <= request.valid @[CacheModule.scala 85:30]
    requestScheduler.branchOps.passed <= branchOps.passed @[CacheModule.scala 86:30]
    requestScheduler.branchOps.branchMask <= branchOps.branchMask @[CacheModule.scala 86:30]
    requestScheduler.branchOps.valid <= branchOps.valid @[CacheModule.scala 86:30]
    canAllocate <= requestScheduler.canAllocate @[CacheModule.scala 87:15]
    reg inputBufferState : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[CacheModule.scala 91:33]
    wire _inputBuffer_WIRE : { address : UInt<32>, prfDest : UInt<6>, robAddr : UInt<4>, branchMask : UInt<5>, result : UInt<64>, instruction : UInt<32>}
    _inputBuffer_WIRE.instruction <= UInt<1>("h0")
    _inputBuffer_WIRE.result <= UInt<1>("h0")
    _inputBuffer_WIRE.branchMask <= UInt<1>("h0")
    _inputBuffer_WIRE.robAddr <= UInt<1>("h0")
    _inputBuffer_WIRE.prfDest <= UInt<1>("h0")
    _inputBuffer_WIRE.address <= UInt<1>("h0")
    reg inputBuffer : { address : UInt<32>, prfDest : UInt<6>, robAddr : UInt<4>, branchMask : UInt<5>, result : UInt<64>, instruction : UInt<32>}, clock with :
      reset => (reset, _inputBuffer_WIRE) @[CacheModule.scala 92:28]
    wire branchMaskWire : UInt<5>
    branchMaskWire <= UInt<5>("h0")
    wire branchPassWire : UInt<1>
    branchPassWire <= UInt<1>("h0")
    wire branchValidWire : UInt<1>
    branchValidWire <= UInt<1>("h0")
    reg isFlushed : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[CacheModule.scala 113:26]
    wire isFlushedWire : UInt<1>
    isFlushedWire <= UInt<1>("h0")
    isFlushedWire <= isFlushed @[CacheModule.scala 116:17]
    when branchOps.valid : @[CacheModule.scala 118:24]
      branchValidWire <= UInt<1>("h1") @[CacheModule.scala 119:21]
      branchMaskWire <= branchOps.branchMask @[CacheModule.scala 120:20]
      branchPassWire <= branchOps.passed @[CacheModule.scala 121:20]
    when isFlushed : @[CacheModule.scala 124:18]
      node _isFlushed_T = eq(inputBufferState, UInt<2>("h0")) @[CacheModule.scala 125:39]
      node _isFlushed_T_1 = mux(_isFlushed_T, UInt<1>("h0"), isFlushed) @[CacheModule.scala 125:21]
      isFlushed <= _isFlushed_T_1 @[CacheModule.scala 125:15]
    else :
      node _T = neq(inputBufferState, UInt<2>("h0")) @[CacheModule.scala 127:47]
      node _T_1 = and(branchValidWire, _T) @[CacheModule.scala 127:26]
      when _T_1 : @[CacheModule.scala 127:58]
        node _T_2 = and(inputBuffer.branchMask, branchMaskWire) @[CacheModule.scala 128:54]
        node _T_3 = orr(_T_2) @[CacheModule.scala 128:72]
        node _T_4 = and(branchPassWire, _T_3) @[CacheModule.scala 128:27]
        when _T_4 : @[CacheModule.scala 128:76]
          node _inputBuffer_branchMask_T = xor(inputBuffer.branchMask, branchMaskWire) @[CacheModule.scala 129:58]
          inputBuffer.branchMask <= _inputBuffer_branchMask_T @[CacheModule.scala 129:32]
          isFlushed <= UInt<1>("h0") @[CacheModule.scala 130:19]
          isFlushedWire <= UInt<1>("h0") @[CacheModule.scala 131:23]
        else :
          node _isFlushed_T_2 = and(inputBuffer.branchMask, branchMaskWire) @[CacheModule.scala 133:46]
          node _isFlushed_T_3 = orr(_isFlushed_T_2) @[CacheModule.scala 133:64]
          isFlushed <= _isFlushed_T_3 @[CacheModule.scala 133:19]
          node _isFlushedWire_T = and(inputBuffer.branchMask, branchMaskWire) @[CacheModule.scala 134:50]
          node _isFlushedWire_T_1 = orr(_isFlushedWire_T) @[CacheModule.scala 134:68]
          isFlushedWire <= _isFlushedWire_T_1 @[CacheModule.scala 134:23]
    wire isLoadWire : UInt<1>
    isLoadWire <= UInt<1>("h0")
    wire isAtomicsWire : UInt<1>
    isAtomicsWire <= UInt<1>("h0")
    wire isLoadReservedWire : UInt<1>
    isLoadReservedWire <= UInt<1>("h0")
    wire isStoreConditionalWire : UInt<1>
    isStoreConditionalWire <= UInt<1>("h0")
    wire isInsValid : UInt<1>
    isInsValid <= UInt<1>("h0")
    reg requestAccepted : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[CacheModule.scala 146:32]
    node _T_5 = neq(inputBufferState, UInt<2>("h2")) @[CacheModule.scala 147:25]
    when _T_5 : @[CacheModule.scala 147:40]
      requestAccepted <= UInt<1>("h0") @[CacheModule.scala 148:21]
    reg coherencyInterrupted : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[CacheModule.scala 150:37]
    node _T_6 = neq(inputBufferState, UInt<2>("h2")) @[CacheModule.scala 151:25]
    when _T_6 : @[CacheModule.scala 151:40]
      coherencyInterrupted <= UInt<1>("h0") @[CacheModule.scala 152:26]
    reg gotFired : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[CacheModule.scala 154:25]
    node _T_7 = neq(inputBufferState, UInt<2>("h2")) @[CacheModule.scala 155:25]
    when _T_7 : @[CacheModule.scala 155:40]
      gotFired <= UInt<1>("h0") @[CacheModule.scala 156:12]
    reg storeDataReg : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[CacheModule.scala 158:29]
    node _T_8 = neq(inputBufferState, UInt<2>("h0")) @[CacheModule.scala 160:25]
    when _T_8 : @[CacheModule.scala 160:35]
      node _isLoadWire_T = bits(inputBuffer.instruction, 6, 3) @[CacheModule.scala 161:42]
      node _isLoadWire_T_1 = eq(_isLoadWire_T, UInt<1>("h0")) @[CacheModule.scala 161:48]
      isLoadWire <= _isLoadWire_T_1 @[CacheModule.scala 161:16]
      node _isAtomicsWire_T = bits(inputBuffer.instruction, 6, 2) @[CacheModule.scala 162:45]
      node _isAtomicsWire_T_1 = eq(_isAtomicsWire_T, UInt<4>("hb")) @[CacheModule.scala 162:51]
      isAtomicsWire <= _isAtomicsWire_T_1 @[CacheModule.scala 162:19]
      node _isLoadReservedWire_T = bits(inputBuffer.instruction, 31, 27) @[CacheModule.scala 163:68]
      node _isLoadReservedWire_T_1 = eq(_isLoadReservedWire_T, UInt<2>("h2")) @[CacheModule.scala 163:76]
      node _isLoadReservedWire_T_2 = and(isAtomicsWire, _isLoadReservedWire_T_1) @[CacheModule.scala 163:42]
      isLoadReservedWire <= _isLoadReservedWire_T_2 @[CacheModule.scala 163:24]
      node _isStoreConditionalWire_T = bits(inputBuffer.instruction, 31, 27) @[CacheModule.scala 164:72]
      node _isStoreConditionalWire_T_1 = eq(_isStoreConditionalWire_T, UInt<2>("h3")) @[CacheModule.scala 164:80]
      node _isStoreConditionalWire_T_2 = and(isAtomicsWire, _isStoreConditionalWire_T_1) @[CacheModule.scala 164:46]
      isStoreConditionalWire <= _isStoreConditionalWire_T_2 @[CacheModule.scala 164:28]
      node _isInsValid_T = bits(inputBuffer.instruction, 1, 0) @[CacheModule.scala 165:42]
      node _isInsValid_T_1 = eq(_isInsValid_T, UInt<2>("h3")) @[CacheModule.scala 165:48]
      isInsValid <= _isInsValid_T_1 @[CacheModule.scala 165:16]
    else :
      when requestScheduler.requestOut.valid : @[CacheModule.scala 166:49]
        node _isLoadWire_T_2 = bits(requestScheduler.requestOut.instruction, 6, 3) @[CacheModule.scala 167:58]
        node _isLoadWire_T_3 = eq(_isLoadWire_T_2, UInt<1>("h0")) @[CacheModule.scala 167:64]
        isLoadWire <= _isLoadWire_T_3 @[CacheModule.scala 167:16]
        node _isAtomicsWire_T_2 = bits(requestScheduler.requestOut.instruction, 6, 2) @[CacheModule.scala 168:61]
        node _isAtomicsWire_T_3 = eq(_isAtomicsWire_T_2, UInt<4>("hb")) @[CacheModule.scala 168:67]
        isAtomicsWire <= _isAtomicsWire_T_3 @[CacheModule.scala 168:19]
        node _isLoadReservedWire_T_3 = bits(requestScheduler.requestOut.instruction, 31, 27) @[CacheModule.scala 169:84]
        node _isLoadReservedWire_T_4 = eq(_isLoadReservedWire_T_3, UInt<2>("h2")) @[CacheModule.scala 169:92]
        node _isLoadReservedWire_T_5 = and(isAtomicsWire, _isLoadReservedWire_T_4) @[CacheModule.scala 169:42]
        isLoadReservedWire <= _isLoadReservedWire_T_5 @[CacheModule.scala 169:24]
        node _isStoreConditionalWire_T_3 = bits(requestScheduler.requestOut.instruction, 31, 27) @[CacheModule.scala 170:88]
        node _isStoreConditionalWire_T_4 = eq(_isStoreConditionalWire_T_3, UInt<2>("h3")) @[CacheModule.scala 170:96]
        node _isStoreConditionalWire_T_5 = and(isAtomicsWire, _isStoreConditionalWire_T_4) @[CacheModule.scala 170:46]
        isStoreConditionalWire <= _isStoreConditionalWire_T_5 @[CacheModule.scala 170:28]
        node _isInsValid_T_2 = bits(requestScheduler.requestOut.instruction, 1, 0) @[CacheModule.scala 171:58]
        node _isInsValid_T_3 = eq(_isInsValid_T_2, UInt<2>("h3")) @[CacheModule.scala 171:64]
        isInsValid <= _isInsValid_T_3 @[CacheModule.scala 171:16]
    node _T_9 = eq(UInt<2>("h0"), inputBufferState) @[CacheModule.scala 174:27]
    when _T_9 : @[CacheModule.scala 174:27]
      requestScheduler.canAccept <= UInt<1>("h1") @[CacheModule.scala 176:34]
      when requestScheduler.requestOut.valid : @[CacheModule.scala 177:46]
        inputBuffer.address <= requestScheduler.requestOut.address @[CacheModule.scala 178:29]
        inputBuffer.instruction <= requestScheduler.requestOut.instruction @[CacheModule.scala 179:33]
        inputBuffer.robAddr <= requestScheduler.requestOut.robAddr @[CacheModule.scala 180:29]
        inputBuffer.prfDest <= requestScheduler.requestOut.prfDest @[CacheModule.scala 181:29]
        when branchValidWire : @[CacheModule.scala 183:30]
          when branchPassWire : @[CacheModule.scala 184:31]
            node _inputBuffer_branchMask_T_1 = xor(requestScheduler.requestOut.branchMask, branchMaskWire) @[CacheModule.scala 185:78]
            inputBuffer.branchMask <= _inputBuffer_branchMask_T_1 @[CacheModule.scala 185:36]
          else :
            inputBuffer.branchMask <= requestScheduler.requestOut.branchMask @[CacheModule.scala 187:36]
            node _isFlushed_T_4 = and(requestScheduler.requestOut.branchMask, branchMaskWire) @[CacheModule.scala 188:66]
            node _isFlushed_T_5 = orr(_isFlushed_T_4) @[CacheModule.scala 188:84]
            isFlushed <= _isFlushed_T_5 @[CacheModule.scala 188:23]
        else :
          inputBuffer.branchMask <= requestScheduler.requestOut.branchMask @[CacheModule.scala 191:34]
      node _toAwaitRead_T = or(isLoadWire, isLoadReservedWire) @[CacheModule.scala 195:42]
      node _toAwaitRead_T_1 = eq(isStoreConditionalWire, UInt<1>("h0")) @[CacheModule.scala 195:85]
      node _toAwaitRead_T_2 = and(isAtomicsWire, _toAwaitRead_T_1) @[CacheModule.scala 195:82]
      node _toAwaitRead_T_3 = or(_toAwaitRead_T, _toAwaitRead_T_2) @[CacheModule.scala 195:64]
      node _toAwaitRead_T_4 = and(_toAwaitRead_T_3, isInsValid) @[CacheModule.scala 195:111]
      node toAwaitRead = mux(requestScheduler.requestOut.valid, _toAwaitRead_T_4, UInt<1>("h0")) @[CacheModule.scala 194:28]
      when requestScheduler.requestOut.valid : @[CacheModule.scala 198:46]
        node _inputBufferState_T = mux(toAwaitRead, UInt<2>("h1"), UInt<2>("h2")) @[CacheModule.scala 199:32]
        inputBufferState <= _inputBufferState_T @[CacheModule.scala 199:26]
      else :
        inputBufferState <= UInt<2>("h0") @[CacheModule.scala 201:26]
    else :
      node _T_10 = eq(UInt<2>("h1"), inputBufferState) @[CacheModule.scala 174:27]
      when _T_10 : @[CacheModule.scala 174:27]
        node _peripheralRead_T = eq(inputBuffer.address, UInt<32>("he000102c")) @[CacheModule.scala 206:57]
        wire peripheralRead : UInt<1>
        peripheralRead <= _peripheralRead_T
        when peripheralRead : @[CacheModule.scala 208:27]
          peripheralAXIUnit.loadData.ready <= UInt<1>("h1") @[CacheModule.scala 209:42]
          node _T_11 = bits(inputBuffer.branchMask, 3, 0) @[CacheModule.scala 210:72]
          node _T_12 = orr(_T_11) @[CacheModule.scala 210:78]
          node _T_13 = eq(_T_12, UInt<1>("h0")) @[CacheModule.scala 210:49]
          node _T_14 = and(peripheralAXIUnit.request.ready, _T_13) @[CacheModule.scala 210:46]
          when _T_14 : @[CacheModule.scala 210:82]
            peripheralAXIUnit.request.valid <= UInt<1>("h1") @[CacheModule.scala 211:43]
            peripheralAXIUnit.request.writeEn <= UInt<1>("h0") @[CacheModule.scala 212:45]
            peripheralAXIUnit.request.address <= inputBuffer.address @[CacheModule.scala 213:45]
            peripheralAXIUnit.request.data <= UInt<1>("h0") @[CacheModule.scala 214:42]
            peripheralAXIUnit.request.instruction <= inputBuffer.instruction @[CacheModule.scala 215:49]
        else :
          node _T_15 = eq(isAtomicsWire, UInt<1>("h0")) @[CacheModule.scala 219:15]
          node _T_16 = bits(inputBuffer.branchMask, 3, 0) @[CacheModule.scala 219:74]
          node _T_17 = orr(_T_16) @[CacheModule.scala 219:80]
          node _T_18 = eq(_T_17, UInt<1>("h0")) @[CacheModule.scala 219:51]
          node _T_19 = and(isAtomicsWire, _T_18) @[CacheModule.scala 219:48]
          node _T_20 = or(_T_15, _T_19) @[CacheModule.scala 219:30]
          when _T_20 : @[CacheModule.scala 219:86]
            cacheLookup.responseOut.ready <= UInt<1>("h1") @[CacheModule.scala 220:41]
            cacheLookup.cacheRequest.valid <= UInt<1>("h1") @[CacheModule.scala 222:42]
            cacheLookup.cacheRequest.writeEn <= UInt<1>("h0") @[CacheModule.scala 223:44]
            cacheLookup.cacheRequest.address <= inputBuffer.address @[CacheModule.scala 224:44]
            cacheLookup.cacheRequest.instruction <= inputBuffer.instruction @[CacheModule.scala 225:48]
            cacheLookup.storeDataIn.data <= UInt<1>("h0") @[CacheModule.scala 226:40]
            cacheLookup.storeDataIn.valid <= UInt<1>("h0") @[CacheModule.scala 227:41]
          node _T_21 = eq(isAtomicsWire, UInt<1>("h0")) @[CacheModule.scala 230:14]
          when _T_21 : @[CacheModule.scala 230:29]
            cacheLookup.branchFail <= isFlushedWire @[CacheModule.scala 231:34]
        when peripheralRead : @[CacheModule.scala 235:27]
          node _inputBuffer_result_T = mux(peripheralAXIUnit.loadData.valid, peripheralAXIUnit.loadData.data, inputBuffer.result) @[CacheModule.scala 236:34]
          inputBuffer.result <= _inputBuffer_result_T @[CacheModule.scala 236:28]
        else :
          node _inputBuffer_result_T_1 = mux(cacheLookup.responseOut.valid, cacheLookup.responseOut.data, inputBuffer.result) @[CacheModule.scala 238:34]
          inputBuffer.result <= _inputBuffer_result_T_1 @[CacheModule.scala 238:28]
        when peripheralRead : @[CacheModule.scala 241:27]
          when isFlushedWire : @[CacheModule.scala 242:28]
            inputBufferState <= UInt<2>("h0") @[CacheModule.scala 243:28]
          else :
            node _inputBufferState_T_1 = mux(peripheralAXIUnit.loadData.valid, UInt<2>("h3"), UInt<2>("h1")) @[CacheModule.scala 245:34]
            inputBufferState <= _inputBufferState_T_1 @[CacheModule.scala 245:28]
        else :
          when isFlushedWire : @[CacheModule.scala 248:28]
            inputBufferState <= UInt<2>("h0") @[CacheModule.scala 249:28]
          else :
            node _inputBufferState_T_2 = mux(cacheLookup.responseOut.valid, UInt<2>("h3"), UInt<2>("h1")) @[CacheModule.scala 251:34]
            inputBufferState <= _inputBufferState_T_2 @[CacheModule.scala 251:28]
      else :
        node _T_22 = eq(UInt<2>("h2"), inputBufferState) @[CacheModule.scala 174:27]
        when _T_22 : @[CacheModule.scala 174:27]
          node _peripheralWrite_T = eq(inputBuffer.address, UInt<32>("he0001030")) @[CacheModule.scala 256:58]
          wire peripheralWrite : UInt<1>
          peripheralWrite <= _peripheralWrite_T
          when peripheralWrite : @[CacheModule.scala 257:28]
            node _writeDataInFifo_canAccept_T = eq(requestAccepted, UInt<1>("h0")) @[CacheModule.scala 258:38]
            writeDataInFifo.canAccept <= _writeDataInFifo_canAccept_T @[CacheModule.scala 258:35]
            node _T_23 = bits(inputBuffer.branchMask, 3, 0) @[CacheModule.scala 260:73]
            node _T_24 = orr(_T_23) @[CacheModule.scala 260:79]
            node _T_25 = eq(_T_24, UInt<1>("h0")) @[CacheModule.scala 260:50]
            node _T_26 = and(peripheralAXIUnit.request.ready, _T_25) @[CacheModule.scala 260:47]
            node _T_27 = and(_T_26, writeDataInFifo.dataOut.valid) @[CacheModule.scala 260:83]
            node _T_28 = eq(requestAccepted, UInt<1>("h0")) @[CacheModule.scala 260:119]
            node _T_29 = and(_T_27, _T_28) @[CacheModule.scala 260:116]
            when _T_29 : @[CacheModule.scala 260:136]
              peripheralAXIUnit.request.valid <= UInt<1>("h1") @[CacheModule.scala 262:43]
              peripheralAXIUnit.request.writeEn <= UInt<1>("h1") @[CacheModule.scala 263:45]
              peripheralAXIUnit.request.address <= inputBuffer.address @[CacheModule.scala 264:45]
              peripheralAXIUnit.request.data <= writeDataInFifo.dataOut.data @[CacheModule.scala 265:42]
              peripheralAXIUnit.request.instruction <= inputBuffer.instruction @[CacheModule.scala 266:49]
              node _requestAccepted_T = eq(requestAccepted, UInt<1>("h0")) @[CacheModule.scala 268:69]
              node _requestAccepted_T_1 = and(peripheralAXIUnit.request.ready, _requestAccepted_T) @[CacheModule.scala 268:66]
              node _requestAccepted_T_2 = mux(_requestAccepted_T_1, UInt<1>("h1"), requestAccepted) @[CacheModule.scala 268:33]
              requestAccepted <= _requestAccepted_T_2 @[CacheModule.scala 268:27]
          else :
            node _T_30 = eq(coherencyInterrupted, UInt<1>("h0")) @[CacheModule.scala 272:14]
            when _T_30 : @[CacheModule.scala 272:36]
              coherencyInterrupted <= memoryAXIUnit.coherencyReceived @[CacheModule.scala 273:32]
            when memoryAXIUnit.coherencyReceived : @[CacheModule.scala 275:46]
              requestAccepted <= UInt<1>("h0") @[CacheModule.scala 276:27]
            node _T_31 = bits(inputBuffer.branchMask, 3, 0) @[CacheModule.scala 278:37]
            node _T_32 = orr(_T_31) @[CacheModule.scala 278:43]
            node _T_33 = eq(_T_32, UInt<1>("h0")) @[CacheModule.scala 278:14]
            node _T_34 = and(_T_33, memoryAXIUnit.request.ready) @[CacheModule.scala 278:48]
            node _T_35 = and(_T_34, writeDataInFifo.dataOut.valid) @[CacheModule.scala 278:79]
            node _T_36 = eq(requestAccepted, UInt<1>("h0")) @[CacheModule.scala 278:115]
            node _T_37 = and(_T_35, _T_36) @[CacheModule.scala 278:112]
            when _T_37 : @[CacheModule.scala 278:132]
              cacheLookup.responseOut.ready <= isStoreConditionalWire @[CacheModule.scala 279:41]
              node _writeDataInFifo_canAccept_T_1 = eq(cacheLookup.cacheRequest.accepted, UInt<1>("h0")) @[CacheModule.scala 281:75]
              node _writeDataInFifo_canAccept_T_2 = mux(coherencyInterrupted, UInt<1>("h0"), _writeDataInFifo_canAccept_T_1) @[CacheModule.scala 281:43]
              writeDataInFifo.canAccept <= _writeDataInFifo_canAccept_T_2 @[CacheModule.scala 281:37]
              node _cacheLookup_cacheRequest_valid_T = eq(cacheLookup.cacheRequest.accepted, UInt<1>("h0")) @[CacheModule.scala 283:45]
              cacheLookup.cacheRequest.valid <= _cacheLookup_cacheRequest_valid_T @[CacheModule.scala 283:42]
              cacheLookup.cacheRequest.writeEn <= UInt<1>("h1") @[CacheModule.scala 284:44]
              cacheLookup.cacheRequest.address <= inputBuffer.address @[CacheModule.scala 285:44]
              cacheLookup.cacheRequest.instruction <= inputBuffer.instruction @[CacheModule.scala 286:48]
              node _cacheLookup_storeDataIn_data_T = mux(coherencyInterrupted, storeDataReg, writeDataInFifo.dataOut.data) @[CacheModule.scala 288:46]
              cacheLookup.storeDataIn.data <= _cacheLookup_storeDataIn_data_T @[CacheModule.scala 288:40]
              node _cacheLookup_storeDataIn_valid_T = eq(cacheLookup.cacheRequest.accepted, UInt<1>("h0")) @[CacheModule.scala 289:44]
              cacheLookup.storeDataIn.valid <= _cacheLookup_storeDataIn_valid_T @[CacheModule.scala 289:41]
              node _T_38 = eq(coherencyInterrupted, UInt<1>("h0")) @[CacheModule.scala 291:16]
              when _T_38 : @[CacheModule.scala 291:38]
                storeDataReg <= writeDataInFifo.dataOut.data @[CacheModule.scala 292:26]
              when memoryAXIUnit.coherencyReceived : @[CacheModule.scala 295:48]
                requestAccepted <= UInt<1>("h0") @[CacheModule.scala 296:29]
              else :
                node _requestAccepted_T_3 = eq(requestAccepted, UInt<1>("h0")) @[CacheModule.scala 298:70]
                node _requestAccepted_T_4 = and(cacheLookup.cacheRequest.valid, _requestAccepted_T_3) @[CacheModule.scala 298:67]
                node _requestAccepted_T_5 = mux(_requestAccepted_T_4, UInt<1>("h1"), requestAccepted) @[CacheModule.scala 298:35]
                requestAccepted <= _requestAccepted_T_5 @[CacheModule.scala 298:29]
          when peripheralWrite : @[CacheModule.scala 302:28]
            node _writeCommit_ready_T = eq(gotFired, UInt<1>("h0")) @[CacheModule.scala 303:30]
            writeCommit.ready <= _writeCommit_ready_T @[CacheModule.scala 303:27]
            node _gotFired_T = eq(gotFired, UInt<1>("h0")) @[CacheModule.scala 304:46]
            node _gotFired_T_1 = and(writeCommit.fired, _gotFired_T) @[CacheModule.scala 304:43]
            node _gotFired_T_2 = mux(_gotFired_T_1, UInt<1>("h1"), gotFired) @[CacheModule.scala 304:24]
            gotFired <= _gotFired_T_2 @[CacheModule.scala 304:18]
          else :
            node _writeCommit_ready_T_1 = eq(gotFired, UInt<1>("h0")) @[CacheModule.scala 306:30]
            writeCommit.ready <= _writeCommit_ready_T_1 @[CacheModule.scala 306:27]
            node _gotFired_T_3 = eq(gotFired, UInt<1>("h0")) @[CacheModule.scala 307:46]
            node _gotFired_T_4 = and(writeCommit.fired, _gotFired_T_3) @[CacheModule.scala 307:43]
            node _gotFired_T_5 = mux(_gotFired_T_4, UInt<1>("h1"), gotFired) @[CacheModule.scala 307:24]
            gotFired <= _gotFired_T_5 @[CacheModule.scala 307:18]
          when isStoreConditionalWire : @[CacheModule.scala 310:35]
            cacheLookup.responseOut.ready <= UInt<1>("h1") @[CacheModule.scala 311:39]
            when peripheralWrite : @[CacheModule.scala 312:30]
              node _inputBuffer_result_T_2 = mux(peripheralAXIUnit.loadData.valid, peripheralAXIUnit.loadData.data, inputBuffer.result) @[CacheModule.scala 314:36]
              inputBuffer.result <= _inputBuffer_result_T_2 @[CacheModule.scala 314:30]
            else :
              node _inputBuffer_result_T_3 = mux(cacheLookup.responseOut.valid, cacheLookup.responseOut.data, inputBuffer.result) @[CacheModule.scala 316:36]
              inputBuffer.result <= _inputBuffer_result_T_3 @[CacheModule.scala 316:30]
          else :
            inputBuffer.result <= UInt<1>("h0") @[CacheModule.scala 319:28]
          when isFlushedWire : @[CacheModule.scala 322:26]
            inputBufferState <= UInt<2>("h0") @[CacheModule.scala 323:26]
          else :
            when gotFired : @[CacheModule.scala 325:23]
              when requestAccepted : @[CacheModule.scala 326:32]
                when peripheralWrite : @[CacheModule.scala 327:34]
                  when peripheralAXIUnit.request.ready : @[CacheModule.scala 328:52]
                    node _inputBufferState_T_3 = mux(isStoreConditionalWire, UInt<2>("h3"), UInt<2>("h0")) @[CacheModule.scala 329:39]
                    inputBufferState <= _inputBufferState_T_3 @[CacheModule.scala 329:33]
                else :
                  when cacheLookup.cacheRequest.ready : @[CacheModule.scala 332:51]
                    node _inputBufferState_T_4 = mux(isStoreConditionalWire, UInt<2>("h3"), UInt<2>("h0")) @[CacheModule.scala 333:39]
                    inputBufferState <= _inputBufferState_T_4 @[CacheModule.scala 333:33]
            else :
              inputBufferState <= UInt<2>("h2") @[CacheModule.scala 339:28]
        else :
          node _T_39 = eq(UInt<2>("h3"), inputBufferState) @[CacheModule.scala 174:27]
          when _T_39 : @[CacheModule.scala 174:27]
            when isFlushedWire : @[CacheModule.scala 344:26]
              responseOut.valid <= UInt<1>("h0") @[CacheModule.scala 345:27]
            else :
              node _responseOut_valid_T = or(isLoadWire, isAtomicsWire) @[CacheModule.scala 347:43]
              node _responseOut_valid_T_1 = and(_responseOut_valid_T, isInsValid) @[CacheModule.scala 347:61]
              responseOut.valid <= _responseOut_valid_T_1 @[CacheModule.scala 347:27]
            responseOut.prfDest <= inputBuffer.prfDest @[CacheModule.scala 349:27]
            responseOut.robAddr <= inputBuffer.robAddr @[CacheModule.scala 350:27]
            responseOut.result <= inputBuffer.result @[CacheModule.scala 351:26]
            responseOut.instruction <= inputBuffer.instruction @[CacheModule.scala 352:31]
            node _inputBufferState_T_5 = or(isLoadReservedWire, isStoreConditionalWire) @[CacheModule.scala 354:69]
            node _inputBufferState_T_6 = eq(_inputBufferState_T_5, UInt<1>("h0")) @[CacheModule.scala 354:48]
            node _inputBufferState_T_7 = and(isAtomicsWire, _inputBufferState_T_6) @[CacheModule.scala 354:45]
            node _inputBufferState_T_8 = mux(_inputBufferState_T_7, UInt<2>("h2"), UInt<2>("h0")) @[CacheModule.scala 354:30]
            inputBufferState <= _inputBufferState_T_8 @[CacheModule.scala 354:24]
    writeDataInFifo.dataIn.data <= writeDataIn.data @[CacheModule.scala 359:26]
    writeDataInFifo.dataIn.valid <= writeDataIn.valid @[CacheModule.scala 359:26]
    memoryAXIUnit.isAtomicsInOperation <= cacheLookup.isAtomicsInOperation @[CacheModule.scala 361:38]
    cacheLookup.coherencyReceived <= memoryAXIUnit.coherencyReceived @[CacheModule.scala 362:33]
    cacheLookup.memoryRequest <= memoryAXIUnit.request @[CacheModule.scala 363:25]
    cacheLookup.loadData <= memoryAXIUnit.loadData @[CacheModule.scala 364:26]
    cacheLookup.coherencyRequest <= memoryAXIUnit.coherencyRequest @[CacheModule.scala 365:34]
    memoryAXIUnit.setFence <= UInt<1>("h0") @[CacheModule.scala 366:26]
    dPort.CDLAST <= memoryAXIUnit.bus.CDLAST @[CacheModule.scala 367:9]
    dPort.CDDATA <= memoryAXIUnit.bus.CDDATA @[CacheModule.scala 367:9]
    memoryAXIUnit.bus.CDREADY <= dPort.CDREADY @[CacheModule.scala 367:9]
    dPort.CDVALID <= memoryAXIUnit.bus.CDVALID @[CacheModule.scala 367:9]
    dPort.CRRESP <= memoryAXIUnit.bus.CRRESP @[CacheModule.scala 367:9]
    memoryAXIUnit.bus.CRREADY <= dPort.CRREADY @[CacheModule.scala 367:9]
    dPort.CRVALID <= memoryAXIUnit.bus.CRVALID @[CacheModule.scala 367:9]
    memoryAXIUnit.bus.ACPROT <= dPort.ACPROT @[CacheModule.scala 367:9]
    memoryAXIUnit.bus.ACSNOOP <= dPort.ACSNOOP @[CacheModule.scala 367:9]
    memoryAXIUnit.bus.ACADDR <= dPort.ACADDR @[CacheModule.scala 367:9]
    dPort.ACREADY <= memoryAXIUnit.bus.ACREADY @[CacheModule.scala 367:9]
    memoryAXIUnit.bus.ACVALID <= dPort.ACVALID @[CacheModule.scala 367:9]
    memoryAXIUnit.bus.RRESP <= dPort.RRESP @[CacheModule.scala 367:9]
    dPort.ARBAR <= memoryAXIUnit.bus.ARBAR @[CacheModule.scala 367:9]
    dPort.ARSNOOP <= memoryAXIUnit.bus.ARSNOOP @[CacheModule.scala 367:9]
    dPort.ARDOMAIN <= memoryAXIUnit.bus.ARDOMAIN @[CacheModule.scala 367:9]
    dPort.AWBAR <= memoryAXIUnit.bus.AWBAR @[CacheModule.scala 367:9]
    dPort.AWSNOOP <= memoryAXIUnit.bus.AWSNOOP @[CacheModule.scala 367:9]
    dPort.AWDOMAIN <= memoryAXIUnit.bus.AWDOMAIN @[CacheModule.scala 367:9]
    dPort.RREADY <= memoryAXIUnit.bus.RREADY @[CacheModule.scala 367:9]
    memoryAXIUnit.bus.RVALID <= dPort.RVALID @[CacheModule.scala 367:9]
    memoryAXIUnit.bus.RLAST <= dPort.RLAST @[CacheModule.scala 367:9]
    memoryAXIUnit.bus.RDATA <= dPort.RDATA @[CacheModule.scala 367:9]
    memoryAXIUnit.bus.RID <= dPort.RID @[CacheModule.scala 367:9]
    memoryAXIUnit.bus.ARREADY <= dPort.ARREADY @[CacheModule.scala 367:9]
    dPort.ARVALID <= memoryAXIUnit.bus.ARVALID @[CacheModule.scala 367:9]
    dPort.ARQOS <= memoryAXIUnit.bus.ARQOS @[CacheModule.scala 367:9]
    dPort.ARPROT <= memoryAXIUnit.bus.ARPROT @[CacheModule.scala 367:9]
    dPort.ARCACHE <= memoryAXIUnit.bus.ARCACHE @[CacheModule.scala 367:9]
    dPort.ARLOCK <= memoryAXIUnit.bus.ARLOCK @[CacheModule.scala 367:9]
    dPort.ARBURST <= memoryAXIUnit.bus.ARBURST @[CacheModule.scala 367:9]
    dPort.ARSIZE <= memoryAXIUnit.bus.ARSIZE @[CacheModule.scala 367:9]
    dPort.ARLEN <= memoryAXIUnit.bus.ARLEN @[CacheModule.scala 367:9]
    dPort.ARADDR <= memoryAXIUnit.bus.ARADDR @[CacheModule.scala 367:9]
    dPort.ARID <= memoryAXIUnit.bus.ARID @[CacheModule.scala 367:9]
    dPort.BREADY <= memoryAXIUnit.bus.BREADY @[CacheModule.scala 367:9]
    memoryAXIUnit.bus.BVALID <= dPort.BVALID @[CacheModule.scala 367:9]
    memoryAXIUnit.bus.BRESP <= dPort.BRESP @[CacheModule.scala 367:9]
    memoryAXIUnit.bus.BID <= dPort.BID @[CacheModule.scala 367:9]
    memoryAXIUnit.bus.WREADY <= dPort.WREADY @[CacheModule.scala 367:9]
    dPort.WVALID <= memoryAXIUnit.bus.WVALID @[CacheModule.scala 367:9]
    dPort.WLAST <= memoryAXIUnit.bus.WLAST @[CacheModule.scala 367:9]
    dPort.WSTRB <= memoryAXIUnit.bus.WSTRB @[CacheModule.scala 367:9]
    dPort.WDATA <= memoryAXIUnit.bus.WDATA @[CacheModule.scala 367:9]
    memoryAXIUnit.bus.AWREADY <= dPort.AWREADY @[CacheModule.scala 367:9]
    dPort.AWVALID <= memoryAXIUnit.bus.AWVALID @[CacheModule.scala 367:9]
    dPort.AWQOS <= memoryAXIUnit.bus.AWQOS @[CacheModule.scala 367:9]
    dPort.AWPROT <= memoryAXIUnit.bus.AWPROT @[CacheModule.scala 367:9]
    dPort.AWCACHE <= memoryAXIUnit.bus.AWCACHE @[CacheModule.scala 367:9]
    dPort.AWLOCK <= memoryAXIUnit.bus.AWLOCK @[CacheModule.scala 367:9]
    dPort.AWBURST <= memoryAXIUnit.bus.AWBURST @[CacheModule.scala 367:9]
    dPort.AWSIZE <= memoryAXIUnit.bus.AWSIZE @[CacheModule.scala 367:9]
    dPort.AWLEN <= memoryAXIUnit.bus.AWLEN @[CacheModule.scala 367:9]
    dPort.AWADDR <= memoryAXIUnit.bus.AWADDR @[CacheModule.scala 367:9]
    dPort.AWID <= memoryAXIUnit.bus.AWID @[CacheModule.scala 367:9]
    peripheral.RREADY <= peripheralAXIUnit.bus.RREADY @[CacheModule.scala 368:14]
    peripheralAXIUnit.bus.RVALID <= peripheral.RVALID @[CacheModule.scala 368:14]
    peripheralAXIUnit.bus.RLAST <= peripheral.RLAST @[CacheModule.scala 368:14]
    peripheralAXIUnit.bus.RRESP <= peripheral.RRESP @[CacheModule.scala 368:14]
    peripheralAXIUnit.bus.RDATA <= peripheral.RDATA @[CacheModule.scala 368:14]
    peripheralAXIUnit.bus.RID <= peripheral.RID @[CacheModule.scala 368:14]
    peripheralAXIUnit.bus.ARREADY <= peripheral.ARREADY @[CacheModule.scala 368:14]
    peripheral.ARVALID <= peripheralAXIUnit.bus.ARVALID @[CacheModule.scala 368:14]
    peripheral.ARQOS <= peripheralAXIUnit.bus.ARQOS @[CacheModule.scala 368:14]
    peripheral.ARPROT <= peripheralAXIUnit.bus.ARPROT @[CacheModule.scala 368:14]
    peripheral.ARCACHE <= peripheralAXIUnit.bus.ARCACHE @[CacheModule.scala 368:14]
    peripheral.ARLOCK <= peripheralAXIUnit.bus.ARLOCK @[CacheModule.scala 368:14]
    peripheral.ARBURST <= peripheralAXIUnit.bus.ARBURST @[CacheModule.scala 368:14]
    peripheral.ARSIZE <= peripheralAXIUnit.bus.ARSIZE @[CacheModule.scala 368:14]
    peripheral.ARLEN <= peripheralAXIUnit.bus.ARLEN @[CacheModule.scala 368:14]
    peripheral.ARADDR <= peripheralAXIUnit.bus.ARADDR @[CacheModule.scala 368:14]
    peripheral.ARID <= peripheralAXIUnit.bus.ARID @[CacheModule.scala 368:14]
    peripheral.BREADY <= peripheralAXIUnit.bus.BREADY @[CacheModule.scala 368:14]
    peripheralAXIUnit.bus.BVALID <= peripheral.BVALID @[CacheModule.scala 368:14]
    peripheralAXIUnit.bus.BRESP <= peripheral.BRESP @[CacheModule.scala 368:14]
    peripheralAXIUnit.bus.BID <= peripheral.BID @[CacheModule.scala 368:14]
    peripheralAXIUnit.bus.WREADY <= peripheral.WREADY @[CacheModule.scala 368:14]
    peripheral.WVALID <= peripheralAXIUnit.bus.WVALID @[CacheModule.scala 368:14]
    peripheral.WLAST <= peripheralAXIUnit.bus.WLAST @[CacheModule.scala 368:14]
    peripheral.WSTRB <= peripheralAXIUnit.bus.WSTRB @[CacheModule.scala 368:14]
    peripheral.WDATA <= peripheralAXIUnit.bus.WDATA @[CacheModule.scala 368:14]
    peripheralAXIUnit.bus.AWREADY <= peripheral.AWREADY @[CacheModule.scala 368:14]
    peripheral.AWVALID <= peripheralAXIUnit.bus.AWVALID @[CacheModule.scala 368:14]
    peripheral.AWQOS <= peripheralAXIUnit.bus.AWQOS @[CacheModule.scala 368:14]
    peripheral.AWPROT <= peripheralAXIUnit.bus.AWPROT @[CacheModule.scala 368:14]
    peripheral.AWCACHE <= peripheralAXIUnit.bus.AWCACHE @[CacheModule.scala 368:14]
    peripheral.AWLOCK <= peripheralAXIUnit.bus.AWLOCK @[CacheModule.scala 368:14]
    peripheral.AWBURST <= peripheralAXIUnit.bus.AWBURST @[CacheModule.scala 368:14]
    peripheral.AWSIZE <= peripheralAXIUnit.bus.AWSIZE @[CacheModule.scala 368:14]
    peripheral.AWLEN <= peripheralAXIUnit.bus.AWLEN @[CacheModule.scala 368:14]
    peripheral.AWADDR <= peripheralAXIUnit.bus.AWADDR @[CacheModule.scala 368:14]
    peripheral.AWID <= peripheralAXIUnit.bus.AWID @[CacheModule.scala 368:14]
    loadCommit.state <= cacheLookup.loadCommit.state @[CacheModule.scala 369:26]
    loadCommit.valid <= cacheLookup.loadCommit.valid @[CacheModule.scala 369:26]
    cacheLookup.loadCommit.ready <= loadCommit.ready @[CacheModule.scala 369:26]
    reg fenceInititatedReg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[CacheModule.scala 372:35]
    node _T_40 = and(initiateFence, requestScheduler.isEmpty) @[CacheModule.scala 373:22]
    node _T_41 = and(_T_40, writeDataInFifo.isEmpty) @[CacheModule.scala 373:50]
    node _T_42 = eq(inputBufferState, UInt<2>("h0")) @[CacheModule.scala 373:97]
    node _T_43 = and(_T_41, _T_42) @[CacheModule.scala 373:77]
    when _T_43 : @[CacheModule.scala 373:107]
      fenceInititatedReg <= UInt<1>("h1") @[CacheModule.scala 374:24]
    when fenceInititatedReg : @[CacheModule.scala 376:27]
      fenceInstructions.ready <= UInt<1>("h1") @[CacheModule.scala 377:29]
      canAllocate <= UInt<1>("h0") @[CacheModule.scala 378:17]
      node _fenceInititatedReg_T = mux(fenceInstructions.fired, UInt<1>("h0"), UInt<1>("h1")) @[CacheModule.scala 379:30]
      fenceInititatedReg <= _fenceInititatedReg_T @[CacheModule.scala 379:24]
      memoryAXIUnit.setFence <= fenceInstructions.fired @[CacheModule.scala 380:28]
    decrCounter <= UInt<1>("h0") @[core.scala 70:17]
    reg writeToMemoryPending : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[core.scala 72:39]
    writeToMemoryPending <= UInt<1>("h0") @[core.scala 73:26]
    writeToMemoryPendingOut <= UInt<1>("h0") @[core.scala 75:29]

  module ReadWriteSmem_12 :
    input clock : Clock
    input reset : Reset
    output io : { flip wenable : UInt<1>, flip renable : UInt<1>, flip raddr : UInt<6>, flip waddr : UInt<6>, flip dataIn : UInt<64>, dataOut : UInt<64>}

    smem mem : UInt<64> [64] @[SRAM_block.scala 15:24]
    when io.wenable : @[SRAM_block.scala 17:19]
      write mport MPORT = mem[io.waddr], clock
      MPORT <= io.dataIn
    wire _io_dataOut_WIRE : UInt @[SRAM_block.scala 21:25]
    _io_dataOut_WIRE is invalid @[SRAM_block.scala 21:25]
    when io.renable : @[SRAM_block.scala 21:25]
      _io_dataOut_WIRE <= io.raddr @[SRAM_block.scala 21:25]
      node _io_dataOut_T = or(_io_dataOut_WIRE, UInt<6>("h0")) @[SRAM_block.scala 21:25]
      node _io_dataOut_T_1 = bits(_io_dataOut_T, 5, 0) @[SRAM_block.scala 21:25]
      read mport io_dataOut_MPORT = mem[_io_dataOut_T_1], clock @[SRAM_block.scala 21:25]
    io.dataOut <= io_dataOut_MPORT @[SRAM_block.scala 21:14]

  module ReadWriteSmem_13 :
    input clock : Clock
    input reset : Reset
    output io : { flip wenable : UInt<1>, flip renable : UInt<1>, flip raddr : UInt<6>, flip waddr : UInt<6>, flip dataIn : UInt<64>, dataOut : UInt<64>}

    smem mem : UInt<64> [64] @[SRAM_block.scala 15:24]
    when io.wenable : @[SRAM_block.scala 17:19]
      write mport MPORT = mem[io.waddr], clock
      MPORT <= io.dataIn
    wire _io_dataOut_WIRE : UInt @[SRAM_block.scala 21:25]
    _io_dataOut_WIRE is invalid @[SRAM_block.scala 21:25]
    when io.renable : @[SRAM_block.scala 21:25]
      _io_dataOut_WIRE <= io.raddr @[SRAM_block.scala 21:25]
      node _io_dataOut_T = or(_io_dataOut_WIRE, UInt<6>("h0")) @[SRAM_block.scala 21:25]
      node _io_dataOut_T_1 = bits(_io_dataOut_T, 5, 0) @[SRAM_block.scala 21:25]
      read mport io_dataOut_MPORT = mem[_io_dataOut_T_1], clock @[SRAM_block.scala 21:25]
    io.dataOut <= io_dataOut_MPORT @[SRAM_block.scala 21:14]

  module ReadWriteSmem_14 :
    input clock : Clock
    input reset : Reset
    output io : { flip wenable : UInt<1>, flip renable : UInt<1>, flip raddr : UInt<6>, flip waddr : UInt<6>, flip dataIn : UInt<64>, dataOut : UInt<64>}

    smem mem : UInt<64> [64] @[SRAM_block.scala 15:24]
    when io.wenable : @[SRAM_block.scala 17:19]
      write mport MPORT = mem[io.waddr], clock
      MPORT <= io.dataIn
    wire _io_dataOut_WIRE : UInt @[SRAM_block.scala 21:25]
    _io_dataOut_WIRE is invalid @[SRAM_block.scala 21:25]
    when io.renable : @[SRAM_block.scala 21:25]
      _io_dataOut_WIRE <= io.raddr @[SRAM_block.scala 21:25]
      node _io_dataOut_T = or(_io_dataOut_WIRE, UInt<6>("h0")) @[SRAM_block.scala 21:25]
      node _io_dataOut_T_1 = bits(_io_dataOut_T, 5, 0) @[SRAM_block.scala 21:25]
      read mport io_dataOut_MPORT = mem[_io_dataOut_T_1], clock @[SRAM_block.scala 21:25]
    io.dataOut <= io_dataOut_MPORT @[SRAM_block.scala 21:14]

  module LVT_set_4 :
    input clock : Clock
    input reset : Reset
    output io : { flip wenable : UInt<1>, flip r1enable : UInt<1>, flip r2enable : UInt<1>, flip r3enable : UInt<1>, flip r1addr : UInt<6>, flip r2addr : UInt<6>, flip r3addr : UInt<6>, flip waddr : UInt<6>, flip wdata : UInt<64>, r1data : UInt<64>, r2data : UInt<64>, r3data : UInt<64>}

    inst b1 of ReadWriteSmem_12 @[LVT_set.scala 20:18]
    b1.clock <= clock
    b1.reset <= reset
    inst b2 of ReadWriteSmem_13 @[LVT_set.scala 21:18]
    b2.clock <= clock
    b2.reset <= reset
    inst b3 of ReadWriteSmem_14 @[LVT_set.scala 22:18]
    b3.clock <= clock
    b3.reset <= reset
    b1.io.wenable <= io.wenable @[LVT_set.scala 24:17]
    b2.io.wenable <= io.wenable @[LVT_set.scala 25:17]
    b3.io.wenable <= io.wenable @[LVT_set.scala 26:17]
    b1.io.dataIn <= io.wdata @[LVT_set.scala 27:16]
    b2.io.dataIn <= io.wdata @[LVT_set.scala 28:16]
    b3.io.dataIn <= io.wdata @[LVT_set.scala 29:16]
    b1.io.renable <= io.r1enable @[LVT_set.scala 31:17]
    b2.io.renable <= io.r2enable @[LVT_set.scala 32:17]
    b3.io.renable <= io.r3enable @[LVT_set.scala 33:17]
    io.r1data <= b1.io.dataOut @[LVT_set.scala 35:13]
    io.r2data <= b2.io.dataOut @[LVT_set.scala 36:13]
    io.r3data <= b3.io.dataOut @[LVT_set.scala 37:13]
    b1.io.raddr <= io.r1addr @[LVT_set.scala 39:15]
    b2.io.raddr <= io.r2addr @[LVT_set.scala 40:15]
    b3.io.raddr <= io.r3addr @[LVT_set.scala 41:15]
    b1.io.waddr <= io.waddr @[LVT_set.scala 43:15]
    b2.io.waddr <= io.waddr @[LVT_set.scala 44:15]
    b3.io.waddr <= io.waddr @[LVT_set.scala 45:15]

  module ReadWriteSmem_15 :
    input clock : Clock
    input reset : Reset
    output io : { flip wenable : UInt<1>, flip renable : UInt<1>, flip raddr : UInt<6>, flip waddr : UInt<6>, flip dataIn : UInt<64>, dataOut : UInt<64>}

    smem mem : UInt<64> [64] @[SRAM_block.scala 15:24]
    when io.wenable : @[SRAM_block.scala 17:19]
      write mport MPORT = mem[io.waddr], clock
      MPORT <= io.dataIn
    wire _io_dataOut_WIRE : UInt @[SRAM_block.scala 21:25]
    _io_dataOut_WIRE is invalid @[SRAM_block.scala 21:25]
    when io.renable : @[SRAM_block.scala 21:25]
      _io_dataOut_WIRE <= io.raddr @[SRAM_block.scala 21:25]
      node _io_dataOut_T = or(_io_dataOut_WIRE, UInt<6>("h0")) @[SRAM_block.scala 21:25]
      node _io_dataOut_T_1 = bits(_io_dataOut_T, 5, 0) @[SRAM_block.scala 21:25]
      read mport io_dataOut_MPORT = mem[_io_dataOut_T_1], clock @[SRAM_block.scala 21:25]
    io.dataOut <= io_dataOut_MPORT @[SRAM_block.scala 21:14]

  module ReadWriteSmem_16 :
    input clock : Clock
    input reset : Reset
    output io : { flip wenable : UInt<1>, flip renable : UInt<1>, flip raddr : UInt<6>, flip waddr : UInt<6>, flip dataIn : UInt<64>, dataOut : UInt<64>}

    smem mem : UInt<64> [64] @[SRAM_block.scala 15:24]
    when io.wenable : @[SRAM_block.scala 17:19]
      write mport MPORT = mem[io.waddr], clock
      MPORT <= io.dataIn
    wire _io_dataOut_WIRE : UInt @[SRAM_block.scala 21:25]
    _io_dataOut_WIRE is invalid @[SRAM_block.scala 21:25]
    when io.renable : @[SRAM_block.scala 21:25]
      _io_dataOut_WIRE <= io.raddr @[SRAM_block.scala 21:25]
      node _io_dataOut_T = or(_io_dataOut_WIRE, UInt<6>("h0")) @[SRAM_block.scala 21:25]
      node _io_dataOut_T_1 = bits(_io_dataOut_T, 5, 0) @[SRAM_block.scala 21:25]
      read mport io_dataOut_MPORT = mem[_io_dataOut_T_1], clock @[SRAM_block.scala 21:25]
    io.dataOut <= io_dataOut_MPORT @[SRAM_block.scala 21:14]

  module ReadWriteSmem_17 :
    input clock : Clock
    input reset : Reset
    output io : { flip wenable : UInt<1>, flip renable : UInt<1>, flip raddr : UInt<6>, flip waddr : UInt<6>, flip dataIn : UInt<64>, dataOut : UInt<64>}

    smem mem : UInt<64> [64] @[SRAM_block.scala 15:24]
    when io.wenable : @[SRAM_block.scala 17:19]
      write mport MPORT = mem[io.waddr], clock
      MPORT <= io.dataIn
    wire _io_dataOut_WIRE : UInt @[SRAM_block.scala 21:25]
    _io_dataOut_WIRE is invalid @[SRAM_block.scala 21:25]
    when io.renable : @[SRAM_block.scala 21:25]
      _io_dataOut_WIRE <= io.raddr @[SRAM_block.scala 21:25]
      node _io_dataOut_T = or(_io_dataOut_WIRE, UInt<6>("h0")) @[SRAM_block.scala 21:25]
      node _io_dataOut_T_1 = bits(_io_dataOut_T, 5, 0) @[SRAM_block.scala 21:25]
      read mport io_dataOut_MPORT = mem[_io_dataOut_T_1], clock @[SRAM_block.scala 21:25]
    io.dataOut <= io_dataOut_MPORT @[SRAM_block.scala 21:14]

  module LVT_set_5 :
    input clock : Clock
    input reset : Reset
    output io : { flip wenable : UInt<1>, flip r1enable : UInt<1>, flip r2enable : UInt<1>, flip r3enable : UInt<1>, flip r1addr : UInt<6>, flip r2addr : UInt<6>, flip r3addr : UInt<6>, flip waddr : UInt<6>, flip wdata : UInt<64>, r1data : UInt<64>, r2data : UInt<64>, r3data : UInt<64>}

    inst b1 of ReadWriteSmem_15 @[LVT_set.scala 20:18]
    b1.clock <= clock
    b1.reset <= reset
    inst b2 of ReadWriteSmem_16 @[LVT_set.scala 21:18]
    b2.clock <= clock
    b2.reset <= reset
    inst b3 of ReadWriteSmem_17 @[LVT_set.scala 22:18]
    b3.clock <= clock
    b3.reset <= reset
    b1.io.wenable <= io.wenable @[LVT_set.scala 24:17]
    b2.io.wenable <= io.wenable @[LVT_set.scala 25:17]
    b3.io.wenable <= io.wenable @[LVT_set.scala 26:17]
    b1.io.dataIn <= io.wdata @[LVT_set.scala 27:16]
    b2.io.dataIn <= io.wdata @[LVT_set.scala 28:16]
    b3.io.dataIn <= io.wdata @[LVT_set.scala 29:16]
    b1.io.renable <= io.r1enable @[LVT_set.scala 31:17]
    b2.io.renable <= io.r2enable @[LVT_set.scala 32:17]
    b3.io.renable <= io.r3enable @[LVT_set.scala 33:17]
    io.r1data <= b1.io.dataOut @[LVT_set.scala 35:13]
    io.r2data <= b2.io.dataOut @[LVT_set.scala 36:13]
    io.r3data <= b3.io.dataOut @[LVT_set.scala 37:13]
    b1.io.raddr <= io.r1addr @[LVT_set.scala 39:15]
    b2.io.raddr <= io.r2addr @[LVT_set.scala 40:15]
    b3.io.raddr <= io.r3addr @[LVT_set.scala 41:15]
    b1.io.waddr <= io.waddr @[LVT_set.scala 43:15]
    b2.io.waddr <= io.waddr @[LVT_set.scala 44:15]
    b3.io.waddr <= io.waddr @[LVT_set.scala 45:15]

  module ReadWriteSmem_18 :
    input clock : Clock
    input reset : Reset
    output io : { flip wenable : UInt<1>, flip renable : UInt<1>, flip raddr : UInt<6>, flip waddr : UInt<6>, flip dataIn : UInt<64>, dataOut : UInt<64>}

    smem mem : UInt<64> [64] @[SRAM_block.scala 15:24]
    when io.wenable : @[SRAM_block.scala 17:19]
      write mport MPORT = mem[io.waddr], clock
      MPORT <= io.dataIn
    wire _io_dataOut_WIRE : UInt @[SRAM_block.scala 21:25]
    _io_dataOut_WIRE is invalid @[SRAM_block.scala 21:25]
    when io.renable : @[SRAM_block.scala 21:25]
      _io_dataOut_WIRE <= io.raddr @[SRAM_block.scala 21:25]
      node _io_dataOut_T = or(_io_dataOut_WIRE, UInt<6>("h0")) @[SRAM_block.scala 21:25]
      node _io_dataOut_T_1 = bits(_io_dataOut_T, 5, 0) @[SRAM_block.scala 21:25]
      read mport io_dataOut_MPORT = mem[_io_dataOut_T_1], clock @[SRAM_block.scala 21:25]
    io.dataOut <= io_dataOut_MPORT @[SRAM_block.scala 21:14]

  module ReadWriteSmem_19 :
    input clock : Clock
    input reset : Reset
    output io : { flip wenable : UInt<1>, flip renable : UInt<1>, flip raddr : UInt<6>, flip waddr : UInt<6>, flip dataIn : UInt<64>, dataOut : UInt<64>}

    smem mem : UInt<64> [64] @[SRAM_block.scala 15:24]
    when io.wenable : @[SRAM_block.scala 17:19]
      write mport MPORT = mem[io.waddr], clock
      MPORT <= io.dataIn
    wire _io_dataOut_WIRE : UInt @[SRAM_block.scala 21:25]
    _io_dataOut_WIRE is invalid @[SRAM_block.scala 21:25]
    when io.renable : @[SRAM_block.scala 21:25]
      _io_dataOut_WIRE <= io.raddr @[SRAM_block.scala 21:25]
      node _io_dataOut_T = or(_io_dataOut_WIRE, UInt<6>("h0")) @[SRAM_block.scala 21:25]
      node _io_dataOut_T_1 = bits(_io_dataOut_T, 5, 0) @[SRAM_block.scala 21:25]
      read mport io_dataOut_MPORT = mem[_io_dataOut_T_1], clock @[SRAM_block.scala 21:25]
    io.dataOut <= io_dataOut_MPORT @[SRAM_block.scala 21:14]

  module ReadWriteSmem_20 :
    input clock : Clock
    input reset : Reset
    output io : { flip wenable : UInt<1>, flip renable : UInt<1>, flip raddr : UInt<6>, flip waddr : UInt<6>, flip dataIn : UInt<64>, dataOut : UInt<64>}

    smem mem : UInt<64> [64] @[SRAM_block.scala 15:24]
    when io.wenable : @[SRAM_block.scala 17:19]
      write mport MPORT = mem[io.waddr], clock
      MPORT <= io.dataIn
    wire _io_dataOut_WIRE : UInt @[SRAM_block.scala 21:25]
    _io_dataOut_WIRE is invalid @[SRAM_block.scala 21:25]
    when io.renable : @[SRAM_block.scala 21:25]
      _io_dataOut_WIRE <= io.raddr @[SRAM_block.scala 21:25]
      node _io_dataOut_T = or(_io_dataOut_WIRE, UInt<6>("h0")) @[SRAM_block.scala 21:25]
      node _io_dataOut_T_1 = bits(_io_dataOut_T, 5, 0) @[SRAM_block.scala 21:25]
      read mport io_dataOut_MPORT = mem[_io_dataOut_T_1], clock @[SRAM_block.scala 21:25]
    io.dataOut <= io_dataOut_MPORT @[SRAM_block.scala 21:14]

  module LVT_set_6 :
    input clock : Clock
    input reset : Reset
    output io : { flip wenable : UInt<1>, flip r1enable : UInt<1>, flip r2enable : UInt<1>, flip r3enable : UInt<1>, flip r1addr : UInt<6>, flip r2addr : UInt<6>, flip r3addr : UInt<6>, flip waddr : UInt<6>, flip wdata : UInt<64>, r1data : UInt<64>, r2data : UInt<64>, r3data : UInt<64>}

    inst b1 of ReadWriteSmem_18 @[LVT_set.scala 20:18]
    b1.clock <= clock
    b1.reset <= reset
    inst b2 of ReadWriteSmem_19 @[LVT_set.scala 21:18]
    b2.clock <= clock
    b2.reset <= reset
    inst b3 of ReadWriteSmem_20 @[LVT_set.scala 22:18]
    b3.clock <= clock
    b3.reset <= reset
    b1.io.wenable <= io.wenable @[LVT_set.scala 24:17]
    b2.io.wenable <= io.wenable @[LVT_set.scala 25:17]
    b3.io.wenable <= io.wenable @[LVT_set.scala 26:17]
    b1.io.dataIn <= io.wdata @[LVT_set.scala 27:16]
    b2.io.dataIn <= io.wdata @[LVT_set.scala 28:16]
    b3.io.dataIn <= io.wdata @[LVT_set.scala 29:16]
    b1.io.renable <= io.r1enable @[LVT_set.scala 31:17]
    b2.io.renable <= io.r2enable @[LVT_set.scala 32:17]
    b3.io.renable <= io.r3enable @[LVT_set.scala 33:17]
    io.r1data <= b1.io.dataOut @[LVT_set.scala 35:13]
    io.r2data <= b2.io.dataOut @[LVT_set.scala 36:13]
    io.r3data <= b3.io.dataOut @[LVT_set.scala 37:13]
    b1.io.raddr <= io.r1addr @[LVT_set.scala 39:15]
    b2.io.raddr <= io.r2addr @[LVT_set.scala 40:15]
    b3.io.raddr <= io.r3addr @[LVT_set.scala 41:15]
    b1.io.waddr <= io.waddr @[LVT_set.scala 43:15]
    b2.io.waddr <= io.waddr @[LVT_set.scala 44:15]
    b3.io.waddr <= io.waddr @[LVT_set.scala 45:15]

  module ReadWriteSmem_21 :
    input clock : Clock
    input reset : Reset
    output io : { flip wenable : UInt<1>, flip renable : UInt<1>, flip raddr : UInt<6>, flip waddr : UInt<6>, flip dataIn : UInt<64>, dataOut : UInt<64>}

    smem mem : UInt<64> [64] @[SRAM_block.scala 15:24]
    when io.wenable : @[SRAM_block.scala 17:19]
      write mport MPORT = mem[io.waddr], clock
      MPORT <= io.dataIn
    wire _io_dataOut_WIRE : UInt @[SRAM_block.scala 21:25]
    _io_dataOut_WIRE is invalid @[SRAM_block.scala 21:25]
    when io.renable : @[SRAM_block.scala 21:25]
      _io_dataOut_WIRE <= io.raddr @[SRAM_block.scala 21:25]
      node _io_dataOut_T = or(_io_dataOut_WIRE, UInt<6>("h0")) @[SRAM_block.scala 21:25]
      node _io_dataOut_T_1 = bits(_io_dataOut_T, 5, 0) @[SRAM_block.scala 21:25]
      read mport io_dataOut_MPORT = mem[_io_dataOut_T_1], clock @[SRAM_block.scala 21:25]
    io.dataOut <= io_dataOut_MPORT @[SRAM_block.scala 21:14]

  module ReadWriteSmem_22 :
    input clock : Clock
    input reset : Reset
    output io : { flip wenable : UInt<1>, flip renable : UInt<1>, flip raddr : UInt<6>, flip waddr : UInt<6>, flip dataIn : UInt<64>, dataOut : UInt<64>}

    smem mem : UInt<64> [64] @[SRAM_block.scala 15:24]
    when io.wenable : @[SRAM_block.scala 17:19]
      write mport MPORT = mem[io.waddr], clock
      MPORT <= io.dataIn
    wire _io_dataOut_WIRE : UInt @[SRAM_block.scala 21:25]
    _io_dataOut_WIRE is invalid @[SRAM_block.scala 21:25]
    when io.renable : @[SRAM_block.scala 21:25]
      _io_dataOut_WIRE <= io.raddr @[SRAM_block.scala 21:25]
      node _io_dataOut_T = or(_io_dataOut_WIRE, UInt<6>("h0")) @[SRAM_block.scala 21:25]
      node _io_dataOut_T_1 = bits(_io_dataOut_T, 5, 0) @[SRAM_block.scala 21:25]
      read mport io_dataOut_MPORT = mem[_io_dataOut_T_1], clock @[SRAM_block.scala 21:25]
    io.dataOut <= io_dataOut_MPORT @[SRAM_block.scala 21:14]

  module ReadWriteSmem_23 :
    input clock : Clock
    input reset : Reset
    output io : { flip wenable : UInt<1>, flip renable : UInt<1>, flip raddr : UInt<6>, flip waddr : UInt<6>, flip dataIn : UInt<64>, dataOut : UInt<64>}

    smem mem : UInt<64> [64] @[SRAM_block.scala 15:24]
    when io.wenable : @[SRAM_block.scala 17:19]
      write mport MPORT = mem[io.waddr], clock
      MPORT <= io.dataIn
    wire _io_dataOut_WIRE : UInt @[SRAM_block.scala 21:25]
    _io_dataOut_WIRE is invalid @[SRAM_block.scala 21:25]
    when io.renable : @[SRAM_block.scala 21:25]
      _io_dataOut_WIRE <= io.raddr @[SRAM_block.scala 21:25]
      node _io_dataOut_T = or(_io_dataOut_WIRE, UInt<6>("h0")) @[SRAM_block.scala 21:25]
      node _io_dataOut_T_1 = bits(_io_dataOut_T, 5, 0) @[SRAM_block.scala 21:25]
      read mport io_dataOut_MPORT = mem[_io_dataOut_T_1], clock @[SRAM_block.scala 21:25]
    io.dataOut <= io_dataOut_MPORT @[SRAM_block.scala 21:14]

  module LVT_set_7 :
    input clock : Clock
    input reset : Reset
    output io : { flip wenable : UInt<1>, flip r1enable : UInt<1>, flip r2enable : UInt<1>, flip r3enable : UInt<1>, flip r1addr : UInt<6>, flip r2addr : UInt<6>, flip r3addr : UInt<6>, flip waddr : UInt<6>, flip wdata : UInt<64>, r1data : UInt<64>, r2data : UInt<64>, r3data : UInt<64>}

    inst b1 of ReadWriteSmem_21 @[LVT_set.scala 20:18]
    b1.clock <= clock
    b1.reset <= reset
    inst b2 of ReadWriteSmem_22 @[LVT_set.scala 21:18]
    b2.clock <= clock
    b2.reset <= reset
    inst b3 of ReadWriteSmem_23 @[LVT_set.scala 22:18]
    b3.clock <= clock
    b3.reset <= reset
    b1.io.wenable <= io.wenable @[LVT_set.scala 24:17]
    b2.io.wenable <= io.wenable @[LVT_set.scala 25:17]
    b3.io.wenable <= io.wenable @[LVT_set.scala 26:17]
    b1.io.dataIn <= io.wdata @[LVT_set.scala 27:16]
    b2.io.dataIn <= io.wdata @[LVT_set.scala 28:16]
    b3.io.dataIn <= io.wdata @[LVT_set.scala 29:16]
    b1.io.renable <= io.r1enable @[LVT_set.scala 31:17]
    b2.io.renable <= io.r2enable @[LVT_set.scala 32:17]
    b3.io.renable <= io.r3enable @[LVT_set.scala 33:17]
    io.r1data <= b1.io.dataOut @[LVT_set.scala 35:13]
    io.r2data <= b2.io.dataOut @[LVT_set.scala 36:13]
    io.r3data <= b3.io.dataOut @[LVT_set.scala 37:13]
    b1.io.raddr <= io.r1addr @[LVT_set.scala 39:15]
    b2.io.raddr <= io.r2addr @[LVT_set.scala 40:15]
    b3.io.raddr <= io.r3addr @[LVT_set.scala 41:15]
    b1.io.waddr <= io.waddr @[LVT_set.scala 43:15]
    b2.io.waddr <= io.waddr @[LVT_set.scala 44:15]
    b3.io.waddr <= io.waddr @[LVT_set.scala 45:15]

  module LVT_Mem_1 :
    input clock : Clock
    input reset : Reset
    output io : { R1 : { flip addr : UInt<6>, data : UInt<64>, flip en : UInt<1>}, R2 : { flip addr : UInt<6>, data : UInt<64>, flip en : UInt<1>}, R3 : { flip addr : UInt<6>, data : UInt<64>, flip en : UInt<1>}, W1 : { flip addr : UInt<6>, flip data : UInt<64>, flip en : UInt<1>}, W2 : { flip addr : UInt<6>, flip data : UInt<64>, flip en : UInt<1>}, W3 : { flip addr : UInt<6>, flip data : UInt<64>, flip en : UInt<1>}, W4 : { flip addr : UInt<6>, flip data : UInt<64>, flip en : UInt<1>}}

    cmem LVT : UInt<2> [64] @[LVT_Mem.scala 32:16]
    inst s1 of LVT_set_4 @[LVT_Mem.scala 35:18]
    s1.clock <= clock
    s1.reset <= reset
    inst s2 of LVT_set_5 @[LVT_Mem.scala 36:18]
    s2.clock <= clock
    s2.reset <= reset
    inst s3 of LVT_set_6 @[LVT_Mem.scala 37:18]
    s3.clock <= clock
    s3.reset <= reset
    inst s4 of LVT_set_7 @[LVT_Mem.scala 38:18]
    s4.clock <= clock
    s4.reset <= reset
    when io.W1.en : @[LVT_Mem.scala 41:17]
      infer mport MPORT = LVT[io.W1.addr], clock @[LVT_Mem.scala 42:8]
      MPORT <= UInt<1>("h0") @[LVT_Mem.scala 42:21]
    when io.W2.en : @[LVT_Mem.scala 44:18]
      infer mport MPORT_1 = LVT[io.W2.addr], clock @[LVT_Mem.scala 45:8]
      MPORT_1 <= UInt<1>("h1") @[LVT_Mem.scala 45:21]
    when io.W3.en : @[LVT_Mem.scala 47:18]
      infer mport MPORT_2 = LVT[io.W3.addr], clock @[LVT_Mem.scala 48:8]
      MPORT_2 <= UInt<2>("h2") @[LVT_Mem.scala 48:21]
    when io.W4.en : @[LVT_Mem.scala 50:18]
      infer mport MPORT_3 = LVT[io.W4.addr], clock @[LVT_Mem.scala 51:8]
      MPORT_3 <= UInt<2>("h3") @[LVT_Mem.scala 51:21]
    s1.io.wenable <= io.W1.en @[LVT_Mem.scala 55:17]
    s2.io.wenable <= io.W2.en @[LVT_Mem.scala 56:17]
    s3.io.wenable <= io.W3.en @[LVT_Mem.scala 57:17]
    s4.io.wenable <= io.W4.en @[LVT_Mem.scala 58:17]
    s1.io.wdata <= io.W1.data @[LVT_Mem.scala 59:15]
    s2.io.wdata <= io.W2.data @[LVT_Mem.scala 60:15]
    s3.io.wdata <= io.W3.data @[LVT_Mem.scala 61:15]
    s4.io.wdata <= io.W4.data @[LVT_Mem.scala 62:15]
    s1.io.waddr <= io.W1.addr @[LVT_Mem.scala 63:15]
    s2.io.waddr <= io.W2.addr @[LVT_Mem.scala 64:15]
    s3.io.waddr <= io.W3.addr @[LVT_Mem.scala 65:15]
    s4.io.waddr <= io.W4.addr @[LVT_Mem.scala 66:15]
    reg r1_sel_reg : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[LVT_Mem.scala 69:27]
    reg r2_sel_reg : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[LVT_Mem.scala 70:27]
    reg r3_sel_reg : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[LVT_Mem.scala 71:27]
    infer mport r1_sel_reg_MPORT = LVT[io.R1.addr], clock @[LVT_Mem.scala 73:20]
    r1_sel_reg <= r1_sel_reg_MPORT @[LVT_Mem.scala 73:14]
    infer mport r2_sel_reg_MPORT = LVT[io.R2.addr], clock @[LVT_Mem.scala 74:20]
    r2_sel_reg <= r2_sel_reg_MPORT @[LVT_Mem.scala 74:14]
    infer mport r3_sel_reg_MPORT = LVT[io.R3.addr], clock @[LVT_Mem.scala 75:20]
    r3_sel_reg <= r3_sel_reg_MPORT @[LVT_Mem.scala 75:14]
    s1.io.r1addr <= io.R1.addr @[LVT_Mem.scala 78:16]
    s2.io.r1addr <= io.R1.addr @[LVT_Mem.scala 79:16]
    s3.io.r1addr <= io.R1.addr @[LVT_Mem.scala 80:16]
    s4.io.r1addr <= io.R1.addr @[LVT_Mem.scala 81:16]
    s1.io.r2addr <= io.R2.addr @[LVT_Mem.scala 83:16]
    s2.io.r2addr <= io.R2.addr @[LVT_Mem.scala 84:16]
    s3.io.r2addr <= io.R2.addr @[LVT_Mem.scala 85:16]
    s4.io.r2addr <= io.R2.addr @[LVT_Mem.scala 86:16]
    s1.io.r3addr <= io.R3.addr @[LVT_Mem.scala 88:16]
    s2.io.r3addr <= io.R3.addr @[LVT_Mem.scala 89:16]
    s3.io.r3addr <= io.R3.addr @[LVT_Mem.scala 90:16]
    s4.io.r3addr <= io.R3.addr @[LVT_Mem.scala 91:16]
    s1.io.r1enable <= io.R1.en @[LVT_Mem.scala 93:18]
    s2.io.r1enable <= io.R1.en @[LVT_Mem.scala 94:18]
    s3.io.r1enable <= io.R1.en @[LVT_Mem.scala 95:18]
    s4.io.r1enable <= io.R1.en @[LVT_Mem.scala 96:18]
    s1.io.r2enable <= io.R2.en @[LVT_Mem.scala 98:18]
    s2.io.r2enable <= io.R2.en @[LVT_Mem.scala 99:18]
    s3.io.r2enable <= io.R2.en @[LVT_Mem.scala 100:18]
    s4.io.r2enable <= io.R2.en @[LVT_Mem.scala 101:18]
    s1.io.r3enable <= io.R3.en @[LVT_Mem.scala 103:18]
    s2.io.r3enable <= io.R3.en @[LVT_Mem.scala 104:18]
    s3.io.r3enable <= io.R3.en @[LVT_Mem.scala 105:18]
    s4.io.r3enable <= io.R3.en @[LVT_Mem.scala 106:18]
    node _io_R1_data_T = eq(r1_sel_reg, UInt<1>("h0")) @[LVT_Mem.scala 110:45]
    node _io_R1_data_T_1 = eq(r1_sel_reg, UInt<1>("h1")) @[LVT_Mem.scala 110:79]
    node _io_R1_data_T_2 = eq(r1_sel_reg, UInt<2>("h2")) @[LVT_Mem.scala 110:113]
    node _io_R1_data_T_3 = eq(r1_sel_reg, UInt<2>("h3")) @[LVT_Mem.scala 110:147]
    node _io_R1_data_T_4 = mux(_io_R1_data_T_3, s4.io.r1data, UInt<1>("h0")) @[Mux.scala 101:16]
    node _io_R1_data_T_5 = mux(_io_R1_data_T_2, s3.io.r1data, _io_R1_data_T_4) @[Mux.scala 101:16]
    node _io_R1_data_T_6 = mux(_io_R1_data_T_1, s2.io.r1data, _io_R1_data_T_5) @[Mux.scala 101:16]
    node _io_R1_data_T_7 = mux(_io_R1_data_T, s1.io.r1data, _io_R1_data_T_6) @[Mux.scala 101:16]
    io.R1.data <= _io_R1_data_T_7 @[LVT_Mem.scala 110:14]
    node _io_R2_data_T = eq(r2_sel_reg, UInt<1>("h0")) @[LVT_Mem.scala 111:45]
    node _io_R2_data_T_1 = eq(r2_sel_reg, UInt<1>("h1")) @[LVT_Mem.scala 111:79]
    node _io_R2_data_T_2 = eq(r2_sel_reg, UInt<2>("h2")) @[LVT_Mem.scala 111:113]
    node _io_R2_data_T_3 = eq(r2_sel_reg, UInt<2>("h3")) @[LVT_Mem.scala 111:147]
    node _io_R2_data_T_4 = mux(_io_R2_data_T_3, s4.io.r2data, UInt<1>("h0")) @[Mux.scala 101:16]
    node _io_R2_data_T_5 = mux(_io_R2_data_T_2, s3.io.r2data, _io_R2_data_T_4) @[Mux.scala 101:16]
    node _io_R2_data_T_6 = mux(_io_R2_data_T_1, s2.io.r2data, _io_R2_data_T_5) @[Mux.scala 101:16]
    node _io_R2_data_T_7 = mux(_io_R2_data_T, s1.io.r2data, _io_R2_data_T_6) @[Mux.scala 101:16]
    io.R2.data <= _io_R2_data_T_7 @[LVT_Mem.scala 111:14]
    node _io_R3_data_T = eq(r3_sel_reg, UInt<1>("h0")) @[LVT_Mem.scala 112:45]
    node _io_R3_data_T_1 = eq(r3_sel_reg, UInt<1>("h1")) @[LVT_Mem.scala 112:79]
    node _io_R3_data_T_2 = eq(r3_sel_reg, UInt<2>("h2")) @[LVT_Mem.scala 112:113]
    node _io_R3_data_T_3 = eq(r3_sel_reg, UInt<2>("h3")) @[LVT_Mem.scala 112:147]
    node _io_R3_data_T_4 = mux(_io_R3_data_T_3, s4.io.r3data, UInt<1>("h0")) @[Mux.scala 101:16]
    node _io_R3_data_T_5 = mux(_io_R3_data_T_2, s3.io.r3data, _io_R3_data_T_4) @[Mux.scala 101:16]
    node _io_R3_data_T_6 = mux(_io_R3_data_T_1, s2.io.r3data, _io_R3_data_T_5) @[Mux.scala 101:16]
    node _io_R3_data_T_7 = mux(_io_R3_data_T, s1.io.r3data, _io_R3_data_T_6) @[Mux.scala 101:16]
    io.R3.data <= _io_R3_data_T_7 @[LVT_Mem.scala 112:14]

  module PRF_1 :
    input clock : Clock
    input reset : Reset
    output w1 : { flip addr : UInt<6>, flip data : UInt<64>, flip en : UInt<1>}
    output w2 : { flip addr : UInt<6>, flip data : UInt<64>, flip en : UInt<1>}
    output w3 : { flip addr : UInt<6>, flip data : UInt<64>, flip en : UInt<1>}
    output w4 : { flip addr : UInt<6>, flip data : UInt<64>, flip en : UInt<1>}
    output execRead : { flip valid : UInt<1>, flip instruction : UInt<32>, flip branchmask : UInt<5>, flip rs1Addr : UInt<6>, flip rs2Addr : UInt<6>, flip robAddr : UInt<6>, flip prfDest : UInt<6>}
    output toExec : { valid : UInt<1>, instruction : UInt<32>, branchmask : UInt<5>, rs1Addr : UInt<6>, rs1Data : UInt<64>, rs2Addr : UInt<6>, rs2Data : UInt<64>, robAddr : UInt<6>, prfDest : UInt<6>}
    output fromStore : { flip valid : UInt<1>, flip instruction : UInt<32>, flip branchmask : UInt<5>, flip rs2Addr : UInt<6>, flip prfDest : UInt<6>}
    output toStore : { valid : UInt<1>, instruction : UInt<32>, branchmask : UInt<5>, rs2Data : UInt<64>, prfDest : UInt<6>}
    output branchCheck : { flip pass : UInt<1>, flip branchmask : UInt<5>, flip valid : UInt<1>}
    output registerFileOutput : UInt<64>[64]

    inst prf of LVT_Mem_1 @[PRF.scala 73:19]
    prf.clock <= clock
    prf.reset <= reset
    prf.io.W1.en <= w1.en @[PRF.scala 76:13]
    prf.io.W1.data <= w1.data @[PRF.scala 76:13]
    prf.io.W1.addr <= w1.addr @[PRF.scala 76:13]
    prf.io.W2.en <= w2.en @[PRF.scala 77:13]
    prf.io.W2.data <= w2.data @[PRF.scala 77:13]
    prf.io.W2.addr <= w2.addr @[PRF.scala 77:13]
    prf.io.W3.en <= w3.en @[PRF.scala 78:13]
    prf.io.W3.data <= w3.data @[PRF.scala 78:13]
    prf.io.W3.addr <= w3.addr @[PRF.scala 78:13]
    prf.io.W4.en <= w4.en @[PRF.scala 79:13]
    prf.io.W4.data <= w4.data @[PRF.scala 79:13]
    prf.io.W4.addr <= w4.addr @[PRF.scala 79:13]
    reg toExec_robAddr_REG : UInt, clock with :
      reset => (UInt<1>("h0"), toExec_robAddr_REG) @[PRF.scala 82:28]
    toExec_robAddr_REG <= execRead.robAddr @[PRF.scala 82:28]
    toExec.robAddr <= toExec_robAddr_REG @[PRF.scala 82:18]
    reg toExec_rs1Addr_REG : UInt, clock with :
      reset => (UInt<1>("h0"), toExec_rs1Addr_REG) @[PRF.scala 83:28]
    toExec_rs1Addr_REG <= execRead.rs1Addr @[PRF.scala 83:28]
    toExec.rs1Addr <= toExec_rs1Addr_REG @[PRF.scala 83:18]
    reg toExec_rs2Addr_REG : UInt, clock with :
      reset => (UInt<1>("h0"), toExec_rs2Addr_REG) @[PRF.scala 84:28]
    toExec_rs2Addr_REG <= execRead.rs2Addr @[PRF.scala 84:28]
    toExec.rs2Addr <= toExec_rs2Addr_REG @[PRF.scala 84:18]
    reg toExec_instruction_REG : UInt, clock with :
      reset => (UInt<1>("h0"), toExec_instruction_REG) @[PRF.scala 85:32]
    toExec_instruction_REG <= execRead.instruction @[PRF.scala 85:32]
    toExec.instruction <= toExec_instruction_REG @[PRF.scala 85:22]
    reg toStore_instruction_REG : UInt, clock with :
      reset => (UInt<1>("h0"), toStore_instruction_REG) @[PRF.scala 86:33]
    toStore_instruction_REG <= fromStore.instruction @[PRF.scala 86:33]
    toStore.instruction <= toStore_instruction_REG @[PRF.scala 86:23]
    reg toExec_prfDest_REG : UInt, clock with :
      reset => (UInt<1>("h0"), toExec_prfDest_REG) @[PRF.scala 87:28]
    toExec_prfDest_REG <= execRead.prfDest @[PRF.scala 87:28]
    toExec.prfDest <= toExec_prfDest_REG @[PRF.scala 87:18]
    reg toStore_prfDest_REG : UInt, clock with :
      reset => (UInt<1>("h0"), toStore_prfDest_REG) @[PRF.scala 88:29]
    toStore_prfDest_REG <= fromStore.prfDest @[PRF.scala 88:29]
    toStore.prfDest <= toStore_prfDest_REG @[PRF.scala 88:19]
    prf.io.R1.en <= execRead.valid @[PRF.scala 91:16]
    prf.io.R1.addr <= execRead.rs1Addr @[PRF.scala 92:18]
    toExec.rs1Data <= prf.io.R1.data @[PRF.scala 93:18]
    prf.io.R2.en <= execRead.valid @[PRF.scala 95:16]
    prf.io.R2.addr <= execRead.rs2Addr @[PRF.scala 96:18]
    toExec.rs2Data <= prf.io.R2.data @[PRF.scala 97:18]
    prf.io.R3.en <= fromStore.valid @[PRF.scala 99:16]
    prf.io.R3.addr <= fromStore.rs2Addr @[PRF.scala 100:18]
    toStore.rs2Data <= prf.io.R3.data @[PRF.scala 101:19]
    reg toExec_valid : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[PRF.scala 104:29]
    reg toStore_valid : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[PRF.scala 105:30]
    reg toExec_mask : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[PRF.scala 107:28]
    reg toStore_mask : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[PRF.scala 108:29]
    when branchCheck.valid : @[PRF.scala 110:27]
      when branchCheck.pass : @[PRF.scala 112:28]
        toExec_valid <= execRead.valid @[PRF.scala 113:20]
        toExec_mask <= execRead.branchmask @[PRF.scala 114:19]
        node _T = and(branchCheck.branchmask, execRead.branchmask) @[PRF.scala 115:36]
        node _T_1 = orr(_T) @[PRF.scala 115:59]
        when _T_1 : @[PRF.scala 115:64]
          node _toExec_mask_T = xor(branchCheck.branchmask, execRead.branchmask) @[PRF.scala 116:47]
          toExec_mask <= _toExec_mask_T @[PRF.scala 116:21]
        toStore_valid <= fromStore.valid @[PRF.scala 118:21]
        node _toStore_mask_T = xor(branchCheck.branchmask, fromStore.branchmask) @[PRF.scala 119:46]
        toStore_mask <= _toStore_mask_T @[PRF.scala 119:20]
      else :
        node _toExec_valid_T = and(branchCheck.branchmask, execRead.branchmask) @[PRF.scala 122:48]
        node _toExec_valid_T_1 = eq(_toExec_valid_T, UInt<1>("h0")) @[PRF.scala 122:71]
        node _toExec_valid_T_2 = and(_toExec_valid_T_1, execRead.valid) @[PRF.scala 122:79]
        toExec_valid <= _toExec_valid_T_2 @[PRF.scala 122:20]
        toExec_mask <= execRead.branchmask @[PRF.scala 123:19]
        node _toStore_valid_T = and(branchCheck.branchmask, fromStore.branchmask) @[PRF.scala 125:48]
        node _toStore_valid_T_1 = eq(_toStore_valid_T, UInt<1>("h0")) @[PRF.scala 125:72]
        toStore_valid <= _toStore_valid_T_1 @[PRF.scala 125:21]
        toStore_mask <= fromStore.branchmask @[PRF.scala 126:20]
    else :
      toExec_valid <= execRead.valid @[PRF.scala 129:18]
      toExec_mask <= execRead.branchmask @[PRF.scala 130:17]
      reg toStore_valid_REG : UInt<1>, clock with :
        reset => (reset, UInt<1>("h0")) @[PRF.scala 132:29]
      toStore_valid_REG <= fromStore.valid @[PRF.scala 132:29]
      toStore_valid <= toStore_valid_REG @[PRF.scala 132:19]
      toStore_mask <= fromStore.branchmask @[PRF.scala 133:18]
    toExec.valid <= toExec_valid @[PRF.scala 136:16]
    toExec.branchmask <= toExec_mask @[PRF.scala 137:21]
    reg toStore_valid_REG_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[PRF.scala 140:27]
    toStore_valid_REG_1 <= fromStore.valid @[PRF.scala 140:27]
    toStore.valid <= toStore_valid_REG_1 @[PRF.scala 140:17]
    toStore.branchmask <= toStore_mask @[PRF.scala 141:22]
    reg physicalRegisterFile : UInt<64>[64], clock with :
      reset => (UInt<1>("h0"), physicalRegisterFile) @[PRF.scala 143:33]
    when w1.en : @[PRF.scala 145:54]
      physicalRegisterFile[w1.addr] <= w1.data @[PRF.scala 145:88]
    when w2.en : @[PRF.scala 145:54]
      physicalRegisterFile[w2.addr] <= w2.data @[PRF.scala 145:88]
    when w3.en : @[PRF.scala 145:54]
      physicalRegisterFile[w3.addr] <= w3.data @[PRF.scala 145:88]
    when w4.en : @[PRF.scala 145:54]
      physicalRegisterFile[w4.addr] <= w4.data @[PRF.scala 145:88]
    registerFileOutput <= physicalRegisterFile @[PRF.scala 146:22]

  module system_Anon_1 :
    input clock : Clock
    input reset : Reset
    output iPort : { AWID : UInt<2>, AWADDR : UInt<32>, AWLEN : UInt<8>, AWSIZE : UInt<3>, AWBURST : UInt<2>, AWLOCK : UInt<1>, AWCACHE : UInt<4>, AWPROT : UInt<3>, AWQOS : UInt<4>, AWVALID : UInt<1>, flip AWREADY : UInt<1>, WDATA : UInt<64>, WSTRB : UInt<8>, WLAST : UInt<1>, WVALID : UInt<1>, flip WREADY : UInt<1>, flip BID : UInt<2>, flip BRESP : UInt<2>, flip BVALID : UInt<1>, BREADY : UInt<1>, ARID : UInt<2>, ARADDR : UInt<32>, ARLEN : UInt<8>, ARSIZE : UInt<3>, ARBURST : UInt<2>, ARLOCK : UInt<1>, ARCACHE : UInt<4>, ARPROT : UInt<3>, ARQOS : UInt<4>, ARVALID : UInt<1>, flip ARREADY : UInt<1>, flip RID : UInt<2>, flip RDATA : UInt<64>, flip RLAST : UInt<1>, flip RVALID : UInt<1>, RREADY : UInt<1>, AWDOMAIN : UInt<2>, AWSNOOP : UInt<3>, AWBAR : UInt<2>, ARDOMAIN : UInt<2>, ARSNOOP : UInt<4>, ARBAR : UInt<2>, flip RRESP : UInt<4>, flip ACVALID : UInt<1>, ACREADY : UInt<1>, flip ACADDR : UInt<32>, flip ACSNOOP : UInt<4>, flip ACPROT : UInt<3>, CRVALID : UInt<1>, flip CRREADY : UInt<1>, CRRESP : UInt<5>, CDVALID : UInt<1>, flip CDREADY : UInt<1>, CDDATA : UInt<64>, CDLAST : UInt<1>}
    output dPort : { AWID : UInt<2>, AWADDR : UInt<32>, AWLEN : UInt<8>, AWSIZE : UInt<3>, AWBURST : UInt<2>, AWLOCK : UInt<1>, AWCACHE : UInt<4>, AWPROT : UInt<3>, AWQOS : UInt<4>, AWVALID : UInt<1>, flip AWREADY : UInt<1>, WDATA : UInt<64>, WSTRB : UInt<8>, WLAST : UInt<1>, WVALID : UInt<1>, flip WREADY : UInt<1>, flip BID : UInt<2>, flip BRESP : UInt<2>, flip BVALID : UInt<1>, BREADY : UInt<1>, ARID : UInt<2>, ARADDR : UInt<32>, ARLEN : UInt<8>, ARSIZE : UInt<3>, ARBURST : UInt<2>, ARLOCK : UInt<1>, ARCACHE : UInt<4>, ARPROT : UInt<3>, ARQOS : UInt<4>, ARVALID : UInt<1>, flip ARREADY : UInt<1>, flip RID : UInt<2>, flip RDATA : UInt<64>, flip RLAST : UInt<1>, flip RVALID : UInt<1>, RREADY : UInt<1>, AWDOMAIN : UInt<2>, AWSNOOP : UInt<3>, AWBAR : UInt<2>, ARDOMAIN : UInt<2>, ARSNOOP : UInt<4>, ARBAR : UInt<2>, flip RRESP : UInt<4>, flip ACVALID : UInt<1>, ACREADY : UInt<1>, flip ACADDR : UInt<32>, flip ACSNOOP : UInt<4>, flip ACPROT : UInt<3>, CRVALID : UInt<1>, flip CRREADY : UInt<1>, CRRESP : UInt<5>, CDVALID : UInt<1>, flip CDREADY : UInt<1>, CDDATA : UInt<64>, CDLAST : UInt<1>}
    output peripheral : { AWID : UInt<1>, AWADDR : UInt<32>, AWLEN : UInt<8>, AWSIZE : UInt<3>, AWBURST : UInt<2>, AWLOCK : UInt<1>, AWCACHE : UInt<4>, AWPROT : UInt<3>, AWQOS : UInt<4>, AWVALID : UInt<1>, flip AWREADY : UInt<1>, WDATA : UInt<32>, WSTRB : UInt<4>, WLAST : UInt<1>, WVALID : UInt<1>, flip WREADY : UInt<1>, flip BID : UInt<1>, flip BRESP : UInt<2>, flip BVALID : UInt<1>, BREADY : UInt<1>, ARID : UInt<1>, ARADDR : UInt<32>, ARLEN : UInt<8>, ARSIZE : UInt<3>, ARBURST : UInt<2>, ARLOCK : UInt<1>, ARCACHE : UInt<4>, ARPROT : UInt<3>, ARQOS : UInt<4>, ARVALID : UInt<1>, flip ARREADY : UInt<1>, flip RID : UInt<1>, flip RDATA : UInt<32>, flip RRESP : UInt<2>, flip RLAST : UInt<1>, flip RVALID : UInt<1>, RREADY : UInt<1>}
    output core_sample0 : UInt<1>
    output core_sample1 : UInt<1>
    input MTIP : UInt<1>
    output registersOut : UInt<64>[33]
    output robOut : { commitFired : UInt<1>, pc : UInt<64>, interrupt : UInt<1>}
    output allRobFiresOut : UInt<1>

    inst icache of iCache_1 @[core.scala 27:22]
    icache.clock <= clock
    icache.reset <= reset
    iPort.CDLAST <= icache.lowLevelMem.CDLAST @[core.scala 30:9]
    iPort.CDDATA <= icache.lowLevelMem.CDDATA @[core.scala 30:9]
    icache.lowLevelMem.CDREADY <= iPort.CDREADY @[core.scala 30:9]
    iPort.CDVALID <= icache.lowLevelMem.CDVALID @[core.scala 30:9]
    iPort.CRRESP <= icache.lowLevelMem.CRRESP @[core.scala 30:9]
    icache.lowLevelMem.CRREADY <= iPort.CRREADY @[core.scala 30:9]
    iPort.CRVALID <= icache.lowLevelMem.CRVALID @[core.scala 30:9]
    icache.lowLevelMem.ACPROT <= iPort.ACPROT @[core.scala 30:9]
    icache.lowLevelMem.ACSNOOP <= iPort.ACSNOOP @[core.scala 30:9]
    icache.lowLevelMem.ACADDR <= iPort.ACADDR @[core.scala 30:9]
    iPort.ACREADY <= icache.lowLevelMem.ACREADY @[core.scala 30:9]
    icache.lowLevelMem.ACVALID <= iPort.ACVALID @[core.scala 30:9]
    icache.lowLevelMem.RRESP <= iPort.RRESP @[core.scala 30:9]
    iPort.ARBAR <= icache.lowLevelMem.ARBAR @[core.scala 30:9]
    iPort.ARSNOOP <= icache.lowLevelMem.ARSNOOP @[core.scala 30:9]
    iPort.ARDOMAIN <= icache.lowLevelMem.ARDOMAIN @[core.scala 30:9]
    iPort.AWBAR <= icache.lowLevelMem.AWBAR @[core.scala 30:9]
    iPort.AWSNOOP <= icache.lowLevelMem.AWSNOOP @[core.scala 30:9]
    iPort.AWDOMAIN <= icache.lowLevelMem.AWDOMAIN @[core.scala 30:9]
    iPort.RREADY <= icache.lowLevelMem.RREADY @[core.scala 30:9]
    icache.lowLevelMem.RVALID <= iPort.RVALID @[core.scala 30:9]
    icache.lowLevelMem.RLAST <= iPort.RLAST @[core.scala 30:9]
    icache.lowLevelMem.RDATA <= iPort.RDATA @[core.scala 30:9]
    icache.lowLevelMem.RID <= iPort.RID @[core.scala 30:9]
    icache.lowLevelMem.ARREADY <= iPort.ARREADY @[core.scala 30:9]
    iPort.ARVALID <= icache.lowLevelMem.ARVALID @[core.scala 30:9]
    iPort.ARQOS <= icache.lowLevelMem.ARQOS @[core.scala 30:9]
    iPort.ARPROT <= icache.lowLevelMem.ARPROT @[core.scala 30:9]
    iPort.ARCACHE <= icache.lowLevelMem.ARCACHE @[core.scala 30:9]
    iPort.ARLOCK <= icache.lowLevelMem.ARLOCK @[core.scala 30:9]
    iPort.ARBURST <= icache.lowLevelMem.ARBURST @[core.scala 30:9]
    iPort.ARSIZE <= icache.lowLevelMem.ARSIZE @[core.scala 30:9]
    iPort.ARLEN <= icache.lowLevelMem.ARLEN @[core.scala 30:9]
    iPort.ARADDR <= icache.lowLevelMem.ARADDR @[core.scala 30:9]
    iPort.ARID <= icache.lowLevelMem.ARID @[core.scala 30:9]
    iPort.BREADY <= icache.lowLevelMem.BREADY @[core.scala 30:9]
    icache.lowLevelMem.BVALID <= iPort.BVALID @[core.scala 30:9]
    icache.lowLevelMem.BRESP <= iPort.BRESP @[core.scala 30:9]
    icache.lowLevelMem.BID <= iPort.BID @[core.scala 30:9]
    icache.lowLevelMem.WREADY <= iPort.WREADY @[core.scala 30:9]
    iPort.WVALID <= icache.lowLevelMem.WVALID @[core.scala 30:9]
    iPort.WLAST <= icache.lowLevelMem.WLAST @[core.scala 30:9]
    iPort.WSTRB <= icache.lowLevelMem.WSTRB @[core.scala 30:9]
    iPort.WDATA <= icache.lowLevelMem.WDATA @[core.scala 30:9]
    icache.lowLevelMem.AWREADY <= iPort.AWREADY @[core.scala 30:9]
    iPort.AWVALID <= icache.lowLevelMem.AWVALID @[core.scala 30:9]
    iPort.AWQOS <= icache.lowLevelMem.AWQOS @[core.scala 30:9]
    iPort.AWPROT <= icache.lowLevelMem.AWPROT @[core.scala 30:9]
    iPort.AWCACHE <= icache.lowLevelMem.AWCACHE @[core.scala 30:9]
    iPort.AWLOCK <= icache.lowLevelMem.AWLOCK @[core.scala 30:9]
    iPort.AWBURST <= icache.lowLevelMem.AWBURST @[core.scala 30:9]
    iPort.AWSIZE <= icache.lowLevelMem.AWSIZE @[core.scala 30:9]
    iPort.AWLEN <= icache.lowLevelMem.AWLEN @[core.scala 30:9]
    iPort.AWADDR <= icache.lowLevelMem.AWADDR @[core.scala 30:9]
    iPort.AWID <= icache.lowLevelMem.AWID @[core.scala 30:9]
    icache.updateAllCachelines.fired <= UInt<1>("h0") @[core.scala 33:36]
    icache.cachelinesUpdatesResp.fired <= UInt<1>("h0") @[core.scala 34:38]
    inst fetch of fetch_1 @[core.scala 36:21]
    fetch.clock <= clock
    fetch.reset <= reset
    icache.fromFetch.req <= fetch.cache.req @[core.scala 38:24]
    node _icache_fromFetch_req_bits_T = bits(fetch.cache.req.bits, 31, 0) @[core.scala 39:67]
    node _icache_fromFetch_req_bits_T_1 = cat(UInt<32>("h0"), _icache_fromFetch_req_bits_T) @[Cat.scala 33:92]
    icache.fromFetch.req.bits <= _icache_fromFetch_req_bits_T_1 @[core.scala 39:29]
    fetch.cache.resp <= icache.fromFetch.resp @[core.scala 40:20]
    fetch.updateAllCachelines.fired <= UInt<1>("h0") @[core.scala 43:35]
    fetch.carryOutFence.fired <= UInt<1>("h0") @[core.scala 44:29]
    inst decode of core_Anon_2 @[core.scala 46:22]
    decode.clock <= clock
    decode.reset <= reset
    node _fetch_toDecode_fired_T = and(decode.fromFetch.ready, fetch.toDecode.ready) @[core.scala 54:33]
    node _fetch_toDecode_fired_T_1 = eq(decode.fromFetch.expected.valid, UInt<1>("h0")) @[core.scala 55:7]
    node _fetch_toDecode_fired_T_2 = eq(decode.fromFetch.expected.pc, fetch.toDecode.pc) @[core.scala 55:73]
    node _fetch_toDecode_fired_T_3 = or(_fetch_toDecode_fired_T_1, _fetch_toDecode_fired_T_2) @[core.scala 55:40]
    node _fetch_toDecode_fired_T_4 = and(_fetch_toDecode_fired_T, _fetch_toDecode_fired_T_3) @[core.scala 54:57]
    fetch.toDecode.fired <= _fetch_toDecode_fired_T_4 @[core.scala 54:7]
    node _decode_fromFetch_fired_T = and(decode.fromFetch.ready, fetch.toDecode.ready) @[core.scala 54:33]
    node _decode_fromFetch_fired_T_1 = eq(decode.fromFetch.expected.valid, UInt<1>("h0")) @[core.scala 55:7]
    node _decode_fromFetch_fired_T_2 = eq(decode.fromFetch.expected.pc, fetch.toDecode.pc) @[core.scala 55:73]
    node _decode_fromFetch_fired_T_3 = or(_decode_fromFetch_fired_T_1, _decode_fromFetch_fired_T_2) @[core.scala 55:40]
    node _decode_fromFetch_fired_T_4 = and(_decode_fromFetch_fired_T, _decode_fromFetch_fired_T_3) @[core.scala 54:57]
    decode.fromFetch.fired <= _decode_fromFetch_fired_T_4 @[core.scala 54:7]
    fetch.toDecode.expected.coherency <= decode.fromFetch.expected.coherency @[core.scala 58:27]
    fetch.toDecode.expected.pc <= decode.fromFetch.expected.pc @[core.scala 58:27]
    fetch.toDecode.expected.valid <= decode.fromFetch.expected.valid @[core.scala 58:27]
    decode.fromFetch.instruction <= fetch.toDecode.instruction @[core.scala 59:32]
    decode.fromFetch.pc <= fetch.toDecode.pc @[core.scala 60:23]
    inst dataQueue of storeDataIssue_1 @[core.scala 62:25]
    dataQueue.clock <= clock
    dataQueue.reset <= reset
    inst rob of rob_1 @[core.scala 63:19]
    rob.clock <= clock
    rob.reset <= reset
    inst scheduler of scheduler_1 @[core.scala 64:25]
    scheduler.clock <= clock
    scheduler.reset <= reset
    inst memAccess of core_Anon_3 @[core.scala 65:25]
    memAccess.clock <= clock
    memAccess.reset <= reset
    wire branchOps : { valid : UInt<1>, branchMask : UInt<5>, passed : UInt<1>} @[core.scala 78:23]
    wire wakeUps : { valid : UInt<1>, prfAddr : UInt<6>}[3] @[core.scala 84:21]
    node _instructionDecodedReady_T = bits(decode.toExec.instruction, 6, 2) @[core.scala 90:109]
    node _instructionDecodedReady_T_1 = eq(UInt<2>("h3"), _instructionDecodedReady_T) @[core.scala 90:80]
    node _instructionDecodedReady_T_2 = bits(decode.toExec.instruction, 6, 2) @[core.scala 90:109]
    node _instructionDecodedReady_T_3 = eq(UInt<3>("h5"), _instructionDecodedReady_T_2) @[core.scala 90:80]
    node _instructionDecodedReady_T_4 = bits(decode.toExec.instruction, 6, 2) @[core.scala 90:109]
    node _instructionDecodedReady_T_5 = eq(UInt<4>("hd"), _instructionDecodedReady_T_4) @[core.scala 90:80]
    node _instructionDecodedReady_T_6 = or(_instructionDecodedReady_T_1, _instructionDecodedReady_T_3) @[core.scala 90:125]
    node instructionDecodedReady = or(_instructionDecodedReady_T_6, _instructionDecodedReady_T_5) @[core.scala 90:125]
    node _decode_toExec_fired_T = and(decode.toExec.ready, rob.allocate.ready) @[core.scala 92:31]
    node _decode_toExec_fired_T_1 = and(_decode_toExec_fired_T, scheduler.allocate.ready) @[core.scala 92:53]
    node _decode_toExec_fired_T_2 = bits(decode.toExec.instruction, 6, 4) @[core.scala 92:111]
    node _decode_toExec_fired_T_3 = neq(_decode_toExec_fired_T_2, UInt<2>("h2")) @[core.scala 92:118]
    node _decode_toExec_fired_T_4 = or(_decode_toExec_fired_T_3, dataQueue.fromDecode.ready) @[core.scala 92:132]
    node _decode_toExec_fired_T_5 = and(_decode_toExec_fired_T_1, _decode_toExec_fired_T_4) @[core.scala 92:81]
    decode.toExec.fired <= _decode_toExec_fired_T_5 @[core.scala 92:7]
    node _rob_allocate_fired_T = and(decode.toExec.ready, rob.allocate.ready) @[core.scala 92:31]
    node _rob_allocate_fired_T_1 = and(_rob_allocate_fired_T, scheduler.allocate.ready) @[core.scala 92:53]
    node _rob_allocate_fired_T_2 = bits(decode.toExec.instruction, 6, 4) @[core.scala 92:111]
    node _rob_allocate_fired_T_3 = neq(_rob_allocate_fired_T_2, UInt<2>("h2")) @[core.scala 92:118]
    node _rob_allocate_fired_T_4 = or(_rob_allocate_fired_T_3, dataQueue.fromDecode.ready) @[core.scala 92:132]
    node _rob_allocate_fired_T_5 = and(_rob_allocate_fired_T_1, _rob_allocate_fired_T_4) @[core.scala 92:81]
    rob.allocate.fired <= _rob_allocate_fired_T_5 @[core.scala 92:7]
    node _scheduler_allocate_fired_T = and(decode.toExec.ready, rob.allocate.ready) @[core.scala 92:31]
    node _scheduler_allocate_fired_T_1 = and(_scheduler_allocate_fired_T, scheduler.allocate.ready) @[core.scala 92:53]
    node _scheduler_allocate_fired_T_2 = bits(decode.toExec.instruction, 6, 4) @[core.scala 92:111]
    node _scheduler_allocate_fired_T_3 = neq(_scheduler_allocate_fired_T_2, UInt<2>("h2")) @[core.scala 92:118]
    node _scheduler_allocate_fired_T_4 = or(_scheduler_allocate_fired_T_3, dataQueue.fromDecode.ready) @[core.scala 92:132]
    node _scheduler_allocate_fired_T_5 = and(_scheduler_allocate_fired_T_1, _scheduler_allocate_fired_T_4) @[core.scala 92:81]
    scheduler.allocate.fired <= _scheduler_allocate_fired_T_5 @[core.scala 92:7]
    decode.toExec.robAddr <= rob.allocate.robAddr @[core.scala 94:25]
    rob.allocate.pc <= decode.toExec.pc @[core.scala 95:19]
    rob.allocate.instruction <= decode.toExec.instruction @[core.scala 96:28]
    rob.allocate.prfDest <= decode.toExec.PRFDest @[core.scala 97:24]
    rob.allocate.isReady <= instructionDecodedReady @[core.scala 98:24]
    scheduler.allocate.instruction <= decode.toExec.instruction @[core.scala 99:34]
    scheduler.allocate.branchMask <= decode.toExec.branchMask @[core.scala 100:33]
    scheduler.allocate.rs1.ready <= decode.toExec.rs1Ready @[core.scala 101:32]
    scheduler.allocate.rs1.prfAddr <= decode.toExec.rs1Addr @[core.scala 102:34]
    node _scheduler_allocate_rs2_ready_T = bits(decode.toExec.instruction, 6, 0) @[core.scala 103:65]
    node _scheduler_allocate_rs2_ready_T_1 = and(_scheduler_allocate_rs2_ready_T, UInt<7>("h77")) @[core.scala 103:72]
    node _scheduler_allocate_rs2_ready_T_2 = eq(UInt<5>("h13"), _scheduler_allocate_rs2_ready_T_1) @[core.scala 103:72]
    node _scheduler_allocate_rs2_ready_T_3 = mux(_scheduler_allocate_rs2_ready_T_2, UInt<1>("h1"), decode.toExec.rs2Ready) @[core.scala 103:38]
    scheduler.allocate.rs2.ready <= _scheduler_allocate_rs2_ready_T_3 @[core.scala 103:32]
    scheduler.allocate.rs2.prfAddr <= decode.toExec.rs2Addr @[core.scala 104:34]
    scheduler.allocate.prfDest <= decode.toExec.PRFDest @[core.scala 105:30]
    scheduler.allocate.robAddr <= rob.allocate.robAddr @[core.scala 106:30]
    dataQueue.fromDecode.branchMask <= decode.toExec.branchMask @[core.scala 107:35]
    dataQueue.fromDecode.instruction <= decode.toExec.instruction @[core.scala 108:36]
    dataQueue.fromDecode.rs2Addr <= decode.toExec.rs2Addr @[core.scala 109:32]
    dataQueue.fromDecode.rs2Ready <= decode.toExec.rs2Ready @[core.scala 110:33]
    node _dataQueue_fromDecode_valid_T = bits(decode.toExec.instruction, 6, 4) @[core.scala 111:87]
    node _dataQueue_fromDecode_valid_T_1 = eq(_dataQueue_fromDecode_valid_T, UInt<2>("h2")) @[core.scala 111:94]
    node _dataQueue_fromDecode_valid_T_2 = and(scheduler.allocate.fired, _dataQueue_fromDecode_valid_T_1) @[core.scala 111:58]
    dataQueue.fromDecode.valid <= _dataQueue_fromDecode_valid_T_2 @[core.scala 111:30]
    when instructionDecodedReady : @[core.scala 112:33]
      scheduler.allocate.fired <= UInt<1>("h0") @[core.scala 112:60]
    when branchOps.valid : @[core.scala 113:25]
      node _scheduler_allocate_branchMask_T = xor(decode.toExec.branchMask, branchOps.branchMask) @[core.scala 114:62]
      scheduler.allocate.branchMask <= _scheduler_allocate_branchMask_T @[core.scala 114:34]
      node _dataQueue_fromDecode_branchMask_T = xor(decode.toExec.branchMask, branchOps.branchMask) @[core.scala 115:64]
      dataQueue.fromDecode.branchMask <= _dataQueue_fromDecode_branchMask_T @[core.scala 115:36]
      node _T = eq(branchOps.passed, UInt<1>("h0")) @[core.scala 116:9]
      when _T : @[core.scala 116:28]
        scheduler.allocate.fired <= UInt<1>("h0") @[core.scala 117:30]
        rob.allocate.fired <= UInt<1>("h0") @[core.scala 118:24]
        dataQueue.fromDecode.valid <= UInt<1>("h0") @[core.scala 119:32]
    when wakeUps[0].valid : @[core.scala 124:24]
      node _T_1 = eq(decode.toExec.rs1Addr, wakeUps[0].prfAddr) @[core.scala 125:35]
      when _T_1 : @[core.scala 125:55]
        scheduler.allocate.rs1.ready <= UInt<1>("h1") @[core.scala 125:86]
      node _T_2 = eq(decode.toExec.rs2Addr, wakeUps[0].prfAddr) @[core.scala 126:35]
      when _T_2 : @[core.scala 126:55]
        scheduler.allocate.rs2.ready <= UInt<1>("h1") @[core.scala 126:86]
    when wakeUps[1].valid : @[core.scala 124:24]
      node _T_3 = eq(decode.toExec.rs1Addr, wakeUps[1].prfAddr) @[core.scala 125:35]
      when _T_3 : @[core.scala 125:55]
        scheduler.allocate.rs1.ready <= UInt<1>("h1") @[core.scala 125:86]
      node _T_4 = eq(decode.toExec.rs2Addr, wakeUps[1].prfAddr) @[core.scala 126:35]
      when _T_4 : @[core.scala 126:55]
        scheduler.allocate.rs2.ready <= UInt<1>("h1") @[core.scala 126:86]
    when wakeUps[2].valid : @[core.scala 124:24]
      node _T_5 = eq(decode.toExec.rs1Addr, wakeUps[2].prfAddr) @[core.scala 125:35]
      when _T_5 : @[core.scala 125:55]
        scheduler.allocate.rs1.ready <= UInt<1>("h1") @[core.scala 125:86]
      node _T_6 = eq(decode.toExec.rs2Addr, wakeUps[2].prfAddr) @[core.scala 126:35]
      when _T_6 : @[core.scala 126:55]
        scheduler.allocate.rs2.ready <= UInt<1>("h1") @[core.scala 126:86]
    reg mExtensionReady : UInt<1>, clock with :
      reset => (reset, UInt<1>("h1")) @[core.scala 130:32]
    inst prf of PRF_1 @[core.scala 132:19]
    prf.clock <= clock
    prf.reset <= reset
    node _scheduler_release_fired_T = bits(scheduler.release.instruction, 25, 25) @[core.scala 136:41]
    node _scheduler_release_fired_T_1 = bits(scheduler.release.instruction, 6, 4) @[core.scala 136:76]
    node _scheduler_release_fired_T_2 = cat(_scheduler_release_fired_T, _scheduler_release_fired_T_1) @[Cat.scala 33:92]
    node _scheduler_release_fired_T_3 = eq(_scheduler_release_fired_T_2, UInt<4>("hb")) @[core.scala 136:84]
    node _scheduler_release_fired_T_4 = eq(_scheduler_release_fired_T_3, UInt<1>("h0")) @[core.scala 136:6]
    node _scheduler_release_fired_T_5 = or(_scheduler_release_fired_T_4, mExtensionReady) @[core.scala 136:99]
    node _scheduler_release_fired_T_6 = and(scheduler.release.ready, _scheduler_release_fired_T_5) @[core.scala 134:29]
    scheduler.release.fired <= _scheduler_release_fired_T_6 @[core.scala 133:27]
    prf.execRead.instruction <= scheduler.release.instruction @[core.scala 138:28]
    prf.execRead.branchmask <= scheduler.release.branchMask @[core.scala 139:27]
    prf.execRead.rs1Addr <= scheduler.release.rs1prfAddr @[core.scala 140:24]
    prf.execRead.rs2Addr <= scheduler.release.rs2prfAddr @[core.scala 141:24]
    prf.execRead.robAddr <= scheduler.release.robAddr @[core.scala 142:24]
    prf.execRead.valid <= scheduler.release.fired @[core.scala 143:22]
    prf.execRead.prfDest <= scheduler.release.prfDest @[core.scala 144:24]
    node _T_7 = bits(scheduler.release.instruction, 1, 0) @[core.scala 145:37]
    node _T_8 = eq(_T_7, UInt<1>("h0")) @[core.scala 145:44]
    when _T_8 : @[core.scala 145:57]
      prf.execRead.valid <= UInt<1>("h0") @[core.scala 145:78]
    wire _addressGenerationInput_WIRE : { valid : UInt<1>, rs1 : UInt<64>, instruction : UInt<32>, prfDest : UInt<6>, robAddr : UInt<4>, branchMask : UInt<5>}
    _addressGenerationInput_WIRE.branchMask is invalid
    _addressGenerationInput_WIRE.robAddr is invalid
    _addressGenerationInput_WIRE.prfDest is invalid
    _addressGenerationInput_WIRE.instruction is invalid
    _addressGenerationInput_WIRE.rs1 is invalid
    _addressGenerationInput_WIRE.valid <= UInt<1>("h0")
    reg addressGenerationInput : { valid : UInt<1>, rs1 : UInt<64>, instruction : UInt<32>, prfDest : UInt<6>, robAddr : UInt<4>, branchMask : UInt<5>}, clock with :
      reset => (reset, _addressGenerationInput_WIRE) @[core.scala 153:39]
    node _addressGenerationInput_valid_T = bits(prf.toExec.instruction, 6, 6) @[core.scala 162:97]
    node _addressGenerationInput_valid_T_1 = bits(_addressGenerationInput_valid_T, 0, 0) @[core.scala 162:101]
    node _addressGenerationInput_valid_T_2 = bits(prf.toExec.instruction, 4, 4) @[core.scala 162:97]
    node _addressGenerationInput_valid_T_3 = bits(_addressGenerationInput_valid_T_2, 0, 0) @[core.scala 162:101]
    node _addressGenerationInput_valid_T_4 = or(_addressGenerationInput_valid_T_1, _addressGenerationInput_valid_T_3) @[core.scala 162:118]
    node _addressGenerationInput_valid_T_5 = eq(_addressGenerationInput_valid_T_4, UInt<1>("h0")) @[core.scala 162:55]
    node _addressGenerationInput_valid_T_6 = and(prf.toExec.valid, _addressGenerationInput_valid_T_5) @[core.scala 162:52]
    addressGenerationInput.valid <= _addressGenerationInput_valid_T_6 @[core.scala 162:32]
    addressGenerationInput.instruction <= prf.toExec.instruction @[core.scala 164:38]
    addressGenerationInput.prfDest <= prf.toExec.prfDest @[core.scala 165:34]
    addressGenerationInput.robAddr <= prf.toExec.robAddr @[core.scala 166:34]
    addressGenerationInput.branchMask <= prf.toExec.branchmask @[core.scala 167:37]
    when branchOps.valid : @[core.scala 169:25]
      node _T_9 = and(prf.toExec.branchmask, branchOps.branchMask) @[core.scala 170:33]
      node _T_10 = orr(_T_9) @[core.scala 170:57]
      when _T_10 : @[core.scala 170:62]
        node _addressGenerationInput_branchMask_T = xor(prf.toExec.branchmask, branchOps.branchMask) @[core.scala 171:66]
        addressGenerationInput.branchMask <= _addressGenerationInput_branchMask_T @[core.scala 171:41]
      node _T_11 = eq(branchOps.passed, UInt<1>("h0")) @[core.scala 173:10]
      node _T_12 = and(prf.toExec.branchmask, branchOps.branchMask) @[core.scala 173:54]
      node _T_13 = orr(_T_12) @[core.scala 173:78]
      node _T_14 = and(_T_11, _T_13) @[core.scala 173:28]
      when _T_14 : @[core.scala 173:83]
        addressGenerationInput.valid <= UInt<1>("h0") @[core.scala 173:114]
    wire _memoryRequest_WIRE : { valid : UInt<1>, address : UInt<32>, instruction : UInt<32>, branchMask : UInt<5>, robAddr : UInt<4>, prfDest : UInt<6>}
    _memoryRequest_WIRE.prfDest is invalid
    _memoryRequest_WIRE.robAddr is invalid
    _memoryRequest_WIRE.branchMask is invalid
    _memoryRequest_WIRE.instruction is invalid
    _memoryRequest_WIRE.address is invalid
    _memoryRequest_WIRE.valid <= UInt<1>("h0")
    reg memoryRequest : { valid : UInt<1>, address : UInt<32>, instruction : UInt<32>, branchMask : UInt<5>, robAddr : UInt<4>, prfDest : UInt<6>}, clock with :
      reset => (reset, _memoryRequest_WIRE) @[core.scala 176:30]
    node _memoryRequest_address_T = bits(addressGenerationInput.instruction, 31, 31) @[core.scala 178:52]
    node _memoryRequest_address_T_1 = bits(_memoryRequest_address_T, 0, 0) @[Bitwise.scala 77:15]
    node _memoryRequest_address_T_2 = mux(_memoryRequest_address_T_1, UInt<52>("hfffffffffffff"), UInt<52>("h0")) @[Bitwise.scala 77:12]
    node _memoryRequest_address_T_3 = bits(addressGenerationInput.instruction, 31, 20) @[core.scala 178:93]
    node _memoryRequest_address_T_4 = cat(_memoryRequest_address_T_2, _memoryRequest_address_T_3) @[Cat.scala 33:92]
    node _memoryRequest_address_T_5 = bits(addressGenerationInput.instruction, 31, 31) @[core.scala 179:52]
    node _memoryRequest_address_T_6 = bits(_memoryRequest_address_T_5, 0, 0) @[Bitwise.scala 77:15]
    node _memoryRequest_address_T_7 = mux(_memoryRequest_address_T_6, UInt<52>("hfffffffffffff"), UInt<52>("h0")) @[Bitwise.scala 77:12]
    node _memoryRequest_address_T_8 = bits(addressGenerationInput.instruction, 31, 25) @[core.scala 179:93]
    node _memoryRequest_address_T_9 = bits(addressGenerationInput.instruction, 11, 7) @[core.scala 179:137]
    node memoryRequest_address_hi = cat(_memoryRequest_address_T_7, _memoryRequest_address_T_8) @[Cat.scala 33:92]
    node _memoryRequest_address_T_10 = cat(memoryRequest_address_hi, _memoryRequest_address_T_9) @[Cat.scala 33:92]
    wire _memoryRequest_address_WIRE : UInt<64>[4] @[core.scala 177:64]
    _memoryRequest_address_WIRE[0] <= _memoryRequest_address_T_4 @[core.scala 177:64]
    _memoryRequest_address_WIRE[1] <= _memoryRequest_address_T_10 @[core.scala 177:64]
    _memoryRequest_address_WIRE[2] <= UInt<1>("h0") @[core.scala 177:64]
    _memoryRequest_address_WIRE[3] <= UInt<1>("h0") @[core.scala 177:64]
    node _memoryRequest_address_T_11 = bits(addressGenerationInput.instruction, 3, 3) @[core.scala 181:43]
    node _memoryRequest_address_T_12 = bits(addressGenerationInput.instruction, 5, 5) @[core.scala 181:82]
    node _memoryRequest_address_T_13 = cat(_memoryRequest_address_T_11, _memoryRequest_address_T_12) @[Cat.scala 33:92]
    node _memoryRequest_address_T_14 = add(addressGenerationInput.rs1, _memoryRequest_address_WIRE[_memoryRequest_address_T_13]) @[core.scala 177:55]
    node _memoryRequest_address_T_15 = tail(_memoryRequest_address_T_14, 1) @[core.scala 177:55]
    memoryRequest.address <= _memoryRequest_address_T_15 @[core.scala 177:25]
    memoryRequest.branchMask <= addressGenerationInput.branchMask @[core.scala 182:28]
    memoryRequest.instruction <= addressGenerationInput.instruction @[core.scala 183:29]
    memoryRequest.prfDest <= addressGenerationInput.prfDest @[core.scala 184:25]
    memoryRequest.robAddr <= addressGenerationInput.robAddr @[core.scala 185:25]
    memoryRequest.valid <= addressGenerationInput.valid @[core.scala 186:23]
    when branchOps.valid : @[core.scala 188:25]
      node _T_15 = and(addressGenerationInput.branchMask, branchOps.branchMask) @[core.scala 189:45]
      node _T_16 = orr(_T_15) @[core.scala 189:69]
      when _T_16 : @[core.scala 189:74]
        node _memoryRequest_branchMask_T = xor(addressGenerationInput.branchMask, branchOps.branchMask) @[core.scala 190:69]
        memoryRequest.branchMask <= _memoryRequest_branchMask_T @[core.scala 190:32]
      node _T_17 = eq(branchOps.passed, UInt<1>("h0")) @[core.scala 192:10]
      node _T_18 = and(addressGenerationInput.branchMask, branchOps.branchMask) @[core.scala 192:66]
      node _T_19 = orr(_T_18) @[core.scala 192:90]
      node _T_20 = and(_T_17, _T_19) @[core.scala 192:28]
      when _T_20 : @[core.scala 192:95]
        memoryRequest.valid <= UInt<1>("h0") @[core.scala 192:117]
    memAccess.request.prfDest <= memoryRequest.prfDest @[core.scala 195:21]
    memAccess.request.robAddr <= memoryRequest.robAddr @[core.scala 195:21]
    memAccess.request.branchMask <= memoryRequest.branchMask @[core.scala 195:21]
    memAccess.request.instruction <= memoryRequest.instruction @[core.scala 195:21]
    memAccess.request.address <= memoryRequest.address @[core.scala 195:21]
    memAccess.request.valid <= memoryRequest.valid @[core.scala 195:21]
    memAccess.branchOps.passed <= branchOps.passed @[core.scala 196:23]
    memAccess.branchOps.branchMask <= branchOps.branchMask @[core.scala 196:23]
    memAccess.branchOps.valid <= branchOps.valid @[core.scala 196:23]
    wire _singleCycleArithmeticRequest_WIRE : { valid : UInt<1>, rs1 : UInt<64>, rs2 : UInt<64>, instruction : UInt<32>, prfDest : UInt<6>, robAddr : UInt<4>, branchMask : UInt<5>}
    _singleCycleArithmeticRequest_WIRE.branchMask is invalid
    _singleCycleArithmeticRequest_WIRE.robAddr is invalid
    _singleCycleArithmeticRequest_WIRE.prfDest is invalid
    _singleCycleArithmeticRequest_WIRE.instruction is invalid
    _singleCycleArithmeticRequest_WIRE.rs2 is invalid
    _singleCycleArithmeticRequest_WIRE.rs1 is invalid
    _singleCycleArithmeticRequest_WIRE.valid <= UInt<1>("h0")
    reg singleCycleArithmeticRequest : { valid : UInt<1>, rs1 : UInt<64>, rs2 : UInt<64>, instruction : UInt<32>, prfDest : UInt<6>, robAddr : UInt<4>, branchMask : UInt<5>}, clock with :
      reset => (reset, _singleCycleArithmeticRequest_WIRE) @[core.scala 198:45]
    wire _singleCycleArithmeticResponse_WIRE : { valid : UInt<1>, result : UInt<64>, prfDest : UInt<6>, robAddr : UInt<4>}
    _singleCycleArithmeticResponse_WIRE.robAddr is invalid
    _singleCycleArithmeticResponse_WIRE.prfDest is invalid
    _singleCycleArithmeticResponse_WIRE.result is invalid
    _singleCycleArithmeticResponse_WIRE.valid <= UInt<1>("h0")
    reg singleCycleArithmeticResponse : { valid : UInt<1>, result : UInt<64>, prfDest : UInt<6>, robAddr : UInt<4>}, clock with :
      reset => (reset, _singleCycleArithmeticResponse_WIRE) @[core.scala 208:46]
    wire _extnMRequest_WIRE : { valid : UInt<1>, rs1 : UInt<64>, rs2 : UInt<64>, instruction : UInt<32>, prfDest : UInt<6>, robAddr : UInt<4>, branchMask : UInt<5>}
    _extnMRequest_WIRE.branchMask is invalid
    _extnMRequest_WIRE.robAddr is invalid
    _extnMRequest_WIRE.prfDest is invalid
    _extnMRequest_WIRE.instruction is invalid
    _extnMRequest_WIRE.rs2 is invalid
    _extnMRequest_WIRE.rs1 is invalid
    _extnMRequest_WIRE.valid <= UInt<1>("h0")
    reg extnMRequest : { valid : UInt<1>, rs1 : UInt<64>, rs2 : UInt<64>, instruction : UInt<32>, prfDest : UInt<6>, robAddr : UInt<4>, branchMask : UInt<5>}, clock with :
      reset => (reset, _extnMRequest_WIRE) @[core.scala 215:29]
    wire _extnMServicing_WIRE : { valid : UInt<1>, rs1 : UInt<64>, rs2 : UInt<64>, instruction : UInt<32>, prfDest : UInt<6>, robAddr : UInt<4>, branchMask : UInt<5>}
    _extnMServicing_WIRE.branchMask is invalid
    _extnMServicing_WIRE.robAddr is invalid
    _extnMServicing_WIRE.prfDest is invalid
    _extnMServicing_WIRE.instruction is invalid
    _extnMServicing_WIRE.rs2 is invalid
    _extnMServicing_WIRE.rs1 is invalid
    _extnMServicing_WIRE.valid <= UInt<1>("h0")
    reg extnMServicing : { valid : UInt<1>, rs1 : UInt<64>, rs2 : UInt<64>, instruction : UInt<32>, prfDest : UInt<6>, robAddr : UInt<4>, branchMask : UInt<5>}, clock with :
      reset => (reset, _extnMServicing_WIRE) @[core.scala 217:31]
    wire _extnMPartialServicing_WIRE : { valid : UInt<1>, rs1 : UInt<64>, rs2 : UInt<64>, instruction : UInt<32>, prfDest : UInt<6>, robAddr : UInt<4>, branchMask : UInt<5>}
    _extnMPartialServicing_WIRE.branchMask is invalid
    _extnMPartialServicing_WIRE.robAddr is invalid
    _extnMPartialServicing_WIRE.prfDest is invalid
    _extnMPartialServicing_WIRE.instruction is invalid
    _extnMPartialServicing_WIRE.rs2 is invalid
    _extnMPartialServicing_WIRE.rs1 is invalid
    _extnMPartialServicing_WIRE.valid <= UInt<1>("h0")
    reg extnMPartialServicing : { valid : UInt<1>, rs1 : UInt<64>, rs2 : UInt<64>, instruction : UInt<32>, prfDest : UInt<6>, robAddr : UInt<4>, branchMask : UInt<5>}, clock with :
      reset => (reset, _extnMPartialServicing_WIRE) @[core.scala 218:38]
    reg muls : UInt<96>[6], clock with :
      reset => (UInt<1>("h0"), muls) @[core.scala 219:17]
    extnMPartialServicing <= extnMRequest @[core.scala 220:25]
    extnMServicing <= extnMPartialServicing @[core.scala 221:18]
    node _T_21 = bits(extnMRequest.instruction, 14, 14) @[core.scala 222:32]
    node _T_22 = bits(_T_21, 0, 0) @[core.scala 222:37]
    when _T_22 : @[core.scala 222:45]
      extnMPartialServicing.valid <= UInt<1>("h0") @[core.scala 222:75]
    wire _extnMResponse_WIRE : { valid : UInt<1>, result : UInt<64>, prfDest : UInt<6>, robAddr : UInt<4>}
    _extnMResponse_WIRE.robAddr is invalid
    _extnMResponse_WIRE.prfDest is invalid
    _extnMResponse_WIRE.result is invalid
    _extnMResponse_WIRE.valid <= UInt<1>("h0")
    reg extnMResponse : { valid : UInt<1>, result : UInt<64>, prfDest : UInt<6>, robAddr : UInt<4>}, clock with :
      reset => (reset, _extnMResponse_WIRE) @[core.scala 224:30]
    wire _division_WIRE : { request : { valid : UInt<1>, rs1 : UInt<64>, rs2 : UInt<64>, instruction : UInt<32>, prfDest : UInt<6>, robAddr : UInt<4>, branchMask : UInt<5>}, quotient : UInt<65>, remainder : UInt<65>, divisor : UInt<65>, counter : UInt<7>, resultNegative : UInt<1>}
    _division_WIRE.resultNegative is invalid
    _division_WIRE.counter is invalid
    _division_WIRE.divisor is invalid
    _division_WIRE.remainder is invalid
    _division_WIRE.quotient is invalid
    _division_WIRE.request.branchMask is invalid
    _division_WIRE.request.robAddr is invalid
    _division_WIRE.request.prfDest is invalid
    _division_WIRE.request.instruction is invalid
    _division_WIRE.request.rs2 is invalid
    _division_WIRE.request.rs1 is invalid
    _division_WIRE.request.valid <= UInt<1>("h0")
    reg division : { request : { valid : UInt<1>, rs1 : UInt<64>, rs2 : UInt<64>, instruction : UInt<32>, prfDest : UInt<6>, robAddr : UInt<4>, branchMask : UInt<5>}, quotient : UInt<65>, remainder : UInt<65>, divisor : UInt<65>, counter : UInt<7>, resultNegative : UInt<1>}, clock with :
      reset => (reset, _division_WIRE) @[core.scala 226:25]
    wire _fwdBuffers_WIRE : { valid : UInt<1>, prfDest : UInt<6>, result : UInt<64>, branchMask : UInt<5>}[2] @[core.scala 235:35]
    _fwdBuffers_WIRE[0].branchMask is invalid @[core.scala 235:35]
    _fwdBuffers_WIRE[0].result is invalid @[core.scala 235:35]
    _fwdBuffers_WIRE[0].prfDest is invalid @[core.scala 235:35]
    _fwdBuffers_WIRE[0].valid <= UInt<1>("h0") @[core.scala 235:35]
    _fwdBuffers_WIRE[1].branchMask is invalid @[core.scala 235:35]
    _fwdBuffers_WIRE[1].result is invalid @[core.scala 235:35]
    _fwdBuffers_WIRE[1].prfDest is invalid @[core.scala 235:35]
    _fwdBuffers_WIRE[1].valid <= UInt<1>("h0") @[core.scala 235:35]
    reg fwdBuffers : { valid : UInt<1>, prfDest : UInt<6>, result : UInt<64>, branchMask : UInt<5>}[2], clock with :
      reset => (reset, _fwdBuffers_WIRE) @[core.scala 235:27]
    wire fwdFrom_0 : { valid : UInt<1>, prfDest : UInt<6>, result : UInt<64>, branchMask : UInt<5>} @[core.scala 241:33]
    wire fwdFrom_1 : { valid : UInt<1>, prfDest : UInt<6>, result : UInt<64>, branchMask : UInt<5>} @[core.scala 241:33]
    wire fwdFrom_2 : { valid : UInt<1>, prfDest : UInt<6>, result : UInt<64>, branchMask : UInt<5>} @[core.scala 241:33]
    fwdFrom_1 <= fwdBuffers[0] @[core.scala 242:14]
    fwdFrom_2 <= fwdBuffers[1] @[core.scala 243:14]
    node _fwdFrom_0_valid_T = bits(singleCycleArithmeticRequest.instruction, 11, 7) @[core.scala 244:101]
    node _fwdFrom_0_valid_T_1 = orr(_fwdFrom_0_valid_T) @[core.scala 244:109]
    node _fwdFrom_0_valid_T_2 = and(singleCycleArithmeticRequest.valid, _fwdFrom_0_valid_T_1) @[core.scala 244:58]
    fwdFrom_0.valid <= _fwdFrom_0_valid_T_2 @[core.scala 244:20]
    fwdFrom_0.prfDest <= singleCycleArithmeticRequest.prfDest @[core.scala 245:22]
    fwdFrom_0.branchMask <= singleCycleArithmeticRequest.branchMask @[core.scala 246:25]
    node _addressGenerationInput_rs1_T = bits(prf.toExec.instruction, 19, 15) @[core.scala 248:59]
    node _addressGenerationInput_rs1_T_1 = orr(_addressGenerationInput_rs1_T) @[core.scala 248:68]
    node _addressGenerationInput_rs1_T_2 = eq(fwdFrom_0.prfDest, prf.toExec.rs1Addr) @[core.scala 249:50]
    node _addressGenerationInput_rs1_T_3 = and(fwdFrom_0.valid, _addressGenerationInput_rs1_T_2) @[core.scala 249:34]
    node _addressGenerationInput_rs1_T_4 = eq(fwdFrom_1.prfDest, prf.toExec.rs1Addr) @[core.scala 249:50]
    node _addressGenerationInput_rs1_T_5 = and(fwdFrom_1.valid, _addressGenerationInput_rs1_T_4) @[core.scala 249:34]
    node _addressGenerationInput_rs1_T_6 = eq(fwdFrom_2.prfDest, prf.toExec.rs1Addr) @[core.scala 249:50]
    node _addressGenerationInput_rs1_T_7 = and(fwdFrom_2.valid, _addressGenerationInput_rs1_T_6) @[core.scala 249:34]
    node _addressGenerationInput_rs1_T_8 = mux(_addressGenerationInput_rs1_T_7, fwdFrom_2.result, prf.toExec.rs1Data) @[Mux.scala 101:16]
    node _addressGenerationInput_rs1_T_9 = mux(_addressGenerationInput_rs1_T_5, fwdFrom_1.result, _addressGenerationInput_rs1_T_8) @[Mux.scala 101:16]
    node _addressGenerationInput_rs1_T_10 = mux(_addressGenerationInput_rs1_T_3, fwdFrom_0.result, _addressGenerationInput_rs1_T_9) @[Mux.scala 101:16]
    node _addressGenerationInput_rs1_T_11 = mux(_addressGenerationInput_rs1_T_1, _addressGenerationInput_rs1_T_10, UInt<1>("h0")) @[core.scala 248:36]
    addressGenerationInput.rs1 <= _addressGenerationInput_rs1_T_11 @[core.scala 248:30]
    node _arithmeticResult_arithmetic32_T = bits(singleCycleArithmeticRequest.instruction, 30, 30) @[core.scala 261:36]
    node _arithmeticResult_arithmetic32_T_1 = bits(singleCycleArithmeticRequest.instruction, 5, 5) @[core.scala 261:53]
    node _arithmeticResult_arithmetic32_T_2 = cat(_arithmeticResult_arithmetic32_T, _arithmeticResult_arithmetic32_T_1) @[Cat.scala 33:92]
    node _arithmeticResult_arithmetic32_T_3 = eq(_arithmeticResult_arithmetic32_T_2, UInt<2>("h3")) @[core.scala 261:58]
    node _arithmeticResult_arithmetic32_T_4 = sub(singleCycleArithmeticRequest.rs1, singleCycleArithmeticRequest.rs2) @[core.scala 261:87]
    node _arithmeticResult_arithmetic32_T_5 = tail(_arithmeticResult_arithmetic32_T_4, 1) @[core.scala 261:87]
    node _arithmeticResult_arithmetic32_T_6 = bits(_arithmeticResult_arithmetic32_T_5, 31, 31) @[core.scala 254:23]
    node _arithmeticResult_arithmetic32_T_7 = bits(_arithmeticResult_arithmetic32_T_6, 0, 0) @[Bitwise.scala 77:15]
    node _arithmeticResult_arithmetic32_T_8 = mux(_arithmeticResult_arithmetic32_T_7, UInt<32>("hffffffff"), UInt<32>("h0")) @[Bitwise.scala 77:12]
    node _arithmeticResult_arithmetic32_T_9 = bits(_arithmeticResult_arithmetic32_T_5, 31, 0) @[core.scala 254:33]
    node _arithmeticResult_arithmetic32_T_10 = cat(_arithmeticResult_arithmetic32_T_8, _arithmeticResult_arithmetic32_T_9) @[Cat.scala 33:92]
    node _arithmeticResult_arithmetic32_T_11 = add(singleCycleArithmeticRequest.rs1, singleCycleArithmeticRequest.rs2) @[core.scala 261:111]
    node _arithmeticResult_arithmetic32_T_12 = tail(_arithmeticResult_arithmetic32_T_11, 1) @[core.scala 261:111]
    node _arithmeticResult_arithmetic32_T_13 = bits(_arithmeticResult_arithmetic32_T_12, 31, 31) @[core.scala 254:23]
    node _arithmeticResult_arithmetic32_T_14 = bits(_arithmeticResult_arithmetic32_T_13, 0, 0) @[Bitwise.scala 77:15]
    node _arithmeticResult_arithmetic32_T_15 = mux(_arithmeticResult_arithmetic32_T_14, UInt<32>("hffffffff"), UInt<32>("h0")) @[Bitwise.scala 77:12]
    node _arithmeticResult_arithmetic32_T_16 = bits(_arithmeticResult_arithmetic32_T_12, 31, 0) @[core.scala 254:33]
    node _arithmeticResult_arithmetic32_T_17 = cat(_arithmeticResult_arithmetic32_T_15, _arithmeticResult_arithmetic32_T_16) @[Cat.scala 33:92]
    node _arithmeticResult_arithmetic32_T_18 = mux(_arithmeticResult_arithmetic32_T_3, _arithmeticResult_arithmetic32_T_10, _arithmeticResult_arithmetic32_T_17) @[core.scala 261:20]
    node _arithmeticResult_arithmetic32_T_19 = bits(singleCycleArithmeticRequest.rs2, 4, 0) @[core.scala 262:40]
    node _arithmeticResult_arithmetic32_T_20 = dshl(singleCycleArithmeticRequest.rs1, _arithmeticResult_arithmetic32_T_19) @[core.scala 262:34]
    node _arithmeticResult_arithmetic32_T_21 = bits(_arithmeticResult_arithmetic32_T_20, 31, 31) @[core.scala 254:23]
    node _arithmeticResult_arithmetic32_T_22 = bits(_arithmeticResult_arithmetic32_T_21, 0, 0) @[Bitwise.scala 77:15]
    node _arithmeticResult_arithmetic32_T_23 = mux(_arithmeticResult_arithmetic32_T_22, UInt<32>("hffffffff"), UInt<32>("h0")) @[Bitwise.scala 77:12]
    node _arithmeticResult_arithmetic32_T_24 = bits(_arithmeticResult_arithmetic32_T_20, 31, 0) @[core.scala 254:33]
    node _arithmeticResult_arithmetic32_T_25 = cat(_arithmeticResult_arithmetic32_T_23, _arithmeticResult_arithmetic32_T_24) @[Cat.scala 33:92]
    node _arithmeticResult_arithmetic32_T_26 = bits(singleCycleArithmeticRequest.rs2, 4, 0) @[core.scala 263:40]
    node _arithmeticResult_arithmetic32_T_27 = dshl(singleCycleArithmeticRequest.rs1, _arithmeticResult_arithmetic32_T_26) @[core.scala 263:34]
    node _arithmeticResult_arithmetic32_T_28 = bits(_arithmeticResult_arithmetic32_T_27, 31, 31) @[core.scala 254:23]
    node _arithmeticResult_arithmetic32_T_29 = bits(_arithmeticResult_arithmetic32_T_28, 0, 0) @[Bitwise.scala 77:15]
    node _arithmeticResult_arithmetic32_T_30 = mux(_arithmeticResult_arithmetic32_T_29, UInt<32>("hffffffff"), UInt<32>("h0")) @[Bitwise.scala 77:12]
    node _arithmeticResult_arithmetic32_T_31 = bits(_arithmeticResult_arithmetic32_T_27, 31, 0) @[core.scala 254:33]
    node _arithmeticResult_arithmetic32_T_32 = cat(_arithmeticResult_arithmetic32_T_30, _arithmeticResult_arithmetic32_T_31) @[Cat.scala 33:92]
    node _arithmeticResult_arithmetic32_T_33 = bits(singleCycleArithmeticRequest.instruction, 30, 30) @[core.scala 264:32]
    node _arithmeticResult_arithmetic32_T_34 = bits(_arithmeticResult_arithmetic32_T_33, 0, 0) @[core.scala 264:37]
    node _arithmeticResult_arithmetic32_T_35 = bits(singleCycleArithmeticRequest.rs1, 31, 0) @[core.scala 264:61]
    node _arithmeticResult_arithmetic32_T_36 = asSInt(_arithmeticResult_arithmetic32_T_35) @[core.scala 264:69]
    node _arithmeticResult_arithmetic32_T_37 = bits(singleCycleArithmeticRequest.rs2, 4, 0) @[core.scala 264:82]
    node _arithmeticResult_arithmetic32_T_38 = dshr(_arithmeticResult_arithmetic32_T_36, _arithmeticResult_arithmetic32_T_37) @[core.scala 264:76]
    node _arithmeticResult_arithmetic32_T_39 = asUInt(_arithmeticResult_arithmetic32_T_38) @[core.scala 264:90]
    node _arithmeticResult_arithmetic32_T_40 = bits(_arithmeticResult_arithmetic32_T_39, 31, 31) @[core.scala 254:23]
    node _arithmeticResult_arithmetic32_T_41 = bits(_arithmeticResult_arithmetic32_T_40, 0, 0) @[Bitwise.scala 77:15]
    node _arithmeticResult_arithmetic32_T_42 = mux(_arithmeticResult_arithmetic32_T_41, UInt<32>("hffffffff"), UInt<32>("h0")) @[Bitwise.scala 77:12]
    node _arithmeticResult_arithmetic32_T_43 = bits(_arithmeticResult_arithmetic32_T_39, 31, 0) @[core.scala 254:33]
    node _arithmeticResult_arithmetic32_T_44 = cat(_arithmeticResult_arithmetic32_T_42, _arithmeticResult_arithmetic32_T_43) @[Cat.scala 33:92]
    node _arithmeticResult_arithmetic32_T_45 = bits(singleCycleArithmeticRequest.rs1, 31, 0) @[core.scala 264:114]
    node _arithmeticResult_arithmetic32_T_46 = bits(singleCycleArithmeticRequest.rs2, 4, 0) @[core.scala 264:128]
    node _arithmeticResult_arithmetic32_T_47 = dshr(_arithmeticResult_arithmetic32_T_45, _arithmeticResult_arithmetic32_T_46) @[core.scala 264:122]
    node _arithmeticResult_arithmetic32_T_48 = bits(_arithmeticResult_arithmetic32_T_47, 31, 31) @[core.scala 254:23]
    node _arithmeticResult_arithmetic32_T_49 = bits(_arithmeticResult_arithmetic32_T_48, 0, 0) @[Bitwise.scala 77:15]
    node _arithmeticResult_arithmetic32_T_50 = mux(_arithmeticResult_arithmetic32_T_49, UInt<32>("hffffffff"), UInt<32>("h0")) @[Bitwise.scala 77:12]
    node _arithmeticResult_arithmetic32_T_51 = bits(_arithmeticResult_arithmetic32_T_47, 31, 0) @[core.scala 254:33]
    node _arithmeticResult_arithmetic32_T_52 = cat(_arithmeticResult_arithmetic32_T_50, _arithmeticResult_arithmetic32_T_51) @[Cat.scala 33:92]
    node _arithmeticResult_arithmetic32_T_53 = mux(_arithmeticResult_arithmetic32_T_34, _arithmeticResult_arithmetic32_T_44, _arithmeticResult_arithmetic32_T_52) @[core.scala 264:20]
    wire _arithmeticResult_arithmetic32_WIRE : UInt<64>[4] @[core.scala 260:43]
    _arithmeticResult_arithmetic32_WIRE[0] <= _arithmeticResult_arithmetic32_T_18 @[core.scala 260:43]
    _arithmeticResult_arithmetic32_WIRE[1] <= _arithmeticResult_arithmetic32_T_25 @[core.scala 260:43]
    _arithmeticResult_arithmetic32_WIRE[2] <= _arithmeticResult_arithmetic32_T_32 @[core.scala 260:43]
    _arithmeticResult_arithmetic32_WIRE[3] <= _arithmeticResult_arithmetic32_T_53 @[core.scala 260:43]
    node _arithmeticResult_arithmetic32_T_54 = bits(singleCycleArithmeticRequest.instruction, 14, 14) @[core.scala 265:23]
    node _arithmeticResult_arithmetic32_T_55 = bits(singleCycleArithmeticRequest.instruction, 12, 12) @[core.scala 265:40]
    node _arithmeticResult_arithmetic32_T_56 = cat(_arithmeticResult_arithmetic32_T_54, _arithmeticResult_arithmetic32_T_55) @[Cat.scala 33:92]
    node _arithmeticResult_arithmetic64_T = bits(singleCycleArithmeticRequest.instruction, 30, 30) @[core.scala 271:36]
    node _arithmeticResult_arithmetic64_T_1 = bits(singleCycleArithmeticRequest.instruction, 5, 5) @[core.scala 271:53]
    node _arithmeticResult_arithmetic64_T_2 = cat(_arithmeticResult_arithmetic64_T, _arithmeticResult_arithmetic64_T_1) @[Cat.scala 33:92]
    node _arithmeticResult_arithmetic64_T_3 = eq(_arithmeticResult_arithmetic64_T_2, UInt<2>("h3")) @[core.scala 271:58]
    node _arithmeticResult_arithmetic64_T_4 = sub(singleCycleArithmeticRequest.rs1, singleCycleArithmeticRequest.rs2) @[core.scala 271:75]
    node _arithmeticResult_arithmetic64_T_5 = tail(_arithmeticResult_arithmetic64_T_4, 1) @[core.scala 271:75]
    node _arithmeticResult_arithmetic64_T_6 = add(singleCycleArithmeticRequest.rs1, singleCycleArithmeticRequest.rs2) @[core.scala 271:86]
    node _arithmeticResult_arithmetic64_T_7 = tail(_arithmeticResult_arithmetic64_T_6, 1) @[core.scala 271:86]
    node _arithmeticResult_arithmetic64_T_8 = mux(_arithmeticResult_arithmetic64_T_3, _arithmeticResult_arithmetic64_T_5, _arithmeticResult_arithmetic64_T_7) @[core.scala 271:20]
    node _arithmeticResult_arithmetic64_T_9 = bits(singleCycleArithmeticRequest.rs2, 5, 0) @[core.scala 272:28]
    node _arithmeticResult_arithmetic64_T_10 = dshl(singleCycleArithmeticRequest.rs1, _arithmeticResult_arithmetic64_T_9) @[core.scala 272:22]
    node _arithmeticResult_arithmetic64_T_11 = asSInt(singleCycleArithmeticRequest.rs1) @[core.scala 273:22]
    node _arithmeticResult_arithmetic64_T_12 = asSInt(singleCycleArithmeticRequest.rs2) @[core.scala 273:35]
    node _arithmeticResult_arithmetic64_T_13 = lt(_arithmeticResult_arithmetic64_T_11, _arithmeticResult_arithmetic64_T_12) @[core.scala 273:29]
    node _arithmeticResult_arithmetic64_T_14 = lt(singleCycleArithmeticRequest.rs1, singleCycleArithmeticRequest.rs2) @[core.scala 274:22]
    node _arithmeticResult_arithmetic64_T_15 = xor(singleCycleArithmeticRequest.rs1, singleCycleArithmeticRequest.rs2) @[core.scala 275:22]
    node _arithmeticResult_arithmetic64_T_16 = bits(singleCycleArithmeticRequest.instruction, 30, 30) @[core.scala 276:32]
    node _arithmeticResult_arithmetic64_T_17 = bits(_arithmeticResult_arithmetic64_T_16, 0, 0) @[core.scala 276:37]
    node _arithmeticResult_arithmetic64_T_18 = asSInt(singleCycleArithmeticRequest.rs1) @[core.scala 276:50]
    node _arithmeticResult_arithmetic64_T_19 = bits(singleCycleArithmeticRequest.rs2, 5, 0) @[core.scala 276:63]
    node _arithmeticResult_arithmetic64_T_20 = dshr(_arithmeticResult_arithmetic64_T_18, _arithmeticResult_arithmetic64_T_19) @[core.scala 276:57]
    node _arithmeticResult_arithmetic64_T_21 = asUInt(_arithmeticResult_arithmetic64_T_20) @[core.scala 276:71]
    node _arithmeticResult_arithmetic64_T_22 = bits(singleCycleArithmeticRequest.rs2, 5, 0) @[core.scala 276:90]
    node _arithmeticResult_arithmetic64_T_23 = dshr(singleCycleArithmeticRequest.rs1, _arithmeticResult_arithmetic64_T_22) @[core.scala 276:84]
    node _arithmeticResult_arithmetic64_T_24 = mux(_arithmeticResult_arithmetic64_T_17, _arithmeticResult_arithmetic64_T_21, _arithmeticResult_arithmetic64_T_23) @[core.scala 276:20]
    node _arithmeticResult_arithmetic64_T_25 = or(singleCycleArithmeticRequest.rs1, singleCycleArithmeticRequest.rs2) @[core.scala 277:22]
    node _arithmeticResult_arithmetic64_T_26 = and(singleCycleArithmeticRequest.rs1, singleCycleArithmeticRequest.rs2) @[core.scala 278:22]
    wire _arithmeticResult_arithmetic64_WIRE : UInt<127>[8] @[core.scala 270:43]
    _arithmeticResult_arithmetic64_WIRE[0] <= _arithmeticResult_arithmetic64_T_8 @[core.scala 270:43]
    _arithmeticResult_arithmetic64_WIRE[1] <= _arithmeticResult_arithmetic64_T_10 @[core.scala 270:43]
    _arithmeticResult_arithmetic64_WIRE[2] <= _arithmeticResult_arithmetic64_T_13 @[core.scala 270:43]
    _arithmeticResult_arithmetic64_WIRE[3] <= _arithmeticResult_arithmetic64_T_14 @[core.scala 270:43]
    _arithmeticResult_arithmetic64_WIRE[4] <= _arithmeticResult_arithmetic64_T_15 @[core.scala 270:43]
    _arithmeticResult_arithmetic64_WIRE[5] <= _arithmeticResult_arithmetic64_T_24 @[core.scala 270:43]
    _arithmeticResult_arithmetic64_WIRE[6] <= _arithmeticResult_arithmetic64_T_25 @[core.scala 270:43]
    _arithmeticResult_arithmetic64_WIRE[7] <= _arithmeticResult_arithmetic64_T_26 @[core.scala 270:43]
    node _arithmeticResult_arithmetic64_T_27 = bits(singleCycleArithmeticRequest.instruction, 14, 12) @[core.scala 279:19]
    node _arithmeticResult_T = bits(singleCycleArithmeticRequest.instruction, 3, 3) @[core.scala 280:20]
    node _arithmeticResult_T_1 = bits(_arithmeticResult_T, 0, 0) @[core.scala 280:24]
    node arithmeticResult = mux(_arithmeticResult_T_1, _arithmeticResult_arithmetic32_WIRE[_arithmeticResult_arithmetic32_T_56], _arithmeticResult_arithmetic64_WIRE[_arithmeticResult_arithmetic64_T_27]) @[core.scala 280:8]
    fwdFrom_0.result <= arithmeticResult @[core.scala 282:21]
    node _arithmeticImm_T = bits(prf.toExec.instruction, 31, 31) @[core.scala 284:58]
    node _arithmeticImm_T_1 = bits(_arithmeticImm_T, 0, 0) @[Bitwise.scala 77:15]
    node _arithmeticImm_T_2 = mux(_arithmeticImm_T_1, UInt<52>("hfffffffffffff"), UInt<52>("h0")) @[Bitwise.scala 77:12]
    node _arithmeticImm_T_3 = bits(prf.toExec.instruction, 31, 20) @[core.scala 284:87]
    node arithmeticImm = cat(_arithmeticImm_T_2, _arithmeticImm_T_3) @[Cat.scala 33:92]
    node _singleCycleArithmeticRequest_valid_T = bits(prf.toExec.instruction, 4, 2) @[core.scala 287:84]
    node _singleCycleArithmeticRequest_valid_T_1 = and(_singleCycleArithmeticRequest_valid_T, UInt<3>("h5")) @[core.scala 287:91]
    node _singleCycleArithmeticRequest_valid_T_2 = eq(UInt<3>("h4"), _singleCycleArithmeticRequest_valid_T_1) @[core.scala 287:91]
    node _singleCycleArithmeticRequest_valid_T_3 = and(prf.toExec.valid, _singleCycleArithmeticRequest_valid_T_2) @[core.scala 287:58]
    node _singleCycleArithmeticRequest_valid_T_4 = bits(prf.toExec.instruction, 6, 6) @[core.scala 287:137]
    node _singleCycleArithmeticRequest_valid_T_5 = bits(_singleCycleArithmeticRequest_valid_T_4, 0, 0) @[core.scala 287:141]
    node _singleCycleArithmeticRequest_valid_T_6 = bits(prf.toExec.instruction, 5, 5) @[core.scala 287:174]
    node _singleCycleArithmeticRequest_valid_T_7 = bits(_singleCycleArithmeticRequest_valid_T_6, 0, 0) @[core.scala 287:178]
    node _singleCycleArithmeticRequest_valid_T_8 = eq(_singleCycleArithmeticRequest_valid_T_7, UInt<1>("h0")) @[core.scala 287:151]
    node _singleCycleArithmeticRequest_valid_T_9 = or(_singleCycleArithmeticRequest_valid_T_5, _singleCycleArithmeticRequest_valid_T_8) @[core.scala 287:148]
    node _singleCycleArithmeticRequest_valid_T_10 = bits(prf.toExec.instruction, 25, 25) @[core.scala 287:211]
    node _singleCycleArithmeticRequest_valid_T_11 = bits(_singleCycleArithmeticRequest_valid_T_10, 0, 0) @[core.scala 287:216]
    node _singleCycleArithmeticRequest_valid_T_12 = eq(_singleCycleArithmeticRequest_valid_T_11, UInt<1>("h0")) @[core.scala 287:188]
    node _singleCycleArithmeticRequest_valid_T_13 = or(_singleCycleArithmeticRequest_valid_T_9, _singleCycleArithmeticRequest_valid_T_12) @[core.scala 287:185]
    node _singleCycleArithmeticRequest_valid_T_14 = and(_singleCycleArithmeticRequest_valid_T_3, _singleCycleArithmeticRequest_valid_T_13) @[core.scala 287:111]
    singleCycleArithmeticRequest.valid <= _singleCycleArithmeticRequest_valid_T_14 @[core.scala 287:38]
    singleCycleArithmeticRequest.branchMask <= prf.toExec.branchmask @[core.scala 288:43]
    singleCycleArithmeticRequest.instruction <= prf.toExec.instruction @[core.scala 289:44]
    singleCycleArithmeticRequest.prfDest <= prf.toExec.prfDest @[core.scala 290:40]
    singleCycleArithmeticRequest.robAddr <= prf.toExec.robAddr @[core.scala 291:40]
    node _singleCycleArithmeticRequest_rs1_T = bits(prf.toExec.instruction, 19, 15) @[core.scala 292:65]
    node _singleCycleArithmeticRequest_rs1_T_1 = orr(_singleCycleArithmeticRequest_rs1_T) @[core.scala 292:74]
    node _singleCycleArithmeticRequest_rs1_T_2 = eq(fwdFrom_0.prfDest, prf.toExec.rs1Addr) @[core.scala 293:50]
    node _singleCycleArithmeticRequest_rs1_T_3 = and(fwdFrom_0.valid, _singleCycleArithmeticRequest_rs1_T_2) @[core.scala 293:34]
    node _singleCycleArithmeticRequest_rs1_T_4 = eq(fwdFrom_1.prfDest, prf.toExec.rs1Addr) @[core.scala 293:50]
    node _singleCycleArithmeticRequest_rs1_T_5 = and(fwdFrom_1.valid, _singleCycleArithmeticRequest_rs1_T_4) @[core.scala 293:34]
    node _singleCycleArithmeticRequest_rs1_T_6 = eq(fwdFrom_2.prfDest, prf.toExec.rs1Addr) @[core.scala 293:50]
    node _singleCycleArithmeticRequest_rs1_T_7 = and(fwdFrom_2.valid, _singleCycleArithmeticRequest_rs1_T_6) @[core.scala 293:34]
    node _singleCycleArithmeticRequest_rs1_T_8 = mux(_singleCycleArithmeticRequest_rs1_T_7, fwdFrom_2.result, prf.toExec.rs1Data) @[Mux.scala 101:16]
    node _singleCycleArithmeticRequest_rs1_T_9 = mux(_singleCycleArithmeticRequest_rs1_T_5, fwdFrom_1.result, _singleCycleArithmeticRequest_rs1_T_8) @[Mux.scala 101:16]
    node _singleCycleArithmeticRequest_rs1_T_10 = mux(_singleCycleArithmeticRequest_rs1_T_3, fwdFrom_0.result, _singleCycleArithmeticRequest_rs1_T_9) @[Mux.scala 101:16]
    node _singleCycleArithmeticRequest_rs1_T_11 = mux(_singleCycleArithmeticRequest_rs1_T_1, _singleCycleArithmeticRequest_rs1_T_10, UInt<1>("h0")) @[core.scala 292:42]
    singleCycleArithmeticRequest.rs1 <= _singleCycleArithmeticRequest_rs1_T_11 @[core.scala 292:36]
    node _singleCycleArithmeticRequest_rs2_T = bits(prf.toExec.instruction, 5, 5) @[core.scala 295:65]
    node _singleCycleArithmeticRequest_rs2_T_1 = bits(_singleCycleArithmeticRequest_rs2_T, 0, 0) @[core.scala 295:69]
    node _singleCycleArithmeticRequest_rs2_T_2 = bits(prf.toExec.instruction, 24, 20) @[core.scala 295:103]
    node _singleCycleArithmeticRequest_rs2_T_3 = orr(_singleCycleArithmeticRequest_rs2_T_2) @[core.scala 295:112]
    node _singleCycleArithmeticRequest_rs2_T_4 = eq(fwdFrom_0.prfDest, prf.toExec.rs2Addr) @[core.scala 296:50]
    node _singleCycleArithmeticRequest_rs2_T_5 = and(fwdFrom_0.valid, _singleCycleArithmeticRequest_rs2_T_4) @[core.scala 296:34]
    node _singleCycleArithmeticRequest_rs2_T_6 = eq(fwdFrom_1.prfDest, prf.toExec.rs2Addr) @[core.scala 296:50]
    node _singleCycleArithmeticRequest_rs2_T_7 = and(fwdFrom_1.valid, _singleCycleArithmeticRequest_rs2_T_6) @[core.scala 296:34]
    node _singleCycleArithmeticRequest_rs2_T_8 = eq(fwdFrom_2.prfDest, prf.toExec.rs2Addr) @[core.scala 296:50]
    node _singleCycleArithmeticRequest_rs2_T_9 = and(fwdFrom_2.valid, _singleCycleArithmeticRequest_rs2_T_8) @[core.scala 296:34]
    node _singleCycleArithmeticRequest_rs2_T_10 = mux(_singleCycleArithmeticRequest_rs2_T_9, fwdFrom_2.result, prf.toExec.rs2Data) @[Mux.scala 101:16]
    node _singleCycleArithmeticRequest_rs2_T_11 = mux(_singleCycleArithmeticRequest_rs2_T_7, fwdFrom_1.result, _singleCycleArithmeticRequest_rs2_T_10) @[Mux.scala 101:16]
    node _singleCycleArithmeticRequest_rs2_T_12 = mux(_singleCycleArithmeticRequest_rs2_T_5, fwdFrom_0.result, _singleCycleArithmeticRequest_rs2_T_11) @[Mux.scala 101:16]
    node _singleCycleArithmeticRequest_rs2_T_13 = mux(_singleCycleArithmeticRequest_rs2_T_3, _singleCycleArithmeticRequest_rs2_T_12, UInt<1>("h0")) @[core.scala 295:80]
    node _singleCycleArithmeticRequest_rs2_T_14 = mux(_singleCycleArithmeticRequest_rs2_T_1, _singleCycleArithmeticRequest_rs2_T_13, arithmeticImm) @[core.scala 295:42]
    singleCycleArithmeticRequest.rs2 <= _singleCycleArithmeticRequest_rs2_T_14 @[core.scala 295:36]
    when branchOps.valid : @[core.scala 299:25]
      node _T_23 = and(prf.toExec.branchmask, branchOps.branchMask) @[core.scala 300:33]
      node _T_24 = orr(_T_23) @[core.scala 300:57]
      when _T_24 : @[core.scala 300:62]
        node _singleCycleArithmeticRequest_branchMask_T = xor(prf.toExec.branchmask, branchOps.branchMask) @[core.scala 301:72]
        singleCycleArithmeticRequest.branchMask <= _singleCycleArithmeticRequest_branchMask_T @[core.scala 301:47]
      node _T_25 = eq(branchOps.passed, UInt<1>("h0")) @[core.scala 303:10]
      node _T_26 = and(prf.toExec.branchmask, branchOps.branchMask) @[core.scala 303:54]
      node _T_27 = orr(_T_26) @[core.scala 303:78]
      node _T_28 = and(_T_25, _T_27) @[core.scala 303:28]
      when _T_28 : @[core.scala 303:83]
        singleCycleArithmeticRequest.valid <= UInt<1>("h0") @[core.scala 304:42]
    singleCycleArithmeticResponse.prfDest <= singleCycleArithmeticRequest.prfDest @[core.scala 309:41]
    singleCycleArithmeticResponse.result <= arithmeticResult @[core.scala 310:40]
    singleCycleArithmeticResponse.robAddr <= singleCycleArithmeticRequest.robAddr @[core.scala 311:41]
    singleCycleArithmeticResponse.valid <= singleCycleArithmeticRequest.valid @[core.scala 312:39]
    when branchOps.valid : @[core.scala 314:25]
      node _T_29 = eq(branchOps.passed, UInt<1>("h0")) @[core.scala 315:10]
      node _T_30 = and(branchOps.branchMask, singleCycleArithmeticRequest.branchMask) @[core.scala 315:53]
      node _T_31 = orr(_T_30) @[core.scala 315:96]
      node _T_32 = and(_T_29, _T_31) @[core.scala 315:28]
      when _T_32 : @[core.scala 315:101]
        singleCycleArithmeticResponse.valid <= UInt<1>("h0") @[core.scala 316:43]
    node _extnMRequest_valid_T = bits(prf.toExec.instruction, 6, 2) @[core.scala 321:68]
    node _extnMRequest_valid_T_1 = and(_extnMRequest_valid_T, UInt<5>("h1d")) @[core.scala 321:75]
    node _extnMRequest_valid_T_2 = eq(UInt<4>("hc"), _extnMRequest_valid_T_1) @[core.scala 321:75]
    node _extnMRequest_valid_T_3 = and(prf.toExec.valid, _extnMRequest_valid_T_2) @[core.scala 321:42]
    node _extnMRequest_valid_T_4 = bits(prf.toExec.instruction, 25, 25) @[core.scala 321:122]
    node _extnMRequest_valid_T_5 = bits(_extnMRequest_valid_T_4, 0, 0) @[core.scala 321:127]
    node _extnMRequest_valid_T_6 = and(_extnMRequest_valid_T_3, _extnMRequest_valid_T_5) @[core.scala 321:97]
    extnMRequest.valid <= _extnMRequest_valid_T_6 @[core.scala 321:22]
    extnMRequest.branchMask <= prf.toExec.branchmask @[core.scala 322:27]
    extnMRequest.instruction <= prf.toExec.instruction @[core.scala 323:28]
    when branchOps.valid : @[core.scala 324:25]
      node _T_33 = and(prf.toExec.branchmask, branchOps.branchMask) @[core.scala 325:33]
      node _T_34 = orr(_T_33) @[core.scala 325:57]
      when _T_34 : @[core.scala 325:62]
        node _extnMRequest_branchMask_T = xor(prf.toExec.branchmask, branchOps.branchMask) @[core.scala 326:56]
        extnMRequest.branchMask <= _extnMRequest_branchMask_T @[core.scala 326:31]
      node _T_35 = eq(branchOps.passed, UInt<1>("h0")) @[core.scala 328:10]
      node _T_36 = and(prf.toExec.branchmask, branchOps.branchMask) @[core.scala 328:54]
      node _T_37 = orr(_T_36) @[core.scala 328:78]
      node _T_38 = and(_T_35, _T_37) @[core.scala 328:28]
      when _T_38 : @[core.scala 328:83]
        extnMRequest.valid <= UInt<1>("h0") @[core.scala 329:26]
    extnMRequest.prfDest <= prf.toExec.prfDest @[core.scala 332:24]
    extnMRequest.robAddr <= prf.toExec.robAddr @[core.scala 333:24]
    node _extnMRequest_rs1_T = eq(fwdFrom_0.prfDest, prf.toExec.rs1Addr) @[core.scala 335:50]
    node _extnMRequest_rs1_T_1 = and(fwdFrom_0.valid, _extnMRequest_rs1_T) @[core.scala 335:34]
    node _extnMRequest_rs1_T_2 = eq(fwdFrom_1.prfDest, prf.toExec.rs1Addr) @[core.scala 335:50]
    node _extnMRequest_rs1_T_3 = and(fwdFrom_1.valid, _extnMRequest_rs1_T_2) @[core.scala 335:34]
    node _extnMRequest_rs1_T_4 = eq(fwdFrom_2.prfDest, prf.toExec.rs1Addr) @[core.scala 335:50]
    node _extnMRequest_rs1_T_5 = and(fwdFrom_2.valid, _extnMRequest_rs1_T_4) @[core.scala 335:34]
    node _extnMRequest_rs1_T_6 = mux(_extnMRequest_rs1_T_5, fwdFrom_2.result, prf.toExec.rs1Data) @[Mux.scala 101:16]
    node _extnMRequest_rs1_T_7 = mux(_extnMRequest_rs1_T_3, fwdFrom_1.result, _extnMRequest_rs1_T_6) @[Mux.scala 101:16]
    node _extnMRequest_rs1_T_8 = mux(_extnMRequest_rs1_T_1, fwdFrom_0.result, _extnMRequest_rs1_T_7) @[Mux.scala 101:16]
    extnMRequest.rs1 <= _extnMRequest_rs1_T_8 @[core.scala 334:20]
    node _extnMRequest_rs2_T = eq(fwdFrom_0.prfDest, prf.toExec.rs2Addr) @[core.scala 338:50]
    node _extnMRequest_rs2_T_1 = and(fwdFrom_0.valid, _extnMRequest_rs2_T) @[core.scala 338:34]
    node _extnMRequest_rs2_T_2 = eq(fwdFrom_1.prfDest, prf.toExec.rs2Addr) @[core.scala 338:50]
    node _extnMRequest_rs2_T_3 = and(fwdFrom_1.valid, _extnMRequest_rs2_T_2) @[core.scala 338:34]
    node _extnMRequest_rs2_T_4 = eq(fwdFrom_2.prfDest, prf.toExec.rs2Addr) @[core.scala 338:50]
    node _extnMRequest_rs2_T_5 = and(fwdFrom_2.valid, _extnMRequest_rs2_T_4) @[core.scala 338:34]
    node _extnMRequest_rs2_T_6 = mux(_extnMRequest_rs2_T_5, fwdFrom_2.result, prf.toExec.rs2Data) @[Mux.scala 101:16]
    node _extnMRequest_rs2_T_7 = mux(_extnMRequest_rs2_T_3, fwdFrom_1.result, _extnMRequest_rs2_T_6) @[Mux.scala 101:16]
    node _extnMRequest_rs2_T_8 = mux(_extnMRequest_rs2_T_1, fwdFrom_0.result, _extnMRequest_rs2_T_7) @[Mux.scala 101:16]
    extnMRequest.rs2 <= _extnMRequest_rs2_T_8 @[core.scala 337:20]
    node _partialMuls32x32_T = bits(extnMRequest.rs1, 31, 0) @[core.scala 342:21]
    node _partialMuls32x32_T_1 = bits(extnMRequest.rs2, 31, 0) @[core.scala 342:47]
    node partialMuls32x32_0 = mul(_partialMuls32x32_T, _partialMuls32x32_T_1) @[core.scala 342:29]
    node _partialMuls32x32_T_2 = bits(extnMRequest.rs1, 63, 32) @[core.scala 343:21]
    node _partialMuls32x32_T_3 = bits(extnMRequest.rs2, 31, 0) @[core.scala 343:48]
    node partialMuls32x32_1 = mul(_partialMuls32x32_T_2, _partialMuls32x32_T_3) @[core.scala 343:30]
    node _partialMuls32x32_T_4 = bits(extnMRequest.rs1, 63, 63) @[core.scala 344:25]
    node _partialMuls32x32_T_5 = bits(extnMRequest.rs1, 63, 32) @[core.scala 344:47]
    node _partialMuls32x32_T_6 = cat(_partialMuls32x32_T_4, _partialMuls32x32_T_5) @[Cat.scala 33:92]
    node _partialMuls32x32_T_7 = asSInt(_partialMuls32x32_T_6) @[core.scala 344:57]
    node _partialMuls32x32_T_8 = bits(extnMRequest.rs2, 31, 0) @[core.scala 344:96]
    node _partialMuls32x32_T_9 = cat(UInt<1>("h0"), _partialMuls32x32_T_8) @[Cat.scala 33:92]
    node _partialMuls32x32_T_10 = asSInt(_partialMuls32x32_T_9) @[core.scala 344:105]
    node partialMuls32x32_2 = mul(_partialMuls32x32_T_7, _partialMuls32x32_T_10) @[core.scala 344:64]
    node _partialMuls32x32_T_11 = bits(extnMRequest.rs1, 31, 0) @[core.scala 345:21]
    node _partialMuls32x32_T_12 = bits(extnMRequest.rs2, 63, 32) @[core.scala 345:47]
    node partialMuls32x32_3 = mul(_partialMuls32x32_T_11, _partialMuls32x32_T_12) @[core.scala 345:29]
    node _partialMuls32x32_T_13 = bits(extnMRequest.rs1, 31, 0) @[core.scala 346:35]
    node _partialMuls32x32_T_14 = cat(UInt<1>("h0"), _partialMuls32x32_T_13) @[Cat.scala 33:92]
    node _partialMuls32x32_T_15 = asSInt(_partialMuls32x32_T_14) @[core.scala 346:44]
    node _partialMuls32x32_T_16 = bits(extnMRequest.rs2, 63, 63) @[core.scala 346:73]
    node _partialMuls32x32_T_17 = bits(extnMRequest.rs2, 63, 32) @[core.scala 346:95]
    node _partialMuls32x32_T_18 = cat(_partialMuls32x32_T_16, _partialMuls32x32_T_17) @[Cat.scala 33:92]
    node _partialMuls32x32_T_19 = asSInt(_partialMuls32x32_T_18) @[core.scala 346:105]
    node partialMuls32x32_4 = mul(_partialMuls32x32_T_15, _partialMuls32x32_T_19) @[core.scala 346:51]
    node _partialMuls32x32_T_20 = bits(extnMRequest.rs1, 63, 32) @[core.scala 347:21]
    node _partialMuls32x32_T_21 = bits(extnMRequest.rs2, 63, 32) @[core.scala 347:48]
    node partialMuls32x32_5 = mul(_partialMuls32x32_T_20, _partialMuls32x32_T_21) @[core.scala 347:30]
    node _partialMuls32x32_T_22 = bits(extnMRequest.rs1, 63, 63) @[core.scala 348:25]
    node _partialMuls32x32_T_23 = bits(extnMRequest.rs1, 63, 32) @[core.scala 348:47]
    node _partialMuls32x32_T_24 = cat(_partialMuls32x32_T_22, _partialMuls32x32_T_23) @[Cat.scala 33:92]
    node _partialMuls32x32_T_25 = asSInt(_partialMuls32x32_T_24) @[core.scala 348:57]
    node _partialMuls32x32_T_26 = bits(extnMRequest.rs2, 63, 32) @[core.scala 348:96]
    node _partialMuls32x32_T_27 = cat(UInt<1>("h0"), _partialMuls32x32_T_26) @[Cat.scala 33:92]
    node _partialMuls32x32_T_28 = asSInt(_partialMuls32x32_T_27) @[core.scala 348:106]
    node partialMuls32x32_6 = mul(_partialMuls32x32_T_25, _partialMuls32x32_T_28) @[core.scala 348:64]
    node _partialMuls32x32_T_29 = bits(extnMRequest.rs1, 63, 32) @[core.scala 349:21]
    node _partialMuls32x32_T_30 = asSInt(_partialMuls32x32_T_29) @[core.scala 349:30]
    node _partialMuls32x32_T_31 = bits(extnMRequest.rs2, 63, 32) @[core.scala 349:55]
    node _partialMuls32x32_T_32 = asSInt(_partialMuls32x32_T_31) @[core.scala 349:64]
    node partialMuls32x32_7 = mul(_partialMuls32x32_T_30, _partialMuls32x32_T_32) @[core.scala 349:37]
    node _partialMuls32x32_T_33 = bits(extnMRequest.rs1, 31, 0) @[core.scala 350:21]
    node _partialMuls32x32_T_34 = asSInt(_partialMuls32x32_T_33) @[core.scala 350:29]
    node _partialMuls32x32_T_35 = bits(extnMRequest.rs2, 31, 0) @[core.scala 350:54]
    node _partialMuls32x32_T_36 = asSInt(_partialMuls32x32_T_35) @[core.scala 350:62]
    node partialMuls32x32_8 = mul(_partialMuls32x32_T_34, _partialMuls32x32_T_36) @[core.scala 350:36]
    reg narrowMuls : UInt<64>[9], clock with :
      reset => (UInt<1>("h0"), narrowMuls) @[core.scala 352:23]
    node _T_39 = asUInt(partialMuls32x32_2) @[core.scala 353:41]
    node _T_40 = asUInt(partialMuls32x32_4) @[core.scala 353:41]
    node _T_41 = asUInt(partialMuls32x32_6) @[core.scala 353:41]
    node _T_42 = asUInt(partialMuls32x32_7) @[core.scala 353:41]
    node _T_43 = asUInt(partialMuls32x32_8) @[core.scala 353:41]
    narrowMuls[0] <= partialMuls32x32_0 @[core.scala 353:80]
    narrowMuls[1] <= partialMuls32x32_1 @[core.scala 353:80]
    narrowMuls[2] <= _T_39 @[core.scala 353:80]
    narrowMuls[3] <= partialMuls32x32_3 @[core.scala 353:80]
    narrowMuls[4] <= _T_40 @[core.scala 353:80]
    narrowMuls[5] <= partialMuls32x32_5 @[core.scala 353:80]
    narrowMuls[6] <= _T_41 @[core.scala 353:80]
    narrowMuls[7] <= _T_42 @[core.scala 353:80]
    narrowMuls[8] <= _T_43 @[core.scala 353:80]
    node _muls_0_T = cat(narrowMuls[1], UInt<32>("h0")) @[Cat.scala 33:92]
    node _muls_0_T_1 = add(narrowMuls[0], _muls_0_T) @[core.scala 356:29]
    node _muls_0_T_2 = tail(_muls_0_T_1, 1) @[core.scala 356:29]
    muls[0] <= _muls_0_T_2 @[core.scala 356:11]
    node _muls_1_T = cat(narrowMuls[5], UInt<32>("h0")) @[Cat.scala 33:92]
    node _muls_1_T_1 = add(narrowMuls[3], _muls_1_T) @[core.scala 357:28]
    node _muls_1_T_2 = tail(_muls_1_T_1, 1) @[core.scala 357:28]
    muls[1] <= _muls_1_T_2 @[core.scala 357:11]
    node _muls_2_T = cat(narrowMuls[6], UInt<32>("h0")) @[Cat.scala 33:92]
    node _muls_2_T_1 = add(narrowMuls[3], _muls_2_T) @[core.scala 358:28]
    node _muls_2_T_2 = tail(_muls_2_T_1, 1) @[core.scala 358:28]
    muls[2] <= _muls_2_T_2 @[core.scala 358:11]
    node _muls_3_T = bits(narrowMuls[4], 63, 63) @[core.scala 359:40]
    node _muls_3_T_1 = bits(_muls_3_T, 0, 0) @[Bitwise.scala 77:15]
    node _muls_3_T_2 = mux(_muls_3_T_1, UInt<32>("hffffffff"), UInt<32>("h0")) @[Bitwise.scala 77:12]
    node _muls_3_T_3 = cat(_muls_3_T_2, narrowMuls[4]) @[Cat.scala 33:92]
    node _muls_3_T_4 = cat(narrowMuls[7], UInt<32>("h0")) @[Cat.scala 33:92]
    node _muls_3_T_5 = add(_muls_3_T_3, _muls_3_T_4) @[core.scala 359:62]
    node _muls_3_T_6 = tail(_muls_3_T_5, 1) @[core.scala 359:62]
    muls[3] <= _muls_3_T_6 @[core.scala 359:11]
    node _muls_4_T = cat(narrowMuls[2], UInt<32>("h0")) @[Cat.scala 33:92]
    node _muls_4_T_1 = add(narrowMuls[0], _muls_4_T) @[core.scala 360:28]
    node _muls_4_T_2 = tail(_muls_4_T_1, 1) @[core.scala 360:28]
    muls[4] <= _muls_4_T_2 @[core.scala 360:11]
    muls[5] <= narrowMuls[8] @[core.scala 361:11]
    reg extnResponseInstruction : UInt<32>, clock with :
      reset => (UInt<1>("h0"), extnResponseInstruction) @[core.scala 363:36]
    extnMResponse.prfDest <= extnMServicing.prfDest @[core.scala 365:25]
    node _extnMResponse_result_T = bits(extnMServicing.instruction, 3, 3) @[core.scala 366:57]
    node _extnMResponse_result_T_1 = bits(_extnMResponse_result_T, 0, 0) @[core.scala 366:61]
    node _extnMResponse_result_T_2 = bits(muls[5], 31, 31) @[core.scala 366:89]
    node _extnMResponse_result_T_3 = bits(_extnMResponse_result_T_2, 0, 0) @[Bitwise.scala 77:15]
    node _extnMResponse_result_T_4 = mux(_extnMResponse_result_T_3, UInt<32>("hffffffff"), UInt<32>("h0")) @[Bitwise.scala 77:12]
    node _extnMResponse_result_T_5 = bits(muls[5], 31, 0) @[core.scala 366:103]
    node _extnMResponse_result_T_6 = cat(_extnMResponse_result_T_4, _extnMResponse_result_T_5) @[Cat.scala 33:92]
    node _extnMResponse_result_T_7 = bits(muls[4], 95, 95) @[core.scala 368:26]
    node _extnMResponse_result_T_8 = bits(_extnMResponse_result_T_7, 0, 0) @[Bitwise.scala 77:15]
    node _extnMResponse_result_T_9 = mux(_extnMResponse_result_T_8, UInt<32>("hffffffff"), UInt<32>("h0")) @[Bitwise.scala 77:12]
    node _extnMResponse_result_T_10 = cat(_extnMResponse_result_T_9, muls[4]) @[Cat.scala 33:92]
    node _extnMResponse_result_T_11 = cat(muls[3], UInt<32>("h0")) @[Cat.scala 33:92]
    node _extnMResponse_result_T_12 = add(_extnMResponse_result_T_10, _extnMResponse_result_T_11) @[core.scala 368:42]
    node _extnMResponse_result_T_13 = tail(_extnMResponse_result_T_12, 1) @[core.scala 368:42]
    node _extnMResponse_result_T_14 = bits(_extnMResponse_result_T_13, 63, 0) @[core.scala 368:68]
    node _extnMResponse_result_T_15 = bits(muls[4], 95, 95) @[core.scala 369:26]
    node _extnMResponse_result_T_16 = bits(_extnMResponse_result_T_15, 0, 0) @[Bitwise.scala 77:15]
    node _extnMResponse_result_T_17 = mux(_extnMResponse_result_T_16, UInt<32>("hffffffff"), UInt<32>("h0")) @[Bitwise.scala 77:12]
    node _extnMResponse_result_T_18 = cat(_extnMResponse_result_T_17, muls[4]) @[Cat.scala 33:92]
    node _extnMResponse_result_T_19 = cat(muls[3], UInt<32>("h0")) @[Cat.scala 33:92]
    node _extnMResponse_result_T_20 = add(_extnMResponse_result_T_18, _extnMResponse_result_T_19) @[core.scala 369:42]
    node _extnMResponse_result_T_21 = tail(_extnMResponse_result_T_20, 1) @[core.scala 369:42]
    node _extnMResponse_result_T_22 = bits(_extnMResponse_result_T_21, 127, 64) @[core.scala 369:68]
    node _extnMResponse_result_T_23 = bits(muls[4], 95, 95) @[core.scala 370:26]
    node _extnMResponse_result_T_24 = bits(_extnMResponse_result_T_23, 0, 0) @[Bitwise.scala 77:15]
    node _extnMResponse_result_T_25 = mux(_extnMResponse_result_T_24, UInt<32>("hffffffff"), UInt<32>("h0")) @[Bitwise.scala 77:12]
    node _extnMResponse_result_T_26 = cat(_extnMResponse_result_T_25, muls[4]) @[Cat.scala 33:92]
    node _extnMResponse_result_T_27 = cat(muls[2], UInt<32>("h0")) @[Cat.scala 33:92]
    node _extnMResponse_result_T_28 = add(_extnMResponse_result_T_26, _extnMResponse_result_T_27) @[core.scala 370:42]
    node _extnMResponse_result_T_29 = tail(_extnMResponse_result_T_28, 1) @[core.scala 370:42]
    node _extnMResponse_result_T_30 = bits(_extnMResponse_result_T_29, 127, 64) @[core.scala 370:68]
    node _extnMResponse_result_T_31 = cat(muls[1], UInt<32>("h0")) @[Cat.scala 33:92]
    node _extnMResponse_result_T_32 = add(muls[0], _extnMResponse_result_T_31) @[core.scala 371:14]
    node _extnMResponse_result_T_33 = tail(_extnMResponse_result_T_32, 1) @[core.scala 371:14]
    node _extnMResponse_result_T_34 = bits(_extnMResponse_result_T_33, 127, 64) @[core.scala 371:40]
    wire _extnMResponse_result_WIRE : UInt<64>[4] @[core.scala 367:10]
    _extnMResponse_result_WIRE[0] <= _extnMResponse_result_T_14 @[core.scala 367:10]
    _extnMResponse_result_WIRE[1] <= _extnMResponse_result_T_22 @[core.scala 367:10]
    _extnMResponse_result_WIRE[2] <= _extnMResponse_result_T_30 @[core.scala 367:10]
    _extnMResponse_result_WIRE[3] <= _extnMResponse_result_T_34 @[core.scala 367:10]
    node _extnMResponse_result_T_35 = bits(extnMServicing.instruction, 13, 12) @[core.scala 372:31]
    node _extnMResponse_result_T_36 = mux(_extnMResponse_result_T_1, _extnMResponse_result_T_6, _extnMResponse_result_WIRE[_extnMResponse_result_T_35]) @[core.scala 366:30]
    extnMResponse.result <= _extnMResponse_result_T_36 @[core.scala 366:24]
    node _T_44 = bits(extnMServicing.instruction, 24, 20) @[core.scala 373:60]
    node _T_45 = orr(_T_44) @[core.scala 373:69]
    node _T_46 = eq(_T_45, UInt<1>("h0")) @[core.scala 373:33]
    node _T_47 = bits(extnMServicing.instruction, 19, 15) @[core.scala 373:103]
    node _T_48 = orr(_T_47) @[core.scala 373:112]
    node _T_49 = eq(_T_48, UInt<1>("h0")) @[core.scala 373:76]
    node _T_50 = or(_T_46, _T_49) @[core.scala 373:73]
    node _T_51 = and(extnMServicing.valid, _T_50) @[core.scala 373:29]
    when _T_51 : @[core.scala 373:118]
      extnMResponse.result <= UInt<1>("h0") @[core.scala 374:26]
    extnMResponse.robAddr <= extnMServicing.robAddr @[core.scala 376:25]
    extnMResponse.valid <= extnMServicing.valid @[core.scala 377:23]
    extnResponseInstruction <= extnMServicing.instruction @[core.scala 378:27]
    when branchOps.valid : @[core.scala 380:25]
      node _T_52 = xor(prf.toExec.branchmask, branchOps.branchMask) @[core.scala 381:103]
      node _T_53 = and(prf.toExec.branchmask, branchOps.branchMask) @[core.scala 381:130]
      node _T_54 = orr(_T_53) @[core.scala 381:154]
      node _T_55 = xor(extnMRequest.branchMask, branchOps.branchMask) @[core.scala 381:103]
      node _T_56 = and(extnMRequest.branchMask, branchOps.branchMask) @[core.scala 381:130]
      node _T_57 = orr(_T_56) @[core.scala 381:154]
      node _T_58 = xor(extnMPartialServicing.branchMask, branchOps.branchMask) @[core.scala 381:103]
      node _T_59 = and(extnMPartialServicing.branchMask, branchOps.branchMask) @[core.scala 381:130]
      node _T_60 = orr(_T_59) @[core.scala 381:154]
      when _T_54 : @[core.scala 383:73]
        extnMRequest.branchMask <= _T_52 @[core.scala 384:11]
      when _T_57 : @[core.scala 383:73]
        extnMPartialServicing.branchMask <= _T_55 @[core.scala 384:11]
      when _T_60 : @[core.scala 383:73]
        extnMServicing.branchMask <= _T_58 @[core.scala 384:11]
      node _T_61 = eq(branchOps.passed, UInt<1>("h0")) @[core.scala 386:10]
      when _T_61 : @[core.scala 386:29]
        node _T_62 = and(prf.toExec.branchmask, branchOps.branchMask) @[core.scala 387:93]
        node _T_63 = and(extnMRequest.branchMask, branchOps.branchMask) @[core.scala 387:93]
        node _T_64 = and(extnMServicing.branchMask, branchOps.branchMask) @[core.scala 387:93]
        node _T_65 = orr(_T_62) @[core.scala 387:123]
        node _T_66 = orr(_T_63) @[core.scala 387:123]
        node _T_67 = orr(_T_64) @[core.scala 387:123]
        node _T_68 = and(_T_65, prf.toExec.valid) @[core.scala 389:80]
        when _T_68 : @[core.scala 389:101]
          extnMRequest.valid <= UInt<1>("h0") @[core.scala 389:107]
        node _T_69 = and(_T_66, extnMRequest.valid) @[core.scala 389:80]
        when _T_69 : @[core.scala 389:101]
          extnMServicing.valid <= UInt<1>("h0") @[core.scala 389:107]
        node _T_70 = and(_T_67, extnMServicing.valid) @[core.scala 389:80]
        when _T_70 : @[core.scala 389:101]
          extnMResponse.valid <= UInt<1>("h0") @[core.scala 389:107]
    reg divBranchMask : UInt<5>, clock with :
      reset => (UInt<1>("h0"), divBranchMask) @[core.scala 393:26]
    node _T_71 = bits(scheduler.release.instruction, 25, 25) @[core.scala 395:37]
    node _T_72 = bits(scheduler.release.instruction, 14, 14) @[core.scala 395:72]
    node _T_73 = bits(scheduler.release.instruction, 6, 4) @[core.scala 395:107]
    node hi = cat(_T_71, _T_72) @[Cat.scala 33:92]
    node _T_74 = cat(hi, _T_73) @[Cat.scala 33:92]
    node _T_75 = eq(_T_74, UInt<5>("h1b")) @[core.scala 395:115]
    node _T_76 = and(scheduler.release.fired, _T_75) @[core.scala 394:32]
    when _T_76 : @[core.scala 395:132]
      node _mExtensionReady_T = and(branchOps.branchMask, scheduler.release.branchMask) @[core.scala 397:77]
      node _mExtensionReady_T_1 = orr(_mExtensionReady_T) @[core.scala 397:109]
      node _mExtensionReady_T_2 = and(branchOps.valid, _mExtensionReady_T_1) @[core.scala 397:52]
      node _mExtensionReady_T_3 = eq(branchOps.passed, UInt<1>("h0")) @[core.scala 397:116]
      node _mExtensionReady_T_4 = and(_mExtensionReady_T_2, _mExtensionReady_T_3) @[core.scala 397:113]
      node _mExtensionReady_T_5 = or(UInt<1>("h0"), _mExtensionReady_T_4) @[core.scala 397:32]
      mExtensionReady <= _mExtensionReady_T_5 @[core.scala 397:21]
      node _divBranchMask_T = and(branchOps.branchMask, scheduler.release.branchMask) @[core.scala 399:67]
      node _divBranchMask_T_1 = orr(_divBranchMask_T) @[core.scala 399:99]
      node _divBranchMask_T_2 = and(branchOps.valid, _divBranchMask_T_1) @[core.scala 399:42]
      node _divBranchMask_T_3 = xor(scheduler.release.branchMask, branchOps.branchMask) @[core.scala 399:133]
      node _divBranchMask_T_4 = mux(_divBranchMask_T_2, _divBranchMask_T_3, scheduler.release.branchMask) @[core.scala 399:25]
      divBranchMask <= _divBranchMask_T_4 @[core.scala 399:19]
    node _T_77 = eq(mExtensionReady, UInt<1>("h0")) @[core.scala 401:8]
    when _T_77 : @[core.scala 401:26]
      node _T_78 = and(branchOps.branchMask, divBranchMask) @[core.scala 402:51]
      node _T_79 = orr(_T_78) @[core.scala 402:68]
      node _T_80 = and(branchOps.valid, _T_79) @[core.scala 402:26]
      when _T_80 : @[core.scala 402:73]
        when branchOps.passed : @[core.scala 403:30]
          node _divBranchMask_T_5 = xor(divBranchMask, branchOps.branchMask) @[core.scala 404:40]
          divBranchMask <= _divBranchMask_T_5 @[core.scala 404:23]
        node _T_81 = eq(branchOps.passed, UInt<1>("h0")) @[core.scala 406:12]
        when _T_81 : @[core.scala 406:31]
          mExtensionReady <= UInt<1>("h1") @[core.scala 407:25]
    node _T_82 = bits(extnResponseInstruction, 14, 14) @[core.scala 411:54]
    node _T_83 = bits(_T_82, 0, 0) @[core.scala 411:59]
    node _T_84 = and(extnMResponse.valid, _T_83) @[core.scala 411:28]
    when _T_84 : @[core.scala 411:67]
      mExtensionReady <= UInt<1>("h1") @[core.scala 411:85]
    node _division_remainder_T = bits(division.remainder, 63, 0) @[core.scala 413:47]
    node _division_remainder_T_1 = bits(division.quotient, 64, 64) @[core.scala 413:73]
    node _division_remainder_T_2 = cat(_division_remainder_T, _division_remainder_T_1) @[Cat.scala 33:92]
    node _division_remainder_T_3 = bits(division.remainder, 64, 64) @[core.scala 413:103]
    node _division_remainder_T_4 = bits(_division_remainder_T_3, 0, 0) @[core.scala 413:108]
    node _division_remainder_T_5 = sub(UInt<1>("h0"), division.divisor) @[core.scala 413:134]
    node _division_remainder_T_6 = tail(_division_remainder_T_5, 1) @[core.scala 413:134]
    node _division_remainder_T_7 = mux(_division_remainder_T_4, division.divisor, _division_remainder_T_6) @[core.scala 413:84]
    node _division_remainder_T_8 = add(_division_remainder_T_2, _division_remainder_T_7) @[core.scala 413:79]
    node _division_remainder_T_9 = tail(_division_remainder_T_8, 1) @[core.scala 413:79]
    division.remainder <= _division_remainder_T_9 @[core.scala 413:22]
    node _division_quotient_T = bits(division.quotient, 63, 0) @[core.scala 414:45]
    node _division_quotient_T_1 = bits(division.remainder, 63, 0) @[core.scala 414:78]
    node _division_quotient_T_2 = bits(division.quotient, 64, 64) @[core.scala 414:104]
    node _division_quotient_T_3 = cat(_division_quotient_T_1, _division_quotient_T_2) @[Cat.scala 33:92]
    node _division_quotient_T_4 = bits(division.remainder, 64, 64) @[core.scala 414:134]
    node _division_quotient_T_5 = bits(_division_quotient_T_4, 0, 0) @[core.scala 414:139]
    node _division_quotient_T_6 = sub(UInt<1>("h0"), division.divisor) @[core.scala 414:165]
    node _division_quotient_T_7 = tail(_division_quotient_T_6, 1) @[core.scala 414:165]
    node _division_quotient_T_8 = mux(_division_quotient_T_5, division.divisor, _division_quotient_T_7) @[core.scala 414:115]
    node _division_quotient_T_9 = add(_division_quotient_T_3, _division_quotient_T_8) @[core.scala 414:110]
    node _division_quotient_T_10 = tail(_division_quotient_T_9, 1) @[core.scala 414:110]
    node _division_quotient_T_11 = bits(_division_quotient_T_10, 64, 64) @[core.scala 414:185]
    node _division_quotient_T_12 = not(_division_quotient_T_11) @[core.scala 414:54]
    node _division_quotient_T_13 = cat(_division_quotient_T, _division_quotient_T_12) @[Cat.scala 33:92]
    division.quotient <= _division_quotient_T_13 @[core.scala 414:21]
    node _division_counter_T = sub(division.counter, UInt<1>("h1")) @[core.scala 415:40]
    node _division_counter_T_1 = tail(_division_counter_T, 1) @[core.scala 415:40]
    division.counter <= _division_counter_T_1 @[core.scala 415:20]
    node _T_85 = bits(extnMRequest.instruction, 14, 14) @[core.scala 417:54]
    node _T_86 = bits(_T_85, 0, 0) @[core.scala 417:59]
    node _T_87 = and(extnMRequest.valid, _T_86) @[core.scala 417:27]
    when _T_87 : @[core.scala 417:67]
      division.counter <= UInt<7>("h41") @[core.scala 418:22]
      division.divisor <= extnMRequest.rs2 @[core.scala 419:22]
      division.quotient <= extnMRequest.rs1 @[core.scala 420:23]
      node _T_88 = bits(extnMRequest.instruction, 3, 3) @[core.scala 421:34]
      node _T_89 = bits(_T_88, 0, 0) @[core.scala 421:38]
      when _T_89 : @[core.scala 421:46]
        node _division_divisor_T = bits(extnMRequest.rs2, 31, 0) @[core.scala 422:58]
        node _division_divisor_T_1 = cat(UInt<33>("h0"), _division_divisor_T) @[Cat.scala 33:92]
        division.divisor <= _division_divisor_T_1 @[core.scala 422:24]
        node _division_quotient_T_14 = bits(extnMRequest.rs1, 31, 0) @[core.scala 423:59]
        node _division_quotient_T_15 = cat(UInt<33>("h0"), _division_quotient_T_14) @[Cat.scala 33:92]
        division.quotient <= _division_quotient_T_15 @[core.scala 423:25]
      division.remainder <= UInt<1>("h0") @[core.scala 425:24]
      division.request <= extnMRequest @[core.scala 426:22]
      division.resultNegative <= UInt<1>("h0") @[core.scala 427:29]
      node _T_90 = bits(extnMRequest.instruction, 12, 12) @[core.scala 428:35]
      node _T_91 = bits(_T_90, 0, 0) @[core.scala 428:40]
      node _T_92 = eq(_T_91, UInt<1>("h0")) @[core.scala 428:10]
      when _T_92 : @[core.scala 428:47]
        node _division_resultNegative_T = bits(extnMRequest.rs1, 63, 63) @[core.scala 429:50]
        node _division_resultNegative_T_1 = bits(_division_resultNegative_T, 0, 0) @[core.scala 429:55]
        node _division_resultNegative_T_2 = bits(extnMRequest.rs2, 63, 63) @[core.scala 429:80]
        node _division_resultNegative_T_3 = bits(_division_resultNegative_T_2, 0, 0) @[core.scala 429:85]
        node _division_resultNegative_T_4 = xor(_division_resultNegative_T_1, _division_resultNegative_T_3) @[core.scala 429:62]
        division.resultNegative <= _division_resultNegative_T_4 @[core.scala 429:31]
        node _T_93 = bits(extnMRequest.rs1, 63, 63) @[core.scala 430:28]
        node _T_94 = bits(_T_93, 0, 0) @[core.scala 430:33]
        when _T_94 : @[core.scala 430:41]
          node _division_quotient_T_16 = sub(UInt<1>("h0"), extnMRequest.rs1) @[core.scala 430:79]
          node _division_quotient_T_17 = tail(_division_quotient_T_16, 1) @[core.scala 430:79]
          node _division_quotient_T_18 = bits(_division_quotient_T_17, 63, 0) @[core.scala 430:98]
          node _division_quotient_T_19 = cat(UInt<1>("h0"), _division_quotient_T_18) @[Cat.scala 33:92]
          division.quotient <= _division_quotient_T_19 @[core.scala 430:61]
        node _T_95 = bits(extnMRequest.rs2, 63, 63) @[core.scala 431:28]
        node _T_96 = bits(_T_95, 0, 0) @[core.scala 431:33]
        when _T_96 : @[core.scala 431:41]
          node _division_divisor_T_2 = sub(UInt<1>("h0"), extnMRequest.rs2) @[core.scala 431:78]
          node _division_divisor_T_3 = tail(_division_divisor_T_2, 1) @[core.scala 431:78]
          node _division_divisor_T_4 = bits(_division_divisor_T_3, 63, 0) @[core.scala 431:97]
          node _division_divisor_T_5 = cat(UInt<1>("h0"), _division_divisor_T_4) @[Cat.scala 33:92]
          division.divisor <= _division_divisor_T_5 @[core.scala 431:60]
        node _T_97 = bits(extnMRequest.instruction, 3, 3) @[core.scala 432:36]
        node _T_98 = bits(_T_97, 0, 0) @[core.scala 432:40]
        when _T_98 : @[core.scala 432:48]
          node _T_99 = bits(extnMRequest.rs1, 31, 31) @[core.scala 433:30]
          node _T_100 = bits(_T_99, 0, 0) @[core.scala 433:35]
          when _T_100 : @[core.scala 433:43]
            node _division_quotient_T_20 = bits(extnMRequest.rs1, 31, 0) @[core.scala 433:100]
            node _division_quotient_T_21 = sub(UInt<1>("h0"), _division_quotient_T_20) @[core.scala 433:82]
            node _division_quotient_T_22 = tail(_division_quotient_T_21, 1) @[core.scala 433:82]
            node _division_quotient_T_23 = bits(_division_quotient_T_22, 31, 0) @[core.scala 433:108]
            node _division_quotient_T_24 = cat(UInt<33>("h0"), _division_quotient_T_23) @[Cat.scala 33:92]
            division.quotient <= _division_quotient_T_24 @[core.scala 433:63]
          node _T_101 = bits(extnMRequest.rs2, 31, 31) @[core.scala 434:30]
          node _T_102 = bits(_T_101, 0, 0) @[core.scala 434:35]
          when _T_102 : @[core.scala 434:43]
            node _division_divisor_T_6 = bits(extnMRequest.rs2, 31, 0) @[core.scala 434:99]
            node _division_divisor_T_7 = sub(UInt<1>("h0"), _division_divisor_T_6) @[core.scala 434:81]
            node _division_divisor_T_8 = tail(_division_divisor_T_7, 1) @[core.scala 434:81]
            node _division_divisor_T_9 = bits(_division_divisor_T_8, 31, 0) @[core.scala 434:107]
            node _division_divisor_T_10 = cat(UInt<33>("h0"), _division_divisor_T_9) @[Cat.scala 33:92]
            division.divisor <= _division_divisor_T_10 @[core.scala 434:62]
    node _T_103 = orr(division.counter) @[core.scala 439:52]
    node _T_104 = eq(_T_103, UInt<1>("h0")) @[core.scala 439:34]
    node _T_105 = and(division.request.valid, _T_104) @[core.scala 439:31]
    when _T_105 : @[core.scala 439:57]
      extnMResponse.prfDest <= division.request.prfDest @[core.scala 440:27]
      node _extnMResponse_result_quotient32_T = bits(division.request.rs1, 31, 31) @[core.scala 442:49]
      node _extnMResponse_result_quotient32_T_1 = bits(_extnMResponse_result_quotient32_T, 0, 0) @[core.scala 442:54]
      node _extnMResponse_result_quotient32_T_2 = bits(division.request.rs2, 31, 31) @[core.scala 442:83]
      node _extnMResponse_result_quotient32_T_3 = bits(_extnMResponse_result_quotient32_T_2, 0, 0) @[core.scala 442:88]
      node _extnMResponse_result_quotient32_T_4 = xor(_extnMResponse_result_quotient32_T_1, _extnMResponse_result_quotient32_T_3) @[core.scala 442:61]
      node _extnMResponse_result_quotient32_T_5 = andr(division.quotient) @[core.scala 442:118]
      node _extnMResponse_result_quotient32_T_6 = eq(_extnMResponse_result_quotient32_T_5, UInt<1>("h0")) @[core.scala 442:99]
      node _extnMResponse_result_quotient32_T_7 = and(_extnMResponse_result_quotient32_T_4, _extnMResponse_result_quotient32_T_6) @[core.scala 442:96]
      node _extnMResponse_result_quotient32_T_8 = sub(UInt<1>("h0"), division.quotient) @[core.scala 442:125]
      node _extnMResponse_result_quotient32_T_9 = tail(_extnMResponse_result_quotient32_T_8, 1) @[core.scala 442:125]
      node _extnMResponse_result_quotient32_T_10 = bits(_extnMResponse_result_quotient32_T_9, 31, 0) @[core.scala 442:145]
      node _extnMResponse_result_quotient32_T_11 = bits(division.quotient, 31, 0) @[core.scala 442:171]
      node extnMResponse_result_quotient32 = mux(_extnMResponse_result_quotient32_T_7, _extnMResponse_result_quotient32_T_10, _extnMResponse_result_quotient32_T_11) @[core.scala 442:27]
      node _extnMResponse_result_remainder64Unsigned_T = bits(division.remainder, 64, 64) @[core.scala 443:55]
      node _extnMResponse_result_remainder64Unsigned_T_1 = bits(_extnMResponse_result_remainder64Unsigned_T, 0, 0) @[core.scala 443:60]
      node _extnMResponse_result_remainder64Unsigned_T_2 = add(division.remainder, division.divisor) @[core.scala 443:87]
      node _extnMResponse_result_remainder64Unsigned_T_3 = tail(_extnMResponse_result_remainder64Unsigned_T_2, 1) @[core.scala 443:87]
      node extnMResponse_result_remainder64Unsigned = mux(_extnMResponse_result_remainder64Unsigned_T_1, _extnMResponse_result_remainder64Unsigned_T_3, division.remainder) @[core.scala 443:36]
      node _extnMResponse_result_remainder32Signed_T = bits(division.request.rs1, 31, 31) @[core.scala 444:56]
      node _extnMResponse_result_remainder32Signed_T_1 = bits(_extnMResponse_result_remainder32Signed_T, 0, 0) @[core.scala 444:61]
      node _extnMResponse_result_remainder32Signed_T_2 = sub(UInt<1>("h0"), extnMResponse_result_remainder64Unsigned) @[core.scala 444:70]
      node _extnMResponse_result_remainder32Signed_T_3 = tail(_extnMResponse_result_remainder32Signed_T_2, 1) @[core.scala 444:70]
      node extnMResponse_result_remainder32Signed = mux(_extnMResponse_result_remainder32Signed_T_1, _extnMResponse_result_remainder32Signed_T_3, extnMResponse_result_remainder64Unsigned) @[core.scala 444:34]
      node _extnMResponse_result_T_37 = bits(division.request.rs1, 63, 63) @[core.scala 447:32]
      node _extnMResponse_result_T_38 = bits(_extnMResponse_result_T_37, 0, 0) @[core.scala 447:37]
      node _extnMResponse_result_T_39 = bits(division.request.rs2, 63, 63) @[core.scala 447:66]
      node _extnMResponse_result_T_40 = bits(_extnMResponse_result_T_39, 0, 0) @[core.scala 447:71]
      node _extnMResponse_result_T_41 = xor(_extnMResponse_result_T_38, _extnMResponse_result_T_40) @[core.scala 447:44]
      node _extnMResponse_result_T_42 = andr(division.quotient) @[core.scala 447:101]
      node _extnMResponse_result_T_43 = eq(_extnMResponse_result_T_42, UInt<1>("h0")) @[core.scala 447:82]
      node _extnMResponse_result_T_44 = and(_extnMResponse_result_T_41, _extnMResponse_result_T_43) @[core.scala 447:79]
      node _extnMResponse_result_T_45 = sub(UInt<1>("h0"), division.quotient) @[core.scala 447:107]
      node _extnMResponse_result_T_46 = tail(_extnMResponse_result_T_45, 1) @[core.scala 447:107]
      node _extnMResponse_result_T_47 = mux(_extnMResponse_result_T_44, _extnMResponse_result_T_46, division.quotient) @[core.scala 447:10]
      node _extnMResponse_result_T_48 = bits(division.request.rs1, 63, 63) @[core.scala 449:32]
      node _extnMResponse_result_T_49 = bits(_extnMResponse_result_T_48, 0, 0) @[core.scala 449:37]
      node _extnMResponse_result_T_50 = sub(UInt<1>("h0"), extnMResponse_result_remainder64Unsigned) @[core.scala 449:46]
      node _extnMResponse_result_T_51 = tail(_extnMResponse_result_T_50, 1) @[core.scala 449:46]
      node _extnMResponse_result_T_52 = mux(_extnMResponse_result_T_49, _extnMResponse_result_T_51, extnMResponse_result_remainder64Unsigned) @[core.scala 449:10]
      node _extnMResponse_result_T_53 = bits(extnMResponse_result_quotient32, 31, 31) @[core.scala 451:30]
      node _extnMResponse_result_T_54 = bits(_extnMResponse_result_T_53, 0, 0) @[Bitwise.scala 77:15]
      node _extnMResponse_result_T_55 = mux(_extnMResponse_result_T_54, UInt<32>("hffffffff"), UInt<32>("h0")) @[Bitwise.scala 77:12]
      node _extnMResponse_result_T_56 = bits(extnMResponse_result_quotient32, 31, 0) @[core.scala 451:47]
      node _extnMResponse_result_T_57 = cat(_extnMResponse_result_T_55, _extnMResponse_result_T_56) @[Cat.scala 33:92]
      node _extnMResponse_result_T_58 = bits(division.quotient, 31, 31) @[core.scala 452:37]
      node _extnMResponse_result_T_59 = bits(_extnMResponse_result_T_58, 0, 0) @[Bitwise.scala 77:15]
      node _extnMResponse_result_T_60 = mux(_extnMResponse_result_T_59, UInt<32>("hffffffff"), UInt<32>("h0")) @[Bitwise.scala 77:12]
      node _extnMResponse_result_T_61 = bits(division.quotient, 31, 0) @[core.scala 452:61]
      node _extnMResponse_result_T_62 = cat(_extnMResponse_result_T_60, _extnMResponse_result_T_61) @[Cat.scala 33:92]
      node _extnMResponse_result_T_63 = bits(extnMResponse_result_remainder32Signed, 31, 31) @[core.scala 453:37]
      node _extnMResponse_result_T_64 = bits(_extnMResponse_result_T_63, 0, 0) @[Bitwise.scala 77:15]
      node _extnMResponse_result_T_65 = mux(_extnMResponse_result_T_64, UInt<32>("hffffffff"), UInt<32>("h0")) @[Bitwise.scala 77:12]
      node _extnMResponse_result_T_66 = bits(extnMResponse_result_remainder32Signed, 31, 0) @[core.scala 454:26]
      node _extnMResponse_result_T_67 = cat(_extnMResponse_result_T_65, _extnMResponse_result_T_66) @[Cat.scala 33:92]
      node _extnMResponse_result_T_68 = bits(extnMResponse_result_remainder64Unsigned, 31, 31) @[core.scala 455:39]
      node _extnMResponse_result_T_69 = bits(_extnMResponse_result_T_68, 0, 0) @[Bitwise.scala 77:15]
      node _extnMResponse_result_T_70 = mux(_extnMResponse_result_T_69, UInt<32>("hffffffff"), UInt<32>("h0")) @[Bitwise.scala 77:12]
      node _extnMResponse_result_T_71 = bits(extnMResponse_result_remainder64Unsigned, 31, 0) @[core.scala 456:28]
      node _extnMResponse_result_T_72 = cat(_extnMResponse_result_T_70, _extnMResponse_result_T_71) @[Cat.scala 33:92]
      wire _extnMResponse_result_WIRE_1 : UInt<65>[8] @[core.scala 446:14]
      _extnMResponse_result_WIRE_1[0] <= _extnMResponse_result_T_47 @[core.scala 446:14]
      _extnMResponse_result_WIRE_1[1] <= division.quotient @[core.scala 446:14]
      _extnMResponse_result_WIRE_1[2] <= _extnMResponse_result_T_52 @[core.scala 446:14]
      _extnMResponse_result_WIRE_1[3] <= extnMResponse_result_remainder64Unsigned @[core.scala 446:14]
      _extnMResponse_result_WIRE_1[4] <= _extnMResponse_result_T_57 @[core.scala 446:14]
      _extnMResponse_result_WIRE_1[5] <= _extnMResponse_result_T_62 @[core.scala 446:14]
      _extnMResponse_result_WIRE_1[6] <= _extnMResponse_result_T_67 @[core.scala 446:14]
      _extnMResponse_result_WIRE_1[7] <= _extnMResponse_result_T_72 @[core.scala 446:14]
      node _extnMResponse_result_T_73 = bits(division.request.instruction, 3, 3) @[core.scala 457:39]
      node _extnMResponse_result_T_74 = bits(division.request.instruction, 13, 12) @[core.scala 457:72]
      node _extnMResponse_result_T_75 = cat(_extnMResponse_result_T_73, _extnMResponse_result_T_74) @[Cat.scala 33:92]
      extnMResponse.result <= _extnMResponse_result_WIRE_1[_extnMResponse_result_T_75] @[core.scala 441:26]
      extnMResponse.robAddr <= division.request.robAddr @[core.scala 459:27]
      extnMResponse.valid <= division.request.valid @[core.scala 460:25]
      extnResponseInstruction <= division.request.instruction @[core.scala 461:29]
      division.request.valid <= UInt<1>("h0") @[core.scala 462:28]
      when branchOps.valid : @[core.scala 463:27]
        node _T_106 = and(division.request.branchMask, branchOps.branchMask) @[core.scala 464:41]
        node _T_107 = orr(_T_106) @[core.scala 464:65]
        node _T_108 = eq(branchOps.passed, UInt<1>("h0")) @[core.scala 464:72]
        node _T_109 = and(_T_107, _T_108) @[core.scala 464:69]
        when _T_109 : @[core.scala 464:91]
          extnMResponse.valid <= UInt<1>("h0") @[core.scala 464:113]
    when branchOps.valid : @[core.scala 468:25]
      when extnMRequest.valid : @[core.scala 469:30]
        node _T_110 = and(extnMRequest.branchMask, branchOps.branchMask) @[core.scala 470:38]
        node _T_111 = orr(_T_110) @[core.scala 470:62]
        when _T_111 : @[core.scala 470:67]
          node _division_request_branchMask_T = xor(extnMRequest.branchMask, branchOps.branchMask) @[core.scala 470:124]
          division.request.branchMask <= _division_request_branchMask_T @[core.scala 470:97]
        node _T_112 = eq(branchOps.passed, UInt<1>("h0")) @[core.scala 471:12]
        node _T_113 = and(extnMRequest.branchMask, branchOps.branchMask) @[core.scala 471:58]
        node _T_114 = orr(_T_113) @[core.scala 471:82]
        node _T_115 = and(_T_112, _T_114) @[core.scala 471:30]
        when _T_115 : @[core.scala 471:87]
          division.request.valid <= UInt<1>("h0") @[core.scala 471:112]
      node _T_116 = and(division.request.branchMask, branchOps.branchMask) @[core.scala 473:40]
      node _T_117 = orr(_T_116) @[core.scala 473:64]
      when _T_117 : @[core.scala 473:69]
        node _division_request_branchMask_T_1 = xor(division.request.branchMask, branchOps.branchMask) @[core.scala 473:130]
        division.request.branchMask <= _division_request_branchMask_T_1 @[core.scala 473:99]
      node _T_118 = eq(branchOps.passed, UInt<1>("h0")) @[core.scala 474:10]
      node _T_119 = and(division.request.branchMask, branchOps.branchMask) @[core.scala 474:60]
      node _T_120 = orr(_T_119) @[core.scala 474:84]
      node _T_121 = and(_T_118, _T_120) @[core.scala 474:28]
      when _T_121 : @[core.scala 474:89]
        division.request.valid <= UInt<1>("h0") @[core.scala 474:114]
    fwdBuffers[0] <= fwdFrom_0 @[core.scala 479:64]
    fwdBuffers[1] <= fwdFrom_1 @[core.scala 479:64]
    wire _branchPCs_WIRE : { valid : UInt<1>, pc : UInt<64>, branchMask : UInt<5>}[4] @[core.scala 489:34]
    _branchPCs_WIRE[0].branchMask is invalid @[core.scala 489:34]
    _branchPCs_WIRE[0].pc is invalid @[core.scala 489:34]
    _branchPCs_WIRE[0].valid <= UInt<1>("h0") @[core.scala 489:34]
    _branchPCs_WIRE[1].branchMask is invalid @[core.scala 489:34]
    _branchPCs_WIRE[1].pc is invalid @[core.scala 489:34]
    _branchPCs_WIRE[1].valid <= UInt<1>("h0") @[core.scala 489:34]
    _branchPCs_WIRE[2].branchMask is invalid @[core.scala 489:34]
    _branchPCs_WIRE[2].pc is invalid @[core.scala 489:34]
    _branchPCs_WIRE[2].valid <= UInt<1>("h0") @[core.scala 489:34]
    _branchPCs_WIRE[3].branchMask is invalid @[core.scala 489:34]
    _branchPCs_WIRE[3].pc is invalid @[core.scala 489:34]
    _branchPCs_WIRE[3].valid <= UInt<1>("h0") @[core.scala 489:34]
    reg branchPCs : { valid : UInt<1>, pc : UInt<64>, branchMask : UInt<5>}[4], clock with :
      reset => (reset, _branchPCs_WIRE) @[core.scala 489:26]
    wire _predictedPCs_WIRE : { valid : UInt<1>, pc : UInt<64>}[4] @[core.scala 496:37]
    _predictedPCs_WIRE[0].pc is invalid @[core.scala 496:37]
    _predictedPCs_WIRE[0].valid <= UInt<1>("h0") @[core.scala 496:37]
    _predictedPCs_WIRE[1].pc is invalid @[core.scala 496:37]
    _predictedPCs_WIRE[1].valid <= UInt<1>("h0") @[core.scala 496:37]
    _predictedPCs_WIRE[2].pc is invalid @[core.scala 496:37]
    _predictedPCs_WIRE[2].valid <= UInt<1>("h0") @[core.scala 496:37]
    _predictedPCs_WIRE[3].pc is invalid @[core.scala 496:37]
    _predictedPCs_WIRE[3].valid <= UInt<1>("h0") @[core.scala 496:37]
    reg predictedPCs : { valid : UInt<1>, pc : UInt<64>}[4], clock with :
      reset => (reset, _predictedPCs_WIRE) @[core.scala 496:29]
    wire _branchInstruction_WIRE : { valid : UInt<1>, rs1 : UInt<64>, rs2 : UInt<64>, robAddr : UInt<4>, branchMask : UInt<5>, instruction : UInt<32>, immediate : UInt<64>}
    _branchInstruction_WIRE.immediate is invalid
    _branchInstruction_WIRE.instruction is invalid
    _branchInstruction_WIRE.branchMask is invalid
    _branchInstruction_WIRE.robAddr is invalid
    _branchInstruction_WIRE.rs2 is invalid
    _branchInstruction_WIRE.rs1 is invalid
    _branchInstruction_WIRE.valid <= UInt<1>("h0")
    reg branchInstruction : { valid : UInt<1>, rs1 : UInt<64>, rs2 : UInt<64>, robAddr : UInt<4>, branchMask : UInt<5>, instruction : UInt<32>, immediate : UInt<64>}, clock with :
      reset => (reset, _branchInstruction_WIRE) @[core.scala 501:34]
    node _branchInstruction_immediate_T = bits(prf.toExec.instruction, 31, 31) @[core.scala 516:31]
    node _branchInstruction_immediate_T_1 = bits(_branchInstruction_immediate_T, 0, 0) @[Bitwise.scala 77:15]
    node _branchInstruction_immediate_T_2 = mux(_branchInstruction_immediate_T_1, UInt<52>("hfffffffffffff"), UInt<52>("h0")) @[Bitwise.scala 77:12]
    node _branchInstruction_immediate_T_3 = bits(prf.toExec.instruction, 7, 7) @[core.scala 516:49]
    node _branchInstruction_immediate_T_4 = bits(prf.toExec.instruction, 30, 25) @[core.scala 516:65]
    node _branchInstruction_immediate_T_5 = bits(prf.toExec.instruction, 11, 8) @[core.scala 516:86]
    node branchInstruction_immediate_lo = cat(_branchInstruction_immediate_T_5, UInt<1>("h0")) @[Cat.scala 33:92]
    node branchInstruction_immediate_hi_hi = cat(_branchInstruction_immediate_T_2, _branchInstruction_immediate_T_3) @[Cat.scala 33:92]
    node branchInstruction_immediate_hi = cat(branchInstruction_immediate_hi_hi, _branchInstruction_immediate_T_4) @[Cat.scala 33:92]
    node _branchInstruction_immediate_T_6 = cat(branchInstruction_immediate_hi, branchInstruction_immediate_lo) @[Cat.scala 33:92]
    node _branchInstruction_immediate_T_7 = bits(prf.toExec.instruction, 31, 31) @[core.scala 517:31]
    node _branchInstruction_immediate_T_8 = bits(_branchInstruction_immediate_T_7, 0, 0) @[Bitwise.scala 77:15]
    node _branchInstruction_immediate_T_9 = mux(_branchInstruction_immediate_T_8, UInt<52>("hfffffffffffff"), UInt<52>("h0")) @[Bitwise.scala 77:12]
    node _branchInstruction_immediate_T_10 = bits(prf.toExec.instruction, 31, 20) @[core.scala 517:49]
    node _branchInstruction_immediate_T_11 = cat(_branchInstruction_immediate_T_9, _branchInstruction_immediate_T_10) @[Cat.scala 33:92]
    node _branchInstruction_immediate_T_12 = bits(prf.toExec.instruction, 31, 31) @[core.scala 519:31]
    node _branchInstruction_immediate_T_13 = bits(_branchInstruction_immediate_T_12, 0, 0) @[Bitwise.scala 77:15]
    node _branchInstruction_immediate_T_14 = mux(_branchInstruction_immediate_T_13, UInt<44>("hfffffffffff"), UInt<44>("h0")) @[Bitwise.scala 77:12]
    node _branchInstruction_immediate_T_15 = bits(prf.toExec.instruction, 19, 12) @[core.scala 519:49]
    node _branchInstruction_immediate_T_16 = bits(prf.toExec.instruction, 20, 20) @[core.scala 519:70]
    node _branchInstruction_immediate_T_17 = bits(prf.toExec.instruction, 30, 21) @[core.scala 519:87]
    node branchInstruction_immediate_lo_1 = cat(_branchInstruction_immediate_T_17, UInt<1>("h0")) @[Cat.scala 33:92]
    node branchInstruction_immediate_hi_hi_1 = cat(_branchInstruction_immediate_T_14, _branchInstruction_immediate_T_15) @[Cat.scala 33:92]
    node branchInstruction_immediate_hi_1 = cat(branchInstruction_immediate_hi_hi_1, _branchInstruction_immediate_T_16) @[Cat.scala 33:92]
    node _branchInstruction_immediate_T_18 = cat(branchInstruction_immediate_hi_1, branchInstruction_immediate_lo_1) @[Cat.scala 33:92]
    wire _branchInstruction_immediate_WIRE : UInt<64>[4] @[core.scala 515:12]
    _branchInstruction_immediate_WIRE[0] <= _branchInstruction_immediate_T_6 @[core.scala 515:12]
    _branchInstruction_immediate_WIRE[1] <= _branchInstruction_immediate_T_11 @[core.scala 515:12]
    _branchInstruction_immediate_WIRE[2] <= UInt<1>("h0") @[core.scala 515:12]
    _branchInstruction_immediate_WIRE[3] <= _branchInstruction_immediate_T_18 @[core.scala 515:12]
    node _branchInstruction_immediate_T_19 = bits(prf.toExec.instruction, 3, 2) @[core.scala 520:29]
    branchInstruction.immediate <= _branchInstruction_immediate_WIRE[_branchInstruction_immediate_T_19] @[core.scala 512:31]
    wire _branchEvals_WIRE : { valid : UInt<1>, passed : UInt<1>, branchMask : UInt<5>, robAddr : UInt<4>, nextPC : UInt<64>}
    _branchEvals_WIRE.nextPC is invalid
    _branchEvals_WIRE.robAddr is invalid
    _branchEvals_WIRE.branchMask is invalid
    _branchEvals_WIRE.passed is invalid
    _branchEvals_WIRE.valid <= UInt<1>("h0")
    reg branchEvals : { valid : UInt<1>, passed : UInt<1>, branchMask : UInt<5>, robAddr : UInt<4>, nextPC : UInt<64>}, clock with :
      reset => (reset, _branchEvals_WIRE) @[core.scala 523:28]
    branchOps.valid <= branchEvals.valid @[core.scala 530:19]
    branchOps.passed <= branchEvals.passed @[core.scala 531:20]
    branchOps.branchMask <= branchEvals.branchMask @[core.scala 532:24]
    node _branchInstruction_valid_T = bits(prf.toExec.instruction, 6, 4) @[core.scala 534:73]
    node _branchInstruction_valid_T_1 = eq(_branchInstruction_valid_T, UInt<3>("h6")) @[core.scala 534:80]
    node _branchInstruction_valid_T_2 = and(prf.toExec.valid, _branchInstruction_valid_T_1) @[core.scala 534:47]
    branchInstruction.valid <= _branchInstruction_valid_T_2 @[core.scala 534:27]
    node _T_122 = bits(prf.toExec.instruction, 6, 5) @[core.scala 535:51]
    node _T_123 = eq(_T_122, UInt<2>("h3")) @[core.scala 535:58]
    node _T_124 = and(prf.toExec.valid, _T_123) @[core.scala 535:25]
    when _T_124 : @[core.scala 535:71]
      node _branchInstruction_rs1_T = eq(fwdFrom_0.prfDest, prf.toExec.rs1Addr) @[core.scala 537:52]
      node _branchInstruction_rs1_T_1 = and(fwdFrom_0.valid, _branchInstruction_rs1_T) @[core.scala 537:36]
      node _branchInstruction_rs1_T_2 = eq(fwdFrom_1.prfDest, prf.toExec.rs1Addr) @[core.scala 537:52]
      node _branchInstruction_rs1_T_3 = and(fwdFrom_1.valid, _branchInstruction_rs1_T_2) @[core.scala 537:36]
      node _branchInstruction_rs1_T_4 = eq(fwdFrom_2.prfDest, prf.toExec.rs1Addr) @[core.scala 537:52]
      node _branchInstruction_rs1_T_5 = and(fwdFrom_2.valid, _branchInstruction_rs1_T_4) @[core.scala 537:36]
      node _branchInstruction_rs1_T_6 = mux(_branchInstruction_rs1_T_5, fwdFrom_2.result, prf.toExec.rs1Data) @[Mux.scala 101:16]
      node _branchInstruction_rs1_T_7 = mux(_branchInstruction_rs1_T_3, fwdFrom_1.result, _branchInstruction_rs1_T_6) @[Mux.scala 101:16]
      node _branchInstruction_rs1_T_8 = mux(_branchInstruction_rs1_T_1, fwdFrom_0.result, _branchInstruction_rs1_T_7) @[Mux.scala 101:16]
      branchInstruction.rs1 <= _branchInstruction_rs1_T_8 @[core.scala 536:27]
      node _branchInstruction_rs2_T = eq(fwdFrom_0.prfDest, prf.toExec.rs2Addr) @[core.scala 540:52]
      node _branchInstruction_rs2_T_1 = and(fwdFrom_0.valid, _branchInstruction_rs2_T) @[core.scala 540:36]
      node _branchInstruction_rs2_T_2 = eq(fwdFrom_1.prfDest, prf.toExec.rs2Addr) @[core.scala 540:52]
      node _branchInstruction_rs2_T_3 = and(fwdFrom_1.valid, _branchInstruction_rs2_T_2) @[core.scala 540:36]
      node _branchInstruction_rs2_T_4 = eq(fwdFrom_2.prfDest, prf.toExec.rs2Addr) @[core.scala 540:52]
      node _branchInstruction_rs2_T_5 = and(fwdFrom_2.valid, _branchInstruction_rs2_T_4) @[core.scala 540:36]
      node _branchInstruction_rs2_T_6 = mux(_branchInstruction_rs2_T_5, fwdFrom_2.result, prf.toExec.rs2Data) @[Mux.scala 101:16]
      node _branchInstruction_rs2_T_7 = mux(_branchInstruction_rs2_T_3, fwdFrom_1.result, _branchInstruction_rs2_T_6) @[Mux.scala 101:16]
      node _branchInstruction_rs2_T_8 = mux(_branchInstruction_rs2_T_1, fwdFrom_0.result, _branchInstruction_rs2_T_7) @[Mux.scala 101:16]
      branchInstruction.rs2 <= _branchInstruction_rs2_T_8 @[core.scala 539:27]
      branchInstruction.branchMask <= prf.toExec.branchmask @[core.scala 542:34]
      branchInstruction.robAddr <= prf.toExec.robAddr @[core.scala 543:31]
      branchInstruction.instruction <= prf.toExec.instruction @[core.scala 544:35]
    when branchOps.valid : @[core.scala 547:25]
      node _T_125 = and(branchOps.branchMask, prf.toExec.branchmask) @[core.scala 548:32]
      node _T_126 = orr(_T_125) @[core.scala 548:57]
      when _T_126 : @[core.scala 548:62]
        node _branchInstruction_branchMask_T = xor(prf.toExec.branchmask, branchOps.branchMask) @[core.scala 549:61]
        branchInstruction.branchMask <= _branchInstruction_branchMask_T @[core.scala 549:36]
      node _T_127 = eq(branchOps.passed, UInt<1>("h0")) @[core.scala 551:10]
      node _T_128 = and(branchOps.branchMask, prf.toExec.branchmask) @[core.scala 551:53]
      node _T_129 = orr(_T_128) @[core.scala 551:78]
      node _T_130 = and(_T_127, _T_129) @[core.scala 551:28]
      when _T_130 : @[core.scala 551:83]
        branchInstruction.valid <= UInt<1>("h0") @[core.scala 552:31]
    node _coherentLoadInvalid_T = eq(memAccess.loadCommit.state, UInt<1>("h0")) @[core.scala 557:29]
    node _coherentLoadInvalid_T_1 = and(_coherentLoadInvalid_T, memAccess.loadCommit.valid) @[core.scala 557:57]
    node _coherentLoadInvalid_T_2 = and(_coherentLoadInvalid_T_1, rob.commit.ready) @[core.scala 557:87]
    node _coherentLoadInvalid_T_3 = bits(rob.commit.instruction, 6, 2) @[core.scala 557:132]
    node _coherentLoadInvalid_T_4 = orr(_coherentLoadInvalid_T_3) @[core.scala 557:138]
    node _coherentLoadInvalid_T_5 = eq(_coherentLoadInvalid_T_4, UInt<1>("h0")) @[core.scala 557:141]
    node coherentLoadInvalid = and(_coherentLoadInvalid_T_2, _coherentLoadInvalid_T_5) @[core.scala 557:107]
    node _branchEvals_valid_T = mux(coherentLoadInvalid, UInt<1>("h1"), branchInstruction.valid) @[core.scala 560:27]
    branchEvals.valid <= _branchEvals_valid_T @[core.scala 560:21]
    node _branchEvals_robAddr_T = sub(rob.commit.robAddr, UInt<1>("h1")) @[core.scala 561:68]
    node _branchEvals_robAddr_T_1 = tail(_branchEvals_robAddr_T, 1) @[core.scala 561:68]
    node _branchEvals_robAddr_T_2 = mux(coherentLoadInvalid, _branchEvals_robAddr_T_1, branchInstruction.robAddr) @[core.scala 561:29]
    branchEvals.robAddr <= _branchEvals_robAddr_T_2 @[core.scala 561:23]
    node _branchEvals_branchMask_T = mux(coherentLoadInvalid, UInt<5>("h10"), branchPCs[0].branchMask) @[core.scala 562:32]
    branchEvals.branchMask <= _branchEvals_branchMask_T @[core.scala 562:26]
    when branchOps.valid : @[core.scala 564:25]
      node _T_131 = eq(branchOps.passed, UInt<1>("h0")) @[core.scala 566:10]
      when _T_131 : @[core.scala 566:29]
        branchEvals.valid <= UInt<1>("h0") @[core.scala 567:25]
    node _branchTaken_rs1_T = bits(branchInstruction.instruction, 19, 15) @[core.scala 572:48]
    node _branchTaken_rs1_T_1 = orr(_branchTaken_rs1_T) @[core.scala 572:57]
    node branchTaken_rs1 = mux(_branchTaken_rs1_T_1, branchInstruction.rs1, UInt<1>("h0")) @[core.scala 572:18]
    node _branchTaken_rs2_T = bits(branchInstruction.instruction, 24, 20) @[core.scala 573:48]
    node _branchTaken_rs2_T_1 = orr(_branchTaken_rs2_T) @[core.scala 573:57]
    node branchTaken_rs2 = mux(_branchTaken_rs2_T_1, branchInstruction.rs2, UInt<1>("h0")) @[core.scala 573:18]
    node _branchTaken_conditionEval_T = eq(branchTaken_rs1, branchTaken_rs2) @[core.scala 577:41]
    node _branchTaken_conditionEval_T_1 = eq(branchTaken_rs1, branchTaken_rs2) @[core.scala 577:54]
    node _branchTaken_conditionEval_T_2 = asSInt(branchTaken_rs1) @[core.scala 577:67]
    node _branchTaken_conditionEval_T_3 = asSInt(branchTaken_rs2) @[core.scala 577:80]
    node _branchTaken_conditionEval_T_4 = lt(_branchTaken_conditionEval_T_2, _branchTaken_conditionEval_T_3) @[core.scala 577:74]
    node _branchTaken_conditionEval_T_5 = lt(branchTaken_rs1, branchTaken_rs2) @[core.scala 577:92]
    node _branchTaken_conditionEval_T_6 = eq(_branchTaken_conditionEval_T, UInt<1>("h0")) @[core.scala 577:125]
    node _branchTaken_conditionEval_T_7 = eq(_branchTaken_conditionEval_T_1, UInt<1>("h0")) @[core.scala 577:125]
    node _branchTaken_conditionEval_T_8 = eq(_branchTaken_conditionEval_T_4, UInt<1>("h0")) @[core.scala 577:125]
    node _branchTaken_conditionEval_T_9 = eq(_branchTaken_conditionEval_T_5, UInt<1>("h0")) @[core.scala 577:125]
    wire branchTaken_conditionEval : UInt<1>[8] @[core.scala 577:32]
    branchTaken_conditionEval[0] <= _branchTaken_conditionEval_T @[core.scala 577:32]
    branchTaken_conditionEval[1] <= _branchTaken_conditionEval_T_6 @[core.scala 577:32]
    branchTaken_conditionEval[2] <= _branchTaken_conditionEval_T_1 @[core.scala 577:32]
    branchTaken_conditionEval[3] <= _branchTaken_conditionEval_T_7 @[core.scala 577:32]
    branchTaken_conditionEval[4] <= _branchTaken_conditionEval_T_4 @[core.scala 577:32]
    branchTaken_conditionEval[5] <= _branchTaken_conditionEval_T_8 @[core.scala 577:32]
    branchTaken_conditionEval[6] <= _branchTaken_conditionEval_T_5 @[core.scala 577:32]
    branchTaken_conditionEval[7] <= _branchTaken_conditionEval_T_9 @[core.scala 577:32]
    node _branchTaken_T = bits(branchInstruction.instruction, 14, 12) @[core.scala 579:30]
    node _nextCorrectPC_conditionEval_T = eq(branchInstruction.rs1, branchInstruction.rs2) @[core.scala 597:11]
    node _nextCorrectPC_conditionEval_T_1 = neq(branchInstruction.rs1, branchInstruction.rs2) @[core.scala 598:11]
    node _nextCorrectPC_conditionEval_T_2 = asSInt(branchInstruction.rs1) @[core.scala 601:11]
    node _nextCorrectPC_conditionEval_T_3 = asSInt(branchInstruction.rs2) @[core.scala 601:24]
    node _nextCorrectPC_conditionEval_T_4 = lt(_nextCorrectPC_conditionEval_T_2, _nextCorrectPC_conditionEval_T_3) @[core.scala 601:18]
    node _nextCorrectPC_conditionEval_T_5 = asSInt(branchInstruction.rs1) @[core.scala 602:11]
    node _nextCorrectPC_conditionEval_T_6 = asSInt(branchInstruction.rs2) @[core.scala 602:25]
    node _nextCorrectPC_conditionEval_T_7 = geq(_nextCorrectPC_conditionEval_T_5, _nextCorrectPC_conditionEval_T_6) @[core.scala 602:18]
    node _nextCorrectPC_conditionEval_T_8 = lt(branchInstruction.rs1, branchInstruction.rs2) @[core.scala 603:11]
    node _nextCorrectPC_conditionEval_T_9 = geq(branchInstruction.rs1, branchInstruction.rs2) @[core.scala 604:11]
    wire nextCorrectPC_conditionEval : UInt<1>[8] @[core.scala 596:32]
    nextCorrectPC_conditionEval[0] <= _nextCorrectPC_conditionEval_T @[core.scala 596:32]
    nextCorrectPC_conditionEval[1] <= _nextCorrectPC_conditionEval_T_1 @[core.scala 596:32]
    nextCorrectPC_conditionEval[2] <= UInt<1>("h0") @[core.scala 596:32]
    nextCorrectPC_conditionEval[3] <= UInt<1>("h0") @[core.scala 596:32]
    nextCorrectPC_conditionEval[4] <= _nextCorrectPC_conditionEval_T_4 @[core.scala 596:32]
    nextCorrectPC_conditionEval[5] <= _nextCorrectPC_conditionEval_T_7 @[core.scala 596:32]
    nextCorrectPC_conditionEval[6] <= _nextCorrectPC_conditionEval_T_8 @[core.scala 596:32]
    nextCorrectPC_conditionEval[7] <= _nextCorrectPC_conditionEval_T_9 @[core.scala 596:32]
    node _nextCorrectPC_T = bits(branchInstruction.instruction, 14, 12) @[core.scala 608:36]
    node _nextCorrectPC_T_1 = add(branchPCs[0].pc, branchInstruction.immediate) @[core.scala 608:50]
    node _nextCorrectPC_T_2 = tail(_nextCorrectPC_T_1, 1) @[core.scala 608:50]
    node _nextCorrectPC_T_3 = add(branchPCs[0].pc, UInt<3>("h4")) @[core.scala 608:66]
    node _nextCorrectPC_T_4 = tail(_nextCorrectPC_T_3, 1) @[core.scala 608:66]
    node _nextCorrectPC_T_5 = mux(nextCorrectPC_conditionEval[_nextCorrectPC_T], _nextCorrectPC_T_2, _nextCorrectPC_T_4) @[core.scala 608:10]
    node _nextCorrectPC_T_6 = add(branchInstruction.rs1, branchInstruction.immediate) @[core.scala 609:11]
    node _nextCorrectPC_T_7 = tail(_nextCorrectPC_T_6, 1) @[core.scala 609:11]
    node _nextCorrectPC_T_8 = add(branchPCs[0].pc, branchInstruction.immediate) @[core.scala 611:10]
    node _nextCorrectPC_T_9 = tail(_nextCorrectPC_T_8, 1) @[core.scala 611:10]
    wire _nextCorrectPC_WIRE : UInt<64>[4] @[core.scala 607:12]
    _nextCorrectPC_WIRE[0] <= _nextCorrectPC_T_5 @[core.scala 607:12]
    _nextCorrectPC_WIRE[1] <= _nextCorrectPC_T_7 @[core.scala 607:12]
    _nextCorrectPC_WIRE[2] <= UInt<1>("h0") @[core.scala 607:12]
    _nextCorrectPC_WIRE[3] <= _nextCorrectPC_T_9 @[core.scala 607:12]
    node _nextCorrectPC_T_10 = bits(branchInstruction.instruction, 3, 2) @[core.scala 612:18]
    node _branchEvals_nextPC_T = mux(coherentLoadInvalid, rob.commit.pc, _nextCorrectPC_WIRE[_nextCorrectPC_T_10]) @[core.scala 616:28]
    branchEvals.nextPC <= _branchEvals_nextPC_T @[core.scala 616:22]
    node _branchEvals_passed_T = eq(_nextCorrectPC_WIRE[_nextCorrectPC_T_10], predictedPCs[0].pc) @[core.scala 618:95]
    node _branchEvals_passed_T_1 = and(predictedPCs[0].valid, _branchEvals_passed_T) @[core.scala 618:77]
    node _branchEvals_passed_T_2 = mux(coherentLoadInvalid, UInt<1>("h0"), _branchEvals_passed_T_1) @[core.scala 618:28]
    branchEvals.passed <= _branchEvals_passed_T_2 @[core.scala 618:22]
    node _decode_branchPCs_fired_T = and(branchPCs[0].valid, branchPCs[1].valid) @[core.scala 621:90]
    node _decode_branchPCs_fired_T_1 = and(_decode_branchPCs_fired_T, branchPCs[2].valid) @[core.scala 621:90]
    node _decode_branchPCs_fired_T_2 = and(_decode_branchPCs_fired_T_1, branchPCs[3].valid) @[core.scala 621:90]
    node _decode_branchPCs_fired_T_3 = eq(_decode_branchPCs_fired_T_2, UInt<1>("h0")) @[core.scala 621:55]
    node _decode_branchPCs_fired_T_4 = and(decode.branchPCs.ready, _decode_branchPCs_fired_T_3) @[core.scala 621:52]
    decode.branchPCs.fired <= _decode_branchPCs_fired_T_4 @[core.scala 621:26]
    node _T_132 = and(UInt<1>("h1"), branchPCs[0].valid) @[core.scala 624:46]
    node _T_133 = and(_T_132, branchPCs[1].valid) @[core.scala 624:46]
    node _T_134 = and(_T_133, branchPCs[2].valid) @[core.scala 624:46]
    node _T_135 = and(_T_134, branchPCs[3].valid) @[core.scala 624:46]
    node _T_136 = eq(branchPCs[0].valid, UInt<1>("h0")) @[core.scala 625:70]
    node _T_137 = and(UInt<1>("h1"), _T_136) @[core.scala 625:67]
    when _T_137 : @[core.scala 625:82]
      branchPCs[0].valid <= decode.branchPCs.branchPCReady @[core.scala 626:15]
      branchPCs[0].pc <= decode.branchPCs.branchPC @[core.scala 627:12]
      branchPCs[0].branchMask <= decode.branchPCs.branchMask @[core.scala 628:20]
    node _T_138 = eq(branchPCs[1].valid, UInt<1>("h0")) @[core.scala 625:70]
    node _T_139 = and(_T_132, _T_138) @[core.scala 625:67]
    when _T_139 : @[core.scala 625:82]
      branchPCs[1].valid <= decode.branchPCs.branchPCReady @[core.scala 626:15]
      branchPCs[1].pc <= decode.branchPCs.branchPC @[core.scala 627:12]
      branchPCs[1].branchMask <= decode.branchPCs.branchMask @[core.scala 628:20]
    node _T_140 = eq(branchPCs[2].valid, UInt<1>("h0")) @[core.scala 625:70]
    node _T_141 = and(_T_133, _T_140) @[core.scala 625:67]
    when _T_141 : @[core.scala 625:82]
      branchPCs[2].valid <= decode.branchPCs.branchPCReady @[core.scala 626:15]
      branchPCs[2].pc <= decode.branchPCs.branchPC @[core.scala 627:12]
      branchPCs[2].branchMask <= decode.branchPCs.branchMask @[core.scala 628:20]
    node _T_142 = eq(branchPCs[3].valid, UInt<1>("h0")) @[core.scala 625:70]
    node _T_143 = and(_T_134, _T_142) @[core.scala 625:67]
    when _T_143 : @[core.scala 625:82]
      branchPCs[3].valid <= decode.branchPCs.branchPCReady @[core.scala 626:15]
      branchPCs[3].pc <= decode.branchPCs.branchPC @[core.scala 627:12]
      branchPCs[3].branchMask <= decode.branchPCs.branchMask @[core.scala 628:20]
    node _T_144 = eq(branchOps.passed, UInt<1>("h0")) @[core.scala 630:27]
    node _T_145 = and(branchOps.valid, _T_144) @[core.scala 630:24]
    when _T_145 : @[core.scala 630:46]
      branchPCs[0].valid <= UInt<1>("h0") @[core.scala 631:32]
      branchPCs[1].valid <= UInt<1>("h0") @[core.scala 631:32]
      branchPCs[2].valid <= UInt<1>("h0") @[core.scala 631:32]
      branchPCs[3].valid <= UInt<1>("h0") @[core.scala 631:32]
    else :
      when branchInstruction.valid : @[core.scala 632:39]
        node _T_146 = and(UInt<1>("h1"), branchPCs[0].valid) @[core.scala 633:48]
        node _T_147 = and(_T_146, branchPCs[1].valid) @[core.scala 633:48]
        node _T_148 = and(_T_147, branchPCs[2].valid) @[core.scala 633:48]
        node _T_149 = and(_T_148, branchPCs[3].valid) @[core.scala 633:48]
        wire entry : { valid : UInt<1>, pc : UInt<64>, branchMask : UInt<5>} @[core.scala 635:23]
        node _entry_valid_T = eq(branchPCs[0].valid, UInt<1>("h0")) @[core.scala 636:71]
        node _entry_valid_T_1 = and(_entry_valid_T, UInt<1>("h1")) @[core.scala 636:82]
        node _entry_valid_T_2 = and(decode.branchPCs.branchPCReady, _entry_valid_T_1) @[core.scala 636:67]
        node _entry_valid_T_3 = or(branchPCs[0].valid, _entry_valid_T_2) @[core.scala 636:32]
        entry.valid <= _entry_valid_T_3 @[core.scala 636:19]
        node _entry_pc_T = mux(branchPCs[0].valid, branchPCs[0].pc, decode.branchPCs.branchPC) @[core.scala 637:22]
        entry.pc <= _entry_pc_T @[core.scala 637:16]
        node _entry_branchMask_T = mux(branchPCs[0].valid, branchPCs[0].branchMask, decode.branchPCs.branchMask) @[core.scala 638:30]
        entry.branchMask <= _entry_branchMask_T @[core.scala 638:24]
        wire entry_1 : { valid : UInt<1>, pc : UInt<64>, branchMask : UInt<5>} @[core.scala 635:23]
        node _entry_valid_T_4 = eq(branchPCs[1].valid, UInt<1>("h0")) @[core.scala 636:71]
        node _entry_valid_T_5 = and(_entry_valid_T_4, _T_146) @[core.scala 636:82]
        node _entry_valid_T_6 = and(decode.branchPCs.branchPCReady, _entry_valid_T_5) @[core.scala 636:67]
        node _entry_valid_T_7 = or(branchPCs[1].valid, _entry_valid_T_6) @[core.scala 636:32]
        entry_1.valid <= _entry_valid_T_7 @[core.scala 636:19]
        node _entry_pc_T_1 = mux(branchPCs[1].valid, branchPCs[1].pc, decode.branchPCs.branchPC) @[core.scala 637:22]
        entry_1.pc <= _entry_pc_T_1 @[core.scala 637:16]
        node _entry_branchMask_T_1 = mux(branchPCs[1].valid, branchPCs[1].branchMask, decode.branchPCs.branchMask) @[core.scala 638:30]
        entry_1.branchMask <= _entry_branchMask_T_1 @[core.scala 638:24]
        wire entry_2 : { valid : UInt<1>, pc : UInt<64>, branchMask : UInt<5>} @[core.scala 635:23]
        node _entry_valid_T_8 = eq(branchPCs[2].valid, UInt<1>("h0")) @[core.scala 636:71]
        node _entry_valid_T_9 = and(_entry_valid_T_8, _T_147) @[core.scala 636:82]
        node _entry_valid_T_10 = and(decode.branchPCs.branchPCReady, _entry_valid_T_9) @[core.scala 636:67]
        node _entry_valid_T_11 = or(branchPCs[2].valid, _entry_valid_T_10) @[core.scala 636:32]
        entry_2.valid <= _entry_valid_T_11 @[core.scala 636:19]
        node _entry_pc_T_2 = mux(branchPCs[2].valid, branchPCs[2].pc, decode.branchPCs.branchPC) @[core.scala 637:22]
        entry_2.pc <= _entry_pc_T_2 @[core.scala 637:16]
        node _entry_branchMask_T_2 = mux(branchPCs[2].valid, branchPCs[2].branchMask, decode.branchPCs.branchMask) @[core.scala 638:30]
        entry_2.branchMask <= _entry_branchMask_T_2 @[core.scala 638:24]
        wire entry_3 : { valid : UInt<1>, pc : UInt<64>, branchMask : UInt<5>} @[core.scala 635:23]
        node _entry_valid_T_12 = eq(branchPCs[3].valid, UInt<1>("h0")) @[core.scala 636:71]
        node _entry_valid_T_13 = and(_entry_valid_T_12, _T_148) @[core.scala 636:82]
        node _entry_valid_T_14 = and(decode.branchPCs.branchPCReady, _entry_valid_T_13) @[core.scala 636:67]
        node _entry_valid_T_15 = or(branchPCs[3].valid, _entry_valid_T_14) @[core.scala 636:32]
        entry_3.valid <= _entry_valid_T_15 @[core.scala 636:19]
        node _entry_pc_T_3 = mux(branchPCs[3].valid, branchPCs[3].pc, decode.branchPCs.branchPC) @[core.scala 637:22]
        entry_3.pc <= _entry_pc_T_3 @[core.scala 637:16]
        node _entry_branchMask_T_3 = mux(branchPCs[3].valid, branchPCs[3].branchMask, decode.branchPCs.branchMask) @[core.scala 638:30]
        entry_3.branchMask <= _entry_branchMask_T_3 @[core.scala 638:24]
        branchPCs[0] <= entry_1 @[core.scala 643:40]
        branchPCs[1] <= entry_2 @[core.scala 643:40]
        branchPCs[2] <= entry_3 @[core.scala 643:40]
        branchPCs[3].valid <= UInt<1>("h0") @[core.scala 644:41]
    node _T_150 = and(UInt<1>("h1"), predictedPCs[0].valid) @[core.scala 648:49]
    node _T_151 = and(_T_150, predictedPCs[1].valid) @[core.scala 648:49]
    node _T_152 = and(_T_151, predictedPCs[2].valid) @[core.scala 648:49]
    node _T_153 = and(_T_152, predictedPCs[3].valid) @[core.scala 648:49]
    node _T_154 = eq(predictedPCs[0].valid, UInt<1>("h0")) @[core.scala 649:70]
    node _T_155 = and(UInt<1>("h1"), _T_154) @[core.scala 649:67]
    when _T_155 : @[core.scala 649:82]
      predictedPCs[0].valid <= decode.branchPCs.predictedPCReady @[core.scala 650:15]
      predictedPCs[0].pc <= decode.branchPCs.predictedPC @[core.scala 651:12]
    node _T_156 = eq(predictedPCs[1].valid, UInt<1>("h0")) @[core.scala 649:70]
    node _T_157 = and(_T_150, _T_156) @[core.scala 649:67]
    when _T_157 : @[core.scala 649:82]
      predictedPCs[1].valid <= decode.branchPCs.predictedPCReady @[core.scala 650:15]
      predictedPCs[1].pc <= decode.branchPCs.predictedPC @[core.scala 651:12]
    node _T_158 = eq(predictedPCs[2].valid, UInt<1>("h0")) @[core.scala 649:70]
    node _T_159 = and(_T_151, _T_158) @[core.scala 649:67]
    when _T_159 : @[core.scala 649:82]
      predictedPCs[2].valid <= decode.branchPCs.predictedPCReady @[core.scala 650:15]
      predictedPCs[2].pc <= decode.branchPCs.predictedPC @[core.scala 651:12]
    node _T_160 = eq(predictedPCs[3].valid, UInt<1>("h0")) @[core.scala 649:70]
    node _T_161 = and(_T_152, _T_160) @[core.scala 649:67]
    when _T_161 : @[core.scala 649:82]
      predictedPCs[3].valid <= decode.branchPCs.predictedPCReady @[core.scala 650:15]
      predictedPCs[3].pc <= decode.branchPCs.predictedPC @[core.scala 651:12]
    node _T_162 = eq(branchOps.passed, UInt<1>("h0")) @[core.scala 653:27]
    node _T_163 = and(branchOps.valid, _T_162) @[core.scala 653:24]
    when _T_163 : @[core.scala 653:46]
      predictedPCs[0].valid <= UInt<1>("h0") @[core.scala 654:35]
      predictedPCs[1].valid <= UInt<1>("h0") @[core.scala 654:35]
      predictedPCs[2].valid <= UInt<1>("h0") @[core.scala 654:35]
      predictedPCs[3].valid <= UInt<1>("h0") @[core.scala 654:35]
    else :
      when branchInstruction.valid : @[core.scala 655:39]
        node _T_164 = and(UInt<1>("h1"), predictedPCs[0].valid) @[core.scala 656:51]
        node _T_165 = and(_T_164, predictedPCs[1].valid) @[core.scala 656:51]
        node _T_166 = and(_T_165, predictedPCs[2].valid) @[core.scala 656:51]
        node _T_167 = and(_T_166, predictedPCs[3].valid) @[core.scala 656:51]
        wire entry_4 : { valid : UInt<1>, pc : UInt<64>} @[core.scala 658:23]
        node _entry_valid_T_16 = eq(predictedPCs[0].valid, UInt<1>("h0")) @[core.scala 659:74]
        node _entry_valid_T_17 = and(_entry_valid_T_16, UInt<1>("h1")) @[core.scala 659:85]
        node _entry_valid_T_18 = and(decode.branchPCs.predictedPCReady, _entry_valid_T_17) @[core.scala 659:70]
        node _entry_valid_T_19 = or(predictedPCs[0].valid, _entry_valid_T_18) @[core.scala 659:32]
        entry_4.valid <= _entry_valid_T_19 @[core.scala 659:19]
        node _entry_pc_T_4 = mux(predictedPCs[0].valid, predictedPCs[0].pc, decode.branchPCs.predictedPC) @[core.scala 660:22]
        entry_4.pc <= _entry_pc_T_4 @[core.scala 660:16]
        wire entry_5 : { valid : UInt<1>, pc : UInt<64>} @[core.scala 658:23]
        node _entry_valid_T_20 = eq(predictedPCs[1].valid, UInt<1>("h0")) @[core.scala 659:74]
        node _entry_valid_T_21 = and(_entry_valid_T_20, _T_164) @[core.scala 659:85]
        node _entry_valid_T_22 = and(decode.branchPCs.predictedPCReady, _entry_valid_T_21) @[core.scala 659:70]
        node _entry_valid_T_23 = or(predictedPCs[1].valid, _entry_valid_T_22) @[core.scala 659:32]
        entry_5.valid <= _entry_valid_T_23 @[core.scala 659:19]
        node _entry_pc_T_5 = mux(predictedPCs[1].valid, predictedPCs[1].pc, decode.branchPCs.predictedPC) @[core.scala 660:22]
        entry_5.pc <= _entry_pc_T_5 @[core.scala 660:16]
        wire entry_6 : { valid : UInt<1>, pc : UInt<64>} @[core.scala 658:23]
        node _entry_valid_T_24 = eq(predictedPCs[2].valid, UInt<1>("h0")) @[core.scala 659:74]
        node _entry_valid_T_25 = and(_entry_valid_T_24, _T_165) @[core.scala 659:85]
        node _entry_valid_T_26 = and(decode.branchPCs.predictedPCReady, _entry_valid_T_25) @[core.scala 659:70]
        node _entry_valid_T_27 = or(predictedPCs[2].valid, _entry_valid_T_26) @[core.scala 659:32]
        entry_6.valid <= _entry_valid_T_27 @[core.scala 659:19]
        node _entry_pc_T_6 = mux(predictedPCs[2].valid, predictedPCs[2].pc, decode.branchPCs.predictedPC) @[core.scala 660:22]
        entry_6.pc <= _entry_pc_T_6 @[core.scala 660:16]
        wire entry_7 : { valid : UInt<1>, pc : UInt<64>} @[core.scala 658:23]
        node _entry_valid_T_28 = eq(predictedPCs[3].valid, UInt<1>("h0")) @[core.scala 659:74]
        node _entry_valid_T_29 = and(_entry_valid_T_28, _T_166) @[core.scala 659:85]
        node _entry_valid_T_30 = and(decode.branchPCs.predictedPCReady, _entry_valid_T_29) @[core.scala 659:70]
        node _entry_valid_T_31 = or(predictedPCs[3].valid, _entry_valid_T_30) @[core.scala 659:32]
        entry_7.valid <= _entry_valid_T_31 @[core.scala 659:19]
        node _entry_pc_T_7 = mux(predictedPCs[3].valid, predictedPCs[3].pc, decode.branchPCs.predictedPC) @[core.scala 660:22]
        entry_7.pc <= _entry_pc_T_7 @[core.scala 660:16]
        predictedPCs[0] <= entry_5 @[core.scala 665:40]
        predictedPCs[1] <= entry_6 @[core.scala 665:40]
        predictedPCs[2] <= entry_7 @[core.scala 665:40]
        predictedPCs[3].valid <= UInt<1>("h0") @[core.scala 666:44]
    reg coherentLoadInvalidReg : UInt<1>, clock with :
      reset => (reset, coherentLoadInvalid) @[core.scala 697:39]
    coherentLoadInvalidReg <= coherentLoadInvalid @[core.scala 698:26]
    fetch.branchRes.branchTaken <= branchTaken_conditionEval[_branchTaken_T] @[core.scala 701:31]
    fetch.branchRes.isBranch <= UInt<1>("h1") @[core.scala 702:28]
    fetch.branchRes.pc <= branchPCs[0].pc @[core.scala 703:22]
    fetch.branchRes.pcAfterBrnach <= branchEvals.nextPC @[core.scala 704:33]
    node _fetch_branchRes_fired_T = and(fetch.branchRes.ready, branchEvals.valid) @[core.scala 705:50]
    node _fetch_branchRes_fired_T_1 = eq(coherentLoadInvalidReg, UInt<1>("h0")) @[core.scala 705:74]
    node _fetch_branchRes_fired_T_2 = and(_fetch_branchRes_fired_T, _fetch_branchRes_fired_T_1) @[core.scala 705:71]
    fetch.branchRes.fired <= _fetch_branchRes_fired_T_2 @[core.scala 705:25]
    decode.writeBackResult.PRFDest <= rob.commit.prfDest @[core.scala 707:34]
    decode.writeBackResult.instruction <= rob.commit.instruction @[core.scala 708:38]
    decode.writeBackResult.pc <= rob.commit.pc @[core.scala 709:29]
    node _decode_writeBackResult_rdAddr_T = bits(rob.commit.instruction, 11, 7) @[core.scala 710:58]
    decode.writeBackResult.rdAddr <= _decode_writeBackResult_rdAddr_T @[core.scala 710:33]
    node _decode_writeBackResult_fired_T = bits(rob.commit.instruction, 6, 2) @[core.scala 714:35]
    node _decode_writeBackResult_fired_T_1 = orr(_decode_writeBackResult_fired_T) @[core.scala 714:41]
    node _decode_writeBackResult_fired_T_2 = eq(_decode_writeBackResult_fired_T_1, UInt<1>("h0")) @[core.scala 714:12]
    node _decode_writeBackResult_fired_T_3 = eq(_decode_writeBackResult_fired_T_2, UInt<1>("h0")) @[core.scala 714:44]
    node _decode_writeBackResult_fired_T_4 = eq(coherentLoadInvalid, UInt<1>("h0")) @[core.scala 714:54]
    node _decode_writeBackResult_fired_T_5 = or(_decode_writeBackResult_fired_T_3, _decode_writeBackResult_fired_T_4) @[core.scala 714:51]
    node _decode_writeBackResult_fired_T_6 = and(_decode_writeBackResult_fired_T_5, decode.writeBackResult.ready) @[core.scala 714:76]
    node _decode_writeBackResult_fired_T_7 = and(_decode_writeBackResult_fired_T_6, rob.commit.ready) @[core.scala 714:108]
    node _decode_writeBackResult_fired_T_8 = bits(rob.commit.instruction, 6, 4) @[core.scala 714:186]
    node _decode_writeBackResult_fired_T_9 = neq(_decode_writeBackResult_fired_T_8, UInt<2>("h2")) @[core.scala 714:193]
    node _decode_writeBackResult_fired_T_10 = or(memAccess.writeCommit.ready, _decode_writeBackResult_fired_T_9) @[core.scala 714:160]
    node _decode_writeBackResult_fired_T_11 = and(_decode_writeBackResult_fired_T_7, _decode_writeBackResult_fired_T_10) @[core.scala 714:128]
    decode.writeBackResult.fired <= _decode_writeBackResult_fired_T_11 @[core.scala 714:7]
    node _rob_commit_fired_T = bits(rob.commit.instruction, 6, 2) @[core.scala 714:35]
    node _rob_commit_fired_T_1 = orr(_rob_commit_fired_T) @[core.scala 714:41]
    node _rob_commit_fired_T_2 = eq(_rob_commit_fired_T_1, UInt<1>("h0")) @[core.scala 714:12]
    node _rob_commit_fired_T_3 = eq(_rob_commit_fired_T_2, UInt<1>("h0")) @[core.scala 714:44]
    node _rob_commit_fired_T_4 = eq(coherentLoadInvalid, UInt<1>("h0")) @[core.scala 714:54]
    node _rob_commit_fired_T_5 = or(_rob_commit_fired_T_3, _rob_commit_fired_T_4) @[core.scala 714:51]
    node _rob_commit_fired_T_6 = and(_rob_commit_fired_T_5, decode.writeBackResult.ready) @[core.scala 714:76]
    node _rob_commit_fired_T_7 = and(_rob_commit_fired_T_6, rob.commit.ready) @[core.scala 714:108]
    node _rob_commit_fired_T_8 = bits(rob.commit.instruction, 6, 4) @[core.scala 714:186]
    node _rob_commit_fired_T_9 = neq(_rob_commit_fired_T_8, UInt<2>("h2")) @[core.scala 714:193]
    node _rob_commit_fired_T_10 = or(memAccess.writeCommit.ready, _rob_commit_fired_T_9) @[core.scala 714:160]
    node _rob_commit_fired_T_11 = and(_rob_commit_fired_T_7, _rob_commit_fired_T_10) @[core.scala 714:128]
    rob.commit.fired <= _rob_commit_fired_T_11 @[core.scala 714:7]
    node _memAccess_loadCommit_ready_T = bits(rob.commit.instruction, 6, 2) @[core.scala 718:55]
    node _memAccess_loadCommit_ready_T_1 = orr(_memAccess_loadCommit_ready_T) @[core.scala 718:61]
    node _memAccess_loadCommit_ready_T_2 = eq(_memAccess_loadCommit_ready_T_1, UInt<1>("h0")) @[core.scala 718:64]
    node _memAccess_loadCommit_ready_T_3 = and(_memAccess_loadCommit_ready_T_2, rob.commit.ready) @[core.scala 718:71]
    memAccess.loadCommit.ready <= _memAccess_loadCommit_ready_T_3 @[core.scala 718:30]
    decode.writeAddrPRF.exec1Addr <= scheduler.instrRetired.prfAddr @[core.scala 723:33]
    decode.writeAddrPRF.exec1Valid <= scheduler.instrRetired.valid @[core.scala 724:34]
    decode.writeAddrPRF.exec2Addr <= memAccess.responseOut.prfDest @[core.scala 725:33]
    decode.writeAddrPRF.exec3Addr <= extnMResponse.prfDest @[core.scala 726:33]
    node _decode_writeAddrPRF_exec2Valid_T = bits(memAccess.responseOut.instruction, 11, 7) @[core.scala 727:101]
    node _decode_writeAddrPRF_exec2Valid_T_1 = orr(_decode_writeAddrPRF_exec2Valid_T) @[core.scala 727:109]
    node _decode_writeAddrPRF_exec2Valid_T_2 = and(memAccess.responseOut.valid, _decode_writeAddrPRF_exec2Valid_T_1) @[core.scala 727:65]
    decode.writeAddrPRF.exec2Valid <= _decode_writeAddrPRF_exec2Valid_T_2 @[core.scala 727:34]
    node _decode_writeAddrPRF_exec3Valid_T = bits(extnResponseInstruction, 11, 7) @[core.scala 728:83]
    node _decode_writeAddrPRF_exec3Valid_T_1 = orr(_decode_writeAddrPRF_exec3Valid_T) @[core.scala 728:91]
    node _decode_writeAddrPRF_exec3Valid_T_2 = and(extnMResponse.valid, _decode_writeAddrPRF_exec3Valid_T_1) @[core.scala 728:57]
    decode.writeAddrPRF.exec3Valid <= _decode_writeAddrPRF_exec3Valid_T_2 @[core.scala 728:34]
    decode.branchEvalIn.branchMask <= branchEvals.branchMask @[core.scala 730:34]
    decode.branchEvalIn.passFail <= branchEvals.passed @[core.scala 731:32]
    decode.branchEvalIn.targetPC <= branchEvals.nextPC @[core.scala 732:32]
    node _decode_branchEvalIn_fired_T = and(decode.branchEvalIn.ready, branchEvals.valid) @[core.scala 733:58]
    decode.branchEvalIn.fired <= _decode_branchEvalIn_fired_T @[core.scala 733:29]
    rob.branch.pass <= branchEvals.passed @[core.scala 735:19]
    rob.branch.robAddr <= branchEvals.robAddr @[core.scala 736:22]
    rob.branch.valid <= branchEvals.valid @[core.scala 737:20]
    scheduler.memoryReady <= memAccess.canAllocate @[core.scala 739:25]
    scheduler.multuplyAndDivideReady <= mExtensionReady @[core.scala 740:36]
    rob.execPorts[0].exceptionOccurred <= UInt<1>("h0") @[core.scala 742:46]
    rob.execPorts[1].exceptionOccurred <= UInt<1>("h0") @[core.scala 742:46]
    rob.execPorts[2].exceptionOccurred <= UInt<1>("h0") @[core.scala 742:46]
    rob.execPorts[3].exceptionOccurred <= UInt<1>("h0") @[core.scala 742:46]
    rob.execPorts[0].mcause <= UInt<1>("h0") @[core.scala 743:35]
    rob.execPorts[1].mcause <= UInt<1>("h0") @[core.scala 743:35]
    rob.execPorts[2].mcause <= UInt<1>("h0") @[core.scala 743:35]
    rob.execPorts[3].mcause <= UInt<1>("h0") @[core.scala 743:35]
    rob.execPorts[0].mtval <= UInt<1>("h0") @[core.scala 744:34]
    rob.execPorts[1].mtval <= UInt<1>("h0") @[core.scala 744:34]
    rob.execPorts[2].mtval <= UInt<1>("h0") @[core.scala 744:34]
    rob.execPorts[3].mtval <= UInt<1>("h0") @[core.scala 744:34]
    reg rob_execPorts_0_mtval_REG : UInt, clock with :
      reset => (UInt<1>("h0"), rob_execPorts_0_mtval_REG) @[core.scala 745:36]
    rob_execPorts_0_mtval_REG <= singleCycleArithmeticRequest.rs1 @[core.scala 745:36]
    rob.execPorts[0].mtval <= rob_execPorts_0_mtval_REG @[core.scala 745:26]
    rob.execPorts[0].robAddr <= singleCycleArithmeticResponse.robAddr @[core.scala 761:22]
    rob.execPorts[0].valid <= singleCycleArithmeticResponse.valid @[core.scala 762:20]
    rob.execPorts[1].robAddr <= branchEvals.robAddr @[core.scala 761:22]
    rob.execPorts[1].valid <= branchEvals.valid @[core.scala 762:20]
    rob.execPorts[2].robAddr <= memAccess.responseOut.robAddr @[core.scala 761:22]
    rob.execPorts[2].valid <= memAccess.responseOut.valid @[core.scala 762:20]
    rob.execPorts[3].robAddr <= extnMResponse.robAddr @[core.scala 761:22]
    rob.execPorts[3].valid <= extnMResponse.valid @[core.scala 762:20]
    node _T_168 = bits(singleCycleArithmeticRequest.instruction, 11, 7) @[core.scala 766:170]
    node _T_169 = orr(_T_168) @[core.scala 766:178]
    node _T_170 = bits(singleCycleArithmeticRequest.instruction, 6, 2) @[core.scala 766:226]
    node _T_171 = neq(_T_170, UInt<5>("h1c")) @[core.scala 766:233]
    node _T_172 = and(_T_169, _T_171) @[core.scala 766:182]
    reg REG : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[core.scala 766:129]
    REG <= _T_172 @[core.scala 766:129]
    node _T_173 = and(singleCycleArithmeticResponse.valid, REG) @[core.scala 766:119]
    node _T_174 = bits(memAccess.responseOut.instruction, 11, 7) @[core.scala 768:131]
    node _T_175 = orr(_T_174) @[core.scala 768:139]
    node _T_176 = and(memAccess.responseOut.valid, _T_175) @[core.scala 768:95]
    node _T_177 = bits(extnResponseInstruction, 11, 7) @[core.scala 769:97]
    node _T_178 = orr(_T_177) @[core.scala 769:105]
    node _T_179 = and(extnMResponse.valid, _T_178) @[core.scala 769:71]
    prf.w1.addr <= singleCycleArithmeticResponse.prfDest @[core.scala 773:20]
    prf.w1.data <= singleCycleArithmeticResponse.result @[core.scala 774:20]
    prf.w1.en <= _T_173 @[core.scala 775:18]
    prf.w2.addr <= decode.jumpAddrWrite.PRFDest @[core.scala 773:20]
    prf.w2.data <= decode.jumpAddrWrite.linkAddr @[core.scala 774:20]
    prf.w2.en <= decode.jumpAddrWrite.ready @[core.scala 775:18]
    prf.w3.addr <= memAccess.responseOut.prfDest @[core.scala 773:20]
    prf.w3.data <= memAccess.responseOut.result @[core.scala 774:20]
    prf.w3.en <= _T_176 @[core.scala 775:18]
    prf.w4.addr <= extnMResponse.prfDest @[core.scala 773:20]
    prf.w4.data <= extnMResponse.result @[core.scala 774:20]
    prf.w4.en <= _T_179 @[core.scala 775:18]
    node _T_180 = bits(memAccess.responseOut.instruction, 11, 7) @[core.scala 785:69]
    node _T_181 = orr(_T_180) @[core.scala 785:77]
    node _T_182 = and(memAccess.responseOut.valid, _T_181) @[core.scala 785:33]
    node _T_183 = bits(extnResponseInstruction, 11, 7) @[core.scala 786:51]
    node _T_184 = orr(_T_183) @[core.scala 786:59]
    node _T_185 = and(extnMResponse.valid, _T_184) @[core.scala 786:25]
    wakeUps[0].prfAddr <= scheduler.instrRetired.prfAddr @[core.scala 790:20]
    wakeUps[0].valid <= scheduler.instrRetired.valid @[core.scala 791:18]
    wakeUps[1].prfAddr <= memAccess.responseOut.prfDest @[core.scala 790:20]
    wakeUps[1].valid <= _T_182 @[core.scala 791:18]
    wakeUps[2].prfAddr <= extnMResponse.prfDest @[core.scala 790:20]
    wakeUps[2].valid <= _T_185 @[core.scala 791:18]
    decode.jumpAddrWrite.fired <= decode.jumpAddrWrite.ready @[core.scala 794:30]
    prf.branchCheck.branchmask <= branchOps.branchMask @[core.scala 796:30]
    prf.branchCheck.pass <= branchOps.passed @[core.scala 797:24]
    prf.branchCheck.valid <= branchOps.valid @[core.scala 798:25]
    reg prf_fromStore_branchmask_REG : UInt, clock with :
      reset => (UInt<1>("h0"), prf_fromStore_branchmask_REG) @[core.scala 800:46]
    prf_fromStore_branchmask_REG <= dataQueue.toPRF.branchMask @[core.scala 800:46]
    reg prf_fromStore_branchmask_REG_1 : UInt, clock with :
      reset => (UInt<1>("h0"), prf_fromStore_branchmask_REG_1) @[core.scala 800:38]
    prf_fromStore_branchmask_REG_1 <= prf_fromStore_branchmask_REG @[core.scala 800:38]
    prf.fromStore.branchmask <= prf_fromStore_branchmask_REG_1 @[core.scala 800:28]
    reg prf_fromStore_instruction_REG : UInt, clock with :
      reset => (UInt<1>("h0"), prf_fromStore_instruction_REG) @[core.scala 801:47]
    prf_fromStore_instruction_REG <= dataQueue.toPRF.instruction @[core.scala 801:47]
    reg prf_fromStore_instruction_REG_1 : UInt, clock with :
      reset => (UInt<1>("h0"), prf_fromStore_instruction_REG_1) @[core.scala 801:39]
    prf_fromStore_instruction_REG_1 <= prf_fromStore_instruction_REG @[core.scala 801:39]
    prf.fromStore.instruction <= prf_fromStore_instruction_REG_1 @[core.scala 801:29]
    reg prf_fromStore_rs2Addr_REG : UInt, clock with :
      reset => (UInt<1>("h0"), prf_fromStore_rs2Addr_REG) @[core.scala 802:43]
    prf_fromStore_rs2Addr_REG <= dataQueue.toPRF.rs2Addr @[core.scala 802:43]
    reg prf_fromStore_rs2Addr_REG_1 : UInt, clock with :
      reset => (UInt<1>("h0"), prf_fromStore_rs2Addr_REG_1) @[core.scala 802:35]
    prf_fromStore_rs2Addr_REG_1 <= prf_fromStore_rs2Addr_REG @[core.scala 802:35]
    prf.fromStore.rs2Addr <= prf_fromStore_rs2Addr_REG_1 @[core.scala 802:25]
    node _prf_fromStore_valid_T = and(dataQueue.toPRF.valid, dataQueue.fromROB.readyNow) @[core.scala 803:64]
    reg prf_fromStore_valid_REG : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[core.scala 803:41]
    prf_fromStore_valid_REG <= _prf_fromStore_valid_T @[core.scala 803:41]
    reg prf_fromStore_valid_REG_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[core.scala 803:33]
    prf_fromStore_valid_REG_1 <= prf_fromStore_valid_REG @[core.scala 803:33]
    prf.fromStore.valid <= prf_fromStore_valid_REG_1 @[core.scala 803:23]
    prf.fromStore.prfDest <= UInt<1>("h0") @[core.scala 804:25]
    dataQueue.fromBranch.robAddr <= branchEvals.robAddr @[core.scala 806:32]
    dataQueue.fromBranch.passOrFail <= branchOps.passed @[core.scala 807:35]
    dataQueue.fromBranch.valid <= branchOps.valid @[core.scala 808:30]
    dataQueue.robMapUpdate.robAddr <= rob.allocate.robAddr @[core.scala 810:34]
    dataQueue.robMapUpdate.valid <= rob.allocate.fired @[core.scala 811:32]
    dataQueue.fromROB.readyNow <= memAccess.writeCommit.fired @[core.scala 813:30]
    memAccess.writeDataIn.data <= prf.toStore.rs2Data @[core.scala 815:30]
    memAccess.writeDataIn.valid <= prf.toStore.valid @[core.scala 816:31]
    node _memAccess_writeCommit_fired_T = bits(rob.commit.instruction, 6, 4) @[core.scala 818:88]
    node _memAccess_writeCommit_fired_T_1 = eq(_memAccess_writeCommit_fired_T, UInt<2>("h2")) @[core.scala 818:95]
    node _memAccess_writeCommit_fired_T_2 = and(memAccess.writeCommit.ready, _memAccess_writeCommit_fired_T_1) @[core.scala 818:62]
    node _memAccess_writeCommit_fired_T_3 = and(_memAccess_writeCommit_fired_T_2, rob.commit.fired) @[core.scala 818:109]
    memAccess.writeCommit.fired <= _memAccess_writeCommit_fired_T_3 @[core.scala 818:31]
    scheduler.wakeUpExt[0].prfAddr <= wakeUps[1].prfAddr @[core.scala 822:21]
    scheduler.wakeUpExt[0].valid <= wakeUps[1].valid @[core.scala 822:21]
    scheduler.wakeUpExt[1].prfAddr <= wakeUps[2].prfAddr @[core.scala 822:21]
    scheduler.wakeUpExt[1].valid <= wakeUps[2].valid @[core.scala 822:21]
    decode.branchEvalOut.fired <= decode.branchEvalOut.ready @[core.scala 825:30]
    scheduler.branchOps.passed <= branchOps.passed @[core.scala 827:23]
    scheduler.branchOps.branchMask <= branchOps.branchMask @[core.scala 827:23]
    scheduler.branchOps.valid <= branchOps.valid @[core.scala 827:23]
    dPort.CDLAST <= memAccess.dPort.CDLAST @[core.scala 833:9]
    dPort.CDDATA <= memAccess.dPort.CDDATA @[core.scala 833:9]
    memAccess.dPort.CDREADY <= dPort.CDREADY @[core.scala 833:9]
    dPort.CDVALID <= memAccess.dPort.CDVALID @[core.scala 833:9]
    dPort.CRRESP <= memAccess.dPort.CRRESP @[core.scala 833:9]
    memAccess.dPort.CRREADY <= dPort.CRREADY @[core.scala 833:9]
    dPort.CRVALID <= memAccess.dPort.CRVALID @[core.scala 833:9]
    memAccess.dPort.ACPROT <= dPort.ACPROT @[core.scala 833:9]
    memAccess.dPort.ACSNOOP <= dPort.ACSNOOP @[core.scala 833:9]
    memAccess.dPort.ACADDR <= dPort.ACADDR @[core.scala 833:9]
    dPort.ACREADY <= memAccess.dPort.ACREADY @[core.scala 833:9]
    memAccess.dPort.ACVALID <= dPort.ACVALID @[core.scala 833:9]
    memAccess.dPort.RRESP <= dPort.RRESP @[core.scala 833:9]
    dPort.ARBAR <= memAccess.dPort.ARBAR @[core.scala 833:9]
    dPort.ARSNOOP <= memAccess.dPort.ARSNOOP @[core.scala 833:9]
    dPort.ARDOMAIN <= memAccess.dPort.ARDOMAIN @[core.scala 833:9]
    dPort.AWBAR <= memAccess.dPort.AWBAR @[core.scala 833:9]
    dPort.AWSNOOP <= memAccess.dPort.AWSNOOP @[core.scala 833:9]
    dPort.AWDOMAIN <= memAccess.dPort.AWDOMAIN @[core.scala 833:9]
    dPort.RREADY <= memAccess.dPort.RREADY @[core.scala 833:9]
    memAccess.dPort.RVALID <= dPort.RVALID @[core.scala 833:9]
    memAccess.dPort.RLAST <= dPort.RLAST @[core.scala 833:9]
    memAccess.dPort.RDATA <= dPort.RDATA @[core.scala 833:9]
    memAccess.dPort.RID <= dPort.RID @[core.scala 833:9]
    memAccess.dPort.ARREADY <= dPort.ARREADY @[core.scala 833:9]
    dPort.ARVALID <= memAccess.dPort.ARVALID @[core.scala 833:9]
    dPort.ARQOS <= memAccess.dPort.ARQOS @[core.scala 833:9]
    dPort.ARPROT <= memAccess.dPort.ARPROT @[core.scala 833:9]
    dPort.ARCACHE <= memAccess.dPort.ARCACHE @[core.scala 833:9]
    dPort.ARLOCK <= memAccess.dPort.ARLOCK @[core.scala 833:9]
    dPort.ARBURST <= memAccess.dPort.ARBURST @[core.scala 833:9]
    dPort.ARSIZE <= memAccess.dPort.ARSIZE @[core.scala 833:9]
    dPort.ARLEN <= memAccess.dPort.ARLEN @[core.scala 833:9]
    dPort.ARADDR <= memAccess.dPort.ARADDR @[core.scala 833:9]
    dPort.ARID <= memAccess.dPort.ARID @[core.scala 833:9]
    dPort.BREADY <= memAccess.dPort.BREADY @[core.scala 833:9]
    memAccess.dPort.BVALID <= dPort.BVALID @[core.scala 833:9]
    memAccess.dPort.BRESP <= dPort.BRESP @[core.scala 833:9]
    memAccess.dPort.BID <= dPort.BID @[core.scala 833:9]
    memAccess.dPort.WREADY <= dPort.WREADY @[core.scala 833:9]
    dPort.WVALID <= memAccess.dPort.WVALID @[core.scala 833:9]
    dPort.WLAST <= memAccess.dPort.WLAST @[core.scala 833:9]
    dPort.WSTRB <= memAccess.dPort.WSTRB @[core.scala 833:9]
    dPort.WDATA <= memAccess.dPort.WDATA @[core.scala 833:9]
    memAccess.dPort.AWREADY <= dPort.AWREADY @[core.scala 833:9]
    dPort.AWVALID <= memAccess.dPort.AWVALID @[core.scala 833:9]
    dPort.AWQOS <= memAccess.dPort.AWQOS @[core.scala 833:9]
    dPort.AWPROT <= memAccess.dPort.AWPROT @[core.scala 833:9]
    dPort.AWCACHE <= memAccess.dPort.AWCACHE @[core.scala 833:9]
    dPort.AWLOCK <= memAccess.dPort.AWLOCK @[core.scala 833:9]
    dPort.AWBURST <= memAccess.dPort.AWBURST @[core.scala 833:9]
    dPort.AWSIZE <= memAccess.dPort.AWSIZE @[core.scala 833:9]
    dPort.AWLEN <= memAccess.dPort.AWLEN @[core.scala 833:9]
    dPort.AWADDR <= memAccess.dPort.AWADDR @[core.scala 833:9]
    dPort.AWID <= memAccess.dPort.AWID @[core.scala 833:9]
    peripheral.RREADY <= memAccess.peripheral.RREADY @[core.scala 834:14]
    memAccess.peripheral.RVALID <= peripheral.RVALID @[core.scala 834:14]
    memAccess.peripheral.RLAST <= peripheral.RLAST @[core.scala 834:14]
    memAccess.peripheral.RRESP <= peripheral.RRESP @[core.scala 834:14]
    memAccess.peripheral.RDATA <= peripheral.RDATA @[core.scala 834:14]
    memAccess.peripheral.RID <= peripheral.RID @[core.scala 834:14]
    memAccess.peripheral.ARREADY <= peripheral.ARREADY @[core.scala 834:14]
    peripheral.ARVALID <= memAccess.peripheral.ARVALID @[core.scala 834:14]
    peripheral.ARQOS <= memAccess.peripheral.ARQOS @[core.scala 834:14]
    peripheral.ARPROT <= memAccess.peripheral.ARPROT @[core.scala 834:14]
    peripheral.ARCACHE <= memAccess.peripheral.ARCACHE @[core.scala 834:14]
    peripheral.ARLOCK <= memAccess.peripheral.ARLOCK @[core.scala 834:14]
    peripheral.ARBURST <= memAccess.peripheral.ARBURST @[core.scala 834:14]
    peripheral.ARSIZE <= memAccess.peripheral.ARSIZE @[core.scala 834:14]
    peripheral.ARLEN <= memAccess.peripheral.ARLEN @[core.scala 834:14]
    peripheral.ARADDR <= memAccess.peripheral.ARADDR @[core.scala 834:14]
    peripheral.ARID <= memAccess.peripheral.ARID @[core.scala 834:14]
    peripheral.BREADY <= memAccess.peripheral.BREADY @[core.scala 834:14]
    memAccess.peripheral.BVALID <= peripheral.BVALID @[core.scala 834:14]
    memAccess.peripheral.BRESP <= peripheral.BRESP @[core.scala 834:14]
    memAccess.peripheral.BID <= peripheral.BID @[core.scala 834:14]
    memAccess.peripheral.WREADY <= peripheral.WREADY @[core.scala 834:14]
    peripheral.WVALID <= memAccess.peripheral.WVALID @[core.scala 834:14]
    peripheral.WLAST <= memAccess.peripheral.WLAST @[core.scala 834:14]
    peripheral.WSTRB <= memAccess.peripheral.WSTRB @[core.scala 834:14]
    peripheral.WDATA <= memAccess.peripheral.WDATA @[core.scala 834:14]
    memAccess.peripheral.AWREADY <= peripheral.AWREADY @[core.scala 834:14]
    peripheral.AWVALID <= memAccess.peripheral.AWVALID @[core.scala 834:14]
    peripheral.AWQOS <= memAccess.peripheral.AWQOS @[core.scala 834:14]
    peripheral.AWPROT <= memAccess.peripheral.AWPROT @[core.scala 834:14]
    peripheral.AWCACHE <= memAccess.peripheral.AWCACHE @[core.scala 834:14]
    peripheral.AWLOCK <= memAccess.peripheral.AWLOCK @[core.scala 834:14]
    peripheral.AWBURST <= memAccess.peripheral.AWBURST @[core.scala 834:14]
    peripheral.AWSIZE <= memAccess.peripheral.AWSIZE @[core.scala 834:14]
    peripheral.AWLEN <= memAccess.peripheral.AWLEN @[core.scala 834:14]
    peripheral.AWADDR <= memAccess.peripheral.AWADDR @[core.scala 834:14]
    peripheral.AWID <= memAccess.peripheral.AWID @[core.scala 834:14]
    node _memAccess_initiateFence_T = and(rob.commit.fired, rob.commit.is_fence) @[core.scala 845:47]
    memAccess.initiateFence <= _memAccess_initiateFence_T @[core.scala 845:27]
    wire _fenceState_WIRE : { state : UInt<2>, branchMask : UInt<5>}
    _fenceState_WIRE.branchMask is invalid
    _fenceState_WIRE.state <= UInt<2>("h0")
    reg fenceState : { state : UInt<2>, branchMask : UInt<5>}, clock with :
      reset => (reset, _fenceState_WIRE) @[core.scala 849:27]
    node _T_186 = eq(UInt<2>("h0"), fenceState.state) @[core.scala 856:28]
    when _T_186 : @[core.scala 856:28]
      node _T_187 = bits(fetch.toDecode.instruction, 19, 0) @[core.scala 858:64]
      node _T_188 = and(_T_187, UInt<20>("hfefff")) @[core.scala 858:72]
      node _T_189 = eq(_T_188, UInt<20>("hf")) @[core.scala 858:92]
      node _T_190 = and(fetch.toDecode.fired, _T_189) @[core.scala 858:33]
      when _T_190 : @[core.scala 858:115]
        fenceState.state <= UInt<2>("h1") @[core.scala 859:26]
    else :
      node _T_191 = eq(UInt<2>("h1"), fenceState.state) @[core.scala 856:28]
      when _T_191 : @[core.scala 856:28]
        node _T_192 = eq(branchEvals.passed, UInt<1>("h0")) @[core.scala 863:33]
        node _T_193 = and(branchEvals.valid, _T_192) @[core.scala 863:30]
        when _T_193 : @[core.scala 863:54]
          memAccess.initiateFence <= UInt<1>("h1") @[core.scala 865:33]
          fenceState.state <= UInt<2>("h0") @[core.scala 866:26]
        else :
          node _T_194 = bits(decode.toExec.instruction, 19, 0) @[core.scala 867:68]
          node _T_195 = and(_T_194, UInt<20>("hfefff")) @[core.scala 867:76]
          node _T_196 = eq(_T_195, UInt<20>("hf")) @[core.scala 867:96]
          node _T_197 = and(decode.toExec.fired, _T_196) @[core.scala 867:38]
          when _T_197 : @[core.scala 867:119]
            fenceState.state <= UInt<2>("h2") @[core.scala 868:26]
            fenceState.branchMask <= decode.toExec.branchMask @[core.scala 869:31]
      else :
        node _T_198 = eq(UInt<2>("h2"), fenceState.state) @[core.scala 856:28]
        when _T_198 : @[core.scala 856:28]
          node _T_199 = and(branchEvals.branchMask, fenceState.branchMask) @[core.scala 873:57]
          node _T_200 = orr(_T_199) @[core.scala 873:82]
          node _T_201 = and(branchEvals.valid, _T_200) @[core.scala 873:30]
          node _T_202 = eq(branchEvals.passed, UInt<1>("h0")) @[core.scala 873:89]
          node _T_203 = and(_T_201, _T_202) @[core.scala 873:86]
          when _T_203 : @[core.scala 873:110]
            memAccess.initiateFence <= UInt<1>("h1") @[core.scala 875:33]
            fenceState.state <= UInt<2>("h0") @[core.scala 876:26]
          else :
            node _T_204 = and(rob.commit.fired, rob.commit.is_fence) @[core.scala 877:35]
            when _T_204 : @[core.scala 877:59]
              memAccess.initiateFence <= UInt<1>("h1") @[core.scala 878:33]
              fenceState.state <= UInt<2>("h0") @[core.scala 879:26]
            else :
              node _T_205 = and(branchEvals.branchMask, fenceState.branchMask) @[core.scala 880:63]
              node _T_206 = orr(_T_205) @[core.scala 880:88]
              node _T_207 = and(branchEvals.valid, _T_206) @[core.scala 880:36]
              node _T_208 = and(_T_207, branchEvals.passed) @[core.scala 880:92]
              when _T_208 : @[core.scala 880:115]
                node _fenceState_branchMask_T = xor(fenceState.branchMask, branchOps.branchMask) @[core.scala 881:57]
                fenceState.branchMask <= _fenceState_branchMask_T @[core.scala 881:31]
    node _memAccess_fenceInstructions_fired_T = and(memAccess.fenceInstructions.ready, icache.updateAllCachelines.ready) @[core.scala 888:45]
    memAccess.fenceInstructions.fired <= _memAccess_fenceInstructions_fired_T @[core.scala 888:7]
    node _icache_updateAllCachelines_fired_T = and(memAccess.fenceInstructions.ready, icache.updateAllCachelines.ready) @[core.scala 888:45]
    icache.updateAllCachelines.fired <= _icache_updateAllCachelines_fired_T @[core.scala 888:7]
    fetch.carryOutFence.fired <= fetch.carryOutFence.ready @[core.scala 890:29]
    fetch.updateAllCachelines.fired <= fetch.updateAllCachelines.ready @[core.scala 895:35]
    node _icache_cachelinesUpdatesResp_fired_T = and(icache.cachelinesUpdatesResp.ready, fetch.cachelinesUpdatesResp.ready) @[core.scala 898:46]
    icache.cachelinesUpdatesResp.fired <= _icache_cachelinesUpdatesResp_fired_T @[core.scala 898:7]
    node _fetch_cachelinesUpdatesResp_fired_T = and(icache.cachelinesUpdatesResp.ready, fetch.cachelinesUpdatesResp.ready) @[core.scala 898:46]
    fetch.cachelinesUpdatesResp.fired <= _fetch_cachelinesUpdatesResp_fired_T @[core.scala 898:7]
    decode.writeBackResult.robAddr <= UInt<1>("h0") @[core.scala 901:34]
    decode.writeBackResult.data <= rob.commit.mtval @[core.scala 902:31]
    node _T_209 = eq(branchOps.passed, UInt<1>("h0")) @[core.scala 904:27]
    node _T_210 = and(branchOps.valid, _T_209) @[core.scala 904:24]
    node _T_211 = and(_T_210, fetch.cachelinesUpdatesResp.ready) @[core.scala 904:45]
    when _T_211 : @[core.scala 904:85]
      memAccess.initiateFence <= UInt<1>("h1") @[core.scala 905:29]
    node _T_212 = eq(branchOps.passed, UInt<1>("h0")) @[core.scala 907:35]
    node _T_213 = and(branchOps.valid, _T_212) @[core.scala 907:32]
    node _T_214 = eq(fetch.toDecode.instruction, UInt<28>("hff0000f")) @[core.scala 907:85]
    node _T_215 = and(_T_214, fetch.toDecode.fired) @[core.scala 907:103]
    node _T_216 = and(_T_213, _T_215) @[core.scala 907:53]
    reg REG_1 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), REG_1) @[core.scala 907:15]
    REG_1 <= _T_216 @[core.scala 907:15]
    when REG_1 : @[core.scala 907:131]
      memAccess.initiateFence <= UInt<1>("h1") @[core.scala 908:29]
    node _T_217 = bits(scheduler.release.instruction, 4, 2) @[core.scala 913:37]
    node _T_218 = eq(_T_217, UInt<3>("h2")) @[core.scala 913:44]
    when _T_218 : @[core.scala 913:63]
      prf.execRead.valid <= UInt<1>("h0") @[core.scala 913:84]
    reg minstret : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[core.scala 922:25]
    reg programRunning : UInt<1>, clock with :
      reset => (reset, UInt<1>("h1")) @[core.scala 924:31]
    wire _counters_WIRE : { minstret : UInt<64>, decodeReady : UInt<64>, decodeFired : UInt<64>, branchCount : UInt<64>, branchesPassed : UInt<64>, cycleCount : UInt<64>, schedulerFull : UInt<64>, robFull : UInt<64>}
    _counters_WIRE.robFull <= UInt<1>("h0")
    _counters_WIRE.schedulerFull <= UInt<1>("h0")
    _counters_WIRE.cycleCount <= UInt<1>("h0")
    _counters_WIRE.branchesPassed <= UInt<1>("h0")
    _counters_WIRE.branchCount <= UInt<1>("h0")
    _counters_WIRE.decodeFired <= UInt<1>("h0")
    _counters_WIRE.decodeReady <= UInt<1>("h0")
    _counters_WIRE.minstret <= UInt<1>("h0")
    reg counters : { minstret : UInt<64>, decodeReady : UInt<64>, decodeFired : UInt<64>, branchCount : UInt<64>, branchesPassed : UInt<64>, cycleCount : UInt<64>, schedulerFull : UInt<64>, robFull : UInt<64>}, clock with :
      reset => (reset, _counters_WIRE) @[core.scala 926:25]
    node _T_219 = geq(rob.commit.pc, UInt<21>("h100440")) @[core.scala 946:42]
    node _T_220 = and(rob.commit.fired, _T_219) @[core.scala 946:25]
    when _T_220 : @[core.scala 946:58]
      programRunning <= UInt<1>("h0") @[core.scala 946:75]
    when programRunning : @[core.scala 947:24]
      node _counters_cycleCount_T = add(counters.cycleCount, UInt<1>("h1")) @[core.scala 948:48]
      node _counters_cycleCount_T_1 = tail(_counters_cycleCount_T, 1) @[core.scala 948:48]
      counters.cycleCount <= _counters_cycleCount_T_1 @[core.scala 948:25]
      when branchOps.valid : @[core.scala 949:27]
        node _counters_branchCount_T = add(counters.branchCount, UInt<1>("h1")) @[core.scala 950:52]
        node _counters_branchCount_T_1 = tail(_counters_branchCount_T, 1) @[core.scala 950:52]
        counters.branchCount <= _counters_branchCount_T_1 @[core.scala 950:28]
        when branchOps.passed : @[core.scala 951:30]
          node _counters_branchesPassed_T = add(counters.branchesPassed, UInt<1>("h1")) @[core.scala 952:60]
          node _counters_branchesPassed_T_1 = tail(_counters_branchesPassed_T, 1) @[core.scala 952:60]
          counters.branchesPassed <= _counters_branchesPassed_T_1 @[core.scala 952:33]
      when decode.toExec.ready : @[core.scala 955:31]
        node _counters_decodeReady_T = add(counters.decodeReady, UInt<1>("h1")) @[core.scala 956:52]
        node _counters_decodeReady_T_1 = tail(_counters_decodeReady_T, 1) @[core.scala 956:52]
        counters.decodeReady <= _counters_decodeReady_T_1 @[core.scala 956:28]
        when decode.toExec.fired : @[core.scala 957:33]
          node _counters_decodeFired_T = add(counters.decodeFired, UInt<1>("h1")) @[core.scala 957:80]
          node _counters_decodeFired_T_1 = tail(_counters_decodeFired_T, 1) @[core.scala 957:80]
          counters.decodeFired <= _counters_decodeFired_T_1 @[core.scala 957:56]
        node _T_221 = eq(scheduler.allocate.ready, UInt<1>("h0")) @[core.scala 958:12]
        when _T_221 : @[core.scala 958:39]
          node _counters_schedulerFull_T = add(counters.schedulerFull, UInt<1>("h1")) @[core.scala 958:90]
          node _counters_schedulerFull_T_1 = tail(_counters_schedulerFull_T, 1) @[core.scala 958:90]
          counters.schedulerFull <= _counters_schedulerFull_T_1 @[core.scala 958:64]
        node _T_222 = eq(rob.allocate.ready, UInt<1>("h0")) @[core.scala 959:12]
        when _T_222 : @[core.scala 959:33]
          node _counters_robFull_T = add(counters.robFull, UInt<1>("h1")) @[core.scala 959:72]
          node _counters_robFull_T_1 = tail(_counters_robFull_T, 1) @[core.scala 959:72]
          counters.robFull <= _counters_robFull_T_1 @[core.scala 959:52]
      when rob.commit.fired : @[core.scala 961:28]
        node _counters_minstret_T = add(counters.minstret, UInt<1>("h1")) @[core.scala 962:46]
        node _counters_minstret_T_1 = tail(_counters_minstret_T, 1) @[core.scala 962:46]
        counters.minstret <= _counters_minstret_T_1 @[core.scala 962:25]
    core_sample0 <= decode.fromFetch.expected.valid @[core.scala 982:16]
    node _core_sample1_T = bits(decode.fromFetch.expected.pc, 30, 30) @[core.scala 983:47]
    core_sample1 <= _core_sample1_T @[core.scala 983:16]
    reg branchCounter : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[core.scala 1020:30]
    node _branchCounter_T = bits(decode.fromFetch.instruction, 6, 4) @[core.scala 1024:60]
    node _branchCounter_T_1 = eq(_branchCounter_T, UInt<3>("h6")) @[core.scala 1024:67]
    node _branchCounter_T_2 = and(decode.fromFetch.fired, _branchCounter_T_1) @[core.scala 1024:29]
    node _branchCounter_T_3 = add(branchCounter, _branchCounter_T_2) @[core.scala 1021:34]
    node _branchCounter_T_4 = sub(_branchCounter_T_3, branchEvals.valid) @[core.scala 1024:81]
    node _branchCounter_T_5 = asUInt(_branchCounter_T_4) @[core.scala 1024:81]
    branchCounter <= _branchCounter_T_5 @[core.scala 1021:17]
    node _T_223 = eq(branchEvals.passed, UInt<1>("h0")) @[core.scala 1027:29]
    node _T_224 = and(branchEvals.valid, _T_223) @[core.scala 1027:26]
    when _T_224 : @[core.scala 1027:50]
      branchCounter <= UInt<1>("h0") @[core.scala 1030:19]
    reg lastBranchExecRob : UInt<4>, clock with :
      reset => (UInt<1>("h0"), lastBranchExecRob) @[core.scala 1034:30]
    reg lastBranchExecPC : UInt<64>, clock with :
      reset => (UInt<1>("h0"), lastBranchExecPC) @[core.scala 1035:29]
    when branchEvals.valid : @[core.scala 1036:27]
      lastBranchExecRob <= branchEvals.robAddr @[core.scala 1037:23]
      reg lastBranchExecPC_REG : UInt, clock with :
        reset => (UInt<1>("h0"), lastBranchExecPC_REG) @[core.scala 1038:32]
      lastBranchExecPC_REG <= branchPCs[0].pc @[core.scala 1038:32]
      lastBranchExecPC <= lastBranchExecPC_REG @[core.scala 1038:22]
    decode.interruptedPC <= lastBranchExecPC @[core.scala 1040:24]
    reg lastRetiredSystem : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[core.scala 1054:34]
    when decode.fromFetch.fired : @[core.scala 1055:32]
      node _lastRetiredSystem_T = bits(fetch.toDecode.instruction, 6, 0) @[core.scala 1055:81]
      node _lastRetiredSystem_T_1 = eq(_lastRetiredSystem_T, UInt<7>("h73")) @[core.scala 1055:88]
      lastRetiredSystem <= _lastRetiredSystem_T_1 @[core.scala 1055:52]
    reg interruptInjectStatus : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[core.scala 1057:38]
    node _T_225 = eq(UInt<2>("h0"), interruptInjectStatus) @[core.scala 1058:33]
    when _T_225 : @[core.scala 1058:33]
      node _T_226 = and(decode.canTakeInterrupt, MTIP) @[core.scala 1062:36]
      node _T_227 = eq(lastRetiredSystem, UInt<1>("h0")) @[core.scala 1062:47]
      node _T_228 = and(_T_226, _T_227) @[core.scala 1062:44]
      when _T_228 : @[core.scala 1062:67]
        interruptInjectStatus <= UInt<2>("h1") @[core.scala 1062:91]
    else :
      node _T_229 = eq(UInt<2>("h1"), interruptInjectStatus) @[core.scala 1058:33]
      when _T_229 : @[core.scala 1058:33]
        when decode.canTakeInterrupt : @[core.scala 1066:56]
          node _T_230 = eq(branchEvals.valid, UInt<1>("h0")) @[core.scala 1067:38]
          when _T_230 : @[core.scala 1067:58]
            node _T_231 = orr(branchCounter) @[core.scala 1068:60]
            when _T_231 : @[core.scala 1068:65]
              node _T_232 = bits(branchInstruction.instruction, 6, 0) @[core.scala 1069:110]
              node _T_233 = eq(_T_232, UInt<7>("h63")) @[core.scala 1069:117]
              node _T_234 = and(branchInstruction.valid, _T_233) @[core.scala 1069:78]
              when _T_234 : @[core.scala 1069:135]
                interruptInjectStatus <= UInt<2>("h2") @[core.scala 1070:79]
                branchEvals.passed <= UInt<1>("h0") @[core.scala 1073:76]
            else :
              node _T_235 = bits(fetch.toDecode.instruction, 6, 0) @[core.scala 1076:81]
              node _T_236 = neq(_T_235, UInt<4>("hf")) @[core.scala 1076:88]
              node _T_237 = bits(fetch.toDecode.instruction, 6, 0) @[core.scala 1076:136]
              node _T_238 = neq(_T_237, UInt<7>("h73")) @[core.scala 1076:143]
              node _T_239 = and(_T_236, _T_238) @[core.scala 1076:106]
              when _T_239 : @[core.scala 1076:162]
                decode.fromFetch.instruction <= UInt<64>("h80000073") @[core.scala 1078:86]
                when decode.fromFetch.fired : @[core.scala 1083:86]
                  interruptInjectStatus <= UInt<2>("h0") @[core.scala 1083:110]
      else :
        node _T_240 = eq(UInt<2>("h2"), interruptInjectStatus) @[core.scala 1058:33]
        when _T_240 : @[core.scala 1058:33]
          interruptInjectStatus <= UInt<2>("h3") @[core.scala 1090:29]
        else :
          node _T_241 = eq(UInt<2>("h3"), interruptInjectStatus) @[core.scala 1058:33]
          when _T_241 : @[core.scala 1058:33]
            node _T_242 = eq(rob.commit.robAddr, lastBranchExecRob) @[core.scala 1093:31]
            when _T_242 : @[core.scala 1093:54]
              decode.writeBackResult.instruction <= UInt<64>("h80000073") @[core.scala 1095:44]
              when decode.writeBackResult.fired : @[core.scala 1097:44]
                interruptInjectStatus <= UInt<2>("h0") @[core.scala 1097:68]
    node _T_243 = eq(interruptInjectStatus, UInt<2>("h0")) @[core.scala 1101:33]
    node _T_244 = eq(interruptInjectStatus, UInt<2>("h1")) @[core.scala 1101:77]
    node _T_245 = orr(branchCounter) @[core.scala 1101:119]
    node _T_246 = eq(_T_245, UInt<1>("h0")) @[core.scala 1101:104]
    node _T_247 = and(_T_244, _T_246) @[core.scala 1101:101]
    node _T_248 = or(_T_243, _T_247) @[core.scala 1101:50]
    node _T_249 = eq(_T_248, UInt<1>("h0")) @[core.scala 1101:8]
    when _T_249 : @[core.scala 1101:126]
      fetch.toDecode.fired <= UInt<1>("h0") @[core.scala 1103:26]
      decode.fromFetch.fired <= UInt<1>("h0") @[core.scala 1104:28]
    wire architecturalRegisterFile : UInt<64>[32] @[system.scala 54:44]
    architecturalRegisterFile[0] <= prf.registerFileOutput[decode.retiredRenamedTable.table[0]] @[system.scala 54:44]
    architecturalRegisterFile[1] <= prf.registerFileOutput[decode.retiredRenamedTable.table[1]] @[system.scala 54:44]
    architecturalRegisterFile[2] <= prf.registerFileOutput[decode.retiredRenamedTable.table[2]] @[system.scala 54:44]
    architecturalRegisterFile[3] <= prf.registerFileOutput[decode.retiredRenamedTable.table[3]] @[system.scala 54:44]
    architecturalRegisterFile[4] <= prf.registerFileOutput[decode.retiredRenamedTable.table[4]] @[system.scala 54:44]
    architecturalRegisterFile[5] <= prf.registerFileOutput[decode.retiredRenamedTable.table[5]] @[system.scala 54:44]
    architecturalRegisterFile[6] <= prf.registerFileOutput[decode.retiredRenamedTable.table[6]] @[system.scala 54:44]
    architecturalRegisterFile[7] <= prf.registerFileOutput[decode.retiredRenamedTable.table[7]] @[system.scala 54:44]
    architecturalRegisterFile[8] <= prf.registerFileOutput[decode.retiredRenamedTable.table[8]] @[system.scala 54:44]
    architecturalRegisterFile[9] <= prf.registerFileOutput[decode.retiredRenamedTable.table[9]] @[system.scala 54:44]
    architecturalRegisterFile[10] <= prf.registerFileOutput[decode.retiredRenamedTable.table[10]] @[system.scala 54:44]
    architecturalRegisterFile[11] <= prf.registerFileOutput[decode.retiredRenamedTable.table[11]] @[system.scala 54:44]
    architecturalRegisterFile[12] <= prf.registerFileOutput[decode.retiredRenamedTable.table[12]] @[system.scala 54:44]
    architecturalRegisterFile[13] <= prf.registerFileOutput[decode.retiredRenamedTable.table[13]] @[system.scala 54:44]
    architecturalRegisterFile[14] <= prf.registerFileOutput[decode.retiredRenamedTable.table[14]] @[system.scala 54:44]
    architecturalRegisterFile[15] <= prf.registerFileOutput[decode.retiredRenamedTable.table[15]] @[system.scala 54:44]
    architecturalRegisterFile[16] <= prf.registerFileOutput[decode.retiredRenamedTable.table[16]] @[system.scala 54:44]
    architecturalRegisterFile[17] <= prf.registerFileOutput[decode.retiredRenamedTable.table[17]] @[system.scala 54:44]
    architecturalRegisterFile[18] <= prf.registerFileOutput[decode.retiredRenamedTable.table[18]] @[system.scala 54:44]
    architecturalRegisterFile[19] <= prf.registerFileOutput[decode.retiredRenamedTable.table[19]] @[system.scala 54:44]
    architecturalRegisterFile[20] <= prf.registerFileOutput[decode.retiredRenamedTable.table[20]] @[system.scala 54:44]
    architecturalRegisterFile[21] <= prf.registerFileOutput[decode.retiredRenamedTable.table[21]] @[system.scala 54:44]
    architecturalRegisterFile[22] <= prf.registerFileOutput[decode.retiredRenamedTable.table[22]] @[system.scala 54:44]
    architecturalRegisterFile[23] <= prf.registerFileOutput[decode.retiredRenamedTable.table[23]] @[system.scala 54:44]
    architecturalRegisterFile[24] <= prf.registerFileOutput[decode.retiredRenamedTable.table[24]] @[system.scala 54:44]
    architecturalRegisterFile[25] <= prf.registerFileOutput[decode.retiredRenamedTable.table[25]] @[system.scala 54:44]
    architecturalRegisterFile[26] <= prf.registerFileOutput[decode.retiredRenamedTable.table[26]] @[system.scala 54:44]
    architecturalRegisterFile[27] <= prf.registerFileOutput[decode.retiredRenamedTable.table[27]] @[system.scala 54:44]
    architecturalRegisterFile[28] <= prf.registerFileOutput[decode.retiredRenamedTable.table[28]] @[system.scala 54:44]
    architecturalRegisterFile[29] <= prf.registerFileOutput[decode.retiredRenamedTable.table[29]] @[system.scala 54:44]
    architecturalRegisterFile[30] <= prf.registerFileOutput[decode.retiredRenamedTable.table[30]] @[system.scala 54:44]
    architecturalRegisterFile[31] <= prf.registerFileOutput[decode.retiredRenamedTable.table[31]] @[system.scala 54:44]
    registersOut[0] <= architecturalRegisterFile[0] @[system.scala 55:74]
    registersOut[1] <= architecturalRegisterFile[1] @[system.scala 55:74]
    registersOut[2] <= architecturalRegisterFile[2] @[system.scala 55:74]
    registersOut[3] <= architecturalRegisterFile[3] @[system.scala 55:74]
    registersOut[4] <= architecturalRegisterFile[4] @[system.scala 55:74]
    registersOut[5] <= architecturalRegisterFile[5] @[system.scala 55:74]
    registersOut[6] <= architecturalRegisterFile[6] @[system.scala 55:74]
    registersOut[7] <= architecturalRegisterFile[7] @[system.scala 55:74]
    registersOut[8] <= architecturalRegisterFile[8] @[system.scala 55:74]
    registersOut[9] <= architecturalRegisterFile[9] @[system.scala 55:74]
    registersOut[10] <= architecturalRegisterFile[10] @[system.scala 55:74]
    registersOut[11] <= architecturalRegisterFile[11] @[system.scala 55:74]
    registersOut[12] <= architecturalRegisterFile[12] @[system.scala 55:74]
    registersOut[13] <= architecturalRegisterFile[13] @[system.scala 55:74]
    registersOut[14] <= architecturalRegisterFile[14] @[system.scala 55:74]
    registersOut[15] <= architecturalRegisterFile[15] @[system.scala 55:74]
    registersOut[16] <= architecturalRegisterFile[16] @[system.scala 55:74]
    registersOut[17] <= architecturalRegisterFile[17] @[system.scala 55:74]
    registersOut[18] <= architecturalRegisterFile[18] @[system.scala 55:74]
    registersOut[19] <= architecturalRegisterFile[19] @[system.scala 55:74]
    registersOut[20] <= architecturalRegisterFile[20] @[system.scala 55:74]
    registersOut[21] <= architecturalRegisterFile[21] @[system.scala 55:74]
    registersOut[22] <= architecturalRegisterFile[22] @[system.scala 55:74]
    registersOut[23] <= architecturalRegisterFile[23] @[system.scala 55:74]
    registersOut[24] <= architecturalRegisterFile[24] @[system.scala 55:74]
    registersOut[25] <= architecturalRegisterFile[25] @[system.scala 55:74]
    registersOut[26] <= architecturalRegisterFile[26] @[system.scala 55:74]
    registersOut[27] <= architecturalRegisterFile[27] @[system.scala 55:74]
    registersOut[28] <= architecturalRegisterFile[28] @[system.scala 55:74]
    registersOut[29] <= architecturalRegisterFile[29] @[system.scala 55:74]
    registersOut[30] <= architecturalRegisterFile[30] @[system.scala 55:74]
    registersOut[31] <= architecturalRegisterFile[31] @[system.scala 55:74]
    registersOut[32] <= decode.registersOut[0] @[system.scala 56:31]
    robOut.commitFired <= rob.commit.fired @[system.scala 63:24]
    robOut.pc <= rob.commit.pc @[system.scala 64:24]
    node _robOut_interrupt_T = eq(decode.writeBackResult.instruction, UInt<64>("h80000073")) @[system.scala 65:62]
    robOut.interrupt <= _robOut_interrupt_T @[system.scala 65:24]
    node _T_250 = bits(rob.commit.instruction, 6, 0) @[system.scala 66:33]
    node _T_251 = eq(_T_250, UInt<7>("h73")) @[system.scala 66:40]
    node _T_252 = bits(rob.commit.instruction, 14, 12) @[system.scala 66:84]
    node _T_253 = orr(_T_252) @[system.scala 66:93]
    node _T_254 = and(_T_251, _T_253) @[system.scala 66:58]
    when _T_254 : @[system.scala 66:99]
      robOut.commitFired <= UInt<1>("h0") @[system.scala 66:120]
    allRobFiresOut <= rob.commit.fired @[system.scala 69:20]

  module mainMemory :
    input clock : Clock
    input reset : Reset
    input finishedProgramming : UInt<1>
    input programmer : { valid : UInt<1>, byte : UInt<64>, offset : UInt<28>}
    input clients : { AWID : UInt<1>, AWADDR : UInt<32>, AWLEN : UInt<8>, AWSIZE : UInt<3>, AWBURST : UInt<2>, AWLOCK : UInt<1>, AWCACHE : UInt<4>, AWPROT : UInt<3>, AWQOS : UInt<4>, AWVALID : UInt<1>, flip AWREADY : UInt<1>, WDATA : UInt<256>, WSTRB : UInt<32>, WLAST : UInt<1>, WVALID : UInt<1>, flip WREADY : UInt<1>, flip BID : UInt<1>, flip BRESP : UInt<2>, flip BVALID : UInt<1>, BREADY : UInt<1>, ARID : UInt<1>, ARADDR : UInt<32>, ARLEN : UInt<8>, ARSIZE : UInt<3>, ARBURST : UInt<2>, ARLOCK : UInt<1>, ARCACHE : UInt<4>, ARPROT : UInt<3>, ARQOS : UInt<4>, ARVALID : UInt<1>, flip ARREADY : UInt<1>, flip RID : UInt<1>, flip RDATA : UInt<256>, flip RRESP : UInt<2>, flip RLAST : UInt<1>, flip RVALID : UInt<1>, RREADY : UInt<1>}[2]
    output externalProbe : { flip offset : UInt<28>, accessLong : UInt<64>}

    reg programmed : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[mainMemory.scala 22:27]
    when finishedProgramming : @[mainMemory.scala 27:29]
      programmed <= UInt<1>("h1") @[mainMemory.scala 27:42]
    smem memory : UInt<8> [268435456] @[mainMemory.scala 29:28]
    node _T = eq(programmed, UInt<1>("h0")) @[mainMemory.scala 38:9]
    node _T_1 = and(_T, programmer.valid) @[mainMemory.scala 38:21]
    when _T_1 : @[mainMemory.scala 38:42]
      node _T_2 = add(programmer.offset, UInt<1>("h0")) @[mainMemory.scala 38:99]
      node _T_3 = tail(_T_2, 1) @[mainMemory.scala 38:99]
      node _T_4 = bits(programmer.byte, 7, 0) @[mainMemory.scala 38:121]
      write mport MPORT = memory[_T_3], clock
      MPORT <= _T_4
      node _T_5 = add(programmer.offset, UInt<1>("h1")) @[mainMemory.scala 38:99]
      node _T_6 = tail(_T_5, 1) @[mainMemory.scala 38:99]
      node _T_7 = bits(programmer.byte, 15, 8) @[mainMemory.scala 38:121]
      write mport MPORT_1 = memory[_T_6], clock
      MPORT_1 <= _T_7
      node _T_8 = add(programmer.offset, UInt<2>("h2")) @[mainMemory.scala 38:99]
      node _T_9 = tail(_T_8, 1) @[mainMemory.scala 38:99]
      node _T_10 = bits(programmer.byte, 23, 16) @[mainMemory.scala 38:121]
      write mport MPORT_2 = memory[_T_9], clock
      MPORT_2 <= _T_10
      node _T_11 = add(programmer.offset, UInt<2>("h3")) @[mainMemory.scala 38:99]
      node _T_12 = tail(_T_11, 1) @[mainMemory.scala 38:99]
      node _T_13 = bits(programmer.byte, 31, 24) @[mainMemory.scala 38:121]
      write mport MPORT_3 = memory[_T_12], clock
      MPORT_3 <= _T_13
      node _T_14 = add(programmer.offset, UInt<3>("h4")) @[mainMemory.scala 38:99]
      node _T_15 = tail(_T_14, 1) @[mainMemory.scala 38:99]
      node _T_16 = bits(programmer.byte, 39, 32) @[mainMemory.scala 38:121]
      write mport MPORT_4 = memory[_T_15], clock
      MPORT_4 <= _T_16
      node _T_17 = add(programmer.offset, UInt<3>("h5")) @[mainMemory.scala 38:99]
      node _T_18 = tail(_T_17, 1) @[mainMemory.scala 38:99]
      node _T_19 = bits(programmer.byte, 47, 40) @[mainMemory.scala 38:121]
      write mport MPORT_5 = memory[_T_18], clock
      MPORT_5 <= _T_19
      node _T_20 = add(programmer.offset, UInt<3>("h6")) @[mainMemory.scala 38:99]
      node _T_21 = tail(_T_20, 1) @[mainMemory.scala 38:99]
      node _T_22 = bits(programmer.byte, 55, 48) @[mainMemory.scala 38:121]
      write mport MPORT_6 = memory[_T_21], clock
      MPORT_6 <= _T_22
      node _T_23 = add(programmer.offset, UInt<3>("h7")) @[mainMemory.scala 38:99]
      node _T_24 = tail(_T_23, 1) @[mainMemory.scala 38:99]
      node _T_25 = bits(programmer.byte, 63, 56) @[mainMemory.scala 38:121]
      write mport MPORT_7 = memory[_T_24], clock
      MPORT_7 <= _T_25
    wire _servicing_WIRE : { valid : UInt<1>, address : UInt<28>, id : UInt<1>, beatsRemaining : UInt<8>}[2] @[mainMemory.scala 47:42]
    _servicing_WIRE[0].beatsRemaining is invalid @[mainMemory.scala 47:42]
    _servicing_WIRE[0].id is invalid @[mainMemory.scala 47:42]
    _servicing_WIRE[0].address is invalid @[mainMemory.scala 47:42]
    _servicing_WIRE[0].valid <= UInt<1>("h0") @[mainMemory.scala 47:42]
    _servicing_WIRE[1].beatsRemaining is invalid @[mainMemory.scala 47:42]
    _servicing_WIRE[1].id is invalid @[mainMemory.scala 47:42]
    _servicing_WIRE[1].address is invalid @[mainMemory.scala 47:42]
    _servicing_WIRE[1].valid <= UInt<1>("h0") @[mainMemory.scala 47:42]
    reg servicing : { valid : UInt<1>, address : UInt<28>, id : UInt<1>, beatsRemaining : UInt<8>}[2], clock with :
      reset => (reset, _servicing_WIRE) @[mainMemory.scala 47:26]
    node _T_26 = and(clients[0].ARREADY, clients[0].ARVALID) @[mainMemory.scala 57:25]
    when _T_26 : @[mainMemory.scala 57:44]
      servicing[0].valid <= UInt<1>("h1") @[mainMemory.scala 58:20]
      node _servicing_0_address_T = not(UInt<32>("h3")) @[mainMemory.scala 59:41]
      node _servicing_0_address_T_1 = and(clients[0].ARADDR, _servicing_0_address_T) @[mainMemory.scala 59:39]
      node _servicing_0_address_T_2 = add(_servicing_0_address_T_1, UInt<6>("h20")) @[mainMemory.scala 59:56]
      node _servicing_0_address_T_3 = tail(_servicing_0_address_T_2, 1) @[mainMemory.scala 59:56]
      servicing[0].address <= _servicing_0_address_T_3 @[mainMemory.scala 59:22]
      servicing[0].id <= clients[0].ARID @[mainMemory.scala 60:17]
      servicing[0].beatsRemaining <= clients[0].ARLEN @[mainMemory.scala 61:29]
    node _T_27 = and(clients[1].ARREADY, clients[1].ARVALID) @[mainMemory.scala 57:25]
    when _T_27 : @[mainMemory.scala 57:44]
      servicing[1].valid <= UInt<1>("h1") @[mainMemory.scala 58:20]
      node _servicing_1_address_T = not(UInt<32>("h3")) @[mainMemory.scala 59:41]
      node _servicing_1_address_T_1 = and(clients[1].ARADDR, _servicing_1_address_T) @[mainMemory.scala 59:39]
      node _servicing_1_address_T_2 = add(_servicing_1_address_T_1, UInt<6>("h20")) @[mainMemory.scala 59:56]
      node _servicing_1_address_T_3 = tail(_servicing_1_address_T_2, 1) @[mainMemory.scala 59:56]
      servicing[1].address <= _servicing_1_address_T_3 @[mainMemory.scala 59:22]
      servicing[1].id <= clients[1].ARID @[mainMemory.scala 60:17]
      servicing[1].beatsRemaining <= clients[1].ARLEN @[mainMemory.scala 61:29]
    wire _readBackBuffers_WIRE : { valid : UInt<1>, id : UInt<1>, data : UInt<256>, last : UInt<1>}[2] @[mainMemory.scala 66:48]
    _readBackBuffers_WIRE[0].last is invalid @[mainMemory.scala 66:48]
    _readBackBuffers_WIRE[0].data is invalid @[mainMemory.scala 66:48]
    _readBackBuffers_WIRE[0].id is invalid @[mainMemory.scala 66:48]
    _readBackBuffers_WIRE[0].valid <= UInt<1>("h0") @[mainMemory.scala 66:48]
    _readBackBuffers_WIRE[1].last is invalid @[mainMemory.scala 66:48]
    _readBackBuffers_WIRE[1].data is invalid @[mainMemory.scala 66:48]
    _readBackBuffers_WIRE[1].id is invalid @[mainMemory.scala 66:48]
    _readBackBuffers_WIRE[1].valid <= UInt<1>("h0") @[mainMemory.scala 66:48]
    reg readBackBuffers : { valid : UInt<1>, id : UInt<1>, data : UInt<256>, last : UInt<1>}[2], clock with :
      reset => (reset, _readBackBuffers_WIRE) @[mainMemory.scala 66:32]
    node _T_28 = eq(readBackBuffers[0].valid, UInt<1>("h0")) @[mainMemory.scala 76:27]
    node _T_29 = or(clients[0].RREADY, _T_28) @[mainMemory.scala 76:24]
    when _T_29 : @[mainMemory.scala 76:44]
      readBackBuffers[0].valid <= servicing[0].valid @[mainMemory.scala 77:22]
      node _readBackBuffers_0_data_T = not(UInt<32>("h3")) @[mainMemory.scala 78:120]
      node _readBackBuffers_0_data_T_1 = and(clients[0].ARADDR, _readBackBuffers_0_data_T) @[mainMemory.scala 78:118]
      node _readBackBuffers_0_data_T_2 = mux(servicing[0].valid, servicing[0].address, _readBackBuffers_0_data_T_1) @[mainMemory.scala 78:71]
      node _readBackBuffers_0_data_T_3 = add(UInt<1>("h0"), _readBackBuffers_0_data_T_2) @[mainMemory.scala 78:66]
      node _readBackBuffers_0_data_T_4 = tail(_readBackBuffers_0_data_T_3, 1) @[mainMemory.scala 78:66]
      wire _readBackBuffers_0_data_WIRE : UInt @[mainMemory.scala 78:61]
      _readBackBuffers_0_data_WIRE is invalid @[mainMemory.scala 78:61]
      when UInt<1>("h1") : @[mainMemory.scala 78:61]
        _readBackBuffers_0_data_WIRE <= _readBackBuffers_0_data_T_4 @[mainMemory.scala 78:61]
        node _readBackBuffers_0_data_T_5 = or(_readBackBuffers_0_data_WIRE, UInt<28>("h0")) @[mainMemory.scala 78:61]
        node _readBackBuffers_0_data_T_6 = bits(_readBackBuffers_0_data_T_5, 27, 0) @[mainMemory.scala 78:61]
        read mport readBackBuffers_0_data_MPORT = memory[_readBackBuffers_0_data_T_6], clock @[mainMemory.scala 78:61]
      node _readBackBuffers_0_data_T_7 = not(UInt<32>("h3")) @[mainMemory.scala 78:120]
      node _readBackBuffers_0_data_T_8 = and(clients[0].ARADDR, _readBackBuffers_0_data_T_7) @[mainMemory.scala 78:118]
      node _readBackBuffers_0_data_T_9 = mux(servicing[0].valid, servicing[0].address, _readBackBuffers_0_data_T_8) @[mainMemory.scala 78:71]
      node _readBackBuffers_0_data_T_10 = add(UInt<1>("h1"), _readBackBuffers_0_data_T_9) @[mainMemory.scala 78:66]
      node _readBackBuffers_0_data_T_11 = tail(_readBackBuffers_0_data_T_10, 1) @[mainMemory.scala 78:66]
      wire _readBackBuffers_0_data_WIRE_1 : UInt @[mainMemory.scala 78:61]
      _readBackBuffers_0_data_WIRE_1 is invalid @[mainMemory.scala 78:61]
      when UInt<1>("h1") : @[mainMemory.scala 78:61]
        _readBackBuffers_0_data_WIRE_1 <= _readBackBuffers_0_data_T_11 @[mainMemory.scala 78:61]
        node _readBackBuffers_0_data_T_12 = or(_readBackBuffers_0_data_WIRE_1, UInt<28>("h0")) @[mainMemory.scala 78:61]
        node _readBackBuffers_0_data_T_13 = bits(_readBackBuffers_0_data_T_12, 27, 0) @[mainMemory.scala 78:61]
        read mport readBackBuffers_0_data_MPORT_1 = memory[_readBackBuffers_0_data_T_13], clock @[mainMemory.scala 78:61]
      node _readBackBuffers_0_data_T_14 = not(UInt<32>("h3")) @[mainMemory.scala 78:120]
      node _readBackBuffers_0_data_T_15 = and(clients[0].ARADDR, _readBackBuffers_0_data_T_14) @[mainMemory.scala 78:118]
      node _readBackBuffers_0_data_T_16 = mux(servicing[0].valid, servicing[0].address, _readBackBuffers_0_data_T_15) @[mainMemory.scala 78:71]
      node _readBackBuffers_0_data_T_17 = add(UInt<2>("h2"), _readBackBuffers_0_data_T_16) @[mainMemory.scala 78:66]
      node _readBackBuffers_0_data_T_18 = tail(_readBackBuffers_0_data_T_17, 1) @[mainMemory.scala 78:66]
      wire _readBackBuffers_0_data_WIRE_2 : UInt @[mainMemory.scala 78:61]
      _readBackBuffers_0_data_WIRE_2 is invalid @[mainMemory.scala 78:61]
      when UInt<1>("h1") : @[mainMemory.scala 78:61]
        _readBackBuffers_0_data_WIRE_2 <= _readBackBuffers_0_data_T_18 @[mainMemory.scala 78:61]
        node _readBackBuffers_0_data_T_19 = or(_readBackBuffers_0_data_WIRE_2, UInt<28>("h0")) @[mainMemory.scala 78:61]
        node _readBackBuffers_0_data_T_20 = bits(_readBackBuffers_0_data_T_19, 27, 0) @[mainMemory.scala 78:61]
        read mport readBackBuffers_0_data_MPORT_2 = memory[_readBackBuffers_0_data_T_20], clock @[mainMemory.scala 78:61]
      node _readBackBuffers_0_data_T_21 = not(UInt<32>("h3")) @[mainMemory.scala 78:120]
      node _readBackBuffers_0_data_T_22 = and(clients[0].ARADDR, _readBackBuffers_0_data_T_21) @[mainMemory.scala 78:118]
      node _readBackBuffers_0_data_T_23 = mux(servicing[0].valid, servicing[0].address, _readBackBuffers_0_data_T_22) @[mainMemory.scala 78:71]
      node _readBackBuffers_0_data_T_24 = add(UInt<2>("h3"), _readBackBuffers_0_data_T_23) @[mainMemory.scala 78:66]
      node _readBackBuffers_0_data_T_25 = tail(_readBackBuffers_0_data_T_24, 1) @[mainMemory.scala 78:66]
      wire _readBackBuffers_0_data_WIRE_3 : UInt @[mainMemory.scala 78:61]
      _readBackBuffers_0_data_WIRE_3 is invalid @[mainMemory.scala 78:61]
      when UInt<1>("h1") : @[mainMemory.scala 78:61]
        _readBackBuffers_0_data_WIRE_3 <= _readBackBuffers_0_data_T_25 @[mainMemory.scala 78:61]
        node _readBackBuffers_0_data_T_26 = or(_readBackBuffers_0_data_WIRE_3, UInt<28>("h0")) @[mainMemory.scala 78:61]
        node _readBackBuffers_0_data_T_27 = bits(_readBackBuffers_0_data_T_26, 27, 0) @[mainMemory.scala 78:61]
        read mport readBackBuffers_0_data_MPORT_3 = memory[_readBackBuffers_0_data_T_27], clock @[mainMemory.scala 78:61]
      node _readBackBuffers_0_data_T_28 = not(UInt<32>("h3")) @[mainMemory.scala 78:120]
      node _readBackBuffers_0_data_T_29 = and(clients[0].ARADDR, _readBackBuffers_0_data_T_28) @[mainMemory.scala 78:118]
      node _readBackBuffers_0_data_T_30 = mux(servicing[0].valid, servicing[0].address, _readBackBuffers_0_data_T_29) @[mainMemory.scala 78:71]
      node _readBackBuffers_0_data_T_31 = add(UInt<3>("h4"), _readBackBuffers_0_data_T_30) @[mainMemory.scala 78:66]
      node _readBackBuffers_0_data_T_32 = tail(_readBackBuffers_0_data_T_31, 1) @[mainMemory.scala 78:66]
      wire _readBackBuffers_0_data_WIRE_4 : UInt @[mainMemory.scala 78:61]
      _readBackBuffers_0_data_WIRE_4 is invalid @[mainMemory.scala 78:61]
      when UInt<1>("h1") : @[mainMemory.scala 78:61]
        _readBackBuffers_0_data_WIRE_4 <= _readBackBuffers_0_data_T_32 @[mainMemory.scala 78:61]
        node _readBackBuffers_0_data_T_33 = or(_readBackBuffers_0_data_WIRE_4, UInt<28>("h0")) @[mainMemory.scala 78:61]
        node _readBackBuffers_0_data_T_34 = bits(_readBackBuffers_0_data_T_33, 27, 0) @[mainMemory.scala 78:61]
        read mport readBackBuffers_0_data_MPORT_4 = memory[_readBackBuffers_0_data_T_34], clock @[mainMemory.scala 78:61]
      node _readBackBuffers_0_data_T_35 = not(UInt<32>("h3")) @[mainMemory.scala 78:120]
      node _readBackBuffers_0_data_T_36 = and(clients[0].ARADDR, _readBackBuffers_0_data_T_35) @[mainMemory.scala 78:118]
      node _readBackBuffers_0_data_T_37 = mux(servicing[0].valid, servicing[0].address, _readBackBuffers_0_data_T_36) @[mainMemory.scala 78:71]
      node _readBackBuffers_0_data_T_38 = add(UInt<3>("h5"), _readBackBuffers_0_data_T_37) @[mainMemory.scala 78:66]
      node _readBackBuffers_0_data_T_39 = tail(_readBackBuffers_0_data_T_38, 1) @[mainMemory.scala 78:66]
      wire _readBackBuffers_0_data_WIRE_5 : UInt @[mainMemory.scala 78:61]
      _readBackBuffers_0_data_WIRE_5 is invalid @[mainMemory.scala 78:61]
      when UInt<1>("h1") : @[mainMemory.scala 78:61]
        _readBackBuffers_0_data_WIRE_5 <= _readBackBuffers_0_data_T_39 @[mainMemory.scala 78:61]
        node _readBackBuffers_0_data_T_40 = or(_readBackBuffers_0_data_WIRE_5, UInt<28>("h0")) @[mainMemory.scala 78:61]
        node _readBackBuffers_0_data_T_41 = bits(_readBackBuffers_0_data_T_40, 27, 0) @[mainMemory.scala 78:61]
        read mport readBackBuffers_0_data_MPORT_5 = memory[_readBackBuffers_0_data_T_41], clock @[mainMemory.scala 78:61]
      node _readBackBuffers_0_data_T_42 = not(UInt<32>("h3")) @[mainMemory.scala 78:120]
      node _readBackBuffers_0_data_T_43 = and(clients[0].ARADDR, _readBackBuffers_0_data_T_42) @[mainMemory.scala 78:118]
      node _readBackBuffers_0_data_T_44 = mux(servicing[0].valid, servicing[0].address, _readBackBuffers_0_data_T_43) @[mainMemory.scala 78:71]
      node _readBackBuffers_0_data_T_45 = add(UInt<3>("h6"), _readBackBuffers_0_data_T_44) @[mainMemory.scala 78:66]
      node _readBackBuffers_0_data_T_46 = tail(_readBackBuffers_0_data_T_45, 1) @[mainMemory.scala 78:66]
      wire _readBackBuffers_0_data_WIRE_6 : UInt @[mainMemory.scala 78:61]
      _readBackBuffers_0_data_WIRE_6 is invalid @[mainMemory.scala 78:61]
      when UInt<1>("h1") : @[mainMemory.scala 78:61]
        _readBackBuffers_0_data_WIRE_6 <= _readBackBuffers_0_data_T_46 @[mainMemory.scala 78:61]
        node _readBackBuffers_0_data_T_47 = or(_readBackBuffers_0_data_WIRE_6, UInt<28>("h0")) @[mainMemory.scala 78:61]
        node _readBackBuffers_0_data_T_48 = bits(_readBackBuffers_0_data_T_47, 27, 0) @[mainMemory.scala 78:61]
        read mport readBackBuffers_0_data_MPORT_6 = memory[_readBackBuffers_0_data_T_48], clock @[mainMemory.scala 78:61]
      node _readBackBuffers_0_data_T_49 = not(UInt<32>("h3")) @[mainMemory.scala 78:120]
      node _readBackBuffers_0_data_T_50 = and(clients[0].ARADDR, _readBackBuffers_0_data_T_49) @[mainMemory.scala 78:118]
      node _readBackBuffers_0_data_T_51 = mux(servicing[0].valid, servicing[0].address, _readBackBuffers_0_data_T_50) @[mainMemory.scala 78:71]
      node _readBackBuffers_0_data_T_52 = add(UInt<3>("h7"), _readBackBuffers_0_data_T_51) @[mainMemory.scala 78:66]
      node _readBackBuffers_0_data_T_53 = tail(_readBackBuffers_0_data_T_52, 1) @[mainMemory.scala 78:66]
      wire _readBackBuffers_0_data_WIRE_7 : UInt @[mainMemory.scala 78:61]
      _readBackBuffers_0_data_WIRE_7 is invalid @[mainMemory.scala 78:61]
      when UInt<1>("h1") : @[mainMemory.scala 78:61]
        _readBackBuffers_0_data_WIRE_7 <= _readBackBuffers_0_data_T_53 @[mainMemory.scala 78:61]
        node _readBackBuffers_0_data_T_54 = or(_readBackBuffers_0_data_WIRE_7, UInt<28>("h0")) @[mainMemory.scala 78:61]
        node _readBackBuffers_0_data_T_55 = bits(_readBackBuffers_0_data_T_54, 27, 0) @[mainMemory.scala 78:61]
        read mport readBackBuffers_0_data_MPORT_7 = memory[_readBackBuffers_0_data_T_55], clock @[mainMemory.scala 78:61]
      node _readBackBuffers_0_data_T_56 = not(UInt<32>("h3")) @[mainMemory.scala 78:120]
      node _readBackBuffers_0_data_T_57 = and(clients[0].ARADDR, _readBackBuffers_0_data_T_56) @[mainMemory.scala 78:118]
      node _readBackBuffers_0_data_T_58 = mux(servicing[0].valid, servicing[0].address, _readBackBuffers_0_data_T_57) @[mainMemory.scala 78:71]
      node _readBackBuffers_0_data_T_59 = add(UInt<4>("h8"), _readBackBuffers_0_data_T_58) @[mainMemory.scala 78:66]
      node _readBackBuffers_0_data_T_60 = tail(_readBackBuffers_0_data_T_59, 1) @[mainMemory.scala 78:66]
      wire _readBackBuffers_0_data_WIRE_8 : UInt @[mainMemory.scala 78:61]
      _readBackBuffers_0_data_WIRE_8 is invalid @[mainMemory.scala 78:61]
      when UInt<1>("h1") : @[mainMemory.scala 78:61]
        _readBackBuffers_0_data_WIRE_8 <= _readBackBuffers_0_data_T_60 @[mainMemory.scala 78:61]
        node _readBackBuffers_0_data_T_61 = or(_readBackBuffers_0_data_WIRE_8, UInt<28>("h0")) @[mainMemory.scala 78:61]
        node _readBackBuffers_0_data_T_62 = bits(_readBackBuffers_0_data_T_61, 27, 0) @[mainMemory.scala 78:61]
        read mport readBackBuffers_0_data_MPORT_8 = memory[_readBackBuffers_0_data_T_62], clock @[mainMemory.scala 78:61]
      node _readBackBuffers_0_data_T_63 = not(UInt<32>("h3")) @[mainMemory.scala 78:120]
      node _readBackBuffers_0_data_T_64 = and(clients[0].ARADDR, _readBackBuffers_0_data_T_63) @[mainMemory.scala 78:118]
      node _readBackBuffers_0_data_T_65 = mux(servicing[0].valid, servicing[0].address, _readBackBuffers_0_data_T_64) @[mainMemory.scala 78:71]
      node _readBackBuffers_0_data_T_66 = add(UInt<4>("h9"), _readBackBuffers_0_data_T_65) @[mainMemory.scala 78:66]
      node _readBackBuffers_0_data_T_67 = tail(_readBackBuffers_0_data_T_66, 1) @[mainMemory.scala 78:66]
      wire _readBackBuffers_0_data_WIRE_9 : UInt @[mainMemory.scala 78:61]
      _readBackBuffers_0_data_WIRE_9 is invalid @[mainMemory.scala 78:61]
      when UInt<1>("h1") : @[mainMemory.scala 78:61]
        _readBackBuffers_0_data_WIRE_9 <= _readBackBuffers_0_data_T_67 @[mainMemory.scala 78:61]
        node _readBackBuffers_0_data_T_68 = or(_readBackBuffers_0_data_WIRE_9, UInt<28>("h0")) @[mainMemory.scala 78:61]
        node _readBackBuffers_0_data_T_69 = bits(_readBackBuffers_0_data_T_68, 27, 0) @[mainMemory.scala 78:61]
        read mport readBackBuffers_0_data_MPORT_9 = memory[_readBackBuffers_0_data_T_69], clock @[mainMemory.scala 78:61]
      node _readBackBuffers_0_data_T_70 = not(UInt<32>("h3")) @[mainMemory.scala 78:120]
      node _readBackBuffers_0_data_T_71 = and(clients[0].ARADDR, _readBackBuffers_0_data_T_70) @[mainMemory.scala 78:118]
      node _readBackBuffers_0_data_T_72 = mux(servicing[0].valid, servicing[0].address, _readBackBuffers_0_data_T_71) @[mainMemory.scala 78:71]
      node _readBackBuffers_0_data_T_73 = add(UInt<4>("ha"), _readBackBuffers_0_data_T_72) @[mainMemory.scala 78:66]
      node _readBackBuffers_0_data_T_74 = tail(_readBackBuffers_0_data_T_73, 1) @[mainMemory.scala 78:66]
      wire _readBackBuffers_0_data_WIRE_10 : UInt @[mainMemory.scala 78:61]
      _readBackBuffers_0_data_WIRE_10 is invalid @[mainMemory.scala 78:61]
      when UInt<1>("h1") : @[mainMemory.scala 78:61]
        _readBackBuffers_0_data_WIRE_10 <= _readBackBuffers_0_data_T_74 @[mainMemory.scala 78:61]
        node _readBackBuffers_0_data_T_75 = or(_readBackBuffers_0_data_WIRE_10, UInt<28>("h0")) @[mainMemory.scala 78:61]
        node _readBackBuffers_0_data_T_76 = bits(_readBackBuffers_0_data_T_75, 27, 0) @[mainMemory.scala 78:61]
        read mport readBackBuffers_0_data_MPORT_10 = memory[_readBackBuffers_0_data_T_76], clock @[mainMemory.scala 78:61]
      node _readBackBuffers_0_data_T_77 = not(UInt<32>("h3")) @[mainMemory.scala 78:120]
      node _readBackBuffers_0_data_T_78 = and(clients[0].ARADDR, _readBackBuffers_0_data_T_77) @[mainMemory.scala 78:118]
      node _readBackBuffers_0_data_T_79 = mux(servicing[0].valid, servicing[0].address, _readBackBuffers_0_data_T_78) @[mainMemory.scala 78:71]
      node _readBackBuffers_0_data_T_80 = add(UInt<4>("hb"), _readBackBuffers_0_data_T_79) @[mainMemory.scala 78:66]
      node _readBackBuffers_0_data_T_81 = tail(_readBackBuffers_0_data_T_80, 1) @[mainMemory.scala 78:66]
      wire _readBackBuffers_0_data_WIRE_11 : UInt @[mainMemory.scala 78:61]
      _readBackBuffers_0_data_WIRE_11 is invalid @[mainMemory.scala 78:61]
      when UInt<1>("h1") : @[mainMemory.scala 78:61]
        _readBackBuffers_0_data_WIRE_11 <= _readBackBuffers_0_data_T_81 @[mainMemory.scala 78:61]
        node _readBackBuffers_0_data_T_82 = or(_readBackBuffers_0_data_WIRE_11, UInt<28>("h0")) @[mainMemory.scala 78:61]
        node _readBackBuffers_0_data_T_83 = bits(_readBackBuffers_0_data_T_82, 27, 0) @[mainMemory.scala 78:61]
        read mport readBackBuffers_0_data_MPORT_11 = memory[_readBackBuffers_0_data_T_83], clock @[mainMemory.scala 78:61]
      node _readBackBuffers_0_data_T_84 = not(UInt<32>("h3")) @[mainMemory.scala 78:120]
      node _readBackBuffers_0_data_T_85 = and(clients[0].ARADDR, _readBackBuffers_0_data_T_84) @[mainMemory.scala 78:118]
      node _readBackBuffers_0_data_T_86 = mux(servicing[0].valid, servicing[0].address, _readBackBuffers_0_data_T_85) @[mainMemory.scala 78:71]
      node _readBackBuffers_0_data_T_87 = add(UInt<4>("hc"), _readBackBuffers_0_data_T_86) @[mainMemory.scala 78:66]
      node _readBackBuffers_0_data_T_88 = tail(_readBackBuffers_0_data_T_87, 1) @[mainMemory.scala 78:66]
      wire _readBackBuffers_0_data_WIRE_12 : UInt @[mainMemory.scala 78:61]
      _readBackBuffers_0_data_WIRE_12 is invalid @[mainMemory.scala 78:61]
      when UInt<1>("h1") : @[mainMemory.scala 78:61]
        _readBackBuffers_0_data_WIRE_12 <= _readBackBuffers_0_data_T_88 @[mainMemory.scala 78:61]
        node _readBackBuffers_0_data_T_89 = or(_readBackBuffers_0_data_WIRE_12, UInt<28>("h0")) @[mainMemory.scala 78:61]
        node _readBackBuffers_0_data_T_90 = bits(_readBackBuffers_0_data_T_89, 27, 0) @[mainMemory.scala 78:61]
        read mport readBackBuffers_0_data_MPORT_12 = memory[_readBackBuffers_0_data_T_90], clock @[mainMemory.scala 78:61]
      node _readBackBuffers_0_data_T_91 = not(UInt<32>("h3")) @[mainMemory.scala 78:120]
      node _readBackBuffers_0_data_T_92 = and(clients[0].ARADDR, _readBackBuffers_0_data_T_91) @[mainMemory.scala 78:118]
      node _readBackBuffers_0_data_T_93 = mux(servicing[0].valid, servicing[0].address, _readBackBuffers_0_data_T_92) @[mainMemory.scala 78:71]
      node _readBackBuffers_0_data_T_94 = add(UInt<4>("hd"), _readBackBuffers_0_data_T_93) @[mainMemory.scala 78:66]
      node _readBackBuffers_0_data_T_95 = tail(_readBackBuffers_0_data_T_94, 1) @[mainMemory.scala 78:66]
      wire _readBackBuffers_0_data_WIRE_13 : UInt @[mainMemory.scala 78:61]
      _readBackBuffers_0_data_WIRE_13 is invalid @[mainMemory.scala 78:61]
      when UInt<1>("h1") : @[mainMemory.scala 78:61]
        _readBackBuffers_0_data_WIRE_13 <= _readBackBuffers_0_data_T_95 @[mainMemory.scala 78:61]
        node _readBackBuffers_0_data_T_96 = or(_readBackBuffers_0_data_WIRE_13, UInt<28>("h0")) @[mainMemory.scala 78:61]
        node _readBackBuffers_0_data_T_97 = bits(_readBackBuffers_0_data_T_96, 27, 0) @[mainMemory.scala 78:61]
        read mport readBackBuffers_0_data_MPORT_13 = memory[_readBackBuffers_0_data_T_97], clock @[mainMemory.scala 78:61]
      node _readBackBuffers_0_data_T_98 = not(UInt<32>("h3")) @[mainMemory.scala 78:120]
      node _readBackBuffers_0_data_T_99 = and(clients[0].ARADDR, _readBackBuffers_0_data_T_98) @[mainMemory.scala 78:118]
      node _readBackBuffers_0_data_T_100 = mux(servicing[0].valid, servicing[0].address, _readBackBuffers_0_data_T_99) @[mainMemory.scala 78:71]
      node _readBackBuffers_0_data_T_101 = add(UInt<4>("he"), _readBackBuffers_0_data_T_100) @[mainMemory.scala 78:66]
      node _readBackBuffers_0_data_T_102 = tail(_readBackBuffers_0_data_T_101, 1) @[mainMemory.scala 78:66]
      wire _readBackBuffers_0_data_WIRE_14 : UInt @[mainMemory.scala 78:61]
      _readBackBuffers_0_data_WIRE_14 is invalid @[mainMemory.scala 78:61]
      when UInt<1>("h1") : @[mainMemory.scala 78:61]
        _readBackBuffers_0_data_WIRE_14 <= _readBackBuffers_0_data_T_102 @[mainMemory.scala 78:61]
        node _readBackBuffers_0_data_T_103 = or(_readBackBuffers_0_data_WIRE_14, UInt<28>("h0")) @[mainMemory.scala 78:61]
        node _readBackBuffers_0_data_T_104 = bits(_readBackBuffers_0_data_T_103, 27, 0) @[mainMemory.scala 78:61]
        read mport readBackBuffers_0_data_MPORT_14 = memory[_readBackBuffers_0_data_T_104], clock @[mainMemory.scala 78:61]
      node _readBackBuffers_0_data_T_105 = not(UInt<32>("h3")) @[mainMemory.scala 78:120]
      node _readBackBuffers_0_data_T_106 = and(clients[0].ARADDR, _readBackBuffers_0_data_T_105) @[mainMemory.scala 78:118]
      node _readBackBuffers_0_data_T_107 = mux(servicing[0].valid, servicing[0].address, _readBackBuffers_0_data_T_106) @[mainMemory.scala 78:71]
      node _readBackBuffers_0_data_T_108 = add(UInt<4>("hf"), _readBackBuffers_0_data_T_107) @[mainMemory.scala 78:66]
      node _readBackBuffers_0_data_T_109 = tail(_readBackBuffers_0_data_T_108, 1) @[mainMemory.scala 78:66]
      wire _readBackBuffers_0_data_WIRE_15 : UInt @[mainMemory.scala 78:61]
      _readBackBuffers_0_data_WIRE_15 is invalid @[mainMemory.scala 78:61]
      when UInt<1>("h1") : @[mainMemory.scala 78:61]
        _readBackBuffers_0_data_WIRE_15 <= _readBackBuffers_0_data_T_109 @[mainMemory.scala 78:61]
        node _readBackBuffers_0_data_T_110 = or(_readBackBuffers_0_data_WIRE_15, UInt<28>("h0")) @[mainMemory.scala 78:61]
        node _readBackBuffers_0_data_T_111 = bits(_readBackBuffers_0_data_T_110, 27, 0) @[mainMemory.scala 78:61]
        read mport readBackBuffers_0_data_MPORT_15 = memory[_readBackBuffers_0_data_T_111], clock @[mainMemory.scala 78:61]
      node _readBackBuffers_0_data_T_112 = not(UInt<32>("h3")) @[mainMemory.scala 78:120]
      node _readBackBuffers_0_data_T_113 = and(clients[0].ARADDR, _readBackBuffers_0_data_T_112) @[mainMemory.scala 78:118]
      node _readBackBuffers_0_data_T_114 = mux(servicing[0].valid, servicing[0].address, _readBackBuffers_0_data_T_113) @[mainMemory.scala 78:71]
      node _readBackBuffers_0_data_T_115 = add(UInt<5>("h10"), _readBackBuffers_0_data_T_114) @[mainMemory.scala 78:66]
      node _readBackBuffers_0_data_T_116 = tail(_readBackBuffers_0_data_T_115, 1) @[mainMemory.scala 78:66]
      wire _readBackBuffers_0_data_WIRE_16 : UInt @[mainMemory.scala 78:61]
      _readBackBuffers_0_data_WIRE_16 is invalid @[mainMemory.scala 78:61]
      when UInt<1>("h1") : @[mainMemory.scala 78:61]
        _readBackBuffers_0_data_WIRE_16 <= _readBackBuffers_0_data_T_116 @[mainMemory.scala 78:61]
        node _readBackBuffers_0_data_T_117 = or(_readBackBuffers_0_data_WIRE_16, UInt<28>("h0")) @[mainMemory.scala 78:61]
        node _readBackBuffers_0_data_T_118 = bits(_readBackBuffers_0_data_T_117, 27, 0) @[mainMemory.scala 78:61]
        read mport readBackBuffers_0_data_MPORT_16 = memory[_readBackBuffers_0_data_T_118], clock @[mainMemory.scala 78:61]
      node _readBackBuffers_0_data_T_119 = not(UInt<32>("h3")) @[mainMemory.scala 78:120]
      node _readBackBuffers_0_data_T_120 = and(clients[0].ARADDR, _readBackBuffers_0_data_T_119) @[mainMemory.scala 78:118]
      node _readBackBuffers_0_data_T_121 = mux(servicing[0].valid, servicing[0].address, _readBackBuffers_0_data_T_120) @[mainMemory.scala 78:71]
      node _readBackBuffers_0_data_T_122 = add(UInt<5>("h11"), _readBackBuffers_0_data_T_121) @[mainMemory.scala 78:66]
      node _readBackBuffers_0_data_T_123 = tail(_readBackBuffers_0_data_T_122, 1) @[mainMemory.scala 78:66]
      wire _readBackBuffers_0_data_WIRE_17 : UInt @[mainMemory.scala 78:61]
      _readBackBuffers_0_data_WIRE_17 is invalid @[mainMemory.scala 78:61]
      when UInt<1>("h1") : @[mainMemory.scala 78:61]
        _readBackBuffers_0_data_WIRE_17 <= _readBackBuffers_0_data_T_123 @[mainMemory.scala 78:61]
        node _readBackBuffers_0_data_T_124 = or(_readBackBuffers_0_data_WIRE_17, UInt<28>("h0")) @[mainMemory.scala 78:61]
        node _readBackBuffers_0_data_T_125 = bits(_readBackBuffers_0_data_T_124, 27, 0) @[mainMemory.scala 78:61]
        read mport readBackBuffers_0_data_MPORT_17 = memory[_readBackBuffers_0_data_T_125], clock @[mainMemory.scala 78:61]
      node _readBackBuffers_0_data_T_126 = not(UInt<32>("h3")) @[mainMemory.scala 78:120]
      node _readBackBuffers_0_data_T_127 = and(clients[0].ARADDR, _readBackBuffers_0_data_T_126) @[mainMemory.scala 78:118]
      node _readBackBuffers_0_data_T_128 = mux(servicing[0].valid, servicing[0].address, _readBackBuffers_0_data_T_127) @[mainMemory.scala 78:71]
      node _readBackBuffers_0_data_T_129 = add(UInt<5>("h12"), _readBackBuffers_0_data_T_128) @[mainMemory.scala 78:66]
      node _readBackBuffers_0_data_T_130 = tail(_readBackBuffers_0_data_T_129, 1) @[mainMemory.scala 78:66]
      wire _readBackBuffers_0_data_WIRE_18 : UInt @[mainMemory.scala 78:61]
      _readBackBuffers_0_data_WIRE_18 is invalid @[mainMemory.scala 78:61]
      when UInt<1>("h1") : @[mainMemory.scala 78:61]
        _readBackBuffers_0_data_WIRE_18 <= _readBackBuffers_0_data_T_130 @[mainMemory.scala 78:61]
        node _readBackBuffers_0_data_T_131 = or(_readBackBuffers_0_data_WIRE_18, UInt<28>("h0")) @[mainMemory.scala 78:61]
        node _readBackBuffers_0_data_T_132 = bits(_readBackBuffers_0_data_T_131, 27, 0) @[mainMemory.scala 78:61]
        read mport readBackBuffers_0_data_MPORT_18 = memory[_readBackBuffers_0_data_T_132], clock @[mainMemory.scala 78:61]
      node _readBackBuffers_0_data_T_133 = not(UInt<32>("h3")) @[mainMemory.scala 78:120]
      node _readBackBuffers_0_data_T_134 = and(clients[0].ARADDR, _readBackBuffers_0_data_T_133) @[mainMemory.scala 78:118]
      node _readBackBuffers_0_data_T_135 = mux(servicing[0].valid, servicing[0].address, _readBackBuffers_0_data_T_134) @[mainMemory.scala 78:71]
      node _readBackBuffers_0_data_T_136 = add(UInt<5>("h13"), _readBackBuffers_0_data_T_135) @[mainMemory.scala 78:66]
      node _readBackBuffers_0_data_T_137 = tail(_readBackBuffers_0_data_T_136, 1) @[mainMemory.scala 78:66]
      wire _readBackBuffers_0_data_WIRE_19 : UInt @[mainMemory.scala 78:61]
      _readBackBuffers_0_data_WIRE_19 is invalid @[mainMemory.scala 78:61]
      when UInt<1>("h1") : @[mainMemory.scala 78:61]
        _readBackBuffers_0_data_WIRE_19 <= _readBackBuffers_0_data_T_137 @[mainMemory.scala 78:61]
        node _readBackBuffers_0_data_T_138 = or(_readBackBuffers_0_data_WIRE_19, UInt<28>("h0")) @[mainMemory.scala 78:61]
        node _readBackBuffers_0_data_T_139 = bits(_readBackBuffers_0_data_T_138, 27, 0) @[mainMemory.scala 78:61]
        read mport readBackBuffers_0_data_MPORT_19 = memory[_readBackBuffers_0_data_T_139], clock @[mainMemory.scala 78:61]
      node _readBackBuffers_0_data_T_140 = not(UInt<32>("h3")) @[mainMemory.scala 78:120]
      node _readBackBuffers_0_data_T_141 = and(clients[0].ARADDR, _readBackBuffers_0_data_T_140) @[mainMemory.scala 78:118]
      node _readBackBuffers_0_data_T_142 = mux(servicing[0].valid, servicing[0].address, _readBackBuffers_0_data_T_141) @[mainMemory.scala 78:71]
      node _readBackBuffers_0_data_T_143 = add(UInt<5>("h14"), _readBackBuffers_0_data_T_142) @[mainMemory.scala 78:66]
      node _readBackBuffers_0_data_T_144 = tail(_readBackBuffers_0_data_T_143, 1) @[mainMemory.scala 78:66]
      wire _readBackBuffers_0_data_WIRE_20 : UInt @[mainMemory.scala 78:61]
      _readBackBuffers_0_data_WIRE_20 is invalid @[mainMemory.scala 78:61]
      when UInt<1>("h1") : @[mainMemory.scala 78:61]
        _readBackBuffers_0_data_WIRE_20 <= _readBackBuffers_0_data_T_144 @[mainMemory.scala 78:61]
        node _readBackBuffers_0_data_T_145 = or(_readBackBuffers_0_data_WIRE_20, UInt<28>("h0")) @[mainMemory.scala 78:61]
        node _readBackBuffers_0_data_T_146 = bits(_readBackBuffers_0_data_T_145, 27, 0) @[mainMemory.scala 78:61]
        read mport readBackBuffers_0_data_MPORT_20 = memory[_readBackBuffers_0_data_T_146], clock @[mainMemory.scala 78:61]
      node _readBackBuffers_0_data_T_147 = not(UInt<32>("h3")) @[mainMemory.scala 78:120]
      node _readBackBuffers_0_data_T_148 = and(clients[0].ARADDR, _readBackBuffers_0_data_T_147) @[mainMemory.scala 78:118]
      node _readBackBuffers_0_data_T_149 = mux(servicing[0].valid, servicing[0].address, _readBackBuffers_0_data_T_148) @[mainMemory.scala 78:71]
      node _readBackBuffers_0_data_T_150 = add(UInt<5>("h15"), _readBackBuffers_0_data_T_149) @[mainMemory.scala 78:66]
      node _readBackBuffers_0_data_T_151 = tail(_readBackBuffers_0_data_T_150, 1) @[mainMemory.scala 78:66]
      wire _readBackBuffers_0_data_WIRE_21 : UInt @[mainMemory.scala 78:61]
      _readBackBuffers_0_data_WIRE_21 is invalid @[mainMemory.scala 78:61]
      when UInt<1>("h1") : @[mainMemory.scala 78:61]
        _readBackBuffers_0_data_WIRE_21 <= _readBackBuffers_0_data_T_151 @[mainMemory.scala 78:61]
        node _readBackBuffers_0_data_T_152 = or(_readBackBuffers_0_data_WIRE_21, UInt<28>("h0")) @[mainMemory.scala 78:61]
        node _readBackBuffers_0_data_T_153 = bits(_readBackBuffers_0_data_T_152, 27, 0) @[mainMemory.scala 78:61]
        read mport readBackBuffers_0_data_MPORT_21 = memory[_readBackBuffers_0_data_T_153], clock @[mainMemory.scala 78:61]
      node _readBackBuffers_0_data_T_154 = not(UInt<32>("h3")) @[mainMemory.scala 78:120]
      node _readBackBuffers_0_data_T_155 = and(clients[0].ARADDR, _readBackBuffers_0_data_T_154) @[mainMemory.scala 78:118]
      node _readBackBuffers_0_data_T_156 = mux(servicing[0].valid, servicing[0].address, _readBackBuffers_0_data_T_155) @[mainMemory.scala 78:71]
      node _readBackBuffers_0_data_T_157 = add(UInt<5>("h16"), _readBackBuffers_0_data_T_156) @[mainMemory.scala 78:66]
      node _readBackBuffers_0_data_T_158 = tail(_readBackBuffers_0_data_T_157, 1) @[mainMemory.scala 78:66]
      wire _readBackBuffers_0_data_WIRE_22 : UInt @[mainMemory.scala 78:61]
      _readBackBuffers_0_data_WIRE_22 is invalid @[mainMemory.scala 78:61]
      when UInt<1>("h1") : @[mainMemory.scala 78:61]
        _readBackBuffers_0_data_WIRE_22 <= _readBackBuffers_0_data_T_158 @[mainMemory.scala 78:61]
        node _readBackBuffers_0_data_T_159 = or(_readBackBuffers_0_data_WIRE_22, UInt<28>("h0")) @[mainMemory.scala 78:61]
        node _readBackBuffers_0_data_T_160 = bits(_readBackBuffers_0_data_T_159, 27, 0) @[mainMemory.scala 78:61]
        read mport readBackBuffers_0_data_MPORT_22 = memory[_readBackBuffers_0_data_T_160], clock @[mainMemory.scala 78:61]
      node _readBackBuffers_0_data_T_161 = not(UInt<32>("h3")) @[mainMemory.scala 78:120]
      node _readBackBuffers_0_data_T_162 = and(clients[0].ARADDR, _readBackBuffers_0_data_T_161) @[mainMemory.scala 78:118]
      node _readBackBuffers_0_data_T_163 = mux(servicing[0].valid, servicing[0].address, _readBackBuffers_0_data_T_162) @[mainMemory.scala 78:71]
      node _readBackBuffers_0_data_T_164 = add(UInt<5>("h17"), _readBackBuffers_0_data_T_163) @[mainMemory.scala 78:66]
      node _readBackBuffers_0_data_T_165 = tail(_readBackBuffers_0_data_T_164, 1) @[mainMemory.scala 78:66]
      wire _readBackBuffers_0_data_WIRE_23 : UInt @[mainMemory.scala 78:61]
      _readBackBuffers_0_data_WIRE_23 is invalid @[mainMemory.scala 78:61]
      when UInt<1>("h1") : @[mainMemory.scala 78:61]
        _readBackBuffers_0_data_WIRE_23 <= _readBackBuffers_0_data_T_165 @[mainMemory.scala 78:61]
        node _readBackBuffers_0_data_T_166 = or(_readBackBuffers_0_data_WIRE_23, UInt<28>("h0")) @[mainMemory.scala 78:61]
        node _readBackBuffers_0_data_T_167 = bits(_readBackBuffers_0_data_T_166, 27, 0) @[mainMemory.scala 78:61]
        read mport readBackBuffers_0_data_MPORT_23 = memory[_readBackBuffers_0_data_T_167], clock @[mainMemory.scala 78:61]
      node _readBackBuffers_0_data_T_168 = not(UInt<32>("h3")) @[mainMemory.scala 78:120]
      node _readBackBuffers_0_data_T_169 = and(clients[0].ARADDR, _readBackBuffers_0_data_T_168) @[mainMemory.scala 78:118]
      node _readBackBuffers_0_data_T_170 = mux(servicing[0].valid, servicing[0].address, _readBackBuffers_0_data_T_169) @[mainMemory.scala 78:71]
      node _readBackBuffers_0_data_T_171 = add(UInt<5>("h18"), _readBackBuffers_0_data_T_170) @[mainMemory.scala 78:66]
      node _readBackBuffers_0_data_T_172 = tail(_readBackBuffers_0_data_T_171, 1) @[mainMemory.scala 78:66]
      wire _readBackBuffers_0_data_WIRE_24 : UInt @[mainMemory.scala 78:61]
      _readBackBuffers_0_data_WIRE_24 is invalid @[mainMemory.scala 78:61]
      when UInt<1>("h1") : @[mainMemory.scala 78:61]
        _readBackBuffers_0_data_WIRE_24 <= _readBackBuffers_0_data_T_172 @[mainMemory.scala 78:61]
        node _readBackBuffers_0_data_T_173 = or(_readBackBuffers_0_data_WIRE_24, UInt<28>("h0")) @[mainMemory.scala 78:61]
        node _readBackBuffers_0_data_T_174 = bits(_readBackBuffers_0_data_T_173, 27, 0) @[mainMemory.scala 78:61]
        read mport readBackBuffers_0_data_MPORT_24 = memory[_readBackBuffers_0_data_T_174], clock @[mainMemory.scala 78:61]
      node _readBackBuffers_0_data_T_175 = not(UInt<32>("h3")) @[mainMemory.scala 78:120]
      node _readBackBuffers_0_data_T_176 = and(clients[0].ARADDR, _readBackBuffers_0_data_T_175) @[mainMemory.scala 78:118]
      node _readBackBuffers_0_data_T_177 = mux(servicing[0].valid, servicing[0].address, _readBackBuffers_0_data_T_176) @[mainMemory.scala 78:71]
      node _readBackBuffers_0_data_T_178 = add(UInt<5>("h19"), _readBackBuffers_0_data_T_177) @[mainMemory.scala 78:66]
      node _readBackBuffers_0_data_T_179 = tail(_readBackBuffers_0_data_T_178, 1) @[mainMemory.scala 78:66]
      wire _readBackBuffers_0_data_WIRE_25 : UInt @[mainMemory.scala 78:61]
      _readBackBuffers_0_data_WIRE_25 is invalid @[mainMemory.scala 78:61]
      when UInt<1>("h1") : @[mainMemory.scala 78:61]
        _readBackBuffers_0_data_WIRE_25 <= _readBackBuffers_0_data_T_179 @[mainMemory.scala 78:61]
        node _readBackBuffers_0_data_T_180 = or(_readBackBuffers_0_data_WIRE_25, UInt<28>("h0")) @[mainMemory.scala 78:61]
        node _readBackBuffers_0_data_T_181 = bits(_readBackBuffers_0_data_T_180, 27, 0) @[mainMemory.scala 78:61]
        read mport readBackBuffers_0_data_MPORT_25 = memory[_readBackBuffers_0_data_T_181], clock @[mainMemory.scala 78:61]
      node _readBackBuffers_0_data_T_182 = not(UInt<32>("h3")) @[mainMemory.scala 78:120]
      node _readBackBuffers_0_data_T_183 = and(clients[0].ARADDR, _readBackBuffers_0_data_T_182) @[mainMemory.scala 78:118]
      node _readBackBuffers_0_data_T_184 = mux(servicing[0].valid, servicing[0].address, _readBackBuffers_0_data_T_183) @[mainMemory.scala 78:71]
      node _readBackBuffers_0_data_T_185 = add(UInt<5>("h1a"), _readBackBuffers_0_data_T_184) @[mainMemory.scala 78:66]
      node _readBackBuffers_0_data_T_186 = tail(_readBackBuffers_0_data_T_185, 1) @[mainMemory.scala 78:66]
      wire _readBackBuffers_0_data_WIRE_26 : UInt @[mainMemory.scala 78:61]
      _readBackBuffers_0_data_WIRE_26 is invalid @[mainMemory.scala 78:61]
      when UInt<1>("h1") : @[mainMemory.scala 78:61]
        _readBackBuffers_0_data_WIRE_26 <= _readBackBuffers_0_data_T_186 @[mainMemory.scala 78:61]
        node _readBackBuffers_0_data_T_187 = or(_readBackBuffers_0_data_WIRE_26, UInt<28>("h0")) @[mainMemory.scala 78:61]
        node _readBackBuffers_0_data_T_188 = bits(_readBackBuffers_0_data_T_187, 27, 0) @[mainMemory.scala 78:61]
        read mport readBackBuffers_0_data_MPORT_26 = memory[_readBackBuffers_0_data_T_188], clock @[mainMemory.scala 78:61]
      node _readBackBuffers_0_data_T_189 = not(UInt<32>("h3")) @[mainMemory.scala 78:120]
      node _readBackBuffers_0_data_T_190 = and(clients[0].ARADDR, _readBackBuffers_0_data_T_189) @[mainMemory.scala 78:118]
      node _readBackBuffers_0_data_T_191 = mux(servicing[0].valid, servicing[0].address, _readBackBuffers_0_data_T_190) @[mainMemory.scala 78:71]
      node _readBackBuffers_0_data_T_192 = add(UInt<5>("h1b"), _readBackBuffers_0_data_T_191) @[mainMemory.scala 78:66]
      node _readBackBuffers_0_data_T_193 = tail(_readBackBuffers_0_data_T_192, 1) @[mainMemory.scala 78:66]
      wire _readBackBuffers_0_data_WIRE_27 : UInt @[mainMemory.scala 78:61]
      _readBackBuffers_0_data_WIRE_27 is invalid @[mainMemory.scala 78:61]
      when UInt<1>("h1") : @[mainMemory.scala 78:61]
        _readBackBuffers_0_data_WIRE_27 <= _readBackBuffers_0_data_T_193 @[mainMemory.scala 78:61]
        node _readBackBuffers_0_data_T_194 = or(_readBackBuffers_0_data_WIRE_27, UInt<28>("h0")) @[mainMemory.scala 78:61]
        node _readBackBuffers_0_data_T_195 = bits(_readBackBuffers_0_data_T_194, 27, 0) @[mainMemory.scala 78:61]
        read mport readBackBuffers_0_data_MPORT_27 = memory[_readBackBuffers_0_data_T_195], clock @[mainMemory.scala 78:61]
      node _readBackBuffers_0_data_T_196 = not(UInt<32>("h3")) @[mainMemory.scala 78:120]
      node _readBackBuffers_0_data_T_197 = and(clients[0].ARADDR, _readBackBuffers_0_data_T_196) @[mainMemory.scala 78:118]
      node _readBackBuffers_0_data_T_198 = mux(servicing[0].valid, servicing[0].address, _readBackBuffers_0_data_T_197) @[mainMemory.scala 78:71]
      node _readBackBuffers_0_data_T_199 = add(UInt<5>("h1c"), _readBackBuffers_0_data_T_198) @[mainMemory.scala 78:66]
      node _readBackBuffers_0_data_T_200 = tail(_readBackBuffers_0_data_T_199, 1) @[mainMemory.scala 78:66]
      wire _readBackBuffers_0_data_WIRE_28 : UInt @[mainMemory.scala 78:61]
      _readBackBuffers_0_data_WIRE_28 is invalid @[mainMemory.scala 78:61]
      when UInt<1>("h1") : @[mainMemory.scala 78:61]
        _readBackBuffers_0_data_WIRE_28 <= _readBackBuffers_0_data_T_200 @[mainMemory.scala 78:61]
        node _readBackBuffers_0_data_T_201 = or(_readBackBuffers_0_data_WIRE_28, UInt<28>("h0")) @[mainMemory.scala 78:61]
        node _readBackBuffers_0_data_T_202 = bits(_readBackBuffers_0_data_T_201, 27, 0) @[mainMemory.scala 78:61]
        read mport readBackBuffers_0_data_MPORT_28 = memory[_readBackBuffers_0_data_T_202], clock @[mainMemory.scala 78:61]
      node _readBackBuffers_0_data_T_203 = not(UInt<32>("h3")) @[mainMemory.scala 78:120]
      node _readBackBuffers_0_data_T_204 = and(clients[0].ARADDR, _readBackBuffers_0_data_T_203) @[mainMemory.scala 78:118]
      node _readBackBuffers_0_data_T_205 = mux(servicing[0].valid, servicing[0].address, _readBackBuffers_0_data_T_204) @[mainMemory.scala 78:71]
      node _readBackBuffers_0_data_T_206 = add(UInt<5>("h1d"), _readBackBuffers_0_data_T_205) @[mainMemory.scala 78:66]
      node _readBackBuffers_0_data_T_207 = tail(_readBackBuffers_0_data_T_206, 1) @[mainMemory.scala 78:66]
      wire _readBackBuffers_0_data_WIRE_29 : UInt @[mainMemory.scala 78:61]
      _readBackBuffers_0_data_WIRE_29 is invalid @[mainMemory.scala 78:61]
      when UInt<1>("h1") : @[mainMemory.scala 78:61]
        _readBackBuffers_0_data_WIRE_29 <= _readBackBuffers_0_data_T_207 @[mainMemory.scala 78:61]
        node _readBackBuffers_0_data_T_208 = or(_readBackBuffers_0_data_WIRE_29, UInt<28>("h0")) @[mainMemory.scala 78:61]
        node _readBackBuffers_0_data_T_209 = bits(_readBackBuffers_0_data_T_208, 27, 0) @[mainMemory.scala 78:61]
        read mport readBackBuffers_0_data_MPORT_29 = memory[_readBackBuffers_0_data_T_209], clock @[mainMemory.scala 78:61]
      node _readBackBuffers_0_data_T_210 = not(UInt<32>("h3")) @[mainMemory.scala 78:120]
      node _readBackBuffers_0_data_T_211 = and(clients[0].ARADDR, _readBackBuffers_0_data_T_210) @[mainMemory.scala 78:118]
      node _readBackBuffers_0_data_T_212 = mux(servicing[0].valid, servicing[0].address, _readBackBuffers_0_data_T_211) @[mainMemory.scala 78:71]
      node _readBackBuffers_0_data_T_213 = add(UInt<5>("h1e"), _readBackBuffers_0_data_T_212) @[mainMemory.scala 78:66]
      node _readBackBuffers_0_data_T_214 = tail(_readBackBuffers_0_data_T_213, 1) @[mainMemory.scala 78:66]
      wire _readBackBuffers_0_data_WIRE_30 : UInt @[mainMemory.scala 78:61]
      _readBackBuffers_0_data_WIRE_30 is invalid @[mainMemory.scala 78:61]
      when UInt<1>("h1") : @[mainMemory.scala 78:61]
        _readBackBuffers_0_data_WIRE_30 <= _readBackBuffers_0_data_T_214 @[mainMemory.scala 78:61]
        node _readBackBuffers_0_data_T_215 = or(_readBackBuffers_0_data_WIRE_30, UInt<28>("h0")) @[mainMemory.scala 78:61]
        node _readBackBuffers_0_data_T_216 = bits(_readBackBuffers_0_data_T_215, 27, 0) @[mainMemory.scala 78:61]
        read mport readBackBuffers_0_data_MPORT_30 = memory[_readBackBuffers_0_data_T_216], clock @[mainMemory.scala 78:61]
      node _readBackBuffers_0_data_T_217 = not(UInt<32>("h3")) @[mainMemory.scala 78:120]
      node _readBackBuffers_0_data_T_218 = and(clients[0].ARADDR, _readBackBuffers_0_data_T_217) @[mainMemory.scala 78:118]
      node _readBackBuffers_0_data_T_219 = mux(servicing[0].valid, servicing[0].address, _readBackBuffers_0_data_T_218) @[mainMemory.scala 78:71]
      node _readBackBuffers_0_data_T_220 = add(UInt<5>("h1f"), _readBackBuffers_0_data_T_219) @[mainMemory.scala 78:66]
      node _readBackBuffers_0_data_T_221 = tail(_readBackBuffers_0_data_T_220, 1) @[mainMemory.scala 78:66]
      wire _readBackBuffers_0_data_WIRE_31 : UInt @[mainMemory.scala 78:61]
      _readBackBuffers_0_data_WIRE_31 is invalid @[mainMemory.scala 78:61]
      when UInt<1>("h1") : @[mainMemory.scala 78:61]
        _readBackBuffers_0_data_WIRE_31 <= _readBackBuffers_0_data_T_221 @[mainMemory.scala 78:61]
        node _readBackBuffers_0_data_T_222 = or(_readBackBuffers_0_data_WIRE_31, UInt<28>("h0")) @[mainMemory.scala 78:61]
        node _readBackBuffers_0_data_T_223 = bits(_readBackBuffers_0_data_T_222, 27, 0) @[mainMemory.scala 78:61]
        read mport readBackBuffers_0_data_MPORT_31 = memory[_readBackBuffers_0_data_T_223], clock @[mainMemory.scala 78:61]
      node readBackBuffers_0_data_lo_lo_lo_lo = cat(readBackBuffers_0_data_MPORT_1, readBackBuffers_0_data_MPORT) @[Cat.scala 33:92]
      node readBackBuffers_0_data_lo_lo_lo_hi = cat(readBackBuffers_0_data_MPORT_3, readBackBuffers_0_data_MPORT_2) @[Cat.scala 33:92]
      node readBackBuffers_0_data_lo_lo_lo = cat(readBackBuffers_0_data_lo_lo_lo_hi, readBackBuffers_0_data_lo_lo_lo_lo) @[Cat.scala 33:92]
      node readBackBuffers_0_data_lo_lo_hi_lo = cat(readBackBuffers_0_data_MPORT_5, readBackBuffers_0_data_MPORT_4) @[Cat.scala 33:92]
      node readBackBuffers_0_data_lo_lo_hi_hi = cat(readBackBuffers_0_data_MPORT_7, readBackBuffers_0_data_MPORT_6) @[Cat.scala 33:92]
      node readBackBuffers_0_data_lo_lo_hi = cat(readBackBuffers_0_data_lo_lo_hi_hi, readBackBuffers_0_data_lo_lo_hi_lo) @[Cat.scala 33:92]
      node readBackBuffers_0_data_lo_lo = cat(readBackBuffers_0_data_lo_lo_hi, readBackBuffers_0_data_lo_lo_lo) @[Cat.scala 33:92]
      node readBackBuffers_0_data_lo_hi_lo_lo = cat(readBackBuffers_0_data_MPORT_9, readBackBuffers_0_data_MPORT_8) @[Cat.scala 33:92]
      node readBackBuffers_0_data_lo_hi_lo_hi = cat(readBackBuffers_0_data_MPORT_11, readBackBuffers_0_data_MPORT_10) @[Cat.scala 33:92]
      node readBackBuffers_0_data_lo_hi_lo = cat(readBackBuffers_0_data_lo_hi_lo_hi, readBackBuffers_0_data_lo_hi_lo_lo) @[Cat.scala 33:92]
      node readBackBuffers_0_data_lo_hi_hi_lo = cat(readBackBuffers_0_data_MPORT_13, readBackBuffers_0_data_MPORT_12) @[Cat.scala 33:92]
      node readBackBuffers_0_data_lo_hi_hi_hi = cat(readBackBuffers_0_data_MPORT_15, readBackBuffers_0_data_MPORT_14) @[Cat.scala 33:92]
      node readBackBuffers_0_data_lo_hi_hi = cat(readBackBuffers_0_data_lo_hi_hi_hi, readBackBuffers_0_data_lo_hi_hi_lo) @[Cat.scala 33:92]
      node readBackBuffers_0_data_lo_hi = cat(readBackBuffers_0_data_lo_hi_hi, readBackBuffers_0_data_lo_hi_lo) @[Cat.scala 33:92]
      node readBackBuffers_0_data_lo = cat(readBackBuffers_0_data_lo_hi, readBackBuffers_0_data_lo_lo) @[Cat.scala 33:92]
      node readBackBuffers_0_data_hi_lo_lo_lo = cat(readBackBuffers_0_data_MPORT_17, readBackBuffers_0_data_MPORT_16) @[Cat.scala 33:92]
      node readBackBuffers_0_data_hi_lo_lo_hi = cat(readBackBuffers_0_data_MPORT_19, readBackBuffers_0_data_MPORT_18) @[Cat.scala 33:92]
      node readBackBuffers_0_data_hi_lo_lo = cat(readBackBuffers_0_data_hi_lo_lo_hi, readBackBuffers_0_data_hi_lo_lo_lo) @[Cat.scala 33:92]
      node readBackBuffers_0_data_hi_lo_hi_lo = cat(readBackBuffers_0_data_MPORT_21, readBackBuffers_0_data_MPORT_20) @[Cat.scala 33:92]
      node readBackBuffers_0_data_hi_lo_hi_hi = cat(readBackBuffers_0_data_MPORT_23, readBackBuffers_0_data_MPORT_22) @[Cat.scala 33:92]
      node readBackBuffers_0_data_hi_lo_hi = cat(readBackBuffers_0_data_hi_lo_hi_hi, readBackBuffers_0_data_hi_lo_hi_lo) @[Cat.scala 33:92]
      node readBackBuffers_0_data_hi_lo = cat(readBackBuffers_0_data_hi_lo_hi, readBackBuffers_0_data_hi_lo_lo) @[Cat.scala 33:92]
      node readBackBuffers_0_data_hi_hi_lo_lo = cat(readBackBuffers_0_data_MPORT_25, readBackBuffers_0_data_MPORT_24) @[Cat.scala 33:92]
      node readBackBuffers_0_data_hi_hi_lo_hi = cat(readBackBuffers_0_data_MPORT_27, readBackBuffers_0_data_MPORT_26) @[Cat.scala 33:92]
      node readBackBuffers_0_data_hi_hi_lo = cat(readBackBuffers_0_data_hi_hi_lo_hi, readBackBuffers_0_data_hi_hi_lo_lo) @[Cat.scala 33:92]
      node readBackBuffers_0_data_hi_hi_hi_lo = cat(readBackBuffers_0_data_MPORT_29, readBackBuffers_0_data_MPORT_28) @[Cat.scala 33:92]
      node readBackBuffers_0_data_hi_hi_hi_hi = cat(readBackBuffers_0_data_MPORT_31, readBackBuffers_0_data_MPORT_30) @[Cat.scala 33:92]
      node readBackBuffers_0_data_hi_hi_hi = cat(readBackBuffers_0_data_hi_hi_hi_hi, readBackBuffers_0_data_hi_hi_hi_lo) @[Cat.scala 33:92]
      node readBackBuffers_0_data_hi_hi = cat(readBackBuffers_0_data_hi_hi_hi, readBackBuffers_0_data_hi_hi_lo) @[Cat.scala 33:92]
      node readBackBuffers_0_data_hi = cat(readBackBuffers_0_data_hi_hi, readBackBuffers_0_data_hi_lo) @[Cat.scala 33:92]
      node _readBackBuffers_0_data_T_224 = cat(readBackBuffers_0_data_hi, readBackBuffers_0_data_lo) @[Cat.scala 33:92]
      readBackBuffers[0].data <= _readBackBuffers_0_data_T_224 @[mainMemory.scala 78:21]
      node _readBackBuffers_0_last_T = eq(readBackBuffers[0].last, UInt<1>("h0")) @[mainMemory.scala 79:28]
      node _readBackBuffers_0_last_T_1 = orr(servicing[0].beatsRemaining) @[mainMemory.scala 79:86]
      node _readBackBuffers_0_last_T_2 = eq(_readBackBuffers_0_last_T_1, UInt<1>("h0")) @[mainMemory.scala 79:61]
      node _readBackBuffers_0_last_T_3 = and(servicing[0].valid, _readBackBuffers_0_last_T_2) @[mainMemory.scala 79:58]
      node _readBackBuffers_0_last_T_4 = and(clients[0].RVALID, clients[0].RREADY) @[mainMemory.scala 79:108]
      node _readBackBuffers_0_last_T_5 = eq(_readBackBuffers_0_last_T_4, UInt<1>("h0")) @[mainMemory.scala 79:92]
      node _readBackBuffers_0_last_T_6 = mux(_readBackBuffers_0_last_T, _readBackBuffers_0_last_T_3, _readBackBuffers_0_last_T_5) @[mainMemory.scala 79:27]
      readBackBuffers[0].last <= _readBackBuffers_0_last_T_6 @[mainMemory.scala 79:21]
      readBackBuffers[0].id <= servicing[0].id @[mainMemory.scala 80:19]
      when servicing[0].valid : @[mainMemory.scala 82:27]
        node _T_30 = orr(servicing[0].beatsRemaining) @[mainMemory.scala 83:38]
        node _T_31 = eq(_T_30, UInt<1>("h0")) @[mainMemory.scala 83:14]
        when _T_31 : @[mainMemory.scala 83:43]
          servicing[0].valid <= UInt<1>("h0") @[mainMemory.scala 83:59]
        else :
          node _servicing_0_beatsRemaining_T = sub(servicing[0].beatsRemaining, UInt<1>("h1")) @[mainMemory.scala 84:72]
          node _servicing_0_beatsRemaining_T_1 = tail(_servicing_0_beatsRemaining_T, 1) @[mainMemory.scala 84:72]
          servicing[0].beatsRemaining <= _servicing_0_beatsRemaining_T_1 @[mainMemory.scala 84:45]
        node _servicing_0_address_T_4 = add(servicing[0].address, UInt<6>("h20")) @[mainMemory.scala 86:44]
        node _servicing_0_address_T_5 = tail(_servicing_0_address_T_4, 1) @[mainMemory.scala 86:44]
        servicing[0].address <= _servicing_0_address_T_5 @[mainMemory.scala 86:25]
    clients[0].RVALID <= readBackBuffers[0].valid @[mainMemory.scala 89:19]
    node _clients_0_ARREADY_T = eq(readBackBuffers[0].valid, UInt<1>("h0")) @[mainMemory.scala 90:39]
    node _clients_0_ARREADY_T_1 = eq(servicing[0].valid, UInt<1>("h0")) @[mainMemory.scala 90:56]
    node _clients_0_ARREADY_T_2 = and(programmed, _clients_0_ARREADY_T) @[mainMemory.scala 90:81]
    node _clients_0_ARREADY_T_3 = and(_clients_0_ARREADY_T_2, _clients_0_ARREADY_T_1) @[mainMemory.scala 90:81]
    clients[0].ARREADY <= _clients_0_ARREADY_T_3 @[mainMemory.scala 90:20]
    clients[0].RDATA <= readBackBuffers[0].data @[mainMemory.scala 92:18]
    clients[0].RID <= readBackBuffers[0].id @[mainMemory.scala 93:16]
    clients[0].RLAST <= readBackBuffers[0].last @[mainMemory.scala 94:18]
    clients[0].RRESP <= UInt<1>("h0") @[mainMemory.scala 95:18]
    node _T_32 = eq(readBackBuffers[1].valid, UInt<1>("h0")) @[mainMemory.scala 76:27]
    node _T_33 = or(clients[1].RREADY, _T_32) @[mainMemory.scala 76:24]
    when _T_33 : @[mainMemory.scala 76:44]
      readBackBuffers[1].valid <= servicing[1].valid @[mainMemory.scala 77:22]
      node _readBackBuffers_1_data_T = not(UInt<32>("h3")) @[mainMemory.scala 78:120]
      node _readBackBuffers_1_data_T_1 = and(clients[1].ARADDR, _readBackBuffers_1_data_T) @[mainMemory.scala 78:118]
      node _readBackBuffers_1_data_T_2 = mux(servicing[1].valid, servicing[1].address, _readBackBuffers_1_data_T_1) @[mainMemory.scala 78:71]
      node _readBackBuffers_1_data_T_3 = add(UInt<1>("h0"), _readBackBuffers_1_data_T_2) @[mainMemory.scala 78:66]
      node _readBackBuffers_1_data_T_4 = tail(_readBackBuffers_1_data_T_3, 1) @[mainMemory.scala 78:66]
      wire _readBackBuffers_1_data_WIRE : UInt @[mainMemory.scala 78:61]
      _readBackBuffers_1_data_WIRE is invalid @[mainMemory.scala 78:61]
      when UInt<1>("h1") : @[mainMemory.scala 78:61]
        _readBackBuffers_1_data_WIRE <= _readBackBuffers_1_data_T_4 @[mainMemory.scala 78:61]
        node _readBackBuffers_1_data_T_5 = or(_readBackBuffers_1_data_WIRE, UInt<28>("h0")) @[mainMemory.scala 78:61]
        node _readBackBuffers_1_data_T_6 = bits(_readBackBuffers_1_data_T_5, 27, 0) @[mainMemory.scala 78:61]
        read mport readBackBuffers_1_data_MPORT = memory[_readBackBuffers_1_data_T_6], clock @[mainMemory.scala 78:61]
      node _readBackBuffers_1_data_T_7 = not(UInt<32>("h3")) @[mainMemory.scala 78:120]
      node _readBackBuffers_1_data_T_8 = and(clients[1].ARADDR, _readBackBuffers_1_data_T_7) @[mainMemory.scala 78:118]
      node _readBackBuffers_1_data_T_9 = mux(servicing[1].valid, servicing[1].address, _readBackBuffers_1_data_T_8) @[mainMemory.scala 78:71]
      node _readBackBuffers_1_data_T_10 = add(UInt<1>("h1"), _readBackBuffers_1_data_T_9) @[mainMemory.scala 78:66]
      node _readBackBuffers_1_data_T_11 = tail(_readBackBuffers_1_data_T_10, 1) @[mainMemory.scala 78:66]
      wire _readBackBuffers_1_data_WIRE_1 : UInt @[mainMemory.scala 78:61]
      _readBackBuffers_1_data_WIRE_1 is invalid @[mainMemory.scala 78:61]
      when UInt<1>("h1") : @[mainMemory.scala 78:61]
        _readBackBuffers_1_data_WIRE_1 <= _readBackBuffers_1_data_T_11 @[mainMemory.scala 78:61]
        node _readBackBuffers_1_data_T_12 = or(_readBackBuffers_1_data_WIRE_1, UInt<28>("h0")) @[mainMemory.scala 78:61]
        node _readBackBuffers_1_data_T_13 = bits(_readBackBuffers_1_data_T_12, 27, 0) @[mainMemory.scala 78:61]
        read mport readBackBuffers_1_data_MPORT_1 = memory[_readBackBuffers_1_data_T_13], clock @[mainMemory.scala 78:61]
      node _readBackBuffers_1_data_T_14 = not(UInt<32>("h3")) @[mainMemory.scala 78:120]
      node _readBackBuffers_1_data_T_15 = and(clients[1].ARADDR, _readBackBuffers_1_data_T_14) @[mainMemory.scala 78:118]
      node _readBackBuffers_1_data_T_16 = mux(servicing[1].valid, servicing[1].address, _readBackBuffers_1_data_T_15) @[mainMemory.scala 78:71]
      node _readBackBuffers_1_data_T_17 = add(UInt<2>("h2"), _readBackBuffers_1_data_T_16) @[mainMemory.scala 78:66]
      node _readBackBuffers_1_data_T_18 = tail(_readBackBuffers_1_data_T_17, 1) @[mainMemory.scala 78:66]
      wire _readBackBuffers_1_data_WIRE_2 : UInt @[mainMemory.scala 78:61]
      _readBackBuffers_1_data_WIRE_2 is invalid @[mainMemory.scala 78:61]
      when UInt<1>("h1") : @[mainMemory.scala 78:61]
        _readBackBuffers_1_data_WIRE_2 <= _readBackBuffers_1_data_T_18 @[mainMemory.scala 78:61]
        node _readBackBuffers_1_data_T_19 = or(_readBackBuffers_1_data_WIRE_2, UInt<28>("h0")) @[mainMemory.scala 78:61]
        node _readBackBuffers_1_data_T_20 = bits(_readBackBuffers_1_data_T_19, 27, 0) @[mainMemory.scala 78:61]
        read mport readBackBuffers_1_data_MPORT_2 = memory[_readBackBuffers_1_data_T_20], clock @[mainMemory.scala 78:61]
      node _readBackBuffers_1_data_T_21 = not(UInt<32>("h3")) @[mainMemory.scala 78:120]
      node _readBackBuffers_1_data_T_22 = and(clients[1].ARADDR, _readBackBuffers_1_data_T_21) @[mainMemory.scala 78:118]
      node _readBackBuffers_1_data_T_23 = mux(servicing[1].valid, servicing[1].address, _readBackBuffers_1_data_T_22) @[mainMemory.scala 78:71]
      node _readBackBuffers_1_data_T_24 = add(UInt<2>("h3"), _readBackBuffers_1_data_T_23) @[mainMemory.scala 78:66]
      node _readBackBuffers_1_data_T_25 = tail(_readBackBuffers_1_data_T_24, 1) @[mainMemory.scala 78:66]
      wire _readBackBuffers_1_data_WIRE_3 : UInt @[mainMemory.scala 78:61]
      _readBackBuffers_1_data_WIRE_3 is invalid @[mainMemory.scala 78:61]
      when UInt<1>("h1") : @[mainMemory.scala 78:61]
        _readBackBuffers_1_data_WIRE_3 <= _readBackBuffers_1_data_T_25 @[mainMemory.scala 78:61]
        node _readBackBuffers_1_data_T_26 = or(_readBackBuffers_1_data_WIRE_3, UInt<28>("h0")) @[mainMemory.scala 78:61]
        node _readBackBuffers_1_data_T_27 = bits(_readBackBuffers_1_data_T_26, 27, 0) @[mainMemory.scala 78:61]
        read mport readBackBuffers_1_data_MPORT_3 = memory[_readBackBuffers_1_data_T_27], clock @[mainMemory.scala 78:61]
      node _readBackBuffers_1_data_T_28 = not(UInt<32>("h3")) @[mainMemory.scala 78:120]
      node _readBackBuffers_1_data_T_29 = and(clients[1].ARADDR, _readBackBuffers_1_data_T_28) @[mainMemory.scala 78:118]
      node _readBackBuffers_1_data_T_30 = mux(servicing[1].valid, servicing[1].address, _readBackBuffers_1_data_T_29) @[mainMemory.scala 78:71]
      node _readBackBuffers_1_data_T_31 = add(UInt<3>("h4"), _readBackBuffers_1_data_T_30) @[mainMemory.scala 78:66]
      node _readBackBuffers_1_data_T_32 = tail(_readBackBuffers_1_data_T_31, 1) @[mainMemory.scala 78:66]
      wire _readBackBuffers_1_data_WIRE_4 : UInt @[mainMemory.scala 78:61]
      _readBackBuffers_1_data_WIRE_4 is invalid @[mainMemory.scala 78:61]
      when UInt<1>("h1") : @[mainMemory.scala 78:61]
        _readBackBuffers_1_data_WIRE_4 <= _readBackBuffers_1_data_T_32 @[mainMemory.scala 78:61]
        node _readBackBuffers_1_data_T_33 = or(_readBackBuffers_1_data_WIRE_4, UInt<28>("h0")) @[mainMemory.scala 78:61]
        node _readBackBuffers_1_data_T_34 = bits(_readBackBuffers_1_data_T_33, 27, 0) @[mainMemory.scala 78:61]
        read mport readBackBuffers_1_data_MPORT_4 = memory[_readBackBuffers_1_data_T_34], clock @[mainMemory.scala 78:61]
      node _readBackBuffers_1_data_T_35 = not(UInt<32>("h3")) @[mainMemory.scala 78:120]
      node _readBackBuffers_1_data_T_36 = and(clients[1].ARADDR, _readBackBuffers_1_data_T_35) @[mainMemory.scala 78:118]
      node _readBackBuffers_1_data_T_37 = mux(servicing[1].valid, servicing[1].address, _readBackBuffers_1_data_T_36) @[mainMemory.scala 78:71]
      node _readBackBuffers_1_data_T_38 = add(UInt<3>("h5"), _readBackBuffers_1_data_T_37) @[mainMemory.scala 78:66]
      node _readBackBuffers_1_data_T_39 = tail(_readBackBuffers_1_data_T_38, 1) @[mainMemory.scala 78:66]
      wire _readBackBuffers_1_data_WIRE_5 : UInt @[mainMemory.scala 78:61]
      _readBackBuffers_1_data_WIRE_5 is invalid @[mainMemory.scala 78:61]
      when UInt<1>("h1") : @[mainMemory.scala 78:61]
        _readBackBuffers_1_data_WIRE_5 <= _readBackBuffers_1_data_T_39 @[mainMemory.scala 78:61]
        node _readBackBuffers_1_data_T_40 = or(_readBackBuffers_1_data_WIRE_5, UInt<28>("h0")) @[mainMemory.scala 78:61]
        node _readBackBuffers_1_data_T_41 = bits(_readBackBuffers_1_data_T_40, 27, 0) @[mainMemory.scala 78:61]
        read mport readBackBuffers_1_data_MPORT_5 = memory[_readBackBuffers_1_data_T_41], clock @[mainMemory.scala 78:61]
      node _readBackBuffers_1_data_T_42 = not(UInt<32>("h3")) @[mainMemory.scala 78:120]
      node _readBackBuffers_1_data_T_43 = and(clients[1].ARADDR, _readBackBuffers_1_data_T_42) @[mainMemory.scala 78:118]
      node _readBackBuffers_1_data_T_44 = mux(servicing[1].valid, servicing[1].address, _readBackBuffers_1_data_T_43) @[mainMemory.scala 78:71]
      node _readBackBuffers_1_data_T_45 = add(UInt<3>("h6"), _readBackBuffers_1_data_T_44) @[mainMemory.scala 78:66]
      node _readBackBuffers_1_data_T_46 = tail(_readBackBuffers_1_data_T_45, 1) @[mainMemory.scala 78:66]
      wire _readBackBuffers_1_data_WIRE_6 : UInt @[mainMemory.scala 78:61]
      _readBackBuffers_1_data_WIRE_6 is invalid @[mainMemory.scala 78:61]
      when UInt<1>("h1") : @[mainMemory.scala 78:61]
        _readBackBuffers_1_data_WIRE_6 <= _readBackBuffers_1_data_T_46 @[mainMemory.scala 78:61]
        node _readBackBuffers_1_data_T_47 = or(_readBackBuffers_1_data_WIRE_6, UInt<28>("h0")) @[mainMemory.scala 78:61]
        node _readBackBuffers_1_data_T_48 = bits(_readBackBuffers_1_data_T_47, 27, 0) @[mainMemory.scala 78:61]
        read mport readBackBuffers_1_data_MPORT_6 = memory[_readBackBuffers_1_data_T_48], clock @[mainMemory.scala 78:61]
      node _readBackBuffers_1_data_T_49 = not(UInt<32>("h3")) @[mainMemory.scala 78:120]
      node _readBackBuffers_1_data_T_50 = and(clients[1].ARADDR, _readBackBuffers_1_data_T_49) @[mainMemory.scala 78:118]
      node _readBackBuffers_1_data_T_51 = mux(servicing[1].valid, servicing[1].address, _readBackBuffers_1_data_T_50) @[mainMemory.scala 78:71]
      node _readBackBuffers_1_data_T_52 = add(UInt<3>("h7"), _readBackBuffers_1_data_T_51) @[mainMemory.scala 78:66]
      node _readBackBuffers_1_data_T_53 = tail(_readBackBuffers_1_data_T_52, 1) @[mainMemory.scala 78:66]
      wire _readBackBuffers_1_data_WIRE_7 : UInt @[mainMemory.scala 78:61]
      _readBackBuffers_1_data_WIRE_7 is invalid @[mainMemory.scala 78:61]
      when UInt<1>("h1") : @[mainMemory.scala 78:61]
        _readBackBuffers_1_data_WIRE_7 <= _readBackBuffers_1_data_T_53 @[mainMemory.scala 78:61]
        node _readBackBuffers_1_data_T_54 = or(_readBackBuffers_1_data_WIRE_7, UInt<28>("h0")) @[mainMemory.scala 78:61]
        node _readBackBuffers_1_data_T_55 = bits(_readBackBuffers_1_data_T_54, 27, 0) @[mainMemory.scala 78:61]
        read mport readBackBuffers_1_data_MPORT_7 = memory[_readBackBuffers_1_data_T_55], clock @[mainMemory.scala 78:61]
      node _readBackBuffers_1_data_T_56 = not(UInt<32>("h3")) @[mainMemory.scala 78:120]
      node _readBackBuffers_1_data_T_57 = and(clients[1].ARADDR, _readBackBuffers_1_data_T_56) @[mainMemory.scala 78:118]
      node _readBackBuffers_1_data_T_58 = mux(servicing[1].valid, servicing[1].address, _readBackBuffers_1_data_T_57) @[mainMemory.scala 78:71]
      node _readBackBuffers_1_data_T_59 = add(UInt<4>("h8"), _readBackBuffers_1_data_T_58) @[mainMemory.scala 78:66]
      node _readBackBuffers_1_data_T_60 = tail(_readBackBuffers_1_data_T_59, 1) @[mainMemory.scala 78:66]
      wire _readBackBuffers_1_data_WIRE_8 : UInt @[mainMemory.scala 78:61]
      _readBackBuffers_1_data_WIRE_8 is invalid @[mainMemory.scala 78:61]
      when UInt<1>("h1") : @[mainMemory.scala 78:61]
        _readBackBuffers_1_data_WIRE_8 <= _readBackBuffers_1_data_T_60 @[mainMemory.scala 78:61]
        node _readBackBuffers_1_data_T_61 = or(_readBackBuffers_1_data_WIRE_8, UInt<28>("h0")) @[mainMemory.scala 78:61]
        node _readBackBuffers_1_data_T_62 = bits(_readBackBuffers_1_data_T_61, 27, 0) @[mainMemory.scala 78:61]
        read mport readBackBuffers_1_data_MPORT_8 = memory[_readBackBuffers_1_data_T_62], clock @[mainMemory.scala 78:61]
      node _readBackBuffers_1_data_T_63 = not(UInt<32>("h3")) @[mainMemory.scala 78:120]
      node _readBackBuffers_1_data_T_64 = and(clients[1].ARADDR, _readBackBuffers_1_data_T_63) @[mainMemory.scala 78:118]
      node _readBackBuffers_1_data_T_65 = mux(servicing[1].valid, servicing[1].address, _readBackBuffers_1_data_T_64) @[mainMemory.scala 78:71]
      node _readBackBuffers_1_data_T_66 = add(UInt<4>("h9"), _readBackBuffers_1_data_T_65) @[mainMemory.scala 78:66]
      node _readBackBuffers_1_data_T_67 = tail(_readBackBuffers_1_data_T_66, 1) @[mainMemory.scala 78:66]
      wire _readBackBuffers_1_data_WIRE_9 : UInt @[mainMemory.scala 78:61]
      _readBackBuffers_1_data_WIRE_9 is invalid @[mainMemory.scala 78:61]
      when UInt<1>("h1") : @[mainMemory.scala 78:61]
        _readBackBuffers_1_data_WIRE_9 <= _readBackBuffers_1_data_T_67 @[mainMemory.scala 78:61]
        node _readBackBuffers_1_data_T_68 = or(_readBackBuffers_1_data_WIRE_9, UInt<28>("h0")) @[mainMemory.scala 78:61]
        node _readBackBuffers_1_data_T_69 = bits(_readBackBuffers_1_data_T_68, 27, 0) @[mainMemory.scala 78:61]
        read mport readBackBuffers_1_data_MPORT_9 = memory[_readBackBuffers_1_data_T_69], clock @[mainMemory.scala 78:61]
      node _readBackBuffers_1_data_T_70 = not(UInt<32>("h3")) @[mainMemory.scala 78:120]
      node _readBackBuffers_1_data_T_71 = and(clients[1].ARADDR, _readBackBuffers_1_data_T_70) @[mainMemory.scala 78:118]
      node _readBackBuffers_1_data_T_72 = mux(servicing[1].valid, servicing[1].address, _readBackBuffers_1_data_T_71) @[mainMemory.scala 78:71]
      node _readBackBuffers_1_data_T_73 = add(UInt<4>("ha"), _readBackBuffers_1_data_T_72) @[mainMemory.scala 78:66]
      node _readBackBuffers_1_data_T_74 = tail(_readBackBuffers_1_data_T_73, 1) @[mainMemory.scala 78:66]
      wire _readBackBuffers_1_data_WIRE_10 : UInt @[mainMemory.scala 78:61]
      _readBackBuffers_1_data_WIRE_10 is invalid @[mainMemory.scala 78:61]
      when UInt<1>("h1") : @[mainMemory.scala 78:61]
        _readBackBuffers_1_data_WIRE_10 <= _readBackBuffers_1_data_T_74 @[mainMemory.scala 78:61]
        node _readBackBuffers_1_data_T_75 = or(_readBackBuffers_1_data_WIRE_10, UInt<28>("h0")) @[mainMemory.scala 78:61]
        node _readBackBuffers_1_data_T_76 = bits(_readBackBuffers_1_data_T_75, 27, 0) @[mainMemory.scala 78:61]
        read mport readBackBuffers_1_data_MPORT_10 = memory[_readBackBuffers_1_data_T_76], clock @[mainMemory.scala 78:61]
      node _readBackBuffers_1_data_T_77 = not(UInt<32>("h3")) @[mainMemory.scala 78:120]
      node _readBackBuffers_1_data_T_78 = and(clients[1].ARADDR, _readBackBuffers_1_data_T_77) @[mainMemory.scala 78:118]
      node _readBackBuffers_1_data_T_79 = mux(servicing[1].valid, servicing[1].address, _readBackBuffers_1_data_T_78) @[mainMemory.scala 78:71]
      node _readBackBuffers_1_data_T_80 = add(UInt<4>("hb"), _readBackBuffers_1_data_T_79) @[mainMemory.scala 78:66]
      node _readBackBuffers_1_data_T_81 = tail(_readBackBuffers_1_data_T_80, 1) @[mainMemory.scala 78:66]
      wire _readBackBuffers_1_data_WIRE_11 : UInt @[mainMemory.scala 78:61]
      _readBackBuffers_1_data_WIRE_11 is invalid @[mainMemory.scala 78:61]
      when UInt<1>("h1") : @[mainMemory.scala 78:61]
        _readBackBuffers_1_data_WIRE_11 <= _readBackBuffers_1_data_T_81 @[mainMemory.scala 78:61]
        node _readBackBuffers_1_data_T_82 = or(_readBackBuffers_1_data_WIRE_11, UInt<28>("h0")) @[mainMemory.scala 78:61]
        node _readBackBuffers_1_data_T_83 = bits(_readBackBuffers_1_data_T_82, 27, 0) @[mainMemory.scala 78:61]
        read mport readBackBuffers_1_data_MPORT_11 = memory[_readBackBuffers_1_data_T_83], clock @[mainMemory.scala 78:61]
      node _readBackBuffers_1_data_T_84 = not(UInt<32>("h3")) @[mainMemory.scala 78:120]
      node _readBackBuffers_1_data_T_85 = and(clients[1].ARADDR, _readBackBuffers_1_data_T_84) @[mainMemory.scala 78:118]
      node _readBackBuffers_1_data_T_86 = mux(servicing[1].valid, servicing[1].address, _readBackBuffers_1_data_T_85) @[mainMemory.scala 78:71]
      node _readBackBuffers_1_data_T_87 = add(UInt<4>("hc"), _readBackBuffers_1_data_T_86) @[mainMemory.scala 78:66]
      node _readBackBuffers_1_data_T_88 = tail(_readBackBuffers_1_data_T_87, 1) @[mainMemory.scala 78:66]
      wire _readBackBuffers_1_data_WIRE_12 : UInt @[mainMemory.scala 78:61]
      _readBackBuffers_1_data_WIRE_12 is invalid @[mainMemory.scala 78:61]
      when UInt<1>("h1") : @[mainMemory.scala 78:61]
        _readBackBuffers_1_data_WIRE_12 <= _readBackBuffers_1_data_T_88 @[mainMemory.scala 78:61]
        node _readBackBuffers_1_data_T_89 = or(_readBackBuffers_1_data_WIRE_12, UInt<28>("h0")) @[mainMemory.scala 78:61]
        node _readBackBuffers_1_data_T_90 = bits(_readBackBuffers_1_data_T_89, 27, 0) @[mainMemory.scala 78:61]
        read mport readBackBuffers_1_data_MPORT_12 = memory[_readBackBuffers_1_data_T_90], clock @[mainMemory.scala 78:61]
      node _readBackBuffers_1_data_T_91 = not(UInt<32>("h3")) @[mainMemory.scala 78:120]
      node _readBackBuffers_1_data_T_92 = and(clients[1].ARADDR, _readBackBuffers_1_data_T_91) @[mainMemory.scala 78:118]
      node _readBackBuffers_1_data_T_93 = mux(servicing[1].valid, servicing[1].address, _readBackBuffers_1_data_T_92) @[mainMemory.scala 78:71]
      node _readBackBuffers_1_data_T_94 = add(UInt<4>("hd"), _readBackBuffers_1_data_T_93) @[mainMemory.scala 78:66]
      node _readBackBuffers_1_data_T_95 = tail(_readBackBuffers_1_data_T_94, 1) @[mainMemory.scala 78:66]
      wire _readBackBuffers_1_data_WIRE_13 : UInt @[mainMemory.scala 78:61]
      _readBackBuffers_1_data_WIRE_13 is invalid @[mainMemory.scala 78:61]
      when UInt<1>("h1") : @[mainMemory.scala 78:61]
        _readBackBuffers_1_data_WIRE_13 <= _readBackBuffers_1_data_T_95 @[mainMemory.scala 78:61]
        node _readBackBuffers_1_data_T_96 = or(_readBackBuffers_1_data_WIRE_13, UInt<28>("h0")) @[mainMemory.scala 78:61]
        node _readBackBuffers_1_data_T_97 = bits(_readBackBuffers_1_data_T_96, 27, 0) @[mainMemory.scala 78:61]
        read mport readBackBuffers_1_data_MPORT_13 = memory[_readBackBuffers_1_data_T_97], clock @[mainMemory.scala 78:61]
      node _readBackBuffers_1_data_T_98 = not(UInt<32>("h3")) @[mainMemory.scala 78:120]
      node _readBackBuffers_1_data_T_99 = and(clients[1].ARADDR, _readBackBuffers_1_data_T_98) @[mainMemory.scala 78:118]
      node _readBackBuffers_1_data_T_100 = mux(servicing[1].valid, servicing[1].address, _readBackBuffers_1_data_T_99) @[mainMemory.scala 78:71]
      node _readBackBuffers_1_data_T_101 = add(UInt<4>("he"), _readBackBuffers_1_data_T_100) @[mainMemory.scala 78:66]
      node _readBackBuffers_1_data_T_102 = tail(_readBackBuffers_1_data_T_101, 1) @[mainMemory.scala 78:66]
      wire _readBackBuffers_1_data_WIRE_14 : UInt @[mainMemory.scala 78:61]
      _readBackBuffers_1_data_WIRE_14 is invalid @[mainMemory.scala 78:61]
      when UInt<1>("h1") : @[mainMemory.scala 78:61]
        _readBackBuffers_1_data_WIRE_14 <= _readBackBuffers_1_data_T_102 @[mainMemory.scala 78:61]
        node _readBackBuffers_1_data_T_103 = or(_readBackBuffers_1_data_WIRE_14, UInt<28>("h0")) @[mainMemory.scala 78:61]
        node _readBackBuffers_1_data_T_104 = bits(_readBackBuffers_1_data_T_103, 27, 0) @[mainMemory.scala 78:61]
        read mport readBackBuffers_1_data_MPORT_14 = memory[_readBackBuffers_1_data_T_104], clock @[mainMemory.scala 78:61]
      node _readBackBuffers_1_data_T_105 = not(UInt<32>("h3")) @[mainMemory.scala 78:120]
      node _readBackBuffers_1_data_T_106 = and(clients[1].ARADDR, _readBackBuffers_1_data_T_105) @[mainMemory.scala 78:118]
      node _readBackBuffers_1_data_T_107 = mux(servicing[1].valid, servicing[1].address, _readBackBuffers_1_data_T_106) @[mainMemory.scala 78:71]
      node _readBackBuffers_1_data_T_108 = add(UInt<4>("hf"), _readBackBuffers_1_data_T_107) @[mainMemory.scala 78:66]
      node _readBackBuffers_1_data_T_109 = tail(_readBackBuffers_1_data_T_108, 1) @[mainMemory.scala 78:66]
      wire _readBackBuffers_1_data_WIRE_15 : UInt @[mainMemory.scala 78:61]
      _readBackBuffers_1_data_WIRE_15 is invalid @[mainMemory.scala 78:61]
      when UInt<1>("h1") : @[mainMemory.scala 78:61]
        _readBackBuffers_1_data_WIRE_15 <= _readBackBuffers_1_data_T_109 @[mainMemory.scala 78:61]
        node _readBackBuffers_1_data_T_110 = or(_readBackBuffers_1_data_WIRE_15, UInt<28>("h0")) @[mainMemory.scala 78:61]
        node _readBackBuffers_1_data_T_111 = bits(_readBackBuffers_1_data_T_110, 27, 0) @[mainMemory.scala 78:61]
        read mport readBackBuffers_1_data_MPORT_15 = memory[_readBackBuffers_1_data_T_111], clock @[mainMemory.scala 78:61]
      node _readBackBuffers_1_data_T_112 = not(UInt<32>("h3")) @[mainMemory.scala 78:120]
      node _readBackBuffers_1_data_T_113 = and(clients[1].ARADDR, _readBackBuffers_1_data_T_112) @[mainMemory.scala 78:118]
      node _readBackBuffers_1_data_T_114 = mux(servicing[1].valid, servicing[1].address, _readBackBuffers_1_data_T_113) @[mainMemory.scala 78:71]
      node _readBackBuffers_1_data_T_115 = add(UInt<5>("h10"), _readBackBuffers_1_data_T_114) @[mainMemory.scala 78:66]
      node _readBackBuffers_1_data_T_116 = tail(_readBackBuffers_1_data_T_115, 1) @[mainMemory.scala 78:66]
      wire _readBackBuffers_1_data_WIRE_16 : UInt @[mainMemory.scala 78:61]
      _readBackBuffers_1_data_WIRE_16 is invalid @[mainMemory.scala 78:61]
      when UInt<1>("h1") : @[mainMemory.scala 78:61]
        _readBackBuffers_1_data_WIRE_16 <= _readBackBuffers_1_data_T_116 @[mainMemory.scala 78:61]
        node _readBackBuffers_1_data_T_117 = or(_readBackBuffers_1_data_WIRE_16, UInt<28>("h0")) @[mainMemory.scala 78:61]
        node _readBackBuffers_1_data_T_118 = bits(_readBackBuffers_1_data_T_117, 27, 0) @[mainMemory.scala 78:61]
        read mport readBackBuffers_1_data_MPORT_16 = memory[_readBackBuffers_1_data_T_118], clock @[mainMemory.scala 78:61]
      node _readBackBuffers_1_data_T_119 = not(UInt<32>("h3")) @[mainMemory.scala 78:120]
      node _readBackBuffers_1_data_T_120 = and(clients[1].ARADDR, _readBackBuffers_1_data_T_119) @[mainMemory.scala 78:118]
      node _readBackBuffers_1_data_T_121 = mux(servicing[1].valid, servicing[1].address, _readBackBuffers_1_data_T_120) @[mainMemory.scala 78:71]
      node _readBackBuffers_1_data_T_122 = add(UInt<5>("h11"), _readBackBuffers_1_data_T_121) @[mainMemory.scala 78:66]
      node _readBackBuffers_1_data_T_123 = tail(_readBackBuffers_1_data_T_122, 1) @[mainMemory.scala 78:66]
      wire _readBackBuffers_1_data_WIRE_17 : UInt @[mainMemory.scala 78:61]
      _readBackBuffers_1_data_WIRE_17 is invalid @[mainMemory.scala 78:61]
      when UInt<1>("h1") : @[mainMemory.scala 78:61]
        _readBackBuffers_1_data_WIRE_17 <= _readBackBuffers_1_data_T_123 @[mainMemory.scala 78:61]
        node _readBackBuffers_1_data_T_124 = or(_readBackBuffers_1_data_WIRE_17, UInt<28>("h0")) @[mainMemory.scala 78:61]
        node _readBackBuffers_1_data_T_125 = bits(_readBackBuffers_1_data_T_124, 27, 0) @[mainMemory.scala 78:61]
        read mport readBackBuffers_1_data_MPORT_17 = memory[_readBackBuffers_1_data_T_125], clock @[mainMemory.scala 78:61]
      node _readBackBuffers_1_data_T_126 = not(UInt<32>("h3")) @[mainMemory.scala 78:120]
      node _readBackBuffers_1_data_T_127 = and(clients[1].ARADDR, _readBackBuffers_1_data_T_126) @[mainMemory.scala 78:118]
      node _readBackBuffers_1_data_T_128 = mux(servicing[1].valid, servicing[1].address, _readBackBuffers_1_data_T_127) @[mainMemory.scala 78:71]
      node _readBackBuffers_1_data_T_129 = add(UInt<5>("h12"), _readBackBuffers_1_data_T_128) @[mainMemory.scala 78:66]
      node _readBackBuffers_1_data_T_130 = tail(_readBackBuffers_1_data_T_129, 1) @[mainMemory.scala 78:66]
      wire _readBackBuffers_1_data_WIRE_18 : UInt @[mainMemory.scala 78:61]
      _readBackBuffers_1_data_WIRE_18 is invalid @[mainMemory.scala 78:61]
      when UInt<1>("h1") : @[mainMemory.scala 78:61]
        _readBackBuffers_1_data_WIRE_18 <= _readBackBuffers_1_data_T_130 @[mainMemory.scala 78:61]
        node _readBackBuffers_1_data_T_131 = or(_readBackBuffers_1_data_WIRE_18, UInt<28>("h0")) @[mainMemory.scala 78:61]
        node _readBackBuffers_1_data_T_132 = bits(_readBackBuffers_1_data_T_131, 27, 0) @[mainMemory.scala 78:61]
        read mport readBackBuffers_1_data_MPORT_18 = memory[_readBackBuffers_1_data_T_132], clock @[mainMemory.scala 78:61]
      node _readBackBuffers_1_data_T_133 = not(UInt<32>("h3")) @[mainMemory.scala 78:120]
      node _readBackBuffers_1_data_T_134 = and(clients[1].ARADDR, _readBackBuffers_1_data_T_133) @[mainMemory.scala 78:118]
      node _readBackBuffers_1_data_T_135 = mux(servicing[1].valid, servicing[1].address, _readBackBuffers_1_data_T_134) @[mainMemory.scala 78:71]
      node _readBackBuffers_1_data_T_136 = add(UInt<5>("h13"), _readBackBuffers_1_data_T_135) @[mainMemory.scala 78:66]
      node _readBackBuffers_1_data_T_137 = tail(_readBackBuffers_1_data_T_136, 1) @[mainMemory.scala 78:66]
      wire _readBackBuffers_1_data_WIRE_19 : UInt @[mainMemory.scala 78:61]
      _readBackBuffers_1_data_WIRE_19 is invalid @[mainMemory.scala 78:61]
      when UInt<1>("h1") : @[mainMemory.scala 78:61]
        _readBackBuffers_1_data_WIRE_19 <= _readBackBuffers_1_data_T_137 @[mainMemory.scala 78:61]
        node _readBackBuffers_1_data_T_138 = or(_readBackBuffers_1_data_WIRE_19, UInt<28>("h0")) @[mainMemory.scala 78:61]
        node _readBackBuffers_1_data_T_139 = bits(_readBackBuffers_1_data_T_138, 27, 0) @[mainMemory.scala 78:61]
        read mport readBackBuffers_1_data_MPORT_19 = memory[_readBackBuffers_1_data_T_139], clock @[mainMemory.scala 78:61]
      node _readBackBuffers_1_data_T_140 = not(UInt<32>("h3")) @[mainMemory.scala 78:120]
      node _readBackBuffers_1_data_T_141 = and(clients[1].ARADDR, _readBackBuffers_1_data_T_140) @[mainMemory.scala 78:118]
      node _readBackBuffers_1_data_T_142 = mux(servicing[1].valid, servicing[1].address, _readBackBuffers_1_data_T_141) @[mainMemory.scala 78:71]
      node _readBackBuffers_1_data_T_143 = add(UInt<5>("h14"), _readBackBuffers_1_data_T_142) @[mainMemory.scala 78:66]
      node _readBackBuffers_1_data_T_144 = tail(_readBackBuffers_1_data_T_143, 1) @[mainMemory.scala 78:66]
      wire _readBackBuffers_1_data_WIRE_20 : UInt @[mainMemory.scala 78:61]
      _readBackBuffers_1_data_WIRE_20 is invalid @[mainMemory.scala 78:61]
      when UInt<1>("h1") : @[mainMemory.scala 78:61]
        _readBackBuffers_1_data_WIRE_20 <= _readBackBuffers_1_data_T_144 @[mainMemory.scala 78:61]
        node _readBackBuffers_1_data_T_145 = or(_readBackBuffers_1_data_WIRE_20, UInt<28>("h0")) @[mainMemory.scala 78:61]
        node _readBackBuffers_1_data_T_146 = bits(_readBackBuffers_1_data_T_145, 27, 0) @[mainMemory.scala 78:61]
        read mport readBackBuffers_1_data_MPORT_20 = memory[_readBackBuffers_1_data_T_146], clock @[mainMemory.scala 78:61]
      node _readBackBuffers_1_data_T_147 = not(UInt<32>("h3")) @[mainMemory.scala 78:120]
      node _readBackBuffers_1_data_T_148 = and(clients[1].ARADDR, _readBackBuffers_1_data_T_147) @[mainMemory.scala 78:118]
      node _readBackBuffers_1_data_T_149 = mux(servicing[1].valid, servicing[1].address, _readBackBuffers_1_data_T_148) @[mainMemory.scala 78:71]
      node _readBackBuffers_1_data_T_150 = add(UInt<5>("h15"), _readBackBuffers_1_data_T_149) @[mainMemory.scala 78:66]
      node _readBackBuffers_1_data_T_151 = tail(_readBackBuffers_1_data_T_150, 1) @[mainMemory.scala 78:66]
      wire _readBackBuffers_1_data_WIRE_21 : UInt @[mainMemory.scala 78:61]
      _readBackBuffers_1_data_WIRE_21 is invalid @[mainMemory.scala 78:61]
      when UInt<1>("h1") : @[mainMemory.scala 78:61]
        _readBackBuffers_1_data_WIRE_21 <= _readBackBuffers_1_data_T_151 @[mainMemory.scala 78:61]
        node _readBackBuffers_1_data_T_152 = or(_readBackBuffers_1_data_WIRE_21, UInt<28>("h0")) @[mainMemory.scala 78:61]
        node _readBackBuffers_1_data_T_153 = bits(_readBackBuffers_1_data_T_152, 27, 0) @[mainMemory.scala 78:61]
        read mport readBackBuffers_1_data_MPORT_21 = memory[_readBackBuffers_1_data_T_153], clock @[mainMemory.scala 78:61]
      node _readBackBuffers_1_data_T_154 = not(UInt<32>("h3")) @[mainMemory.scala 78:120]
      node _readBackBuffers_1_data_T_155 = and(clients[1].ARADDR, _readBackBuffers_1_data_T_154) @[mainMemory.scala 78:118]
      node _readBackBuffers_1_data_T_156 = mux(servicing[1].valid, servicing[1].address, _readBackBuffers_1_data_T_155) @[mainMemory.scala 78:71]
      node _readBackBuffers_1_data_T_157 = add(UInt<5>("h16"), _readBackBuffers_1_data_T_156) @[mainMemory.scala 78:66]
      node _readBackBuffers_1_data_T_158 = tail(_readBackBuffers_1_data_T_157, 1) @[mainMemory.scala 78:66]
      wire _readBackBuffers_1_data_WIRE_22 : UInt @[mainMemory.scala 78:61]
      _readBackBuffers_1_data_WIRE_22 is invalid @[mainMemory.scala 78:61]
      when UInt<1>("h1") : @[mainMemory.scala 78:61]
        _readBackBuffers_1_data_WIRE_22 <= _readBackBuffers_1_data_T_158 @[mainMemory.scala 78:61]
        node _readBackBuffers_1_data_T_159 = or(_readBackBuffers_1_data_WIRE_22, UInt<28>("h0")) @[mainMemory.scala 78:61]
        node _readBackBuffers_1_data_T_160 = bits(_readBackBuffers_1_data_T_159, 27, 0) @[mainMemory.scala 78:61]
        read mport readBackBuffers_1_data_MPORT_22 = memory[_readBackBuffers_1_data_T_160], clock @[mainMemory.scala 78:61]
      node _readBackBuffers_1_data_T_161 = not(UInt<32>("h3")) @[mainMemory.scala 78:120]
      node _readBackBuffers_1_data_T_162 = and(clients[1].ARADDR, _readBackBuffers_1_data_T_161) @[mainMemory.scala 78:118]
      node _readBackBuffers_1_data_T_163 = mux(servicing[1].valid, servicing[1].address, _readBackBuffers_1_data_T_162) @[mainMemory.scala 78:71]
      node _readBackBuffers_1_data_T_164 = add(UInt<5>("h17"), _readBackBuffers_1_data_T_163) @[mainMemory.scala 78:66]
      node _readBackBuffers_1_data_T_165 = tail(_readBackBuffers_1_data_T_164, 1) @[mainMemory.scala 78:66]
      wire _readBackBuffers_1_data_WIRE_23 : UInt @[mainMemory.scala 78:61]
      _readBackBuffers_1_data_WIRE_23 is invalid @[mainMemory.scala 78:61]
      when UInt<1>("h1") : @[mainMemory.scala 78:61]
        _readBackBuffers_1_data_WIRE_23 <= _readBackBuffers_1_data_T_165 @[mainMemory.scala 78:61]
        node _readBackBuffers_1_data_T_166 = or(_readBackBuffers_1_data_WIRE_23, UInt<28>("h0")) @[mainMemory.scala 78:61]
        node _readBackBuffers_1_data_T_167 = bits(_readBackBuffers_1_data_T_166, 27, 0) @[mainMemory.scala 78:61]
        read mport readBackBuffers_1_data_MPORT_23 = memory[_readBackBuffers_1_data_T_167], clock @[mainMemory.scala 78:61]
      node _readBackBuffers_1_data_T_168 = not(UInt<32>("h3")) @[mainMemory.scala 78:120]
      node _readBackBuffers_1_data_T_169 = and(clients[1].ARADDR, _readBackBuffers_1_data_T_168) @[mainMemory.scala 78:118]
      node _readBackBuffers_1_data_T_170 = mux(servicing[1].valid, servicing[1].address, _readBackBuffers_1_data_T_169) @[mainMemory.scala 78:71]
      node _readBackBuffers_1_data_T_171 = add(UInt<5>("h18"), _readBackBuffers_1_data_T_170) @[mainMemory.scala 78:66]
      node _readBackBuffers_1_data_T_172 = tail(_readBackBuffers_1_data_T_171, 1) @[mainMemory.scala 78:66]
      wire _readBackBuffers_1_data_WIRE_24 : UInt @[mainMemory.scala 78:61]
      _readBackBuffers_1_data_WIRE_24 is invalid @[mainMemory.scala 78:61]
      when UInt<1>("h1") : @[mainMemory.scala 78:61]
        _readBackBuffers_1_data_WIRE_24 <= _readBackBuffers_1_data_T_172 @[mainMemory.scala 78:61]
        node _readBackBuffers_1_data_T_173 = or(_readBackBuffers_1_data_WIRE_24, UInt<28>("h0")) @[mainMemory.scala 78:61]
        node _readBackBuffers_1_data_T_174 = bits(_readBackBuffers_1_data_T_173, 27, 0) @[mainMemory.scala 78:61]
        read mport readBackBuffers_1_data_MPORT_24 = memory[_readBackBuffers_1_data_T_174], clock @[mainMemory.scala 78:61]
      node _readBackBuffers_1_data_T_175 = not(UInt<32>("h3")) @[mainMemory.scala 78:120]
      node _readBackBuffers_1_data_T_176 = and(clients[1].ARADDR, _readBackBuffers_1_data_T_175) @[mainMemory.scala 78:118]
      node _readBackBuffers_1_data_T_177 = mux(servicing[1].valid, servicing[1].address, _readBackBuffers_1_data_T_176) @[mainMemory.scala 78:71]
      node _readBackBuffers_1_data_T_178 = add(UInt<5>("h19"), _readBackBuffers_1_data_T_177) @[mainMemory.scala 78:66]
      node _readBackBuffers_1_data_T_179 = tail(_readBackBuffers_1_data_T_178, 1) @[mainMemory.scala 78:66]
      wire _readBackBuffers_1_data_WIRE_25 : UInt @[mainMemory.scala 78:61]
      _readBackBuffers_1_data_WIRE_25 is invalid @[mainMemory.scala 78:61]
      when UInt<1>("h1") : @[mainMemory.scala 78:61]
        _readBackBuffers_1_data_WIRE_25 <= _readBackBuffers_1_data_T_179 @[mainMemory.scala 78:61]
        node _readBackBuffers_1_data_T_180 = or(_readBackBuffers_1_data_WIRE_25, UInt<28>("h0")) @[mainMemory.scala 78:61]
        node _readBackBuffers_1_data_T_181 = bits(_readBackBuffers_1_data_T_180, 27, 0) @[mainMemory.scala 78:61]
        read mport readBackBuffers_1_data_MPORT_25 = memory[_readBackBuffers_1_data_T_181], clock @[mainMemory.scala 78:61]
      node _readBackBuffers_1_data_T_182 = not(UInt<32>("h3")) @[mainMemory.scala 78:120]
      node _readBackBuffers_1_data_T_183 = and(clients[1].ARADDR, _readBackBuffers_1_data_T_182) @[mainMemory.scala 78:118]
      node _readBackBuffers_1_data_T_184 = mux(servicing[1].valid, servicing[1].address, _readBackBuffers_1_data_T_183) @[mainMemory.scala 78:71]
      node _readBackBuffers_1_data_T_185 = add(UInt<5>("h1a"), _readBackBuffers_1_data_T_184) @[mainMemory.scala 78:66]
      node _readBackBuffers_1_data_T_186 = tail(_readBackBuffers_1_data_T_185, 1) @[mainMemory.scala 78:66]
      wire _readBackBuffers_1_data_WIRE_26 : UInt @[mainMemory.scala 78:61]
      _readBackBuffers_1_data_WIRE_26 is invalid @[mainMemory.scala 78:61]
      when UInt<1>("h1") : @[mainMemory.scala 78:61]
        _readBackBuffers_1_data_WIRE_26 <= _readBackBuffers_1_data_T_186 @[mainMemory.scala 78:61]
        node _readBackBuffers_1_data_T_187 = or(_readBackBuffers_1_data_WIRE_26, UInt<28>("h0")) @[mainMemory.scala 78:61]
        node _readBackBuffers_1_data_T_188 = bits(_readBackBuffers_1_data_T_187, 27, 0) @[mainMemory.scala 78:61]
        read mport readBackBuffers_1_data_MPORT_26 = memory[_readBackBuffers_1_data_T_188], clock @[mainMemory.scala 78:61]
      node _readBackBuffers_1_data_T_189 = not(UInt<32>("h3")) @[mainMemory.scala 78:120]
      node _readBackBuffers_1_data_T_190 = and(clients[1].ARADDR, _readBackBuffers_1_data_T_189) @[mainMemory.scala 78:118]
      node _readBackBuffers_1_data_T_191 = mux(servicing[1].valid, servicing[1].address, _readBackBuffers_1_data_T_190) @[mainMemory.scala 78:71]
      node _readBackBuffers_1_data_T_192 = add(UInt<5>("h1b"), _readBackBuffers_1_data_T_191) @[mainMemory.scala 78:66]
      node _readBackBuffers_1_data_T_193 = tail(_readBackBuffers_1_data_T_192, 1) @[mainMemory.scala 78:66]
      wire _readBackBuffers_1_data_WIRE_27 : UInt @[mainMemory.scala 78:61]
      _readBackBuffers_1_data_WIRE_27 is invalid @[mainMemory.scala 78:61]
      when UInt<1>("h1") : @[mainMemory.scala 78:61]
        _readBackBuffers_1_data_WIRE_27 <= _readBackBuffers_1_data_T_193 @[mainMemory.scala 78:61]
        node _readBackBuffers_1_data_T_194 = or(_readBackBuffers_1_data_WIRE_27, UInt<28>("h0")) @[mainMemory.scala 78:61]
        node _readBackBuffers_1_data_T_195 = bits(_readBackBuffers_1_data_T_194, 27, 0) @[mainMemory.scala 78:61]
        read mport readBackBuffers_1_data_MPORT_27 = memory[_readBackBuffers_1_data_T_195], clock @[mainMemory.scala 78:61]
      node _readBackBuffers_1_data_T_196 = not(UInt<32>("h3")) @[mainMemory.scala 78:120]
      node _readBackBuffers_1_data_T_197 = and(clients[1].ARADDR, _readBackBuffers_1_data_T_196) @[mainMemory.scala 78:118]
      node _readBackBuffers_1_data_T_198 = mux(servicing[1].valid, servicing[1].address, _readBackBuffers_1_data_T_197) @[mainMemory.scala 78:71]
      node _readBackBuffers_1_data_T_199 = add(UInt<5>("h1c"), _readBackBuffers_1_data_T_198) @[mainMemory.scala 78:66]
      node _readBackBuffers_1_data_T_200 = tail(_readBackBuffers_1_data_T_199, 1) @[mainMemory.scala 78:66]
      wire _readBackBuffers_1_data_WIRE_28 : UInt @[mainMemory.scala 78:61]
      _readBackBuffers_1_data_WIRE_28 is invalid @[mainMemory.scala 78:61]
      when UInt<1>("h1") : @[mainMemory.scala 78:61]
        _readBackBuffers_1_data_WIRE_28 <= _readBackBuffers_1_data_T_200 @[mainMemory.scala 78:61]
        node _readBackBuffers_1_data_T_201 = or(_readBackBuffers_1_data_WIRE_28, UInt<28>("h0")) @[mainMemory.scala 78:61]
        node _readBackBuffers_1_data_T_202 = bits(_readBackBuffers_1_data_T_201, 27, 0) @[mainMemory.scala 78:61]
        read mport readBackBuffers_1_data_MPORT_28 = memory[_readBackBuffers_1_data_T_202], clock @[mainMemory.scala 78:61]
      node _readBackBuffers_1_data_T_203 = not(UInt<32>("h3")) @[mainMemory.scala 78:120]
      node _readBackBuffers_1_data_T_204 = and(clients[1].ARADDR, _readBackBuffers_1_data_T_203) @[mainMemory.scala 78:118]
      node _readBackBuffers_1_data_T_205 = mux(servicing[1].valid, servicing[1].address, _readBackBuffers_1_data_T_204) @[mainMemory.scala 78:71]
      node _readBackBuffers_1_data_T_206 = add(UInt<5>("h1d"), _readBackBuffers_1_data_T_205) @[mainMemory.scala 78:66]
      node _readBackBuffers_1_data_T_207 = tail(_readBackBuffers_1_data_T_206, 1) @[mainMemory.scala 78:66]
      wire _readBackBuffers_1_data_WIRE_29 : UInt @[mainMemory.scala 78:61]
      _readBackBuffers_1_data_WIRE_29 is invalid @[mainMemory.scala 78:61]
      when UInt<1>("h1") : @[mainMemory.scala 78:61]
        _readBackBuffers_1_data_WIRE_29 <= _readBackBuffers_1_data_T_207 @[mainMemory.scala 78:61]
        node _readBackBuffers_1_data_T_208 = or(_readBackBuffers_1_data_WIRE_29, UInt<28>("h0")) @[mainMemory.scala 78:61]
        node _readBackBuffers_1_data_T_209 = bits(_readBackBuffers_1_data_T_208, 27, 0) @[mainMemory.scala 78:61]
        read mport readBackBuffers_1_data_MPORT_29 = memory[_readBackBuffers_1_data_T_209], clock @[mainMemory.scala 78:61]
      node _readBackBuffers_1_data_T_210 = not(UInt<32>("h3")) @[mainMemory.scala 78:120]
      node _readBackBuffers_1_data_T_211 = and(clients[1].ARADDR, _readBackBuffers_1_data_T_210) @[mainMemory.scala 78:118]
      node _readBackBuffers_1_data_T_212 = mux(servicing[1].valid, servicing[1].address, _readBackBuffers_1_data_T_211) @[mainMemory.scala 78:71]
      node _readBackBuffers_1_data_T_213 = add(UInt<5>("h1e"), _readBackBuffers_1_data_T_212) @[mainMemory.scala 78:66]
      node _readBackBuffers_1_data_T_214 = tail(_readBackBuffers_1_data_T_213, 1) @[mainMemory.scala 78:66]
      wire _readBackBuffers_1_data_WIRE_30 : UInt @[mainMemory.scala 78:61]
      _readBackBuffers_1_data_WIRE_30 is invalid @[mainMemory.scala 78:61]
      when UInt<1>("h1") : @[mainMemory.scala 78:61]
        _readBackBuffers_1_data_WIRE_30 <= _readBackBuffers_1_data_T_214 @[mainMemory.scala 78:61]
        node _readBackBuffers_1_data_T_215 = or(_readBackBuffers_1_data_WIRE_30, UInt<28>("h0")) @[mainMemory.scala 78:61]
        node _readBackBuffers_1_data_T_216 = bits(_readBackBuffers_1_data_T_215, 27, 0) @[mainMemory.scala 78:61]
        read mport readBackBuffers_1_data_MPORT_30 = memory[_readBackBuffers_1_data_T_216], clock @[mainMemory.scala 78:61]
      node _readBackBuffers_1_data_T_217 = not(UInt<32>("h3")) @[mainMemory.scala 78:120]
      node _readBackBuffers_1_data_T_218 = and(clients[1].ARADDR, _readBackBuffers_1_data_T_217) @[mainMemory.scala 78:118]
      node _readBackBuffers_1_data_T_219 = mux(servicing[1].valid, servicing[1].address, _readBackBuffers_1_data_T_218) @[mainMemory.scala 78:71]
      node _readBackBuffers_1_data_T_220 = add(UInt<5>("h1f"), _readBackBuffers_1_data_T_219) @[mainMemory.scala 78:66]
      node _readBackBuffers_1_data_T_221 = tail(_readBackBuffers_1_data_T_220, 1) @[mainMemory.scala 78:66]
      wire _readBackBuffers_1_data_WIRE_31 : UInt @[mainMemory.scala 78:61]
      _readBackBuffers_1_data_WIRE_31 is invalid @[mainMemory.scala 78:61]
      when UInt<1>("h1") : @[mainMemory.scala 78:61]
        _readBackBuffers_1_data_WIRE_31 <= _readBackBuffers_1_data_T_221 @[mainMemory.scala 78:61]
        node _readBackBuffers_1_data_T_222 = or(_readBackBuffers_1_data_WIRE_31, UInt<28>("h0")) @[mainMemory.scala 78:61]
        node _readBackBuffers_1_data_T_223 = bits(_readBackBuffers_1_data_T_222, 27, 0) @[mainMemory.scala 78:61]
        read mport readBackBuffers_1_data_MPORT_31 = memory[_readBackBuffers_1_data_T_223], clock @[mainMemory.scala 78:61]
      node readBackBuffers_1_data_lo_lo_lo_lo = cat(readBackBuffers_1_data_MPORT_1, readBackBuffers_1_data_MPORT) @[Cat.scala 33:92]
      node readBackBuffers_1_data_lo_lo_lo_hi = cat(readBackBuffers_1_data_MPORT_3, readBackBuffers_1_data_MPORT_2) @[Cat.scala 33:92]
      node readBackBuffers_1_data_lo_lo_lo = cat(readBackBuffers_1_data_lo_lo_lo_hi, readBackBuffers_1_data_lo_lo_lo_lo) @[Cat.scala 33:92]
      node readBackBuffers_1_data_lo_lo_hi_lo = cat(readBackBuffers_1_data_MPORT_5, readBackBuffers_1_data_MPORT_4) @[Cat.scala 33:92]
      node readBackBuffers_1_data_lo_lo_hi_hi = cat(readBackBuffers_1_data_MPORT_7, readBackBuffers_1_data_MPORT_6) @[Cat.scala 33:92]
      node readBackBuffers_1_data_lo_lo_hi = cat(readBackBuffers_1_data_lo_lo_hi_hi, readBackBuffers_1_data_lo_lo_hi_lo) @[Cat.scala 33:92]
      node readBackBuffers_1_data_lo_lo = cat(readBackBuffers_1_data_lo_lo_hi, readBackBuffers_1_data_lo_lo_lo) @[Cat.scala 33:92]
      node readBackBuffers_1_data_lo_hi_lo_lo = cat(readBackBuffers_1_data_MPORT_9, readBackBuffers_1_data_MPORT_8) @[Cat.scala 33:92]
      node readBackBuffers_1_data_lo_hi_lo_hi = cat(readBackBuffers_1_data_MPORT_11, readBackBuffers_1_data_MPORT_10) @[Cat.scala 33:92]
      node readBackBuffers_1_data_lo_hi_lo = cat(readBackBuffers_1_data_lo_hi_lo_hi, readBackBuffers_1_data_lo_hi_lo_lo) @[Cat.scala 33:92]
      node readBackBuffers_1_data_lo_hi_hi_lo = cat(readBackBuffers_1_data_MPORT_13, readBackBuffers_1_data_MPORT_12) @[Cat.scala 33:92]
      node readBackBuffers_1_data_lo_hi_hi_hi = cat(readBackBuffers_1_data_MPORT_15, readBackBuffers_1_data_MPORT_14) @[Cat.scala 33:92]
      node readBackBuffers_1_data_lo_hi_hi = cat(readBackBuffers_1_data_lo_hi_hi_hi, readBackBuffers_1_data_lo_hi_hi_lo) @[Cat.scala 33:92]
      node readBackBuffers_1_data_lo_hi = cat(readBackBuffers_1_data_lo_hi_hi, readBackBuffers_1_data_lo_hi_lo) @[Cat.scala 33:92]
      node readBackBuffers_1_data_lo = cat(readBackBuffers_1_data_lo_hi, readBackBuffers_1_data_lo_lo) @[Cat.scala 33:92]
      node readBackBuffers_1_data_hi_lo_lo_lo = cat(readBackBuffers_1_data_MPORT_17, readBackBuffers_1_data_MPORT_16) @[Cat.scala 33:92]
      node readBackBuffers_1_data_hi_lo_lo_hi = cat(readBackBuffers_1_data_MPORT_19, readBackBuffers_1_data_MPORT_18) @[Cat.scala 33:92]
      node readBackBuffers_1_data_hi_lo_lo = cat(readBackBuffers_1_data_hi_lo_lo_hi, readBackBuffers_1_data_hi_lo_lo_lo) @[Cat.scala 33:92]
      node readBackBuffers_1_data_hi_lo_hi_lo = cat(readBackBuffers_1_data_MPORT_21, readBackBuffers_1_data_MPORT_20) @[Cat.scala 33:92]
      node readBackBuffers_1_data_hi_lo_hi_hi = cat(readBackBuffers_1_data_MPORT_23, readBackBuffers_1_data_MPORT_22) @[Cat.scala 33:92]
      node readBackBuffers_1_data_hi_lo_hi = cat(readBackBuffers_1_data_hi_lo_hi_hi, readBackBuffers_1_data_hi_lo_hi_lo) @[Cat.scala 33:92]
      node readBackBuffers_1_data_hi_lo = cat(readBackBuffers_1_data_hi_lo_hi, readBackBuffers_1_data_hi_lo_lo) @[Cat.scala 33:92]
      node readBackBuffers_1_data_hi_hi_lo_lo = cat(readBackBuffers_1_data_MPORT_25, readBackBuffers_1_data_MPORT_24) @[Cat.scala 33:92]
      node readBackBuffers_1_data_hi_hi_lo_hi = cat(readBackBuffers_1_data_MPORT_27, readBackBuffers_1_data_MPORT_26) @[Cat.scala 33:92]
      node readBackBuffers_1_data_hi_hi_lo = cat(readBackBuffers_1_data_hi_hi_lo_hi, readBackBuffers_1_data_hi_hi_lo_lo) @[Cat.scala 33:92]
      node readBackBuffers_1_data_hi_hi_hi_lo = cat(readBackBuffers_1_data_MPORT_29, readBackBuffers_1_data_MPORT_28) @[Cat.scala 33:92]
      node readBackBuffers_1_data_hi_hi_hi_hi = cat(readBackBuffers_1_data_MPORT_31, readBackBuffers_1_data_MPORT_30) @[Cat.scala 33:92]
      node readBackBuffers_1_data_hi_hi_hi = cat(readBackBuffers_1_data_hi_hi_hi_hi, readBackBuffers_1_data_hi_hi_hi_lo) @[Cat.scala 33:92]
      node readBackBuffers_1_data_hi_hi = cat(readBackBuffers_1_data_hi_hi_hi, readBackBuffers_1_data_hi_hi_lo) @[Cat.scala 33:92]
      node readBackBuffers_1_data_hi = cat(readBackBuffers_1_data_hi_hi, readBackBuffers_1_data_hi_lo) @[Cat.scala 33:92]
      node _readBackBuffers_1_data_T_224 = cat(readBackBuffers_1_data_hi, readBackBuffers_1_data_lo) @[Cat.scala 33:92]
      readBackBuffers[1].data <= _readBackBuffers_1_data_T_224 @[mainMemory.scala 78:21]
      node _readBackBuffers_1_last_T = eq(readBackBuffers[1].last, UInt<1>("h0")) @[mainMemory.scala 79:28]
      node _readBackBuffers_1_last_T_1 = orr(servicing[1].beatsRemaining) @[mainMemory.scala 79:86]
      node _readBackBuffers_1_last_T_2 = eq(_readBackBuffers_1_last_T_1, UInt<1>("h0")) @[mainMemory.scala 79:61]
      node _readBackBuffers_1_last_T_3 = and(servicing[1].valid, _readBackBuffers_1_last_T_2) @[mainMemory.scala 79:58]
      node _readBackBuffers_1_last_T_4 = and(clients[1].RVALID, clients[1].RREADY) @[mainMemory.scala 79:108]
      node _readBackBuffers_1_last_T_5 = eq(_readBackBuffers_1_last_T_4, UInt<1>("h0")) @[mainMemory.scala 79:92]
      node _readBackBuffers_1_last_T_6 = mux(_readBackBuffers_1_last_T, _readBackBuffers_1_last_T_3, _readBackBuffers_1_last_T_5) @[mainMemory.scala 79:27]
      readBackBuffers[1].last <= _readBackBuffers_1_last_T_6 @[mainMemory.scala 79:21]
      readBackBuffers[1].id <= servicing[1].id @[mainMemory.scala 80:19]
      when servicing[1].valid : @[mainMemory.scala 82:27]
        node _T_34 = orr(servicing[1].beatsRemaining) @[mainMemory.scala 83:38]
        node _T_35 = eq(_T_34, UInt<1>("h0")) @[mainMemory.scala 83:14]
        when _T_35 : @[mainMemory.scala 83:43]
          servicing[1].valid <= UInt<1>("h0") @[mainMemory.scala 83:59]
        else :
          node _servicing_1_beatsRemaining_T = sub(servicing[1].beatsRemaining, UInt<1>("h1")) @[mainMemory.scala 84:72]
          node _servicing_1_beatsRemaining_T_1 = tail(_servicing_1_beatsRemaining_T, 1) @[mainMemory.scala 84:72]
          servicing[1].beatsRemaining <= _servicing_1_beatsRemaining_T_1 @[mainMemory.scala 84:45]
        node _servicing_1_address_T_4 = add(servicing[1].address, UInt<6>("h20")) @[mainMemory.scala 86:44]
        node _servicing_1_address_T_5 = tail(_servicing_1_address_T_4, 1) @[mainMemory.scala 86:44]
        servicing[1].address <= _servicing_1_address_T_5 @[mainMemory.scala 86:25]
    clients[1].RVALID <= readBackBuffers[1].valid @[mainMemory.scala 89:19]
    node _clients_1_ARREADY_T = eq(readBackBuffers[1].valid, UInt<1>("h0")) @[mainMemory.scala 90:39]
    node _clients_1_ARREADY_T_1 = eq(servicing[1].valid, UInt<1>("h0")) @[mainMemory.scala 90:56]
    node _clients_1_ARREADY_T_2 = and(programmed, _clients_1_ARREADY_T) @[mainMemory.scala 90:81]
    node _clients_1_ARREADY_T_3 = and(_clients_1_ARREADY_T_2, _clients_1_ARREADY_T_1) @[mainMemory.scala 90:81]
    clients[1].ARREADY <= _clients_1_ARREADY_T_3 @[mainMemory.scala 90:20]
    clients[1].RDATA <= readBackBuffers[1].data @[mainMemory.scala 92:18]
    clients[1].RID <= readBackBuffers[1].id @[mainMemory.scala 93:16]
    clients[1].RLAST <= readBackBuffers[1].last @[mainMemory.scala 94:18]
    clients[1].RRESP <= UInt<1>("h0") @[mainMemory.scala 95:18]
    wire _writeBuffers_WIRE : { addressValid : UInt<1>, address : UInt<28>, dataValid : UInt<1>, dataLast : UInt<1>, dataMask : UInt<32>, data : UInt<256>, id : UInt<1>}
    _writeBuffers_WIRE.id is invalid
    _writeBuffers_WIRE.data is invalid
    _writeBuffers_WIRE.dataMask is invalid
    _writeBuffers_WIRE.dataLast is invalid
    _writeBuffers_WIRE.dataValid <= UInt<1>("h0")
    _writeBuffers_WIRE.address is invalid
    _writeBuffers_WIRE.addressValid <= UInt<1>("h0")
    reg writeBuffers : { addressValid : UInt<1>, address : UInt<28>, dataValid : UInt<1>, dataLast : UInt<1>, dataMask : UInt<32>, data : UInt<256>, id : UInt<1>}, clock with :
      reset => (reset, _writeBuffers_WIRE) @[mainMemory.scala 99:29]
    node _T_36 = and(writeBuffers.addressValid, writeBuffers.dataValid) @[mainMemory.scala 110:34]
    when _T_36 : @[mainMemory.scala 110:61]
      writeBuffers.dataValid <= UInt<1>("h0") @[mainMemory.scala 111:27]
      when writeBuffers.dataLast : @[mainMemory.scala 112:32]
        writeBuffers.addressValid <= UInt<1>("h0") @[mainMemory.scala 112:60]
    node _T_37 = and(clients[UInt<1>("h1")].AWVALID, clients[UInt<1>("h1")].AWREADY) @[mainMemory.scala 116:30]
    when _T_37 : @[mainMemory.scala 116:56]
      writeBuffers.addressValid <= UInt<1>("h1") @[mainMemory.scala 117:31]
      node _writeBuffers_address_T = not(UInt<32>("h3")) @[mainMemory.scala 118:53]
      node _writeBuffers_address_T_1 = and(clients[UInt<1>("h1")].AWADDR, _writeBuffers_address_T) @[mainMemory.scala 118:50]
      writeBuffers.address <= _writeBuffers_address_T_1 @[mainMemory.scala 118:26]
      writeBuffers.id <= clients[UInt<1>("h1")].AWID @[mainMemory.scala 119:21]
    node _T_38 = and(clients[UInt<1>("h1")].WVALID, clients[UInt<1>("h1")].WREADY) @[mainMemory.scala 123:29]
    when _T_38 : @[mainMemory.scala 123:54]
      writeBuffers.data <= clients[UInt<1>("h1")].WDATA @[mainMemory.scala 124:23]
      writeBuffers.dataLast <= clients[UInt<1>("h1")].WLAST @[mainMemory.scala 125:27]
      writeBuffers.dataValid <= UInt<1>("h1") @[mainMemory.scala 126:28]
      writeBuffers.dataMask <= clients[UInt<1>("h1")].WSTRB @[mainMemory.scala 127:27]
    node _T_39 = and(writeBuffers.addressValid, writeBuffers.dataValid) @[mainMemory.scala 131:34]
    when _T_39 : @[mainMemory.scala 131:61]
      node _T_40 = shr(writeBuffers.data, 0) @[mainMemory.scala 132:50]
      node _T_41 = bits(_T_40, 7, 0) @[mainMemory.scala 132:59]
      node _T_42 = bits(writeBuffers.dataMask, 0, 0) @[mainMemory.scala 132:88]
      node _T_43 = shr(writeBuffers.data, 8) @[mainMemory.scala 132:50]
      node _T_44 = bits(_T_43, 7, 0) @[mainMemory.scala 132:59]
      node _T_45 = bits(writeBuffers.dataMask, 1, 1) @[mainMemory.scala 132:88]
      node _T_46 = shr(writeBuffers.data, 16) @[mainMemory.scala 132:50]
      node _T_47 = bits(_T_46, 7, 0) @[mainMemory.scala 132:59]
      node _T_48 = bits(writeBuffers.dataMask, 2, 2) @[mainMemory.scala 132:88]
      node _T_49 = shr(writeBuffers.data, 24) @[mainMemory.scala 132:50]
      node _T_50 = bits(_T_49, 7, 0) @[mainMemory.scala 132:59]
      node _T_51 = bits(writeBuffers.dataMask, 3, 3) @[mainMemory.scala 132:88]
      node _T_52 = shr(writeBuffers.data, 32) @[mainMemory.scala 132:50]
      node _T_53 = bits(_T_52, 7, 0) @[mainMemory.scala 132:59]
      node _T_54 = bits(writeBuffers.dataMask, 4, 4) @[mainMemory.scala 132:88]
      node _T_55 = shr(writeBuffers.data, 40) @[mainMemory.scala 132:50]
      node _T_56 = bits(_T_55, 7, 0) @[mainMemory.scala 132:59]
      node _T_57 = bits(writeBuffers.dataMask, 5, 5) @[mainMemory.scala 132:88]
      node _T_58 = shr(writeBuffers.data, 48) @[mainMemory.scala 132:50]
      node _T_59 = bits(_T_58, 7, 0) @[mainMemory.scala 132:59]
      node _T_60 = bits(writeBuffers.dataMask, 6, 6) @[mainMemory.scala 132:88]
      node _T_61 = shr(writeBuffers.data, 56) @[mainMemory.scala 132:50]
      node _T_62 = bits(_T_61, 7, 0) @[mainMemory.scala 132:59]
      node _T_63 = bits(writeBuffers.dataMask, 7, 7) @[mainMemory.scala 132:88]
      node _T_64 = shr(writeBuffers.data, 64) @[mainMemory.scala 132:50]
      node _T_65 = bits(_T_64, 7, 0) @[mainMemory.scala 132:59]
      node _T_66 = bits(writeBuffers.dataMask, 8, 8) @[mainMemory.scala 132:88]
      node _T_67 = shr(writeBuffers.data, 72) @[mainMemory.scala 132:50]
      node _T_68 = bits(_T_67, 7, 0) @[mainMemory.scala 132:59]
      node _T_69 = bits(writeBuffers.dataMask, 9, 9) @[mainMemory.scala 132:88]
      node _T_70 = shr(writeBuffers.data, 80) @[mainMemory.scala 132:50]
      node _T_71 = bits(_T_70, 7, 0) @[mainMemory.scala 132:59]
      node _T_72 = bits(writeBuffers.dataMask, 10, 10) @[mainMemory.scala 132:88]
      node _T_73 = shr(writeBuffers.data, 88) @[mainMemory.scala 132:50]
      node _T_74 = bits(_T_73, 7, 0) @[mainMemory.scala 132:59]
      node _T_75 = bits(writeBuffers.dataMask, 11, 11) @[mainMemory.scala 132:88]
      node _T_76 = shr(writeBuffers.data, 96) @[mainMemory.scala 132:50]
      node _T_77 = bits(_T_76, 7, 0) @[mainMemory.scala 132:59]
      node _T_78 = bits(writeBuffers.dataMask, 12, 12) @[mainMemory.scala 132:88]
      node _T_79 = shr(writeBuffers.data, 104) @[mainMemory.scala 132:50]
      node _T_80 = bits(_T_79, 7, 0) @[mainMemory.scala 132:59]
      node _T_81 = bits(writeBuffers.dataMask, 13, 13) @[mainMemory.scala 132:88]
      node _T_82 = shr(writeBuffers.data, 112) @[mainMemory.scala 132:50]
      node _T_83 = bits(_T_82, 7, 0) @[mainMemory.scala 132:59]
      node _T_84 = bits(writeBuffers.dataMask, 14, 14) @[mainMemory.scala 132:88]
      node _T_85 = shr(writeBuffers.data, 120) @[mainMemory.scala 132:50]
      node _T_86 = bits(_T_85, 7, 0) @[mainMemory.scala 132:59]
      node _T_87 = bits(writeBuffers.dataMask, 15, 15) @[mainMemory.scala 132:88]
      node _T_88 = shr(writeBuffers.data, 128) @[mainMemory.scala 132:50]
      node _T_89 = bits(_T_88, 7, 0) @[mainMemory.scala 132:59]
      node _T_90 = bits(writeBuffers.dataMask, 16, 16) @[mainMemory.scala 132:88]
      node _T_91 = shr(writeBuffers.data, 136) @[mainMemory.scala 132:50]
      node _T_92 = bits(_T_91, 7, 0) @[mainMemory.scala 132:59]
      node _T_93 = bits(writeBuffers.dataMask, 17, 17) @[mainMemory.scala 132:88]
      node _T_94 = shr(writeBuffers.data, 144) @[mainMemory.scala 132:50]
      node _T_95 = bits(_T_94, 7, 0) @[mainMemory.scala 132:59]
      node _T_96 = bits(writeBuffers.dataMask, 18, 18) @[mainMemory.scala 132:88]
      node _T_97 = shr(writeBuffers.data, 152) @[mainMemory.scala 132:50]
      node _T_98 = bits(_T_97, 7, 0) @[mainMemory.scala 132:59]
      node _T_99 = bits(writeBuffers.dataMask, 19, 19) @[mainMemory.scala 132:88]
      node _T_100 = shr(writeBuffers.data, 160) @[mainMemory.scala 132:50]
      node _T_101 = bits(_T_100, 7, 0) @[mainMemory.scala 132:59]
      node _T_102 = bits(writeBuffers.dataMask, 20, 20) @[mainMemory.scala 132:88]
      node _T_103 = shr(writeBuffers.data, 168) @[mainMemory.scala 132:50]
      node _T_104 = bits(_T_103, 7, 0) @[mainMemory.scala 132:59]
      node _T_105 = bits(writeBuffers.dataMask, 21, 21) @[mainMemory.scala 132:88]
      node _T_106 = shr(writeBuffers.data, 176) @[mainMemory.scala 132:50]
      node _T_107 = bits(_T_106, 7, 0) @[mainMemory.scala 132:59]
      node _T_108 = bits(writeBuffers.dataMask, 22, 22) @[mainMemory.scala 132:88]
      node _T_109 = shr(writeBuffers.data, 184) @[mainMemory.scala 132:50]
      node _T_110 = bits(_T_109, 7, 0) @[mainMemory.scala 132:59]
      node _T_111 = bits(writeBuffers.dataMask, 23, 23) @[mainMemory.scala 132:88]
      node _T_112 = shr(writeBuffers.data, 192) @[mainMemory.scala 132:50]
      node _T_113 = bits(_T_112, 7, 0) @[mainMemory.scala 132:59]
      node _T_114 = bits(writeBuffers.dataMask, 24, 24) @[mainMemory.scala 132:88]
      node _T_115 = shr(writeBuffers.data, 200) @[mainMemory.scala 132:50]
      node _T_116 = bits(_T_115, 7, 0) @[mainMemory.scala 132:59]
      node _T_117 = bits(writeBuffers.dataMask, 25, 25) @[mainMemory.scala 132:88]
      node _T_118 = shr(writeBuffers.data, 208) @[mainMemory.scala 132:50]
      node _T_119 = bits(_T_118, 7, 0) @[mainMemory.scala 132:59]
      node _T_120 = bits(writeBuffers.dataMask, 26, 26) @[mainMemory.scala 132:88]
      node _T_121 = shr(writeBuffers.data, 216) @[mainMemory.scala 132:50]
      node _T_122 = bits(_T_121, 7, 0) @[mainMemory.scala 132:59]
      node _T_123 = bits(writeBuffers.dataMask, 27, 27) @[mainMemory.scala 132:88]
      node _T_124 = shr(writeBuffers.data, 224) @[mainMemory.scala 132:50]
      node _T_125 = bits(_T_124, 7, 0) @[mainMemory.scala 132:59]
      node _T_126 = bits(writeBuffers.dataMask, 28, 28) @[mainMemory.scala 132:88]
      node _T_127 = shr(writeBuffers.data, 232) @[mainMemory.scala 132:50]
      node _T_128 = bits(_T_127, 7, 0) @[mainMemory.scala 132:59]
      node _T_129 = bits(writeBuffers.dataMask, 29, 29) @[mainMemory.scala 132:88]
      node _T_130 = shr(writeBuffers.data, 240) @[mainMemory.scala 132:50]
      node _T_131 = bits(_T_130, 7, 0) @[mainMemory.scala 132:59]
      node _T_132 = bits(writeBuffers.dataMask, 30, 30) @[mainMemory.scala 132:88]
      node _T_133 = shr(writeBuffers.data, 248) @[mainMemory.scala 132:50]
      node _T_134 = bits(_T_133, 7, 0) @[mainMemory.scala 132:59]
      node _T_135 = bits(writeBuffers.dataMask, 31, 31) @[mainMemory.scala 132:88]
      node _T_136 = bits(_T_42, 0, 0) @[mainMemory.scala 133:59]
      when _T_136 : @[mainMemory.scala 133:67]
        node _T_137 = add(writeBuffers.address, UInt<1>("h0")) @[mainMemory.scala 133:103]
        node _T_138 = tail(_T_137, 1) @[mainMemory.scala 133:103]
        write mport MPORT_8 = memory[_T_138], clock
        MPORT_8 <= _T_41
      node _T_139 = bits(_T_45, 0, 0) @[mainMemory.scala 133:59]
      when _T_139 : @[mainMemory.scala 133:67]
        node _T_140 = add(writeBuffers.address, UInt<1>("h1")) @[mainMemory.scala 133:103]
        node _T_141 = tail(_T_140, 1) @[mainMemory.scala 133:103]
        write mport MPORT_9 = memory[_T_141], clock
        MPORT_9 <= _T_44
      node _T_142 = bits(_T_48, 0, 0) @[mainMemory.scala 133:59]
      when _T_142 : @[mainMemory.scala 133:67]
        node _T_143 = add(writeBuffers.address, UInt<2>("h2")) @[mainMemory.scala 133:103]
        node _T_144 = tail(_T_143, 1) @[mainMemory.scala 133:103]
        write mport MPORT_10 = memory[_T_144], clock
        MPORT_10 <= _T_47
      node _T_145 = bits(_T_51, 0, 0) @[mainMemory.scala 133:59]
      when _T_145 : @[mainMemory.scala 133:67]
        node _T_146 = add(writeBuffers.address, UInt<2>("h3")) @[mainMemory.scala 133:103]
        node _T_147 = tail(_T_146, 1) @[mainMemory.scala 133:103]
        write mport MPORT_11 = memory[_T_147], clock
        MPORT_11 <= _T_50
      node _T_148 = bits(_T_54, 0, 0) @[mainMemory.scala 133:59]
      when _T_148 : @[mainMemory.scala 133:67]
        node _T_149 = add(writeBuffers.address, UInt<3>("h4")) @[mainMemory.scala 133:103]
        node _T_150 = tail(_T_149, 1) @[mainMemory.scala 133:103]
        write mport MPORT_12 = memory[_T_150], clock
        MPORT_12 <= _T_53
      node _T_151 = bits(_T_57, 0, 0) @[mainMemory.scala 133:59]
      when _T_151 : @[mainMemory.scala 133:67]
        node _T_152 = add(writeBuffers.address, UInt<3>("h5")) @[mainMemory.scala 133:103]
        node _T_153 = tail(_T_152, 1) @[mainMemory.scala 133:103]
        write mport MPORT_13 = memory[_T_153], clock
        MPORT_13 <= _T_56
      node _T_154 = bits(_T_60, 0, 0) @[mainMemory.scala 133:59]
      when _T_154 : @[mainMemory.scala 133:67]
        node _T_155 = add(writeBuffers.address, UInt<3>("h6")) @[mainMemory.scala 133:103]
        node _T_156 = tail(_T_155, 1) @[mainMemory.scala 133:103]
        write mport MPORT_14 = memory[_T_156], clock
        MPORT_14 <= _T_59
      node _T_157 = bits(_T_63, 0, 0) @[mainMemory.scala 133:59]
      when _T_157 : @[mainMemory.scala 133:67]
        node _T_158 = add(writeBuffers.address, UInt<3>("h7")) @[mainMemory.scala 133:103]
        node _T_159 = tail(_T_158, 1) @[mainMemory.scala 133:103]
        write mport MPORT_15 = memory[_T_159], clock
        MPORT_15 <= _T_62
      node _T_160 = bits(_T_66, 0, 0) @[mainMemory.scala 133:59]
      when _T_160 : @[mainMemory.scala 133:67]
        node _T_161 = add(writeBuffers.address, UInt<4>("h8")) @[mainMemory.scala 133:103]
        node _T_162 = tail(_T_161, 1) @[mainMemory.scala 133:103]
        write mport MPORT_16 = memory[_T_162], clock
        MPORT_16 <= _T_65
      node _T_163 = bits(_T_69, 0, 0) @[mainMemory.scala 133:59]
      when _T_163 : @[mainMemory.scala 133:67]
        node _T_164 = add(writeBuffers.address, UInt<4>("h9")) @[mainMemory.scala 133:103]
        node _T_165 = tail(_T_164, 1) @[mainMemory.scala 133:103]
        write mport MPORT_17 = memory[_T_165], clock
        MPORT_17 <= _T_68
      node _T_166 = bits(_T_72, 0, 0) @[mainMemory.scala 133:59]
      when _T_166 : @[mainMemory.scala 133:67]
        node _T_167 = add(writeBuffers.address, UInt<4>("ha")) @[mainMemory.scala 133:103]
        node _T_168 = tail(_T_167, 1) @[mainMemory.scala 133:103]
        write mport MPORT_18 = memory[_T_168], clock
        MPORT_18 <= _T_71
      node _T_169 = bits(_T_75, 0, 0) @[mainMemory.scala 133:59]
      when _T_169 : @[mainMemory.scala 133:67]
        node _T_170 = add(writeBuffers.address, UInt<4>("hb")) @[mainMemory.scala 133:103]
        node _T_171 = tail(_T_170, 1) @[mainMemory.scala 133:103]
        write mport MPORT_19 = memory[_T_171], clock
        MPORT_19 <= _T_74
      node _T_172 = bits(_T_78, 0, 0) @[mainMemory.scala 133:59]
      when _T_172 : @[mainMemory.scala 133:67]
        node _T_173 = add(writeBuffers.address, UInt<4>("hc")) @[mainMemory.scala 133:103]
        node _T_174 = tail(_T_173, 1) @[mainMemory.scala 133:103]
        write mport MPORT_20 = memory[_T_174], clock
        MPORT_20 <= _T_77
      node _T_175 = bits(_T_81, 0, 0) @[mainMemory.scala 133:59]
      when _T_175 : @[mainMemory.scala 133:67]
        node _T_176 = add(writeBuffers.address, UInt<4>("hd")) @[mainMemory.scala 133:103]
        node _T_177 = tail(_T_176, 1) @[mainMemory.scala 133:103]
        write mport MPORT_21 = memory[_T_177], clock
        MPORT_21 <= _T_80
      node _T_178 = bits(_T_84, 0, 0) @[mainMemory.scala 133:59]
      when _T_178 : @[mainMemory.scala 133:67]
        node _T_179 = add(writeBuffers.address, UInt<4>("he")) @[mainMemory.scala 133:103]
        node _T_180 = tail(_T_179, 1) @[mainMemory.scala 133:103]
        write mport MPORT_22 = memory[_T_180], clock
        MPORT_22 <= _T_83
      node _T_181 = bits(_T_87, 0, 0) @[mainMemory.scala 133:59]
      when _T_181 : @[mainMemory.scala 133:67]
        node _T_182 = add(writeBuffers.address, UInt<4>("hf")) @[mainMemory.scala 133:103]
        node _T_183 = tail(_T_182, 1) @[mainMemory.scala 133:103]
        write mport MPORT_23 = memory[_T_183], clock
        MPORT_23 <= _T_86
      node _T_184 = bits(_T_90, 0, 0) @[mainMemory.scala 133:59]
      when _T_184 : @[mainMemory.scala 133:67]
        node _T_185 = add(writeBuffers.address, UInt<5>("h10")) @[mainMemory.scala 133:103]
        node _T_186 = tail(_T_185, 1) @[mainMemory.scala 133:103]
        write mport MPORT_24 = memory[_T_186], clock
        MPORT_24 <= _T_89
      node _T_187 = bits(_T_93, 0, 0) @[mainMemory.scala 133:59]
      when _T_187 : @[mainMemory.scala 133:67]
        node _T_188 = add(writeBuffers.address, UInt<5>("h11")) @[mainMemory.scala 133:103]
        node _T_189 = tail(_T_188, 1) @[mainMemory.scala 133:103]
        write mport MPORT_25 = memory[_T_189], clock
        MPORT_25 <= _T_92
      node _T_190 = bits(_T_96, 0, 0) @[mainMemory.scala 133:59]
      when _T_190 : @[mainMemory.scala 133:67]
        node _T_191 = add(writeBuffers.address, UInt<5>("h12")) @[mainMemory.scala 133:103]
        node _T_192 = tail(_T_191, 1) @[mainMemory.scala 133:103]
        write mport MPORT_26 = memory[_T_192], clock
        MPORT_26 <= _T_95
      node _T_193 = bits(_T_99, 0, 0) @[mainMemory.scala 133:59]
      when _T_193 : @[mainMemory.scala 133:67]
        node _T_194 = add(writeBuffers.address, UInt<5>("h13")) @[mainMemory.scala 133:103]
        node _T_195 = tail(_T_194, 1) @[mainMemory.scala 133:103]
        write mport MPORT_27 = memory[_T_195], clock
        MPORT_27 <= _T_98
      node _T_196 = bits(_T_102, 0, 0) @[mainMemory.scala 133:59]
      when _T_196 : @[mainMemory.scala 133:67]
        node _T_197 = add(writeBuffers.address, UInt<5>("h14")) @[mainMemory.scala 133:103]
        node _T_198 = tail(_T_197, 1) @[mainMemory.scala 133:103]
        write mport MPORT_28 = memory[_T_198], clock
        MPORT_28 <= _T_101
      node _T_199 = bits(_T_105, 0, 0) @[mainMemory.scala 133:59]
      when _T_199 : @[mainMemory.scala 133:67]
        node _T_200 = add(writeBuffers.address, UInt<5>("h15")) @[mainMemory.scala 133:103]
        node _T_201 = tail(_T_200, 1) @[mainMemory.scala 133:103]
        write mport MPORT_29 = memory[_T_201], clock
        MPORT_29 <= _T_104
      node _T_202 = bits(_T_108, 0, 0) @[mainMemory.scala 133:59]
      when _T_202 : @[mainMemory.scala 133:67]
        node _T_203 = add(writeBuffers.address, UInt<5>("h16")) @[mainMemory.scala 133:103]
        node _T_204 = tail(_T_203, 1) @[mainMemory.scala 133:103]
        write mport MPORT_30 = memory[_T_204], clock
        MPORT_30 <= _T_107
      node _T_205 = bits(_T_111, 0, 0) @[mainMemory.scala 133:59]
      when _T_205 : @[mainMemory.scala 133:67]
        node _T_206 = add(writeBuffers.address, UInt<5>("h17")) @[mainMemory.scala 133:103]
        node _T_207 = tail(_T_206, 1) @[mainMemory.scala 133:103]
        write mport MPORT_31 = memory[_T_207], clock
        MPORT_31 <= _T_110
      node _T_208 = bits(_T_114, 0, 0) @[mainMemory.scala 133:59]
      when _T_208 : @[mainMemory.scala 133:67]
        node _T_209 = add(writeBuffers.address, UInt<5>("h18")) @[mainMemory.scala 133:103]
        node _T_210 = tail(_T_209, 1) @[mainMemory.scala 133:103]
        write mport MPORT_32 = memory[_T_210], clock
        MPORT_32 <= _T_113
      node _T_211 = bits(_T_117, 0, 0) @[mainMemory.scala 133:59]
      when _T_211 : @[mainMemory.scala 133:67]
        node _T_212 = add(writeBuffers.address, UInt<5>("h19")) @[mainMemory.scala 133:103]
        node _T_213 = tail(_T_212, 1) @[mainMemory.scala 133:103]
        write mport MPORT_33 = memory[_T_213], clock
        MPORT_33 <= _T_116
      node _T_214 = bits(_T_120, 0, 0) @[mainMemory.scala 133:59]
      when _T_214 : @[mainMemory.scala 133:67]
        node _T_215 = add(writeBuffers.address, UInt<5>("h1a")) @[mainMemory.scala 133:103]
        node _T_216 = tail(_T_215, 1) @[mainMemory.scala 133:103]
        write mport MPORT_34 = memory[_T_216], clock
        MPORT_34 <= _T_119
      node _T_217 = bits(_T_123, 0, 0) @[mainMemory.scala 133:59]
      when _T_217 : @[mainMemory.scala 133:67]
        node _T_218 = add(writeBuffers.address, UInt<5>("h1b")) @[mainMemory.scala 133:103]
        node _T_219 = tail(_T_218, 1) @[mainMemory.scala 133:103]
        write mport MPORT_35 = memory[_T_219], clock
        MPORT_35 <= _T_122
      node _T_220 = bits(_T_126, 0, 0) @[mainMemory.scala 133:59]
      when _T_220 : @[mainMemory.scala 133:67]
        node _T_221 = add(writeBuffers.address, UInt<5>("h1c")) @[mainMemory.scala 133:103]
        node _T_222 = tail(_T_221, 1) @[mainMemory.scala 133:103]
        write mport MPORT_36 = memory[_T_222], clock
        MPORT_36 <= _T_125
      node _T_223 = bits(_T_129, 0, 0) @[mainMemory.scala 133:59]
      when _T_223 : @[mainMemory.scala 133:67]
        node _T_224 = add(writeBuffers.address, UInt<5>("h1d")) @[mainMemory.scala 133:103]
        node _T_225 = tail(_T_224, 1) @[mainMemory.scala 133:103]
        write mport MPORT_37 = memory[_T_225], clock
        MPORT_37 <= _T_128
      node _T_226 = bits(_T_132, 0, 0) @[mainMemory.scala 133:59]
      when _T_226 : @[mainMemory.scala 133:67]
        node _T_227 = add(writeBuffers.address, UInt<5>("h1e")) @[mainMemory.scala 133:103]
        node _T_228 = tail(_T_227, 1) @[mainMemory.scala 133:103]
        write mport MPORT_38 = memory[_T_228], clock
        MPORT_38 <= _T_131
      node _T_229 = bits(_T_135, 0, 0) @[mainMemory.scala 133:59]
      when _T_229 : @[mainMemory.scala 133:67]
        node _T_230 = add(writeBuffers.address, UInt<5>("h1f")) @[mainMemory.scala 133:103]
        node _T_231 = tail(_T_230, 1) @[mainMemory.scala 133:103]
        write mport MPORT_39 = memory[_T_231], clock
        MPORT_39 <= _T_134
      node _writeBuffers_address_T_2 = add(writeBuffers.address, UInt<6>("h20")) @[mainMemory.scala 135:50]
      node _writeBuffers_address_T_3 = tail(_writeBuffers_address_T_2, 1) @[mainMemory.scala 135:50]
      writeBuffers.address <= _writeBuffers_address_T_3 @[mainMemory.scala 135:26]
    reg writeFinished : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[mainMemory.scala 139:30]
    node _T_232 = and(writeBuffers.addressValid, writeBuffers.dataLast) @[mainMemory.scala 140:34]
    node _T_233 = and(_T_232, writeBuffers.dataValid) @[mainMemory.scala 140:59]
    when _T_233 : @[mainMemory.scala 140:86]
      writeFinished <= UInt<1>("h1") @[mainMemory.scala 140:102]
    else :
      node _T_234 = and(clients[UInt<1>("h1")].BVALID, clients[UInt<1>("h1")].BREADY) @[mainMemory.scala 141:34]
      when _T_234 : @[mainMemory.scala 141:59]
        writeFinished <= UInt<1>("h0") @[mainMemory.scala 141:75]
    node _clients_1_AWREADY_T = eq(writeBuffers.addressValid, UInt<1>("h0")) @[mainMemory.scala 143:29]
    node _clients_1_AWREADY_T_1 = eq(writeFinished, UInt<1>("h0")) @[mainMemory.scala 143:59]
    node _clients_1_AWREADY_T_2 = and(_clients_1_AWREADY_T, _clients_1_AWREADY_T_1) @[mainMemory.scala 143:56]
    clients[UInt<1>("h1")].AWREADY <= _clients_1_AWREADY_T_2 @[mainMemory.scala 143:25]
    node _clients_1_WREADY_T = eq(writeBuffers.dataValid, UInt<1>("h0")) @[mainMemory.scala 144:28]
    node _clients_1_WREADY_T_1 = or(_clients_1_WREADY_T, writeBuffers.addressValid) @[mainMemory.scala 144:52]
    clients[UInt<1>("h1")].WREADY <= _clients_1_WREADY_T_1 @[mainMemory.scala 144:24]
    clients[UInt<1>("h1")].BVALID <= writeFinished @[mainMemory.scala 145:24]
    clients[UInt<1>("h1")].BRESP <= UInt<1>("h0") @[mainMemory.scala 147:23]
    clients[UInt<1>("h1")].BID <= writeBuffers.id @[mainMemory.scala 148:21]
    reg arbiter : UInt<1>, clock with :
      reset => (reset, UInt<1>("h1")) @[mainMemory.scala 151:24]
    node _T_235 = eq(UInt<1>("h1"), arbiter) @[mainMemory.scala 152:19]
    when _T_235 : @[mainMemory.scala 152:19]
      clients[UInt<1>("h1")].AWREADY <= UInt<1>("h0") @[mainMemory.scala 154:29]
      node _T_236 = eq(servicing[UInt<1>("h1")].valid, UInt<1>("h0")) @[mainMemory.scala 156:10]
      node _T_237 = eq(clients[UInt<1>("h1")].ARVALID, UInt<1>("h0")) @[mainMemory.scala 156:36]
      node _T_238 = and(_T_236, _T_237) @[mainMemory.scala 156:33]
      node _T_239 = and(clients[UInt<1>("h1")].RREADY, clients[UInt<1>("h1")].RVALID) @[mainMemory.scala 157:87]
      node _T_240 = and(_T_239, clients[UInt<1>("h1")].RLAST) @[mainMemory.scala 157:87]
      node _T_241 = or(_T_238, _T_240) @[mainMemory.scala 156:60]
      when _T_241 : @[mainMemory.scala 158:9]
        arbiter <= UInt<1>("h0") @[mainMemory.scala 159:17]
    else :
      node _T_242 = eq(UInt<1>("h0"), arbiter) @[mainMemory.scala 152:19]
      when _T_242 : @[mainMemory.scala 152:19]
        clients[UInt<1>("h1")].ARREADY <= UInt<1>("h0") @[mainMemory.scala 163:29]
        node _T_243 = eq(writeBuffers.addressValid, UInt<1>("h0")) @[mainMemory.scala 165:10]
        node _T_244 = eq(clients[UInt<1>("h1")].AWVALID, UInt<1>("h0")) @[mainMemory.scala 165:40]
        node _T_245 = and(_T_243, _T_244) @[mainMemory.scala 165:37]
        node _T_246 = and(clients[UInt<1>("h1")].WVALID, clients[UInt<1>("h1")].WREADY) @[mainMemory.scala 166:31]
        node _T_247 = or(_T_245, _T_246) @[mainMemory.scala 165:64]
        when _T_247 : @[mainMemory.scala 167:9]
          arbiter <= UInt<1>("h1") @[mainMemory.scala 168:17]
    clients[UInt<1>("h0")].BID <= UInt<1>("h0") @[mainMemory.scala 173:28]
    clients[UInt<1>("h0")].BVALID <= UInt<1>("h0") @[mainMemory.scala 174:31]
    clients[UInt<1>("h0")].BRESP <= UInt<1>("h0") @[mainMemory.scala 175:30]
    clients[UInt<1>("h0")].AWREADY <= UInt<1>("h0") @[mainMemory.scala 176:32]
    clients[UInt<1>("h0")].WREADY <= UInt<1>("h0") @[mainMemory.scala 177:31]
    node _externalProbe_accessLong_T = add(UInt<1>("h0"), externalProbe.offset) @[mainMemory.scala 184:72]
    node _externalProbe_accessLong_T_1 = tail(_externalProbe_accessLong_T, 1) @[mainMemory.scala 184:72]
    wire _externalProbe_accessLong_WIRE : UInt @[mainMemory.scala 184:67]
    _externalProbe_accessLong_WIRE is invalid @[mainMemory.scala 184:67]
    when UInt<1>("h1") : @[mainMemory.scala 184:67]
      _externalProbe_accessLong_WIRE <= _externalProbe_accessLong_T_1 @[mainMemory.scala 184:67]
      node _externalProbe_accessLong_T_2 = or(_externalProbe_accessLong_WIRE, UInt<28>("h0")) @[mainMemory.scala 184:67]
      node _externalProbe_accessLong_T_3 = bits(_externalProbe_accessLong_T_2, 27, 0) @[mainMemory.scala 184:67]
      read mport externalProbe_accessLong_MPORT = memory[_externalProbe_accessLong_T_3], clock @[mainMemory.scala 184:67]
    node _externalProbe_accessLong_T_4 = add(UInt<1>("h1"), externalProbe.offset) @[mainMemory.scala 184:72]
    node _externalProbe_accessLong_T_5 = tail(_externalProbe_accessLong_T_4, 1) @[mainMemory.scala 184:72]
    wire _externalProbe_accessLong_WIRE_1 : UInt @[mainMemory.scala 184:67]
    _externalProbe_accessLong_WIRE_1 is invalid @[mainMemory.scala 184:67]
    when UInt<1>("h1") : @[mainMemory.scala 184:67]
      _externalProbe_accessLong_WIRE_1 <= _externalProbe_accessLong_T_5 @[mainMemory.scala 184:67]
      node _externalProbe_accessLong_T_6 = or(_externalProbe_accessLong_WIRE_1, UInt<28>("h0")) @[mainMemory.scala 184:67]
      node _externalProbe_accessLong_T_7 = bits(_externalProbe_accessLong_T_6, 27, 0) @[mainMemory.scala 184:67]
      read mport externalProbe_accessLong_MPORT_1 = memory[_externalProbe_accessLong_T_7], clock @[mainMemory.scala 184:67]
    node _externalProbe_accessLong_T_8 = add(UInt<2>("h2"), externalProbe.offset) @[mainMemory.scala 184:72]
    node _externalProbe_accessLong_T_9 = tail(_externalProbe_accessLong_T_8, 1) @[mainMemory.scala 184:72]
    wire _externalProbe_accessLong_WIRE_2 : UInt @[mainMemory.scala 184:67]
    _externalProbe_accessLong_WIRE_2 is invalid @[mainMemory.scala 184:67]
    when UInt<1>("h1") : @[mainMemory.scala 184:67]
      _externalProbe_accessLong_WIRE_2 <= _externalProbe_accessLong_T_9 @[mainMemory.scala 184:67]
      node _externalProbe_accessLong_T_10 = or(_externalProbe_accessLong_WIRE_2, UInt<28>("h0")) @[mainMemory.scala 184:67]
      node _externalProbe_accessLong_T_11 = bits(_externalProbe_accessLong_T_10, 27, 0) @[mainMemory.scala 184:67]
      read mport externalProbe_accessLong_MPORT_2 = memory[_externalProbe_accessLong_T_11], clock @[mainMemory.scala 184:67]
    node _externalProbe_accessLong_T_12 = add(UInt<2>("h3"), externalProbe.offset) @[mainMemory.scala 184:72]
    node _externalProbe_accessLong_T_13 = tail(_externalProbe_accessLong_T_12, 1) @[mainMemory.scala 184:72]
    wire _externalProbe_accessLong_WIRE_3 : UInt @[mainMemory.scala 184:67]
    _externalProbe_accessLong_WIRE_3 is invalid @[mainMemory.scala 184:67]
    when UInt<1>("h1") : @[mainMemory.scala 184:67]
      _externalProbe_accessLong_WIRE_3 <= _externalProbe_accessLong_T_13 @[mainMemory.scala 184:67]
      node _externalProbe_accessLong_T_14 = or(_externalProbe_accessLong_WIRE_3, UInt<28>("h0")) @[mainMemory.scala 184:67]
      node _externalProbe_accessLong_T_15 = bits(_externalProbe_accessLong_T_14, 27, 0) @[mainMemory.scala 184:67]
      read mport externalProbe_accessLong_MPORT_3 = memory[_externalProbe_accessLong_T_15], clock @[mainMemory.scala 184:67]
    node _externalProbe_accessLong_T_16 = add(UInt<3>("h4"), externalProbe.offset) @[mainMemory.scala 184:72]
    node _externalProbe_accessLong_T_17 = tail(_externalProbe_accessLong_T_16, 1) @[mainMemory.scala 184:72]
    wire _externalProbe_accessLong_WIRE_4 : UInt @[mainMemory.scala 184:67]
    _externalProbe_accessLong_WIRE_4 is invalid @[mainMemory.scala 184:67]
    when UInt<1>("h1") : @[mainMemory.scala 184:67]
      _externalProbe_accessLong_WIRE_4 <= _externalProbe_accessLong_T_17 @[mainMemory.scala 184:67]
      node _externalProbe_accessLong_T_18 = or(_externalProbe_accessLong_WIRE_4, UInt<28>("h0")) @[mainMemory.scala 184:67]
      node _externalProbe_accessLong_T_19 = bits(_externalProbe_accessLong_T_18, 27, 0) @[mainMemory.scala 184:67]
      read mport externalProbe_accessLong_MPORT_4 = memory[_externalProbe_accessLong_T_19], clock @[mainMemory.scala 184:67]
    node _externalProbe_accessLong_T_20 = add(UInt<3>("h5"), externalProbe.offset) @[mainMemory.scala 184:72]
    node _externalProbe_accessLong_T_21 = tail(_externalProbe_accessLong_T_20, 1) @[mainMemory.scala 184:72]
    wire _externalProbe_accessLong_WIRE_5 : UInt @[mainMemory.scala 184:67]
    _externalProbe_accessLong_WIRE_5 is invalid @[mainMemory.scala 184:67]
    when UInt<1>("h1") : @[mainMemory.scala 184:67]
      _externalProbe_accessLong_WIRE_5 <= _externalProbe_accessLong_T_21 @[mainMemory.scala 184:67]
      node _externalProbe_accessLong_T_22 = or(_externalProbe_accessLong_WIRE_5, UInt<28>("h0")) @[mainMemory.scala 184:67]
      node _externalProbe_accessLong_T_23 = bits(_externalProbe_accessLong_T_22, 27, 0) @[mainMemory.scala 184:67]
      read mport externalProbe_accessLong_MPORT_5 = memory[_externalProbe_accessLong_T_23], clock @[mainMemory.scala 184:67]
    node _externalProbe_accessLong_T_24 = add(UInt<3>("h6"), externalProbe.offset) @[mainMemory.scala 184:72]
    node _externalProbe_accessLong_T_25 = tail(_externalProbe_accessLong_T_24, 1) @[mainMemory.scala 184:72]
    wire _externalProbe_accessLong_WIRE_6 : UInt @[mainMemory.scala 184:67]
    _externalProbe_accessLong_WIRE_6 is invalid @[mainMemory.scala 184:67]
    when UInt<1>("h1") : @[mainMemory.scala 184:67]
      _externalProbe_accessLong_WIRE_6 <= _externalProbe_accessLong_T_25 @[mainMemory.scala 184:67]
      node _externalProbe_accessLong_T_26 = or(_externalProbe_accessLong_WIRE_6, UInt<28>("h0")) @[mainMemory.scala 184:67]
      node _externalProbe_accessLong_T_27 = bits(_externalProbe_accessLong_T_26, 27, 0) @[mainMemory.scala 184:67]
      read mport externalProbe_accessLong_MPORT_6 = memory[_externalProbe_accessLong_T_27], clock @[mainMemory.scala 184:67]
    node _externalProbe_accessLong_T_28 = add(UInt<3>("h7"), externalProbe.offset) @[mainMemory.scala 184:72]
    node _externalProbe_accessLong_T_29 = tail(_externalProbe_accessLong_T_28, 1) @[mainMemory.scala 184:72]
    wire _externalProbe_accessLong_WIRE_7 : UInt @[mainMemory.scala 184:67]
    _externalProbe_accessLong_WIRE_7 is invalid @[mainMemory.scala 184:67]
    when UInt<1>("h1") : @[mainMemory.scala 184:67]
      _externalProbe_accessLong_WIRE_7 <= _externalProbe_accessLong_T_29 @[mainMemory.scala 184:67]
      node _externalProbe_accessLong_T_30 = or(_externalProbe_accessLong_WIRE_7, UInt<28>("h0")) @[mainMemory.scala 184:67]
      node _externalProbe_accessLong_T_31 = bits(_externalProbe_accessLong_T_30, 27, 0) @[mainMemory.scala 184:67]
      read mport externalProbe_accessLong_MPORT_7 = memory[_externalProbe_accessLong_T_31], clock @[mainMemory.scala 184:67]
    node externalProbe_accessLong_lo_lo = cat(externalProbe_accessLong_MPORT_1, externalProbe_accessLong_MPORT) @[Cat.scala 33:92]
    node externalProbe_accessLong_lo_hi = cat(externalProbe_accessLong_MPORT_3, externalProbe_accessLong_MPORT_2) @[Cat.scala 33:92]
    node externalProbe_accessLong_lo = cat(externalProbe_accessLong_lo_hi, externalProbe_accessLong_lo_lo) @[Cat.scala 33:92]
    node externalProbe_accessLong_hi_lo = cat(externalProbe_accessLong_MPORT_5, externalProbe_accessLong_MPORT_4) @[Cat.scala 33:92]
    node externalProbe_accessLong_hi_hi = cat(externalProbe_accessLong_MPORT_7, externalProbe_accessLong_MPORT_6) @[Cat.scala 33:92]
    node externalProbe_accessLong_hi = cat(externalProbe_accessLong_hi_hi, externalProbe_accessLong_hi_lo) @[Cat.scala 33:92]
    node _externalProbe_accessLong_T_32 = cat(externalProbe_accessLong_hi, externalProbe_accessLong_lo) @[Cat.scala 33:92]
    externalProbe.accessLong <= _externalProbe_accessLong_T_32 @[mainMemory.scala 184:28]

  module arbiter :
    input clock : Clock
    input reset : Reset
    output io : { flip AWVALID_0 : UInt<1>, AWREADY_0 : UInt<1>, flip WVALID_0 : UInt<1>, flip WLAST_0 : UInt<1>, WREADY_0 : UInt<1>, flip ARVALID_0 : UInt<1>, ARREADY_0 : UInt<1>, flip AWVALID_1 : UInt<1>, AWREADY_1 : UInt<1>, flip WVALID_1 : UInt<1>, flip WLAST_1 : UInt<1>, WREADY_1 : UInt<1>, flip ARVALID_1 : UInt<1>, ARREADY_1 : UInt<1>, flip AWVALID_2 : UInt<1>, AWREADY_2 : UInt<1>, flip WVALID_2 : UInt<1>, flip WLAST_2 : UInt<1>, WREADY_2 : UInt<1>, flip ARVALID_2 : UInt<1>, ARREADY_2 : UInt<1>, flip AWVALID_3 : UInt<1>, AWREADY_3 : UInt<1>, flip WVALID_3 : UInt<1>, flip WLAST_3 : UInt<1>, WREADY_3 : UInt<1>, flip ARVALID_3 : UInt<1>, ARREADY_3 : UInt<1>, select : UInt<4>, enq_valid : UInt<1>, flip enq_ready : UInt<1>}

    io.AWREADY_0 <= UInt<1>("h0") @[arbitter.scala 74:22]
    io.WREADY_0 <= UInt<1>("h0") @[arbitter.scala 75:21]
    io.ARREADY_0 <= UInt<1>("h0") @[arbitter.scala 76:22]
    io.AWREADY_1 <= UInt<1>("h0") @[arbitter.scala 78:22]
    io.WREADY_1 <= UInt<1>("h0") @[arbitter.scala 79:21]
    io.ARREADY_1 <= UInt<1>("h0") @[arbitter.scala 80:22]
    io.AWREADY_2 <= UInt<1>("h0") @[arbitter.scala 82:22]
    io.WREADY_2 <= UInt<1>("h0") @[arbitter.scala 83:21]
    io.ARREADY_2 <= UInt<1>("h0") @[arbitter.scala 84:22]
    io.AWREADY_3 <= UInt<1>("h0") @[arbitter.scala 86:22]
    io.WREADY_3 <= UInt<1>("h0") @[arbitter.scala 87:21]
    io.ARREADY_3 <= UInt<1>("h0") @[arbitter.scala 88:22]
    io.enq_valid <= UInt<1>("h0") @[arbitter.scala 90:22]
    io.select <= UInt<1>("h0") @[arbitter.scala 91:19]
    reg stateReg : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[arbitter.scala 93:31]
    node _T = eq(UInt<1>("h0"), stateReg) @[arbitter.scala 99:21]
    when _T : @[arbitter.scala 99:21]
      node _T_1 = eq(io.AWVALID_0, UInt<1>("h0")) @[arbitter.scala 101:18]
      node _T_2 = eq(io.ARVALID_0, UInt<1>("h0")) @[arbitter.scala 101:34]
      node _T_3 = and(_T_1, _T_2) @[arbitter.scala 101:32]
      when _T_3 : @[arbitter.scala 101:48]
        stateReg <= UInt<4>("h8") @[arbitter.scala 102:26]
      else :
        when io.ARVALID_0 : @[arbitter.scala 103:37]
          stateReg <= UInt<1>("h1") @[arbitter.scala 104:42]
        else :
          when io.AWVALID_0 : @[arbitter.scala 105:37]
            stateReg <= UInt<3>("h4") @[arbitter.scala 106:42]
      io.enq_valid <= UInt<1>("h0") @[arbitter.scala 108:26]
    else :
      node _T_4 = eq(UInt<1>("h1"), stateReg) @[arbitter.scala 99:21]
      when _T_4 : @[arbitter.scala 99:21]
        when io.enq_ready : @[arbitter.scala 111:31]
          stateReg <= UInt<2>("h2") @[arbitter.scala 112:26]
        else :
          stateReg <= UInt<1>("h1") @[arbitter.scala 114:42]
        io.enq_valid <= UInt<1>("h0") @[arbitter.scala 116:26]
      else :
        node _T_5 = eq(UInt<2>("h2"), stateReg) @[arbitter.scala 99:21]
        when _T_5 : @[arbitter.scala 99:21]
          stateReg <= UInt<4>("h8") @[arbitter.scala 119:22]
          io.ARREADY_0 <= UInt<1>("h1") @[arbitter.scala 120:26]
          io.enq_valid <= UInt<1>("h1") @[arbitter.scala 121:26]
          io.select <= UInt<1>("h0") @[arbitter.scala 122:23]
        else :
          node _T_6 = eq(UInt<3>("h4"), stateReg) @[arbitter.scala 99:21]
          when _T_6 : @[arbitter.scala 99:21]
            when io.enq_ready : @[arbitter.scala 125:31]
              stateReg <= UInt<3>("h5") @[arbitter.scala 126:26]
            else :
              stateReg <= UInt<3>("h4") @[arbitter.scala 128:42]
            io.enq_valid <= UInt<1>("h0") @[arbitter.scala 130:26]
          else :
            node _T_7 = eq(UInt<3>("h5"), stateReg) @[arbitter.scala 99:21]
            when _T_7 : @[arbitter.scala 99:21]
              stateReg <= UInt<3>("h6") @[arbitter.scala 133:22]
              io.AWREADY_0 <= UInt<1>("h1") @[arbitter.scala 134:26]
              io.enq_valid <= UInt<1>("h1") @[arbitter.scala 135:26]
              io.select <= UInt<1>("h1") @[arbitter.scala 136:23]
            else :
              node _T_8 = eq(UInt<3>("h6"), stateReg) @[arbitter.scala 99:21]
              when _T_8 : @[arbitter.scala 99:21]
                node _T_9 = and(io.enq_ready, io.WVALID_0) @[arbitter.scala 139:31]
                when _T_9 : @[arbitter.scala 139:46]
                  stateReg <= UInt<3>("h7") @[arbitter.scala 140:26]
                else :
                  stateReg <= UInt<3>("h6") @[arbitter.scala 142:42]
                io.enq_valid <= UInt<1>("h0") @[arbitter.scala 144:26]
              else :
                node _T_10 = eq(UInt<3>("h7"), stateReg) @[arbitter.scala 99:21]
                when _T_10 : @[arbitter.scala 99:21]
                  node _T_11 = eq(io.WLAST_0, UInt<1>("h0")) @[arbitter.scala 147:18]
                  when _T_11 : @[arbitter.scala 147:30]
                    stateReg <= UInt<3>("h6") @[arbitter.scala 148:26]
                  else :
                    stateReg <= UInt<4>("h8") @[arbitter.scala 150:42]
                  io.WREADY_0 <= UInt<1>("h1") @[arbitter.scala 152:37]
                  io.enq_valid <= UInt<1>("h1") @[arbitter.scala 153:38]
                  io.select <= UInt<2>("h2") @[arbitter.scala 154:35]
                else :
                  node _T_12 = eq(UInt<4>("h8"), stateReg) @[arbitter.scala 99:21]
                  when _T_12 : @[arbitter.scala 99:21]
                    node _T_13 = eq(io.AWVALID_1, UInt<1>("h0")) @[arbitter.scala 158:18]
                    node _T_14 = eq(io.ARVALID_1, UInt<1>("h0")) @[arbitter.scala 158:34]
                    node _T_15 = and(_T_13, _T_14) @[arbitter.scala 158:32]
                    when _T_15 : @[arbitter.scala 158:48]
                      stateReg <= UInt<5>("h10") @[arbitter.scala 159:26]
                    else :
                      when io.ARVALID_1 : @[arbitter.scala 160:37]
                        stateReg <= UInt<4>("h9") @[arbitter.scala 161:42]
                      else :
                        when io.AWVALID_1 : @[arbitter.scala 162:37]
                          stateReg <= UInt<4>("hc") @[arbitter.scala 163:42]
                    io.enq_valid <= UInt<1>("h0") @[arbitter.scala 165:26]
                  else :
                    node _T_16 = eq(UInt<4>("h9"), stateReg) @[arbitter.scala 99:21]
                    when _T_16 : @[arbitter.scala 99:21]
                      when io.enq_ready : @[arbitter.scala 168:31]
                        stateReg <= UInt<4>("ha") @[arbitter.scala 169:26]
                      else :
                        stateReg <= UInt<4>("h9") @[arbitter.scala 171:42]
                      io.enq_valid <= UInt<1>("h0") @[arbitter.scala 173:26]
                    else :
                      node _T_17 = eq(UInt<4>("ha"), stateReg) @[arbitter.scala 99:21]
                      when _T_17 : @[arbitter.scala 99:21]
                        stateReg <= UInt<5>("h10") @[arbitter.scala 176:22]
                        io.ARREADY_1 <= UInt<1>("h1") @[arbitter.scala 177:26]
                        io.enq_valid <= UInt<1>("h1") @[arbitter.scala 178:26]
                        io.select <= UInt<3>("h4") @[arbitter.scala 179:23]
                      else :
                        node _T_18 = eq(UInt<4>("hc"), stateReg) @[arbitter.scala 99:21]
                        when _T_18 : @[arbitter.scala 99:21]
                          when io.enq_ready : @[arbitter.scala 182:31]
                            stateReg <= UInt<4>("hd") @[arbitter.scala 183:26]
                          else :
                            stateReg <= UInt<4>("hc") @[arbitter.scala 185:42]
                          io.enq_valid <= UInt<1>("h0") @[arbitter.scala 187:26]
                        else :
                          node _T_19 = eq(UInt<4>("hd"), stateReg) @[arbitter.scala 99:21]
                          when _T_19 : @[arbitter.scala 99:21]
                            stateReg <= UInt<4>("he") @[arbitter.scala 190:22]
                            io.AWREADY_1 <= UInt<1>("h1") @[arbitter.scala 191:26]
                            io.enq_valid <= UInt<1>("h1") @[arbitter.scala 192:26]
                            io.select <= UInt<3>("h5") @[arbitter.scala 193:23]
                          else :
                            node _T_20 = eq(UInt<4>("he"), stateReg) @[arbitter.scala 99:21]
                            when _T_20 : @[arbitter.scala 99:21]
                              node _T_21 = and(io.enq_ready, io.WVALID_1) @[arbitter.scala 196:31]
                              when _T_21 : @[arbitter.scala 196:46]
                                stateReg <= UInt<4>("hf") @[arbitter.scala 197:26]
                              else :
                                stateReg <= UInt<4>("he") @[arbitter.scala 199:42]
                              io.enq_valid <= UInt<1>("h0") @[arbitter.scala 201:26]
                            else :
                              node _T_22 = eq(UInt<4>("hf"), stateReg) @[arbitter.scala 99:21]
                              when _T_22 : @[arbitter.scala 99:21]
                                node _T_23 = eq(io.WLAST_1, UInt<1>("h0")) @[arbitter.scala 204:18]
                                when _T_23 : @[arbitter.scala 204:30]
                                  stateReg <= UInt<4>("he") @[arbitter.scala 205:26]
                                else :
                                  stateReg <= UInt<5>("h10") @[arbitter.scala 207:42]
                                io.WREADY_1 <= UInt<1>("h1") @[arbitter.scala 209:25]
                                io.enq_valid <= UInt<1>("h1") @[arbitter.scala 210:38]
                                io.select <= UInt<3>("h6") @[arbitter.scala 211:35]
                              else :
                                node _T_24 = eq(UInt<5>("h10"), stateReg) @[arbitter.scala 99:21]
                                when _T_24 : @[arbitter.scala 99:21]
                                  node _T_25 = eq(io.AWVALID_2, UInt<1>("h0")) @[arbitter.scala 214:18]
                                  node _T_26 = eq(io.ARVALID_2, UInt<1>("h0")) @[arbitter.scala 214:34]
                                  node _T_27 = and(_T_25, _T_26) @[arbitter.scala 214:32]
                                  when _T_27 : @[arbitter.scala 214:48]
                                    stateReg <= UInt<5>("h18") @[arbitter.scala 215:26]
                                  else :
                                    when io.ARVALID_2 : @[arbitter.scala 216:37]
                                      stateReg <= UInt<5>("h11") @[arbitter.scala 217:42]
                                    else :
                                      when io.AWVALID_2 : @[arbitter.scala 218:37]
                                        stateReg <= UInt<5>("h14") @[arbitter.scala 219:42]
                                  io.enq_valid <= UInt<1>("h0") @[arbitter.scala 221:26]
                                else :
                                  node _T_28 = eq(UInt<5>("h11"), stateReg) @[arbitter.scala 99:21]
                                  when _T_28 : @[arbitter.scala 99:21]
                                    when io.enq_ready : @[arbitter.scala 224:31]
                                      stateReg <= UInt<5>("h12") @[arbitter.scala 225:26]
                                    else :
                                      stateReg <= UInt<5>("h11") @[arbitter.scala 227:42]
                                    io.enq_valid <= UInt<1>("h0") @[arbitter.scala 229:26]
                                  else :
                                    node _T_29 = eq(UInt<5>("h12"), stateReg) @[arbitter.scala 99:21]
                                    when _T_29 : @[arbitter.scala 99:21]
                                      stateReg <= UInt<5>("h18") @[arbitter.scala 232:22]
                                      io.ARREADY_2 <= UInt<1>("h1") @[arbitter.scala 233:26]
                                      io.enq_valid <= UInt<1>("h1") @[arbitter.scala 234:26]
                                      io.select <= UInt<4>("h8") @[arbitter.scala 235:23]
                                    else :
                                      node _T_30 = eq(UInt<5>("h14"), stateReg) @[arbitter.scala 99:21]
                                      when _T_30 : @[arbitter.scala 99:21]
                                        when io.enq_ready : @[arbitter.scala 238:31]
                                          stateReg <= UInt<5>("h15") @[arbitter.scala 239:26]
                                        else :
                                          stateReg <= UInt<5>("h14") @[arbitter.scala 241:42]
                                        io.enq_valid <= UInt<1>("h0") @[arbitter.scala 243:26]
                                      else :
                                        node _T_31 = eq(UInt<5>("h15"), stateReg) @[arbitter.scala 99:21]
                                        when _T_31 : @[arbitter.scala 99:21]
                                          stateReg <= UInt<5>("h16") @[arbitter.scala 246:22]
                                          io.AWREADY_2 <= UInt<1>("h1") @[arbitter.scala 247:26]
                                          io.enq_valid <= UInt<1>("h1") @[arbitter.scala 248:26]
                                          io.select <= UInt<4>("h9") @[arbitter.scala 249:23]
                                        else :
                                          node _T_32 = eq(UInt<5>("h16"), stateReg) @[arbitter.scala 99:21]
                                          when _T_32 : @[arbitter.scala 99:21]
                                            node _T_33 = and(io.enq_ready, io.WVALID_2) @[arbitter.scala 252:31]
                                            when _T_33 : @[arbitter.scala 252:46]
                                              stateReg <= UInt<5>("h17") @[arbitter.scala 253:26]
                                            else :
                                              stateReg <= UInt<5>("h16") @[arbitter.scala 255:42]
                                            io.enq_valid <= UInt<1>("h0") @[arbitter.scala 257:26]
                                          else :
                                            node _T_34 = eq(UInt<5>("h17"), stateReg) @[arbitter.scala 99:21]
                                            when _T_34 : @[arbitter.scala 99:21]
                                              node _T_35 = eq(io.WLAST_2, UInt<1>("h0")) @[arbitter.scala 260:18]
                                              when _T_35 : @[arbitter.scala 260:30]
                                                stateReg <= UInt<5>("h16") @[arbitter.scala 261:26]
                                              else :
                                                stateReg <= UInt<5>("h18") @[arbitter.scala 263:42]
                                              io.WREADY_2 <= UInt<1>("h1") @[arbitter.scala 265:25]
                                              io.enq_valid <= UInt<1>("h1") @[arbitter.scala 266:38]
                                              io.select <= UInt<4>("ha") @[arbitter.scala 267:35]
                                            else :
                                              node _T_36 = eq(UInt<5>("h18"), stateReg) @[arbitter.scala 99:21]
                                              when _T_36 : @[arbitter.scala 99:21]
                                                node _T_37 = eq(io.AWVALID_3, UInt<1>("h0")) @[arbitter.scala 270:18]
                                                node _T_38 = eq(io.ARVALID_3, UInt<1>("h0")) @[arbitter.scala 270:34]
                                                node _T_39 = and(_T_37, _T_38) @[arbitter.scala 270:32]
                                                when _T_39 : @[arbitter.scala 270:48]
                                                  stateReg <= UInt<1>("h0") @[arbitter.scala 271:26]
                                                else :
                                                  when io.ARVALID_3 : @[arbitter.scala 272:37]
                                                    stateReg <= UInt<5>("h19") @[arbitter.scala 273:42]
                                                  else :
                                                    when io.AWVALID_3 : @[arbitter.scala 274:37]
                                                      stateReg <= UInt<5>("h1c") @[arbitter.scala 275:42]
                                                io.enq_valid <= UInt<1>("h0") @[arbitter.scala 277:26]
                                              else :
                                                node _T_40 = eq(UInt<5>("h19"), stateReg) @[arbitter.scala 99:21]
                                                when _T_40 : @[arbitter.scala 99:21]
                                                  when io.enq_ready : @[arbitter.scala 280:31]
                                                    stateReg <= UInt<5>("h1a") @[arbitter.scala 281:26]
                                                  else :
                                                    stateReg <= UInt<5>("h19") @[arbitter.scala 283:42]
                                                  io.enq_valid <= UInt<1>("h0") @[arbitter.scala 285:26]
                                                else :
                                                  node _T_41 = eq(UInt<5>("h1a"), stateReg) @[arbitter.scala 99:21]
                                                  when _T_41 : @[arbitter.scala 99:21]
                                                    stateReg <= UInt<1>("h0") @[arbitter.scala 288:22]
                                                    io.ARREADY_3 <= UInt<1>("h1") @[arbitter.scala 289:26]
                                                    io.enq_valid <= UInt<1>("h1") @[arbitter.scala 290:26]
                                                    io.select <= UInt<4>("hc") @[arbitter.scala 291:23]
                                                  else :
                                                    node _T_42 = eq(UInt<5>("h1c"), stateReg) @[arbitter.scala 99:21]
                                                    when _T_42 : @[arbitter.scala 99:21]
                                                      when io.enq_ready : @[arbitter.scala 294:31]
                                                        stateReg <= UInt<5>("h1d") @[arbitter.scala 295:26]
                                                      else :
                                                        stateReg <= UInt<5>("h1c") @[arbitter.scala 297:42]
                                                      io.enq_valid <= UInt<1>("h0") @[arbitter.scala 299:26]
                                                    else :
                                                      node _T_43 = eq(UInt<5>("h1d"), stateReg) @[arbitter.scala 99:21]
                                                      when _T_43 : @[arbitter.scala 99:21]
                                                        stateReg <= UInt<5>("h1e") @[arbitter.scala 302:22]
                                                        io.AWREADY_3 <= UInt<1>("h1") @[arbitter.scala 303:26]
                                                        io.enq_valid <= UInt<1>("h1") @[arbitter.scala 304:26]
                                                        io.select <= UInt<4>("hd") @[arbitter.scala 305:23]
                                                      else :
                                                        node _T_44 = eq(UInt<5>("h1e"), stateReg) @[arbitter.scala 99:21]
                                                        when _T_44 : @[arbitter.scala 99:21]
                                                          node _T_45 = and(io.enq_ready, io.WVALID_3) @[arbitter.scala 308:31]
                                                          when _T_45 : @[arbitter.scala 308:46]
                                                            stateReg <= UInt<5>("h1f") @[arbitter.scala 309:26]
                                                          else :
                                                            stateReg <= UInt<5>("h1e") @[arbitter.scala 311:42]
                                                          io.enq_valid <= UInt<1>("h0") @[arbitter.scala 313:26]
                                                        else :
                                                          node _T_46 = eq(UInt<5>("h1f"), stateReg) @[arbitter.scala 99:21]
                                                          when _T_46 : @[arbitter.scala 99:21]
                                                            node _T_47 = eq(io.WLAST_3, UInt<1>("h0")) @[arbitter.scala 316:18]
                                                            when _T_47 : @[arbitter.scala 316:30]
                                                              stateReg <= UInt<5>("h1e") @[arbitter.scala 317:26]
                                                            else :
                                                              stateReg <= UInt<1>("h0") @[arbitter.scala 319:42]
                                                            io.WREADY_3 <= UInt<1>("h1") @[arbitter.scala 321:25]
                                                            io.enq_valid <= UInt<1>("h1") @[arbitter.scala 322:38]
                                                            io.select <= UInt<4>("he") @[arbitter.scala 323:35]

  module ringbuffer :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<70>}, deq : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<70>}}

    reg readPtr : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[ringbuffer.scala 14:24]
    reg writePtr : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[ringbuffer.scala 15:25]
    node _nextRead_T = eq(readPtr, UInt<5>("h1f")) @[ringbuffer.scala 16:29]
    node _nextRead_T_1 = add(readPtr, UInt<1>("h1")) @[ringbuffer.scala 16:55]
    node _nextRead_T_2 = tail(_nextRead_T_1, 1) @[ringbuffer.scala 16:55]
    node nextRead = mux(_nextRead_T, UInt<1>("h0"), _nextRead_T_2) @[ringbuffer.scala 16:21]
    node _nextWrite_T = eq(writePtr, UInt<5>("h1f")) @[ringbuffer.scala 17:31]
    node _nextWrite_T_1 = add(writePtr, UInt<1>("h1")) @[ringbuffer.scala 17:58]
    node _nextWrite_T_2 = tail(_nextWrite_T_1, 1) @[ringbuffer.scala 17:58]
    node nextWrite = mux(_nextWrite_T, UInt<1>("h0"), _nextWrite_T_2) @[ringbuffer.scala 17:22]
    cmem memReg : UInt<70> [32] @[ringbuffer.scala 19:20]
    reg fullReg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[ringbuffer.scala 22:24]
    reg emptyReg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h1")) @[ringbuffer.scala 23:25]
    wire incrRead : UInt<1>
    incrRead <= UInt<1>("h0")
    wire incrWrite : UInt<1>
    incrWrite <= UInt<1>("h0")
    when incrRead : @[ringbuffer.scala 31:19]
      readPtr <= nextRead @[ringbuffer.scala 32:14]
    when incrWrite : @[ringbuffer.scala 35:20]
      writePtr <= nextWrite @[ringbuffer.scala 36:15]
    node _T = and(io.enq.valid, io.enq.ready) @[ringbuffer.scala 39:23]
    node _T_1 = and(_T, io.deq.valid) @[ringbuffer.scala 39:39]
    node _T_2 = and(_T_1, io.deq.ready) @[ringbuffer.scala 39:55]
    when _T_2 : @[ringbuffer.scala 39:70]
      incrRead <= UInt<1>("h1") @[ringbuffer.scala 40:15]
      incrWrite <= UInt<1>("h1") @[ringbuffer.scala 41:16]
      infer mport MPORT = memReg[writePtr], clock @[ringbuffer.scala 42:13]
      MPORT <= io.enq.bits @[ringbuffer.scala 42:23]
    else :
      node _T_3 = and(io.enq.valid, io.enq.ready) @[ringbuffer.scala 43:29]
      when _T_3 : @[ringbuffer.scala 43:45]
        incrWrite <= UInt<1>("h1") @[ringbuffer.scala 44:16]
        emptyReg <= UInt<1>("h0") @[ringbuffer.scala 45:15]
        node _fullReg_T = eq(nextWrite, readPtr) @[ringbuffer.scala 46:26]
        fullReg <= _fullReg_T @[ringbuffer.scala 46:14]
        infer mport MPORT_1 = memReg[writePtr], clock @[ringbuffer.scala 47:13]
        MPORT_1 <= io.enq.bits @[ringbuffer.scala 47:23]
      else :
        node _T_4 = and(io.deq.valid, io.deq.ready) @[ringbuffer.scala 48:29]
        when _T_4 : @[ringbuffer.scala 48:45]
          incrRead <= UInt<1>("h1") @[ringbuffer.scala 49:15]
          fullReg <= UInt<1>("h0") @[ringbuffer.scala 50:14]
          node _emptyReg_T = eq(nextRead, writePtr) @[ringbuffer.scala 51:26]
          emptyReg <= _emptyReg_T @[ringbuffer.scala 51:15]
    infer mport io_deq_bits_MPORT = memReg[readPtr], clock @[ringbuffer.scala 54:24]
    io.deq.bits <= io_deq_bits_MPORT @[ringbuffer.scala 54:16]
    node _io_enq_ready_T = eq(fullReg, UInt<1>("h0")) @[ringbuffer.scala 55:20]
    io.enq.ready <= _io_enq_ready_T @[ringbuffer.scala 55:17]
    node _io_enq_ready_T_1 = eq(fullReg, UInt<1>("h0")) @[ringbuffer.scala 56:20]
    node _io_enq_ready_T_2 = and(io.deq.ready, io.deq.valid) @[ringbuffer.scala 56:46]
    node _io_enq_ready_T_3 = or(_io_enq_ready_T_1, _io_enq_ready_T_2) @[ringbuffer.scala 56:29]
    io.enq.ready <= _io_enq_ready_T_3 @[ringbuffer.scala 56:17]
    node _io_deq_valid_T = eq(emptyReg, UInt<1>("h0")) @[ringbuffer.scala 57:20]
    io.deq.valid <= _io_deq_valid_T @[ringbuffer.scala 57:17]

  module ccu :
    input clock : Clock
    input reset : Reset
    output deq : { ready : UInt<1>, flip valid : UInt<1>, flip data : UInt<70>}
    output L2 : { AWVALID : UInt<1>, flip AWREADY : UInt<1>, AWID : UInt<2>, AWADDR : UInt<64>, ARVALID : UInt<1>, flip ARREADY : UInt<1>, ARID : UInt<2>, ARADDR : UInt<64>, WVALID : UInt<1>, flip WREADY : UInt<1>, WDATA : UInt<64>, WLAST : UInt<1>, flip RVALID : UInt<1>, RREADY : UInt<1>, flip RID : UInt<2>, flip RDATA : UInt<64>, flip RRESP : UInt<2>, flip RLAST : UInt<1>, flip BVALID : UInt<1>, BREADY : UInt<1>, flip BID : UInt<2>, flip BRESP : UInt<2>}
    output core0 : { ACVALID : UInt<1>, flip ACREADY : UInt<1>, ACADDR : UInt<64>, ACSNOOP : UInt<4>, flip CRVALID : UInt<1>, CRREADY : UInt<1>, flip CRRESP : UInt<5>, flip CDVALID : UInt<1>, CDREADY : UInt<1>, flip CDDATA : UInt<64>, flip CDLAST : UInt<1>, RVALID : UInt<1>, flip RREADY : UInt<1>, RID : UInt<2>, RDATA : UInt<64>, RRESP : UInt<4>, RLAST : UInt<1>, BVALID : UInt<1>, flip BREADY : UInt<1>, BID : UInt<2>, BRESP : UInt<2>}
    output core1 : { ACVALID : UInt<1>, flip ACREADY : UInt<1>, ACADDR : UInt<64>, ACSNOOP : UInt<4>, flip CRVALID : UInt<1>, CRREADY : UInt<1>, flip CRRESP : UInt<5>, flip CDVALID : UInt<1>, CDREADY : UInt<1>, flip CDDATA : UInt<64>, flip CDLAST : UInt<1>, RVALID : UInt<1>, flip RREADY : UInt<1>, RID : UInt<2>, RDATA : UInt<64>, RRESP : UInt<4>, RLAST : UInt<1>, BVALID : UInt<1>, flip BREADY : UInt<1>, BID : UInt<2>, BRESP : UInt<2>}
    output core2 : { ACVALID : UInt<1>, flip ACREADY : UInt<1>, ACADDR : UInt<64>, ACSNOOP : UInt<4>, flip CRVALID : UInt<1>, CRREADY : UInt<1>, flip CRRESP : UInt<5>, flip CDVALID : UInt<1>, CDREADY : UInt<1>, flip CDDATA : UInt<64>, flip CDLAST : UInt<1>, RVALID : UInt<1>, flip RREADY : UInt<1>, RID : UInt<2>, RDATA : UInt<64>, RRESP : UInt<4>, RLAST : UInt<1>, BVALID : UInt<1>, flip BREADY : UInt<1>, BID : UInt<2>, BRESP : UInt<2>}
    output core3 : { ACVALID : UInt<1>, flip ACREADY : UInt<1>, ACADDR : UInt<64>, ACSNOOP : UInt<4>, flip CRVALID : UInt<1>, CRREADY : UInt<1>, flip CRRESP : UInt<5>, flip CDVALID : UInt<1>, CDREADY : UInt<1>, flip CDDATA : UInt<64>, flip CDLAST : UInt<1>, RVALID : UInt<1>, flip RREADY : UInt<1>, RID : UInt<2>, RDATA : UInt<64>, RRESP : UInt<4>, RLAST : UInt<1>, BVALID : UInt<1>, flip BREADY : UInt<1>, BID : UInt<2>, BRESP : UInt<2>}

    L2.AWVALID <= UInt<1>("h0") @[ccu.scala 276:20]
    node _L2_AWID_T = bits(deq.data, 69, 68) @[ccu.scala 277:28]
    L2.AWID <= _L2_AWID_T @[ccu.scala 277:17]
    node _L2_AWADDR_T = bits(deq.data, 67, 4) @[ccu.scala 278:30]
    L2.AWADDR <= _L2_AWADDR_T @[ccu.scala 278:19]
    L2.WVALID <= UInt<1>("h0") @[ccu.scala 279:19]
    node _L2_WDATA_T = bits(deq.data, 67, 4) @[ccu.scala 280:29]
    L2.WDATA <= _L2_WDATA_T @[ccu.scala 280:18]
    node _L2_WLAST_T = bits(deq.data, 0, 0) @[ccu.scala 281:29]
    L2.WLAST <= _L2_WLAST_T @[ccu.scala 281:18]
    L2.ARVALID <= UInt<1>("h0") @[ccu.scala 284:20]
    node _L2_ARADDR_T = bits(deq.data, 67, 4) @[ccu.scala 285:30]
    L2.ARADDR <= _L2_ARADDR_T @[ccu.scala 285:19]
    node _L2_ARID_T = bits(deq.data, 69, 68) @[ccu.scala 286:28]
    L2.ARID <= _L2_ARID_T @[ccu.scala 286:17]
    L2.RREADY <= UInt<1>("h0") @[ccu.scala 289:19]
    L2.BREADY <= UInt<1>("h0") @[ccu.scala 292:19]
    core0.BVALID <= UInt<1>("h0") @[ccu.scala 297:22]
    core0.BRESP <= L2.BRESP @[ccu.scala 298:21]
    core0.BID <= UInt<1>("h0") @[ccu.scala 299:19]
    core0.RVALID <= UInt<1>("h0") @[ccu.scala 300:22]
    core0.CDREADY <= UInt<1>("h0") @[ccu.scala 301:23]
    core1.BVALID <= UInt<1>("h0") @[ccu.scala 304:22]
    core1.BRESP <= L2.BRESP @[ccu.scala 305:21]
    core1.BID <= UInt<1>("h1") @[ccu.scala 306:19]
    core1.RVALID <= UInt<1>("h0") @[ccu.scala 307:22]
    core1.CDREADY <= UInt<1>("h0") @[ccu.scala 308:23]
    core2.BVALID <= UInt<1>("h0") @[ccu.scala 310:22]
    core2.BRESP <= L2.BRESP @[ccu.scala 311:21]
    core2.BID <= UInt<2>("h2") @[ccu.scala 312:19]
    core2.RVALID <= UInt<1>("h0") @[ccu.scala 313:22]
    core2.CDREADY <= UInt<1>("h0") @[ccu.scala 314:23]
    core3.BVALID <= UInt<1>("h0") @[ccu.scala 316:22]
    core3.BRESP <= L2.BRESP @[ccu.scala 317:21]
    core3.BID <= UInt<2>("h3") @[ccu.scala 318:19]
    core3.RVALID <= UInt<1>("h0") @[ccu.scala 319:22]
    core3.CDREADY <= UInt<1>("h0") @[ccu.scala 320:23]
    deq.ready <= UInt<1>("h0") @[ccu.scala 322:19]
    wire deq_1 : UInt<1> @[ccu.scala 329:25]
    wire deq_2 : UInt<1> @[ccu.scala 330:25]
    deq_1 <= UInt<1>("h0") @[ccu.scala 331:15]
    deq_2 <= UInt<1>("h0") @[ccu.scala 332:15]
    reg stateReg_1 : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[ccu.scala 333:33]
    reg stateReg_2 : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[ccu.scala 334:33]
    node _T = eq(UInt<1>("h0"), stateReg_1) @[ccu.scala 337:27]
    when _T : @[ccu.scala 337:27]
      node _T_1 = bits(deq.data, 3, 0) @[ccu.scala 339:52]
      node _T_2 = eq(_T_1, UInt<4>("h3")) @[ccu.scala 339:58]
      node _T_3 = and(deq.valid, _T_2) @[ccu.scala 339:40]
      when _T_3 : @[ccu.scala 339:78]
        stateReg_1 <= UInt<1>("h1") @[ccu.scala 340:44]
      else :
        node _T_4 = bits(deq.data, 3, 0) @[ccu.scala 341:58]
        node _T_5 = eq(_T_4, UInt<4>("h8")) @[ccu.scala 341:64]
        node _T_6 = and(deq.valid, _T_5) @[ccu.scala 341:46]
        when _T_6 : @[ccu.scala 341:84]
          stateReg_1 <= UInt<3>("h7") @[ccu.scala 342:44]
        else :
          stateReg_1 <= UInt<1>("h0") @[ccu.scala 344:44]
    else :
      node _T_7 = eq(UInt<1>("h1"), stateReg_1) @[ccu.scala 337:27]
      when _T_7 : @[ccu.scala 337:27]
        when L2.AWREADY : @[ccu.scala 348:41]
          stateReg_1 <= UInt<2>("h2") @[ccu.scala 349:44]
        else :
          stateReg_1 <= UInt<1>("h1") @[ccu.scala 351:44]
        L2.AWVALID <= UInt<1>("h1") @[ccu.scala 353:36]
      else :
        node _T_8 = eq(UInt<2>("h2"), stateReg_1) @[ccu.scala 337:27]
        when _T_8 : @[ccu.scala 337:27]
          stateReg_1 <= UInt<2>("h3") @[ccu.scala 356:36]
          deq_1 <= UInt<1>("h1") @[ccu.scala 357:31]
        else :
          node _T_9 = eq(UInt<2>("h3"), stateReg_1) @[ccu.scala 337:27]
          when _T_9 : @[ccu.scala 337:27]
            when deq.valid : @[ccu.scala 360:40]
              stateReg_1 <= UInt<3>("h4") @[ccu.scala 361:44]
            else :
              stateReg_1 <= UInt<2>("h3") @[ccu.scala 363:44]
          else :
            node _T_10 = eq(UInt<3>("h4"), stateReg_1) @[ccu.scala 337:27]
            when _T_10 : @[ccu.scala 337:27]
              when L2.WREADY : @[ccu.scala 367:40]
                stateReg_1 <= UInt<3>("h5") @[ccu.scala 368:44]
              else :
                stateReg_1 <= UInt<3>("h4") @[ccu.scala 370:44]
              L2.WVALID <= UInt<1>("h1") @[ccu.scala 372:35]
            else :
              node _T_11 = eq(UInt<3>("h5"), stateReg_1) @[ccu.scala 337:27]
              when _T_11 : @[ccu.scala 337:27]
                node _T_12 = bits(deq.data, 0, 0) @[ccu.scala 375:38]
                when _T_12 : @[ccu.scala 375:42]
                  stateReg_1 <= UInt<3>("h6") @[ccu.scala 376:44]
                else :
                  stateReg_1 <= UInt<2>("h3") @[ccu.scala 378:44]
                deq_1 <= UInt<1>("h1") @[ccu.scala 380:31]
              else :
                node _T_13 = eq(UInt<3>("h6"), stateReg_1) @[ccu.scala 337:27]
                when _T_13 : @[ccu.scala 337:27]
                  node _T_14 = eq(stateReg_2, UInt<3>("h0")) @[ccu.scala 383:41]
                  when _T_14 : @[ccu.scala 383:59]
                    stateReg_1 <= UInt<1>("h0") @[ccu.scala 384:44]
                  else :
                    stateReg_1 <= UInt<3>("h6") @[ccu.scala 386:44]
                else :
                  node _T_15 = eq(UInt<3>("h7"), stateReg_1) @[ccu.scala 337:27]
                  when _T_15 : @[ccu.scala 337:27]
                    node _T_16 = eq(stateReg_2, UInt<3>("h0")) @[ccu.scala 390:41]
                    when _T_16 : @[ccu.scala 390:59]
                      stateReg_1 <= UInt<1>("h0") @[ccu.scala 391:44]
                    else :
                      stateReg_1 <= UInt<3>("h7") @[ccu.scala 393:44]
    node _T_17 = eq(UInt<1>("h0"), stateReg_2) @[ccu.scala 399:23]
    when _T_17 : @[ccu.scala 399:23]
      node _T_18 = eq(stateReg_1, UInt<3>("h6")) @[ccu.scala 401:41]
      when _T_18 : @[ccu.scala 401:59]
        stateReg_2 <= UInt<1>("h1") @[ccu.scala 402:44]
      else :
        node _T_19 = eq(stateReg_1, UInt<3>("h7")) @[ccu.scala 403:47]
        when _T_19 : @[ccu.scala 403:65]
          stateReg_2 <= UInt<3>("h6") @[ccu.scala 404:44]
        else :
          stateReg_2 <= UInt<1>("h0") @[ccu.scala 406:44]
    else :
      node _T_20 = eq(UInt<1>("h1"), stateReg_2) @[ccu.scala 399:23]
      when _T_20 : @[ccu.scala 399:23]
        node _T_21 = eq(L2.BVALID, UInt<1>("h0")) @[ccu.scala 410:30]
        when _T_21 : @[ccu.scala 410:41]
          stateReg_2 <= UInt<1>("h1") @[ccu.scala 411:44]
        else :
          node _T_22 = eq(L2.BID, UInt<2>("h0")) @[ccu.scala 412:43]
          when _T_22 : @[ccu.scala 412:60]
            stateReg_2 <= UInt<2>("h2") @[ccu.scala 413:44]
          else :
            node _T_23 = eq(L2.BID, UInt<2>("h1")) @[ccu.scala 414:43]
            when _T_23 : @[ccu.scala 414:60]
              stateReg_2 <= UInt<2>("h3") @[ccu.scala 415:44]
            else :
              node _T_24 = eq(L2.BID, UInt<2>("h2")) @[ccu.scala 416:43]
              when _T_24 : @[ccu.scala 416:60]
                stateReg_2 <= UInt<3>("h4") @[ccu.scala 417:44]
              else :
                stateReg_2 <= UInt<3>("h5") @[ccu.scala 419:44]
        L2.BREADY <= UInt<1>("h1") @[ccu.scala 421:35]
      else :
        node _T_25 = eq(UInt<2>("h2"), stateReg_2) @[ccu.scala 399:23]
        when _T_25 : @[ccu.scala 399:23]
          when core0.BREADY : @[ccu.scala 424:43]
            stateReg_2 <= UInt<1>("h0") @[ccu.scala 425:44]
          else :
            stateReg_2 <= UInt<2>("h2") @[ccu.scala 427:44]
          core0.BVALID <= UInt<1>("h1") @[ccu.scala 429:38]
        else :
          node _T_26 = eq(UInt<2>("h3"), stateReg_2) @[ccu.scala 399:23]
          when _T_26 : @[ccu.scala 399:23]
            when core1.BREADY : @[ccu.scala 432:43]
              stateReg_2 <= UInt<1>("h0") @[ccu.scala 433:44]
            else :
              stateReg_2 <= UInt<2>("h3") @[ccu.scala 435:44]
            core1.BVALID <= UInt<1>("h1") @[ccu.scala 437:38]
          else :
            node _T_27 = eq(UInt<3>("h4"), stateReg_2) @[ccu.scala 399:23]
            when _T_27 : @[ccu.scala 399:23]
              when core2.BREADY : @[ccu.scala 440:43]
                stateReg_2 <= UInt<1>("h0") @[ccu.scala 441:44]
              else :
                stateReg_2 <= UInt<3>("h4") @[ccu.scala 443:44]
              core2.BVALID <= UInt<1>("h1") @[ccu.scala 445:38]
            else :
              node _T_28 = eq(UInt<3>("h5"), stateReg_2) @[ccu.scala 399:23]
              when _T_28 : @[ccu.scala 399:23]
                when core3.BREADY : @[ccu.scala 448:43]
                  stateReg_2 <= UInt<1>("h0") @[ccu.scala 449:44]
                else :
                  stateReg_2 <= UInt<3>("h5") @[ccu.scala 451:44]
                core3.BVALID <= UInt<1>("h1") @[ccu.scala 453:38]
              else :
                node _T_29 = eq(UInt<3>("h6"), stateReg_2) @[ccu.scala 399:23]
                when _T_29 : @[ccu.scala 399:23]
                  node _T_30 = bits(deq.data, 69, 68) @[ccu.scala 456:38]
                  node _T_31 = eq(_T_30, UInt<2>("h0")) @[ccu.scala 456:46]
                  node _T_32 = and(_T_31, core0.BREADY) @[ccu.scala 456:63]
                  when _T_32 : @[ccu.scala 456:79]
                    stateReg_2 <= UInt<3>("h7") @[ccu.scala 457:44]
                  else :
                    node _T_33 = bits(deq.data, 69, 68) @[ccu.scala 458:44]
                    node _T_34 = eq(_T_33, UInt<2>("h1")) @[ccu.scala 458:52]
                    node _T_35 = and(_T_34, core1.BREADY) @[ccu.scala 458:69]
                    when _T_35 : @[ccu.scala 458:85]
                      stateReg_2 <= UInt<3>("h7") @[ccu.scala 459:44]
                    else :
                      node _T_36 = bits(deq.data, 69, 68) @[ccu.scala 460:44]
                      node _T_37 = eq(_T_36, UInt<2>("h2")) @[ccu.scala 460:52]
                      node _T_38 = and(_T_37, core2.BREADY) @[ccu.scala 460:69]
                      when _T_38 : @[ccu.scala 460:85]
                        stateReg_2 <= UInt<3>("h7") @[ccu.scala 461:44]
                      else :
                        node _T_39 = bits(deq.data, 69, 68) @[ccu.scala 462:44]
                        node _T_40 = eq(_T_39, UInt<2>("h3")) @[ccu.scala 462:52]
                        node _T_41 = and(_T_40, core3.BREADY) @[ccu.scala 462:69]
                        when _T_41 : @[ccu.scala 462:85]
                          stateReg_2 <= UInt<3>("h7") @[ccu.scala 463:44]
                        else :
                          stateReg_2 <= UInt<3>("h6") @[ccu.scala 465:44]
                  node _T_42 = bits(deq.data, 69, 68) @[ccu.scala 468:38]
                  node _T_43 = eq(_T_42, UInt<2>("h0")) @[ccu.scala 468:46]
                  when _T_43 : @[ccu.scala 468:63]
                    core0.BVALID <= UInt<1>("h1") @[ccu.scala 469:46]
                  else :
                    node _T_44 = bits(deq.data, 69, 68) @[ccu.scala 470:44]
                    node _T_45 = eq(_T_44, UInt<2>("h1")) @[ccu.scala 470:52]
                    when _T_45 : @[ccu.scala 470:69]
                      core1.BVALID <= UInt<1>("h1") @[ccu.scala 471:46]
                    else :
                      node _T_46 = bits(deq.data, 69, 68) @[ccu.scala 472:44]
                      node _T_47 = eq(_T_46, UInt<2>("h1")) @[ccu.scala 472:52]
                      when _T_47 : @[ccu.scala 472:69]
                        core2.BVALID <= UInt<1>("h1") @[ccu.scala 473:46]
                      else :
                        core3.BVALID <= UInt<1>("h1") @[ccu.scala 475:46]
                else :
                  node _T_48 = eq(UInt<3>("h7"), stateReg_2) @[ccu.scala 399:23]
                  when _T_48 : @[ccu.scala 399:23]
                    deq_2 <= UInt<1>("h1") @[ccu.scala 479:31]
                    stateReg_2 <= UInt<1>("h0") @[ccu.scala 480:36]
    wire deq_3 : UInt<1> @[ccu.scala 487:25]
    deq_3 <= UInt<1>("h0") @[ccu.scala 488:15]
    reg core_id_pbuf_1 : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[ccu.scala 491:33]
    reg tran_pbuf_1 : UInt<4>, clock with :
      reset => (reset, UInt<4>("h0")) @[ccu.scala 492:30]
    reg addr_pbuf_1 : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[ccu.scala 493:30]
    reg core_id_pbuf_2 : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[ccu.scala 496:33]
    reg tran_pbuf_2 : UInt<4>, clock with :
      reset => (reset, UInt<4>("h0")) @[ccu.scala 497:30]
    reg addr_pbuf_2 : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[ccu.scala 498:30]
    reg crpbuf_2_0 : UInt<5>, clock with :
      reset => (UInt<1>("h0"), crpbuf_2_0) @[ccu.scala 499:25]
    reg crpbuf_2_1 : UInt<5>, clock with :
      reset => (UInt<1>("h0"), crpbuf_2_1) @[ccu.scala 500:25]
    reg crpbuf_2_2 : UInt<5>, clock with :
      reset => (UInt<1>("h0"), crpbuf_2_2) @[ccu.scala 501:25]
    reg crpbuf_2_3 : UInt<5>, clock with :
      reset => (UInt<1>("h0"), crpbuf_2_3) @[ccu.scala 502:25]
    reg core_id_pbuf_3 : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[ccu.scala 506:33]
    reg tran_pbuf_3 : UInt<4>, clock with :
      reset => (reset, UInt<4>("h0")) @[ccu.scala 507:30]
    reg crpbuf_3_0 : UInt<5>, clock with :
      reset => (UInt<1>("h0"), crpbuf_3_0) @[ccu.scala 508:25]
    reg crpbuf_3_1 : UInt<5>, clock with :
      reset => (UInt<1>("h0"), crpbuf_3_1) @[ccu.scala 509:25]
    reg crpbuf_3_2 : UInt<5>, clock with :
      reset => (UInt<1>("h0"), crpbuf_3_2) @[ccu.scala 510:25]
    reg crpbuf_3_3 : UInt<5>, clock with :
      reset => (UInt<1>("h0"), crpbuf_3_3) @[ccu.scala 511:25]
    reg stateReg_3 : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[ccu.scala 515:33]
    reg stateReg_4 : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[ccu.scala 516:29]
    reg stateReg_5 : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[ccu.scala 517:29]
    reg stateReg_6 : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[ccu.scala 518:29]
    reg stateReg_7 : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[ccu.scala 519:29]
    reg stateReg_8 : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[ccu.scala 520:29]
    node _T_49 = eq(UInt<1>("h0"), stateReg_3) @[ccu.scala 524:23]
    when _T_49 : @[ccu.scala 524:23]
      node _T_50 = bits(deq.data, 3, 0) @[ccu.scala 526:53]
      node _T_51 = eq(_T_50, UInt<4>("h1")) @[ccu.scala 526:59]
      node _T_52 = bits(deq.data, 3, 0) @[ccu.scala 526:91]
      node _T_53 = eq(_T_52, UInt<4>("h7")) @[ccu.scala 526:97]
      node _T_54 = or(_T_51, _T_53) @[ccu.scala 526:79]
      node _T_55 = bits(deq.data, 3, 0) @[ccu.scala 526:129]
      node _T_56 = eq(_T_55, UInt<4>("h0")) @[ccu.scala 526:135]
      node _T_57 = or(_T_54, _T_56) @[ccu.scala 526:117]
      node _T_58 = and(deq.valid, _T_57) @[ccu.scala 526:40]
      when _T_58 : @[ccu.scala 526:156]
        stateReg_3 <= UInt<1>("h1") @[ccu.scala 527:44]
      else :
        node _T_59 = bits(deq.data, 3, 0) @[ccu.scala 528:59]
        node _T_60 = eq(_T_59, UInt<4>("h4")) @[ccu.scala 528:65]
        node _T_61 = bits(deq.data, 3, 0) @[ccu.scala 528:97]
        node _T_62 = eq(_T_61, UInt<4>("hb")) @[ccu.scala 528:103]
        node _T_63 = or(_T_60, _T_62) @[ccu.scala 528:85]
        node _T_64 = and(deq.valid, _T_63) @[ccu.scala 528:46]
        when _T_64 : @[ccu.scala 528:124]
          stateReg_3 <= UInt<2>("h2") @[ccu.scala 529:44]
        else :
          stateReg_3 <= UInt<1>("h0") @[ccu.scala 531:44]
    else :
      node _T_65 = eq(UInt<1>("h1"), stateReg_3) @[ccu.scala 524:23]
      when _T_65 : @[ccu.scala 524:23]
        node _T_66 = eq(L2.ARREADY, UInt<1>("h0")) @[ccu.scala 535:30]
        when _T_66 : @[ccu.scala 535:42]
          stateReg_3 <= UInt<1>("h1") @[ccu.scala 536:44]
        else :
          stateReg_3 <= UInt<2>("h2") @[ccu.scala 538:44]
        L2.ARVALID <= UInt<1>("h1") @[ccu.scala 540:36]
      else :
        node _T_67 = eq(UInt<2>("h2"), stateReg_3) @[ccu.scala 524:23]
        when _T_67 : @[ccu.scala 524:23]
          node _core_id_pbuf_1_T = bits(deq.data, 69, 68) @[ccu.scala 543:51]
          core_id_pbuf_1 <= _core_id_pbuf_1_T @[ccu.scala 543:40]
          node _tran_pbuf_1_T = bits(deq.data, 3, 0) @[ccu.scala 544:48]
          tran_pbuf_1 <= _tran_pbuf_1_T @[ccu.scala 544:37]
          node _addr_pbuf_1_T = bits(deq.data, 67, 4) @[ccu.scala 545:48]
          addr_pbuf_1 <= _addr_pbuf_1_T @[ccu.scala 545:37]
          stateReg_3 <= UInt<2>("h3") @[ccu.scala 546:36]
        else :
          node _T_68 = eq(UInt<2>("h3"), stateReg_3) @[ccu.scala 524:23]
          when _T_68 : @[ccu.scala 524:23]
            deq_3 <= UInt<1>("h1") @[ccu.scala 549:31]
            stateReg_3 <= UInt<3>("h4") @[ccu.scala 550:36]
          else :
            node _T_69 = eq(UInt<3>("h4"), stateReg_3) @[ccu.scala 524:23]
            when _T_69 : @[ccu.scala 524:23]
              node _T_70 = eq(stateReg_4, UInt<3>("h0")) @[ccu.scala 553:41]
              node _T_71 = eq(stateReg_5, UInt<3>("h0")) @[ccu.scala 553:73]
              node _T_72 = and(_T_70, _T_71) @[ccu.scala 553:59]
              node _T_73 = eq(stateReg_6, UInt<3>("h0")) @[ccu.scala 553:105]
              node _T_74 = and(_T_72, _T_73) @[ccu.scala 553:91]
              node _T_75 = eq(stateReg_7, UInt<3>("h0")) @[ccu.scala 553:137]
              node _T_76 = and(_T_74, _T_75) @[ccu.scala 553:123]
              when _T_76 : @[ccu.scala 553:155]
                stateReg_3 <= UInt<3>("h5") @[ccu.scala 554:44]
              else :
                stateReg_3 <= UInt<3>("h4") @[ccu.scala 556:44]
            else :
              node _T_77 = eq(UInt<3>("h5"), stateReg_3) @[ccu.scala 524:23]
              when _T_77 : @[ccu.scala 524:23]
                core_id_pbuf_2 <= core_id_pbuf_1 @[ccu.scala 560:40]
                tran_pbuf_2 <= tran_pbuf_1 @[ccu.scala 561:37]
                addr_pbuf_2 <= addr_pbuf_1 @[ccu.scala 562:37]
                stateReg_3 <= UInt<3>("h6") @[ccu.scala 563:36]
              else :
                node _T_78 = eq(UInt<3>("h6"), stateReg_3) @[ccu.scala 524:23]
                when _T_78 : @[ccu.scala 524:23]
                  stateReg_3 <= UInt<1>("h0") @[ccu.scala 566:36]
    node _deq_ready_T = or(deq_1, deq_2) @[ccu.scala 570:28]
    node _deq_ready_T_1 = or(_deq_ready_T, deq_3) @[ccu.scala 570:37]
    deq.ready <= _deq_ready_T_1 @[ccu.scala 570:19]
    core0.ACVALID <= UInt<1>("h0") @[ccu.scala 573:23]
    core0.ACADDR <= addr_pbuf_2 @[ccu.scala 574:22]
    core0.ACSNOOP <= UInt<1>("h0") @[ccu.scala 575:23]
    core0.CRREADY <= UInt<1>("h0") @[ccu.scala 577:23]
    node _T_79 = eq(UInt<1>("h0"), stateReg_4) @[ccu.scala 579:27]
    when _T_79 : @[ccu.scala 579:27]
      node _T_80 = eq(stateReg_3, UInt<3>("h6")) @[ccu.scala 581:42]
      node _T_81 = eq(tran_pbuf_2, UInt<4>("h4")) @[ccu.scala 581:78]
      node _T_82 = eq(tran_pbuf_2, UInt<4>("h0")) @[ccu.scala 581:114]
      node _T_83 = or(_T_81, _T_82) @[ccu.scala 581:98]
      node _T_84 = and(_T_80, _T_83) @[ccu.scala 581:61]
      when _T_84 : @[ccu.scala 581:135]
        stateReg_4 <= UInt<3>("h4") @[ccu.scala 582:44]
      else :
        node _T_85 = eq(stateReg_3, UInt<3>("h6")) @[ccu.scala 583:48]
        node _T_86 = eq(core_id_pbuf_2, UInt<2>("h0")) @[ccu.scala 583:86]
        node _T_87 = and(_T_85, _T_86) @[ccu.scala 583:67]
        when _T_87 : @[ccu.scala 583:104]
          stateReg_4 <= UInt<3>("h4") @[ccu.scala 584:44]
        else :
          node _T_88 = eq(stateReg_3, UInt<3>("h6")) @[ccu.scala 585:48]
          node _T_89 = eq(core_id_pbuf_2, UInt<2>("h0")) @[ccu.scala 585:87]
          node _T_90 = eq(_T_89, UInt<1>("h0")) @[ccu.scala 585:70]
          node _T_91 = and(_T_88, _T_90) @[ccu.scala 585:67]
          when _T_91 : @[ccu.scala 585:105]
            stateReg_4 <= UInt<1>("h1") @[ccu.scala 586:44]
          else :
            stateReg_4 <= UInt<1>("h0") @[ccu.scala 588:44]
      crpbuf_2_0 <= UInt<1>("h0") @[ccu.scala 590:36]
    else :
      node _T_92 = eq(UInt<1>("h1"), stateReg_4) @[ccu.scala 579:27]
      when _T_92 : @[ccu.scala 579:27]
        node _T_93 = eq(core0.ACREADY, UInt<1>("h0")) @[ccu.scala 593:30]
        when _T_93 : @[ccu.scala 593:45]
          stateReg_4 <= UInt<1>("h1") @[ccu.scala 594:44]
        else :
          stateReg_4 <= UInt<2>("h2") @[ccu.scala 596:44]
        core0.ACVALID <= UInt<1>("h1") @[ccu.scala 599:39]
        node _T_94 = eq(tran_pbuf_2, UInt<4>("h1")) @[ccu.scala 600:42]
        when _T_94 : @[ccu.scala 600:61]
          core0.ACSNOOP <= UInt<1>("h1") @[ccu.scala 601:47]
        else :
          node _T_95 = eq(tran_pbuf_2, UInt<4>("h7")) @[ccu.scala 602:48]
          when _T_95 : @[ccu.scala 602:67]
            core0.ACSNOOP <= UInt<3>("h7") @[ccu.scala 603:47]
          else :
            node _T_96 = eq(tran_pbuf_2, UInt<4>("hb")) @[ccu.scala 604:48]
            when _T_96 : @[ccu.scala 604:67]
              core0.ACSNOOP <= UInt<4>("h9") @[ccu.scala 605:47]
            else :
              core0.ACSNOOP <= UInt<1>("h0") @[ccu.scala 607:47]
      else :
        node _T_97 = eq(UInt<2>("h2"), stateReg_4) @[ccu.scala 579:27]
        when _T_97 : @[ccu.scala 579:27]
          node _T_98 = eq(core0.CRVALID, UInt<1>("h0")) @[ccu.scala 612:30]
          when _T_98 : @[ccu.scala 612:45]
            stateReg_4 <= UInt<2>("h2") @[ccu.scala 613:44]
          else :
            stateReg_4 <= UInt<2>("h3") @[ccu.scala 615:44]
          crpbuf_2_0 <= core0.CRRESP @[ccu.scala 617:36]
        else :
          node _T_99 = eq(UInt<2>("h3"), stateReg_4) @[ccu.scala 579:27]
          when _T_99 : @[ccu.scala 579:27]
            core0.CRREADY <= UInt<1>("h1") @[ccu.scala 620:39]
            stateReg_4 <= UInt<3>("h4") @[ccu.scala 621:36]
          else :
            node _T_100 = eq(UInt<3>("h4"), stateReg_4) @[ccu.scala 579:27]
            when _T_100 : @[ccu.scala 579:27]
              node _T_101 = eq(stateReg_4, UInt<3>("h4")) @[ccu.scala 624:42]
              node _T_102 = eq(stateReg_5, UInt<3>("h4")) @[ccu.scala 624:76]
              node _T_103 = and(_T_101, _T_102) @[ccu.scala 624:61]
              node _T_104 = eq(stateReg_6, UInt<3>("h4")) @[ccu.scala 624:110]
              node _T_105 = and(_T_103, _T_104) @[ccu.scala 624:95]
              node _T_106 = eq(stateReg_7, UInt<3>("h4")) @[ccu.scala 624:144]
              node _T_107 = and(_T_105, _T_106) @[ccu.scala 624:129]
              when _T_107 : @[ccu.scala 624:163]
                stateReg_4 <= UInt<3>("h5") @[ccu.scala 625:44]
              else :
                stateReg_4 <= UInt<3>("h4") @[ccu.scala 627:44]
            else :
              node _T_108 = eq(UInt<3>("h5"), stateReg_4) @[ccu.scala 579:27]
              when _T_108 : @[ccu.scala 579:27]
                node _T_109 = eq(stateReg_8, UInt<3>("h0")) @[ccu.scala 631:41]
                when _T_109 : @[ccu.scala 631:59]
                  stateReg_4 <= UInt<3>("h6") @[ccu.scala 632:44]
                else :
                  stateReg_4 <= UInt<3>("h5") @[ccu.scala 634:44]
              else :
                node _T_110 = eq(UInt<3>("h6"), stateReg_4) @[ccu.scala 579:27]
                when _T_110 : @[ccu.scala 579:27]
                  core_id_pbuf_3 <= core_id_pbuf_2 @[ccu.scala 638:40]
                  tran_pbuf_3 <= tran_pbuf_2 @[ccu.scala 639:37]
                  crpbuf_3_0 <= crpbuf_2_0 @[ccu.scala 640:36]
                  stateReg_4 <= UInt<3>("h7") @[ccu.scala 641:36]
                else :
                  node _T_111 = eq(UInt<3>("h7"), stateReg_4) @[ccu.scala 579:27]
                  when _T_111 : @[ccu.scala 579:27]
                    stateReg_4 <= UInt<1>("h0") @[ccu.scala 644:36]
    core1.ACVALID <= UInt<1>("h0") @[ccu.scala 650:23]
    core1.ACADDR <= addr_pbuf_2 @[ccu.scala 651:22]
    core1.ACSNOOP <= UInt<1>("h0") @[ccu.scala 652:23]
    core1.CRREADY <= UInt<1>("h0") @[ccu.scala 654:23]
    node _T_112 = eq(UInt<1>("h0"), stateReg_5) @[ccu.scala 656:27]
    when _T_112 : @[ccu.scala 656:27]
      node _T_113 = eq(stateReg_3, UInt<3>("h6")) @[ccu.scala 658:42]
      node _T_114 = eq(tran_pbuf_2, UInt<4>("h4")) @[ccu.scala 658:78]
      node _T_115 = eq(tran_pbuf_2, UInt<4>("h0")) @[ccu.scala 658:114]
      node _T_116 = or(_T_114, _T_115) @[ccu.scala 658:98]
      node _T_117 = and(_T_113, _T_116) @[ccu.scala 658:61]
      when _T_117 : @[ccu.scala 658:135]
        stateReg_5 <= UInt<3>("h4") @[ccu.scala 659:44]
      else :
        node _T_118 = eq(stateReg_3, UInt<3>("h6")) @[ccu.scala 660:48]
        node _T_119 = eq(core_id_pbuf_2, UInt<2>("h1")) @[ccu.scala 660:86]
        node _T_120 = and(_T_118, _T_119) @[ccu.scala 660:67]
        when _T_120 : @[ccu.scala 660:104]
          stateReg_5 <= UInt<3>("h4") @[ccu.scala 661:44]
        else :
          node _T_121 = eq(stateReg_3, UInt<3>("h6")) @[ccu.scala 662:48]
          node _T_122 = eq(core_id_pbuf_2, UInt<2>("h1")) @[ccu.scala 662:87]
          node _T_123 = eq(_T_122, UInt<1>("h0")) @[ccu.scala 662:70]
          node _T_124 = and(_T_121, _T_123) @[ccu.scala 662:67]
          when _T_124 : @[ccu.scala 662:105]
            stateReg_5 <= UInt<1>("h1") @[ccu.scala 663:44]
          else :
            stateReg_5 <= UInt<1>("h0") @[ccu.scala 665:44]
      crpbuf_2_1 <= UInt<1>("h0") @[ccu.scala 668:36]
    else :
      node _T_125 = eq(UInt<1>("h1"), stateReg_5) @[ccu.scala 656:27]
      when _T_125 : @[ccu.scala 656:27]
        node _T_126 = eq(core1.ACREADY, UInt<1>("h0")) @[ccu.scala 671:30]
        when _T_126 : @[ccu.scala 671:45]
          stateReg_5 <= UInt<1>("h1") @[ccu.scala 672:44]
        else :
          stateReg_5 <= UInt<2>("h2") @[ccu.scala 674:44]
        core1.ACVALID <= UInt<1>("h1") @[ccu.scala 677:39]
        node _T_127 = eq(tran_pbuf_2, UInt<4>("h1")) @[ccu.scala 678:42]
        when _T_127 : @[ccu.scala 678:61]
          core1.ACSNOOP <= UInt<1>("h1") @[ccu.scala 679:47]
        else :
          node _T_128 = eq(tran_pbuf_2, UInt<4>("h7")) @[ccu.scala 680:48]
          when _T_128 : @[ccu.scala 680:67]
            core1.ACSNOOP <= UInt<3>("h7") @[ccu.scala 681:47]
          else :
            node _T_129 = eq(tran_pbuf_2, UInt<4>("hb")) @[ccu.scala 682:48]
            when _T_129 : @[ccu.scala 682:67]
              core1.ACSNOOP <= UInt<4>("h9") @[ccu.scala 683:47]
            else :
              core1.ACSNOOP <= UInt<1>("h0") @[ccu.scala 685:47]
      else :
        node _T_130 = eq(UInt<2>("h2"), stateReg_5) @[ccu.scala 656:27]
        when _T_130 : @[ccu.scala 656:27]
          node _T_131 = eq(core1.CRVALID, UInt<1>("h0")) @[ccu.scala 690:30]
          when _T_131 : @[ccu.scala 690:45]
            stateReg_5 <= UInt<2>("h2") @[ccu.scala 691:44]
          else :
            stateReg_5 <= UInt<2>("h3") @[ccu.scala 693:44]
          crpbuf_2_1 <= core1.CRRESP @[ccu.scala 695:36]
        else :
          node _T_132 = eq(UInt<2>("h3"), stateReg_5) @[ccu.scala 656:27]
          when _T_132 : @[ccu.scala 656:27]
            core1.CRREADY <= UInt<1>("h1") @[ccu.scala 698:39]
            stateReg_5 <= UInt<3>("h4") @[ccu.scala 699:36]
          else :
            node _T_133 = eq(UInt<3>("h4"), stateReg_5) @[ccu.scala 656:27]
            when _T_133 : @[ccu.scala 656:27]
              node _T_134 = eq(stateReg_4, UInt<3>("h4")) @[ccu.scala 702:42]
              node _T_135 = eq(stateReg_5, UInt<3>("h4")) @[ccu.scala 702:76]
              node _T_136 = and(_T_134, _T_135) @[ccu.scala 702:61]
              node _T_137 = eq(stateReg_6, UInt<3>("h4")) @[ccu.scala 702:110]
              node _T_138 = and(_T_136, _T_137) @[ccu.scala 702:95]
              node _T_139 = eq(stateReg_7, UInt<3>("h4")) @[ccu.scala 702:144]
              node _T_140 = and(_T_138, _T_139) @[ccu.scala 702:129]
              when _T_140 : @[ccu.scala 702:163]
                stateReg_5 <= UInt<3>("h5") @[ccu.scala 703:44]
              else :
                stateReg_5 <= UInt<3>("h4") @[ccu.scala 705:44]
            else :
              node _T_141 = eq(UInt<3>("h5"), stateReg_5) @[ccu.scala 656:27]
              when _T_141 : @[ccu.scala 656:27]
                node _T_142 = eq(stateReg_8, UInt<3>("h0")) @[ccu.scala 709:41]
                when _T_142 : @[ccu.scala 709:59]
                  stateReg_5 <= UInt<3>("h6") @[ccu.scala 710:44]
                else :
                  stateReg_5 <= UInt<3>("h5") @[ccu.scala 712:44]
              else :
                node _T_143 = eq(UInt<3>("h6"), stateReg_5) @[ccu.scala 656:27]
                when _T_143 : @[ccu.scala 656:27]
                  crpbuf_3_1 <= crpbuf_2_1 @[ccu.scala 716:36]
                  stateReg_5 <= UInt<3>("h7") @[ccu.scala 717:36]
                else :
                  node _T_144 = eq(UInt<3>("h7"), stateReg_5) @[ccu.scala 656:27]
                  when _T_144 : @[ccu.scala 656:27]
                    stateReg_5 <= UInt<1>("h0") @[ccu.scala 720:36]
    core2.ACVALID <= UInt<1>("h0") @[ccu.scala 725:23]
    core2.ACADDR <= addr_pbuf_2 @[ccu.scala 726:22]
    core2.ACSNOOP <= UInt<1>("h0") @[ccu.scala 727:23]
    core2.CRREADY <= UInt<1>("h0") @[ccu.scala 729:23]
    node _T_145 = eq(UInt<1>("h0"), stateReg_6) @[ccu.scala 731:27]
    when _T_145 : @[ccu.scala 731:27]
      node _T_146 = eq(stateReg_3, UInt<3>("h6")) @[ccu.scala 733:42]
      node _T_147 = eq(tran_pbuf_2, UInt<4>("h4")) @[ccu.scala 733:78]
      node _T_148 = eq(tran_pbuf_2, UInt<4>("h0")) @[ccu.scala 733:114]
      node _T_149 = or(_T_147, _T_148) @[ccu.scala 733:98]
      node _T_150 = and(_T_146, _T_149) @[ccu.scala 733:61]
      when _T_150 : @[ccu.scala 733:135]
        stateReg_6 <= UInt<3>("h4") @[ccu.scala 734:44]
      else :
        node _T_151 = eq(stateReg_3, UInt<3>("h6")) @[ccu.scala 735:48]
        node _T_152 = eq(core_id_pbuf_2, UInt<2>("h2")) @[ccu.scala 735:86]
        node _T_153 = and(_T_151, _T_152) @[ccu.scala 735:67]
        when _T_153 : @[ccu.scala 735:104]
          stateReg_6 <= UInt<3>("h4") @[ccu.scala 736:44]
        else :
          node _T_154 = eq(stateReg_3, UInt<3>("h6")) @[ccu.scala 737:48]
          node _T_155 = eq(core_id_pbuf_2, UInt<2>("h2")) @[ccu.scala 737:87]
          node _T_156 = eq(_T_155, UInt<1>("h0")) @[ccu.scala 737:70]
          node _T_157 = and(_T_154, _T_156) @[ccu.scala 737:67]
          when _T_157 : @[ccu.scala 737:105]
            stateReg_6 <= UInt<1>("h1") @[ccu.scala 738:44]
          else :
            stateReg_6 <= UInt<1>("h0") @[ccu.scala 740:44]
      crpbuf_2_2 <= UInt<1>("h0") @[ccu.scala 742:36]
    else :
      node _T_158 = eq(UInt<1>("h1"), stateReg_6) @[ccu.scala 731:27]
      when _T_158 : @[ccu.scala 731:27]
        node _T_159 = eq(core2.ACREADY, UInt<1>("h0")) @[ccu.scala 745:30]
        when _T_159 : @[ccu.scala 745:45]
          stateReg_6 <= UInt<1>("h1") @[ccu.scala 746:44]
        else :
          stateReg_6 <= UInt<2>("h2") @[ccu.scala 748:44]
        core2.ACVALID <= UInt<1>("h1") @[ccu.scala 751:39]
        node _T_160 = eq(tran_pbuf_2, UInt<4>("h1")) @[ccu.scala 752:42]
        when _T_160 : @[ccu.scala 752:61]
          core2.ACSNOOP <= UInt<1>("h1") @[ccu.scala 753:47]
        else :
          node _T_161 = eq(tran_pbuf_2, UInt<4>("h7")) @[ccu.scala 754:48]
          when _T_161 : @[ccu.scala 754:67]
            core2.ACSNOOP <= UInt<3>("h7") @[ccu.scala 755:47]
          else :
            node _T_162 = eq(tran_pbuf_2, UInt<4>("hb")) @[ccu.scala 756:48]
            when _T_162 : @[ccu.scala 756:67]
              core2.ACSNOOP <= UInt<4>("h9") @[ccu.scala 757:47]
            else :
              core2.ACSNOOP <= UInt<1>("h0") @[ccu.scala 759:47]
      else :
        node _T_163 = eq(UInt<2>("h2"), stateReg_6) @[ccu.scala 731:27]
        when _T_163 : @[ccu.scala 731:27]
          node _T_164 = eq(core2.CRVALID, UInt<1>("h0")) @[ccu.scala 764:30]
          when _T_164 : @[ccu.scala 764:45]
            stateReg_6 <= UInt<2>("h2") @[ccu.scala 765:44]
          else :
            stateReg_6 <= UInt<2>("h3") @[ccu.scala 767:44]
          crpbuf_2_2 <= core2.CRRESP @[ccu.scala 769:36]
        else :
          node _T_165 = eq(UInt<2>("h3"), stateReg_6) @[ccu.scala 731:27]
          when _T_165 : @[ccu.scala 731:27]
            core2.CRREADY <= UInt<1>("h1") @[ccu.scala 772:39]
            stateReg_6 <= UInt<3>("h4") @[ccu.scala 773:36]
          else :
            node _T_166 = eq(UInt<3>("h4"), stateReg_6) @[ccu.scala 731:27]
            when _T_166 : @[ccu.scala 731:27]
              node _T_167 = eq(stateReg_4, UInt<3>("h4")) @[ccu.scala 776:42]
              node _T_168 = eq(stateReg_5, UInt<3>("h4")) @[ccu.scala 776:76]
              node _T_169 = and(_T_167, _T_168) @[ccu.scala 776:61]
              node _T_170 = eq(stateReg_6, UInt<3>("h4")) @[ccu.scala 776:110]
              node _T_171 = and(_T_169, _T_170) @[ccu.scala 776:95]
              node _T_172 = eq(stateReg_7, UInt<3>("h4")) @[ccu.scala 776:144]
              node _T_173 = and(_T_171, _T_172) @[ccu.scala 776:129]
              when _T_173 : @[ccu.scala 776:163]
                stateReg_6 <= UInt<3>("h5") @[ccu.scala 777:44]
              else :
                stateReg_6 <= UInt<3>("h4") @[ccu.scala 779:44]
            else :
              node _T_174 = eq(UInt<3>("h5"), stateReg_6) @[ccu.scala 731:27]
              when _T_174 : @[ccu.scala 731:27]
                node _T_175 = eq(stateReg_8, UInt<3>("h0")) @[ccu.scala 783:41]
                when _T_175 : @[ccu.scala 783:59]
                  stateReg_6 <= UInt<3>("h6") @[ccu.scala 784:44]
                else :
                  stateReg_6 <= UInt<3>("h5") @[ccu.scala 786:44]
              else :
                node _T_176 = eq(UInt<3>("h6"), stateReg_6) @[ccu.scala 731:27]
                when _T_176 : @[ccu.scala 731:27]
                  crpbuf_3_2 <= crpbuf_2_2 @[ccu.scala 790:36]
                  stateReg_6 <= UInt<3>("h7") @[ccu.scala 791:36]
                else :
                  node _T_177 = eq(UInt<3>("h7"), stateReg_6) @[ccu.scala 731:27]
                  when _T_177 : @[ccu.scala 731:27]
                    stateReg_6 <= UInt<1>("h0") @[ccu.scala 794:36]
    core3.ACVALID <= UInt<1>("h0") @[ccu.scala 800:23]
    core3.ACADDR <= addr_pbuf_2 @[ccu.scala 801:22]
    core3.ACSNOOP <= UInt<1>("h0") @[ccu.scala 802:23]
    core3.CRREADY <= UInt<1>("h0") @[ccu.scala 804:23]
    node _T_178 = eq(UInt<1>("h0"), stateReg_7) @[ccu.scala 806:27]
    when _T_178 : @[ccu.scala 806:27]
      node _T_179 = eq(stateReg_3, UInt<3>("h6")) @[ccu.scala 808:42]
      node _T_180 = eq(tran_pbuf_2, UInt<4>("h4")) @[ccu.scala 808:78]
      node _T_181 = eq(tran_pbuf_2, UInt<4>("h0")) @[ccu.scala 808:114]
      node _T_182 = or(_T_180, _T_181) @[ccu.scala 808:98]
      node _T_183 = and(_T_179, _T_182) @[ccu.scala 808:61]
      when _T_183 : @[ccu.scala 808:135]
        stateReg_7 <= UInt<3>("h4") @[ccu.scala 809:44]
      else :
        node _T_184 = eq(stateReg_3, UInt<3>("h6")) @[ccu.scala 810:48]
        node _T_185 = eq(core_id_pbuf_2, UInt<2>("h3")) @[ccu.scala 810:86]
        node _T_186 = and(_T_184, _T_185) @[ccu.scala 810:67]
        when _T_186 : @[ccu.scala 810:104]
          stateReg_7 <= UInt<3>("h4") @[ccu.scala 811:44]
        else :
          node _T_187 = eq(stateReg_3, UInt<3>("h6")) @[ccu.scala 812:48]
          node _T_188 = eq(core_id_pbuf_2, UInt<2>("h3")) @[ccu.scala 812:87]
          node _T_189 = eq(_T_188, UInt<1>("h0")) @[ccu.scala 812:70]
          node _T_190 = and(_T_187, _T_189) @[ccu.scala 812:67]
          when _T_190 : @[ccu.scala 812:105]
            stateReg_7 <= UInt<1>("h1") @[ccu.scala 813:44]
          else :
            stateReg_7 <= UInt<1>("h0") @[ccu.scala 815:44]
      crpbuf_2_3 <= UInt<1>("h0") @[ccu.scala 817:36]
    else :
      node _T_191 = eq(UInt<1>("h1"), stateReg_7) @[ccu.scala 806:27]
      when _T_191 : @[ccu.scala 806:27]
        node _T_192 = eq(core3.ACREADY, UInt<1>("h0")) @[ccu.scala 820:30]
        when _T_192 : @[ccu.scala 820:45]
          stateReg_7 <= UInt<1>("h1") @[ccu.scala 821:44]
        else :
          stateReg_7 <= UInt<2>("h2") @[ccu.scala 823:44]
        core3.ACVALID <= UInt<1>("h1") @[ccu.scala 826:39]
        node _T_193 = eq(tran_pbuf_2, UInt<4>("h1")) @[ccu.scala 827:42]
        when _T_193 : @[ccu.scala 827:61]
          core3.ACSNOOP <= UInt<1>("h1") @[ccu.scala 828:47]
        else :
          node _T_194 = eq(tran_pbuf_2, UInt<4>("h7")) @[ccu.scala 829:48]
          when _T_194 : @[ccu.scala 829:67]
            core3.ACSNOOP <= UInt<3>("h7") @[ccu.scala 830:47]
          else :
            node _T_195 = eq(tran_pbuf_2, UInt<4>("hb")) @[ccu.scala 831:48]
            when _T_195 : @[ccu.scala 831:67]
              core3.ACSNOOP <= UInt<4>("h9") @[ccu.scala 832:47]
            else :
              core3.ACSNOOP <= UInt<1>("h0") @[ccu.scala 834:47]
      else :
        node _T_196 = eq(UInt<2>("h2"), stateReg_7) @[ccu.scala 806:27]
        when _T_196 : @[ccu.scala 806:27]
          node _T_197 = eq(core3.CRVALID, UInt<1>("h0")) @[ccu.scala 839:30]
          when _T_197 : @[ccu.scala 839:45]
            stateReg_7 <= UInt<2>("h2") @[ccu.scala 840:44]
          else :
            stateReg_7 <= UInt<2>("h3") @[ccu.scala 842:44]
          crpbuf_2_3 <= core3.CRRESP @[ccu.scala 844:36]
        else :
          node _T_198 = eq(UInt<2>("h3"), stateReg_7) @[ccu.scala 806:27]
          when _T_198 : @[ccu.scala 806:27]
            core3.CRREADY <= UInt<1>("h1") @[ccu.scala 847:39]
            stateReg_7 <= UInt<3>("h4") @[ccu.scala 848:36]
          else :
            node _T_199 = eq(UInt<3>("h4"), stateReg_7) @[ccu.scala 806:27]
            when _T_199 : @[ccu.scala 806:27]
              node _T_200 = eq(stateReg_4, UInt<3>("h4")) @[ccu.scala 851:42]
              node _T_201 = eq(stateReg_5, UInt<3>("h4")) @[ccu.scala 851:76]
              node _T_202 = and(_T_200, _T_201) @[ccu.scala 851:61]
              node _T_203 = eq(stateReg_6, UInt<3>("h4")) @[ccu.scala 851:110]
              node _T_204 = and(_T_202, _T_203) @[ccu.scala 851:95]
              node _T_205 = eq(stateReg_7, UInt<3>("h4")) @[ccu.scala 851:144]
              node _T_206 = and(_T_204, _T_205) @[ccu.scala 851:129]
              when _T_206 : @[ccu.scala 851:163]
                stateReg_7 <= UInt<3>("h5") @[ccu.scala 852:44]
              else :
                stateReg_7 <= UInt<3>("h4") @[ccu.scala 854:44]
            else :
              node _T_207 = eq(UInt<3>("h5"), stateReg_7) @[ccu.scala 806:27]
              when _T_207 : @[ccu.scala 806:27]
                node _T_208 = eq(stateReg_8, UInt<3>("h0")) @[ccu.scala 858:41]
                when _T_208 : @[ccu.scala 858:59]
                  stateReg_7 <= UInt<3>("h6") @[ccu.scala 859:44]
                else :
                  stateReg_7 <= UInt<3>("h5") @[ccu.scala 861:44]
              else :
                node _T_209 = eq(UInt<3>("h6"), stateReg_7) @[ccu.scala 806:27]
                when _T_209 : @[ccu.scala 806:27]
                  crpbuf_3_3 <= crpbuf_2_3 @[ccu.scala 865:36]
                  stateReg_7 <= UInt<3>("h7") @[ccu.scala 866:36]
                else :
                  node _T_210 = eq(UInt<3>("h7"), stateReg_7) @[ccu.scala 806:27]
                  when _T_210 : @[ccu.scala 806:27]
                    stateReg_7 <= UInt<1>("h0") @[ccu.scala 869:36]
    reg select_buff : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[ccu.scala 875:38]
    reg beat_buff : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[ccu.scala 876:36]
    reg last_buff : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[ccu.scala 877:36]
    reg rsp_buff : UInt<4>, clock with :
      reset => (reset, UInt<4>("h0")) @[ccu.scala 878:31]
    core0.RVALID <= UInt<1>("h0") @[ccu.scala 879:22]
    core0.RID <= UInt<2>("h0") @[ccu.scala 880:19]
    core0.RDATA <= beat_buff @[ccu.scala 881:21]
    core0.RLAST <= last_buff @[ccu.scala 882:21]
    core0.RRESP <= rsp_buff @[ccu.scala 883:21]
    core1.RVALID <= UInt<1>("h0") @[ccu.scala 885:22]
    core1.RID <= UInt<2>("h1") @[ccu.scala 886:19]
    core1.RDATA <= beat_buff @[ccu.scala 887:21]
    core1.RLAST <= last_buff @[ccu.scala 888:21]
    core1.RRESP <= rsp_buff @[ccu.scala 889:21]
    core2.RVALID <= UInt<1>("h0") @[ccu.scala 891:22]
    core2.RID <= UInt<2>("h2") @[ccu.scala 892:19]
    core2.RDATA <= beat_buff @[ccu.scala 893:21]
    core2.RLAST <= last_buff @[ccu.scala 894:21]
    core2.RRESP <= rsp_buff @[ccu.scala 895:21]
    core3.RVALID <= UInt<1>("h0") @[ccu.scala 897:22]
    core3.RID <= UInt<2>("h3") @[ccu.scala 898:19]
    core3.RDATA <= beat_buff @[ccu.scala 899:21]
    core3.RLAST <= last_buff @[ccu.scala 900:21]
    core3.RRESP <= rsp_buff @[ccu.scala 901:21]
    node _T_211 = eq(UInt<1>("h0"), stateReg_8) @[ccu.scala 902:27]
    when _T_211 : @[ccu.scala 902:27]
      node _T_212 = eq(stateReg_4, UInt<3>("h7")) @[ccu.scala 904:41]
      node _T_213 = eq(tran_pbuf_3, UInt<4>("h1")) @[ccu.scala 904:76]
      node _T_214 = eq(tran_pbuf_3, UInt<4>("h7")) @[ccu.scala 904:112]
      node _T_215 = or(_T_213, _T_214) @[ccu.scala 904:96]
      node _T_216 = eq(tran_pbuf_3, UInt<4>("h0")) @[ccu.scala 904:148]
      node _T_217 = or(_T_215, _T_216) @[ccu.scala 904:132]
      node _T_218 = and(_T_212, _T_217) @[ccu.scala 904:59]
      when _T_218 : @[ccu.scala 904:169]
        stateReg_8 <= UInt<1>("h1") @[ccu.scala 905:44]
      else :
        node _T_219 = eq(stateReg_4, UInt<3>("h4")) @[ccu.scala 906:47]
        node _T_220 = eq(tran_pbuf_3, UInt<4>("h4")) @[ccu.scala 906:82]
        node _T_221 = eq(tran_pbuf_3, UInt<4>("hb")) @[ccu.scala 906:118]
        node _T_222 = or(_T_220, _T_221) @[ccu.scala 906:102]
        node _T_223 = and(_T_219, _T_222) @[ccu.scala 906:65]
        when _T_223 : @[ccu.scala 906:139]
          stateReg_8 <= UInt<3>("h6") @[ccu.scala 907:44]
        else :
          stateReg_8 <= UInt<1>("h0") @[ccu.scala 909:44]
    else :
      node _T_224 = eq(UInt<1>("h1"), stateReg_8) @[ccu.scala 902:27]
      when _T_224 : @[ccu.scala 902:27]
        stateReg_8 <= UInt<2>("h2") @[ccu.scala 913:36]
        node _T_225 = bits(crpbuf_3_0, 3, 3) @[ccu.scala 914:40]
        when _T_225 : @[ccu.scala 914:44]
          select_buff <= UInt<3>("h0") @[ccu.scala 915:45]
        else :
          node _T_226 = bits(crpbuf_3_1, 3, 3) @[ccu.scala 916:46]
          when _T_226 : @[ccu.scala 916:50]
            select_buff <= UInt<3>("h1") @[ccu.scala 917:45]
          else :
            node _T_227 = bits(crpbuf_3_1, 3, 3) @[ccu.scala 918:46]
            when _T_227 : @[ccu.scala 918:50]
              select_buff <= UInt<3>("h2") @[ccu.scala 919:45]
            else :
              node _T_228 = bits(crpbuf_3_1, 3, 3) @[ccu.scala 920:46]
              when _T_228 : @[ccu.scala 920:50]
                select_buff <= UInt<3>("h3") @[ccu.scala 921:45]
              else :
                select_buff <= UInt<3>("h4") @[ccu.scala 923:45]
      else :
        node _T_229 = eq(UInt<2>("h2"), stateReg_8) @[ccu.scala 902:27]
        when _T_229 : @[ccu.scala 902:27]
          node _T_230 = bits(crpbuf_3_0, 0, 0) @[ccu.scala 927:42]
          node _T_231 = eq(_T_230, UInt<1>("h0")) @[ccu.scala 927:31]
          node _T_232 = or(_T_231, core0.CDVALID) @[ccu.scala 927:46]
          node _T_233 = bits(crpbuf_3_1, 0, 0) @[ccu.scala 927:79]
          node _T_234 = eq(_T_233, UInt<1>("h0")) @[ccu.scala 927:68]
          node _T_235 = or(_T_234, core1.CDVALID) @[ccu.scala 927:83]
          node _T_236 = and(_T_232, _T_235) @[ccu.scala 927:64]
          node _T_237 = bits(crpbuf_3_2, 0, 0) @[ccu.scala 927:116]
          node _T_238 = eq(_T_237, UInt<1>("h0")) @[ccu.scala 927:105]
          node _T_239 = or(_T_238, core2.CDVALID) @[ccu.scala 927:120]
          node _T_240 = and(_T_236, _T_239) @[ccu.scala 927:101]
          node _T_241 = bits(crpbuf_3_3, 0, 0) @[ccu.scala 927:153]
          node _T_242 = eq(_T_241, UInt<1>("h0")) @[ccu.scala 927:142]
          node _T_243 = or(_T_242, core3.CDVALID) @[ccu.scala 927:157]
          node _T_244 = and(_T_240, _T_243) @[ccu.scala 927:138]
          node _T_245 = and(_T_244, L2.RVALID) @[ccu.scala 927:175]
          when _T_245 : @[ccu.scala 927:188]
            stateReg_8 <= UInt<2>("h3") @[ccu.scala 928:44]
          else :
            stateReg_8 <= UInt<2>("h2") @[ccu.scala 930:44]
        else :
          node _T_246 = eq(UInt<2>("h3"), stateReg_8) @[ccu.scala 902:27]
          when _T_246 : @[ccu.scala 902:27]
            stateReg_8 <= UInt<3>("h4") @[ccu.scala 935:36]
            node _T_247 = eq(select_buff, UInt<3>("h0")) @[ccu.scala 936:42]
            when _T_247 : @[ccu.scala 936:60]
              beat_buff <= core0.CDDATA @[ccu.scala 937:43]
              last_buff <= core0.CDLAST @[ccu.scala 938:43]
              node _rsp_buff_T = bits(crpbuf_3_0, 3, 3) @[ccu.scala 939:59]
              node _rsp_buff_T_1 = bits(crpbuf_3_0, 2, 2) @[ccu.scala 939:73]
              node rsp_buff_hi = cat(_rsp_buff_T, _rsp_buff_T_1) @[Cat.scala 33:92]
              node _rsp_buff_T_2 = cat(rsp_buff_hi, UInt<2>("h0")) @[Cat.scala 33:92]
              rsp_buff <= _rsp_buff_T_2 @[ccu.scala 939:42]
            else :
              node _T_248 = eq(select_buff, UInt<3>("h1")) @[ccu.scala 940:48]
              when _T_248 : @[ccu.scala 940:66]
                beat_buff <= core1.CDDATA @[ccu.scala 941:43]
                last_buff <= core1.CDLAST @[ccu.scala 942:43]
                node _rsp_buff_T_3 = bits(crpbuf_3_1, 3, 3) @[ccu.scala 943:59]
                node _rsp_buff_T_4 = bits(crpbuf_3_1, 2, 2) @[ccu.scala 943:73]
                node rsp_buff_hi_1 = cat(_rsp_buff_T_3, _rsp_buff_T_4) @[Cat.scala 33:92]
                node _rsp_buff_T_5 = cat(rsp_buff_hi_1, UInt<2>("h0")) @[Cat.scala 33:92]
                rsp_buff <= _rsp_buff_T_5 @[ccu.scala 943:42]
              else :
                node _T_249 = eq(select_buff, UInt<3>("h2")) @[ccu.scala 944:48]
                when _T_249 : @[ccu.scala 944:66]
                  beat_buff <= core2.CDDATA @[ccu.scala 945:43]
                  last_buff <= core2.CDLAST @[ccu.scala 946:43]
                  node _rsp_buff_T_6 = bits(crpbuf_3_2, 3, 3) @[ccu.scala 947:59]
                  node _rsp_buff_T_7 = bits(crpbuf_3_2, 2, 2) @[ccu.scala 947:73]
                  node rsp_buff_hi_2 = cat(_rsp_buff_T_6, _rsp_buff_T_7) @[Cat.scala 33:92]
                  node _rsp_buff_T_8 = cat(rsp_buff_hi_2, UInt<2>("h0")) @[Cat.scala 33:92]
                  rsp_buff <= _rsp_buff_T_8 @[ccu.scala 947:42]
                else :
                  node _T_250 = eq(select_buff, UInt<3>("h3")) @[ccu.scala 948:48]
                  when _T_250 : @[ccu.scala 948:66]
                    beat_buff <= core3.CDDATA @[ccu.scala 949:43]
                    last_buff <= core3.CDLAST @[ccu.scala 950:43]
                    node _rsp_buff_T_9 = bits(crpbuf_3_3, 3, 3) @[ccu.scala 951:59]
                    node _rsp_buff_T_10 = bits(crpbuf_3_3, 2, 2) @[ccu.scala 951:73]
                    node rsp_buff_hi_3 = cat(_rsp_buff_T_9, _rsp_buff_T_10) @[Cat.scala 33:92]
                    node _rsp_buff_T_11 = cat(rsp_buff_hi_3, UInt<2>("h0")) @[Cat.scala 33:92]
                    rsp_buff <= _rsp_buff_T_11 @[ccu.scala 951:42]
                  else :
                    beat_buff <= L2.RDATA @[ccu.scala 953:43]
                    last_buff <= L2.RLAST @[ccu.scala 954:43]
                    node rsp_buff_hi_4 = cat(UInt<1>("h0"), UInt<1>("h0")) @[Cat.scala 33:92]
                    node _rsp_buff_T_12 = cat(rsp_buff_hi_4, L2.RRESP) @[Cat.scala 33:92]
                    rsp_buff <= _rsp_buff_T_12 @[ccu.scala 955:42]
          else :
            node _T_251 = eq(UInt<3>("h4"), stateReg_8) @[ccu.scala 902:27]
            when _T_251 : @[ccu.scala 902:27]
              stateReg_8 <= UInt<3>("h5") @[ccu.scala 960:36]
              node _T_252 = bits(crpbuf_3_0, 0, 0) @[ccu.scala 961:40]
              when _T_252 : @[ccu.scala 961:44]
                core0.CDREADY <= UInt<1>("h1") @[ccu.scala 962:47]
              else :
                core0.CDREADY <= UInt<1>("h0") @[ccu.scala 964:47]
              node _T_253 = bits(crpbuf_3_1, 0, 0) @[ccu.scala 966:40]
              when _T_253 : @[ccu.scala 966:44]
                core1.CDREADY <= UInt<1>("h1") @[ccu.scala 967:47]
              else :
                core1.CDREADY <= UInt<1>("h0") @[ccu.scala 969:47]
              node _T_254 = bits(crpbuf_3_2, 0, 0) @[ccu.scala 971:40]
              when _T_254 : @[ccu.scala 971:44]
                core2.CDREADY <= UInt<1>("h1") @[ccu.scala 972:47]
              else :
                core2.CDREADY <= UInt<1>("h0") @[ccu.scala 974:47]
              node _T_255 = bits(crpbuf_3_3, 0, 0) @[ccu.scala 976:40]
              when _T_255 : @[ccu.scala 976:44]
                core3.CDREADY <= UInt<1>("h1") @[ccu.scala 977:47]
              else :
                core3.CDREADY <= UInt<1>("h0") @[ccu.scala 979:47]
              L2.RREADY <= UInt<1>("h1") @[ccu.scala 981:35]
            else :
              node _T_256 = eq(UInt<3>("h5"), stateReg_8) @[ccu.scala 902:27]
              when _T_256 : @[ccu.scala 902:27]
                node _T_257 = eq(core_id_pbuf_3, UInt<2>("h0")) @[ccu.scala 992:49]
                node _T_258 = and(_T_257, core0.RREADY) @[ccu.scala 992:67]
                node _T_259 = eq(core_id_pbuf_3, UInt<2>("h1")) @[ccu.scala 992:104]
                node _T_260 = and(_T_259, core1.RREADY) @[ccu.scala 992:122]
                node _T_261 = or(_T_258, _T_260) @[ccu.scala 992:84]
                node _T_262 = eq(core_id_pbuf_3, UInt<2>("h2")) @[ccu.scala 992:159]
                node _T_263 = and(_T_262, core2.RREADY) @[ccu.scala 992:177]
                node _T_264 = or(_T_261, _T_263) @[ccu.scala 992:139]
                node _T_265 = eq(core_id_pbuf_3, UInt<2>("h3")) @[ccu.scala 992:214]
                node _T_266 = and(_T_265, core3.RREADY) @[ccu.scala 992:232]
                node _T_267 = or(_T_264, _T_266) @[ccu.scala 992:194]
                node _T_268 = eq(_T_267, UInt<1>("h0")) @[ccu.scala 992:30]
                when _T_268 : @[ccu.scala 992:250]
                  stateReg_8 <= UInt<3>("h5") @[ccu.scala 993:44]
                else :
                  when last_buff : @[ccu.scala 994:46]
                    stateReg_8 <= UInt<1>("h0") @[ccu.scala 995:44]
                  else :
                    stateReg_8 <= UInt<2>("h2") @[ccu.scala 997:44]
                node _T_269 = eq(core_id_pbuf_3, UInt<2>("h0")) @[ccu.scala 1001:45]
                when _T_269 : @[ccu.scala 1001:62]
                  core0.RVALID <= UInt<1>("h1") @[ccu.scala 1002:46]
                else :
                  node _T_270 = eq(core_id_pbuf_3, UInt<2>("h1")) @[ccu.scala 1003:51]
                  when _T_270 : @[ccu.scala 1003:68]
                    core1.RVALID <= UInt<1>("h1") @[ccu.scala 1004:46]
                  else :
                    node _T_271 = eq(core_id_pbuf_3, UInt<2>("h2")) @[ccu.scala 1005:51]
                    when _T_271 : @[ccu.scala 1005:68]
                      core2.RVALID <= UInt<1>("h1") @[ccu.scala 1006:46]
                    else :
                      core3.RVALID <= UInt<1>("h1") @[ccu.scala 1008:46]
              else :
                node _T_272 = eq(UInt<3>("h6"), stateReg_8) @[ccu.scala 902:27]
                when _T_272 : @[ccu.scala 902:27]
                  node _T_273 = eq(core_id_pbuf_3, UInt<2>("h0")) @[ccu.scala 1012:46]
                  node _T_274 = and(_T_273, core0.RREADY) @[ccu.scala 1012:64]
                  when _T_274 : @[ccu.scala 1012:80]
                    stateReg_8 <= UInt<1>("h0") @[ccu.scala 1013:44]
                    core0.RVALID <= UInt<1>("h1") @[ccu.scala 1014:46]
                  else :
                    node _T_275 = eq(core_id_pbuf_3, UInt<2>("h1")) @[ccu.scala 1015:52]
                    node _T_276 = and(_T_275, core1.RREADY) @[ccu.scala 1015:70]
                    when _T_276 : @[ccu.scala 1015:86]
                      stateReg_8 <= UInt<1>("h0") @[ccu.scala 1016:44]
                      core1.RVALID <= UInt<1>("h1") @[ccu.scala 1017:46]
                    else :
                      node _T_277 = eq(core_id_pbuf_3, UInt<2>("h2")) @[ccu.scala 1018:52]
                      node _T_278 = and(_T_277, core2.RREADY) @[ccu.scala 1018:70]
                      when _T_278 : @[ccu.scala 1018:86]
                        stateReg_8 <= UInt<1>("h0") @[ccu.scala 1019:44]
                        core2.RVALID <= UInt<1>("h1") @[ccu.scala 1020:46]
                      else :
                        node _T_279 = eq(core_id_pbuf_3, UInt<2>("h3")) @[ccu.scala 1021:52]
                        node _T_280 = and(_T_279, core3.RREADY) @[ccu.scala 1021:70]
                        when _T_280 : @[ccu.scala 1021:86]
                          stateReg_8 <= UInt<1>("h0") @[ccu.scala 1022:44]
                          core3.RVALID <= UInt<1>("h1") @[ccu.scala 1023:46]
                        else :
                          stateReg_8 <= UInt<3>("h6") @[ccu.scala 1025:44]
                  core0.RRESP <= UInt<4>("h0") @[ccu.scala 1028:37]
                  core1.RRESP <= UInt<4>("h0") @[ccu.scala 1029:37]
                  core2.RRESP <= UInt<4>("h0") @[ccu.scala 1030:37]
                  core3.RRESP <= UInt<4>("h0") @[ccu.scala 1031:37]

  module Interconnect :
    input clock : Clock
    input reset : Reset
    output io : { acePort0 : { flip AWVALID : UInt<1>, AWREADY : UInt<1>, flip AWID : UInt<2>, flip AWADDR : UInt<64>, flip AWSNOOP : UInt<3>, flip AWBAR : UInt<2>, flip WVALID : UInt<1>, WREADY : UInt<1>, flip WDATA : UInt<64>, flip WLAST : UInt<1>, BVALID : UInt<1>, flip BREADY : UInt<1>, BID : UInt<2>, BRESP : UInt<2>, flip ARVALID : UInt<1>, ARREADY : UInt<1>, flip ARID : UInt<2>, flip ARADDR : UInt<64>, flip ARSNOOP : UInt<4>, flip ARBAR : UInt<2>, RVALID : UInt<1>, flip RREADY : UInt<1>, RID : UInt<2>, RDATA : UInt<64>, RRESP : UInt<4>, RLAST : UInt<1>, ACVALID : UInt<1>, flip ACREADY : UInt<1>, ACADDR : UInt<64>, ACSNOOP : UInt<4>, flip CRVALID : UInt<1>, CRREADY : UInt<1>, flip CRRESP : UInt<5>, flip CDVALID : UInt<1>, CDREADY : UInt<1>, flip CDDATA : UInt<64>, flip CDLAST : UInt<1>}, acePort1 : { flip AWVALID : UInt<1>, AWREADY : UInt<1>, flip AWID : UInt<2>, flip AWADDR : UInt<64>, flip AWSNOOP : UInt<3>, flip AWBAR : UInt<2>, flip WVALID : UInt<1>, WREADY : UInt<1>, flip WDATA : UInt<64>, flip WLAST : UInt<1>, BVALID : UInt<1>, flip BREADY : UInt<1>, BID : UInt<2>, BRESP : UInt<2>, flip ARVALID : UInt<1>, ARREADY : UInt<1>, flip ARID : UInt<2>, flip ARADDR : UInt<64>, flip ARSNOOP : UInt<4>, flip ARBAR : UInt<2>, RVALID : UInt<1>, flip RREADY : UInt<1>, RID : UInt<2>, RDATA : UInt<64>, RRESP : UInt<4>, RLAST : UInt<1>, ACVALID : UInt<1>, flip ACREADY : UInt<1>, ACADDR : UInt<64>, ACSNOOP : UInt<4>, flip CRVALID : UInt<1>, CRREADY : UInt<1>, flip CRRESP : UInt<5>, flip CDVALID : UInt<1>, CDREADY : UInt<1>, flip CDDATA : UInt<64>, flip CDLAST : UInt<1>}, acePort2 : { flip AWVALID : UInt<1>, AWREADY : UInt<1>, flip AWID : UInt<2>, flip AWADDR : UInt<64>, flip AWSNOOP : UInt<3>, flip AWBAR : UInt<2>, flip WVALID : UInt<1>, WREADY : UInt<1>, flip WDATA : UInt<64>, flip WLAST : UInt<1>, BVALID : UInt<1>, flip BREADY : UInt<1>, BID : UInt<2>, BRESP : UInt<2>, flip ARVALID : UInt<1>, ARREADY : UInt<1>, flip ARID : UInt<2>, flip ARADDR : UInt<64>, flip ARSNOOP : UInt<4>, flip ARBAR : UInt<2>, RVALID : UInt<1>, flip RREADY : UInt<1>, RID : UInt<2>, RDATA : UInt<64>, RRESP : UInt<4>, RLAST : UInt<1>, ACVALID : UInt<1>, flip ACREADY : UInt<1>, ACADDR : UInt<64>, ACSNOOP : UInt<4>, flip CRVALID : UInt<1>, CRREADY : UInt<1>, flip CRRESP : UInt<5>, flip CDVALID : UInt<1>, CDREADY : UInt<1>, flip CDDATA : UInt<64>, flip CDLAST : UInt<1>}, acePort3 : { flip AWVALID : UInt<1>, AWREADY : UInt<1>, flip AWID : UInt<2>, flip AWADDR : UInt<64>, flip AWSNOOP : UInt<3>, flip AWBAR : UInt<2>, flip WVALID : UInt<1>, WREADY : UInt<1>, flip WDATA : UInt<64>, flip WLAST : UInt<1>, BVALID : UInt<1>, flip BREADY : UInt<1>, BID : UInt<2>, BRESP : UInt<2>, flip ARVALID : UInt<1>, ARREADY : UInt<1>, flip ARID : UInt<2>, flip ARADDR : UInt<64>, flip ARSNOOP : UInt<4>, flip ARBAR : UInt<2>, RVALID : UInt<1>, flip RREADY : UInt<1>, RID : UInt<2>, RDATA : UInt<64>, RRESP : UInt<4>, RLAST : UInt<1>, ACVALID : UInt<1>, flip ACREADY : UInt<1>, ACADDR : UInt<64>, ACSNOOP : UInt<4>, flip CRVALID : UInt<1>, CRREADY : UInt<1>, flip CRRESP : UInt<5>, flip CDVALID : UInt<1>, CDREADY : UInt<1>, flip CDDATA : UInt<64>, flip CDLAST : UInt<1>}, L2 : { AWVALID : UInt<1>, flip AWREADY : UInt<1>, AWID : UInt<2>, AWADDR : UInt<64>, ARVALID : UInt<1>, flip ARREADY : UInt<1>, ARID : UInt<2>, ARADDR : UInt<64>, WVALID : UInt<1>, flip WREADY : UInt<1>, WDATA : UInt<64>, WLAST : UInt<1>, flip RVALID : UInt<1>, RREADY : UInt<1>, flip RID : UInt<2>, flip RDATA : UInt<64>, flip RRESP : UInt<2>, flip RLAST : UInt<1>, flip BVALID : UInt<1>, BREADY : UInt<1>, flip BID : UInt<2>, flip BRESP : UInt<2>}}

    inst Arbiter of arbiter @[Interconnect.scala 90:23]
    Arbiter.clock <= clock
    Arbiter.reset <= reset
    Arbiter.io.AWVALID_0 <= io.acePort0.AWVALID @[Interconnect.scala 93:24]
    io.acePort0.AWREADY <= Arbiter.io.AWREADY_0 @[Interconnect.scala 94:23]
    Arbiter.io.WVALID_0 <= io.acePort0.WVALID @[Interconnect.scala 95:23]
    Arbiter.io.WLAST_0 <= io.acePort0.WLAST @[Interconnect.scala 96:22]
    io.acePort0.WREADY <= Arbiter.io.WREADY_0 @[Interconnect.scala 97:22]
    Arbiter.io.ARVALID_0 <= io.acePort0.ARVALID @[Interconnect.scala 98:24]
    io.acePort0.ARREADY <= Arbiter.io.ARREADY_0 @[Interconnect.scala 99:23]
    Arbiter.io.AWVALID_1 <= io.acePort1.AWVALID @[Interconnect.scala 101:24]
    io.acePort1.AWREADY <= Arbiter.io.AWREADY_1 @[Interconnect.scala 102:23]
    Arbiter.io.WVALID_1 <= io.acePort1.WVALID @[Interconnect.scala 103:23]
    Arbiter.io.WLAST_1 <= io.acePort1.WLAST @[Interconnect.scala 104:22]
    io.acePort1.WREADY <= Arbiter.io.WREADY_1 @[Interconnect.scala 105:22]
    Arbiter.io.ARVALID_1 <= io.acePort1.ARVALID @[Interconnect.scala 106:24]
    io.acePort1.ARREADY <= Arbiter.io.ARREADY_1 @[Interconnect.scala 107:23]
    Arbiter.io.AWVALID_2 <= io.acePort2.AWVALID @[Interconnect.scala 109:24]
    io.acePort2.AWREADY <= Arbiter.io.AWREADY_2 @[Interconnect.scala 110:23]
    Arbiter.io.WVALID_2 <= io.acePort2.WVALID @[Interconnect.scala 111:23]
    Arbiter.io.WLAST_2 <= io.acePort2.WLAST @[Interconnect.scala 112:22]
    io.acePort2.WREADY <= Arbiter.io.WREADY_2 @[Interconnect.scala 113:22]
    Arbiter.io.ARVALID_2 <= io.acePort2.ARVALID @[Interconnect.scala 114:24]
    io.acePort2.ARREADY <= Arbiter.io.ARREADY_2 @[Interconnect.scala 115:23]
    Arbiter.io.AWVALID_3 <= io.acePort3.AWVALID @[Interconnect.scala 117:24]
    io.acePort3.AWREADY <= Arbiter.io.AWREADY_3 @[Interconnect.scala 118:23]
    Arbiter.io.WVALID_3 <= io.acePort3.WVALID @[Interconnect.scala 119:23]
    Arbiter.io.WLAST_3 <= io.acePort3.WLAST @[Interconnect.scala 120:22]
    io.acePort3.WREADY <= Arbiter.io.WREADY_3 @[Interconnect.scala 121:22]
    Arbiter.io.ARVALID_3 <= io.acePort3.ARVALID @[Interconnect.scala 122:24]
    io.acePort3.ARREADY <= Arbiter.io.ARREADY_3 @[Interconnect.scala 123:23]
    inst FIFO of ringbuffer @[Interconnect.scala 127:20]
    FIFO.clock <= clock
    FIFO.reset <= reset
    FIFO.io.enq.valid <= Arbiter.io.enq_valid @[Interconnect.scala 130:21]
    Arbiter.io.enq_ready <= FIFO.io.enq.ready @[Interconnect.scala 131:24]
    node _T = eq(Arbiter.io.select, UInt<1>("h0")) @[Interconnect.scala 144:26]
    when _T : @[Interconnect.scala 144:40]
      node _FIFO_io_enq_bits_T = bits(io.acePort0.ARBAR, 0, 0) @[Interconnect.scala 145:87]
      node _FIFO_io_enq_bits_T_1 = mux(_FIFO_io_enq_bits_T, UInt<4>("h4"), io.acePort0.ARSNOOP) @[Interconnect.scala 145:69]
      node FIFO_io_enq_bits_hi = cat(io.acePort0.ARID, io.acePort0.ARADDR) @[Cat.scala 33:92]
      node _FIFO_io_enq_bits_T_2 = cat(FIFO_io_enq_bits_hi, _FIFO_io_enq_bits_T_1) @[Cat.scala 33:92]
      FIFO.io.enq.bits <= _FIFO_io_enq_bits_T_2 @[Interconnect.scala 145:22]
    else :
      node _T_1 = eq(Arbiter.io.select, UInt<1>("h1")) @[Interconnect.scala 146:32]
      when _T_1 : @[Interconnect.scala 146:46]
        node _FIFO_io_enq_bits_T_3 = bits(io.acePort0.AWBAR, 0, 0) @[Interconnect.scala 147:84]
        node FIFO_io_enq_bits_lo = cat(_FIFO_io_enq_bits_T_3, io.acePort0.AWSNOOP) @[Cat.scala 33:92]
        node FIFO_io_enq_bits_hi_1 = cat(io.acePort0.AWID, io.acePort0.AWADDR) @[Cat.scala 33:92]
        node _FIFO_io_enq_bits_T_4 = cat(FIFO_io_enq_bits_hi_1, FIFO_io_enq_bits_lo) @[Cat.scala 33:92]
        FIFO.io.enq.bits <= _FIFO_io_enq_bits_T_4 @[Interconnect.scala 147:22]
      else :
        node _T_2 = eq(Arbiter.io.select, UInt<2>("h2")) @[Interconnect.scala 148:32]
        when _T_2 : @[Interconnect.scala 148:46]
          node FIFO_io_enq_bits_lo_1 = cat(UInt<3>("h0"), io.acePort0.WLAST) @[Cat.scala 33:92]
          node FIFO_io_enq_bits_hi_2 = cat(UInt<2>("h0"), io.acePort0.WDATA) @[Cat.scala 33:92]
          node _FIFO_io_enq_bits_T_5 = cat(FIFO_io_enq_bits_hi_2, FIFO_io_enq_bits_lo_1) @[Cat.scala 33:92]
          FIFO.io.enq.bits <= _FIFO_io_enq_bits_T_5 @[Interconnect.scala 149:22]
        else :
          node _T_3 = eq(Arbiter.io.select, UInt<3>("h4")) @[Interconnect.scala 150:32]
          when _T_3 : @[Interconnect.scala 150:46]
            node _FIFO_io_enq_bits_T_6 = bits(io.acePort1.ARBAR, 0, 0) @[Interconnect.scala 151:87]
            node _FIFO_io_enq_bits_T_7 = mux(_FIFO_io_enq_bits_T_6, UInt<4>("h4"), io.acePort1.ARSNOOP) @[Interconnect.scala 151:69]
            node FIFO_io_enq_bits_hi_3 = cat(io.acePort1.ARID, io.acePort1.ARADDR) @[Cat.scala 33:92]
            node _FIFO_io_enq_bits_T_8 = cat(FIFO_io_enq_bits_hi_3, _FIFO_io_enq_bits_T_7) @[Cat.scala 33:92]
            FIFO.io.enq.bits <= _FIFO_io_enq_bits_T_8 @[Interconnect.scala 151:22]
          else :
            node _T_4 = eq(Arbiter.io.select, UInt<3>("h5")) @[Interconnect.scala 152:32]
            when _T_4 : @[Interconnect.scala 152:46]
              node _FIFO_io_enq_bits_T_9 = bits(io.acePort1.AWBAR, 0, 0) @[Interconnect.scala 153:84]
              node FIFO_io_enq_bits_lo_2 = cat(_FIFO_io_enq_bits_T_9, io.acePort1.AWSNOOP) @[Cat.scala 33:92]
              node FIFO_io_enq_bits_hi_4 = cat(io.acePort1.AWID, io.acePort1.AWADDR) @[Cat.scala 33:92]
              node _FIFO_io_enq_bits_T_10 = cat(FIFO_io_enq_bits_hi_4, FIFO_io_enq_bits_lo_2) @[Cat.scala 33:92]
              FIFO.io.enq.bits <= _FIFO_io_enq_bits_T_10 @[Interconnect.scala 153:22]
            else :
              node _T_5 = eq(Arbiter.io.select, UInt<3>("h6")) @[Interconnect.scala 154:32]
              when _T_5 : @[Interconnect.scala 154:46]
                node FIFO_io_enq_bits_lo_3 = cat(UInt<3>("h0"), io.acePort1.WLAST) @[Cat.scala 33:92]
                node FIFO_io_enq_bits_hi_5 = cat(UInt<2>("h0"), io.acePort1.WDATA) @[Cat.scala 33:92]
                node _FIFO_io_enq_bits_T_11 = cat(FIFO_io_enq_bits_hi_5, FIFO_io_enq_bits_lo_3) @[Cat.scala 33:92]
                FIFO.io.enq.bits <= _FIFO_io_enq_bits_T_11 @[Interconnect.scala 155:22]
              else :
                node _T_6 = eq(Arbiter.io.select, UInt<4>("h8")) @[Interconnect.scala 156:32]
                when _T_6 : @[Interconnect.scala 156:46]
                  node _FIFO_io_enq_bits_T_12 = bits(io.acePort2.ARBAR, 0, 0) @[Interconnect.scala 157:87]
                  node _FIFO_io_enq_bits_T_13 = mux(_FIFO_io_enq_bits_T_12, UInt<4>("h4"), io.acePort2.ARSNOOP) @[Interconnect.scala 157:69]
                  node FIFO_io_enq_bits_hi_6 = cat(io.acePort2.ARID, io.acePort2.ARADDR) @[Cat.scala 33:92]
                  node _FIFO_io_enq_bits_T_14 = cat(FIFO_io_enq_bits_hi_6, _FIFO_io_enq_bits_T_13) @[Cat.scala 33:92]
                  FIFO.io.enq.bits <= _FIFO_io_enq_bits_T_14 @[Interconnect.scala 157:22]
                else :
                  node _T_7 = eq(Arbiter.io.select, UInt<4>("h9")) @[Interconnect.scala 158:32]
                  when _T_7 : @[Interconnect.scala 158:46]
                    node _FIFO_io_enq_bits_T_15 = bits(io.acePort2.AWBAR, 0, 0) @[Interconnect.scala 159:84]
                    node FIFO_io_enq_bits_lo_4 = cat(_FIFO_io_enq_bits_T_15, io.acePort2.AWSNOOP) @[Cat.scala 33:92]
                    node FIFO_io_enq_bits_hi_7 = cat(io.acePort2.AWID, io.acePort2.AWADDR) @[Cat.scala 33:92]
                    node _FIFO_io_enq_bits_T_16 = cat(FIFO_io_enq_bits_hi_7, FIFO_io_enq_bits_lo_4) @[Cat.scala 33:92]
                    FIFO.io.enq.bits <= _FIFO_io_enq_bits_T_16 @[Interconnect.scala 159:22]
                  else :
                    node _T_8 = eq(Arbiter.io.select, UInt<4>("ha")) @[Interconnect.scala 160:32]
                    when _T_8 : @[Interconnect.scala 160:46]
                      node FIFO_io_enq_bits_lo_5 = cat(UInt<3>("h0"), io.acePort2.WLAST) @[Cat.scala 33:92]
                      node FIFO_io_enq_bits_hi_8 = cat(UInt<2>("h0"), io.acePort2.WDATA) @[Cat.scala 33:92]
                      node _FIFO_io_enq_bits_T_17 = cat(FIFO_io_enq_bits_hi_8, FIFO_io_enq_bits_lo_5) @[Cat.scala 33:92]
                      FIFO.io.enq.bits <= _FIFO_io_enq_bits_T_17 @[Interconnect.scala 161:22]
                    else :
                      node _T_9 = eq(Arbiter.io.select, UInt<4>("hc")) @[Interconnect.scala 162:32]
                      when _T_9 : @[Interconnect.scala 162:46]
                        node _FIFO_io_enq_bits_T_18 = bits(io.acePort3.ARBAR, 0, 0) @[Interconnect.scala 163:87]
                        node _FIFO_io_enq_bits_T_19 = mux(_FIFO_io_enq_bits_T_18, UInt<4>("h4"), io.acePort3.ARSNOOP) @[Interconnect.scala 163:69]
                        node FIFO_io_enq_bits_hi_9 = cat(io.acePort3.ARID, io.acePort3.ARADDR) @[Cat.scala 33:92]
                        node _FIFO_io_enq_bits_T_20 = cat(FIFO_io_enq_bits_hi_9, _FIFO_io_enq_bits_T_19) @[Cat.scala 33:92]
                        FIFO.io.enq.bits <= _FIFO_io_enq_bits_T_20 @[Interconnect.scala 163:22]
                      else :
                        node _T_10 = eq(Arbiter.io.select, UInt<4>("hd")) @[Interconnect.scala 164:32]
                        when _T_10 : @[Interconnect.scala 164:46]
                          node _FIFO_io_enq_bits_T_21 = bits(io.acePort3.AWBAR, 0, 0) @[Interconnect.scala 165:84]
                          node FIFO_io_enq_bits_lo_6 = cat(_FIFO_io_enq_bits_T_21, io.acePort3.AWSNOOP) @[Cat.scala 33:92]
                          node FIFO_io_enq_bits_hi_10 = cat(io.acePort3.AWID, io.acePort3.AWADDR) @[Cat.scala 33:92]
                          node _FIFO_io_enq_bits_T_22 = cat(FIFO_io_enq_bits_hi_10, FIFO_io_enq_bits_lo_6) @[Cat.scala 33:92]
                          FIFO.io.enq.bits <= _FIFO_io_enq_bits_T_22 @[Interconnect.scala 165:22]
                        else :
                          node _T_11 = eq(Arbiter.io.select, UInt<4>("he")) @[Interconnect.scala 166:32]
                          when _T_11 : @[Interconnect.scala 166:46]
                            node FIFO_io_enq_bits_lo_7 = cat(UInt<3>("h0"), io.acePort3.WLAST) @[Cat.scala 33:92]
                            node FIFO_io_enq_bits_hi_11 = cat(UInt<2>("h0"), io.acePort3.WDATA) @[Cat.scala 33:92]
                            node _FIFO_io_enq_bits_T_23 = cat(FIFO_io_enq_bits_hi_11, FIFO_io_enq_bits_lo_7) @[Cat.scala 33:92]
                            FIFO.io.enq.bits <= _FIFO_io_enq_bits_T_23 @[Interconnect.scala 167:22]
                          else :
                            FIFO.io.enq.bits <= UInt<70>("h0") @[Interconnect.scala 169:22]
    inst CCU of ccu @[Interconnect.scala 173:19]
    CCU.clock <= clock
    CCU.reset <= reset
    CCU.deq.valid <= FIFO.io.deq.valid @[Interconnect.scala 176:17]
    CCU.deq.data <= FIFO.io.deq.bits @[Interconnect.scala 177:16]
    FIFO.io.deq.ready <= CCU.deq.ready @[Interconnect.scala 178:21]
    io.L2.AWVALID <= CCU.L2.AWVALID @[Interconnect.scala 182:17]
    CCU.L2.AWREADY <= io.L2.AWREADY @[Interconnect.scala 183:18]
    io.L2.AWID <= CCU.L2.AWID @[Interconnect.scala 184:14]
    io.L2.AWADDR <= CCU.L2.AWADDR @[Interconnect.scala 185:16]
    io.L2.WVALID <= CCU.L2.WVALID @[Interconnect.scala 188:16]
    CCU.L2.WREADY <= io.L2.WREADY @[Interconnect.scala 189:17]
    io.L2.WDATA <= CCU.L2.WDATA @[Interconnect.scala 190:15]
    io.L2.WLAST <= CCU.L2.WLAST @[Interconnect.scala 191:15]
    CCU.L2.BVALID <= io.L2.BVALID @[Interconnect.scala 194:17]
    io.L2.BREADY <= CCU.L2.BREADY @[Interconnect.scala 195:16]
    CCU.L2.BID <= io.L2.BID @[Interconnect.scala 196:14]
    CCU.L2.BRESP <= io.L2.BRESP @[Interconnect.scala 197:16]
    io.L2.ARVALID <= CCU.L2.ARVALID @[Interconnect.scala 200:17]
    CCU.L2.ARREADY <= io.L2.ARREADY @[Interconnect.scala 201:18]
    io.L2.ARID <= CCU.L2.ARID @[Interconnect.scala 202:14]
    io.L2.ARADDR <= CCU.L2.ARADDR @[Interconnect.scala 203:16]
    CCU.L2.RVALID <= io.L2.RVALID @[Interconnect.scala 206:17]
    io.L2.RREADY <= CCU.L2.RREADY @[Interconnect.scala 207:16]
    CCU.L2.RID <= io.L2.RID @[Interconnect.scala 208:14]
    CCU.L2.RRESP <= io.L2.RRESP @[Interconnect.scala 209:16]
    CCU.L2.RDATA <= io.L2.RDATA @[Interconnect.scala 210:16]
    CCU.L2.RLAST <= io.L2.RLAST @[Interconnect.scala 211:16]
    io.acePort0.ACVALID <= CCU.core0.ACVALID @[Interconnect.scala 215:23]
    CCU.core0.ACREADY <= io.acePort0.ACREADY @[Interconnect.scala 216:21]
    io.acePort0.ACADDR <= CCU.core0.ACADDR @[Interconnect.scala 217:22]
    io.acePort0.ACSNOOP <= CCU.core0.ACSNOOP @[Interconnect.scala 218:23]
    CCU.core0.CRVALID <= io.acePort0.CRVALID @[Interconnect.scala 221:21]
    io.acePort0.CRREADY <= CCU.core0.CRREADY @[Interconnect.scala 222:23]
    CCU.core0.CRRESP <= io.acePort0.CRRESP @[Interconnect.scala 223:20]
    CCU.core0.CDVALID <= io.acePort0.CDVALID @[Interconnect.scala 226:21]
    io.acePort0.CDREADY <= CCU.core0.CDREADY @[Interconnect.scala 227:23]
    CCU.core0.CDDATA <= io.acePort0.CDDATA @[Interconnect.scala 228:20]
    CCU.core0.CDLAST <= io.acePort0.CDLAST @[Interconnect.scala 229:20]
    io.acePort0.RVALID <= CCU.core0.RVALID @[Interconnect.scala 232:22]
    CCU.core0.RREADY <= io.acePort0.RREADY @[Interconnect.scala 233:20]
    io.acePort0.RID <= CCU.core0.RID @[Interconnect.scala 234:19]
    io.acePort0.RRESP <= CCU.core0.RRESP @[Interconnect.scala 235:21]
    io.acePort0.RDATA <= CCU.core0.RDATA @[Interconnect.scala 236:21]
    io.acePort0.RLAST <= CCU.core0.RLAST @[Interconnect.scala 237:21]
    io.acePort0.BVALID <= CCU.core0.BVALID @[Interconnect.scala 240:22]
    CCU.core0.BREADY <= io.acePort0.BREADY @[Interconnect.scala 241:20]
    io.acePort0.BID <= CCU.core0.BID @[Interconnect.scala 242:19]
    io.acePort0.BRESP <= CCU.core0.BRESP @[Interconnect.scala 243:21]
    io.acePort1.ACVALID <= CCU.core1.ACVALID @[Interconnect.scala 247:23]
    CCU.core1.ACREADY <= io.acePort1.ACREADY @[Interconnect.scala 248:21]
    io.acePort1.ACADDR <= CCU.core1.ACADDR @[Interconnect.scala 249:22]
    io.acePort1.ACSNOOP <= CCU.core1.ACSNOOP @[Interconnect.scala 250:23]
    CCU.core1.CRVALID <= io.acePort1.CRVALID @[Interconnect.scala 253:21]
    io.acePort1.CRREADY <= CCU.core1.CRREADY @[Interconnect.scala 254:23]
    CCU.core1.CRRESP <= io.acePort1.CRRESP @[Interconnect.scala 255:20]
    CCU.core1.CDVALID <= io.acePort1.CDVALID @[Interconnect.scala 258:21]
    io.acePort1.CDREADY <= CCU.core1.CDREADY @[Interconnect.scala 259:23]
    CCU.core1.CDDATA <= io.acePort1.CDDATA @[Interconnect.scala 260:20]
    CCU.core1.CDLAST <= io.acePort1.CDLAST @[Interconnect.scala 261:20]
    io.acePort1.RVALID <= CCU.core1.RVALID @[Interconnect.scala 264:22]
    CCU.core1.RREADY <= io.acePort1.RREADY @[Interconnect.scala 265:20]
    io.acePort1.RID <= CCU.core1.RID @[Interconnect.scala 266:19]
    io.acePort1.RRESP <= CCU.core1.RRESP @[Interconnect.scala 267:21]
    io.acePort1.RDATA <= CCU.core1.RDATA @[Interconnect.scala 268:21]
    io.acePort1.RLAST <= CCU.core1.RLAST @[Interconnect.scala 269:21]
    io.acePort1.BVALID <= CCU.core1.BVALID @[Interconnect.scala 272:22]
    CCU.core1.BREADY <= io.acePort1.BREADY @[Interconnect.scala 273:20]
    io.acePort1.BID <= CCU.core1.BID @[Interconnect.scala 274:19]
    io.acePort1.BRESP <= CCU.core1.BRESP @[Interconnect.scala 275:21]
    io.acePort2.ACVALID <= CCU.core2.ACVALID @[Interconnect.scala 279:23]
    CCU.core2.ACREADY <= io.acePort2.ACREADY @[Interconnect.scala 280:21]
    io.acePort2.ACADDR <= CCU.core2.ACADDR @[Interconnect.scala 281:22]
    io.acePort2.ACSNOOP <= CCU.core2.ACSNOOP @[Interconnect.scala 282:23]
    CCU.core2.CRVALID <= io.acePort2.CRVALID @[Interconnect.scala 285:21]
    io.acePort2.CRREADY <= CCU.core2.CRREADY @[Interconnect.scala 286:23]
    CCU.core2.CRRESP <= io.acePort2.CRRESP @[Interconnect.scala 287:20]
    CCU.core2.CDVALID <= io.acePort2.CDVALID @[Interconnect.scala 290:21]
    io.acePort2.CDREADY <= CCU.core2.CDREADY @[Interconnect.scala 291:23]
    CCU.core2.CDDATA <= io.acePort2.CDDATA @[Interconnect.scala 292:20]
    CCU.core2.CDLAST <= io.acePort2.CDLAST @[Interconnect.scala 293:20]
    io.acePort2.RVALID <= CCU.core2.RVALID @[Interconnect.scala 296:22]
    CCU.core2.RREADY <= io.acePort2.RREADY @[Interconnect.scala 297:20]
    io.acePort2.RID <= CCU.core2.RID @[Interconnect.scala 298:19]
    io.acePort2.RRESP <= CCU.core2.RRESP @[Interconnect.scala 299:21]
    io.acePort2.RDATA <= CCU.core2.RDATA @[Interconnect.scala 300:21]
    io.acePort2.RLAST <= CCU.core2.RLAST @[Interconnect.scala 301:21]
    io.acePort2.BVALID <= CCU.core2.BVALID @[Interconnect.scala 304:22]
    CCU.core2.BREADY <= io.acePort2.BREADY @[Interconnect.scala 305:20]
    io.acePort2.BID <= CCU.core2.BID @[Interconnect.scala 306:19]
    io.acePort2.BRESP <= CCU.core2.BRESP @[Interconnect.scala 307:21]
    io.acePort3.ACVALID <= CCU.core3.ACVALID @[Interconnect.scala 311:23]
    CCU.core3.ACREADY <= io.acePort3.ACREADY @[Interconnect.scala 312:21]
    io.acePort3.ACADDR <= CCU.core3.ACADDR @[Interconnect.scala 313:22]
    io.acePort3.ACSNOOP <= CCU.core3.ACSNOOP @[Interconnect.scala 314:23]
    CCU.core3.CRVALID <= io.acePort3.CRVALID @[Interconnect.scala 317:21]
    io.acePort3.CRREADY <= CCU.core3.CRREADY @[Interconnect.scala 318:23]
    CCU.core3.CRRESP <= io.acePort3.CRRESP @[Interconnect.scala 319:20]
    CCU.core3.CDVALID <= io.acePort3.CDVALID @[Interconnect.scala 322:21]
    io.acePort3.CDREADY <= CCU.core3.CDREADY @[Interconnect.scala 323:23]
    CCU.core3.CDDATA <= io.acePort3.CDDATA @[Interconnect.scala 324:20]
    CCU.core3.CDLAST <= io.acePort3.CDLAST @[Interconnect.scala 325:20]
    io.acePort3.RVALID <= CCU.core3.RVALID @[Interconnect.scala 328:22]
    CCU.core3.RREADY <= io.acePort3.RREADY @[Interconnect.scala 329:20]
    io.acePort3.RID <= CCU.core3.RID @[Interconnect.scala 330:19]
    io.acePort3.RRESP <= CCU.core3.RRESP @[Interconnect.scala 331:21]
    io.acePort3.RDATA <= CCU.core3.RDATA @[Interconnect.scala 332:21]
    io.acePort3.RLAST <= CCU.core3.RLAST @[Interconnect.scala 333:21]
    io.acePort3.BVALID <= CCU.core3.BVALID @[Interconnect.scala 336:22]
    CCU.core3.BREADY <= io.acePort3.BREADY @[Interconnect.scala 337:20]
    io.acePort3.BID <= CCU.core3.BID @[Interconnect.scala 338:19]
    io.acePort3.BRESP <= CCU.core3.BRESP @[Interconnect.scala 339:21]

  module l2_Rob_Anon :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : { valid : UInt<1>, RW_address : UInt<32>, RW_data : UInt<512>, is_R : UInt<1>, id : UInt<2>}}, deq : { flip ready : UInt<1>, valid : UInt<1>, bits : { valid : UInt<1>, RW_address : UInt<32>, RW_data : UInt<512>, is_R : UInt<1>, id : UInt<2>}}}
    output writePort : { flip addr : UInt<3>, flip data : UInt<512>, flip is_R : UInt<1>, flip data_valid : UInt<1>, flip valid : UInt<1>}
    output allocatedAddr : UInt<3>

    cmem memReg : { valid : UInt<1>, RW_address : UInt<32>, RW_data : UInt<512>, is_R : UInt<1>, id : UInt<2>} [8] @[Fifo.scala 31:19]
    wire incrRead : UInt<1>
    incrRead <= UInt<1>("h0")
    wire incrWrite : UInt<1>
    incrWrite <= UInt<1>("h0")
    reg readPtr : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[Fifo.scala 22:26]
    node _nextVal_T = eq(readPtr, UInt<3>("h7")) @[Fifo.scala 23:30]
    node _nextVal_T_1 = add(readPtr, UInt<1>("h1")) @[Fifo.scala 23:60]
    node _nextVal_T_2 = tail(_nextVal_T_1, 1) @[Fifo.scala 23:60]
    node nextRead = mux(_nextVal_T, UInt<1>("h0"), _nextVal_T_2) @[Fifo.scala 23:22]
    when incrRead : @[Fifo.scala 24:17]
      readPtr <= nextRead @[Fifo.scala 25:14]
    reg writePtr : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[Fifo.scala 22:26]
    node _nextVal_T_3 = eq(writePtr, UInt<3>("h7")) @[Fifo.scala 23:30]
    node _nextVal_T_4 = add(writePtr, UInt<1>("h1")) @[Fifo.scala 23:60]
    node _nextVal_T_5 = tail(_nextVal_T_4, 1) @[Fifo.scala 23:60]
    node nextWrite = mux(_nextVal_T_3, UInt<1>("h0"), _nextVal_T_5) @[Fifo.scala 23:22]
    when incrWrite : @[Fifo.scala 24:17]
      writePtr <= nextWrite @[Fifo.scala 25:14]
    reg emptyReg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h1")) @[Fifo.scala 36:25]
    reg fullReg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Fifo.scala 37:24]
    node _T = and(io.deq.ready, io.deq.valid) @[Fifo.scala 40:21]
    node _T_1 = and(_T, io.enq.valid) @[Fifo.scala 40:37]
    node _T_2 = and(_T_1, io.enq.ready) @[Fifo.scala 40:53]
    when _T_2 : @[Fifo.scala 40:70]
      infer mport MPORT = memReg[writePtr], clock @[Fifo.scala 41:11]
      MPORT <= io.enq.bits @[Fifo.scala 41:22]
      incrWrite <= UInt<1>("h1") @[Fifo.scala 42:15]
      incrRead <= UInt<1>("h1") @[Fifo.scala 43:14]
    else :
      node _T_3 = and(io.enq.valid, io.enq.ready) @[Fifo.scala 44:27]
      when _T_3 : @[Fifo.scala 44:44]
        infer mport MPORT_1 = memReg[writePtr], clock @[Fifo.scala 45:11]
        MPORT_1 <= io.enq.bits @[Fifo.scala 45:22]
        emptyReg <= UInt<1>("h0") @[Fifo.scala 46:14]
        node _fullReg_T = eq(nextWrite, readPtr) @[Fifo.scala 47:26]
        fullReg <= _fullReg_T @[Fifo.scala 47:13]
        incrWrite <= UInt<1>("h1") @[Fifo.scala 48:15]
      else :
        node _T_4 = and(io.deq.ready, io.deq.valid) @[Fifo.scala 49:27]
        when _T_4 : @[Fifo.scala 49:44]
          fullReg <= UInt<1>("h0") @[Fifo.scala 50:13]
          node _emptyReg_T = eq(nextRead, writePtr) @[Fifo.scala 51:26]
          emptyReg <= _emptyReg_T @[Fifo.scala 51:14]
          incrRead <= UInt<1>("h1") @[Fifo.scala 52:14]
    infer mport io_deq_bits_MPORT = memReg[readPtr], clock @[Fifo.scala 55:24]
    io.deq.bits <= io_deq_bits_MPORT @[Fifo.scala 55:15]
    node _io_enq_ready_T = eq(fullReg, UInt<1>("h0")) @[Fifo.scala 56:19]
    node _io_enq_ready_T_1 = and(io.deq.valid, io.deq.ready) @[Fifo.scala 56:44]
    node _io_enq_ready_T_2 = or(_io_enq_ready_T, _io_enq_ready_T_1) @[Fifo.scala 56:28]
    io.enq.ready <= _io_enq_ready_T_2 @[Fifo.scala 56:16]
    node _io_deq_valid_T = eq(emptyReg, UInt<1>("h0")) @[Fifo.scala 57:19]
    io.deq.valid <= _io_deq_valid_T @[Fifo.scala 57:16]
    allocatedAddr <= writePtr @[l2_Rob.scala 101:23]
    when writePort.valid : @[l2_Rob.scala 104:30]
      infer mport MPORT_2 = memReg[writePort.addr], clock @[l2_Rob.scala 105:19]
      MPORT_2.RW_data <= writePort.data @[l2_Rob.scala 105:44]
      infer mport MPORT_3 = memReg[writePort.addr], clock @[l2_Rob.scala 106:19]
      MPORT_3.is_R <= writePort.is_R @[l2_Rob.scala 106:41]
      infer mport MPORT_4 = memReg[writePort.addr], clock @[l2_Rob.scala 107:19]
      MPORT_4.valid <= writePort.data_valid @[l2_Rob.scala 107:42]

  module l2_Rob :
    input clock : Clock
    input reset : Reset
    output io : { axi : { flip ARADDR : UInt<32>, flip ARVALID : UInt<1>, ARREADY : UInt<1>, flip ARLEN : UInt<4>, flip ARID : UInt<2>, RDATA : UInt<64>, flip RREADY : UInt<1>, RVALID : UInt<1>, RID : UInt<2>, RRESP : UInt<2>, RLAST : UInt<1>, flip AWADDR : UInt<32>, AWREADY : UInt<1>, flip AWVALID : UInt<1>, flip AWLEN : UInt<4>, flip AWID : UInt<2>, flip WDATA : UInt<64>, WREADY : UInt<1>, flip WVALID : UInt<1>, flip WLAST : UInt<1>, flip BREADY : UInt<1>, BVALID : UInt<1>, BRESP : UInt<1>, BID : UInt<1>}, Rob_out : { ready : UInt<1>, flip fired : UInt<1>, Rob_address : UInt<3>, Mem_address : UInt<32>, data : UInt<512>, valid : UInt<1>, is_R : UInt<1>}, Rob_in : { ready : UInt<1>, flip fired : UInt<1>, flip Rob_address : UInt<3>, flip Mem_address : UInt<32>, flip data : UInt<512>, flip valid : UInt<1>, flip is_R : UInt<1>}}

    wire _inputBuffer_WIRE : { addr : UInt<32>, data : UInt<64>[8], is_R : UInt<1>, valid : UInt<1>, id : UInt<2>}
    _inputBuffer_WIRE.id <= UInt<1>("h0")
    _inputBuffer_WIRE.valid <= UInt<1>("h0")
    _inputBuffer_WIRE.is_R <= UInt<1>("h0")
    _inputBuffer_WIRE.data[0] is invalid
    _inputBuffer_WIRE.data[1] is invalid
    _inputBuffer_WIRE.data[2] is invalid
    _inputBuffer_WIRE.data[3] is invalid
    _inputBuffer_WIRE.data[4] is invalid
    _inputBuffer_WIRE.data[5] is invalid
    _inputBuffer_WIRE.data[6] is invalid
    _inputBuffer_WIRE.data[7] is invalid
    _inputBuffer_WIRE.addr <= UInt<1>("h0")
    reg inputBuffer : { addr : UInt<32>, data : UInt<64>[8], is_R : UInt<1>, valid : UInt<1>, id : UInt<2>}, clock with :
      reset => (reset, _inputBuffer_WIRE) @[l2_Rob.scala 29:30]
    wire _outputBuffer_WIRE : { addr : UInt<32>, Rob_addr : UInt<3>, is_R : UInt<1>, data : UInt<512>, valid : UInt<1>}
    _outputBuffer_WIRE.valid <= UInt<1>("h0")
    _outputBuffer_WIRE.data <= UInt<1>("h0")
    _outputBuffer_WIRE.is_R <= UInt<1>("h0")
    _outputBuffer_WIRE.Rob_addr <= UInt<1>("h0")
    _outputBuffer_WIRE.addr <= UInt<1>("h0")
    reg outputBuffer : { addr : UInt<32>, Rob_addr : UInt<3>, is_R : UInt<1>, data : UInt<512>, valid : UInt<1>}, clock with :
      reset => (reset, _outputBuffer_WIRE) @[l2_Rob.scala 45:31]
    reg inputBufferState : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[l2_Rob.scala 61:35]
    reg outputBufferState : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[l2_Rob.scala 62:36]
    wire readyInputBuffer : UInt<1>
    readyInputBuffer <= UInt<1>("h1")
    wire readyOutputBuffer : UInt<1>
    readyOutputBuffer <= UInt<1>("h1")
    node concatData_lo_lo = cat(inputBuffer.data[6], inputBuffer.data[7]) @[Cat.scala 33:92]
    node concatData_lo_hi = cat(inputBuffer.data[4], inputBuffer.data[5]) @[Cat.scala 33:92]
    node concatData_lo = cat(concatData_lo_hi, concatData_lo_lo) @[Cat.scala 33:92]
    node concatData_hi_lo = cat(inputBuffer.data[2], inputBuffer.data[3]) @[Cat.scala 33:92]
    node concatData_hi_hi = cat(inputBuffer.data[0], inputBuffer.data[1]) @[Cat.scala 33:92]
    node concatData_hi = cat(concatData_hi_hi, concatData_hi_lo) @[Cat.scala 33:92]
    node concatData = cat(concatData_hi, concatData_lo) @[Cat.scala 33:92]
    reg stall : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[l2_Rob.scala 74:24]
    reg axi_RDATA_counter : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[l2_Rob.scala 77:36]
    node _next_axi_RDATA_counter_T = eq(axi_RDATA_counter, io.axi.ARLEN) @[l2_Rob.scala 78:56]
    node _next_axi_RDATA_counter_T_1 = add(axi_RDATA_counter, UInt<1>("h1")) @[l2_Rob.scala 78:97]
    node _next_axi_RDATA_counter_T_2 = tail(_next_axi_RDATA_counter_T_1, 1) @[l2_Rob.scala 78:97]
    node next_axi_RDATA_counter = mux(_next_axi_RDATA_counter_T, UInt<1>("h0"), _next_axi_RDATA_counter_T_2) @[l2_Rob.scala 78:37]
    reg axi_WDATA_counter : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[l2_Rob.scala 81:36]
    node _next_axi_WDATA_counter_T = eq(axi_WDATA_counter, io.axi.AWLEN) @[l2_Rob.scala 82:56]
    node _next_axi_WDATA_counter_T_1 = add(axi_WDATA_counter, UInt<1>("h1")) @[l2_Rob.scala 82:97]
    node _next_axi_WDATA_counter_T_2 = tail(_next_axi_WDATA_counter_T_1, 1) @[l2_Rob.scala 82:97]
    node next_axi_WDATA_counter = mux(_next_axi_WDATA_counter_T, UInt<1>("h0"), _next_axi_WDATA_counter_T_2) @[l2_Rob.scala 82:37]
    inst enq_fifo of l2_Rob_Anon @[l2_Rob.scala 88:26]
    enq_fifo.clock <= clock
    enq_fifo.reset <= reset
    node _R_data_T = bits(enq_fifo.io.deq.bits.RW_data, 63, 0) @[l2_Rob.scala 126:41]
    node _R_data_T_1 = bits(enq_fifo.io.deq.bits.RW_data, 127, 64) @[l2_Rob.scala 126:41]
    node _R_data_T_2 = bits(enq_fifo.io.deq.bits.RW_data, 191, 128) @[l2_Rob.scala 126:41]
    node _R_data_T_3 = bits(enq_fifo.io.deq.bits.RW_data, 255, 192) @[l2_Rob.scala 126:41]
    node _R_data_T_4 = bits(enq_fifo.io.deq.bits.RW_data, 319, 256) @[l2_Rob.scala 126:41]
    node _R_data_T_5 = bits(enq_fifo.io.deq.bits.RW_data, 383, 320) @[l2_Rob.scala 126:41]
    node _R_data_T_6 = bits(enq_fifo.io.deq.bits.RW_data, 447, 384) @[l2_Rob.scala 126:41]
    node _R_data_T_7 = bits(enq_fifo.io.deq.bits.RW_data, 511, 448) @[l2_Rob.scala 126:41]
    wire R_data : UInt<64>[8] @[l2_Rob.scala 125:25]
    R_data[0] <= _R_data_T @[l2_Rob.scala 125:25]
    R_data[1] <= _R_data_T_1 @[l2_Rob.scala 125:25]
    R_data[2] <= _R_data_T_2 @[l2_Rob.scala 125:25]
    R_data[3] <= _R_data_T_3 @[l2_Rob.scala 125:25]
    R_data[4] <= _R_data_T_4 @[l2_Rob.scala 125:25]
    R_data[5] <= _R_data_T_5 @[l2_Rob.scala 125:25]
    R_data[6] <= _R_data_T_6 @[l2_Rob.scala 125:25]
    R_data[7] <= _R_data_T_7 @[l2_Rob.scala 125:25]
    io.axi.ARREADY <= readyInputBuffer @[l2_Rob.scala 131:20]
    io.axi.RDATA <= R_data[axi_RDATA_counter] @[l2_Rob.scala 133:18]
    node _io_axi_RLAST_T = eq(axi_RDATA_counter, io.axi.ARLEN) @[l2_Rob.scala 134:39]
    io.axi.RLAST <= _io_axi_RLAST_T @[l2_Rob.scala 134:18]
    io.axi.RID <= enq_fifo.io.deq.bits.id @[l2_Rob.scala 135:16]
    node _io_axi_RVALID_T = and(enq_fifo.io.deq.valid, enq_fifo.io.deq.bits.valid) @[l2_Rob.scala 136:45]
    node _io_axi_RVALID_T_1 = and(_io_axi_RVALID_T, enq_fifo.io.deq.bits.is_R) @[l2_Rob.scala 136:75]
    io.axi.RVALID <= _io_axi_RVALID_T_1 @[l2_Rob.scala 136:19]
    io.axi.RRESP <= UInt<1>("h0") @[l2_Rob.scala 137:18]
    io.axi.AWREADY <= readyInputBuffer @[l2_Rob.scala 139:20]
    io.axi.WREADY <= stall @[l2_Rob.scala 141:19]
    node _io_axi_BVALID_T = and(enq_fifo.io.deq.valid, enq_fifo.io.deq.bits.valid) @[l2_Rob.scala 143:44]
    node _io_axi_BVALID_T_1 = eq(enq_fifo.io.deq.bits.is_R, UInt<1>("h0")) @[l2_Rob.scala 143:77]
    node _io_axi_BVALID_T_2 = and(_io_axi_BVALID_T, _io_axi_BVALID_T_1) @[l2_Rob.scala 143:74]
    io.axi.BVALID <= _io_axi_BVALID_T_2 @[l2_Rob.scala 143:19]
    io.axi.BRESP <= UInt<1>("h0") @[l2_Rob.scala 144:18]
    io.axi.BID <= enq_fifo.io.deq.bits.id @[l2_Rob.scala 145:16]
    enq_fifo.io.enq.bits.RW_address <= inputBuffer.addr @[l2_Rob.scala 148:37]
    enq_fifo.io.enq.bits.is_R <= inputBuffer.is_R @[l2_Rob.scala 149:31]
    enq_fifo.io.enq.bits.RW_data <= concatData @[l2_Rob.scala 150:34]
    enq_fifo.io.enq.bits.valid <= UInt<1>("h0") @[l2_Rob.scala 151:32]
    enq_fifo.io.enq.bits.id <= inputBuffer.id @[l2_Rob.scala 152:29]
    enq_fifo.io.enq.valid <= UInt<1>("h0") @[l2_Rob.scala 153:27]
    node _T = and(io.axi.RREADY, io.axi.RVALID) @[l2_Rob.scala 160:24]
    when _T : @[l2_Rob.scala 160:41]
      axi_RDATA_counter <= next_axi_RDATA_counter @[l2_Rob.scala 161:27]
      node _T_1 = eq(axi_RDATA_counter, io.axi.ARLEN) @[l2_Rob.scala 162:31]
      when _T_1 : @[l2_Rob.scala 162:47]
        enq_fifo.io.deq.ready <= UInt<1>("h1") @[l2_Rob.scala 163:35]
      else :
        enq_fifo.io.deq.ready <= UInt<1>("h0") @[l2_Rob.scala 165:35]
    else :
      node _T_2 = and(io.axi.BREADY, io.axi.BVALID) @[l2_Rob.scala 167:30]
      when _T_2 : @[l2_Rob.scala 167:48]
        enq_fifo.io.deq.ready <= UInt<1>("h1") @[l2_Rob.scala 168:31]
      else :
        enq_fifo.io.deq.ready <= UInt<1>("h0") @[l2_Rob.scala 170:31]
    node _T_3 = eq(UInt<2>("h0"), inputBufferState) @[l2_Rob.scala 175:29]
    when _T_3 : @[l2_Rob.scala 175:29]
      readyInputBuffer <= UInt<1>("h1") @[l2_Rob.scala 178:30]
      node _T_4 = eq(stall, UInt<1>("h0")) @[l2_Rob.scala 180:36]
      node _T_5 = and(io.axi.ARVALID, _T_4) @[l2_Rob.scala 180:33]
      when _T_5 : @[l2_Rob.scala 180:43]
        inputBuffer.id <= io.axi.ARID @[l2_Rob.scala 181:32]
        inputBuffer.addr <= io.axi.ARADDR @[l2_Rob.scala 182:34]
        inputBuffer.is_R <= UInt<1>("h1") @[l2_Rob.scala 183:34]
        wire _WIRE : UInt<64>[8] @[l2_Rob.scala 184:44]
        _WIRE[0] <= UInt<64>("h0") @[l2_Rob.scala 184:44]
        _WIRE[1] <= UInt<64>("h0") @[l2_Rob.scala 184:44]
        _WIRE[2] <= UInt<64>("h0") @[l2_Rob.scala 184:44]
        _WIRE[3] <= UInt<64>("h0") @[l2_Rob.scala 184:44]
        _WIRE[4] <= UInt<64>("h0") @[l2_Rob.scala 184:44]
        _WIRE[5] <= UInt<64>("h0") @[l2_Rob.scala 184:44]
        _WIRE[6] <= UInt<64>("h0") @[l2_Rob.scala 184:44]
        _WIRE[7] <= UInt<64>("h0") @[l2_Rob.scala 184:44]
        inputBuffer.data <= _WIRE @[l2_Rob.scala 184:34]
        inputBuffer.valid <= UInt<1>("h1") @[l2_Rob.scala 185:35]
        inputBufferState <= UInt<2>("h1") @[l2_Rob.scala 186:34]
      node _T_6 = eq(stall, UInt<1>("h0")) @[l2_Rob.scala 189:36]
      node _T_7 = and(io.axi.AWVALID, _T_6) @[l2_Rob.scala 189:33]
      when _T_7 : @[l2_Rob.scala 189:43]
        inputBuffer.id <= io.axi.AWID @[l2_Rob.scala 190:32]
        inputBuffer.addr <= io.axi.AWADDR @[l2_Rob.scala 191:34]
        inputBuffer.is_R <= UInt<1>("h0") @[l2_Rob.scala 192:34]
        stall <= UInt<1>("h1") @[l2_Rob.scala 193:23]
        inputBufferState <= UInt<2>("h2") @[l2_Rob.scala 194:34]
    else :
      node _T_8 = eq(UInt<2>("h2"), inputBufferState) @[l2_Rob.scala 175:29]
      when _T_8 : @[l2_Rob.scala 175:29]
        readyInputBuffer <= UInt<1>("h0") @[l2_Rob.scala 201:30]
        node _T_9 = and(io.axi.WREADY, io.axi.WVALID) @[l2_Rob.scala 203:32]
        when _T_9 : @[l2_Rob.scala 203:49]
          axi_WDATA_counter <= next_axi_WDATA_counter @[l2_Rob.scala 204:35]
          inputBuffer.data[axi_WDATA_counter] <= io.axi.WDATA @[l2_Rob.scala 205:53]
          when io.axi.WLAST : @[l2_Rob.scala 206:35]
            stall <= UInt<1>("h0") @[l2_Rob.scala 207:27]
            inputBuffer.valid <= UInt<1>("h1") @[l2_Rob.scala 208:39]
            inputBufferState <= UInt<2>("h1") @[l2_Rob.scala 209:38]
      else :
        node _T_10 = eq(UInt<2>("h1"), inputBufferState) @[l2_Rob.scala 175:29]
        when _T_10 : @[l2_Rob.scala 175:29]
          readyInputBuffer <= UInt<1>("h0") @[l2_Rob.scala 215:30]
          node _T_11 = and(readyOutputBuffer, enq_fifo.io.enq.ready) @[l2_Rob.scala 217:36]
          node _T_12 = and(_T_11, inputBuffer.valid) @[l2_Rob.scala 217:61]
          when _T_12 : @[l2_Rob.scala 217:82]
            outputBuffer.valid <= UInt<1>("h1") @[l2_Rob.scala 218:36]
            outputBuffer.addr <= inputBuffer.addr @[l2_Rob.scala 219:35]
            outputBuffer.Rob_addr <= enq_fifo.allocatedAddr @[l2_Rob.scala 220:39]
            outputBuffer.data <= concatData @[l2_Rob.scala 221:35]
            outputBuffer.is_R <= inputBuffer.is_R @[l2_Rob.scala 222:35]
            inputBuffer.valid <= UInt<1>("h0") @[l2_Rob.scala 224:35]
            outputBufferState <= UInt<2>("h1") @[l2_Rob.scala 225:35]
            inputBufferState <= UInt<2>("h0") @[l2_Rob.scala 226:34]
            enq_fifo.io.enq.valid <= UInt<1>("h1") @[l2_Rob.scala 228:39]
          else :
            enq_fifo.io.enq.valid <= UInt<1>("h0") @[l2_Rob.scala 231:39]
    node _T_13 = eq(UInt<2>("h0"), outputBufferState) @[l2_Rob.scala 238:30]
    when _T_13 : @[l2_Rob.scala 238:30]
      readyOutputBuffer <= UInt<1>("h1") @[l2_Rob.scala 240:31]
    else :
      node _T_14 = eq(UInt<2>("h1"), outputBufferState) @[l2_Rob.scala 238:30]
      when _T_14 : @[l2_Rob.scala 238:30]
        io.Rob_out.ready <= UInt<1>("h1") @[l2_Rob.scala 244:30]
        readyOutputBuffer <= UInt<1>("h0") @[l2_Rob.scala 245:31]
        when io.Rob_out.fired : @[l2_Rob.scala 247:35]
          outputBuffer.valid <= UInt<1>("h0") @[l2_Rob.scala 248:36]
          outputBufferState <= UInt<2>("h0") @[l2_Rob.scala 249:35]
    enq_fifo.writePort.addr <= io.Rob_in.Rob_address @[l2_Rob.scala 258:29]
    enq_fifo.writePort.data <= io.Rob_in.data @[l2_Rob.scala 259:29]
    enq_fifo.writePort.valid <= io.Rob_in.valid @[l2_Rob.scala 260:30]
    enq_fifo.writePort.data_valid <= io.Rob_in.fired @[l2_Rob.scala 261:35]
    enq_fifo.writePort.is_R <= io.Rob_in.is_R @[l2_Rob.scala 262:29]
    io.Rob_in.ready <= enq_fifo.io.deq.valid @[l2_Rob.scala 264:21]
    io.Rob_out.Rob_address <= outputBuffer.Rob_addr @[l2_Rob.scala 269:28]
    io.Rob_out.Mem_address <= outputBuffer.addr @[l2_Rob.scala 270:28]
    io.Rob_out.valid <= outputBuffer.valid @[l2_Rob.scala 271:22]
    io.Rob_out.is_R <= outputBuffer.is_R @[l2_Rob.scala 272:21]
    io.Rob_out.ready <= outputBuffer.valid @[l2_Rob.scala 273:22]
    io.Rob_out.data <= outputBuffer.data @[l2_Rob.scala 274:21]

  module PseudoLRU :
    input clock : Clock
    input reset : Reset

    reg state_reg : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[PseudoLRU.scala 68:70]

  module Memory :
    input clock : Clock
    input reset : Reset
    output io : { cache_in : { ready : UInt<1>, flip fired : UInt<1>, flip addr : UInt<32>, flip Rob_address : UInt<3>, flip is_R : UInt<1>, flip data : UInt<512>, flip valid : UInt<1>, flip from_MSHR : UInt<1>, flip R_data : UInt<512>[4]}, cache_hit_out : { ready : UInt<1>, flip fired : UInt<1>, Rob_address : UInt<3>, readData : UInt<512>, addr : UInt<32>, is_R : UInt<1>, valid : UInt<1>}, cache_miss_out : { ready : UInt<1>, flip fired : UInt<1>, Rob_addr : UInt<3>, Mem_addr : UInt<32>, w_data : UInt<512>, is_R : UInt<1>, valid : UInt<1>, replace : UInt<1>, rep_data : UInt<512>[4], replaWire : UInt<1>}}

    reg inReg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[cache.scala 27:22]
    reg outReg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[cache.scala 28:23]
    reg replreg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[cache.scala 29:24]
    wire readyInputBuffer : UInt<1>
    readyInputBuffer <= UInt<1>("h1")
    wire readyOutputBuffer : UInt<1>
    readyOutputBuffer <= UInt<1>("h1")
    io.cache_in.ready <= readyInputBuffer @[cache.scala 36:21]
    wire _inputBuffer_WIRE : { Mem_addr : UInt<32>, data : UInt<512>, R_data : UInt<512>[4], from_MSHR : UInt<1>, is_R : UInt<1>, Rob_address : UInt<3>, valid : UInt<1>}
    _inputBuffer_WIRE.valid <= UInt<1>("h0")
    _inputBuffer_WIRE.Rob_address <= UInt<1>("h0")
    _inputBuffer_WIRE.is_R <= UInt<1>("h0")
    _inputBuffer_WIRE.from_MSHR <= UInt<1>("h0")
    _inputBuffer_WIRE.R_data[0] is invalid
    _inputBuffer_WIRE.R_data[1] is invalid
    _inputBuffer_WIRE.R_data[2] is invalid
    _inputBuffer_WIRE.R_data[3] is invalid
    _inputBuffer_WIRE.data <= UInt<1>("h0")
    _inputBuffer_WIRE.Mem_addr <= UInt<18>("h204f9")
    reg inputBuffer : { Mem_addr : UInt<32>, data : UInt<512>, R_data : UInt<512>[4], from_MSHR : UInt<1>, is_R : UInt<1>, Rob_address : UInt<3>, valid : UInt<1>}, clock with :
      reset => (reset, _inputBuffer_WIRE) @[cache.scala 41:28]
    wire _outputBuffer_WIRE : { Mem_addr : UInt<32>, Rob_addr : UInt<3>, is_R : UInt<1>, hit : UInt<1>, data : UInt<512>, from_MSHR : UInt<1>, valid : UInt<1>, replace : UInt<1>}
    _outputBuffer_WIRE.replace <= UInt<1>("h0")
    _outputBuffer_WIRE.valid <= UInt<1>("h0")
    _outputBuffer_WIRE.from_MSHR <= UInt<1>("h0")
    _outputBuffer_WIRE.data <= UInt<1>("h0")
    _outputBuffer_WIRE.hit <= UInt<1>("h0")
    _outputBuffer_WIRE.is_R <= UInt<1>("h0")
    _outputBuffer_WIRE.Rob_addr <= UInt<1>("h0")
    _outputBuffer_WIRE.Mem_addr <= UInt<18>("h204f9")
    reg outputBuffer : { Mem_addr : UInt<32>, Rob_addr : UInt<3>, is_R : UInt<1>, hit : UInt<1>, data : UInt<512>, from_MSHR : UInt<1>, valid : UInt<1>, replace : UInt<1>}, clock with :
      reset => (reset, _outputBuffer_WIRE) @[cache.scala 60:31]
    wire _replaceBuffer_WIRE : { Mem_addr : UInt<32>, data : UInt<512>[4], valid : UInt<1>}
    _replaceBuffer_WIRE.valid <= UInt<1>("h0")
    _replaceBuffer_WIRE.data[0] is invalid
    _replaceBuffer_WIRE.data[1] is invalid
    _replaceBuffer_WIRE.data[2] is invalid
    _replaceBuffer_WIRE.data[3] is invalid
    _replaceBuffer_WIRE.Mem_addr <= UInt<1>("h0")
    reg replaceBuffer : { Mem_addr : UInt<32>, data : UInt<512>[4], valid : UInt<1>}, clock with :
      reset => (reset, _replaceBuffer_WIRE) @[cache.scala 81:32]
    smem mem : { state : UInt<3>, valid : UInt<1>[4], tag : UInt<13>[4], data : UInt<512>[4][4], dirty : UInt<1>[4]} [2048] @[cache.scala 93:24]
    inst pseudoLRU of PseudoLRU @[cache.scala 94:25]
    pseudoLRU.clock <= clock
    pseudoLRU.reset <= reset
    reg delay_input_valid : UInt<1>, clock with :
      reset => (reset, inputBuffer.valid) @[cache.scala 97:34]
    delay_input_valid <= inputBuffer.valid @[cache.scala 98:21]
    node offset = bits(inputBuffer.Mem_addr, 7, 6) @[cache.scala 102:36]
    node index = bits(inputBuffer.Mem_addr, 18, 8) @[cache.scala 103:35]
    node tag = bits(inputBuffer.Mem_addr, 31, 19) @[cache.scala 104:33]
    wire _cacheLineRead_WIRE : UInt @[cache.scala 108:31]
    _cacheLineRead_WIRE is invalid @[cache.scala 108:31]
    when UInt<1>("h1") : @[cache.scala 108:31]
      _cacheLineRead_WIRE <= index @[cache.scala 108:31]
      node _cacheLineRead_T = or(_cacheLineRead_WIRE, UInt<11>("h0")) @[cache.scala 108:31]
      node _cacheLineRead_T_1 = bits(_cacheLineRead_T, 10, 0) @[cache.scala 108:31]
      read mport cacheLineRead = mem[_cacheLineRead_T_1], clock @[cache.scala 108:31]
    node _matchVec_T = eq(cacheLineRead.tag[0], tag) @[cache.scala 111:55]
    node _matchVec_T_1 = and(cacheLineRead.valid[0], _matchVec_T) @[cache.scala 111:28]
    node _matchVec_T_2 = eq(cacheLineRead.tag[1], tag) @[cache.scala 111:55]
    node _matchVec_T_3 = and(cacheLineRead.valid[1], _matchVec_T_2) @[cache.scala 111:28]
    node _matchVec_T_4 = eq(cacheLineRead.tag[2], tag) @[cache.scala 111:55]
    node _matchVec_T_5 = and(cacheLineRead.valid[2], _matchVec_T_4) @[cache.scala 111:28]
    node _matchVec_T_6 = eq(cacheLineRead.tag[3], tag) @[cache.scala 111:55]
    node _matchVec_T_7 = and(cacheLineRead.valid[3], _matchVec_T_6) @[cache.scala 111:28]
    wire matchVec : UInt<1>[4] @[cache.scala 110:25]
    matchVec[0] <= _matchVec_T_1 @[cache.scala 110:25]
    matchVec[1] <= _matchVec_T_3 @[cache.scala 110:25]
    matchVec[2] <= _matchVec_T_5 @[cache.scala 110:25]
    matchVec[3] <= _matchVec_T_7 @[cache.scala 110:25]
    wire data : UInt<512> @[cache.scala 115:18]
    node hit_lo = cat(matchVec[1], matchVec[0]) @[cache.scala 116:43]
    node hit_hi = cat(matchVec[3], matchVec[2]) @[cache.scala 116:43]
    node _hit_T = cat(hit_hi, hit_lo) @[cache.scala 116:43]
    node _hit_T_1 = orr(_hit_T) @[cache.scala 116:50]
    node _hit_T_2 = and(inputBuffer.valid, _hit_T_1) @[cache.scala 116:31]
    node hit = and(_hit_T_2, delay_input_valid) @[cache.scala 116:54]
    node matchedWay_lo = cat(matchVec[1], matchVec[0]) @[cache.scala 117:38]
    node matchedWay_hi = cat(matchVec[3], matchVec[2]) @[cache.scala 117:38]
    node _matchedWay_T = cat(matchedWay_hi, matchedWay_lo) @[cache.scala 117:38]
    node matchedWay_hi_1 = bits(_matchedWay_T, 3, 2) @[OneHot.scala 30:18]
    node matchedWay_lo_1 = bits(_matchedWay_T, 1, 0) @[OneHot.scala 31:18]
    node _matchedWay_T_1 = orr(matchedWay_hi_1) @[OneHot.scala 32:14]
    node _matchedWay_T_2 = or(matchedWay_hi_1, matchedWay_lo_1) @[OneHot.scala 32:28]
    node _matchedWay_T_3 = bits(_matchedWay_T_2, 1, 1) @[CircuitMath.scala 28:8]
    node matchedWay = cat(_matchedWay_T_1, _matchedWay_T_3) @[Cat.scala 33:92]
    node repl_way_left_subtree_older = bits(cacheLineRead.state, 2, 2) @[PseudoLRU.scala 135:38]
    node repl_way_left_subtree_state = bits(cacheLineRead.state, 1, 1) @[PseudoLRU.scala 19:13]
    node repl_way_right_subtree_state = bits(cacheLineRead.state, 0, 0) @[PseudoLRU.scala 137:38]
    node _repl_way_T = bits(repl_way_left_subtree_state, 0, 0) @[PseudoLRU.scala 154:12]
    node _repl_way_T_1 = bits(repl_way_right_subtree_state, 0, 0) @[PseudoLRU.scala 154:12]
    node _repl_way_T_2 = mux(repl_way_left_subtree_older, _repl_way_T, _repl_way_T_1) @[PseudoLRU.scala 142:16]
    node repl_way = cat(repl_way_left_subtree_older, _repl_way_T_2) @[Cat.scala 33:92]
    node _replace_T = and(inputBuffer.valid, delay_input_valid) @[cache.scala 120:35]
    node _replace_T_1 = and(_replace_T, cacheLineRead.valid[repl_way]) @[cache.scala 120:56]
    node _replace_T_2 = eq(cacheLineRead.tag[repl_way], tag) @[cache.scala 120:121]
    node _replace_T_3 = eq(_replace_T_2, UInt<1>("h0")) @[cache.scala 120:92]
    node _replace_T_4 = and(_replace_T_1, _replace_T_3) @[cache.scala 120:89]
    node replace = and(_replace_T_4, cacheLineRead.dirty[repl_way]) @[cache.scala 120:129]
    node _cache_hit_write_T = eq(inputBuffer.is_R, UInt<1>("h0")) @[cache.scala 122:25]
    node _cache_hit_write_T_1 = and(_cache_hit_write_T, hit) @[cache.scala 122:43]
    node _cache_hit_write_T_2 = eq(inputBuffer.from_MSHR, UInt<1>("h0")) @[cache.scala 122:53]
    node cache_hit_write = and(_cache_hit_write_T_1, _cache_hit_write_T_2) @[cache.scala 122:50]
    node _delay_MSHR_write_T = and(inputBuffer.from_MSHR, inputBuffer.valid) @[cache.scala 123:48]
    node _delay_MSHR_write_T_1 = and(_delay_MSHR_write_T, delay_input_valid) @[cache.scala 123:69]
    node _delay_MSHR_write_T_2 = and(_delay_MSHR_write_T_1, hit) @[cache.scala 123:90]
    node _delay_MSHR_write_T_3 = eq(inputBuffer.is_R, UInt<1>("h0")) @[cache.scala 123:100]
    node delay_MSHR_write = and(_delay_MSHR_write_T_2, _delay_MSHR_write_T_3) @[cache.scala 123:97]
    node _cache_miss_write_T = and(inputBuffer.valid, inputBuffer.from_MSHR) @[cache.scala 124:44]
    node _cache_miss_write_T_1 = and(_cache_miss_write_T, delay_input_valid) @[cache.scala 124:69]
    node _cache_miss_write_T_2 = eq(hit, UInt<1>("h0")) @[cache.scala 124:93]
    node cache_miss_write = and(_cache_miss_write_T_1, _cache_miss_write_T_2) @[cache.scala 124:90]
    when inputBuffer.from_MSHR : @[cache.scala 127:30]
      data <= inputBuffer.R_data[offset] @[cache.scala 128:10]
    else :
      node _T = eq(inputBuffer.is_R, UInt<1>("h0")) @[cache.scala 129:14]
      when _T : @[cache.scala 129:32]
        data <= inputBuffer.data @[cache.scala 130:10]
      else :
        data <= cacheLineRead.data[matchedWay][offset] @[cache.scala 132:10]
    node _T_1 = eq(inputBuffer.from_MSHR, UInt<1>("h0")) @[cache.scala 136:15]
    node _T_2 = and(hit, _T_1) @[cache.scala 136:12]
    node _T_3 = and(_T_2, inputBuffer.is_R) @[cache.scala 136:38]
    when _T_3 : @[cache.scala 136:58]
      node cacheLineRead_state_touch_way_sized = bits(matchedWay, 1, 0) @[PseudoLRU.scala 19:13]
      node _cacheLineRead_state_set_left_older_T = bits(cacheLineRead_state_touch_way_sized, 1, 1) @[PseudoLRU.scala 88:43]
      node cacheLineRead_state_set_left_older = eq(_cacheLineRead_state_set_left_older_T, UInt<1>("h0")) @[PseudoLRU.scala 88:33]
      node cacheLineRead_state_left_subtree_state = bits(cacheLineRead.state, 1, 1) @[PseudoLRU.scala 19:13]
      node cacheLineRead_state_right_subtree_state = bits(cacheLineRead.state, 0, 0) @[PseudoLRU.scala 90:38]
      node _cacheLineRead_state_T = bits(cacheLineRead_state_touch_way_sized, 0, 0) @[PseudoLRU.scala 19:13]
      node _cacheLineRead_state_T_1 = bits(_cacheLineRead_state_T, 0, 0) @[PseudoLRU.scala 110:17]
      node _cacheLineRead_state_T_2 = eq(_cacheLineRead_state_T_1, UInt<1>("h0")) @[PseudoLRU.scala 110:7]
      node _cacheLineRead_state_T_3 = mux(cacheLineRead_state_set_left_older, cacheLineRead_state_left_subtree_state, _cacheLineRead_state_T_2) @[PseudoLRU.scala 95:16]
      node _cacheLineRead_state_T_4 = bits(cacheLineRead_state_touch_way_sized, 0, 0) @[PseudoLRU.scala 99:62]
      node _cacheLineRead_state_T_5 = bits(_cacheLineRead_state_T_4, 0, 0) @[PseudoLRU.scala 110:17]
      node _cacheLineRead_state_T_6 = eq(_cacheLineRead_state_T_5, UInt<1>("h0")) @[PseudoLRU.scala 110:7]
      node _cacheLineRead_state_T_7 = mux(cacheLineRead_state_set_left_older, _cacheLineRead_state_T_6, cacheLineRead_state_right_subtree_state) @[PseudoLRU.scala 98:16]
      node cacheLineRead_state_hi = cat(cacheLineRead_state_set_left_older, _cacheLineRead_state_T_3) @[Cat.scala 33:92]
      node _cacheLineRead_state_T_8 = cat(cacheLineRead_state_hi, _cacheLineRead_state_T_7) @[Cat.scala 33:92]
      cacheLineRead.state <= _cacheLineRead_state_T_8 @[cache.scala 137:25]
      write mport MPORT = mem[index], clock
      MPORT <= cacheLineRead
    node _T_4 = eq(UInt<1>("h0"), inReg) @[cache.scala 144:16]
    when _T_4 : @[cache.scala 144:16]
      readyInputBuffer <= UInt<1>("h1") @[cache.scala 146:24]
      when io.cache_in.fired : @[cache.scala 147:30]
        inputBuffer.Mem_addr <= io.cache_in.addr @[cache.scala 148:30]
        inputBuffer.Rob_address <= io.cache_in.Rob_address @[cache.scala 149:33]
        inputBuffer.is_R <= io.cache_in.is_R @[cache.scala 150:26]
        inputBuffer.data <= io.cache_in.data @[cache.scala 151:26]
        inputBuffer.valid <= io.cache_in.valid @[cache.scala 152:27]
        inputBuffer.from_MSHR <= io.cache_in.from_MSHR @[cache.scala 153:31]
        inputBuffer.R_data <= io.cache_in.R_data @[cache.scala 154:28]
        inReg <= UInt<1>("h1") @[cache.scala 155:15]
    else :
      node _T_5 = eq(UInt<1>("h1"), inReg) @[cache.scala 144:16]
      when _T_5 : @[cache.scala 144:16]
        readyInputBuffer <= UInt<1>("h0") @[cache.scala 160:24]
    node _T_6 = eq(UInt<1>("h0"), outReg) @[cache.scala 166:17]
    when _T_6 : @[cache.scala 166:17]
      readyOutputBuffer <= UInt<1>("h1") @[cache.scala 168:25]
      when delay_input_valid : @[cache.scala 169:30]
        inReg <= UInt<1>("h0") @[cache.scala 170:15]
        inputBuffer.valid <= UInt<1>("h0") @[cache.scala 171:27]
        outputBuffer.Mem_addr <= inputBuffer.Mem_addr @[cache.scala 173:31]
        outputBuffer.is_R <= inputBuffer.is_R @[cache.scala 174:27]
        outputBuffer.Rob_addr <= inputBuffer.Rob_address @[cache.scala 175:31]
        outputBuffer.data <= data @[cache.scala 176:27]
        node _outputBuffer_hit_T = and(inputBuffer.from_MSHR, inputBuffer.valid) @[cache.scala 177:59]
        node _outputBuffer_hit_T_1 = or(hit, _outputBuffer_hit_T) @[cache.scala 177:33]
        outputBuffer.hit <= _outputBuffer_hit_T_1 @[cache.scala 177:26]
        outputBuffer.replace <= replace @[cache.scala 178:30]
        outputBuffer.valid <= UInt<1>("h1") @[cache.scala 179:28]
        outputBuffer.from_MSHR <= inputBuffer.from_MSHR @[cache.scala 180:32]
        outReg <= UInt<1>("h1") @[cache.scala 182:15]
    else :
      node _T_7 = eq(UInt<1>("h1"), outReg) @[cache.scala 166:17]
      when _T_7 : @[cache.scala 166:17]
        readyOutputBuffer <= UInt<1>("h0") @[cache.scala 187:27]
        node _T_8 = eq(replaceBuffer.valid, UInt<1>("h0")) @[cache.scala 188:68]
        node _T_9 = and(io.cache_miss_out.fired, _T_8) @[cache.scala 188:65]
        node _T_10 = or(io.cache_hit_out.fired, _T_9) @[cache.scala 188:37]
        when _T_10 : @[cache.scala 188:90]
          outputBuffer.valid <= UInt<1>("h0") @[cache.scala 189:30]
          outReg <= UInt<1>("h0") @[cache.scala 190:18]
    node _T_11 = eq(UInt<1>("h0"), replreg) @[cache.scala 198:18]
    when _T_11 : @[cache.scala 198:18]
      node _T_12 = and(replace, cache_miss_write) @[cache.scala 200:20]
      when _T_12 : @[cache.scala 200:40]
        replreg <= UInt<1>("h1") @[cache.scala 201:17]
        node replaceBuffer_Mem_addr_hi = cat(cacheLineRead.tag[repl_way], index) @[Cat.scala 33:92]
        node _replaceBuffer_Mem_addr_T = cat(replaceBuffer_Mem_addr_hi, UInt<8>("h0")) @[Cat.scala 33:92]
        replaceBuffer.Mem_addr <= _replaceBuffer_Mem_addr_T @[cache.scala 202:32]
        replaceBuffer.data <= cacheLineRead.data[repl_way] @[cache.scala 203:28]
        replaceBuffer.valid <= UInt<1>("h1") @[cache.scala 204:29]
    else :
      node _T_13 = eq(UInt<1>("h1"), replreg) @[cache.scala 198:18]
      when _T_13 : @[cache.scala 198:18]
        node _T_14 = and(io.cache_miss_out.fired, replaceBuffer.valid) @[cache.scala 209:38]
        when _T_14 : @[cache.scala 209:61]
          replaceBuffer.valid <= UInt<1>("h0") @[cache.scala 210:31]
          replreg <= UInt<1>("h0") @[cache.scala 211:19]
    io.cache_hit_out.Rob_address <= outputBuffer.Rob_addr @[cache.scala 218:34]
    io.cache_hit_out.addr <= outputBuffer.Mem_addr @[cache.scala 219:27]
    io.cache_hit_out.is_R <= outputBuffer.is_R @[cache.scala 220:27]
    node _io_cache_hit_out_valid_T = and(outputBuffer.valid, outputBuffer.hit) @[cache.scala 221:50]
    io.cache_hit_out.valid <= _io_cache_hit_out_valid_T @[cache.scala 221:28]
    io.cache_hit_out.readData <= outputBuffer.data @[cache.scala 222:31]
    node _io_cache_hit_out_ready_T = and(outputBuffer.valid, outputBuffer.hit) @[cache.scala 224:50]
    io.cache_hit_out.ready <= _io_cache_hit_out_ready_T @[cache.scala 224:28]
    io.cache_miss_out.Rob_addr <= outputBuffer.Rob_addr @[cache.scala 229:32]
    node _io_cache_miss_out_Mem_addr_T = mux(replaceBuffer.valid, replaceBuffer.Mem_addr, outputBuffer.Mem_addr) @[cache.scala 230:38]
    io.cache_miss_out.Mem_addr <= _io_cache_miss_out_Mem_addr_T @[cache.scala 230:32]
    io.cache_miss_out.w_data <= outputBuffer.data @[cache.scala 231:30]
    io.cache_miss_out.is_R <= outputBuffer.is_R @[cache.scala 232:28]
    node _io_cache_miss_out_valid_T = eq(outputBuffer.hit, UInt<1>("h0")) @[cache.scala 233:55]
    node _io_cache_miss_out_valid_T_1 = and(outputBuffer.valid, _io_cache_miss_out_valid_T) @[cache.scala 233:52]
    io.cache_miss_out.valid <= _io_cache_miss_out_valid_T_1 @[cache.scala 233:29]
    io.cache_miss_out.replace <= replaceBuffer.valid @[cache.scala 234:31]
    io.cache_miss_out.rep_data <= replaceBuffer.data @[cache.scala 235:32]
    io.cache_miss_out.replaWire <= replace @[cache.scala 237:33]
    node _io_cache_miss_out_ready_T = eq(outputBuffer.hit, UInt<1>("h0")) @[cache.scala 239:55]
    node _io_cache_miss_out_ready_T_1 = and(outputBuffer.valid, _io_cache_miss_out_ready_T) @[cache.scala 239:52]
    node _io_cache_miss_out_ready_T_2 = or(_io_cache_miss_out_ready_T_1, replaceBuffer.valid) @[cache.scala 239:74]
    io.cache_miss_out.ready <= _io_cache_miss_out_ready_T_2 @[cache.scala 239:29]
    wire newCacheLine : { state : UInt<3>, valid : UInt<1>[4], tag : UInt<13>[4], data : UInt<512>[4][4], dirty : UInt<1>[4]} @[cache.scala 246:26]
    newCacheLine <= cacheLineRead @[cache.scala 247:16]
    node _T_15 = or(cache_hit_write, cache_miss_write) @[cache.scala 249:24]
    node _T_16 = or(_T_15, delay_MSHR_write) @[cache.scala 249:44]
    when _T_16 : @[cache.scala 249:65]
      node _T_17 = or(cache_hit_write, delay_MSHR_write) @[cache.scala 251:26]
      when _T_17 : @[cache.scala 251:46]
        when cache_hit_write : @[cache.scala 252:28]
          newCacheLine.data[matchedWay][offset] <= inputBuffer.data @[cache.scala 253:47]
        else :
          newCacheLine.data[matchedWay][offset] <= inputBuffer.R_data[offset] @[cache.scala 255:47]
        newCacheLine.dirty[matchedWay] <= UInt<1>("h1") @[cache.scala 257:38]
        newCacheLine.tag[matchedWay] <= tag @[cache.scala 258:36]
        newCacheLine.valid[matchedWay] <= UInt<1>("h1") @[cache.scala 259:38]
        node newCacheLine_state_touch_way_sized = bits(matchedWay, 1, 0) @[PseudoLRU.scala 19:13]
        node _newCacheLine_state_set_left_older_T = bits(newCacheLine_state_touch_way_sized, 1, 1) @[PseudoLRU.scala 88:43]
        node newCacheLine_state_set_left_older = eq(_newCacheLine_state_set_left_older_T, UInt<1>("h0")) @[PseudoLRU.scala 88:33]
        node newCacheLine_state_left_subtree_state = bits(cacheLineRead.state, 1, 1) @[PseudoLRU.scala 19:13]
        node newCacheLine_state_right_subtree_state = bits(cacheLineRead.state, 0, 0) @[PseudoLRU.scala 90:38]
        node _newCacheLine_state_T = bits(newCacheLine_state_touch_way_sized, 0, 0) @[PseudoLRU.scala 19:13]
        node _newCacheLine_state_T_1 = bits(_newCacheLine_state_T, 0, 0) @[PseudoLRU.scala 110:17]
        node _newCacheLine_state_T_2 = eq(_newCacheLine_state_T_1, UInt<1>("h0")) @[PseudoLRU.scala 110:7]
        node _newCacheLine_state_T_3 = mux(newCacheLine_state_set_left_older, newCacheLine_state_left_subtree_state, _newCacheLine_state_T_2) @[PseudoLRU.scala 95:16]
        node _newCacheLine_state_T_4 = bits(newCacheLine_state_touch_way_sized, 0, 0) @[PseudoLRU.scala 99:62]
        node _newCacheLine_state_T_5 = bits(_newCacheLine_state_T_4, 0, 0) @[PseudoLRU.scala 110:17]
        node _newCacheLine_state_T_6 = eq(_newCacheLine_state_T_5, UInt<1>("h0")) @[PseudoLRU.scala 110:7]
        node _newCacheLine_state_T_7 = mux(newCacheLine_state_set_left_older, _newCacheLine_state_T_6, newCacheLine_state_right_subtree_state) @[PseudoLRU.scala 98:16]
        node newCacheLine_state_hi = cat(newCacheLine_state_set_left_older, _newCacheLine_state_T_3) @[Cat.scala 33:92]
        node _newCacheLine_state_T_8 = cat(newCacheLine_state_hi, _newCacheLine_state_T_7) @[Cat.scala 33:92]
        newCacheLine.state <= _newCacheLine_state_T_8 @[cache.scala 260:26]
      else :
        node newCacheLine_state_touch_way_sized_1 = bits(repl_way, 1, 0) @[PseudoLRU.scala 19:13]
        node _newCacheLine_state_set_left_older_T_1 = bits(newCacheLine_state_touch_way_sized_1, 1, 1) @[PseudoLRU.scala 88:43]
        node newCacheLine_state_set_left_older_1 = eq(_newCacheLine_state_set_left_older_T_1, UInt<1>("h0")) @[PseudoLRU.scala 88:33]
        node newCacheLine_state_left_subtree_state_1 = bits(cacheLineRead.state, 1, 1) @[PseudoLRU.scala 19:13]
        node newCacheLine_state_right_subtree_state_1 = bits(cacheLineRead.state, 0, 0) @[PseudoLRU.scala 90:38]
        node _newCacheLine_state_T_9 = bits(newCacheLine_state_touch_way_sized_1, 0, 0) @[PseudoLRU.scala 19:13]
        node _newCacheLine_state_T_10 = bits(_newCacheLine_state_T_9, 0, 0) @[PseudoLRU.scala 110:17]
        node _newCacheLine_state_T_11 = eq(_newCacheLine_state_T_10, UInt<1>("h0")) @[PseudoLRU.scala 110:7]
        node _newCacheLine_state_T_12 = mux(newCacheLine_state_set_left_older_1, newCacheLine_state_left_subtree_state_1, _newCacheLine_state_T_11) @[PseudoLRU.scala 95:16]
        node _newCacheLine_state_T_13 = bits(newCacheLine_state_touch_way_sized_1, 0, 0) @[PseudoLRU.scala 99:62]
        node _newCacheLine_state_T_14 = bits(_newCacheLine_state_T_13, 0, 0) @[PseudoLRU.scala 110:17]
        node _newCacheLine_state_T_15 = eq(_newCacheLine_state_T_14, UInt<1>("h0")) @[PseudoLRU.scala 110:7]
        node _newCacheLine_state_T_16 = mux(newCacheLine_state_set_left_older_1, _newCacheLine_state_T_15, newCacheLine_state_right_subtree_state_1) @[PseudoLRU.scala 98:16]
        node newCacheLine_state_hi_1 = cat(newCacheLine_state_set_left_older_1, _newCacheLine_state_T_12) @[Cat.scala 33:92]
        node _newCacheLine_state_T_17 = cat(newCacheLine_state_hi_1, _newCacheLine_state_T_16) @[Cat.scala 33:92]
        newCacheLine.state <= _newCacheLine_state_T_17 @[cache.scala 262:26]
        newCacheLine.data[repl_way] <= inputBuffer.R_data @[cache.scala 263:35]
        newCacheLine.tag[repl_way] <= tag @[cache.scala 264:34]
        newCacheLine.valid[repl_way] <= UInt<1>("h1") @[cache.scala 265:36]
        node _T_18 = eq(inputBuffer.is_R, UInt<1>("h0")) @[cache.scala 266:12]
        when _T_18 : @[cache.scala 266:30]
          newCacheLine.dirty[repl_way] <= UInt<1>("h1") @[cache.scala 267:38]
        else :
          newCacheLine.dirty[repl_way] <= UInt<1>("h0") @[cache.scala 269:38]
      write mport MPORT_1 = mem[index], clock
      MPORT_1 <= newCacheLine

  module MSHR_Anon :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : { valid : UInt<1>, Mem_addr : UInt<32>, Rob_addr : UInt<3>, data : UInt<512>, is_R : UInt<1>}}, deq : { flip ready : UInt<1>, valid : UInt<1>, bits : { valid : UInt<1>, Mem_addr : UInt<32>, Rob_addr : UInt<3>, data : UInt<512>, is_R : UInt<1>}}}
    input loaded : UInt<1>

    cmem memReg : { valid : UInt<1>, Mem_addr : UInt<32>, Rob_addr : UInt<3>, data : UInt<512>, is_R : UInt<1>} [8] @[Fifo.scala 31:19]
    wire incrRead : UInt<1>
    incrRead <= UInt<1>("h0")
    wire incrWrite : UInt<1>
    incrWrite <= UInt<1>("h0")
    reg readPtr : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[Fifo.scala 22:26]
    node _nextVal_T = eq(readPtr, UInt<3>("h7")) @[Fifo.scala 23:30]
    node _nextVal_T_1 = add(readPtr, UInt<1>("h1")) @[Fifo.scala 23:60]
    node _nextVal_T_2 = tail(_nextVal_T_1, 1) @[Fifo.scala 23:60]
    node nextRead = mux(_nextVal_T, UInt<1>("h0"), _nextVal_T_2) @[Fifo.scala 23:22]
    when incrRead : @[Fifo.scala 24:17]
      readPtr <= nextRead @[Fifo.scala 25:14]
    reg writePtr : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[Fifo.scala 22:26]
    node _nextVal_T_3 = eq(writePtr, UInt<3>("h7")) @[Fifo.scala 23:30]
    node _nextVal_T_4 = add(writePtr, UInt<1>("h1")) @[Fifo.scala 23:60]
    node _nextVal_T_5 = tail(_nextVal_T_4, 1) @[Fifo.scala 23:60]
    node nextWrite = mux(_nextVal_T_3, UInt<1>("h0"), _nextVal_T_5) @[Fifo.scala 23:22]
    when incrWrite : @[Fifo.scala 24:17]
      writePtr <= nextWrite @[Fifo.scala 25:14]
    reg emptyReg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h1")) @[Fifo.scala 36:25]
    reg fullReg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Fifo.scala 37:24]
    node _T = and(io.deq.ready, io.deq.valid) @[Fifo.scala 40:21]
    node _T_1 = and(_T, io.enq.valid) @[Fifo.scala 40:37]
    node _T_2 = and(_T_1, io.enq.ready) @[Fifo.scala 40:53]
    when _T_2 : @[Fifo.scala 40:70]
      infer mport MPORT = memReg[writePtr], clock @[Fifo.scala 41:11]
      MPORT <= io.enq.bits @[Fifo.scala 41:22]
      incrWrite <= UInt<1>("h1") @[Fifo.scala 42:15]
      incrRead <= UInt<1>("h1") @[Fifo.scala 43:14]
    else :
      node _T_3 = and(io.enq.valid, io.enq.ready) @[Fifo.scala 44:27]
      when _T_3 : @[Fifo.scala 44:44]
        infer mport MPORT_1 = memReg[writePtr], clock @[Fifo.scala 45:11]
        MPORT_1 <= io.enq.bits @[Fifo.scala 45:22]
        emptyReg <= UInt<1>("h0") @[Fifo.scala 46:14]
        node _fullReg_T = eq(nextWrite, readPtr) @[Fifo.scala 47:26]
        fullReg <= _fullReg_T @[Fifo.scala 47:13]
        incrWrite <= UInt<1>("h1") @[Fifo.scala 48:15]
      else :
        node _T_4 = and(io.deq.ready, io.deq.valid) @[Fifo.scala 49:27]
        when _T_4 : @[Fifo.scala 49:44]
          fullReg <= UInt<1>("h0") @[Fifo.scala 50:13]
          node _emptyReg_T = eq(nextRead, writePtr) @[Fifo.scala 51:26]
          emptyReg <= _emptyReg_T @[Fifo.scala 51:14]
          incrRead <= UInt<1>("h1") @[Fifo.scala 52:14]
    infer mport io_deq_bits_MPORT = memReg[readPtr], clock @[Fifo.scala 55:24]
    io.deq.bits <= io_deq_bits_MPORT @[Fifo.scala 55:15]
    node _io_enq_ready_T = eq(fullReg, UInt<1>("h0")) @[Fifo.scala 56:19]
    node _io_enq_ready_T_1 = and(io.deq.valid, io.deq.ready) @[Fifo.scala 56:44]
    node _io_enq_ready_T_2 = or(_io_enq_ready_T, _io_enq_ready_T_1) @[Fifo.scala 56:28]
    io.enq.ready <= _io_enq_ready_T_2 @[Fifo.scala 56:16]
    node _io_deq_valid_T = eq(emptyReg, UInt<1>("h0")) @[Fifo.scala 57:19]
    io.deq.valid <= _io_deq_valid_T @[Fifo.scala 57:16]
    when loaded : @[MSHR.scala 32:21]
      infer mport MPORT_2 = memReg[readPtr], clock @[MSHR.scala 33:19]
      MPORT_2.valid <= UInt<1>("h1") @[MSHR.scala 33:35]

  module MSHR :
    input clock : Clock
    input reset : Reset
    output io : { flip axi : { flip ARADDR : UInt<32>, flip ARID : UInt<2>, flip ARVALID : UInt<1>, ARREADY : UInt<1>, flip ARLEN : UInt<4>, flip ARSIZE : UInt<3>, flip ARBURST : UInt<2>, flip ARLOCK : UInt<2>, flip ARCACHE : UInt<4>, flip ARPROT : UInt<3>, flip ARQOS : UInt<4>, RDATA : UInt<256>, RID : UInt<2>, RRESP : UInt<2>, flip RREADY : UInt<1>, RVALID : UInt<1>, RLAST : UInt<1>}, Mem_read_in : { ready : UInt<1>, flip fired : UInt<1>, flip Rob_addr : UInt<3>, flip Mem_addr : UInt<32>, flip W_data : UInt<512>, flip repl_hit : UInt<1>, flip valid : UInt<1>, flip repl_data : UInt<512>[4], flip is_R : UInt<1>}, Mem_read_out : { ready : UInt<1>, flip fired : UInt<1>, Rob_addr : UInt<3>, Mem_addr : UInt<32>, R_data : UInt<512>[4], valid : UInt<1>, is_R : UInt<1>}}

    inst enq_fifo of MSHR_Anon @[MSHR.scala 29:26]
    enq_fifo.clock <= clock
    enq_fifo.reset <= reset
    wire R_combined : UInt<512>[4] @[MSHR.scala 39:26]
    wire _temp_reg_WIRE : UInt<256>[8] @[MSHR.scala 40:35]
    _temp_reg_WIRE[0] <= UInt<256>("h0") @[MSHR.scala 40:35]
    _temp_reg_WIRE[1] <= UInt<256>("h0") @[MSHR.scala 40:35]
    _temp_reg_WIRE[2] <= UInt<256>("h0") @[MSHR.scala 40:35]
    _temp_reg_WIRE[3] <= UInt<256>("h0") @[MSHR.scala 40:35]
    _temp_reg_WIRE[4] <= UInt<256>("h0") @[MSHR.scala 40:35]
    _temp_reg_WIRE[5] <= UInt<256>("h0") @[MSHR.scala 40:35]
    _temp_reg_WIRE[6] <= UInt<256>("h0") @[MSHR.scala 40:35]
    _temp_reg_WIRE[7] <= UInt<256>("h0") @[MSHR.scala 40:35]
    reg temp_reg : UInt<256>[8], clock with :
      reset => (reset, _temp_reg_WIRE) @[MSHR.scala 40:27]
    node _R_combined_0_T = cat(temp_reg[1], temp_reg[0]) @[Cat.scala 33:92]
    R_combined[0] <= _R_combined_0_T @[MSHR.scala 43:23]
    node _R_combined_1_T = cat(temp_reg[3], temp_reg[2]) @[Cat.scala 33:92]
    R_combined[1] <= _R_combined_1_T @[MSHR.scala 43:23]
    node _R_combined_2_T = cat(temp_reg[5], temp_reg[4]) @[Cat.scala 33:92]
    R_combined[2] <= _R_combined_2_T @[MSHR.scala 43:23]
    node _R_combined_3_T = cat(temp_reg[7], temp_reg[6]) @[Cat.scala 33:92]
    R_combined[3] <= _R_combined_3_T @[MSHR.scala 43:23]
    node offset = bits(enq_fifo.io.deq.bits.Mem_addr, 7, 6) @[MSHR.scala 46:47]
    node _T = eq(enq_fifo.io.deq.bits.is_R, UInt<1>("h0")) @[MSHR.scala 48:10]
    when _T : @[MSHR.scala 48:37]
      R_combined[offset] <= io.Mem_read_in.W_data @[MSHR.scala 49:28]
    wire writeBufferhit_data : UInt<512>[4] @[MSHR.scala 53:35]
    writeBufferhit_data <= io.Mem_read_in.repl_data @[MSHR.scala 55:25]
    node _T_1 = eq(io.Mem_read_in.is_R, UInt<1>("h0")) @[MSHR.scala 57:10]
    when _T_1 : @[MSHR.scala 57:31]
      writeBufferhit_data[offset] <= io.Mem_read_in.W_data @[MSHR.scala 58:37]
    io.Mem_read_in.ready <= enq_fifo.io.enq.ready @[MSHR.scala 62:26]
    enq_fifo.io.enq.bits.valid <= UInt<1>("h0") @[MSHR.scala 63:32]
    enq_fifo.io.enq.bits.Mem_addr <= io.Mem_read_in.Mem_addr @[MSHR.scala 64:35]
    enq_fifo.io.enq.bits.Rob_addr <= io.Mem_read_in.Rob_addr @[MSHR.scala 65:35]
    enq_fifo.io.enq.bits.data <= io.Mem_read_in.W_data @[MSHR.scala 66:31]
    enq_fifo.io.enq.bits.is_R <= io.Mem_read_in.is_R @[MSHR.scala 67:31]
    node _T_2 = eq(io.Mem_read_in.repl_hit, UInt<1>("h0")) @[MSHR.scala 73:34]
    node _T_3 = and(io.Mem_read_in.fired, _T_2) @[MSHR.scala 73:31]
    when _T_3 : @[MSHR.scala 73:59]
      enq_fifo.io.enq.valid <= UInt<1>("h1") @[MSHR.scala 74:31]
    else :
      enq_fifo.io.enq.valid <= UInt<1>("h0") @[MSHR.scala 76:31]
    reg state : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[MSHR.scala 85:24]
    reg axi_RDATA_counter : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[MSHR.scala 88:36]
    node _next_axi_RDATA_counter_T = eq(axi_RDATA_counter, io.axi.ARLEN) @[MSHR.scala 89:56]
    node _next_axi_RDATA_counter_T_1 = add(axi_RDATA_counter, UInt<1>("h1")) @[MSHR.scala 89:97]
    node _next_axi_RDATA_counter_T_2 = tail(_next_axi_RDATA_counter_T_1, 1) @[MSHR.scala 89:97]
    node next_axi_RDATA_counter = mux(_next_axi_RDATA_counter_T, UInt<1>("h0"), _next_axi_RDATA_counter_T_2) @[MSHR.scala 89:37]
    node _io_axi_ARVALID_T = eq(state, UInt<1>("h0")) @[MSHR.scala 93:29]
    node _io_axi_ARVALID_T_1 = and(_io_axi_ARVALID_T, enq_fifo.io.deq.valid) @[MSHR.scala 93:39]
    node _io_axi_ARVALID_T_2 = eq(enq_fifo.io.deq.bits.valid, UInt<1>("h0")) @[MSHR.scala 93:67]
    node _io_axi_ARVALID_T_3 = and(_io_axi_ARVALID_T_1, _io_axi_ARVALID_T_2) @[MSHR.scala 93:64]
    io.axi.ARVALID <= _io_axi_ARVALID_T_3 @[MSHR.scala 93:20]
    io.axi.ARADDR <= enq_fifo.io.deq.bits.Mem_addr @[MSHR.scala 94:19]
    io.axi.ARID <= UInt<1>("h0") @[MSHR.scala 95:17]
    io.axi.ARLEN <= UInt<3>("h7") @[MSHR.scala 96:18]
    io.axi.ARSIZE <= UInt<3>("h5") @[MSHR.scala 97:19]
    io.axi.ARBURST <= UInt<1>("h1") @[MSHR.scala 98:20]
    io.axi.ARCACHE <= UInt<2>("h2") @[MSHR.scala 99:20]
    io.axi.ARLOCK <= UInt<1>("h0") @[MSHR.scala 100:19]
    io.axi.ARPROT <= UInt<1>("h0") @[MSHR.scala 101:19]
    io.axi.ARQOS <= UInt<1>("h0") @[MSHR.scala 102:18]
    node _io_axi_RREADY_T = eq(state, UInt<1>("h1")) @[MSHR.scala 105:28]
    io.axi.RREADY <= _io_axi_RREADY_T @[MSHR.scala 105:19]
    enq_fifo.loaded <= UInt<1>("h0") @[MSHR.scala 108:21]
    node _T_4 = eq(UInt<1>("h0"), state) @[MSHR.scala 110:18]
    when _T_4 : @[MSHR.scala 110:18]
      node _T_5 = and(io.axi.ARREADY, io.axi.ARVALID) @[MSHR.scala 112:33]
      when _T_5 : @[MSHR.scala 112:51]
        state <= UInt<1>("h1") @[MSHR.scala 113:23]
    else :
      node _T_6 = eq(UInt<1>("h1"), state) @[MSHR.scala 110:18]
      when _T_6 : @[MSHR.scala 110:18]
        node _T_7 = and(io.axi.RREADY, io.axi.RVALID) @[MSHR.scala 118:32]
        when _T_7 : @[MSHR.scala 118:49]
          axi_RDATA_counter <= next_axi_RDATA_counter @[MSHR.scala 119:35]
          temp_reg[axi_RDATA_counter] <= io.axi.RDATA @[MSHR.scala 120:45]
          when io.axi.RLAST : @[MSHR.scala 121:35]
            state <= UInt<1>("h0") @[MSHR.scala 122:27]
            enq_fifo.loaded <= UInt<1>("h1") @[MSHR.scala 123:37]
    node _T_8 = eq(io.Mem_read_in.repl_hit, UInt<1>("h0")) @[MSHR.scala 133:10]
    node _T_9 = and(_T_8, io.Mem_read_out.fired) @[MSHR.scala 133:35]
    when _T_9 : @[MSHR.scala 133:60]
      enq_fifo.io.deq.ready <= UInt<1>("h1") @[MSHR.scala 134:31]
    else :
      enq_fifo.io.deq.ready <= UInt<1>("h0") @[MSHR.scala 136:31]
    node _io_Mem_read_out_Rob_addr_T = mux(io.Mem_read_in.repl_hit, io.Mem_read_in.Rob_addr, enq_fifo.io.deq.bits.Rob_addr) @[MSHR.scala 140:36]
    io.Mem_read_out.Rob_addr <= _io_Mem_read_out_Rob_addr_T @[MSHR.scala 140:30]
    node _io_Mem_read_out_Mem_addr_T = mux(io.Mem_read_in.repl_hit, io.Mem_read_in.Mem_addr, enq_fifo.io.deq.bits.Mem_addr) @[MSHR.scala 141:36]
    io.Mem_read_out.Mem_addr <= _io_Mem_read_out_Mem_addr_T @[MSHR.scala 141:30]
    node _io_Mem_read_out_valid_T = mux(io.Mem_read_in.repl_hit, io.Mem_read_in.repl_hit, enq_fifo.io.deq.bits.valid) @[MSHR.scala 142:33]
    io.Mem_read_out.valid <= _io_Mem_read_out_valid_T @[MSHR.scala 142:27]
    node _T_10 = mux(io.Mem_read_in.repl_hit, writeBufferhit_data, R_combined) @[MSHR.scala 143:34]
    io.Mem_read_out.R_data <= _T_10 @[MSHR.scala 143:28]
    node _io_Mem_read_out_is_R_T = mux(io.Mem_read_in.repl_hit, io.Mem_read_in.is_R, enq_fifo.io.deq.bits.is_R) @[MSHR.scala 144:32]
    io.Mem_read_out.is_R <= _io_Mem_read_out_is_R_T @[MSHR.scala 144:26]
    node _io_Mem_read_out_ready_T = and(enq_fifo.io.deq.valid, enq_fifo.io.deq.bits.valid) @[MSHR.scala 146:80]
    node _io_Mem_read_out_ready_T_1 = or(io.Mem_read_in.repl_hit, _io_Mem_read_out_ready_T) @[MSHR.scala 146:54]
    io.Mem_read_out.ready <= _io_Mem_read_out_ready_T_1 @[MSHR.scala 146:27]

  module writeBackBuffer_Anon :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : { Mem_addr : UInt<32>, data : UInt<512>[4], valid : UInt<1>}}, deq : { flip ready : UInt<1>, valid : UInt<1>, bits : { Mem_addr : UInt<32>, data : UInt<512>[4], valid : UInt<1>}}}
    output port : { flip addr : UInt<32>, repl_hit : UInt<1>, data : UInt<512>[4]}
    input loaded : UInt<1>

    cmem memReg : { Mem_addr : UInt<32>, data : UInt<512>[4], valid : UInt<1>} [3] @[Fifo.scala 31:19]
    wire incrRead : UInt<1>
    incrRead <= UInt<1>("h0")
    wire incrWrite : UInt<1>
    incrWrite <= UInt<1>("h0")
    reg readPtr : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[Fifo.scala 22:26]
    node _nextVal_T = eq(readPtr, UInt<2>("h2")) @[Fifo.scala 23:30]
    node _nextVal_T_1 = add(readPtr, UInt<1>("h1")) @[Fifo.scala 23:60]
    node _nextVal_T_2 = tail(_nextVal_T_1, 1) @[Fifo.scala 23:60]
    node nextRead = mux(_nextVal_T, UInt<1>("h0"), _nextVal_T_2) @[Fifo.scala 23:22]
    when incrRead : @[Fifo.scala 24:17]
      readPtr <= nextRead @[Fifo.scala 25:14]
    reg writePtr : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[Fifo.scala 22:26]
    node _nextVal_T_3 = eq(writePtr, UInt<2>("h2")) @[Fifo.scala 23:30]
    node _nextVal_T_4 = add(writePtr, UInt<1>("h1")) @[Fifo.scala 23:60]
    node _nextVal_T_5 = tail(_nextVal_T_4, 1) @[Fifo.scala 23:60]
    node nextWrite = mux(_nextVal_T_3, UInt<1>("h0"), _nextVal_T_5) @[Fifo.scala 23:22]
    when incrWrite : @[Fifo.scala 24:17]
      writePtr <= nextWrite @[Fifo.scala 25:14]
    reg emptyReg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h1")) @[Fifo.scala 36:25]
    reg fullReg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Fifo.scala 37:24]
    node _T = and(io.deq.ready, io.deq.valid) @[Fifo.scala 40:21]
    node _T_1 = and(_T, io.enq.valid) @[Fifo.scala 40:37]
    node _T_2 = and(_T_1, io.enq.ready) @[Fifo.scala 40:53]
    when _T_2 : @[Fifo.scala 40:70]
      infer mport MPORT = memReg[writePtr], clock @[Fifo.scala 41:11]
      MPORT <= io.enq.bits @[Fifo.scala 41:22]
      incrWrite <= UInt<1>("h1") @[Fifo.scala 42:15]
      incrRead <= UInt<1>("h1") @[Fifo.scala 43:14]
    else :
      node _T_3 = and(io.enq.valid, io.enq.ready) @[Fifo.scala 44:27]
      when _T_3 : @[Fifo.scala 44:44]
        infer mport MPORT_1 = memReg[writePtr], clock @[Fifo.scala 45:11]
        MPORT_1 <= io.enq.bits @[Fifo.scala 45:22]
        emptyReg <= UInt<1>("h0") @[Fifo.scala 46:14]
        node _fullReg_T = eq(nextWrite, readPtr) @[Fifo.scala 47:26]
        fullReg <= _fullReg_T @[Fifo.scala 47:13]
        incrWrite <= UInt<1>("h1") @[Fifo.scala 48:15]
      else :
        node _T_4 = and(io.deq.ready, io.deq.valid) @[Fifo.scala 49:27]
        when _T_4 : @[Fifo.scala 49:44]
          fullReg <= UInt<1>("h0") @[Fifo.scala 50:13]
          node _emptyReg_T = eq(nextRead, writePtr) @[Fifo.scala 51:26]
          emptyReg <= _emptyReg_T @[Fifo.scala 51:14]
          incrRead <= UInt<1>("h1") @[Fifo.scala 52:14]
    infer mport io_deq_bits_MPORT = memReg[readPtr], clock @[Fifo.scala 55:24]
    io.deq.bits <= io_deq_bits_MPORT @[Fifo.scala 55:15]
    node _io_enq_ready_T = eq(fullReg, UInt<1>("h0")) @[Fifo.scala 56:19]
    node _io_enq_ready_T_1 = and(io.deq.valid, io.deq.ready) @[Fifo.scala 56:44]
    node _io_enq_ready_T_2 = or(_io_enq_ready_T, _io_enq_ready_T_1) @[Fifo.scala 56:28]
    io.enq.ready <= _io_enq_ready_T_2 @[Fifo.scala 56:16]
    node _io_deq_valid_T = eq(emptyReg, UInt<1>("h0")) @[Fifo.scala 57:19]
    io.deq.valid <= _io_deq_valid_T @[Fifo.scala 57:16]
    port.repl_hit <= UInt<1>("h0") @[writeBackBuffer.scala 44:23]
    wire _WIRE : UInt<512>[4] @[writeBackBuffer.scala 45:29]
    _WIRE[0] <= UInt<512>("h0") @[writeBackBuffer.scala 45:29]
    _WIRE[1] <= UInt<512>("h0") @[writeBackBuffer.scala 45:29]
    _WIRE[2] <= UInt<512>("h0") @[writeBackBuffer.scala 45:29]
    _WIRE[3] <= UInt<512>("h0") @[writeBackBuffer.scala 45:29]
    port.data <= _WIRE @[writeBackBuffer.scala 45:19]
    infer mport MPORT_2 = memReg[UInt<1>("h0")], clock @[writeBackBuffer.scala 48:24]
    infer mport MPORT_3 = memReg[UInt<1>("h0")], clock @[writeBackBuffer.scala 48:43]
    node _T_5 = eq(MPORT_3.Mem_addr, port.addr) @[writeBackBuffer.scala 48:55]
    node _T_6 = and(MPORT_2.valid, _T_5) @[writeBackBuffer.scala 48:34]
    when _T_6 : @[writeBackBuffer.scala 48:69]
      port.repl_hit <= UInt<1>("h1") @[writeBackBuffer.scala 49:31]
      infer mport MPORT_4 = memReg[UInt<1>("h0")], clock @[writeBackBuffer.scala 50:36]
      port.data <= MPORT_4.data @[writeBackBuffer.scala 50:27]
    infer mport MPORT_5 = memReg[UInt<1>("h1")], clock @[writeBackBuffer.scala 48:24]
    infer mport MPORT_6 = memReg[UInt<1>("h1")], clock @[writeBackBuffer.scala 48:43]
    node _T_7 = eq(MPORT_6.Mem_addr, port.addr) @[writeBackBuffer.scala 48:55]
    node _T_8 = and(MPORT_5.valid, _T_7) @[writeBackBuffer.scala 48:34]
    when _T_8 : @[writeBackBuffer.scala 48:69]
      port.repl_hit <= UInt<1>("h1") @[writeBackBuffer.scala 49:31]
      infer mport MPORT_7 = memReg[UInt<1>("h1")], clock @[writeBackBuffer.scala 50:36]
      port.data <= MPORT_7.data @[writeBackBuffer.scala 50:27]
    infer mport MPORT_8 = memReg[UInt<2>("h2")], clock @[writeBackBuffer.scala 48:24]
    infer mport MPORT_9 = memReg[UInt<2>("h2")], clock @[writeBackBuffer.scala 48:43]
    node _T_9 = eq(MPORT_9.Mem_addr, port.addr) @[writeBackBuffer.scala 48:55]
    node _T_10 = and(MPORT_8.valid, _T_9) @[writeBackBuffer.scala 48:34]
    when _T_10 : @[writeBackBuffer.scala 48:69]
      port.repl_hit <= UInt<1>("h1") @[writeBackBuffer.scala 49:31]
      infer mport MPORT_10 = memReg[UInt<2>("h2")], clock @[writeBackBuffer.scala 50:36]
      port.data <= MPORT_10.data @[writeBackBuffer.scala 50:27]
    when loaded : @[writeBackBuffer.scala 54:21]
      infer mport MPORT_11 = memReg[readPtr], clock @[writeBackBuffer.scala 55:19]
      MPORT_11.valid <= UInt<1>("h0") @[writeBackBuffer.scala 55:35]

  module writeBackBuffer :
    input clock : Clock
    input reset : Reset
    output io : { replace_in : { ready : UInt<1>, flip fired : UInt<1>, flip Mem_addr : UInt<32>, flip data : UInt<512>[4]}, flip axi : { flip AWADDR : UInt<32>, AWREADY : UInt<1>, flip AWVALID : UInt<1>, flip AWLEN : UInt<4>, flip AWCACHE : UInt<4>, flip AWSIZE : UInt<3>, flip AWLOCK : UInt<2>, flip AWPROT : UInt<3>, flip AWQOS : UInt<4>, flip AWBURST : UInt<2>, flip AWID : UInt<2>, flip WDATA : UInt<256>, WREADY : UInt<1>, flip WVALID : UInt<1>, flip WSTRB : UInt<32>, flip WLAST : UInt<1>, flip BREADY : UInt<1>, BVALID : UInt<1>, BRESP : UInt<1>, BID : UInt<1>}, flip miss_address : UInt<32>, miss_out : { repl_hit : UInt<1>, data : UInt<512>[4]}, repl_finish : UInt<1>}

    reg state : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[writeBackBuffer.scala 27:24]
    reg axi_WDATA_counter : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[writeBackBuffer.scala 29:36]
    node _next_axi_WDATA_counter_T = eq(axi_WDATA_counter, io.axi.AWLEN) @[writeBackBuffer.scala 30:56]
    node _next_axi_WDATA_counter_T_1 = add(axi_WDATA_counter, UInt<1>("h1")) @[writeBackBuffer.scala 30:97]
    node _next_axi_WDATA_counter_T_2 = tail(_next_axi_WDATA_counter_T_1, 1) @[writeBackBuffer.scala 30:97]
    node next_axi_WDATA_counter = mux(_next_axi_WDATA_counter_T, UInt<1>("h0"), _next_axi_WDATA_counter_T_2) @[writeBackBuffer.scala 30:37]
    wire w_data_wire : UInt<256>[8] @[writeBackBuffer.scala 32:27]
    inst fifo of writeBackBuffer_Anon @[writeBackBuffer.scala 34:22]
    fifo.clock <= clock
    fifo.reset <= reset
    node _w_data_wire_0_T = bits(fifo.io.deq.bits.data[0], 255, 0) @[writeBackBuffer.scala 60:53]
    w_data_wire[0] <= _w_data_wire_0_T @[writeBackBuffer.scala 60:26]
    node _w_data_wire_1_T = bits(fifo.io.deq.bits.data[0], 511, 256) @[writeBackBuffer.scala 61:55]
    w_data_wire[1] <= _w_data_wire_1_T @[writeBackBuffer.scala 61:28]
    node _w_data_wire_2_T = bits(fifo.io.deq.bits.data[1], 255, 0) @[writeBackBuffer.scala 60:53]
    w_data_wire[2] <= _w_data_wire_2_T @[writeBackBuffer.scala 60:26]
    node _w_data_wire_3_T = bits(fifo.io.deq.bits.data[1], 511, 256) @[writeBackBuffer.scala 61:55]
    w_data_wire[3] <= _w_data_wire_3_T @[writeBackBuffer.scala 61:28]
    node _w_data_wire_4_T = bits(fifo.io.deq.bits.data[2], 255, 0) @[writeBackBuffer.scala 60:53]
    w_data_wire[4] <= _w_data_wire_4_T @[writeBackBuffer.scala 60:26]
    node _w_data_wire_5_T = bits(fifo.io.deq.bits.data[2], 511, 256) @[writeBackBuffer.scala 61:55]
    w_data_wire[5] <= _w_data_wire_5_T @[writeBackBuffer.scala 61:28]
    node _w_data_wire_6_T = bits(fifo.io.deq.bits.data[3], 255, 0) @[writeBackBuffer.scala 60:53]
    w_data_wire[6] <= _w_data_wire_6_T @[writeBackBuffer.scala 60:26]
    node _w_data_wire_7_T = bits(fifo.io.deq.bits.data[3], 511, 256) @[writeBackBuffer.scala 61:55]
    w_data_wire[7] <= _w_data_wire_7_T @[writeBackBuffer.scala 61:28]
    when io.replace_in.fired : @[writeBackBuffer.scala 65:30]
      fifo.io.enq.valid <= UInt<1>("h1") @[writeBackBuffer.scala 66:27]
    else :
      fifo.io.enq.valid <= UInt<1>("h0") @[writeBackBuffer.scala 68:27]
    io.replace_in.ready <= fifo.io.enq.ready @[writeBackBuffer.scala 71:25]
    fifo.io.enq.bits.Mem_addr <= io.replace_in.Mem_addr @[writeBackBuffer.scala 72:31]
    fifo.io.enq.bits.data[0] <= io.replace_in.data[0] @[writeBackBuffer.scala 73:27]
    fifo.io.enq.bits.data[1] <= io.replace_in.data[1] @[writeBackBuffer.scala 73:27]
    fifo.io.enq.bits.data[2] <= io.replace_in.data[2] @[writeBackBuffer.scala 73:27]
    fifo.io.enq.bits.data[3] <= io.replace_in.data[3] @[writeBackBuffer.scala 73:27]
    fifo.io.enq.bits.valid <= UInt<1>("h1") @[writeBackBuffer.scala 74:28]
    node _io_axi_AWVALID_T = eq(state, UInt<2>("h0")) @[writeBackBuffer.scala 77:29]
    node _io_axi_AWVALID_T_1 = and(_io_axi_AWVALID_T, fifo.io.deq.valid) @[writeBackBuffer.scala 77:38]
    io.axi.AWVALID <= _io_axi_AWVALID_T_1 @[writeBackBuffer.scala 77:20]
    io.axi.AWADDR <= fifo.io.deq.bits.Mem_addr @[writeBackBuffer.scala 78:19]
    io.axi.AWID <= UInt<1>("h0") @[writeBackBuffer.scala 79:17]
    io.axi.AWLEN <= UInt<3>("h7") @[writeBackBuffer.scala 80:18]
    io.axi.AWSIZE <= UInt<3>("h5") @[writeBackBuffer.scala 81:19]
    io.axi.AWCACHE <= UInt<2>("h2") @[writeBackBuffer.scala 82:20]
    io.axi.AWLOCK <= UInt<1>("h0") @[writeBackBuffer.scala 83:19]
    io.axi.AWPROT <= UInt<1>("h0") @[writeBackBuffer.scala 84:19]
    io.axi.AWQOS <= UInt<1>("h0") @[writeBackBuffer.scala 85:18]
    io.axi.AWBURST <= UInt<1>("h1") @[writeBackBuffer.scala 86:20]
    node _io_axi_WVALID_T = eq(state, UInt<2>("h1")) @[writeBackBuffer.scala 88:28]
    io.axi.WVALID <= _io_axi_WVALID_T @[writeBackBuffer.scala 88:19]
    io.axi.WDATA <= w_data_wire[axi_WDATA_counter] @[writeBackBuffer.scala 89:18]
    node _io_axi_WLAST_T = eq(axi_WDATA_counter, io.axi.AWLEN) @[writeBackBuffer.scala 90:39]
    io.axi.WLAST <= _io_axi_WLAST_T @[writeBackBuffer.scala 90:18]
    io.axi.WSTRB <= UInt<8>("hff") @[writeBackBuffer.scala 91:18]
    node _io_axi_BREADY_T = eq(state, UInt<2>("h2")) @[writeBackBuffer.scala 93:28]
    io.axi.BREADY <= _io_axi_BREADY_T @[writeBackBuffer.scala 93:19]
    fifo.io.deq.ready <= UInt<1>("h0") @[writeBackBuffer.scala 96:23]
    fifo.loaded <= UInt<1>("h0") @[writeBackBuffer.scala 97:17]
    io.repl_finish <= UInt<1>("h0") @[writeBackBuffer.scala 98:20]
    node _T = eq(UInt<2>("h0"), state) @[writeBackBuffer.scala 101:18]
    when _T : @[writeBackBuffer.scala 101:18]
      node _T_1 = and(io.axi.AWREADY, io.axi.AWVALID) @[writeBackBuffer.scala 103:33]
      when _T_1 : @[writeBackBuffer.scala 103:51]
        state <= UInt<2>("h1") @[writeBackBuffer.scala 104:23]
    else :
      node _T_2 = eq(UInt<2>("h1"), state) @[writeBackBuffer.scala 101:18]
      when _T_2 : @[writeBackBuffer.scala 101:18]
        node _T_3 = and(io.axi.WREADY, io.axi.WVALID) @[writeBackBuffer.scala 110:32]
        when _T_3 : @[writeBackBuffer.scala 110:49]
          axi_WDATA_counter <= next_axi_WDATA_counter @[writeBackBuffer.scala 111:35]
          when io.axi.WLAST : @[writeBackBuffer.scala 112:35]
            state <= UInt<2>("h2") @[writeBackBuffer.scala 113:27]
      else :
        node _T_4 = eq(UInt<2>("h2"), state) @[writeBackBuffer.scala 101:18]
        when _T_4 : @[writeBackBuffer.scala 101:18]
          node _T_5 = and(io.axi.BREADY, io.axi.BVALID) @[writeBackBuffer.scala 120:32]
          when _T_5 : @[writeBackBuffer.scala 120:49]
            state <= UInt<2>("h0") @[writeBackBuffer.scala 121:23]
            fifo.io.deq.ready <= UInt<1>("h1") @[writeBackBuffer.scala 122:35]
            fifo.loaded <= UInt<1>("h1") @[writeBackBuffer.scala 123:29]
            io.repl_finish <= UInt<1>("h1") @[writeBackBuffer.scala 124:32]
    fifo.port.addr <= io.miss_address @[writeBackBuffer.scala 131:20]
    io.miss_out.repl_hit <= fifo.port.repl_hit @[writeBackBuffer.scala 132:26]
    io.miss_out.data <= fifo.port.data @[writeBackBuffer.scala 133:22]

  module l2_mem :
    input clock : Clock
    input reset : Reset
    output io : { cache_axi : { flip ARADDR : UInt<32>, flip ARVALID : UInt<1>, ARREADY : UInt<1>, flip ARLEN : UInt<4>, flip ARID : UInt<2>, RDATA : UInt<64>, flip RREADY : UInt<1>, RVALID : UInt<1>, RID : UInt<2>, RRESP : UInt<2>, RLAST : UInt<1>, flip AWADDR : UInt<32>, AWREADY : UInt<1>, flip AWVALID : UInt<1>, flip AWLEN : UInt<4>, flip AWID : UInt<2>, flip WDATA : UInt<64>, WREADY : UInt<1>, flip WVALID : UInt<1>, flip WLAST : UInt<1>, flip BREADY : UInt<1>, BVALID : UInt<1>, BRESP : UInt<1>, BID : UInt<1>}, flip mem_read_axi : { flip ARADDR : UInt<32>, flip ARID : UInt<2>, flip ARVALID : UInt<1>, ARREADY : UInt<1>, flip ARLEN : UInt<4>, flip ARSIZE : UInt<3>, flip ARBURST : UInt<2>, flip ARLOCK : UInt<2>, flip ARCACHE : UInt<4>, flip ARPROT : UInt<3>, flip ARQOS : UInt<4>, RDATA : UInt<256>, RID : UInt<2>, RRESP : UInt<2>, flip RREADY : UInt<1>, RVALID : UInt<1>, RLAST : UInt<1>}, flip mem_write_axi : { flip AWADDR : UInt<32>, AWREADY : UInt<1>, flip AWVALID : UInt<1>, flip AWLEN : UInt<4>, flip AWCACHE : UInt<4>, flip AWSIZE : UInt<3>, flip AWLOCK : UInt<2>, flip AWPROT : UInt<3>, flip AWQOS : UInt<4>, flip AWBURST : UInt<2>, flip AWID : UInt<2>, flip WDATA : UInt<256>, WREADY : UInt<1>, flip WVALID : UInt<1>, flip WSTRB : UInt<32>, flip WLAST : UInt<1>, flip BREADY : UInt<1>, BVALID : UInt<1>, BRESP : UInt<1>, BID : UInt<1>}}

    inst l2_front_Rob of l2_Rob @[l2.scala 18:28]
    l2_front_Rob.clock <= clock
    l2_front_Rob.reset <= reset
    inst cache of Memory @[l2.scala 21:22]
    cache.clock <= clock
    cache.reset <= reset
    inst MSHR of MSHR @[l2.scala 24:20]
    MSHR.clock <= clock
    MSHR.reset <= reset
    inst writeBackBuffer of writeBackBuffer @[l2.scala 27:31]
    writeBackBuffer.clock <= clock
    writeBackBuffer.reset <= reset
    io.cache_axi.BID <= l2_front_Rob.io.axi.BID @[l2.scala 31:16]
    io.cache_axi.BRESP <= l2_front_Rob.io.axi.BRESP @[l2.scala 31:16]
    io.cache_axi.BVALID <= l2_front_Rob.io.axi.BVALID @[l2.scala 31:16]
    l2_front_Rob.io.axi.BREADY <= io.cache_axi.BREADY @[l2.scala 31:16]
    l2_front_Rob.io.axi.WLAST <= io.cache_axi.WLAST @[l2.scala 31:16]
    l2_front_Rob.io.axi.WVALID <= io.cache_axi.WVALID @[l2.scala 31:16]
    io.cache_axi.WREADY <= l2_front_Rob.io.axi.WREADY @[l2.scala 31:16]
    l2_front_Rob.io.axi.WDATA <= io.cache_axi.WDATA @[l2.scala 31:16]
    l2_front_Rob.io.axi.AWID <= io.cache_axi.AWID @[l2.scala 31:16]
    l2_front_Rob.io.axi.AWLEN <= io.cache_axi.AWLEN @[l2.scala 31:16]
    l2_front_Rob.io.axi.AWVALID <= io.cache_axi.AWVALID @[l2.scala 31:16]
    io.cache_axi.AWREADY <= l2_front_Rob.io.axi.AWREADY @[l2.scala 31:16]
    l2_front_Rob.io.axi.AWADDR <= io.cache_axi.AWADDR @[l2.scala 31:16]
    io.cache_axi.RLAST <= l2_front_Rob.io.axi.RLAST @[l2.scala 31:16]
    io.cache_axi.RRESP <= l2_front_Rob.io.axi.RRESP @[l2.scala 31:16]
    io.cache_axi.RID <= l2_front_Rob.io.axi.RID @[l2.scala 31:16]
    io.cache_axi.RVALID <= l2_front_Rob.io.axi.RVALID @[l2.scala 31:16]
    l2_front_Rob.io.axi.RREADY <= io.cache_axi.RREADY @[l2.scala 31:16]
    io.cache_axi.RDATA <= l2_front_Rob.io.axi.RDATA @[l2.scala 31:16]
    l2_front_Rob.io.axi.ARID <= io.cache_axi.ARID @[l2.scala 31:16]
    l2_front_Rob.io.axi.ARLEN <= io.cache_axi.ARLEN @[l2.scala 31:16]
    io.cache_axi.ARREADY <= l2_front_Rob.io.axi.ARREADY @[l2.scala 31:16]
    l2_front_Rob.io.axi.ARVALID <= io.cache_axi.ARVALID @[l2.scala 31:16]
    l2_front_Rob.io.axi.ARADDR <= io.cache_axi.ARADDR @[l2.scala 31:16]
    MSHR.io.axi <= io.mem_read_axi @[l2.scala 34:19]
    writeBackBuffer.io.axi <= io.mem_write_axi @[l2.scala 36:20]
    reg count : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[l2.scala 38:22]
    reg replace_count : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[l2.scala 39:30]
    when cache.io.cache_miss_out.replaWire : @[l2.scala 41:42]
      node _replace_count_T = add(replace_count, UInt<1>("h1")) @[l2.scala 42:36]
      node _replace_count_T_1 = tail(_replace_count_T, 1) @[l2.scala 42:36]
      replace_count <= _replace_count_T_1 @[l2.scala 42:19]
    else :
      when writeBackBuffer.io.repl_finish : @[l2.scala 43:45]
        node _replace_count_T_2 = sub(replace_count, UInt<1>("h1")) @[l2.scala 44:36]
        node _replace_count_T_3 = tail(_replace_count_T_2, 1) @[l2.scala 44:36]
        replace_count <= _replace_count_T_3 @[l2.scala 44:19]
    node _replace_full_T = bits(replace_count, 0, 0) @[l2.scala 49:36]
    node _replace_full_T_1 = bits(replace_count, 1, 1) @[l2.scala 49:36]
    node replace_full = and(_replace_full_T, _replace_full_T_1) @[l2.scala 49:53]
    node _count_T = eq(count, UInt<2>("h2")) @[l2.scala 52:21]
    node _count_T_1 = add(count, UInt<1>("h1")) @[l2.scala 52:40]
    node _count_T_2 = tail(_count_T_1, 1) @[l2.scala 52:40]
    node _count_T_3 = mux(_count_T, UInt<1>("h0"), _count_T_2) @[l2.scala 52:15]
    count <= _count_T_3 @[l2.scala 52:9]
    node _cache_io_cache_in_Rob_address_T = mux(MSHR.io.Mem_read_out.ready, MSHR.io.Mem_read_out.Rob_addr, l2_front_Rob.io.Rob_out.Rob_address) @[l2.scala 57:39]
    cache.io.cache_in.Rob_address <= _cache_io_cache_in_Rob_address_T @[l2.scala 57:33]
    node _cache_io_cache_in_addr_T = mux(MSHR.io.Mem_read_out.ready, MSHR.io.Mem_read_out.Mem_addr, l2_front_Rob.io.Rob_out.Mem_address) @[l2.scala 58:32]
    cache.io.cache_in.addr <= _cache_io_cache_in_addr_T @[l2.scala 58:26]
    node _cache_io_cache_in_valid_T = mux(MSHR.io.Mem_read_out.ready, MSHR.io.Mem_read_out.valid, l2_front_Rob.io.Rob_out.valid) @[l2.scala 59:33]
    cache.io.cache_in.valid <= _cache_io_cache_in_valid_T @[l2.scala 59:27]
    node _cache_io_cache_in_is_R_T = mux(MSHR.io.Mem_read_out.ready, MSHR.io.Mem_read_out.is_R, l2_front_Rob.io.Rob_out.is_R) @[l2.scala 60:32]
    cache.io.cache_in.is_R <= _cache_io_cache_in_is_R_T @[l2.scala 60:26]
    cache.io.cache_in.data <= l2_front_Rob.io.Rob_out.data @[l2.scala 62:26]
    cache.io.cache_in.R_data[0] <= MSHR.io.Mem_read_out.R_data[0] @[l2.scala 63:28]
    cache.io.cache_in.R_data[1] <= MSHR.io.Mem_read_out.R_data[1] @[l2.scala 63:28]
    cache.io.cache_in.R_data[2] <= MSHR.io.Mem_read_out.R_data[2] @[l2.scala 63:28]
    cache.io.cache_in.R_data[3] <= MSHR.io.Mem_read_out.R_data[3] @[l2.scala 63:28]
    cache.io.cache_in.from_MSHR <= MSHR.io.Mem_read_out.ready @[l2.scala 64:31]
    node _l2_front_Rob_io_Rob_out_fired_T = and(l2_front_Rob.io.Rob_out.ready, cache.io.cache_in.ready) @[l2.scala 67:66]
    node _l2_front_Rob_io_Rob_out_fired_T_1 = eq(MSHR.io.Mem_read_out.ready, UInt<1>("h0")) @[l2.scala 67:96]
    node _l2_front_Rob_io_Rob_out_fired_T_2 = and(_l2_front_Rob_io_Rob_out_fired_T, _l2_front_Rob_io_Rob_out_fired_T_1) @[l2.scala 67:93]
    node _l2_front_Rob_io_Rob_out_fired_T_3 = eq(count, UInt<1>("h0")) @[l2.scala 67:133]
    node _l2_front_Rob_io_Rob_out_fired_T_4 = and(_l2_front_Rob_io_Rob_out_fired_T_2, _l2_front_Rob_io_Rob_out_fired_T_3) @[l2.scala 67:124]
    node _l2_front_Rob_io_Rob_out_fired_T_5 = eq(replace_full, UInt<1>("h0")) @[l2.scala 67:144]
    node _l2_front_Rob_io_Rob_out_fired_T_6 = and(_l2_front_Rob_io_Rob_out_fired_T_4, _l2_front_Rob_io_Rob_out_fired_T_5) @[l2.scala 67:141]
    l2_front_Rob.io.Rob_out.fired <= _l2_front_Rob_io_Rob_out_fired_T_6 @[l2.scala 67:33]
    node _MSHR_io_Mem_read_out_fired_T = and(cache.io.cache_in.ready, MSHR.io.Mem_read_out.ready) @[l2.scala 68:57]
    node _MSHR_io_Mem_read_out_fired_T_1 = eq(count, UInt<1>("h0")) @[l2.scala 68:95]
    node _MSHR_io_Mem_read_out_fired_T_2 = and(_MSHR_io_Mem_read_out_fired_T, _MSHR_io_Mem_read_out_fired_T_1) @[l2.scala 68:87]
    MSHR.io.Mem_read_out.fired <= _MSHR_io_Mem_read_out_fired_T_2 @[l2.scala 68:30]
    node _cache_io_cache_in_fired_T = eq(replace_full, UInt<1>("h0")) @[l2.scala 69:91]
    node _cache_io_cache_in_fired_T_1 = and(l2_front_Rob.io.Rob_out.ready, _cache_io_cache_in_fired_T) @[l2.scala 69:88]
    node _cache_io_cache_in_fired_T_2 = or(_cache_io_cache_in_fired_T_1, MSHR.io.Mem_read_out.ready) @[l2.scala 69:105]
    node _cache_io_cache_in_fired_T_3 = and(cache.io.cache_in.ready, _cache_io_cache_in_fired_T_2) @[l2.scala 69:54]
    node _cache_io_cache_in_fired_T_4 = eq(count, UInt<1>("h0")) @[l2.scala 69:145]
    node _cache_io_cache_in_fired_T_5 = and(_cache_io_cache_in_fired_T_3, _cache_io_cache_in_fired_T_4) @[l2.scala 69:136]
    cache.io.cache_in.fired <= _cache_io_cache_in_fired_T_5 @[l2.scala 69:27]
    node _l2_front_Rob_io_Rob_in_fired_T = and(l2_front_Rob.io.Rob_in.ready, cache.io.cache_hit_out.ready) @[l2.scala 73:64]
    l2_front_Rob.io.Rob_in.fired <= _l2_front_Rob_io_Rob_in_fired_T @[l2.scala 73:32]
    node _cache_io_cache_hit_out_fired_T = and(l2_front_Rob.io.Rob_in.ready, cache.io.cache_hit_out.ready) @[l2.scala 74:64]
    cache.io.cache_hit_out.fired <= _cache_io_cache_hit_out_fired_T @[l2.scala 74:32]
    l2_front_Rob.io.Rob_in.Rob_address <= cache.io.cache_hit_out.Rob_address @[l2.scala 76:38]
    l2_front_Rob.io.Rob_in.Mem_address <= cache.io.cache_hit_out.addr @[l2.scala 77:37]
    l2_front_Rob.io.Rob_in.valid <= cache.io.cache_hit_out.valid @[l2.scala 78:31]
    l2_front_Rob.io.Rob_in.is_R <= cache.io.cache_hit_out.is_R @[l2.scala 79:31]
    l2_front_Rob.io.Rob_in.data <= cache.io.cache_hit_out.readData @[l2.scala 80:31]
    MSHR.io.Mem_read_in.Mem_addr <= cache.io.cache_miss_out.Mem_addr @[l2.scala 87:32]
    MSHR.io.Mem_read_in.W_data <= cache.io.cache_miss_out.w_data @[l2.scala 88:30]
    MSHR.io.Mem_read_in.Rob_addr <= cache.io.cache_miss_out.Rob_addr @[l2.scala 89:32]
    MSHR.io.Mem_read_in.valid <= cache.io.cache_miss_out.valid @[l2.scala 90:29]
    node _MSHR_io_Mem_read_in_repl_hit_T = and(writeBackBuffer.io.miss_out.repl_hit, cache.io.cache_miss_out.valid) @[l2.scala 91:72]
    MSHR.io.Mem_read_in.repl_hit <= _MSHR_io_Mem_read_in_repl_hit_T @[l2.scala 91:32]
    MSHR.io.Mem_read_in.repl_data[0] <= writeBackBuffer.io.miss_out.data[0] @[l2.scala 92:33]
    MSHR.io.Mem_read_in.repl_data[1] <= writeBackBuffer.io.miss_out.data[1] @[l2.scala 92:33]
    MSHR.io.Mem_read_in.repl_data[2] <= writeBackBuffer.io.miss_out.data[2] @[l2.scala 92:33]
    MSHR.io.Mem_read_in.repl_data[3] <= writeBackBuffer.io.miss_out.data[3] @[l2.scala 92:33]
    MSHR.io.Mem_read_in.is_R <= cache.io.cache_miss_out.is_R @[l2.scala 93:28]
    writeBackBuffer.io.miss_address <= cache.io.cache_miss_out.Mem_addr @[l2.scala 95:35]
    node _MSHR_io_Mem_read_in_fired_T = and(MSHR.io.Mem_read_in.ready, cache.io.cache_miss_out.ready) @[l2.scala 97:58]
    node _MSHR_io_Mem_read_in_fired_T_1 = eq(cache.io.cache_miss_out.replace, UInt<1>("h0")) @[l2.scala 97:94]
    node _MSHR_io_Mem_read_in_fired_T_2 = and(_MSHR_io_Mem_read_in_fired_T, _MSHR_io_Mem_read_in_fired_T_1) @[l2.scala 97:91]
    MSHR.io.Mem_read_in.fired <= _MSHR_io_Mem_read_in_fired_T_2 @[l2.scala 97:29]
    node _cache_io_cache_miss_out_fired_T = or(MSHR.io.Mem_read_in.ready, writeBackBuffer.io.replace_in.ready) @[l2.scala 98:97]
    node _cache_io_cache_miss_out_fired_T_1 = and(cache.io.cache_miss_out.ready, _cache_io_cache_miss_out_fired_T) @[l2.scala 98:66]
    cache.io.cache_miss_out.fired <= _cache_io_cache_miss_out_fired_T_1 @[l2.scala 98:33]
    writeBackBuffer.io.replace_in.Mem_addr <= cache.io.cache_miss_out.Mem_addr @[l2.scala 102:42]
    writeBackBuffer.io.replace_in.data[0] <= cache.io.cache_miss_out.rep_data[0] @[l2.scala 103:38]
    writeBackBuffer.io.replace_in.data[1] <= cache.io.cache_miss_out.rep_data[1] @[l2.scala 103:38]
    writeBackBuffer.io.replace_in.data[2] <= cache.io.cache_miss_out.rep_data[2] @[l2.scala 103:38]
    writeBackBuffer.io.replace_in.data[3] <= cache.io.cache_miss_out.rep_data[3] @[l2.scala 103:38]
    node _writeBackBuffer_io_replace_in_fired_T = and(writeBackBuffer.io.replace_in.ready, cache.io.cache_miss_out.ready) @[l2.scala 105:78]
    node _writeBackBuffer_io_replace_in_fired_T_1 = and(_writeBackBuffer_io_replace_in_fired_T, cache.io.cache_miss_out.replace) @[l2.scala 105:111]
    writeBackBuffer.io.replace_in.fired <= _writeBackBuffer_io_replace_in_fired_T_1 @[l2.scala 105:39]

  module MultiUart_Anon :
    input clock : Clock
    input reset : Reset
    input client : { AWID : UInt<1>, AWADDR : UInt<32>, AWLEN : UInt<8>, AWSIZE : UInt<3>, AWBURST : UInt<2>, AWLOCK : UInt<1>, AWCACHE : UInt<4>, AWPROT : UInt<3>, AWQOS : UInt<4>, AWVALID : UInt<1>, flip AWREADY : UInt<1>, WDATA : UInt<32>, WSTRB : UInt<4>, WLAST : UInt<1>, WVALID : UInt<1>, flip WREADY : UInt<1>, flip BID : UInt<1>, flip BRESP : UInt<2>, flip BVALID : UInt<1>, BREADY : UInt<1>, ARID : UInt<1>, ARADDR : UInt<32>, ARLEN : UInt<8>, ARSIZE : UInt<3>, ARBURST : UInt<2>, ARLOCK : UInt<1>, ARCACHE : UInt<4>, ARPROT : UInt<3>, ARQOS : UInt<4>, ARVALID : UInt<1>, flip ARREADY : UInt<1>, flip RID : UInt<1>, flip RDATA : UInt<32>, flip RRESP : UInt<2>, flip RLAST : UInt<1>, flip RVALID : UInt<1>, RREADY : UInt<1>}
    output MTIP : UInt<1>
    output putCharOut0 : { valid : UInt<1>, byte : UInt<8>}

    wire _readRequestBuffer_WIRE : { valid : UInt<1>, address : UInt<32>, size : UInt<3>, len : UInt<8>, id : UInt<1>}
    _readRequestBuffer_WIRE.id is invalid
    _readRequestBuffer_WIRE.len is invalid
    _readRequestBuffer_WIRE.size is invalid
    _readRequestBuffer_WIRE.address is invalid
    _readRequestBuffer_WIRE.valid <= UInt<1>("h0")
    reg readRequestBuffer : { valid : UInt<1>, address : UInt<32>, size : UInt<3>, len : UInt<8>, id : UInt<1>}, clock with :
      reset => (reset, _readRequestBuffer_WIRE) @[multi_uart.scala 18:34]
    wire _writeRequestBuffer_WIRE : { address : { valid : UInt<1>, offset : UInt<32>, size : UInt<3>, len : UInt<8>, id : UInt<1>}, data : { valid : UInt<1>, data : UInt<32>, last : UInt<1>, strb : UInt<4>}}
    _writeRequestBuffer_WIRE.data.strb is invalid
    _writeRequestBuffer_WIRE.data.last is invalid
    _writeRequestBuffer_WIRE.data.data is invalid
    _writeRequestBuffer_WIRE.data.valid <= UInt<1>("h0")
    _writeRequestBuffer_WIRE.address.id is invalid
    _writeRequestBuffer_WIRE.address.len is invalid
    _writeRequestBuffer_WIRE.address.size is invalid
    _writeRequestBuffer_WIRE.address.offset is invalid
    _writeRequestBuffer_WIRE.address.valid <= UInt<1>("h0")
    reg writeRequestBuffer : { address : { valid : UInt<1>, offset : UInt<32>, size : UInt<3>, len : UInt<8>, id : UInt<1>}, data : { valid : UInt<1>, data : UInt<32>, last : UInt<1>, strb : UInt<4>}}, clock with :
      reset => (reset, _writeRequestBuffer_WIRE) @[multi_uart.scala 26:35]
    node _T = and(client.ARREADY, client.ARVALID) @[multi_uart.scala 42:23]
    when _T : @[multi_uart.scala 42:42]
      readRequestBuffer.valid <= UInt<1>("h1") @[multi_uart.scala 43:29]
      readRequestBuffer.address <= client.ARADDR @[multi_uart.scala 44:31]
      readRequestBuffer.len <= client.ARLEN @[multi_uart.scala 45:27]
      readRequestBuffer.size <= client.ARSIZE @[multi_uart.scala 46:28]
      readRequestBuffer.id <= client.ARID @[multi_uart.scala 47:26]
    node _T_1 = and(readRequestBuffer.valid, client.RREADY) @[multi_uart.scala 50:32]
    when _T_1 : @[multi_uart.scala 50:50]
      node _readRequestBuffer_len_T = sub(readRequestBuffer.len, UInt<1>("h1")) @[multi_uart.scala 51:52]
      node _readRequestBuffer_len_T_1 = tail(_readRequestBuffer_len_T, 1) @[multi_uart.scala 51:52]
      readRequestBuffer.len <= _readRequestBuffer_len_T_1 @[multi_uart.scala 51:27]
      node _T_2 = orr(readRequestBuffer.len) @[multi_uart.scala 52:33]
      node _T_3 = eq(_T_2, UInt<1>("h0")) @[multi_uart.scala 52:10]
      when _T_3 : @[multi_uart.scala 52:38]
        readRequestBuffer.valid <= UInt<1>("h0") @[multi_uart.scala 52:64]
    reg mtime : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[multi_uart.scala 54:22]
    reg mtimecmp : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[multi_uart.scala 55:25]
    reg mtimecmplowtemp : UInt<32>, clock with :
      reset => (UInt<1>("h0"), mtimecmplowtemp) @[multi_uart.scala 56:28]
    reg couter_wrap : UInt<4>, clock with :
      reset => (reset, UInt<4>("h0")) @[multi_uart.scala 57:28]
    node _couter_wrap_T = add(couter_wrap, UInt<1>("h1")) @[multi_uart.scala 58:30]
    node _couter_wrap_T_1 = tail(_couter_wrap_T, 1) @[multi_uart.scala 58:30]
    couter_wrap <= _couter_wrap_T_1 @[multi_uart.scala 58:15]
    node _mtime_T = andr(couter_wrap) @[multi_uart.scala 59:32]
    node _mtime_T_1 = add(mtime, _mtime_T) @[multi_uart.scala 59:18]
    node _mtime_T_2 = tail(_mtime_T_1, 1) @[multi_uart.scala 59:18]
    mtime <= _mtime_T_2 @[multi_uart.scala 59:9]
    reg mtimeRead : UInt<64>, clock with :
      reset => (UInt<1>("h0"), mtimeRead) @[multi_uart.scala 60:22]
    node _T_4 = and(client.ARREADY, client.ARVALID) @[multi_uart.scala 61:23]
    when _T_4 : @[multi_uart.scala 61:42]
      mtimeRead <= mtime @[multi_uart.scala 62:15]
    reg writeData : UInt<64>, clock with :
      reset => (UInt<1>("h0"), writeData) @[multi_uart.scala 66:22]
    reg ps_stat : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[multi_uart.scala 69:24]
    client.RDATA <= UInt<4>("h8") @[multi_uart.scala 70:16]
    node _T_5 = eq(UInt<32>("he000002c"), readRequestBuffer.address) @[multi_uart.scala 71:37]
    when _T_5 : @[multi_uart.scala 71:37]
      client.RDATA <= UInt<2>("h2") @[multi_uart.scala 72:38]
    else :
      node _T_6 = eq(UInt<32>("he000102c"), readRequestBuffer.address) @[multi_uart.scala 71:37]
      when _T_6 : @[multi_uart.scala 71:37]
        client.RDATA <= UInt<2>("h2") @[multi_uart.scala 73:38]
      else :
        node _T_7 = eq(UInt<26>("h200bff8"), readRequestBuffer.address) @[multi_uart.scala 71:37]
        when _T_7 : @[multi_uart.scala 71:37]
          node _client_RDATA_T = orr(readRequestBuffer.len) @[multi_uart.scala 74:67]
          node _client_RDATA_T_1 = bits(mtimeRead, 31, 0) @[multi_uart.scala 74:81]
          node _client_RDATA_T_2 = bits(mtimeRead, 63, 32) @[multi_uart.scala 74:99]
          node _client_RDATA_T_3 = mux(_client_RDATA_T, _client_RDATA_T_1, _client_RDATA_T_2) @[multi_uart.scala 74:44]
          client.RDATA <= _client_RDATA_T_3 @[multi_uart.scala 74:38]
        else :
          node _T_8 = eq(UInt<27>("h4000000"), readRequestBuffer.address) @[multi_uart.scala 71:37]
          when _T_8 : @[multi_uart.scala 71:37]
            client.RDATA <= ps_stat @[multi_uart.scala 75:38]
    client.RID <= readRequestBuffer.id @[multi_uart.scala 77:14]
    node _client_RLAST_T = orr(readRequestBuffer.len) @[multi_uart.scala 78:42]
    node _client_RLAST_T_1 = eq(_client_RLAST_T, UInt<1>("h0")) @[multi_uart.scala 78:19]
    client.RLAST <= _client_RLAST_T_1 @[multi_uart.scala 78:16]
    client.RRESP <= UInt<1>("h0") @[multi_uart.scala 79:16]
    client.RVALID <= readRequestBuffer.valid @[multi_uart.scala 80:17]
    wire putChar : { valid : UInt<1>, byte : UInt<8>} @[multi_uart.scala 82:21]
    node _putChar_valid_T = and(writeRequestBuffer.address.offset, UInt<8>("hff")) @[multi_uart.scala 86:58]
    node _putChar_valid_T_1 = eq(_putChar_valid_T, UInt<6>("h30")) @[multi_uart.scala 86:70]
    node _putChar_valid_T_2 = and(_putChar_valid_T_1, writeRequestBuffer.address.valid) @[multi_uart.scala 86:159]
    node _putChar_valid_T_3 = and(_putChar_valid_T_2, writeRequestBuffer.data.valid) @[multi_uart.scala 86:159]
    putChar.valid <= _putChar_valid_T_3 @[multi_uart.scala 86:17]
    node _putChar_byte_T = bits(writeRequestBuffer.data.data, 7, 0) @[multi_uart.scala 87:47]
    putChar.byte <= _putChar_byte_T @[multi_uart.scala 87:16]
    wire _lastUartChars_WIRE : UInt<8>[17] @[multi_uart.scala 89:38]
    _lastUartChars_WIRE[0] <= UInt<8>("h0") @[multi_uart.scala 89:38]
    _lastUartChars_WIRE[1] <= UInt<8>("h0") @[multi_uart.scala 89:38]
    _lastUartChars_WIRE[2] <= UInt<8>("h0") @[multi_uart.scala 89:38]
    _lastUartChars_WIRE[3] <= UInt<8>("h0") @[multi_uart.scala 89:38]
    _lastUartChars_WIRE[4] <= UInt<8>("h0") @[multi_uart.scala 89:38]
    _lastUartChars_WIRE[5] <= UInt<8>("h0") @[multi_uart.scala 89:38]
    _lastUartChars_WIRE[6] <= UInt<8>("h0") @[multi_uart.scala 89:38]
    _lastUartChars_WIRE[7] <= UInt<8>("h0") @[multi_uart.scala 89:38]
    _lastUartChars_WIRE[8] <= UInt<8>("h0") @[multi_uart.scala 89:38]
    _lastUartChars_WIRE[9] <= UInt<8>("h0") @[multi_uart.scala 89:38]
    _lastUartChars_WIRE[10] <= UInt<8>("h0") @[multi_uart.scala 89:38]
    _lastUartChars_WIRE[11] <= UInt<8>("h0") @[multi_uart.scala 89:38]
    _lastUartChars_WIRE[12] <= UInt<8>("h0") @[multi_uart.scala 89:38]
    _lastUartChars_WIRE[13] <= UInt<8>("h0") @[multi_uart.scala 89:38]
    _lastUartChars_WIRE[14] <= UInt<8>("h0") @[multi_uart.scala 89:38]
    _lastUartChars_WIRE[15] <= UInt<8>("h0") @[multi_uart.scala 89:38]
    _lastUartChars_WIRE[16] <= UInt<8>("h0") @[multi_uart.scala 89:38]
    reg lastUartChars : UInt<8>[17], clock with :
      reset => (reset, _lastUartChars_WIRE) @[multi_uart.scala 89:30]
    when putChar.valid : @[multi_uart.scala 90:23]
      lastUartChars[0] <= putChar.byte @[multi_uart.scala 92:47]
      lastUartChars[1] <= lastUartChars[0] @[multi_uart.scala 92:47]
      lastUartChars[2] <= lastUartChars[1] @[multi_uart.scala 92:47]
      lastUartChars[3] <= lastUartChars[2] @[multi_uart.scala 92:47]
      lastUartChars[4] <= lastUartChars[3] @[multi_uart.scala 92:47]
      lastUartChars[5] <= lastUartChars[4] @[multi_uart.scala 92:47]
      lastUartChars[6] <= lastUartChars[5] @[multi_uart.scala 92:47]
      lastUartChars[7] <= lastUartChars[6] @[multi_uart.scala 92:47]
      lastUartChars[8] <= lastUartChars[7] @[multi_uart.scala 92:47]
      lastUartChars[9] <= lastUartChars[8] @[multi_uart.scala 92:47]
      lastUartChars[10] <= lastUartChars[9] @[multi_uart.scala 92:47]
      lastUartChars[11] <= lastUartChars[10] @[multi_uart.scala 92:47]
      lastUartChars[12] <= lastUartChars[11] @[multi_uart.scala 92:47]
      lastUartChars[13] <= lastUartChars[12] @[multi_uart.scala 92:47]
      lastUartChars[14] <= lastUartChars[13] @[multi_uart.scala 92:47]
      lastUartChars[15] <= lastUartChars[14] @[multi_uart.scala 92:47]
      lastUartChars[16] <= lastUartChars[15] @[multi_uart.scala 92:47]
    node _T_9 = and(writeRequestBuffer.address.valid, writeRequestBuffer.data.valid) @[multi_uart.scala 151:41]
    when _T_9 : @[multi_uart.scala 151:75]
      writeRequestBuffer.data.valid <= UInt<1>("h0") @[multi_uart.scala 152:35]
      when writeRequestBuffer.data.last : @[multi_uart.scala 153:40]
        writeRequestBuffer.address.valid <= UInt<1>("h0") @[multi_uart.scala 154:40]
    node _T_10 = and(client.AWREADY, client.AWVALID) @[multi_uart.scala 158:23]
    when _T_10 : @[multi_uart.scala 158:42]
      writeRequestBuffer.address.valid <= UInt<1>("h1") @[multi_uart.scala 159:38]
      writeRequestBuffer.address.offset <= client.AWADDR @[multi_uart.scala 160:39]
      writeRequestBuffer.address.id <= client.AWID @[multi_uart.scala 161:35]
      writeRequestBuffer.address.len <= client.AWLEN @[multi_uart.scala 162:36]
      writeRequestBuffer.address.size <= client.AWSIZE @[multi_uart.scala 163:37]
    node _T_11 = and(client.WREADY, client.WVALID) @[multi_uart.scala 166:22]
    when _T_11 : @[multi_uart.scala 166:40]
      writeRequestBuffer.data.valid <= UInt<1>("h1") @[multi_uart.scala 167:35]
      writeRequestBuffer.data.data <= client.WDATA @[multi_uart.scala 168:34]
      writeRequestBuffer.data.last <= client.WLAST @[multi_uart.scala 169:34]
      writeRequestBuffer.data.strb <= client.WSTRB @[multi_uart.scala 170:34]
    node _T_12 = eq(writeRequestBuffer.data.last, UInt<1>("h0")) @[multi_uart.scala 173:41]
    node _T_13 = and(writeRequestBuffer.data.valid, _T_12) @[multi_uart.scala 173:38]
    when _T_13 : @[multi_uart.scala 173:72]
      mtimecmplowtemp <= writeRequestBuffer.data.data @[multi_uart.scala 173:90]
    node _T_14 = eq(writeRequestBuffer.address.offset, UInt<26>("h2004000")) @[multi_uart.scala 176:40]
    node _T_15 = and(writeRequestBuffer.address.valid, _T_14) @[multi_uart.scala 175:38]
    node _T_16 = and(_T_15, writeRequestBuffer.data.valid) @[multi_uart.scala 176:59]
    node _T_17 = and(_T_16, writeRequestBuffer.data.last) @[multi_uart.scala 177:35]
    when _T_17 : @[multi_uart.scala 179:5]
      node _mtimecmp_T = cat(writeRequestBuffer.data.data, mtimecmplowtemp) @[Cat.scala 33:92]
      mtimecmp <= _mtimecmp_T @[multi_uart.scala 180:14]
    node _client_ARREADY_T = eq(readRequestBuffer.valid, UInt<1>("h0")) @[multi_uart.scala 183:21]
    client.ARREADY <= _client_ARREADY_T @[multi_uart.scala 183:18]
    node _client_AWREADY_T = eq(writeRequestBuffer.address.valid, UInt<1>("h0")) @[multi_uart.scala 185:21]
    client.AWREADY <= _client_AWREADY_T @[multi_uart.scala 185:18]
    node _client_WREADY_T = eq(writeRequestBuffer.data.valid, UInt<1>("h0")) @[multi_uart.scala 186:20]
    node _client_WREADY_T_1 = or(_client_WREADY_T, writeRequestBuffer.address.valid) @[multi_uart.scala 186:51]
    client.WREADY <= _client_WREADY_T_1 @[multi_uart.scala 186:17]
    client.BID <= writeRequestBuffer.address.id @[multi_uart.scala 188:14]
    client.BRESP <= UInt<1>("h0") @[multi_uart.scala 189:16]
    node _client_BVALID_T = and(writeRequestBuffer.address.valid, writeRequestBuffer.data.valid) @[multi_uart.scala 190:53]
    node _client_BVALID_T_1 = and(_client_BVALID_T, writeRequestBuffer.data.last) @[multi_uart.scala 190:86]
    client.BVALID <= _client_BVALID_T_1 @[multi_uart.scala 190:17]
    node _MTIP_T = gt(mtime, mtimecmp) @[multi_uart.scala 193:18]
    MTIP <= _MTIP_T @[multi_uart.scala 193:8]
    putCharOut0 <= putChar @[multi_uart.scala 203:17]

  module MultiUart_Anon_1 :
    input clock : Clock
    input reset : Reset
    input client : { AWID : UInt<1>, AWADDR : UInt<32>, AWLEN : UInt<8>, AWSIZE : UInt<3>, AWBURST : UInt<2>, AWLOCK : UInt<1>, AWCACHE : UInt<4>, AWPROT : UInt<3>, AWQOS : UInt<4>, AWVALID : UInt<1>, flip AWREADY : UInt<1>, WDATA : UInt<32>, WSTRB : UInt<4>, WLAST : UInt<1>, WVALID : UInt<1>, flip WREADY : UInt<1>, flip BID : UInt<1>, flip BRESP : UInt<2>, flip BVALID : UInt<1>, BREADY : UInt<1>, ARID : UInt<1>, ARADDR : UInt<32>, ARLEN : UInt<8>, ARSIZE : UInt<3>, ARBURST : UInt<2>, ARLOCK : UInt<1>, ARCACHE : UInt<4>, ARPROT : UInt<3>, ARQOS : UInt<4>, ARVALID : UInt<1>, flip ARREADY : UInt<1>, flip RID : UInt<1>, flip RDATA : UInt<32>, flip RRESP : UInt<2>, flip RLAST : UInt<1>, flip RVALID : UInt<1>, RREADY : UInt<1>}
    output MTIP : UInt<1>
    output putCharOut1 : { valid : UInt<1>, byte : UInt<8>}

    wire _readRequestBuffer_WIRE : { valid : UInt<1>, address : UInt<32>, size : UInt<3>, len : UInt<8>, id : UInt<1>}
    _readRequestBuffer_WIRE.id is invalid
    _readRequestBuffer_WIRE.len is invalid
    _readRequestBuffer_WIRE.size is invalid
    _readRequestBuffer_WIRE.address is invalid
    _readRequestBuffer_WIRE.valid <= UInt<1>("h0")
    reg readRequestBuffer : { valid : UInt<1>, address : UInt<32>, size : UInt<3>, len : UInt<8>, id : UInt<1>}, clock with :
      reset => (reset, _readRequestBuffer_WIRE) @[multi_uart.scala 18:34]
    wire _writeRequestBuffer_WIRE : { address : { valid : UInt<1>, offset : UInt<32>, size : UInt<3>, len : UInt<8>, id : UInt<1>}, data : { valid : UInt<1>, data : UInt<32>, last : UInt<1>, strb : UInt<4>}}
    _writeRequestBuffer_WIRE.data.strb is invalid
    _writeRequestBuffer_WIRE.data.last is invalid
    _writeRequestBuffer_WIRE.data.data is invalid
    _writeRequestBuffer_WIRE.data.valid <= UInt<1>("h0")
    _writeRequestBuffer_WIRE.address.id is invalid
    _writeRequestBuffer_WIRE.address.len is invalid
    _writeRequestBuffer_WIRE.address.size is invalid
    _writeRequestBuffer_WIRE.address.offset is invalid
    _writeRequestBuffer_WIRE.address.valid <= UInt<1>("h0")
    reg writeRequestBuffer : { address : { valid : UInt<1>, offset : UInt<32>, size : UInt<3>, len : UInt<8>, id : UInt<1>}, data : { valid : UInt<1>, data : UInt<32>, last : UInt<1>, strb : UInt<4>}}, clock with :
      reset => (reset, _writeRequestBuffer_WIRE) @[multi_uart.scala 26:35]
    node _T = and(client.ARREADY, client.ARVALID) @[multi_uart.scala 42:23]
    when _T : @[multi_uart.scala 42:42]
      readRequestBuffer.valid <= UInt<1>("h1") @[multi_uart.scala 43:29]
      readRequestBuffer.address <= client.ARADDR @[multi_uart.scala 44:31]
      readRequestBuffer.len <= client.ARLEN @[multi_uart.scala 45:27]
      readRequestBuffer.size <= client.ARSIZE @[multi_uart.scala 46:28]
      readRequestBuffer.id <= client.ARID @[multi_uart.scala 47:26]
    node _T_1 = and(readRequestBuffer.valid, client.RREADY) @[multi_uart.scala 50:32]
    when _T_1 : @[multi_uart.scala 50:50]
      node _readRequestBuffer_len_T = sub(readRequestBuffer.len, UInt<1>("h1")) @[multi_uart.scala 51:52]
      node _readRequestBuffer_len_T_1 = tail(_readRequestBuffer_len_T, 1) @[multi_uart.scala 51:52]
      readRequestBuffer.len <= _readRequestBuffer_len_T_1 @[multi_uart.scala 51:27]
      node _T_2 = orr(readRequestBuffer.len) @[multi_uart.scala 52:33]
      node _T_3 = eq(_T_2, UInt<1>("h0")) @[multi_uart.scala 52:10]
      when _T_3 : @[multi_uart.scala 52:38]
        readRequestBuffer.valid <= UInt<1>("h0") @[multi_uart.scala 52:64]
    reg mtime : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[multi_uart.scala 54:22]
    reg mtimecmp : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[multi_uart.scala 55:25]
    reg mtimecmplowtemp : UInt<32>, clock with :
      reset => (UInt<1>("h0"), mtimecmplowtemp) @[multi_uart.scala 56:28]
    reg couter_wrap : UInt<4>, clock with :
      reset => (reset, UInt<4>("h0")) @[multi_uart.scala 57:28]
    node _couter_wrap_T = add(couter_wrap, UInt<1>("h1")) @[multi_uart.scala 58:30]
    node _couter_wrap_T_1 = tail(_couter_wrap_T, 1) @[multi_uart.scala 58:30]
    couter_wrap <= _couter_wrap_T_1 @[multi_uart.scala 58:15]
    node _mtime_T = andr(couter_wrap) @[multi_uart.scala 59:32]
    node _mtime_T_1 = add(mtime, _mtime_T) @[multi_uart.scala 59:18]
    node _mtime_T_2 = tail(_mtime_T_1, 1) @[multi_uart.scala 59:18]
    mtime <= _mtime_T_2 @[multi_uart.scala 59:9]
    reg mtimeRead : UInt<64>, clock with :
      reset => (UInt<1>("h0"), mtimeRead) @[multi_uart.scala 60:22]
    node _T_4 = and(client.ARREADY, client.ARVALID) @[multi_uart.scala 61:23]
    when _T_4 : @[multi_uart.scala 61:42]
      mtimeRead <= mtime @[multi_uart.scala 62:15]
    reg writeData : UInt<64>, clock with :
      reset => (UInt<1>("h0"), writeData) @[multi_uart.scala 66:22]
    reg ps_stat : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[multi_uart.scala 69:24]
    client.RDATA <= UInt<4>("h8") @[multi_uart.scala 70:16]
    node _T_5 = eq(UInt<32>("he000002c"), readRequestBuffer.address) @[multi_uart.scala 71:37]
    when _T_5 : @[multi_uart.scala 71:37]
      client.RDATA <= UInt<2>("h2") @[multi_uart.scala 72:38]
    else :
      node _T_6 = eq(UInt<32>("he000102c"), readRequestBuffer.address) @[multi_uart.scala 71:37]
      when _T_6 : @[multi_uart.scala 71:37]
        client.RDATA <= UInt<2>("h2") @[multi_uart.scala 73:38]
      else :
        node _T_7 = eq(UInt<26>("h200bff8"), readRequestBuffer.address) @[multi_uart.scala 71:37]
        when _T_7 : @[multi_uart.scala 71:37]
          node _client_RDATA_T = orr(readRequestBuffer.len) @[multi_uart.scala 74:67]
          node _client_RDATA_T_1 = bits(mtimeRead, 31, 0) @[multi_uart.scala 74:81]
          node _client_RDATA_T_2 = bits(mtimeRead, 63, 32) @[multi_uart.scala 74:99]
          node _client_RDATA_T_3 = mux(_client_RDATA_T, _client_RDATA_T_1, _client_RDATA_T_2) @[multi_uart.scala 74:44]
          client.RDATA <= _client_RDATA_T_3 @[multi_uart.scala 74:38]
        else :
          node _T_8 = eq(UInt<27>("h4000000"), readRequestBuffer.address) @[multi_uart.scala 71:37]
          when _T_8 : @[multi_uart.scala 71:37]
            client.RDATA <= ps_stat @[multi_uart.scala 75:38]
    client.RID <= readRequestBuffer.id @[multi_uart.scala 77:14]
    node _client_RLAST_T = orr(readRequestBuffer.len) @[multi_uart.scala 78:42]
    node _client_RLAST_T_1 = eq(_client_RLAST_T, UInt<1>("h0")) @[multi_uart.scala 78:19]
    client.RLAST <= _client_RLAST_T_1 @[multi_uart.scala 78:16]
    client.RRESP <= UInt<1>("h0") @[multi_uart.scala 79:16]
    client.RVALID <= readRequestBuffer.valid @[multi_uart.scala 80:17]
    wire putChar : { valid : UInt<1>, byte : UInt<8>} @[multi_uart.scala 82:21]
    node _putChar_valid_T = and(writeRequestBuffer.address.offset, UInt<8>("hff")) @[multi_uart.scala 86:58]
    node _putChar_valid_T_1 = eq(_putChar_valid_T, UInt<6>("h30")) @[multi_uart.scala 86:70]
    node _putChar_valid_T_2 = and(_putChar_valid_T_1, writeRequestBuffer.address.valid) @[multi_uart.scala 86:159]
    node _putChar_valid_T_3 = and(_putChar_valid_T_2, writeRequestBuffer.data.valid) @[multi_uart.scala 86:159]
    putChar.valid <= _putChar_valid_T_3 @[multi_uart.scala 86:17]
    node _putChar_byte_T = bits(writeRequestBuffer.data.data, 7, 0) @[multi_uart.scala 87:47]
    putChar.byte <= _putChar_byte_T @[multi_uart.scala 87:16]
    wire _lastUartChars_WIRE : UInt<8>[17] @[multi_uart.scala 89:38]
    _lastUartChars_WIRE[0] <= UInt<8>("h0") @[multi_uart.scala 89:38]
    _lastUartChars_WIRE[1] <= UInt<8>("h0") @[multi_uart.scala 89:38]
    _lastUartChars_WIRE[2] <= UInt<8>("h0") @[multi_uart.scala 89:38]
    _lastUartChars_WIRE[3] <= UInt<8>("h0") @[multi_uart.scala 89:38]
    _lastUartChars_WIRE[4] <= UInt<8>("h0") @[multi_uart.scala 89:38]
    _lastUartChars_WIRE[5] <= UInt<8>("h0") @[multi_uart.scala 89:38]
    _lastUartChars_WIRE[6] <= UInt<8>("h0") @[multi_uart.scala 89:38]
    _lastUartChars_WIRE[7] <= UInt<8>("h0") @[multi_uart.scala 89:38]
    _lastUartChars_WIRE[8] <= UInt<8>("h0") @[multi_uart.scala 89:38]
    _lastUartChars_WIRE[9] <= UInt<8>("h0") @[multi_uart.scala 89:38]
    _lastUartChars_WIRE[10] <= UInt<8>("h0") @[multi_uart.scala 89:38]
    _lastUartChars_WIRE[11] <= UInt<8>("h0") @[multi_uart.scala 89:38]
    _lastUartChars_WIRE[12] <= UInt<8>("h0") @[multi_uart.scala 89:38]
    _lastUartChars_WIRE[13] <= UInt<8>("h0") @[multi_uart.scala 89:38]
    _lastUartChars_WIRE[14] <= UInt<8>("h0") @[multi_uart.scala 89:38]
    _lastUartChars_WIRE[15] <= UInt<8>("h0") @[multi_uart.scala 89:38]
    _lastUartChars_WIRE[16] <= UInt<8>("h0") @[multi_uart.scala 89:38]
    reg lastUartChars : UInt<8>[17], clock with :
      reset => (reset, _lastUartChars_WIRE) @[multi_uart.scala 89:30]
    when putChar.valid : @[multi_uart.scala 90:23]
      lastUartChars[0] <= putChar.byte @[multi_uart.scala 92:47]
      lastUartChars[1] <= lastUartChars[0] @[multi_uart.scala 92:47]
      lastUartChars[2] <= lastUartChars[1] @[multi_uart.scala 92:47]
      lastUartChars[3] <= lastUartChars[2] @[multi_uart.scala 92:47]
      lastUartChars[4] <= lastUartChars[3] @[multi_uart.scala 92:47]
      lastUartChars[5] <= lastUartChars[4] @[multi_uart.scala 92:47]
      lastUartChars[6] <= lastUartChars[5] @[multi_uart.scala 92:47]
      lastUartChars[7] <= lastUartChars[6] @[multi_uart.scala 92:47]
      lastUartChars[8] <= lastUartChars[7] @[multi_uart.scala 92:47]
      lastUartChars[9] <= lastUartChars[8] @[multi_uart.scala 92:47]
      lastUartChars[10] <= lastUartChars[9] @[multi_uart.scala 92:47]
      lastUartChars[11] <= lastUartChars[10] @[multi_uart.scala 92:47]
      lastUartChars[12] <= lastUartChars[11] @[multi_uart.scala 92:47]
      lastUartChars[13] <= lastUartChars[12] @[multi_uart.scala 92:47]
      lastUartChars[14] <= lastUartChars[13] @[multi_uart.scala 92:47]
      lastUartChars[15] <= lastUartChars[14] @[multi_uart.scala 92:47]
      lastUartChars[16] <= lastUartChars[15] @[multi_uart.scala 92:47]
    node _T_9 = and(writeRequestBuffer.address.valid, writeRequestBuffer.data.valid) @[multi_uart.scala 151:41]
    when _T_9 : @[multi_uart.scala 151:75]
      writeRequestBuffer.data.valid <= UInt<1>("h0") @[multi_uart.scala 152:35]
      when writeRequestBuffer.data.last : @[multi_uart.scala 153:40]
        writeRequestBuffer.address.valid <= UInt<1>("h0") @[multi_uart.scala 154:40]
    node _T_10 = and(client.AWREADY, client.AWVALID) @[multi_uart.scala 158:23]
    when _T_10 : @[multi_uart.scala 158:42]
      writeRequestBuffer.address.valid <= UInt<1>("h1") @[multi_uart.scala 159:38]
      writeRequestBuffer.address.offset <= client.AWADDR @[multi_uart.scala 160:39]
      writeRequestBuffer.address.id <= client.AWID @[multi_uart.scala 161:35]
      writeRequestBuffer.address.len <= client.AWLEN @[multi_uart.scala 162:36]
      writeRequestBuffer.address.size <= client.AWSIZE @[multi_uart.scala 163:37]
    node _T_11 = and(client.WREADY, client.WVALID) @[multi_uart.scala 166:22]
    when _T_11 : @[multi_uart.scala 166:40]
      writeRequestBuffer.data.valid <= UInt<1>("h1") @[multi_uart.scala 167:35]
      writeRequestBuffer.data.data <= client.WDATA @[multi_uart.scala 168:34]
      writeRequestBuffer.data.last <= client.WLAST @[multi_uart.scala 169:34]
      writeRequestBuffer.data.strb <= client.WSTRB @[multi_uart.scala 170:34]
    node _T_12 = eq(writeRequestBuffer.data.last, UInt<1>("h0")) @[multi_uart.scala 173:41]
    node _T_13 = and(writeRequestBuffer.data.valid, _T_12) @[multi_uart.scala 173:38]
    when _T_13 : @[multi_uart.scala 173:72]
      mtimecmplowtemp <= writeRequestBuffer.data.data @[multi_uart.scala 173:90]
    node _T_14 = eq(writeRequestBuffer.address.offset, UInt<26>("h2004000")) @[multi_uart.scala 176:40]
    node _T_15 = and(writeRequestBuffer.address.valid, _T_14) @[multi_uart.scala 175:38]
    node _T_16 = and(_T_15, writeRequestBuffer.data.valid) @[multi_uart.scala 176:59]
    node _T_17 = and(_T_16, writeRequestBuffer.data.last) @[multi_uart.scala 177:35]
    when _T_17 : @[multi_uart.scala 179:5]
      node _mtimecmp_T = cat(writeRequestBuffer.data.data, mtimecmplowtemp) @[Cat.scala 33:92]
      mtimecmp <= _mtimecmp_T @[multi_uart.scala 180:14]
    node _client_ARREADY_T = eq(readRequestBuffer.valid, UInt<1>("h0")) @[multi_uart.scala 183:21]
    client.ARREADY <= _client_ARREADY_T @[multi_uart.scala 183:18]
    node _client_AWREADY_T = eq(writeRequestBuffer.address.valid, UInt<1>("h0")) @[multi_uart.scala 185:21]
    client.AWREADY <= _client_AWREADY_T @[multi_uart.scala 185:18]
    node _client_WREADY_T = eq(writeRequestBuffer.data.valid, UInt<1>("h0")) @[multi_uart.scala 186:20]
    node _client_WREADY_T_1 = or(_client_WREADY_T, writeRequestBuffer.address.valid) @[multi_uart.scala 186:51]
    client.WREADY <= _client_WREADY_T_1 @[multi_uart.scala 186:17]
    client.BID <= writeRequestBuffer.address.id @[multi_uart.scala 188:14]
    client.BRESP <= UInt<1>("h0") @[multi_uart.scala 189:16]
    node _client_BVALID_T = and(writeRequestBuffer.address.valid, writeRequestBuffer.data.valid) @[multi_uart.scala 190:53]
    node _client_BVALID_T_1 = and(_client_BVALID_T, writeRequestBuffer.data.last) @[multi_uart.scala 190:86]
    client.BVALID <= _client_BVALID_T_1 @[multi_uart.scala 190:17]
    node _MTIP_T = gt(mtime, mtimecmp) @[multi_uart.scala 193:18]
    MTIP <= _MTIP_T @[multi_uart.scala 193:8]
    putCharOut1 <= putChar @[multi_uart.scala 207:17]

  module MultiUart :
    input clock : Clock
    input reset : Reset
    input client0 : { AWID : UInt<1>, AWADDR : UInt<32>, AWLEN : UInt<8>, AWSIZE : UInt<3>, AWBURST : UInt<2>, AWLOCK : UInt<1>, AWCACHE : UInt<4>, AWPROT : UInt<3>, AWQOS : UInt<4>, AWVALID : UInt<1>, flip AWREADY : UInt<1>, WDATA : UInt<32>, WSTRB : UInt<4>, WLAST : UInt<1>, WVALID : UInt<1>, flip WREADY : UInt<1>, flip BID : UInt<1>, flip BRESP : UInt<2>, flip BVALID : UInt<1>, BREADY : UInt<1>, ARID : UInt<1>, ARADDR : UInt<32>, ARLEN : UInt<8>, ARSIZE : UInt<3>, ARBURST : UInt<2>, ARLOCK : UInt<1>, ARCACHE : UInt<4>, ARPROT : UInt<3>, ARQOS : UInt<4>, ARVALID : UInt<1>, flip ARREADY : UInt<1>, flip RID : UInt<1>, flip RDATA : UInt<32>, flip RRESP : UInt<2>, flip RLAST : UInt<1>, flip RVALID : UInt<1>, RREADY : UInt<1>}
    input client1 : { AWID : UInt<1>, AWADDR : UInt<32>, AWLEN : UInt<8>, AWSIZE : UInt<3>, AWBURST : UInt<2>, AWLOCK : UInt<1>, AWCACHE : UInt<4>, AWPROT : UInt<3>, AWQOS : UInt<4>, AWVALID : UInt<1>, flip AWREADY : UInt<1>, WDATA : UInt<32>, WSTRB : UInt<4>, WLAST : UInt<1>, WVALID : UInt<1>, flip WREADY : UInt<1>, flip BID : UInt<1>, flip BRESP : UInt<2>, flip BVALID : UInt<1>, BREADY : UInt<1>, ARID : UInt<1>, ARADDR : UInt<32>, ARLEN : UInt<8>, ARSIZE : UInt<3>, ARBURST : UInt<2>, ARLOCK : UInt<1>, ARCACHE : UInt<4>, ARPROT : UInt<3>, ARQOS : UInt<4>, ARVALID : UInt<1>, flip ARREADY : UInt<1>, flip RID : UInt<1>, flip RDATA : UInt<32>, flip RRESP : UInt<2>, flip RLAST : UInt<1>, flip RVALID : UInt<1>, RREADY : UInt<1>}
    output putChar0 : { valid : UInt<1>, byte : UInt<8>}
    output putChar1 : { valid : UInt<1>, byte : UInt<8>}
    output MTIP0 : UInt<1>
    output MTIP1 : UInt<1>

    inst uart0 of MultiUart_Anon @[multi_uart.scala 201:21]
    uart0.clock <= clock
    uart0.reset <= reset
    inst uart1 of MultiUart_Anon_1 @[multi_uart.scala 205:21]
    uart1.clock <= clock
    uart1.reset <= reset
    uart0.client <= client0 @[multi_uart.scala 210:16]
    uart1.client <= client1 @[multi_uart.scala 211:16]
    putChar0 <= uart0.putCharOut0 @[multi_uart.scala 215:12]
    putChar1 <= uart1.putCharOut1 @[multi_uart.scala 218:12]
    MTIP0 <= uart0.MTIP @[multi_uart.scala 223:9]
    MTIP1 <= uart1.MTIP @[multi_uart.scala 224:9]

  module system :
    input clock : Clock
    input reset : UInt<1>
    input programmer : { valid : UInt<1>, byte : UInt<64>, offset : UInt<28>}
    input finishedProgramming : UInt<1>
    output prober : { flip offset : UInt<28>, accessLong : UInt<64>}
    output core0OutChar : { valid : UInt<1>, byte : UInt<8>}
    output core1OutChar : { valid : UInt<1>, byte : UInt<8>}
    output registersOut0 : UInt<64>[33]
    output robOut0 : { commitFired : UInt<1>, pc : UInt<64>, interrupt : UInt<1>}
    output registersOut1 : UInt<64>[33]
    output robOut1 : { commitFired : UInt<1>, pc : UInt<64>, interrupt : UInt<1>}

    inst core0 of system_Anon @[system.scala 23:21]
    core0.clock <= clock
    core0.reset <= reset
    inst core1 of system_Anon_1 @[system.scala 47:21]
    core1.clock <= clock
    core1.reset <= reset
    inst memory of mainMemory @[system.scala 72:22]
    memory.clock <= clock
    memory.reset <= reset
    inst interconnect of Interconnect @[system.scala 73:28]
    interconnect.clock <= clock
    interconnect.reset <= reset
    inst LLC of l2_mem @[system.scala 74:19]
    LLC.clock <= clock
    LLC.reset <= reset
    interconnect.io.acePort0.AWVALID <= core0.dPort.AWVALID @[system.scala 81:36]
    core0.dPort.AWREADY <= interconnect.io.acePort0.AWREADY @[system.scala 82:23]
    interconnect.io.acePort0.AWID <= core0.dPort.AWID @[system.scala 83:33]
    interconnect.io.acePort0.AWADDR <= core0.dPort.AWADDR @[system.scala 84:35]
    interconnect.io.acePort0.AWSNOOP <= core0.dPort.AWSNOOP @[system.scala 85:36]
    interconnect.io.acePort0.AWBAR <= core0.dPort.AWBAR @[system.scala 86:34]
    interconnect.io.acePort0.WVALID <= core0.dPort.WVALID @[system.scala 89:35]
    interconnect.io.acePort0.WDATA <= core0.dPort.WDATA @[system.scala 90:34]
    interconnect.io.acePort0.WLAST <= core0.dPort.WLAST @[system.scala 91:34]
    core0.dPort.WREADY <= interconnect.io.acePort0.WREADY @[system.scala 92:22]
    core0.dPort.BVALID <= interconnect.io.acePort0.BVALID @[system.scala 95:22]
    core0.dPort.BID <= interconnect.io.acePort0.BID @[system.scala 96:19]
    core0.dPort.BRESP <= interconnect.io.acePort0.BRESP @[system.scala 97:21]
    interconnect.io.acePort0.BREADY <= core0.dPort.BREADY @[system.scala 98:35]
    interconnect.io.acePort0.ARVALID <= core0.dPort.ARVALID @[system.scala 101:36]
    core0.dPort.ARREADY <= interconnect.io.acePort0.ARREADY @[system.scala 102:23]
    interconnect.io.acePort0.ARID <= core0.dPort.ARID @[system.scala 103:33]
    interconnect.io.acePort0.ARADDR <= core0.dPort.ARADDR @[system.scala 104:35]
    interconnect.io.acePort0.ARSNOOP <= core0.dPort.ARSNOOP @[system.scala 105:36]
    interconnect.io.acePort0.ARBAR <= core0.dPort.ARBAR @[system.scala 106:34]
    core0.dPort.RVALID <= interconnect.io.acePort0.RVALID @[system.scala 109:22]
    interconnect.io.acePort0.RREADY <= core0.dPort.RREADY @[system.scala 110:35]
    core0.dPort.RID <= interconnect.io.acePort0.RID @[system.scala 111:19]
    core0.dPort.RDATA <= interconnect.io.acePort0.RDATA @[system.scala 112:21]
    core0.dPort.RRESP <= interconnect.io.acePort0.RRESP @[system.scala 113:21]
    core0.dPort.RLAST <= interconnect.io.acePort0.RLAST @[system.scala 114:21]
    core0.dPort.ACVALID <= interconnect.io.acePort0.ACVALID @[system.scala 117:23]
    core0.dPort.ACADDR <= interconnect.io.acePort0.ACADDR @[system.scala 118:22]
    core0.dPort.ACSNOOP <= interconnect.io.acePort0.ACSNOOP @[system.scala 119:23]
    core0.dPort.ACPROT <= UInt<2>("h2") @[system.scala 120:22]
    interconnect.io.acePort0.ACREADY <= core0.dPort.ACREADY @[system.scala 121:36]
    interconnect.io.acePort0.CRVALID <= core0.dPort.CRVALID @[system.scala 124:36]
    interconnect.io.acePort0.CRRESP <= core0.dPort.CRRESP @[system.scala 125:35]
    core0.dPort.CRREADY <= interconnect.io.acePort0.CRREADY @[system.scala 126:23]
    interconnect.io.acePort0.CDVALID <= core0.dPort.CDVALID @[system.scala 129:36]
    core0.dPort.CDREADY <= interconnect.io.acePort0.CDREADY @[system.scala 130:23]
    interconnect.io.acePort0.CDDATA <= core0.dPort.CDDATA @[system.scala 131:35]
    interconnect.io.acePort0.CDLAST <= core0.dPort.CDLAST @[system.scala 132:35]
    interconnect.io.acePort1.AWVALID <= core0.iPort.AWVALID @[system.scala 136:36]
    core0.iPort.AWREADY <= interconnect.io.acePort1.AWREADY @[system.scala 137:23]
    interconnect.io.acePort1.AWID <= core0.iPort.AWID @[system.scala 138:33]
    interconnect.io.acePort1.AWADDR <= core0.iPort.AWADDR @[system.scala 139:35]
    interconnect.io.acePort1.AWSNOOP <= core0.iPort.AWSNOOP @[system.scala 140:36]
    interconnect.io.acePort1.AWBAR <= core0.iPort.AWBAR @[system.scala 141:34]
    interconnect.io.acePort1.WVALID <= core0.iPort.WVALID @[system.scala 144:35]
    interconnect.io.acePort1.WDATA <= core0.iPort.WDATA @[system.scala 145:34]
    interconnect.io.acePort1.WLAST <= core0.iPort.WLAST @[system.scala 146:34]
    core0.iPort.WREADY <= interconnect.io.acePort1.WREADY @[system.scala 147:22]
    core0.iPort.BVALID <= interconnect.io.acePort1.BVALID @[system.scala 150:22]
    core0.iPort.BID <= interconnect.io.acePort1.BID @[system.scala 151:19]
    core0.iPort.BRESP <= interconnect.io.acePort1.BRESP @[system.scala 152:21]
    interconnect.io.acePort1.BREADY <= core0.iPort.BREADY @[system.scala 153:35]
    interconnect.io.acePort1.ARVALID <= core0.iPort.ARVALID @[system.scala 156:36]
    core0.iPort.ARREADY <= interconnect.io.acePort1.ARREADY @[system.scala 157:23]
    interconnect.io.acePort1.ARID <= core0.iPort.ARID @[system.scala 158:33]
    interconnect.io.acePort1.ARADDR <= core0.iPort.ARADDR @[system.scala 159:35]
    interconnect.io.acePort1.ARSNOOP <= core0.iPort.ARSNOOP @[system.scala 160:36]
    interconnect.io.acePort1.ARBAR <= core0.iPort.ARBAR @[system.scala 161:34]
    core0.iPort.RVALID <= interconnect.io.acePort1.RVALID @[system.scala 164:22]
    interconnect.io.acePort1.RREADY <= core0.iPort.RREADY @[system.scala 165:35]
    core0.iPort.RID <= interconnect.io.acePort1.RID @[system.scala 166:19]
    core0.iPort.RDATA <= interconnect.io.acePort1.RDATA @[system.scala 167:21]
    core0.iPort.RRESP <= interconnect.io.acePort1.RRESP @[system.scala 168:21]
    core0.iPort.RLAST <= interconnect.io.acePort1.RLAST @[system.scala 169:21]
    core0.iPort.ACVALID <= interconnect.io.acePort1.ACVALID @[system.scala 172:23]
    core0.iPort.ACADDR <= interconnect.io.acePort1.ACADDR @[system.scala 173:22]
    core0.iPort.ACSNOOP <= interconnect.io.acePort1.ACSNOOP @[system.scala 174:23]
    core0.iPort.ACPROT <= UInt<2>("h2") @[system.scala 175:22]
    interconnect.io.acePort1.ACREADY <= core0.iPort.ACREADY @[system.scala 176:36]
    interconnect.io.acePort1.CRVALID <= core0.iPort.CRVALID @[system.scala 179:36]
    interconnect.io.acePort1.CRRESP <= core0.iPort.CRRESP @[system.scala 180:35]
    core0.iPort.CRREADY <= interconnect.io.acePort1.CRREADY @[system.scala 181:23]
    interconnect.io.acePort1.CDVALID <= core0.iPort.CDVALID @[system.scala 184:36]
    core0.iPort.CDREADY <= interconnect.io.acePort1.CDREADY @[system.scala 185:23]
    interconnect.io.acePort1.CDDATA <= core0.iPort.CDDATA @[system.scala 186:35]
    interconnect.io.acePort1.CDLAST <= core0.iPort.CDLAST @[system.scala 187:35]
    interconnect.io.acePort2.AWVALID <= core1.dPort.AWVALID @[system.scala 191:36]
    core1.dPort.AWREADY <= interconnect.io.acePort2.AWREADY @[system.scala 192:23]
    interconnect.io.acePort2.AWID <= core1.dPort.AWID @[system.scala 193:33]
    interconnect.io.acePort2.AWADDR <= core1.dPort.AWADDR @[system.scala 194:35]
    interconnect.io.acePort2.AWSNOOP <= core1.dPort.AWSNOOP @[system.scala 195:36]
    interconnect.io.acePort2.AWBAR <= core1.dPort.AWBAR @[system.scala 196:34]
    interconnect.io.acePort2.WVALID <= core1.dPort.WVALID @[system.scala 199:35]
    interconnect.io.acePort2.WDATA <= core1.dPort.WDATA @[system.scala 200:34]
    interconnect.io.acePort2.WLAST <= core1.dPort.WLAST @[system.scala 201:34]
    core1.dPort.WREADY <= interconnect.io.acePort2.WREADY @[system.scala 202:22]
    core1.dPort.BVALID <= interconnect.io.acePort2.BVALID @[system.scala 205:22]
    core1.dPort.BID <= interconnect.io.acePort2.BID @[system.scala 206:19]
    core1.dPort.BRESP <= interconnect.io.acePort2.BRESP @[system.scala 207:21]
    interconnect.io.acePort2.BREADY <= core1.dPort.BREADY @[system.scala 208:35]
    interconnect.io.acePort2.ARVALID <= core1.dPort.ARVALID @[system.scala 211:36]
    core1.dPort.ARREADY <= interconnect.io.acePort2.ARREADY @[system.scala 212:23]
    interconnect.io.acePort2.ARID <= core1.dPort.ARID @[system.scala 213:33]
    interconnect.io.acePort2.ARADDR <= core1.dPort.ARADDR @[system.scala 214:35]
    interconnect.io.acePort2.ARSNOOP <= core1.dPort.ARSNOOP @[system.scala 215:36]
    interconnect.io.acePort2.ARBAR <= core1.dPort.ARBAR @[system.scala 216:34]
    core1.dPort.RVALID <= interconnect.io.acePort2.RVALID @[system.scala 219:22]
    interconnect.io.acePort2.RREADY <= core1.dPort.RREADY @[system.scala 220:35]
    core1.dPort.RID <= interconnect.io.acePort2.RID @[system.scala 221:19]
    core1.dPort.RDATA <= interconnect.io.acePort2.RDATA @[system.scala 222:21]
    core1.dPort.RRESP <= interconnect.io.acePort2.RRESP @[system.scala 223:21]
    core1.dPort.RLAST <= interconnect.io.acePort2.RLAST @[system.scala 224:21]
    core1.dPort.ACVALID <= interconnect.io.acePort2.ACVALID @[system.scala 227:23]
    core1.dPort.ACADDR <= interconnect.io.acePort2.ACADDR @[system.scala 228:22]
    core1.dPort.ACSNOOP <= interconnect.io.acePort2.ACSNOOP @[system.scala 229:23]
    core1.dPort.ACPROT <= UInt<2>("h2") @[system.scala 230:22]
    interconnect.io.acePort2.ACREADY <= core1.dPort.ACREADY @[system.scala 231:36]
    interconnect.io.acePort2.CRVALID <= core1.dPort.CRVALID @[system.scala 234:36]
    interconnect.io.acePort2.CRRESP <= core1.dPort.CRRESP @[system.scala 235:35]
    core1.dPort.CRREADY <= interconnect.io.acePort2.CRREADY @[system.scala 236:23]
    interconnect.io.acePort2.CDVALID <= core1.dPort.CDVALID @[system.scala 239:36]
    core1.dPort.CDREADY <= interconnect.io.acePort2.CDREADY @[system.scala 240:23]
    interconnect.io.acePort2.CDDATA <= core1.dPort.CDDATA @[system.scala 241:35]
    interconnect.io.acePort2.CDLAST <= core1.dPort.CDLAST @[system.scala 242:35]
    interconnect.io.acePort3.AWVALID <= core1.iPort.AWVALID @[system.scala 246:36]
    core1.iPort.AWREADY <= interconnect.io.acePort3.AWREADY @[system.scala 247:23]
    interconnect.io.acePort3.AWID <= core1.iPort.AWID @[system.scala 248:33]
    interconnect.io.acePort3.AWADDR <= core1.iPort.AWADDR @[system.scala 249:35]
    interconnect.io.acePort3.AWSNOOP <= core1.iPort.AWSNOOP @[system.scala 250:36]
    interconnect.io.acePort3.AWBAR <= core1.iPort.AWBAR @[system.scala 251:34]
    interconnect.io.acePort3.WVALID <= core1.iPort.WVALID @[system.scala 254:35]
    interconnect.io.acePort3.WDATA <= core1.iPort.WDATA @[system.scala 255:34]
    interconnect.io.acePort3.WLAST <= core1.iPort.WLAST @[system.scala 256:34]
    core1.iPort.WREADY <= interconnect.io.acePort3.WREADY @[system.scala 257:22]
    core1.iPort.BVALID <= interconnect.io.acePort3.BVALID @[system.scala 260:22]
    core1.iPort.BID <= interconnect.io.acePort3.BID @[system.scala 261:19]
    core1.iPort.BRESP <= interconnect.io.acePort3.BRESP @[system.scala 262:21]
    interconnect.io.acePort3.BREADY <= core1.iPort.BREADY @[system.scala 263:35]
    interconnect.io.acePort3.ARVALID <= core1.iPort.ARVALID @[system.scala 266:36]
    core1.iPort.ARREADY <= interconnect.io.acePort3.ARREADY @[system.scala 267:23]
    interconnect.io.acePort3.ARID <= core1.iPort.ARID @[system.scala 268:33]
    interconnect.io.acePort3.ARADDR <= core1.iPort.ARADDR @[system.scala 269:35]
    interconnect.io.acePort3.ARSNOOP <= core1.iPort.ARSNOOP @[system.scala 270:36]
    interconnect.io.acePort3.ARBAR <= core1.iPort.ARBAR @[system.scala 271:34]
    core1.iPort.RVALID <= interconnect.io.acePort3.RVALID @[system.scala 274:22]
    interconnect.io.acePort3.RREADY <= core1.iPort.RREADY @[system.scala 275:35]
    core1.iPort.RID <= interconnect.io.acePort3.RID @[system.scala 276:19]
    core1.iPort.RDATA <= interconnect.io.acePort3.RDATA @[system.scala 277:21]
    core1.iPort.RRESP <= interconnect.io.acePort3.RRESP @[system.scala 278:21]
    core1.iPort.RLAST <= interconnect.io.acePort3.RLAST @[system.scala 279:21]
    core1.iPort.ACVALID <= interconnect.io.acePort3.ACVALID @[system.scala 282:23]
    core1.iPort.ACADDR <= interconnect.io.acePort3.ACADDR @[system.scala 283:22]
    core1.iPort.ACSNOOP <= interconnect.io.acePort3.ACSNOOP @[system.scala 284:23]
    core1.iPort.ACPROT <= UInt<2>("h2") @[system.scala 285:22]
    interconnect.io.acePort3.ACREADY <= core1.iPort.ACREADY @[system.scala 286:36]
    interconnect.io.acePort3.CRVALID <= core1.iPort.CRVALID @[system.scala 289:36]
    interconnect.io.acePort3.CRRESP <= core1.iPort.CRRESP @[system.scala 290:35]
    core1.iPort.CRREADY <= interconnect.io.acePort3.CRREADY @[system.scala 291:23]
    interconnect.io.acePort3.CDVALID <= core1.iPort.CDVALID @[system.scala 294:36]
    core1.iPort.CDREADY <= interconnect.io.acePort3.CDREADY @[system.scala 295:23]
    interconnect.io.acePort3.CDDATA <= core1.iPort.CDDATA @[system.scala 296:35]
    interconnect.io.acePort3.CDLAST <= core1.iPort.CDLAST @[system.scala 297:35]
    LLC.io.cache_axi.AWVALID <= interconnect.io.L2.AWVALID @[system.scala 302:28]
    interconnect.io.L2.AWREADY <= LLC.io.cache_axi.AWREADY @[system.scala 303:30]
    LLC.io.cache_axi.AWID <= interconnect.io.L2.AWID @[system.scala 304:25]
    LLC.io.cache_axi.AWADDR <= interconnect.io.L2.AWADDR @[system.scala 305:27]
    LLC.io.cache_axi.AWLEN <= UInt<3>("h7") @[system.scala 306:26]
    LLC.io.cache_axi.ARVALID <= interconnect.io.L2.ARVALID @[system.scala 322:28]
    interconnect.io.L2.ARREADY <= LLC.io.cache_axi.ARREADY @[system.scala 323:30]
    LLC.io.cache_axi.ARID <= interconnect.io.L2.ARID @[system.scala 324:25]
    LLC.io.cache_axi.ARADDR <= interconnect.io.L2.ARADDR @[system.scala 325:27]
    LLC.io.cache_axi.ARLEN <= UInt<3>("h7") @[system.scala 326:26]
    LLC.io.cache_axi.WVALID <= interconnect.io.L2.WVALID @[system.scala 342:27]
    interconnect.io.L2.WREADY <= LLC.io.cache_axi.WREADY @[system.scala 343:29]
    LLC.io.cache_axi.WDATA <= interconnect.io.L2.WDATA @[system.scala 344:26]
    LLC.io.cache_axi.WLAST <= interconnect.io.L2.WLAST @[system.scala 345:26]
    interconnect.io.L2.RVALID <= LLC.io.cache_axi.RVALID @[system.scala 350:29]
    LLC.io.cache_axi.RREADY <= interconnect.io.L2.RREADY @[system.scala 351:27]
    interconnect.io.L2.RID <= LLC.io.cache_axi.RID @[system.scala 352:26]
    interconnect.io.L2.RDATA <= LLC.io.cache_axi.RDATA @[system.scala 353:28]
    interconnect.io.L2.RLAST <= LLC.io.cache_axi.RLAST @[system.scala 354:28]
    interconnect.io.L2.RRESP <= LLC.io.cache_axi.RRESP @[system.scala 355:28]
    interconnect.io.L2.BVALID <= LLC.io.cache_axi.BVALID @[system.scala 358:29]
    LLC.io.cache_axi.BREADY <= interconnect.io.L2.BREADY @[system.scala 359:27]
    interconnect.io.L2.BID <= LLC.io.cache_axi.BID @[system.scala 360:26]
    interconnect.io.L2.BRESP <= LLC.io.cache_axi.BRESP @[system.scala 361:28]
    memory.clients[1].AWVALID <= LLC.io.mem_write_axi.AWVALID @[system.scala 382:29]
    memory.clients[1].AWID <= LLC.io.mem_write_axi.AWID @[system.scala 383:26]
    memory.clients[1].AWADDR <= LLC.io.mem_write_axi.AWADDR @[system.scala 384:28]
    memory.clients[1].AWLEN <= LLC.io.mem_write_axi.AWLEN @[system.scala 385:27]
    memory.clients[1].AWSIZE <= LLC.io.mem_write_axi.AWSIZE @[system.scala 386:28]
    memory.clients[1].AWBURST <= LLC.io.mem_write_axi.AWBURST @[system.scala 387:29]
    memory.clients[1].AWLOCK <= LLC.io.mem_write_axi.AWLOCK @[system.scala 388:28]
    memory.clients[1].AWCACHE <= LLC.io.mem_write_axi.AWCACHE @[system.scala 389:29]
    memory.clients[1].AWPROT <= LLC.io.mem_write_axi.AWPROT @[system.scala 390:28]
    memory.clients[1].AWQOS <= LLC.io.mem_write_axi.AWQOS @[system.scala 391:27]
    LLC.io.mem_write_axi.AWREADY <= memory.clients[1].AWREADY @[system.scala 392:32]
    memory.clients[1].ARVALID <= LLC.io.mem_read_axi.ARVALID @[system.scala 395:29]
    memory.clients[1].ARID <= LLC.io.mem_read_axi.ARID @[system.scala 396:26]
    memory.clients[1].ARADDR <= LLC.io.mem_read_axi.ARADDR @[system.scala 397:28]
    memory.clients[1].ARLEN <= LLC.io.mem_read_axi.ARLEN @[system.scala 398:27]
    memory.clients[1].ARSIZE <= LLC.io.mem_read_axi.ARSIZE @[system.scala 399:28]
    memory.clients[1].ARBURST <= LLC.io.mem_read_axi.ARBURST @[system.scala 400:29]
    memory.clients[1].ARLOCK <= LLC.io.mem_read_axi.ARLOCK @[system.scala 401:28]
    memory.clients[1].ARCACHE <= LLC.io.mem_read_axi.ARCACHE @[system.scala 402:29]
    memory.clients[1].ARPROT <= LLC.io.mem_read_axi.ARPROT @[system.scala 403:28]
    memory.clients[1].ARQOS <= LLC.io.mem_read_axi.ARQOS @[system.scala 404:27]
    LLC.io.mem_read_axi.ARREADY <= memory.clients[1].ARREADY @[system.scala 405:31]
    memory.clients[1].WVALID <= LLC.io.mem_write_axi.WVALID @[system.scala 408:28]
    memory.clients[1].WDATA <= LLC.io.mem_write_axi.WDATA @[system.scala 409:27]
    memory.clients[1].WLAST <= LLC.io.mem_write_axi.WLAST @[system.scala 410:27]
    memory.clients[1].WSTRB <= LLC.io.mem_write_axi.WSTRB @[system.scala 411:27]
    LLC.io.mem_write_axi.WREADY <= memory.clients[1].WREADY @[system.scala 412:31]
    memory.clients[1].RREADY <= LLC.io.mem_read_axi.RREADY @[system.scala 415:28]
    LLC.io.mem_read_axi.RID <= memory.clients[1].RID @[system.scala 416:27]
    LLC.io.mem_read_axi.RDATA <= memory.clients[1].RDATA @[system.scala 417:29]
    LLC.io.mem_read_axi.RRESP <= memory.clients[1].RRESP @[system.scala 418:29]
    LLC.io.mem_read_axi.RLAST <= memory.clients[1].RLAST @[system.scala 419:29]
    LLC.io.mem_read_axi.RVALID <= memory.clients[1].RVALID @[system.scala 420:30]
    memory.clients[1].BREADY <= LLC.io.mem_write_axi.BREADY @[system.scala 424:28]
    LLC.io.mem_write_axi.BVALID <= memory.clients[1].BVALID @[system.scala 425:31]
    LLC.io.mem_write_axi.BRESP <= memory.clients[1].BRESP @[system.scala 426:30]
    LLC.io.mem_write_axi.BID <= UInt<1>("h0") @[system.scala 427:28]
    memory.clients[0].AWVALID <= UInt<1>("h0") @[system.scala 433:29]
    memory.clients[0].AWID <= UInt<1>("h0") @[system.scala 434:26]
    memory.clients[0].AWADDR <= UInt<1>("h0") @[system.scala 435:28]
    memory.clients[0].AWLEN <= UInt<3>("h7") @[system.scala 439:27]
    memory.clients[0].AWSIZE <= UInt<3>("h5") @[system.scala 440:28]
    memory.clients[0].AWBURST <= UInt<1>("h1") @[system.scala 441:29]
    memory.clients[0].AWLOCK <= UInt<1>("h0") @[system.scala 442:28]
    memory.clients[0].AWCACHE <= UInt<2>("h2") @[system.scala 443:29]
    memory.clients[0].AWPROT <= UInt<1>("h0") @[system.scala 444:28]
    memory.clients[0].AWQOS <= UInt<1>("h0") @[system.scala 445:27]
    memory.clients[0].ARVALID <= UInt<1>("h0") @[system.scala 448:29]
    memory.clients[0].ARID <= UInt<1>("h0") @[system.scala 449:26]
    memory.clients[0].ARADDR <= UInt<1>("h0") @[system.scala 450:28]
    memory.clients[0].ARLEN <= UInt<3>("h7") @[system.scala 454:27]
    memory.clients[0].ARSIZE <= UInt<3>("h5") @[system.scala 455:28]
    memory.clients[0].ARBURST <= UInt<1>("h1") @[system.scala 456:29]
    memory.clients[0].ARLOCK <= UInt<1>("h0") @[system.scala 457:28]
    memory.clients[0].ARCACHE <= UInt<2>("h2") @[system.scala 458:29]
    memory.clients[0].ARPROT <= UInt<1>("h0") @[system.scala 459:28]
    memory.clients[0].ARQOS <= UInt<1>("h0") @[system.scala 460:27]
    memory.clients[0].WVALID <= UInt<1>("h0") @[system.scala 463:28]
    memory.clients[0].WDATA <= UInt<1>("h0") @[system.scala 464:27]
    memory.clients[0].WLAST <= UInt<1>("h0") @[system.scala 465:27]
    memory.clients[0].WSTRB <= UInt<8>("hff") @[system.scala 466:27]
    memory.clients[0].RREADY <= UInt<1>("h0") @[system.scala 469:28]
    memory.clients[0].BREADY <= UInt<1>("h0") @[system.scala 472:28]
    memory.programmer.offset <= programmer.offset @[system.scala 492:21]
    memory.programmer.byte <= programmer.byte @[system.scala 492:21]
    memory.programmer.valid <= programmer.valid @[system.scala 492:21]
    memory.finishedProgramming <= finishedProgramming @[system.scala 495:30]
    prober.accessLong <= memory.externalProbe.accessLong @[system.scala 499:10]
    memory.externalProbe.offset <= prober.offset @[system.scala 499:10]
    inst peripherals of MultiUart @[system.scala 503:27]
    peripherals.clock <= clock
    peripherals.reset <= reset
    core0OutChar <= peripherals.putChar0 @[system.scala 508:16]
    core1OutChar <= peripherals.putChar1 @[system.scala 509:16]
    peripherals.client0 <= core0.peripheral @[system.scala 511:20]
    peripherals.client1 <= core1.peripheral @[system.scala 512:20]
    core0.MTIP <= peripherals.MTIP0 @[system.scala 514:14]
    core1.MTIP <= peripherals.MTIP1 @[system.scala 515:14]
    reg registersOutBuffer0 : UInt<64>[33], clock with :
      reset => (UInt<1>("h0"), registersOutBuffer0) @[system.scala 519:32]
    reg REG : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[system.scala 520:59]
    REG <= core0.robOut.commitFired @[system.scala 520:59]
    node _T = and(core0.robOut.commitFired, REG) @[system.scala 520:49]
    node _T_1 = mux(_T, core0.registersOut, registersOutBuffer0) @[system.scala 520:23]
    registersOut0 <= _T_1 @[system.scala 520:17]
    registersOut0[32] <= core0.registersOut[32] @[system.scala 521:21]
    robOut0 <= core0.robOut @[system.scala 524:11]
    reg REG_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[system.scala 525:15]
    REG_1 <= core0.allRobFiresOut @[system.scala 525:15]
    when REG_1 : @[system.scala 525:48]
      registersOutBuffer0 <= core0.registersOut @[system.scala 525:70]
    reg registersOutBuffer1 : UInt<64>[33], clock with :
      reset => (UInt<1>("h0"), registersOutBuffer1) @[system.scala 528:32]
    reg REG_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[system.scala 529:59]
    REG_2 <= core1.robOut.commitFired @[system.scala 529:59]
    node _T_2 = and(core1.robOut.commitFired, REG_2) @[system.scala 529:49]
    node _T_3 = mux(_T_2, core1.registersOut, registersOutBuffer1) @[system.scala 529:23]
    registersOut1 <= _T_3 @[system.scala 529:17]
    registersOut1[32] <= core1.registersOut[32] @[system.scala 530:21]
    robOut1 <= core1.robOut @[system.scala 533:11]
    reg REG_3 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[system.scala 534:15]
    REG_3 <= core1.allRobFiresOut @[system.scala 534:15]
    when REG_3 : @[system.scala 534:48]
      registersOutBuffer1 <= core1.registersOut @[system.scala 534:70]

